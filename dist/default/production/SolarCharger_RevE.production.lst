

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Sep 09 19:30:40 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1,group=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	text251,global,reloc=2,class=CODE,delta=1
   275                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   276                           	psect	text252,global,reloc=2,class=CODE,delta=1
   277                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   278                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   279                           	dabs	1,0x600,512,_msd_buffer
   280                           	dabs	1,0xD00,48,_BDT
   281                           	dabs	1,0xD40,31,_msd_cbw
   282                           	dabs	1,0xD80,13,_msd_csw
   283                           	dabs	1,0xD38,8,_CtrlTrfData
   284                           	dabs	1,0xD30,8,_SetupPkt
   285  0000                     
   286                           ; Version 1.42
   287                           ; Generated 13/04/2017 GMT
   288                           ; 
   289                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   290                           ; All rights reserved.
   291                           ; 
   292                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   293                           ; 
   294                           ; Redistribution and use in source and binary forms, with or without modification, are
   295                           ; permitted provided that the following conditions are met:
   296                           ; 
   297                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   298                           ;        conditions and the following disclaimer.
   299                           ; 
   300                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   301                           ;        of conditions and the following disclaimer in the documentation and/or other
   302                           ;        materials provided with the distribution.
   303                           ; 
   304                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   305                           ;        software without specific prior written permission.
   306                           ; 
   307                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   308                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   309                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   310                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   311                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   312                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   313                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   314                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   315                           ; 
   316                           ; 
   317                           ; Code-generator required, PIC18F47J53 Definitions
   318                           ; 
   319                           ; SFR Addresses
   320  0000                     
   321                           	psect	idataBANK2
   322  01374C                     __pidataBANK2:
   323                           	opt stack 0
   324                           
   325                           ;initializer for _LUN
   326  01374C  62                 	db	low _ExternalFlash_MediaInitialize
   327  01374D  3E                 	db	high _ExternalFlash_MediaInitialize
   328  01374E  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   329  01374F  2C                 	db	low _ExternalFlash_CapacityRead
   330  013750  41                 	db	high _ExternalFlash_CapacityRead
   331  013751  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   332  013752  7C                 	db	low _ExternalFlash_SectorSizeRead
   333  013753  42                 	db	high _ExternalFlash_SectorSizeRead
   334  013754  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   335  013755  B0                 	db	low _ExternalFlash_MediaDetect
   336  013756  42                 	db	high _ExternalFlash_MediaDetect
   337  013757  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   338  013758  72                 	db	low _ExternalFlash_SectorRead
   339  013759  38                 	db	high _ExternalFlash_SectorRead
   340  01375A  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   341  01375B  EC                 	db	low _ExternalFlash_WriteProtectStateGet
   342  01375C  42                 	db	high _ExternalFlash_WriteProtectStateGet
   343  01375D  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   344  01375E  3A                 	db	low _ExternalFlash_SectorWrite
   345  01375F  38                 	db	high _ExternalFlash_SectorWrite
   346  013760  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   347  013761  00                 	db	0
   348  013762  00                 	db	0
   349  013763  00                 	db	0
   350  013764  00                 	db	0
   351  013765  00                 	db	0
   352  013766  00                 	db	0
   353  013767  00                 	db	0
   354  013768  00                 	db	0
   355                           
   356                           ;initializer for system_init@F8573
   357  013769  54                 	db	84
   358  01376A  45                 	db	69
   359  01376B  53                 	db	83
   360  01376C  54                 	db	84
   361  01376D  20                 	db	32
   362  01376E  20                 	db	32
   363  01376F  20                 	db	32
   364  013770  20                 	db	32
   365  013771  00                 	db	0
   366                           
   367                           ;initializer for system_init@F8579
   368  013772  54                 	db	84
   369  013773  58                 	db	88
   370  013774  54                 	db	84
   371  013775  00                 	db	0
   372                           
   373                           ;initializer for system_init@F8575
   374  013776  54                 	db	84
   375  013777  58                 	db	88
   376  013778  54                 	db	84
   377  013779  00                 	db	0
   378                           
   379                           ;initializer for _battery_voltage_maximum
   380  01377A  34BC               	dw	13500
   381                           
   382                           ;initializer for _filename
   383  01377C  4C                 	db	76
   384  01377D  4F                 	db	79
   385  01377E  47                 	db	71
   386  01377F  20                 	db	32
   387  013780  20                 	db	32
   388  013781  20                 	db	32
   389  013782  20                 	db	32
   390  013783  20                 	db	32
   391  013784  00                 	db	0
   392                           
   393                           ;initializer for _extension
   394  013785  54                 	db	84
   395  013786  58                 	db	88
   396  013787  54                 	db	84
   397  013788  00                 	db	0
   398                           
   399                           	psect	idataBANK3
   400  013FD4                     __pidataBANK3:
   401                           	opt stack 0
   402                           
   403                           ;initializer for i2c_display_init@F8357
   404  013FD4  3A                 	db	58
   405  013FD5  1E                 	db	30
   406  013FD6  39                 	db	57
   407  013FD7  0C                 	db	12
   408  013FD8  74                 	db	116
   409  013FD9  5C                 	db	92
   410  013FDA  6D                 	db	109
   411  013FDB  0C                 	db	12
   412  013FDC  01                 	db	1
   413                           
   414                           ;initializer for i2c_display_send_init_sequence@F8354
   415  013FDD  3A                 	db	58
   416  013FDE  1E                 	db	30
   417  013FDF  39                 	db	57
   418  013FE0  0C                 	db	12
   419  013FE1  74                 	db	116
   420  013FE2  5C                 	db	92
   421  013FE3  6D                 	db	109
   422  013FE4  0C                 	db	12
   423  013FE5  01                 	db	1
   424                           
   425                           ;initializer for system_init@F8577
   426  013FE6  4E                 	db	78
   427  013FE7  45                 	db	69
   428  013FE8  57                 	db	87
   429  013FE9  46                 	db	70
   430  013FEA  49                 	db	73
   431  013FEB  4C                 	db	76
   432  013FEC  45                 	db	69
   433  013FED  20                 	db	32
   434  013FEE  00                 	db	0
   435                           
   436                           	psect	idataBANK4
   437  0129DA                     __pidataBANK4:
   438                           	opt stack 0
   439                           
   440                           ;initializer for system_init@F8581
   441  0129DA  4A                 	db	74
   442  0129DB  75                 	db	117
   443  0129DC  73                 	db	115
   444  0129DD  74                 	db	116
   445  0129DE  20                 	db	32
   446  0129DF  61                 	db	97
   447  0129E0  70                 	db	112
   448  0129E1  70                 	db	112
   449  0129E2  65                 	db	101
   450  0129E3  6E                 	db	110
   451  0129E4  64                 	db	100
   452  0129E5  65                 	db	101
   453  0129E6  64                 	db	100
   454  0129E7  20                 	db	32
   455  0129E8  74                 	db	116
   456  0129E9  68                 	db	104
   457  0129EA  69                 	db	105
   458  0129EB  73                 	db	115
   459  0129EC  20                 	db	32
   460  0129ED  74                 	db	116
   461  0129EE  65                 	db	101
   462  0129EF  78                 	db	120
   463  0129F0  74                 	db	116
   464  0129F1  21                 	db	33
   465  0129F2  20                 	db	32
   466  0129F3  4E                 	db	78
   467  0129F4  6F                 	db	111
   468  0129F5  77                 	db	119
   469  0129F6  20                 	db	32
   470  0129F7  74                 	db	116
   471  0129F8  68                 	db	104
   472  0129F9  69                 	db	105
   473  0129FA  73                 	db	115
   474  0129FB  20                 	db	32
   475  0129FC  69                 	db	105
   476  0129FD  73                 	db	115
   477  0129FE  20                 	db	32
   478  0129FF  73                 	db	115
   479  012A00  75                 	db	117
   480  012A01  70                 	db	112
   481  012A02  65                 	db	101
   482  012A03  72                 	db	114
   483  012A04  2D                 	db	45
   484  012A05  6C                 	db	108
   485  012A06  6F                 	db	111
   486  012A07  6E                 	db	110
   487  012A08  67                 	db	103
   488  012A09  2E                 	db	46
   489  012A0A  20                 	db	32
   490  012A0B  69                 	db	105
   491  012A0C  74                 	db	116
   492  012A0D  20                 	db	32
   493  012A0E  67                 	db	103
   494  012A0F  6F                 	db	111
   495  012A10  65                 	db	101
   496  012A11  73                 	db	115
   497  012A12  20                 	db	32
   498  012A13  6F                 	db	111
   499  012A14  6E                 	db	110
   500  012A15  20                 	db	32
   501  012A16  61                 	db	97
   502  012A17  6E                 	db	110
   503  012A18  64                 	db	100
   504  012A19  20                 	db	32
   505  012A1A  6F                 	db	111
   506  012A1B  6E                 	db	110
   507  012A1C  20                 	db	32
   508  012A1D  61                 	db	97
   509  012A1E  6E                 	db	110
   510  012A1F  64                 	db	100
   511  012A20  20                 	db	32
   512  012A21  6F                 	db	111
   513  012A22  6E                 	db	110
   514  012A23  20                 	db	32
   515  012A24  2E                 	db	46
   516  012A25  2E                 	db	46
   517  012A26  2E                 	db	46
   518  012A27  20                 	db	32
   519  012A28  62                 	db	98
   520  012A29  75                 	db	117
   521  012A2A  74                 	db	116
   522  012A2B  20                 	db	32
   523  012A2C  66                 	db	102
   524  012A2D  69                 	db	105
   525  012A2E  6E                 	db	110
   526  012A2F  61                 	db	97
   527  012A30  6C                 	db	108
   528  012A31  6C                 	db	108
   529  012A32  79                 	db	121
   530  012A33  20                 	db	32
   531  012A34  69                 	db	105
   532  012A35  74                 	db	116
   533  012A36  20                 	db	32
   534  012A37  65                 	db	101
   535  012A38  6E                 	db	110
   536  012A39  64                 	db	100
   537  012A3A  73                 	db	115
   538  012A3B  20                 	db	32
   539  012A3C  48                 	db	72
   540  012A3D  45                 	db	69
   541  012A3E  52                 	db	82
   542  012A3F  45                 	db	69
   543  012A40  2E                 	db	46
   544  012A41  00                 	db	0
   545                           
   546                           	psect	mediumconst
   547  00908A                     __pmediumconst:
   548                           	opt stack 0
   549  00908A  00                 	db	0
   550  00908B                     __display_charger@F8746:
   551                           	opt stack 0
   552  00908B  43                 	db	67
   553  00908C  68                 	db	104
   554  00908D  61                 	db	97
   555  00908E  72                 	db	114
   556  00908F  67                 	db	103
   557  009090  65                 	db	101
   558  009091  72                 	db	114
   559  009092  20                 	db	32
   560  009093  41                 	db	65
   561  009094  73                 	db	115
   562  009095  79                 	db	121
   563  009096  6E                 	db	110
   564  009097  63                 	db	99
   565  009098  68                 	db	104
   566  009099  72                 	db	114
   567  00909A  6F                 	db	111
   568  00909B  6E                 	db	110
   569  00909C  6F                 	db	111
   570  00909D  75                 	db	117
   571  00909E  73                 	db	115
   572  00909F  00                 	db	0
   573  0090A0                     __end_of__display_charger@F8746:
   574                           	opt stack 0
   575  0090A0                     __display_charger@F8732:
   576                           	opt stack 0
   577  0090A0  4D                 	db	77
   578  0090A1  50                 	db	80
   579  0090A2  50                 	db	80
   580  0090A3  54                 	db	84
   581  0090A4  20                 	db	32
   582  0090A5  43                 	db	67
   583  0090A6  68                 	db	104
   584  0090A7  61                 	db	97
   585  0090A8  72                 	db	114
   586  0090A9  67                 	db	103
   587  0090AA  65                 	db	101
   588  0090AB  72                 	db	114
   589  0090AC  20                 	db	32
   590  0090AD  44                 	db	68
   591  0090AE  65                 	db	101
   592  0090AF  74                 	db	116
   593  0090B0  61                 	db	97
   594  0090B1  69                 	db	105
   595  0090B2  6C                 	db	108
   596  0090B3  73                 	db	115
   597  0090B4  00                 	db	0
   598  0090B5                     __end_of__display_charger@F8732:
   599                           	opt stack 0
   600  0090B5                     __display_outputs@F8728:
   601                           	opt stack 0
   602  0090B5  20                 	db	32
   603  0090B6  20                 	db	32
   604  0090B7  4F                 	db	79
   605  0090B8  75                 	db	117
   606  0090B9  74                 	db	116
   607  0090BA  33                 	db	51
   608  0090BB  20                 	db	32
   609  0090BC  6F                 	db	111
   610  0090BD  66                 	db	102
   611  0090BE  66                 	db	102
   612  0090BF  20                 	db	32
   613  0090C0  20                 	db	32
   614  0090C1  4F                 	db	79
   615  0090C2  75                 	db	117
   616  0090C3  74                 	db	116
   617  0090C4  34                 	db	52
   618  0090C5  20                 	db	32
   619  0090C6  6F                 	db	111
   620  0090C7  66                 	db	102
   621  0090C8  66                 	db	102
   622  0090C9  00                 	db	0
   623  0090CA                     __end_of__display_outputs@F8728:
   624                           	opt stack 0
   625  0090CA                     __display_outputs@F8726:
   626                           	opt stack 0
   627  0090CA  20                 	db	32
   628  0090CB  20                 	db	32
   629  0090CC  4F                 	db	79
   630  0090CD  75                 	db	117
   631  0090CE  74                 	db	116
   632  0090CF  31                 	db	49
   633  0090D0  20                 	db	32
   634  0090D1  6F                 	db	111
   635  0090D2  66                 	db	102
   636  0090D3  66                 	db	102
   637  0090D4  20                 	db	32
   638  0090D5  20                 	db	32
   639  0090D6  4F                 	db	79
   640  0090D7  75                 	db	117
   641  0090D8  74                 	db	116
   642  0090D9  32                 	db	50
   643  0090DA  20                 	db	32
   644  0090DB  6F                 	db	111
   645  0090DC  66                 	db	102
   646  0090DD  66                 	db	102
   647  0090DE  00                 	db	0
   648  0090DF                     __end_of__display_outputs@F8726:
   649                           	opt stack 0
   650  0090DF                     __display_temperature@F8773:
   651                           	opt stack 0
   652  0090DF  54                 	db	84
   653  0090E0  65                 	db	101
   654  0090E1  6D                 	db	109
   655  0090E2  70                 	db	112
   656  0090E3  65                 	db	101
   657  0090E4  72                 	db	114
   658  0090E5  61                 	db	97
   659  0090E6  74                 	db	116
   660  0090E7  75                 	db	117
   661  0090E8  72                 	db	114
   662  0090E9  65                 	db	101
   663  0090EA  20                 	db	32
   664  0090EB  4D                 	db	77
   665  0090EC  6F                 	db	111
   666  0090ED  6E                 	db	110
   667  0090EE  69                 	db	105
   668  0090EF  74                 	db	116
   669  0090F0  6F                 	db	111
   670  0090F1  72                 	db	114
   671  0090F2  00                 	db	0
   672  0090F3                     __end_of__display_temperature@F8773:
   673                           	opt stack 0
   674  0090F3                     __display_charger@F8748:
   675                           	opt stack 0
   676  0090F3  43                 	db	67
   677  0090F4  68                 	db	104
   678  0090F5  61                 	db	97
   679  0090F6  72                 	db	114
   680  0090F7  67                 	db	103
   681  0090F8  65                 	db	101
   682  0090F9  72                 	db	114
   683  0090FA  20                 	db	32
   684  0090FB  53                 	db	83
   685  0090FC  79                 	db	121
   686  0090FD  6E                 	db	110
   687  0090FE  63                 	db	99
   688  0090FF  68                 	db	104
   689  009100  72                 	db	114
   690  009101  6F                 	db	111
   691  009102  6E                 	db	110
   692  009103  6F                 	db	111
   693  009104  75                 	db	117
   694  009105  73                 	db	115
   695  009106  00                 	db	0
   696  009107                     __end_of__display_charger@F8748:
   697                           	opt stack 0
   698  009107                     __display_usb@F8712:
   699                           	opt stack 0
   700  009107  55                 	db	85
   701  009108  53                 	db	83
   702  009109  42                 	db	66
   703  00910A  20                 	db	32
   704  00910B  43                 	db	67
   705  00910C  68                 	db	104
   706  00910D  61                 	db	97
   707  00910E  72                 	db	114
   708  00910F  67                 	db	103
   709  009110  65                 	db	101
   710  009111  72                 	db	114
   711  009112  20                 	db	32
   712  009113  4F                 	db	79
   713  009114  75                 	db	117
   714  009115  74                 	db	116
   715  009116  70                 	db	112
   716  009117  75                 	db	117
   717  009118  74                 	db	116
   718  009119  73                 	db	115
   719  00911A  00                 	db	0
   720  00911B                     __end_of__display_usb@F8712:
   721                           	opt stack 0
   722  00911B                     __display_time@F8699:
   723                           	opt stack 0
   724  00911B  2D                 	db	45
   725  00911C  3E                 	db	62
   726  00911D  50                 	db	80
   727  00911E  72                 	db	114
   728  00911F  65                 	db	101
   729  009120  73                 	db	115
   730  009121  73                 	db	115
   731  009122  20                 	db	32
   732  009123  66                 	db	102
   733  009124  6F                 	db	111
   734  009125  72                 	db	114
   735  009126  20                 	db	32
   736  009127  73                 	db	115
   737  009128  65                 	db	101
   738  009129  63                 	db	99
   739  00912A  6F                 	db	111
   740  00912B  6E                 	db	110
   741  00912C  64                 	db	100
   742  00912D  73                 	db	115
   743  00912E  00                 	db	0
   744  00912F                     __end_of__display_time@F8699:
   745                           	opt stack 0
   746  00912F                     __display_time@F8697:
   747                           	opt stack 0
   748  00912F  2D                 	db	45
   749  009130  3E                 	db	62
   750  009131  50                 	db	80
   751  009132  72                 	db	114
   752  009133  65                 	db	101
   753  009134  73                 	db	115
   754  009135  73                 	db	115
   755  009136  20                 	db	32
   756  009137  66                 	db	102
   757  009138  6F                 	db	111
   758  009139  72                 	db	114
   759  00913A  20                 	db	32
   760  00913B  6D                 	db	109
   761  00913C  69                 	db	105
   762  00913D  6E                 	db	110
   763  00913E  75                 	db	117
   764  00913F  74                 	db	116
   765  009140  65                 	db	101
   766  009141  73                 	db	115
   767  009142  00                 	db	0
   768  009143                     __end_of__display_time@F8697:
   769                           	opt stack 0
   770  009143                     __display_time@F8689:
   771                           	opt stack 0
   772  009143  2D                 	db	45
   773  009144  3E                 	db	62
   774  009145  50                 	db	80
   775  009146  72                 	db	114
   776  009147  65                 	db	101
   777  009148  73                 	db	115
   778  009149  73                 	db	115
   779  00914A  20                 	db	32
   780  00914B  74                 	db	116
   781  00914C  6F                 	db	111
   782  00914D  20                 	db	32
   783  00914E  73                 	db	115
   784  00914F  65                 	db	101
   785  009150  74                 	db	116
   786  009151  20                 	db	32
   787  009152  74                 	db	116
   788  009153  69                 	db	105
   789  009154  6D                 	db	109
   790  009155  65                 	db	101
   791  009156  00                 	db	0
   792  009157                     __end_of__display_time@F8689:
   793                           	opt stack 0
   794  009157                     __display_efficiency@F8755:
   795                           	opt stack 0
   796  009157  50                 	db	80
   797  009158  61                 	db	97
   798  009159  6E                 	db	110
   799  00915A  65                 	db	101
   800  00915B  6C                 	db	108
   801  00915C  3A                 	db	58
   802  00915D  20                 	db	32
   803  00915E  20                 	db	32
   804  00915F  20                 	db	32
   805  009160  20                 	db	32
   806  009161  42                 	db	66
   807  009162  61                 	db	97
   808  009163  74                 	db	116
   809  009164  74                 	db	116
   810  009165  65                 	db	101
   811  009166  72                 	db	114
   812  009167  79                 	db	121
   813  009168  3A                 	db	58
   814  009169  00                 	db	0
   815  00916A                     __end_of__display_efficiency@F8755:
   816                           	opt stack 0
   817  00916A                     __display_efficiency@F8753:
   818                           	opt stack 0
   819  00916A  43                 	db	67
   820  00916B  68                 	db	104
   821  00916C  61                 	db	97
   822  00916D  72                 	db	114
   823  00916E  67                 	db	103
   824  00916F  65                 	db	101
   825  009170  72                 	db	114
   826  009171  20                 	db	32
   827  009172  45                 	db	69
   828  009173  66                 	db	102
   829  009174  66                 	db	102
   830  009175  69                 	db	105
   831  009176  63                 	db	99
   832  009177  69                 	db	105
   833  009178  65                 	db	101
   834  009179  6E                 	db	110
   835  00917A  63                 	db	99
   836  00917B  79                 	db	121
   837  00917C  00                 	db	0
   838  00917D                     __end_of__display_efficiency@F8753:
   839                           	opt stack 0
   840  00917D                     __display_charger@F8736:
   841                           	opt stack 0
   842  00917D  43                 	db	67
   843  00917E  68                 	db	104
   844  00917F  61                 	db	97
   845  009180  72                 	db	114
   846  009181  67                 	db	103
   847  009182  65                 	db	101
   848  009183  72                 	db	114
   849  009184  20                 	db	32
   850  009185  73                 	db	115
   851  009186  75                 	db	117
   852  009187  70                 	db	112
   853  009188  70                 	db	112
   854  009189  6C                 	db	108
   855  00918A  79                 	db	121
   856  00918B  20                 	db	32
   857  00918C  6F                 	db	111
   858  00918D  66                 	db	102
   859  00918E  66                 	db	102
   860  00918F  00                 	db	0
   861  009190                     __end_of__display_charger@F8736:
   862                           	opt stack 0
   863  009190                     __display_charger@F8734:
   864                           	opt stack 0
   865  009190  43                 	db	67
   866  009191  68                 	db	104
   867  009192  61                 	db	97
   868  009193  72                 	db	114
   869  009194  67                 	db	103
   870  009195  65                 	db	101
   871  009196  72                 	db	114
   872  009197  20                 	db	32
   873  009198  73                 	db	115
   874  009199  75                 	db	117
   875  00919A  70                 	db	112
   876  00919B  70                 	db	112
   877  00919C  6C                 	db	108
   878  00919D  79                 	db	121
   879  00919E  20                 	db	32
   880  00919F  6F                 	db	111
   881  0091A0  6E                 	db	110
   882  0091A1  00                 	db	0
   883  0091A2                     __end_of__display_charger@F8734:
   884                           	opt stack 0
   885  0091A2                     __display_time@F8695:
   886                           	opt stack 0
   887  0091A2  2D                 	db	45
   888  0091A3  3E                 	db	62
   889  0091A4  50                 	db	80
   890  0091A5  72                 	db	114
   891  0091A6  65                 	db	101
   892  0091A7  73                 	db	115
   893  0091A8  73                 	db	115
   894  0091A9  20                 	db	32
   895  0091AA  66                 	db	102
   896  0091AB  6F                 	db	111
   897  0091AC  72                 	db	114
   898  0091AD  20                 	db	32
   899  0091AE  68                 	db	104
   900  0091AF  6F                 	db	111
   901  0091B0  75                 	db	117
   902  0091B1  72                 	db	114
   903  0091B2  73                 	db	115
   904  0091B3  00                 	db	0
   905  0091B4                     __end_of__display_time@F8695:
   906                           	opt stack 0
   907  0091B4                     __display_time@F8691:
   908                           	opt stack 0
   909  0091B4  2D                 	db	45
   910  0091B5  3E                 	db	62
   911  0091B6  50                 	db	80
   912  0091B7  72                 	db	114
   913  0091B8  65                 	db	101
   914  0091B9  73                 	db	115
   915  0091BA  73                 	db	115
   916  0091BB  20                 	db	32
   917  0091BC  66                 	db	102
   918  0091BD  6F                 	db	111
   919  0091BE  72                 	db	114
   920  0091BF  20                 	db	32
   921  0091C0  6D                 	db	109
   922  0091C1  6F                 	db	111
   923  0091C2  6E                 	db	110
   924  0091C3  74                 	db	116
   925  0091C4  68                 	db	104
   926  0091C5  00                 	db	0
   927  0091C6                     __end_of__display_time@F8691:
   928                           	opt stack 0
   929  0091C6                     __display_inout@F8667:
   930                           	opt stack 0
   931  0091C6  20                 	db	32
   932  0091C7  20                 	db	32
   933  0091C8  20                 	db	32
   934  0091C9  49                 	db	73
   935  0091CA  6E                 	db	110
   936  0091CB  70                 	db	112
   937  0091CC  75                 	db	117
   938  0091CD  74                 	db	116
   939  0091CE  20                 	db	32
   940  0091CF  20                 	db	32
   941  0091D0  20                 	db	32
   942  0091D1  4F                 	db	79
   943  0091D2  75                 	db	117
   944  0091D3  74                 	db	116
   945  0091D4  70                 	db	112
   946  0091D5  75                 	db	117
   947  0091D6  74                 	db	116
   948  0091D7  00                 	db	0
   949  0091D8                     __end_of__display_inout@F8667:
   950                           	opt stack 0
   951  0091D8                     __display_inout@F8665:
   952                           	opt stack 0
   953  0091D8  56                 	db	86
   954  0091D9  6F                 	db	111
   955  0091DA  6C                 	db	108
   956  0091DB  74                 	db	116
   957  0091DC  61                 	db	97
   958  0091DD  67                 	db	103
   959  0091DE  65                 	db	101
   960  0091DF  20                 	db	32
   961  0091E0  26                 	db	38
   962  0091E1  20                 	db	32
   963  0091E2  43                 	db	67
   964  0091E3  75                 	db	117
   965  0091E4  72                 	db	114
   966  0091E5  72                 	db	114
   967  0091E6  65                 	db	101
   968  0091E7  6E                 	db	110
   969  0091E8  74                 	db	116
   970  0091E9  00                 	db	0
   971  0091EA                     __end_of__display_inout@F8665:
   972                           	opt stack 0
   973  0091EA                     __display_usb@F8718:
   974                           	opt stack 0
   975  0091EA  55                 	db	85
   976  0091EB  53                 	db	83
   977  0091EC  42                 	db	66
   978  0091ED  20                 	db	32
   979  0091EE  63                 	db	99
   980  0091EF  68                 	db	104
   981  0091F0  61                 	db	97
   982  0091F1  72                 	db	114
   983  0091F2  67                 	db	103
   984  0091F3  69                 	db	105
   985  0091F4  6E                 	db	110
   986  0091F5  67                 	db	103
   987  0091F6  20                 	db	32
   988  0091F7  6F                 	db	111
   989  0091F8  66                 	db	102
   990  0091F9  66                 	db	102
   991  0091FA  00                 	db	0
   992  0091FB                     __end_of__display_usb@F8718:
   993                           	opt stack 0
   994  0091FB                     __display_charger@F8744:
   995                           	opt stack 0
   996  0091FB  43                 	db	67
   997  0091FC  68                 	db	104
   998  0091FD  61                 	db	97
   999  0091FE  72                 	db	114
  1000  0091FF  67                 	db	103
  1001  009200  65                 	db	101
  1002  009201  72                 	db	114
  1003  009202  20                 	db	32
  1004  009203  53                 	db	83
  1005  009204  74                 	db	116
  1006  009205  61                 	db	97
  1007  009206  72                 	db	114
  1008  009207  74                 	db	116
  1009  009208  75                 	db	117
  1010  009209  70                 	db	112
  1011  00920A  00                 	db	0
  1012  00920B                     __end_of__display_charger@F8744:
  1013                           	opt stack 0
  1014  00920B                     __display_outputs@F8724:
  1015                           	opt stack 0
  1016  00920B  42                 	db	66
  1017  00920C  61                 	db	97
  1018  00920D  74                 	db	116
  1019  00920E  74                 	db	116
  1020  00920F  65                 	db	101
  1021  009210  72                 	db	114
  1022  009211  79                 	db	121
  1023  009212  20                 	db	32
  1024  009213  74                 	db	116
  1025  009214  6F                 	db	111
  1026  009215  6F                 	db	111
  1027  009216  20                 	db	32
  1028  009217  6C                 	db	108
  1029  009218  6F                 	db	111
  1030  009219  77                 	db	119
  1031  00921A  00                 	db	0
  1032  00921B                     __end_of__display_outputs@F8724:
  1033                           	opt stack 0
  1034  00921B                     __display_usb@F8716:
  1035                           	opt stack 0
  1036  00921B  55                 	db	85
  1037  00921C  53                 	db	83
  1038  00921D  42                 	db	66
  1039  00921E  20                 	db	32
  1040  00921F  63                 	db	99
  1041  009220  68                 	db	104
  1042  009221  61                 	db	97
  1043  009222  72                 	db	114
  1044  009223  67                 	db	103
  1045  009224  69                 	db	105
  1046  009225  6E                 	db	110
  1047  009226  67                 	db	103
  1048  009227  20                 	db	32
  1049  009228  6F                 	db	111
  1050  009229  6E                 	db	110
  1051  00922A  00                 	db	0
  1052  00922B                     __end_of__display_usb@F8716:
  1053                           	opt stack 0
  1054  00922B                     __display_usb@F8714:
  1055                           	opt stack 0
  1056  00922B  42                 	db	66
  1057  00922C  61                 	db	97
  1058  00922D  74                 	db	116
  1059  00922E  74                 	db	116
  1060  00922F  65                 	db	101
  1061  009230  72                 	db	114
  1062  009231  79                 	db	121
  1063  009232  20                 	db	32
  1064  009233  74                 	db	116
  1065  009234  6F                 	db	111
  1066  009235  6F                 	db	111
  1067  009236  20                 	db	32
  1068  009237  6C                 	db	108
  1069  009238  6F                 	db	111
  1070  009239  77                 	db	119
  1071  00923A  00                 	db	0
  1072  00923B                     __end_of__display_usb@F8714:
  1073                           	opt stack 0
  1074  00923B                     __display_time@F8701:
  1075                           	opt stack 0
  1076  00923B  2D                 	db	45
  1077  00923C  3E                 	db	62
  1078  00923D  50                 	db	80
  1079  00923E  72                 	db	114
  1080  00923F  65                 	db	101
  1081  009240  73                 	db	115
  1082  009241  73                 	db	115
  1083  009242  20                 	db	32
  1084  009243  74                 	db	116
  1085  009244  6F                 	db	111
  1086  009245  20                 	db	32
  1087  009246  73                 	db	115
  1088  009247  61                 	db	97
  1089  009248  76                 	db	118
  1090  009249  65                 	db	101
  1091  00924A  00                 	db	0
  1092  00924B                     __end_of__display_time@F8701:
  1093                           	opt stack 0
  1094  00924B                     __display_time@F8693:
  1095                           	opt stack 0
  1096  00924B  2D                 	db	45
  1097  00924C  3E                 	db	62
  1098  00924D  50                 	db	80
  1099  00924E  72                 	db	114
  1100  00924F  65                 	db	101
  1101  009250  73                 	db	115
  1102  009251  73                 	db	115
  1103  009252  20                 	db	32
  1104  009253  66                 	db	102
  1105  009254  6F                 	db	111
  1106  009255  72                 	db	114
  1107  009256  20                 	db	32
  1108  009257  64                 	db	100
  1109  009258  61                 	db	97
  1110  009259  79                 	db	121
  1111  00925A  00                 	db	0
  1112  00925B                     __end_of__display_time@F8693:
  1113                           	opt stack 0
  1114  00925B                     __display_efficiency@F8757:
  1115                           	opt stack 0
  1116  00925B  45                 	db	69
  1117  00925C  3A                 	db	58
  1118  00925D  20                 	db	32
  1119  00925E  20                 	db	32
  1120  00925F  20                 	db	32
  1121  009260  20                 	db	32
  1122  009261  20                 	db	32
  1123  009262  20                 	db	32
  1124  009263  20                 	db	32
  1125  009264  20                 	db	32
  1126  009265  20                 	db	32
  1127  009266  4C                 	db	76
  1128  009267  3A                 	db	58
  1129  009268  00                 	db	0
  1130  009269                     __end_of__display_efficiency@F8757:
  1131                           	opt stack 0
  1132  009269                     __display_outputs@F8722:
  1133                           	opt stack 0
  1134  009269  50                 	db	80
  1135  00926A  6F                 	db	111
  1136  00926B  77                 	db	119
  1137  00926C  65                 	db	101
  1138  00926D  72                 	db	114
  1139  00926E  20                 	db	32
  1140  00926F  4F                 	db	79
  1141  009270  75                 	db	117
  1142  009271  74                 	db	116
  1143  009272  70                 	db	112
  1144  009273  75                 	db	117
  1145  009274  74                 	db	116
  1146  009275  73                 	db	115
  1147  009276  00                 	db	0
  1148  009277                     __end_of__display_outputs@F8722:
  1149                           	opt stack 0
  1150  009277                     __display_time@F8675:
  1151                           	opt stack 0
  1152  009277  54                 	db	84
  1153  009278  69                 	db	105
  1154  009279  6D                 	db	109
  1155  00927A  65                 	db	101
  1156  00927B  20                 	db	32
  1157  00927C  61                 	db	97
  1158  00927D  6E                 	db	110
  1159  00927E  64                 	db	100
  1160  00927F  20                 	db	32
  1161  009280  44                 	db	68
  1162  009281  61                 	db	97
  1163  009282  74                 	db	116
  1164  009283  65                 	db	101
  1165  009284  00                 	db	0
  1166  009285                     __end_of__display_time@F8675:
  1167                           	opt stack 0
  1168  009285                     __display_inout@F8671:
  1169                           	opt stack 0
  1170  009285  41                 	db	65
  1171  009286  3A                 	db	58
  1172  009287  20                 	db	32
  1173  009288  2D                 	db	45
  1174  009289  2D                 	db	45
  1175  00928A  20                 	db	32
  1176  00928B  20                 	db	32
  1177  00928C  20                 	db	32
  1178  00928D  20                 	db	32
  1179  00928E  20                 	db	32
  1180  00928F  20                 	db	32
  1181  009290  2D                 	db	45
  1182  009291  2D                 	db	45
  1183  009292  00                 	db	0
  1184  009293                     __end_of__display_inout@F8671:
  1185                           	opt stack 0
  1186  009293                     __display_temperature@F8779:
  1187                           	opt stack 0
  1188  009293  45                 	db	69
  1189  009294  78                 	db	120
  1190  009295  74                 	db	116
  1191  009296  65                 	db	101
  1192  009297  72                 	db	114
  1193  009298  6E                 	db	110
  1194  009299  61                 	db	97
  1195  00929A  6C                 	db	108
  1196  00929B  20                 	db	32
  1197  00929C  32                 	db	50
  1198  00929D  3A                 	db	58
  1199  00929E  00                 	db	0
  1200  00929F                     __end_of__display_temperature@F8779:
  1201                           	opt stack 0
  1202  00929F                     __display_temperature@F8777:
  1203                           	opt stack 0
  1204  00929F  45                 	db	69
  1205  0092A0  78                 	db	120
  1206  0092A1  74                 	db	116
  1207  0092A2  65                 	db	101
  1208  0092A3  72                 	db	114
  1209  0092A4  6E                 	db	110
  1210  0092A5  61                 	db	97
  1211  0092A6  6C                 	db	108
  1212  0092A7  20                 	db	32
  1213  0092A8  31                 	db	49
  1214  0092A9  3A                 	db	58
  1215  0092AA  00                 	db	0
  1216  0092AB                     __end_of__display_temperature@F8777:
  1217                           	opt stack 0
  1218  0092AB                     __display_charger@F8742:
  1219                           	opt stack 0
  1220  0092AB  43                 	db	67
  1221  0092AC  68                 	db	104
  1222  0092AD  61                 	db	97
  1223  0092AE  72                 	db	114
  1224  0092AF  67                 	db	103
  1225  0092B0  65                 	db	101
  1226  0092B1  72                 	db	114
  1227  0092B2  20                 	db	32
  1228  0092B3  6F                 	db	111
  1229  0092B4  66                 	db	102
  1230  0092B5  66                 	db	102
  1231  0092B6  00                 	db	0
  1232  0092B7                     __end_of__display_charger@F8742:
  1233                           	opt stack 0
  1234  0092B7                     __display_time@F8687:
  1235                           	opt stack 0
  1236  0092B7  53                 	db	83
  1237  0092B8  65                 	db	101
  1238  0092B9  74                 	db	116
  1239  0092BA  20                 	db	32
  1240  0092BB  73                 	db	115
  1241  0092BC  65                 	db	101
  1242  0092BD  63                 	db	99
  1243  0092BE  6F                 	db	111
  1244  0092BF  6E                 	db	110
  1245  0092C0  64                 	db	100
  1246  0092C1  73                 	db	115
  1247  0092C2  00                 	db	0
  1248  0092C3                     __end_of__display_time@F8687:
  1249                           	opt stack 0
  1250  0092C3                     __display_time@F8685:
  1251                           	opt stack 0
  1252  0092C3  53                 	db	83
  1253  0092C4  65                 	db	101
  1254  0092C5  74                 	db	116
  1255  0092C6  20                 	db	32
  1256  0092C7  6D                 	db	109
  1257  0092C8  69                 	db	105
  1258  0092C9  6E                 	db	110
  1259  0092CA  75                 	db	117
  1260  0092CB  74                 	db	116
  1261  0092CC  65                 	db	101
  1262  0092CD  73                 	db	115
  1263  0092CE  00                 	db	0
  1264  0092CF                     __end_of__display_time@F8685:
  1265                           	opt stack 0
  1266  0092CF                     __display_temperature@F8775:
  1267                           	opt stack 0
  1268  0092CF  4F                 	db	79
  1269  0092D0  6E                 	db	110
  1270  0092D1  2D                 	db	45
  1271  0092D2  62                 	db	98
  1272  0092D3  6F                 	db	111
  1273  0092D4  61                 	db	97
  1274  0092D5  72                 	db	114
  1275  0092D6  64                 	db	100
  1276  0092D7  3A                 	db	58
  1277  0092D8  20                 	db	32
  1278  0092D9  00                 	db	0
  1279  0092DA                     __end_of__display_temperature@F8775:
  1280                           	opt stack 0
  1281  0092DA                     __display_time@F8683:
  1282                           	opt stack 0
  1283  0092DA  53                 	db	83
  1284  0092DB  65                 	db	101
  1285  0092DC  74                 	db	116
  1286  0092DD  20                 	db	32
  1287  0092DE  68                 	db	104
  1288  0092DF  6F                 	db	111
  1289  0092E0  75                 	db	117
  1290  0092E1  72                 	db	114
  1291  0092E2  73                 	db	115
  1292  0092E3  00                 	db	0
  1293  0092E4                     __end_of__display_time@F8683:
  1294                           	opt stack 0
  1295  0092E4                     __display_time@F8679:
  1296                           	opt stack 0
  1297  0092E4  53                 	db	83
  1298  0092E5  65                 	db	101
  1299  0092E6  74                 	db	116
  1300  0092E7  20                 	db	32
  1301  0092E8  6D                 	db	109
  1302  0092E9  6F                 	db	111
  1303  0092EA  6E                 	db	110
  1304  0092EB  74                 	db	116
  1305  0092EC  68                 	db	104
  1306  0092ED  00                 	db	0
  1307  0092EE                     __end_of__display_time@F8679:
  1308                           	opt stack 0
  1309  0092EE                     __display_time@F8677:
  1310                           	opt stack 0
  1311  0092EE  53                 	db	83
  1312  0092EF  65                 	db	101
  1313  0092F0  74                 	db	116
  1314  0092F1  20                 	db	32
  1315  0092F2  79                 	db	121
  1316  0092F3  65                 	db	101
  1317  0092F4  61                 	db	97
  1318  0092F5  72                 	db	114
  1319  0092F6  00                 	db	0
  1320  0092F7                     __end_of__display_time@F8677:
  1321                           	opt stack 0
  1322  0092F7                     __display_charger@F8740:
  1323                           	opt stack 0
  1324  0092F7  46                 	db	70
  1325  0092F8  61                 	db	97
  1326  0092F9  6E                 	db	110
  1327  0092FA  20                 	db	32
  1328  0092FB  6F                 	db	111
  1329  0092FC  66                 	db	102
  1330  0092FD  66                 	db	102
  1331  0092FE  00                 	db	0
  1332  0092FF                     __end_of__display_charger@F8740:
  1333                           	opt stack 0
  1334  0092FF                     __display_time@F8681:
  1335                           	opt stack 0
  1336  0092FF  53                 	db	83
  1337  009300  65                 	db	101
  1338  009301  74                 	db	116
  1339  009302  20                 	db	32
  1340  009303  64                 	db	100
  1341  009304  61                 	db	97
  1342  009305  79                 	db	121
  1343  009306  00                 	db	0
  1344  009307                     __end_of__display_time@F8681:
  1345                           	opt stack 0
  1346  009307                     _USB_SD_Ptr:
  1347                           	opt stack 0
  1348  009307  32                 	db	low _sd000
  1349  009308  94                 	db	high _sd000
  1350  009309  5B                 	db	low _sd001
  1351  00930A  93                 	db	high _sd001
  1352  00930B  8F                 	db	low _sd002
  1353  00930C  93                 	db	high _sd002
  1354  00930D  FE                 	db	low _sd003
  1355  00930E  93                 	db	high _sd003
  1356  00930F                     __end_of_USB_SD_Ptr:
  1357                           	opt stack 0
  1358  00930F                     __display_charger@F8738:
  1359                           	opt stack 0
  1360  00930F  46                 	db	70
  1361  009310  61                 	db	97
  1362  009311  6E                 	db	110
  1363  009312  20                 	db	32
  1364  009313  6F                 	db	111
  1365  009314  6E                 	db	110
  1366  009315  00                 	db	0
  1367  009316                     __end_of__display_charger@F8738:
  1368                           	opt stack 0
  1369  009316                     __display_inout@F8669:
  1370                           	opt stack 0
  1371  009316  56                 	db	86
  1372  009317  3A                 	db	58
  1373  009318  00                 	db	0
  1374  009319                     __end_of__display_inout@F8669:
  1375                           	opt stack 0
  1376  009319                     _USB_CD_Ptr:
  1377                           	opt stack 0
  1378  009319  1B                 	db	low _configDescriptor1
  1379  00931A  93                 	db	high _configDescriptor1
  1380  00931B                     __end_of_USB_CD_Ptr:
  1381                           	opt stack 0
  1382  00931B                     _configDescriptor1:
  1383                           	opt stack 0
  1384  00931B  09                 	db	9
  1385  00931C  02                 	db	2
  1386  00931D  40                 	db	64
  1387  00931E  00                 	db	0
  1388  00931F  02                 	db	2
  1389  009320  01                 	db	1
  1390  009321  00                 	db	0
  1391  009322  C0                 	db	192
  1392  009323  32                 	db	50
  1393  009324  09                 	db	9
  1394  009325  04                 	db	4
  1395  009326  00                 	db	0
  1396  009327  00                 	db	0
  1397  009328  02                 	db	2
  1398  009329  03                 	db	3
  1399  00932A  00                 	db	0
  1400  00932B  00                 	db	0
  1401  00932C  00                 	db	0
  1402  00932D  09                 	db	9
  1403  00932E  21                 	db	33
  1404  00932F  11                 	db	17
  1405  009330  01                 	db	1
  1406  009331  00                 	db	0
  1407  009332  01                 	db	1
  1408  009333  22                 	db	34
  1409  009334  1D                 	db	29
  1410  009335  00                 	db	0
  1411  009336  07                 	db	7
  1412  009337  05                 	db	5
  1413  009338  81                 	db	129
  1414  009339  03                 	db	3
  1415  00933A  40                 	db	64
  1416  00933B  00                 	db	0
  1417  00933C  01                 	db	1
  1418  00933D  07                 	db	7
  1419  00933E  05                 	db	5
  1420  00933F  01                 	db	1
  1421  009340  03                 	db	3
  1422  009341  40                 	db	64
  1423  009342  00                 	db	0
  1424  009343  01                 	db	1
  1425  009344  09                 	db	9
  1426  009345  04                 	db	4
  1427  009346  01                 	db	1
  1428  009347  00                 	db	0
  1429  009348  02                 	db	2
  1430  009349  08                 	db	8
  1431  00934A  06                 	db	6
  1432  00934B  50                 	db	80
  1433  00934C  00                 	db	0
  1434  00934D  07                 	db	7
  1435  00934E  05                 	db	5
  1436  00934F  82                 	db	130
  1437  009350  02                 	db	2
  1438  009351  40                 	db	64
  1439  009352  00                 	db	0
  1440  009353  01                 	db	1
  1441  009354  07                 	db	7
  1442  009355  05                 	db	5
  1443  009356  02                 	db	2
  1444  009357  02                 	db	2
  1445  009358  40                 	db	64
  1446  009359  00                 	db	0
  1447  00935A  01                 	db	1
  1448  00935B                     __end_of_configDescriptor1:
  1449                           	opt stack 0
  1450  00935B                     _sd001:
  1451                           	opt stack 0
  1452  00935B  34                 	db	52
  1453  00935C  03                 	db	3
  1454  00935D  0053               	dw	83
  1455  00935F  006F               	dw	111
  1456  009361  006C               	dw	108
  1457  009363  0064               	dw	100
  1458  009365  0065               	dw	101
  1459  009367  0072               	dw	114
  1460  009369  006E               	dw	110
  1461  00936B  0065               	dw	101
  1462  00936D  0072               	dw	114
  1463  00936F  0064               	dw	100
  1464  009371  002E               	dw	46
  1465  009373  0063               	dw	99
  1466  009375  006F               	dw	111
  1467  009377  006D               	dw	109
  1468  009379  0020               	dw	32
  1469  00937B  0020               	dw	32
  1470  00937D  0020               	dw	32
  1471  00937F  0020               	dw	32
  1472  009381  0020               	dw	32
  1473  009383  0020               	dw	32
  1474  009385  0020               	dw	32
  1475  009387  0020               	dw	32
  1476  009389  0020               	dw	32
  1477  00938B  0020               	dw	32
  1478  00938D  0020               	dw	32
  1479  00938F                     __end_of_sd001:
  1480                           	opt stack 0
  1481  00938F                     _sd002:
  1482                           	opt stack 0
  1483  00938F  2E                 	db	46
  1484  009390  03                 	db	3
  1485  009391  004D               	dw	77
  1486  009393  0050               	dw	80
  1487  009395  0050               	dw	80
  1488  009397  0054               	dw	84
  1489  009399  0053               	dw	83
  1490  00939B  006F               	dw	111
  1491  00939D  006C               	dw	108
  1492  00939F  0061               	dw	97
  1493  0093A1  0072               	dw	114
  1494  0093A3  0020               	dw	32
  1495  0093A5  0043               	dw	67
  1496  0093A7  0068               	dw	104
  1497  0093A9  0061               	dw	97
  1498  0093AB  0072               	dw	114
  1499  0093AD  0067               	dw	103
  1500  0093AF  0065               	dw	101
  1501  0093B1  0072               	dw	114
  1502  0093B3  0020               	dw	32
  1503  0093B5  0052               	dw	82
  1504  0093B7  0065               	dw	101
  1505  0093B9  0076               	dw	118
  1506  0093BB  0045               	dw	69
  1507  0093BD                     __end_of_sd002:
  1508                           	opt stack 0
  1509  0093BD                     _inq_resp:
  1510                           	opt stack 0
  1511  0093BD  00                 	db	0
  1512  0093BE  80                 	db	128
  1513  0093BF  04                 	db	4
  1514  0093C0  02                 	db	2
  1515  0093C1  20                 	db	32
  1516  0093C2  00                 	db	0
  1517  0093C3  00                 	db	0
  1518  0093C4  00                 	db	0
  1519  0093C5  4D                 	db	77
  1520  0093C6  69                 	db	105
  1521  0093C7  63                 	db	99
  1522  0093C8  72                 	db	114
  1523  0093C9  6F                 	db	111
  1524  0093CA  63                 	db	99
  1525  0093CB  68                 	db	104
  1526  0093CC  70                 	db	112
  1527  0093CD  4D                 	db	77
  1528  0093CE  61                 	db	97
  1529  0093CF  73                 	db	115
  1530  0093D0  73                 	db	115
  1531  0093D1  20                 	db	32
  1532  0093D2  53                 	db	83
  1533  0093D3  74                 	db	116
  1534  0093D4  6F                 	db	111
  1535  0093D5  72                 	db	114
  1536  0093D6  61                 	db	97
  1537  0093D7  67                 	db	103
  1538  0093D8  65                 	db	101
  1539  0093D9  20                 	db	32
  1540  0093DA  20                 	db	32
  1541  0093DB  20                 	db	32
  1542  0093DC  20                 	db	32
  1543  0093DD  30                 	db	48
  1544  0093DE  30                 	db	48
  1545  0093DF  30                 	db	48
  1546  0093E0  31                 	db	49
  1547  0093E1                     __end_of_inq_resp:
  1548                           	opt stack 0
  1549  0093E1                     _hid_rpt01:
  1550                           	opt stack 0
  1551  0093E1  06                 	db	6
  1552  0093E2  00                 	db	0
  1553  0093E3  FF                 	db	255
  1554  0093E4  09                 	db	9
  1555  0093E5  01                 	db	1
  1556  0093E6  A1                 	db	161
  1557  0093E7  01                 	db	1
  1558  0093E8  19                 	db	25
  1559  0093E9  01                 	db	1
  1560  0093EA  29                 	db	41
  1561  0093EB  40                 	db	64
  1562  0093EC  15                 	db	21
  1563  0093ED  00                 	db	0
  1564  0093EE  26                 	db	38
  1565  0093EF  FF                 	db	255
  1566  0093F0  00                 	db	0
  1567  0093F1  75                 	db	117
  1568  0093F2  08                 	db	8
  1569  0093F3  95                 	db	149
  1570  0093F4  40                 	db	64
  1571  0093F5  81                 	db	129
  1572  0093F6  00                 	db	0
  1573  0093F7  19                 	db	25
  1574  0093F8  01                 	db	1
  1575  0093F9  29                 	db	41
  1576  0093FA  40                 	db	64
  1577  0093FB  91                 	db	145
  1578  0093FC  00                 	db	0
  1579  0093FD  C0                 	db	192
  1580  0093FE                     __end_of_hid_rpt01:
  1581                           	opt stack 0
  1582  0093FE                     _sd003:
  1583                           	opt stack 0
  1584  0093FE  1A                 	db	26
  1585  0093FF  03                 	db	3
  1586  009400  0031               	dw	49
  1587  009402  0032               	dw	50
  1588  009404  0033               	dw	51
  1589  009406  0034               	dw	52
  1590  009408  0035               	dw	53
  1591  00940A  0036               	dw	54
  1592  00940C  0037               	dw	55
  1593  00940E  0038               	dw	56
  1594  009410  0039               	dw	57
  1595  009412  0030               	dw	48
  1596  009414  0039               	dw	57
  1597  009416  0039               	dw	57
  1598  009418                     __end_of_sd003:
  1599                           	opt stack 0
  1600  009418                     _device_dsc:
  1601                           	opt stack 0
  1602  009418  12                 	db	18
  1603  009419  01                 	db	1
  1604  00941A  0200               	dw	512
  1605  00941C  00                 	db	0
  1606  00941D  00                 	db	0
  1607  00941E  00                 	db	0
  1608  00941F  08                 	db	8
  1609  009420  04D8               	dw	1240
  1610  009422  F08E               	dw	61582
  1611  009424  0100               	dw	256
  1612  009426  01                 	db	1
  1613  009427  02                 	db	2
  1614  009428  00                 	db	0
  1615  009429  01                 	db	1
  1616  00942A                     __end_of_device_dsc:
  1617                           	opt stack 0
  1618  00942A                     _flash_command_pagesize_528:
  1619                           	opt stack 0
  1620  00942A  3D                 	db	61
  1621  00942B  2A                 	db	42
  1622  00942C  80                 	db	128
  1623  00942D  A7                 	db	167
  1624  00942E                     __end_of_flash_command_pagesize_528:
  1625                           	opt stack 0
  1626  00942E                     _flash_command_pagesize_512:
  1627                           	opt stack 0
  1628  00942E  3D                 	db	61
  1629  00942F  2A                 	db	42
  1630  009430  80                 	db	128
  1631  009431  A6                 	db	166
  1632  009432                     __end_of_flash_command_pagesize_512:
  1633                           	opt stack 0
  1634  009432                     _sd000:
  1635                           	opt stack 0
  1636  009432  04                 	db	4
  1637  009433  03                 	db	3
  1638  009434  0409               	dw	1033
  1639  009436                     __end_of_sd000:
  1640                           	opt stack 0
  1641  0000                     _RPINR22	set	3837
  1642  0000                     _RPOR22	set	3798
  1643  0000                     _RPOR21	set	3797
  1644  0000                     _RPINR21	set	3836
  1645  0000                     _RPOR5	set	3781
  1646  0000                     _RPOR6	set	3782
  1647  0000                     _RPINR2	set	3810
  1648  0000                     _RPINR3	set	3811
  1649  0000                     _RPINR1	set	3809
  1650  0000                     _PPSCONbits	set	3775
  1651  0000                     _CCPTMRS0bits	set	3922
  1652  0000                     _RTCVALH	set	3899
  1653  0000                     _RTCVALL	set	3898
  1654  0000                     _RTCCAL	set	3902
  1655  0000                     _RTCCFGbits	set	3903
  1656  0000                     _ANCON1bits	set	3913
  1657  0000                     _ANCON0bits	set	3912
  1658  0000                     _UEP0bits	set	3878
  1659  0000                     _UIEbits	set	3894
  1660  0000                     _UADDR	set	3896
  1661  0000                     _UIE	set	3894
  1662  0000                     _UEIE	set	3895
  1663  0000                     _UCFG	set	3897
  1664  0000                     _UEP1	set	3879
  1665  0000                     _UEP0	set	3878
  1666  0000                     _SSP2CON1bits	set	3954
  1667  0000                     _SSP2STATbits	set	3955
  1668  0000                     _RXADDRL	set	3945
  1669  0000                     _RXADDRH	set	3944
  1670  0000                     _DMABCL	set	3943
  1671  0000                     _DMABCH	set	3942
  1672  0000                     _TXADDRL	set	3947
  1673  0000                     _TXADDRH	set	3946
  1674  0000                     _DMACON2bits	set	3974
  1675  0000                     _DMACON1bits	set	3976
  1676  0000                     _ADRESL	set	4035
  1677  0000                     _ADRESH	set	4036
  1678  0000                     _ADCON1bits	set	4033
  1679  0000                     _ADCON0bits	set	4034
  1680  0000                     _CCP1CON	set	4026
  1681  0000                     _TMR2	set	4044
  1682  0000                     _PR2	set	4043
  1683  0000                     _CCPR1L	set	4027
  1684  0000                     _CCP1CONbits	set	4026
  1685  0000                     _T2CONbits	set	4042
  1686  0000                     _SSP1BUF	set	4041
  1687  0000                     _SSP1CON2bits	set	4037
  1688  0000                     _SSP1CON1bits	set	4038
  1689  0000                     _SSP1ADD	set	4040
  1690  0000                     _SSP1STATbits	set	4039
  1691  0000                     _T1CONbits	set	4045
  1692  0000                     _TMR1L	set	4046
  1693  0000                     _TMR1H	set	4047
  1694  0000                     _PIR1bits	set	3998
  1695  0000                     _LATAbits	set	3977
  1696  0000                     _TRISEbits	set	3990
  1697  0000                     _LATEbits	set	3981
  1698  0000                     _LATCbits	set	3979
  1699  0000                     _TRISAbits	set	3986
  1700  0000                     _TRISBbits	set	3987
  1701  0000                     _LATBbits	set	3978
  1702  0000                     _TRISDbits	set	3989
  1703  0000                     _TRISCbits	set	3988
  1704  0000                     _T0CONbits	set	4053
  1705  0000                     _INTCON2bits	set	4081
  1706  0000                     _EECON2	set	4007
  1707  0000                     _PORTBbits	set	3969
  1708  0000                     _INTCON3bits	set	4080
  1709  0000                     _TMR0L	set	4054
  1710  0000                     _TMR0H	set	4055
  1711  0000                     _PORTAbits	set	3968
  1712  0000                     _OSCCON	set	4051
  1713  0000                     _OSCTUNEbits	set	3995
  1714  0000                     _LATDbits	set	3980
  1715  0000                     _INTCONbits	set	4082
  1716  0000                     _IPR2bits	set	4002
  1717  0000                     _RCONbits	set	4048
  1718  0000                     _UCON	set	3941
  1719  0000                     _USTAT	set	3940
  1720  0000                     _PIR2bits	set	4001
  1721  0000                     _UIRbits	set	3938
  1722  0000                     _UCONbits	set	3941
  1723  0000                     _UIR	set	3938
  1724  0000                     _UEIR	set	3939
  1725  0000                     _PIE2bits	set	4000
  1726  009436                     
  1727                           ; BSR set to: 1
  1728  009436  48                 	db	72	;'H'
  1729  009437  45                 	db	69	;'E'
  1730  009438  4C                 	db	76	;'L'
  1731  009439  4C                 	db	76	;'L'
  1732  00943A  4F                 	db	79	;'O'
  1733  00943B  20                 	db	32
  1734  00943C  57                 	db	87	;'W'
  1735  00943D  4F                 	db	79	;'O'
  1736  00943E  52                 	db	82	;'R'
  1737  00943F  4C                 	db	76	;'L'
  1738  009440  44                 	db	68	;'D'
  1739  009441  21                 	db	33
  1740  009442  00                 	db	0
  1741  009443                     
  1742                           ; BSR set to: 1
  1743  009443  53                 	db	83	;'S'
  1744  009444  6F                 	db	111	;'o'
  1745  009445  6C                 	db	108	;'l'
  1746  009446  61                 	db	97	;'a'
  1747  009447  72                 	db	114	;'r'
  1748  009448  43                 	db	67	;'C'
  1749  009449  68                 	db	104	;'h'
  1750  00944A  61                 	db	97	;'a'
  1751  00944B  72                 	db	114	;'r'
  1752  00944C  67                 	db	103	;'g'
  1753  00944D  72                 	db	114	;'r'
  1754  00944E  00                 	db	0
  1755  00944F                     
  1756                           ; BSR set to: 1
  1757  00944F  46                 	db	70	;'F'
  1758  009450  49                 	db	73	;'I'
  1759  009451  4C                 	db	76	;'L'
  1760  009452  45                 	db	69	;'E'
  1761  009453  20                 	db	32
  1762  009454  20                 	db	32
  1763  009455  20                 	db	32
  1764  009456  20                 	db	32
  1765  009457  00                 	db	0
  1766  009458                     STR_1:
  1767                           
  1768                           ; BSR set to: 1
  1769  009458  4D                 	db	77	;'M'
  1770  009459  53                 	db	83	;'S'
  1771  00945A  44                 	db	68	;'D'
  1772  00945B  4F                 	db	79	;'O'
  1773  00945C  53                 	db	83	;'S'
  1774  00945D  35                 	db	53	;'5'
  1775  00945E  2E                 	db	46
  1776  00945F  30                 	db	48	;'0'
  1777  009460  00                 	db	0
  1778  009461                     
  1779                           ; BSR set to: 1
  1780  009461  54                 	db	84	;'T'
  1781  009462  58                 	db	88	;'X'
  1782  009463  54                 	db	84	;'T'
  1783  009464  00                 	db	0
  1784  0000                     
  1785                           ; #config settings
  1786  009465  00                 	db	0	; dummy byte at the end
  1787  0000                     
  1788                           	psect	cinit
  1789  010BA2                     __pcinit:
  1790                           	opt stack 0
  1791  010BA2                     start_initialization:
  1792                           	opt stack 0
  1793  010BA2                     __initialization:
  1794                           	opt stack 0
  1795                           
  1796                           ; Initialize objects allocated to BANK4 (104 bytes)
  1797                           ; load TBLPTR registers with __pidataBANK4
  1798  010BA2  0EDA               	movlw	low __pidataBANK4
  1799  010BA4  6EF6               	movwf	tblptrl,c
  1800  010BA6  0E29               	movlw	high __pidataBANK4
  1801  010BA8  6EF7               	movwf	tblptrh,c
  1802  010BAA  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1803  010BAC  6EF8               	movwf	tblptru,c
  1804  010BAE  EE04  F000         	lfsr	0,__pdataBANK4
  1805  010BB2  EE10 F068          	lfsr	1,104
  1806  010BB6                     copy_data0:
  1807  010BB6  0009               	tblrd		*+
  1808  010BB8  CFF5 FFEE          	movff	tablat,postinc0
  1809  010BBC  50E5               	movf	postdec1,w,c
  1810  010BBE  50E1               	movf	fsr1l,w,c
  1811  010BC0  E1FA               	bnz	copy_data0
  1812                           
  1813                           ; Initialize objects allocated to BANK3 (27 bytes)
  1814                           ; load TBLPTR registers with __pidataBANK3
  1815  010BC2  0ED4               	movlw	low __pidataBANK3
  1816  010BC4  6EF6               	movwf	tblptrl,c
  1817  010BC6  0E3F               	movlw	high __pidataBANK3
  1818  010BC8  6EF7               	movwf	tblptrh,c
  1819  010BCA  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1820  010BCC  6EF8               	movwf	tblptru,c
  1821  010BCE  EE03  F0E4         	lfsr	0,__pdataBANK3
  1822  010BD2  EE10 F01B          	lfsr	1,27
  1823  010BD6                     copy_data1:
  1824  010BD6  0009               	tblrd		*+
  1825  010BD8  CFF5 FFEE          	movff	tablat,postinc0
  1826  010BDC  50E5               	movf	postdec1,w,c
  1827  010BDE  50E1               	movf	fsr1l,w,c
  1828  010BE0  E1FA               	bnz	copy_data1
  1829                           
  1830                           ; Initialize objects allocated to BANK2 (61 bytes)
  1831                           ; load TBLPTR registers with __pidataBANK2
  1832  010BE2  0E4C               	movlw	low __pidataBANK2
  1833  010BE4  6EF6               	movwf	tblptrl,c
  1834  010BE6  0E37               	movlw	high __pidataBANK2
  1835  010BE8  6EF7               	movwf	tblptrh,c
  1836  010BEA  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1837  010BEC  6EF8               	movwf	tblptru,c
  1838  010BEE  EE02  F0BB         	lfsr	0,__pdataBANK2
  1839  010BF2  EE10 F03D          	lfsr	1,61
  1840  010BF6                     copy_data2:
  1841  010BF6  0009               	tblrd		*+
  1842  010BF8  CFF5 FFEE          	movff	tablat,postinc0
  1843  010BFC  50E5               	movf	postdec1,w,c
  1844  010BFE  50E1               	movf	fsr1l,w,c
  1845  010C00  E1FA               	bnz	copy_data2
  1846                           
  1847                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1848  010C02  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1849  010C06  EE12 F000          	lfsr	1,512
  1850  010C0A                     clear_0:
  1851  010C0A  6AEE               	clrf	postinc0,c
  1852  010C0C  50E5               	movf	postdec1,w,c
  1853  010C0E  50E1               	movf	fsr1l,w,c
  1854  010C10  E1FC               	bnz	clear_0
  1855  010C12  50E2               	movf	fsr1h,w,c
  1856  010C14  E1FA               	bnz	clear_0
  1857                           
  1858                           ; Clear objects allocated to BANK4 (80 bytes)
  1859  010C16  EE04  F068         	lfsr	0,__pbssBANK4
  1860  010C1A  0E50               	movlw	80
  1861  010C1C                     clear_1:
  1862  010C1C  6AEE               	clrf	postinc0,c
  1863  010C1E  06E8               	decf	wreg,f,c
  1864  010C20  E1FD               	bnz	clear_1
  1865                           
  1866                           ; Clear objects allocated to BANK3 (228 bytes)
  1867  010C22  EE03  F000         	lfsr	0,__pbssBANK3
  1868  010C26  0EE4               	movlw	228
  1869  010C28                     clear_2:
  1870  010C28  6AEE               	clrf	postinc0,c
  1871  010C2A  06E8               	decf	wreg,f,c
  1872  010C2C  E1FD               	bnz	clear_2
  1873                           
  1874                           ; Clear objects allocated to BANK2 (187 bytes)
  1875  010C2E  EE02  F000         	lfsr	0,__pbssBANK2
  1876  010C32  0EBB               	movlw	187
  1877  010C34                     clear_3:
  1878  010C34  6AEE               	clrf	postinc0,c
  1879  010C36  06E8               	decf	wreg,f,c
  1880  010C38  E1FD               	bnz	clear_3
  1881                           
  1882                           ; Clear objects allocated to BANK1 (45 bytes)
  1883  010C3A  EE01  F0D3         	lfsr	0,__pbssBANK1
  1884  010C3E  0E2D               	movlw	45
  1885  010C40                     clear_4:
  1886  010C40  6AEE               	clrf	postinc0,c
  1887  010C42  06E8               	decf	wreg,f,c
  1888  010C44  E1FD               	bnz	clear_4
  1889                           
  1890                           ; Clear objects allocated to BANK0 (17 bytes)
  1891  010C46  EE00  F0D7         	lfsr	0,__pbssBANK0
  1892  010C4A  0E11               	movlw	17
  1893  010C4C                     clear_5:
  1894  010C4C  6AEE               	clrf	postinc0,c
  1895  010C4E  06E8               	decf	wreg,f,c
  1896  010C50  E1FD               	bnz	clear_5
  1897                           
  1898                           ; Clear objects allocated to COMRAM (45 bytes)
  1899  010C52  EE00  F001         	lfsr	0,__pbssCOMRAM
  1900  010C56  0E2D               	movlw	45
  1901  010C58                     clear_6:
  1902  010C58  6AEE               	clrf	postinc0,c
  1903  010C5A  06E8               	decf	wreg,f,c
  1904  010C5C  E1FD               	bnz	clear_6
  1905  010C5E                     end_of_initialization:
  1906                           	opt stack 0
  1907  010C5E                     __end_of__initialization:
  1908                           	opt stack 0
  1909  010C5E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1910  010C60  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1911  010C62  0100               	movlb	0
  1912  010C64  EF0B  F05C         	goto	_main	;jump to C main() function
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1h	equ	0xFE2
  1921                           fsr1l	equ	0xFE1
  1922                           
  1923                           	psect	bssCOMRAM
  1924  000001                     __pbssCOMRAM:
  1925                           	opt stack 0
  1926  000001                     _outPipes:
  1927                           	opt stack 0
  1928  000001                     	ds	9
  1929  00000A                     _inPipes:
  1930                           	opt stack 0
  1931  00000A                     	ds	6
  1932  000010                     _pBDTEntryIn:
  1933                           	opt stack 0
  1934  000010                     	ds	6
  1935  000016                     _averageCount:
  1936                           	opt stack 0
  1937  000016                     	ds	2
  1938  000018                     _pBDTEntryEP0OutNext:
  1939                           	opt stack 0
  1940  000018                     	ds	2
  1941  00001A                     _pBDTEntryEP0OutCurrent:
  1942                           	opt stack 0
  1943  00001A                     	ds	2
  1944  00001C                     _buck_status:
  1945                           	opt stack 0
  1946  00001C                     	ds	1
  1947  00001D                     _task_list_write_index:
  1948                           	opt stack 0
  1949  00001D                     	ds	1
  1950  00001E                     _task_list_read_index:
  1951                           	opt stack 0
  1952  00001E                     	ds	1
  1953  00001F                     _MSDWriteState:
  1954                           	opt stack 0
  1955  00001F                     	ds	1
  1956  000020                     _USBDeferINDataStagePackets:
  1957                           	opt stack 0
  1958  000020                     	ds	1
  1959  000021                     _USBStatusStageEnabledFlag2:
  1960                           	opt stack 0
  1961  000021                     	ds	1
  1962  000022                     _USBStatusStageEnabledFlag1:
  1963                           	opt stack 0
  1964  000022                     	ds	1
  1965  000023                     _USBDeferStatusStagePacket:
  1966                           	opt stack 0
  1967  000023                     	ds	1
  1968  000024                     _USBStatusStageTimeoutCounter:
  1969                           	opt stack 0
  1970  000024                     	ds	1
  1971  000025                     _BothEP0OutUOWNsSet:
  1972                           	opt stack 0
  1973  000025                     	ds	1
  1974  000026                     _endpoint_number:
  1975                           	opt stack 0
  1976  000026                     	ds	1
  1977  000027                     _USBBusIsSuspended:
  1978                           	opt stack 0
  1979  000027                     	ds	1
  1980  000028                     _RemoteWakeup:
  1981                           	opt stack 0
  1982  000028                     	ds	1
  1983  000029                     _controlTransferState:
  1984                           	opt stack 0
  1985  000029                     	ds	1
  1986  00002A                     _shortPacketStatus:
  1987                           	opt stack 0
  1988  00002A                     	ds	1
  1989  00002B                     _USBDeviceState:
  1990                           	opt stack 0
  1991  00002B                     	ds	1
  1992  00002C                     _USTATcopy:
  1993                           	opt stack 0
  1994  00002C                     	ds	1
  1995  00002D                     _USBActiveConfiguration:
  1996                           	opt stack 0
  1997  00002D                     	ds	1
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           
  2008                           	psect	bssBANK0
  2009  0000D7                     __pbssBANK0:
  2010                           	opt stack 0
  2011  0000D7                     _USBInHandle:
  2012                           	opt stack 0
  2013  0000D7                     	ds	2
  2014  0000D9                     _TransferLength:
  2015                           	opt stack 0
  2016  0000D9                     	ds	2
  2017  0000DB                     _USBMSDInHandle:
  2018                           	opt stack 0
  2019  0000DB                     	ds	2
  2020  0000DD                     _USBMSDOutHandle:
  2021                           	opt stack 0
  2022  0000DD                     	ds	2
  2023  0000DF                     _power_state:
  2024                           	opt stack 0
  2025  0000DF                     	ds	1
  2026  0000E0                     _idx:
  2027                           	opt stack 0
  2028  0000E0                     	ds	1
  2029  0000E1                     _buck_remote_dutycycle:
  2030                           	opt stack 0
  2031  0000E1                     	ds	1
  2032  0000E2                     _buck_remote_synchronous:
  2033                           	opt stack 0
  2034  0000E2                     	ds	1
  2035  0000E3                     _buck_remote_on:
  2036                           	opt stack 0
  2037  0000E3                     	ds	1
  2038  0000E4                     _buck_dutycycle:
  2039                           	opt stack 0
  2040  0000E4                     	ds	1
  2041  0000E5                     _MSDHostNoData:
  2042                           	opt stack 0
  2043  0000E5                     	ds	1
  2044  0000E6                     _MSDCommandState:
  2045                           	opt stack 0
  2046  0000E6                     	ds	1
  2047  0000E7                     _MSD_State:
  2048                           	opt stack 0
  2049  0000E7                     	ds	1
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           postinc0	equ	0xFEE
  2055                           wreg	equ	0xFE8
  2056                           postdec1	equ	0xFE5
  2057                           fsr1h	equ	0xFE2
  2058                           fsr1l	equ	0xFE1
  2059                           
  2060                           	psect	bssBANK1
  2061  0001D3                     __pbssBANK1:
  2062                           	opt stack 0
  2063  0001D3                     _pBDTEntryOut:
  2064                           	opt stack 0
  2065  0001D3                     	ds	6
  2066  0001D9                     _LBA:
  2067                           	opt stack 0
  2068  0001D9                     	ds	4
  2069  0001DD                     _USB1msTickCount:
  2070                           	opt stack 0
  2071  0001DD                     	ds	4
  2072  0001E1                     _ep_data_out:
  2073                           	opt stack 0
  2074  0001E1                     	ds	3
  2075  0001E4                     _ep_data_in:
  2076                           	opt stack 0
  2077  0001E4                     	ds	3
  2078  0001E7                     _system_ui_inactive_count:
  2079                           	opt stack 0
  2080  0001E7                     	ds	2
  2081  0001E9                     _USBOutHandle:
  2082                           	opt stack 0
  2083  0001E9                     	ds	2
  2084  0001EB                     _ptrNextData:
  2085                           	opt stack 0
  2086  0001EB                     	ds	2
  2087  0001ED                     _pDst:
  2088                           	opt stack 0
  2089  0001ED                     	ds	2
  2090  0001EF                     _lastSecond:
  2091                           	opt stack 0
  2092  0001EF                     	ds	1
  2093  0001F0                     _status:
  2094                           	opt stack 0
  2095  0001F0                     	ds	1
  2096  0001F1                     _buck_remote_enable:
  2097                           	opt stack 0
  2098  0001F1                     	ds	1
  2099  0001F2                     _buck_dutycycle_last_step:
  2100                           	opt stack 0
  2101  0001F2                     	ds	1
  2102  0001F3                     _userInterfaceStatus:
  2103                           	opt stack 0
  2104  0001F3                     	ds	1
  2105  0001F4                     _i2c_frequency:
  2106                           	opt stack 0
  2107  0001F4                     	ds	1
  2108  0001F5                     _MSDCBWValid:
  2109                           	opt stack 0
  2110  0001F5                     	ds	1
  2111  0001F6                     _SoftDetach:
  2112                           	opt stack 0
  2113  0001F6                     	ds	1
  2114  0001F7                     _gblCBWLength:
  2115                           	opt stack 0
  2116  0001F7                     	ds	1
  2117  0001F8                     _MSDRetryAttempt:
  2118                           	opt stack 0
  2119  0001F8                     	ds	1
  2120  0001F9                     _MSDReadState:
  2121                           	opt stack 0
  2122  0001F9                     	ds	1
  2123  0001FA                     _USBTicksSinceSuspendEnd:
  2124                           	opt stack 0
  2125  0001FA                     	ds	1
  2126  0001FB                     _USBDeferOUTDataStagePackets:
  2127                           	opt stack 0
  2128  0001FB                     	ds	1
  2129  0001FC                     _USBAlternateInterface:
  2130                           	opt stack 0
  2131  0001FC                     	ds	2
  2132  0001FE                     _active_protocol:
  2133                           	opt stack 0
  2134  0001FE                     	ds	1
  2135  0001FF                     _idle_rate:
  2136                           	opt stack 0
  2137  0001FF                     	ds	1
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           postinc0	equ	0xFEE
  2143                           wreg	equ	0xFE8
  2144                           postdec1	equ	0xFE5
  2145                           fsr1h	equ	0xFE2
  2146                           fsr1l	equ	0xFE1
  2147                           
  2148                           	psect	bssBANK2
  2149  000200                     __pbssBANK2:
  2150                           	opt stack 0
  2151  000200                     _os:
  2152                           	opt stack 0
  2153  000200                     	ds	65
  2154  000241                     _gblCBW:
  2155                           	opt stack 0
  2156  000241                     	ds	31
  2157  000260                     _gblSenseData:
  2158                           	opt stack 0
  2159  000260                     	ds	18
  2160  000272                     _temperatureExternal2Sum:
  2161                           	opt stack 0
  2162  000272                     	ds	4
  2163  000276                     _temperatureExternal1Sum:
  2164                           	opt stack 0
  2165  000276                     	ds	4
  2166  00027A                     _temperatureOnboardSum:
  2167                           	opt stack 0
  2168  00027A                     	ds	4
  2169  00027E                     _outputCapacitySum:
  2170                           	opt stack 0
  2171  00027E                     	ds	4
  2172  000282                     _inputCapacitySum:
  2173                           	opt stack 0
  2174  000282                     	ds	4
  2175  000286                     _outputPowerSum:
  2176                           	opt stack 0
  2177  000286                     	ds	4
  2178  00028A                     _inputPowerSum:
  2179                           	opt stack 0
  2180  00028A                     	ds	4
  2181  00028E                     _outputCurrentSum:
  2182                           	opt stack 0
  2183  00028E                     	ds	4
  2184  000292                     _outputVoltageSum:
  2185                           	opt stack 0
  2186  000292                     	ds	4
  2187  000296                     _inputCurrentSum:
  2188                           	opt stack 0
  2189  000296                     	ds	4
  2190  00029A                     _inputVoltageSum:
  2191                           	opt stack 0
  2192  00029A                     	ds	4
  2193  00029E                     _now:
  2194                           	opt stack 0
  2195  00029E                     	ds	4
  2196  0002A2                     _last:
  2197                           	opt stack 0
  2198  0002A2                     	ds	4
  2199  0002A6                     _gblBLKLen:
  2200                           	opt stack 0
  2201  0002A6                     	ds	4
  2202  0002AA                     _gblNumBLKS:
  2203                           	opt stack 0
  2204  0002AA                     	ds	4
  2205  0002AE                     _lowPowerTime:
  2206                           	opt stack 0
  2207  0002AE                     	ds	2
  2208  0002B0                     _chargerOnTime:
  2209                           	opt stack 0
  2210  0002B0                     	ds	2
  2211  0002B2                     _gblMediaPresent:
  2212                           	opt stack 0
  2213  0002B2                     	ds	2
  2214  0002B4                     _MSBBufferIndex:
  2215                           	opt stack 0
  2216  0002B4                     	ds	2
  2217  0002B6                     _mediaInformation:
  2218                           	opt stack 0
  2219  0002B6                     	ds	5
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           postinc0	equ	0xFEE
  2225                           wreg	equ	0xFE8
  2226                           postdec1	equ	0xFE5
  2227                           fsr1h	equ	0xFE2
  2228                           fsr1l	equ	0xFE1
  2229                           
  2230                           	psect	dataBANK2
  2231  0002BB                     __pdataBANK2:
  2232                           	opt stack 0
  2233  0002BB                     _LUN:
  2234                           	opt stack 0
  2235  0002BB                     	ds	29
  2236  0002D8                     system_init@F8573:
  2237                           	opt stack 0
  2238  0002D8                     	ds	9
  2239  0002E1                     system_init@F8579:
  2240                           	opt stack 0
  2241  0002E1                     	ds	4
  2242  0002E5                     system_init@F8575:
  2243                           	opt stack 0
  2244  0002E5                     	ds	4
  2245  0002E9                     _battery_voltage_maximum:
  2246                           	opt stack 0
  2247  0002E9                     	ds	2
  2248  0002EB                     _filename:
  2249                           	opt stack 0
  2250  0002EB                     	ds	9
  2251  0002F4                     _extension:
  2252                           	opt stack 0
  2253  0002F4                     	ds	4
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           fsr1h	equ	0xFE2
  2262                           fsr1l	equ	0xFE1
  2263                           
  2264                           	psect	bssBANK3
  2265  000300                     __pbssBANK3:
  2266                           	opt stack 0
  2267  000300                     _calibrationParameters:
  2268                           	opt stack 0
  2269  000300                     	ds	84
  2270  000354                     _display_content:
  2271                           	opt stack 0
  2272  000354                     	ds	80
  2273  0003A4                     _ToSendDataBuffer:
  2274                           	opt stack 0
  2275  0003A4                     	ds	64
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postdec1	equ	0xFE5
  2283                           fsr1h	equ	0xFE2
  2284                           fsr1l	equ	0xFE1
  2285                           
  2286                           	psect	dataBANK3
  2287  0003E4                     __pdataBANK3:
  2288                           	opt stack 0
  2289  0003E4                     i2c_display_init@F8357:
  2290                           	opt stack 0
  2291  0003E4                     	ds	9
  2292  0003ED                     i2c_display_send_init_sequence@F8354:
  2293                           	opt stack 0
  2294  0003ED                     	ds	9
  2295  0003F6                     system_init@F8577:
  2296                           	opt stack 0
  2297  0003F6                     	ds	9
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           postinc0	equ	0xFEE
  2303                           wreg	equ	0xFE8
  2304                           postdec1	equ	0xFE5
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           
  2308                           	psect	bssBANK4
  2309  000468                     __pbssBANK4:
  2310                           	opt stack 0
  2311  000468                     _task_list:
  2312                           	opt stack 0
  2313  000468                     	ds	16
  2314  000478                     _ReceivedDataBuffer:
  2315                           	opt stack 0
  2316  000478                     	ds	64
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           postinc0	equ	0xFEE
  2322                           wreg	equ	0xFE8
  2323                           postdec1	equ	0xFE5
  2324                           fsr1h	equ	0xFE2
  2325                           fsr1l	equ	0xFE1
  2326                           
  2327                           	psect	dataBANK4
  2328  000400                     __pdataBANK4:
  2329                           	opt stack 0
  2330  000400                     system_init@F8581:
  2331                           	opt stack 0
  2332  000400                     	ds	104
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           
  2343                           	psect	bssBIGRAMll
  2344  000800                     __pbssBIGRAMll:
  2345                           	opt stack 0
  2346  000800                     _buffer:
  2347                           	opt stack 0
  2348  000800                     	ds	512
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           postinc0	equ	0xFEE
  2354                           wreg	equ	0xFE8
  2355                           postdec1	equ	0xFE5
  2356                           fsr1h	equ	0xFE2
  2357                           fsr1l	equ	0xFE1
  2358                           
  2359                           	psect	cstackBANK1
  2360  000100                     __pcstackBANK1:
  2361                           	opt stack 0
  2362  000100                     log_write_to_disk@file_number:
  2363                           	opt stack 0
  2364  000100                     __display_charger@fan_off:
  2365                           	opt stack 0
  2366  000100                     __display_time@pts:
  2367                           	opt stack 0
  2368  000100                     system_init@appendtext:
  2369                           	opt stack 0
  2370                           
  2371                           ; 104 bytes @ 0x0
  2372  000100                     	ds	1
  2373  000101                     log_write_to_disk@log_entry:
  2374                           	opt stack 0
  2375                           
  2376                           ; 32 bytes @ 0x1
  2377  000101                     	ds	7
  2378  000108                     __display_charger@fan_on:
  2379                           	opt stack 0
  2380                           
  2381                           ; 7 bytes @ 0x8
  2382  000108                     	ds	7
  2383  00010F                     __display_charger@header:
  2384                           	opt stack 0
  2385                           
  2386                           ; 21 bytes @ 0xF
  2387  00010F                     	ds	5
  2388  000114                     __display_time@pressminutes:
  2389                           	opt stack 0
  2390                           
  2391                           ; 20 bytes @ 0x14
  2392  000114                     	ds	16
  2393  000124                     __display_charger@charger_async:
  2394                           	opt stack 0
  2395                           
  2396                           ; 21 bytes @ 0x24
  2397  000124                     	ds	4
  2398  000128                     __display_time@pressseconds:
  2399                           	opt stack 0
  2400                           
  2401                           ; 20 bytes @ 0x28
  2402  000128                     	ds	17
  2403  000139                     __display_charger@charger_sync:
  2404                           	opt stack 0
  2405                           
  2406                           ; 20 bytes @ 0x39
  2407  000139                     	ds	3
  2408  00013C                     __display_time@pressmonth:
  2409                           	opt stack 0
  2410                           
  2411                           ; 18 bytes @ 0x3C
  2412  00013C                     	ds	17
  2413  00014D                     __display_charger@supply_off:
  2414                           	opt stack 0
  2415                           
  2416                           ; 19 bytes @ 0x4D
  2417  00014D                     	ds	1
  2418  00014E                     __display_time@presshours:
  2419                           	opt stack 0
  2420                           
  2421                           ; 18 bytes @ 0x4E
  2422  00014E                     	ds	18
  2423  000160                     __display_time@pressday:
  2424                           	opt stack 0
  2425  000160                     __display_charger@supply_on:
  2426                           	opt stack 0
  2427                           
  2428                           ; 18 bytes @ 0x60
  2429  000160                     	ds	8
  2430  000168                     system_init@filename:
  2431                           	opt stack 0
  2432                           
  2433                           ; 9 bytes @ 0x68
  2434  000168                     	ds	8
  2435  000170                     __display_time@presssave:
  2436                           	opt stack 0
  2437                           
  2438                           ; 16 bytes @ 0x70
  2439  000170                     	ds	1
  2440  000171                     system_init@filename2:
  2441                           	opt stack 0
  2442                           
  2443                           ; 9 bytes @ 0x71
  2444  000171                     	ds	1
  2445  000172                     __display_charger@charger_startup:
  2446                           	opt stack 0
  2447                           
  2448                           ; 16 bytes @ 0x72
  2449  000172                     	ds	8
  2450  00017A                     system_init@extension:
  2451                           	opt stack 0
  2452                           
  2453                           ; 4 bytes @ 0x7A
  2454  00017A                     	ds	4
  2455  00017E                     system_init@extension2:
  2456                           	opt stack 0
  2457                           
  2458                           ; 4 bytes @ 0x7E
  2459  00017E                     	ds	2
  2460  000180                     __display_time@tad:
  2461                           	opt stack 0
  2462                           
  2463                           ; 14 bytes @ 0x80
  2464  000180                     	ds	2
  2465  000182                     __display_charger@charger_off:
  2466                           	opt stack 0
  2467                           
  2468                           ; 12 bytes @ 0x82
  2469  000182                     	ds	12
  2470  00018E                     __display_charger@cntr:
  2471                           	opt stack 0
  2472  00018E                     __display_time@setminutes:
  2473                           	opt stack 0
  2474                           
  2475                           ; 12 bytes @ 0x8E
  2476  00018E                     	ds	12
  2477  00019A                     __display_time@setseconds:
  2478                           	opt stack 0
  2479                           
  2480                           ; 12 bytes @ 0x9A
  2481  00019A                     	ds	12
  2482  0001A6                     __display_time@setmonth:
  2483                           	opt stack 0
  2484                           
  2485                           ; 10 bytes @ 0xA6
  2486  0001A6                     	ds	10
  2487  0001B0                     __display_time@sethours:
  2488                           	opt stack 0
  2489                           
  2490                           ; 10 bytes @ 0xB0
  2491  0001B0                     	ds	10
  2492  0001BA                     __display_time@setyear:
  2493                           	opt stack 0
  2494                           
  2495                           ; 9 bytes @ 0xBA
  2496  0001BA                     	ds	9
  2497  0001C3                     __display_time@setday:
  2498                           	opt stack 0
  2499                           
  2500                           ; 8 bytes @ 0xC3
  2501  0001C3                     	ds	8
  2502  0001CB                     __display_time@mode:
  2503                           	opt stack 0
  2504                           
  2505                           ; 1 bytes @ 0xCB
  2506  0001CB                     	ds	1
  2507  0001CC                     __display_time@year:
  2508                           	opt stack 0
  2509                           
  2510                           ; 1 bytes @ 0xCC
  2511  0001CC                     	ds	1
  2512  0001CD                     __display_time@month:
  2513                           	opt stack 0
  2514                           
  2515                           ; 1 bytes @ 0xCD
  2516  0001CD                     	ds	1
  2517  0001CE                     __display_time@day:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0xCE
  2521  0001CE                     	ds	1
  2522  0001CF                     __display_time@hours:
  2523                           	opt stack 0
  2524                           
  2525                           ; 1 bytes @ 0xCF
  2526  0001CF                     	ds	1
  2527  0001D0                     __display_time@minutes:
  2528                           	opt stack 0
  2529                           
  2530                           ; 1 bytes @ 0xD0
  2531  0001D0                     	ds	1
  2532  0001D1                     __display_time@seconds:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0xD1
  2536  0001D1                     	ds	1
  2537  0001D2                     __display_time@cntr:
  2538                           	opt stack 0
  2539                           
  2540                           ; 1 bytes @ 0xD2
  2541  0001D2                     	ds	1
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1h	equ	0xFE2
  2550                           fsr1l	equ	0xFE1
  2551                           
  2552                           	psect	cstackBANK0
  2553  000060                     __pcstackBANK0:
  2554                           	opt stack 0
  2555  000060                     ??_system_output_off:
  2556  000060                     ??__i2c_wait_idle:
  2557  000060                     ??__display_clear:
  2558  000060                     ??__number_of_days:
  2559  000060                     ??__buck_set_dutycycle:
  2560  000060                     ?_USBTransferOnePacket:
  2561                           	opt stack 0
  2562  000060                     ?_adc_read:
  2563                           	opt stack 0
  2564  000060                     ?_log_get_number_of_samples:
  2565                           	opt stack 0
  2566  000060                     ?_ExternalFlash_MediaInitialize:
  2567                           	opt stack 0
  2568  000060                     ?_ExternalFlash_SectorSizeRead:
  2569                           	opt stack 0
  2570  000060                     ?_strlen:
  2571                           	opt stack 0
  2572  000060                     ?_strncmp:
  2573                           	opt stack 0
  2574  000060                     ?__sector_from_cluster:
  2575                           	opt stack 0
  2576  000060                     ?___awdiv:
  2577                           	opt stack 0
  2578  000060                     ?___lwdiv:
  2579                           	opt stack 0
  2580  000060                     ?___lwmod:
  2581                           	opt stack 0
  2582  000060                     ?___ftpack:
  2583                           	opt stack 0
  2584  000060                     ?_ExternalFlash_CapacityRead:
  2585                           	opt stack 0
  2586  000060                     ?___lmul:
  2587                           	opt stack 0
  2588  000060                     ?___aldiv:
  2589                           	opt stack 0
  2590  000060                     ?___fttol:
  2591                           	opt stack 0
  2592  000060                     ?___lldiv:
  2593                           	opt stack 0
  2594  000060                     USBTransferOnePacket@dir:
  2595                           	opt stack 0
  2596  000060                     USBStallEndpoint@dir:
  2597                           	opt stack 0
  2598  000060                     SYSTEM_Initialize@state:
  2599                           	opt stack 0
  2600  000060                     system_output_is_on@output:
  2601                           	opt stack 0
  2602  000060                     system_output_on@output:
  2603                           	opt stack 0
  2604  000060                     __i2c_send@dat:
  2605                           	opt stack 0
  2606  000060                     i2c_set_frequency@frequency:
  2607                           	opt stack 0
  2608  000060                     get_next_eeprom_write_task@task:
  2609                           	opt stack 0
  2610  000060                     display_get_character@position:
  2611                           	opt stack 0
  2612  000060                     __rtcc_bcd_to_decimal@tens:
  2613                           	opt stack 0
  2614  000060                     __rtcc_verify_bcd@min:
  2615                           	opt stack 0
  2616  000060                     rtcc_set_year@year:
  2617                           	opt stack 0
  2618  000060                     rtcc_set_month@month:
  2619                           	opt stack 0
  2620  000060                     rtcc_set_day@day:
  2621                           	opt stack 0
  2622  000060                     rtcc_set_hours@hours:
  2623                           	opt stack 0
  2624  000060                     rtcc_set_minutes@minutes:
  2625                           	opt stack 0
  2626  000060                     rtcc_set_seconds@seconds:
  2627                           	opt stack 0
  2628  000060                     __buck_prepare@cntr:
  2629                           	opt stack 0
  2630  000060                     buck_remote_set_enable@remote:
  2631                           	opt stack 0
  2632  000060                     buck_remote_set_on@on:
  2633                           	opt stack 0
  2634  000060                     buck_remote_set_synchronous@synchronous:
  2635                           	opt stack 0
  2636  000060                     buck_remote_set_dutycycle@dutycycle:
  2637                           	opt stack 0
  2638  000060                     buck_remote_change_dutycycle@change:
  2639                           	opt stack 0
  2640  000060                     buck_remote_get_status@retval:
  2641                           	opt stack 0
  2642  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2643                           	opt stack 0
  2644  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2645                           	opt stack 0
  2646  000060                     __flash_spi_tx@data:
  2647                           	opt stack 0
  2648  000060                     __flash_spi_tx_tx@command:
  2649                           	opt stack 0
  2650  000060                     __flash_spi_tx_rx@command:
  2651                           	opt stack 0
  2652  000060                     ExternalFlash_MediaInitialize@config:
  2653                           	opt stack 0
  2654  000060                     ExternalFlash_SectorSizeRead@config:
  2655                           	opt stack 0
  2656  000060                     ExternalFlash_CapacityRead@config:
  2657                           	opt stack 0
  2658  000060                     ExternalFlash_MediaDetect@config:
  2659                           	opt stack 0
  2660  000060                     ExternalFlash_WriteProtectStateGet@config:
  2661                           	opt stack 0
  2662  000060                     __sector_from_cluster@fat_cluster:
  2663                           	opt stack 0
  2664  000060                     __get_checksum@log_entry:
  2665                           	opt stack 0
  2666  000060                     ___awdiv@dividend:
  2667                           	opt stack 0
  2668  000060                     ___lwdiv@dividend:
  2669                           	opt stack 0
  2670  000060                     ___lwmod@dividend:
  2671                           	opt stack 0
  2672  000060                     memcpy@d1:
  2673                           	opt stack 0
  2674  000060                     memset@p1:
  2675                           	opt stack 0
  2676  000060                     strlen@s:
  2677                           	opt stack 0
  2678  000060                     strncmp@s1:
  2679                           	opt stack 0
  2680  000060                     ___ftpack@arg:
  2681                           	opt stack 0
  2682  000060                     ___fttol@f1:
  2683                           	opt stack 0
  2684  000060                     ___lmul@multiplier:
  2685                           	opt stack 0
  2686  000060                     ___aldiv@dividend:
  2687                           	opt stack 0
  2688  000060                     ___lldiv@dividend:
  2689                           	opt stack 0
  2690  000060                     __display_usb@header:
  2691                           	opt stack 0
  2692  000060                     __display_outputs@line3:
  2693                           	opt stack 0
  2694                           
  2695                           ; 21 bytes @ 0x0
  2696  000060                     	ds	1
  2697  000061                     ??__fill_buffer_get_status:
  2698  000061                     ??_display_get_character:
  2699  000061                     ??_USBStallEndpoint:
  2700  000061                     system_output_off@output:
  2701                           	opt stack 0
  2702  000061                     schedule_eeprom_write_task@task:
  2703                           	opt stack 0
  2704  000061                     __rtcc_bcd_to_decimal@ones:
  2705                           	opt stack 0
  2706  000061                     __number_of_days@year:
  2707                           	opt stack 0
  2708  000061                     __rtcc_verify_bcd@max:
  2709                           	opt stack 0
  2710  000061                     __buck_set_dutycycle@dutyCycle:
  2711                           	opt stack 0
  2712  000061                     USBTransferOnePacket@data:
  2713                           	opt stack 0
  2714  000061                     SYSTEM_Initialize@pll_startup_counter:
  2715                           	opt stack 0
  2716  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2717                           	opt stack 0
  2718                           
  2719                           ; 2 bytes @ 0x1
  2720  000061                     	ds	1
  2721  000062                     ??_MSDComputeDeviceInAndResidue:
  2722  000062                     ??_strlen:
  2723  000062                     ??__rtcc_verify_bcd:
  2724  000062                     system_output_toggle@output:
  2725                           	opt stack 0
  2726  000062                     __i2c_eeprom_load_default_calibration@index:
  2727                           	opt stack 0
  2728  000062                     schedule_eeprom_write_task@idx:
  2729                           	opt stack 0
  2730  000062                     __display_clear@row:
  2731                           	opt stack 0
  2732  000062                     __rtcc_bcd_to_decimal@input:
  2733                           	opt stack 0
  2734  000062                     __number_of_days@bcd_year:
  2735                           	opt stack 0
  2736  000062                     __buck_set_sync_async@new_dutycycle:
  2737                           	opt stack 0
  2738  000062                     adc_read@channel:
  2739                           	opt stack 0
  2740  000062                     __flash_spi_tx@length:
  2741                           	opt stack 0
  2742  000062                     __flash_spi_tx_tx@command_length:
  2743                           	opt stack 0
  2744  000062                     __flash_spi_tx_rx@command_length:
  2745                           	opt stack 0
  2746  000062                     __get_checksum@byte_array:
  2747                           	opt stack 0
  2748  000062                     ___awdiv@divisor:
  2749                           	opt stack 0
  2750  000062                     ___lwdiv@divisor:
  2751                           	opt stack 0
  2752  000062                     ___lwmod@divisor:
  2753                           	opt stack 0
  2754  000062                     memcpy@s1:
  2755                           	opt stack 0
  2756  000062                     memset@c:
  2757                           	opt stack 0
  2758  000062                     strncmp@s2:
  2759                           	opt stack 0
  2760                           
  2761                           ; 2 bytes @ 0x2
  2762  000062                     	ds	1
  2763  000063                     USBTransferOnePacket@len:
  2764                           	opt stack 0
  2765  000063                     __parse_command_long@data:
  2766                           	opt stack 0
  2767  000063                     __parse_command_calibration@item:
  2768                           	opt stack 0
  2769  000063                     display_get_character@line:
  2770                           	opt stack 0
  2771  000063                     __display_clear@col:
  2772                           	opt stack 0
  2773  000063                     __number_of_days@month:
  2774                           	opt stack 0
  2775  000063                     __rtcc_verify_bcd@value:
  2776                           	opt stack 0
  2777  000063                     rtcc_get_year_decimal@bcd_year:
  2778                           	opt stack 0
  2779  000063                     rtcc_get_month_decimal@bcd_month:
  2780                           	opt stack 0
  2781  000063                     rtcc_get_day_decimal@bcd_day:
  2782                           	opt stack 0
  2783  000063                     rtcc_get_hours_decimal@bcd_hours:
  2784                           	opt stack 0
  2785  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  2786                           	opt stack 0
  2787  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  2788                           	opt stack 0
  2789  000063                     __buck_set_sync_async@mode:
  2790                           	opt stack 0
  2791  000063                     ___ftpack@exp:
  2792                           	opt stack 0
  2793  000063                     SYSTEM_Initialize@pll_startup_counter_3284:
  2794                           	opt stack 0
  2795  000063                     adc_read@adc_value:
  2796                           	opt stack 0
  2797                           
  2798                           ; 2 bytes @ 0x3
  2799  000063                     	ds	1
  2800  000064                     ??_USBTransferOnePacket:
  2801  000064                     ??__fill_buffer_get_display1:
  2802  000064                     ??__fill_buffer_get_display2:
  2803  000064                     ??__flash_spi_tx:
  2804  000064                     ??___fttol:
  2805  000064                     ?__get_time:
  2806                           	opt stack 0
  2807  000064                     ?__get_date:
  2808                           	opt stack 0
  2809  000064                     ?__get_dateTime:
  2810                           	opt stack 0
  2811  000064                     __parse_command_long@cmd:
  2812                           	opt stack 0
  2813  000064                     __parse_command_calibration@dat1:
  2814                           	opt stack 0
  2815  000064                     __rtcc_increment_bcd@min:
  2816                           	opt stack 0
  2817  000064                     __rtcc_decrement_bcd@min:
  2818                           	opt stack 0
  2819  000064                     rtcc_correct_day@day:
  2820                           	opt stack 0
  2821  000064                     __get_checksum@checksum:
  2822                           	opt stack 0
  2823  000064                     ___awdiv@counter:
  2824                           	opt stack 0
  2825  000064                     ___ftpack@sign:
  2826                           	opt stack 0
  2827  000064                     ___lwdiv@counter:
  2828                           	opt stack 0
  2829  000064                     ___lwmod@counter:
  2830                           	opt stack 0
  2831  000064                     __flash_spi_tx_tx@data:
  2832                           	opt stack 0
  2833  000064                     __flash_spi_tx_rx@data:
  2834                           	opt stack 0
  2835  000064                     memcpy@n:
  2836                           	opt stack 0
  2837  000064                     memset@n:
  2838                           	opt stack 0
  2839  000064                     strlen@cp:
  2840                           	opt stack 0
  2841  000064                     strncmp@len:
  2842                           	opt stack 0
  2843  000064                     ___lmul@multiplicand:
  2844                           	opt stack 0
  2845  000064                     ___aldiv@divisor:
  2846                           	opt stack 0
  2847  000064                     ___lldiv@divisor:
  2848                           	opt stack 0
  2849                           
  2850                           ; 4 bytes @ 0x4
  2851  000064                     	ds	1
  2852  000065                     ??___ftpack:
  2853  000065                     ?_i2c_adc_read:
  2854                           	opt stack 0
  2855  000065                     USBStallEndpoint@ep:
  2856                           	opt stack 0
  2857  000065                     __fill_buffer_get_display1@cntr:
  2858                           	opt stack 0
  2859  000065                     __fill_buffer_get_display2@cntr:
  2860                           	opt stack 0
  2861  000065                     __parse_command_calibration@dat2:
  2862                           	opt stack 0
  2863  000065                     __rtcc_increment_bcd@max:
  2864                           	opt stack 0
  2865  000065                     __rtcc_decrement_bcd@max:
  2866                           	opt stack 0
  2867  000065                     rtcc_correct_day@max:
  2868                           	opt stack 0
  2869  000065                     __get_checksum@cntr:
  2870                           	opt stack 0
  2871  000065                     ___awdiv@sign:
  2872                           	opt stack 0
  2873  000065                     __i2c_write@data:
  2874                           	opt stack 0
  2875  000065                     __i2c_read@data:
  2876                           	opt stack 0
  2877  000065                     i2c_display_write_fixed@data:
  2878                           	opt stack 0
  2879  000065                     ___lwdiv@quotient:
  2880                           	opt stack 0
  2881                           
  2882                           ; 2 bytes @ 0x5
  2883  000065                     	ds	1
  2884  000066                     ??_strncmp:
  2885  000066                     ??__rtcc_increment_bcd:
  2886  000066                     ??__rtcc_decrement_bcd:
  2887  000066                     ??__get_time:
  2888  000066                     ??__get_date:
  2889  000066                     __fill_buffer_get_display1@line:
  2890                           	opt stack 0
  2891  000066                     __fill_buffer_get_display2@line:
  2892                           	opt stack 0
  2893  000066                     __parse_command_calibration@dat3:
  2894                           	opt stack 0
  2895  000066                     memcpy@tmp:
  2896                           	opt stack 0
  2897  000066                     USBStallEndpoint@p:
  2898                           	opt stack 0
  2899  000066                     __flash_spi_tx_tx@data_length:
  2900                           	opt stack 0
  2901  000066                     __flash_spi_tx_rx@data_length:
  2902                           	opt stack 0
  2903  000066                     ___awdiv@quotient:
  2904                           	opt stack 0
  2905  000066                     memset@p:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x6
  2909  000066                     	ds	1
  2910  000067                     ??_i2c_adc_read:
  2911  000067                     ??__parse_command_calibration:
  2912  000067                     __fill_buffer_get_display1@position:
  2913                           	opt stack 0
  2914  000067                     __fill_buffer_get_display2@position:
  2915                           	opt stack 0
  2916  000067                     __i2c_write@length:
  2917                           	opt stack 0
  2918  000067                     __i2c_read@length:
  2919                           	opt stack 0
  2920  000067                     i2c_display_write_fixed@length:
  2921                           	opt stack 0
  2922  000067                     __rtcc_increment_bcd@value:
  2923                           	opt stack 0
  2924  000067                     __rtcc_decrement_bcd@value:
  2925                           	opt stack 0
  2926  000067                     utoa@buf:
  2927                           	opt stack 0
  2928  000067                     memcpy@d:
  2929                           	opt stack 0
  2930                           
  2931                           ; 2 bytes @ 0x7
  2932  000067                     	ds	1
  2933  000068                     ??__i2c_read:
  2934  000068                     ??__flash_spi_tx_tx:
  2935  000068                     ??__flash_spi_tx_rx:
  2936  000068                     ??__get_dateTime:
  2937  000068                     USBDeviceInit@i:
  2938                           	opt stack 0
  2939  000068                     USBTransferOnePacket@ep:
  2940                           	opt stack 0
  2941  000068                     MSDErrorHandler@ErrorCase:
  2942                           	opt stack 0
  2943  000068                     __i2c_write@slave_address:
  2944                           	opt stack 0
  2945  000068                     i2c_display_write_fixed@pos:
  2946                           	opt stack 0
  2947  000068                     rtcc_increment_year@year:
  2948                           	opt stack 0
  2949  000068                     rtcc_decrement_year@year:
  2950                           	opt stack 0
  2951  000068                     rtcc_increment_month@month:
  2952                           	opt stack 0
  2953  000068                     rtcc_decrement_month@month:
  2954                           	opt stack 0
  2955  000068                     rtcc_increment_day@day:
  2956                           	opt stack 0
  2957  000068                     rtcc_decrement_day@day:
  2958                           	opt stack 0
  2959  000068                     rtcc_increment_hours@hours:
  2960                           	opt stack 0
  2961  000068                     rtcc_decrement_hours@hours:
  2962                           	opt stack 0
  2963  000068                     rtcc_increment_minutes@minutes:
  2964                           	opt stack 0
  2965  000068                     rtcc_decrement_minutes@minutes:
  2966                           	opt stack 0
  2967  000068                     rtcc_increment_seconds@seconds:
  2968                           	opt stack 0
  2969  000068                     rtcc_decrement_seconds@seconds:
  2970                           	opt stack 0
  2971  000068                     __flash_wakeup@command:
  2972                           	opt stack 0
  2973  000068                     __get_time@hours:
  2974                           	opt stack 0
  2975  000068                     __get_date@year:
  2976                           	opt stack 0
  2977  000068                     ___aldiv@counter:
  2978                           	opt stack 0
  2979  000068                     i2c_adc_read@result:
  2980                           	opt stack 0
  2981  000068                     ___lmul@product:
  2982                           	opt stack 0
  2983  000068                     ___lldiv@quotient:
  2984                           	opt stack 0
  2985                           
  2986                           ; 4 bytes @ 0x8
  2987  000068                     	ds	1
  2988  000069                     MSDErrorHandler@OldMSD_State:
  2989                           	opt stack 0
  2990  000069                     __i2c_write@cntr:
  2991                           	opt stack 0
  2992  000069                     __get_time@minutes:
  2993                           	opt stack 0
  2994  000069                     __get_date@month:
  2995                           	opt stack 0
  2996  000069                     ___aldiv@sign:
  2997                           	opt stack 0
  2998  000069                     ___fttol@sign1:
  2999                           	opt stack 0
  3000  000069                     USBTransferOnePacket@handle:
  3001                           	opt stack 0
  3002  000069                     __parse_command_calibration@parameter:
  3003                           	opt stack 0
  3004  000069                     utoa@val:
  3005                           	opt stack 0
  3006  000069                     memcpy@s:
  3007                           	opt stack 0
  3008                           
  3009                           ; 2 bytes @ 0x9
  3010  000069                     	ds	1
  3011  00006A                     __ic2_display_set_address@address:
  3012                           	opt stack 0
  3013  00006A                     i2c_digipot_backlight@level:
  3014                           	opt stack 0
  3015  00006A                     i2c_adc_start@resolution:
  3016                           	opt stack 0
  3017  00006A                     __get_time@seconds:
  3018                           	opt stack 0
  3019  00006A                     __get_date@day:
  3020                           	opt stack 0
  3021  00006A                     i2c_digipot_reset_on@data_array:
  3022                           	opt stack 0
  3023  00006A                     i2c_digipot_reset_off@data_array:
  3024                           	opt stack 0
  3025  00006A                     i2c_eeprom_write@address:
  3026                           	opt stack 0
  3027  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3028                           	opt stack 0
  3029  00006A                     ___aldiv@quotient:
  3030                           	opt stack 0
  3031  00006A                     ___fttol@lval:
  3032                           	opt stack 0
  3033  00006A                     i2c_display_send_init_sequence@init_sequence:
  3034                           	opt stack 0
  3035                           
  3036                           ; 9 bytes @ 0xA
  3037  00006A                     	ds	1
  3038  00006B                     i2c_adc_start@gain:
  3039                           	opt stack 0
  3040  00006B                     __ic2_display_set_address@data_array:
  3041                           	opt stack 0
  3042  00006B                     i2c_digipot_backlight@data_array:
  3043                           	opt stack 0
  3044  00006B                     __get_time@time:
  3045                           	opt stack 0
  3046  00006B                     __get_date@date:
  3047                           	opt stack 0
  3048  00006B                     utoa@base:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0xB
  3052  00006B                     	ds	1
  3053  00006C                     ??_system_calculate_output_voltage:
  3054  00006C                     ??_system_calculate_input_voltage:
  3055  00006C                     ??_system_calculate_output_current:
  3056  00006C                     ??_system_calculate_input_current:
  3057  00006C                     ?_adc_calculate_temperature:
  3058                           	opt stack 0
  3059  00006C                     ?__flash_get_status:
  3060                           	opt stack 0
  3061  00006C                     i2c_adc_start@channel:
  3062                           	opt stack 0
  3063  00006C                     ___lldiv@counter:
  3064                           	opt stack 0
  3065  00006C                     i2c_eeprom_write@data:
  3066                           	opt stack 0
  3067  00006C                     adc_calculate_temperature@adc_value:
  3068                           	opt stack 0
  3069                           
  3070                           ; 2 bytes @ 0xC
  3071  00006C                     	ds	1
  3072  00006D                     ??__buck_initial_dutycycle:
  3073  00006D                     ?__get_output_power:
  3074                           	opt stack 0
  3075  00006D                     i2c_display_cursor@position:
  3076                           	opt stack 0
  3077  00006D                     i2c_adc_start@configuration_byte:
  3078                           	opt stack 0
  3079  00006D                     __update_modified_time@root:
  3080                           	opt stack 0
  3081  00006D                     utoa@v:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0xD
  3085  00006D                     	ds	1
  3086  00006E                     ?__get_input_power:
  3087                           	opt stack 0
  3088  00006E                     ?___altoft:
  3089                           	opt stack 0
  3090  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3091                           	opt stack 0
  3092  00006E                     i2c_display_cursor@line:
  3093                           	opt stack 0
  3094  00006E                     i2c_eeprom_write@length:
  3095                           	opt stack 0
  3096  00006E                     adc_calculate_temperature@calibration:
  3097                           	opt stack 0
  3098  00006E                     __flash_get_status@command:
  3099                           	opt stack 0
  3100  00006E                     __get_dateTime@year:
  3101                           	opt stack 0
  3102  00006E                     ___fttol@exp1:
  3103                           	opt stack 0
  3104  00006E                     __get_temperature@temperature:
  3105                           	opt stack 0
  3106  00006E                     __buck_initial_dutycycle@dc:
  3107                           	opt stack 0
  3108  00006E                     ___altoft@c:
  3109                           	opt stack 0
  3110                           
  3111                           ; 4 bytes @ 0xE
  3112  00006E                     	ds	1
  3113  00006F                     ??_adc_calculate_temperature:
  3114  00006F                     ??_i2c_eeprom_write:
  3115  00006F                     MSDCheckForErrorCases@DeviceNoData:
  3116                           	opt stack 0
  3117  00006F                     __i2c_read@slave_address:
  3118                           	opt stack 0
  3119  00006F                     i2c_display_cursor@address:
  3120                           	opt stack 0
  3121  00006F                     __get_dateTime@month:
  3122                           	opt stack 0
  3123  00006F                     utoa@c:
  3124                           	opt stack 0
  3125  00006F                     __flash_get_status@status:
  3126                           	opt stack 0
  3127  00006F                     __get_output_power@pwr:
  3128                           	opt stack 0
  3129                           
  3130                           ; 4 bytes @ 0xF
  3131  00006F                     	ds	1
  3132  000070                     MSDCheckForErrorCases@MSDErrorCase:
  3133                           	opt stack 0
  3134  000070                     __i2c_read@cntr:
  3135                           	opt stack 0
  3136  000070                     __get_dateTime@day:
  3137                           	opt stack 0
  3138  000070                     itoa@buf:
  3139                           	opt stack 0
  3140  000070                     system_calculate_input_voltage@tmp:
  3141                           	opt stack 0
  3142  000070                     system_calculate_output_voltage@tmp:
  3143                           	opt stack 0
  3144  000070                     system_calculate_input_current@tmp:
  3145                           	opt stack 0
  3146  000070                     system_calculate_output_current@tmp:
  3147                           	opt stack 0
  3148  000070                     __get_input_power@pwr:
  3149                           	opt stack 0
  3150                           
  3151                           ; 4 bytes @ 0x10
  3152  000070                     	ds	1
  3153  000071                     __get_dateTime@hours:
  3154                           	opt stack 0
  3155  000071                     i2c_eeprom_read@address:
  3156                           	opt stack 0
  3157  000071                     flash_is_busy@status:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x11
  3161  000071                     	ds	1
  3162  000072                     ??___altoft:
  3163  000072                     __buck_start@dutycycle:
  3164                           	opt stack 0
  3165  000072                     __get_dateTime@minutes:
  3166                           	opt stack 0
  3167  000072                     itoa@val:
  3168                           	opt stack 0
  3169  000072                     i2c_eeprom_write@dat:
  3170                           	opt stack 0
  3171                           
  3172                           ; 17 bytes @ 0x12
  3173  000072                     	ds	1
  3174  000073                     __buck_start@mode:
  3175                           	opt stack 0
  3176  000073                     __get_dateTime@seconds:
  3177                           	opt stack 0
  3178  000073                     i2c_eeprom_read@data:
  3179                           	opt stack 0
  3180  000073                     __flash_copy_page_to_buffer@page:
  3181                           	opt stack 0
  3182  000073                     __flash_compare_page_to_buffer@page:
  3183                           	opt stack 0
  3184  000073                     __flash_write_to_buffer@start:
  3185                           	opt stack 0
  3186  000073                     __flash_write_page_from_buffer@page:
  3187                           	opt stack 0
  3188  000073                     flash_partial_read@page:
  3189                           	opt stack 0
  3190  000073                     __flash_set_page_size@command:
  3191                           	opt stack 0
  3192                           
  3193                           ; 4 bytes @ 0x13
  3194  000073                     	ds	1
  3195  000074                     ??_log_collect_data:
  3196  000074                     __buck_start@startup_dutycycle:
  3197                           	opt stack 0
  3198  000074                     itoa@base:
  3199                           	opt stack 0
  3200  000074                     __get_dateTime@datetime:
  3201                           	opt stack 0
  3202  000074                     __display_usb@usb_off:
  3203                           	opt stack 0
  3204                           
  3205                           ; 17 bytes @ 0x14
  3206  000074                     	ds	1
  3207  000075                     i2c_eeprom_read@length:
  3208                           	opt stack 0
  3209  000075                     __buck_start@cntr:
  3210                           	opt stack 0
  3211  000075                     __flash_copy_page_to_buffer@buffer:
  3212                           	opt stack 0
  3213  000075                     __flash_compare_page_to_buffer@buffer:
  3214                           	opt stack 0
  3215  000075                     __flash_write_page_from_buffer@buffer:
  3216                           	opt stack 0
  3217  000075                     __flash_write_to_buffer@data:
  3218                           	opt stack 0
  3219  000075                     flash_partial_read@start:
  3220                           	opt stack 0
  3221  000075                     adc_calculate_temperature@tmp:
  3222                           	opt stack 0
  3223  000075                     __display_outputs@line4:
  3224                           	opt stack 0
  3225                           
  3226                           ; 21 bytes @ 0x15
  3227  000075                     	ds	1
  3228  000076                     ??_i2c_eeprom_read:
  3229  000076                     ??__buck_operate_local:
  3230  000076                     ??__flash_copy_page_to_buffer:
  3231  000076                     ??__flash_compare_page_to_buffer:
  3232  000076                     ??__flash_write_page_from_buffer:
  3233  000076                     ___altoft@exp:
  3234                           	opt stack 0
  3235  000076                     __buck_operate_remote$8740:
  3236                           	opt stack 0
  3237  000076                     itoa@cp:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0x16
  3241  000076                     	ds	1
  3242  000077                     i2c_eeprom_read@addr:
  3243                           	opt stack 0
  3244  000077                     __flash_set_page_size@size:
  3245                           	opt stack 0
  3246  000077                     ___altoft@sign:
  3247                           	opt stack 0
  3248  000077                     __flash_write_to_buffer@data_length:
  3249                           	opt stack 0
  3250  000077                     flash_partial_read@length:
  3251                           	opt stack 0
  3252                           
  3253                           ; 2 bytes @ 0x17
  3254  000077                     	ds	1
  3255  000078                     i2c_eeprom_read@slave_address:
  3256                           	opt stack 0
  3257  000078                     __display_itoa@value:
  3258                           	opt stack 0
  3259  000078                     log_collect_data@temp:
  3260                           	opt stack 0
  3261  000078                     log_generate_entry@log_entry:
  3262                           	opt stack 0
  3263                           
  3264                           ; 2 bytes @ 0x18
  3265  000078                     	ds	1
  3266  000079                     ??_i2c_eeprom_read_calibration:
  3267  000079                     __flash_write_to_buffer@buffer:
  3268                           	opt stack 0
  3269  000079                     __flash_compare_page_to_buffer@status:
  3270                           	opt stack 0
  3271  000079                     flash_partial_read@data:
  3272                           	opt stack 0
  3273  000079                     __flash_copy_page_to_buffer@command:
  3274                           	opt stack 0
  3275  000079                     __flash_write_page_from_buffer@command:
  3276                           	opt stack 0
  3277                           
  3278                           ; 4 bytes @ 0x19
  3279  000079                     	ds	1
  3280  00007A                     ??_log_generate_entry:
  3281  00007A                     __display_itoa@decimals:
  3282                           	opt stack 0
  3283  00007A                     __flash_write_to_buffer@command:
  3284                           	opt stack 0
  3285                           
  3286                           ; 4 bytes @ 0x1A
  3287  00007A                     	ds	1
  3288  00007B                     ??_flash_partial_read:
  3289  00007B                     __buck_operate_local$8739:
  3290                           	opt stack 0
  3291  00007B                     __display_itoa@text:
  3292                           	opt stack 0
  3293  00007B                     i2c_eeprom_read_calibration@buffer:
  3294                           	opt stack 0
  3295  00007B                     __flash_compare_page_to_buffer@command:
  3296                           	opt stack 0
  3297                           
  3298                           ; 4 bytes @ 0x1B
  3299  00007B                     	ds	1
  3300  00007C                     __buck_operate_local@tmp_dutycycle:
  3301                           	opt stack 0
  3302                           
  3303                           ; 1 bytes @ 0x1C
  3304  00007C                     	ds	1
  3305  00007D                     ??__display_itoa:
  3306  00007D                     __buck_operate_local@cntr:
  3307                           	opt stack 0
  3308                           
  3309                           ; 1 bytes @ 0x1D
  3310  00007D                     	ds	1
  3311  00007E                     
  3312                           ; 1 bytes @ 0x1E
  3313  00007E                     	ds	1
  3314  00007F                     i2c_eeprom_read_calibration@addr:
  3315                           	opt stack 0
  3316  00007F                     flash_page_write@page:
  3317                           	opt stack 0
  3318  00007F                     flash_partial_write@page:
  3319                           	opt stack 0
  3320  00007F                     flash_partial_read@command:
  3321                           	opt stack 0
  3322                           
  3323                           ; 4 bytes @ 0x1F
  3324  00007F                     	ds	2
  3325  000081                     i2c_eeprom_read_calibration@cntr:
  3326                           	opt stack 0
  3327  000081                     flash_page_write@data:
  3328                           	opt stack 0
  3329  000081                     flash_partial_write@start:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x21
  3333  000081                     	ds	2
  3334  000083                     i2c_eeprom_write@slave_address:
  3335                           	opt stack 0
  3336  000083                     flash_page_write@match:
  3337                           	opt stack 0
  3338  000083                     flash_partial_write@length:
  3339                           	opt stack 0
  3340  000083                     flash_partial_read@address:
  3341                           	opt stack 0
  3342  000083                     __display_itoa@tmp:
  3343                           	opt stack 0
  3344                           
  3345                           ; 10 bytes @ 0x23
  3346  000083                     	ds	1
  3347  000084                     i2c_eeprom_write@cntr:
  3348                           	opt stack 0
  3349  000084                     ExternalFlash_SectorWrite@config:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x24
  3353  000084                     	ds	1
  3354  000085                     ??__write_calibration:
  3355  000085                     flash_partial_write@data:
  3356                           	opt stack 0
  3357  000085                     rtcc_write_eeprom@date:
  3358                           	opt stack 0
  3359  000085                     __display_usb@low:
  3360                           	opt stack 0
  3361                           
  3362                           ; 16 bytes @ 0x25
  3363  000085                     	ds	1
  3364  000086                     ExternalFlash_SectorWrite@sector_addr:
  3365                           	opt stack 0
  3366                           
  3367                           ; 4 bytes @ 0x26
  3368  000086                     	ds	1
  3369  000087                     ??__root_is_available:
  3370  000087                     ?__get_empty_cluster:
  3371                           	opt stack 0
  3372  000087                     ?_fat_get_empty_clusters:
  3373                           	opt stack 0
  3374  000087                     ?__read_fat:
  3375                           	opt stack 0
  3376  000087                     flash_partial_write@match:
  3377                           	opt stack 0
  3378  000087                     flash_page_read@page:
  3379                           	opt stack 0
  3380  000087                     __get_empty_cluster@first_cluster:
  3381                           	opt stack 0
  3382  000087                     fat_get_empty_clusters@maximum:
  3383                           	opt stack 0
  3384  000087                     __read_fat@cluster:
  3385                           	opt stack 0
  3386  000087                     __read_root@data:
  3387                           	opt stack 0
  3388  000087                     fat_find_file@name:
  3389                           	opt stack 0
  3390  000087                     __write_calibration@buffer:
  3391                           	opt stack 0
  3392                           
  3393                           ; 16 bytes @ 0x27
  3394  000087                     	ds	1
  3395  000088                     __root_is_available@root_sector:
  3396                           	opt stack 0
  3397  000088                     __write_fat@cluster:
  3398                           	opt stack 0
  3399  000088                     __write_root@data:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x28
  3403  000088                     	ds	1
  3404  000089                     ??__read_root:
  3405  000089                     flash_page_read@data:
  3406                           	opt stack 0
  3407  000089                     __get_empty_cluster@fat_sector:
  3408                           	opt stack 0
  3409  000089                     fat_get_empty_clusters@fat_sector:
  3410                           	opt stack 0
  3411  000089                     __read_fat@fat_sector:
  3412                           	opt stack 0
  3413  000089                     fat_find_file@extension:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x29
  3417  000089                     	ds	1
  3418  00008A                     ??__write_root:
  3419  00008A                     ExternalFlash_SectorWrite@buffer:
  3420                           	opt stack 0
  3421  00008A                     __root_is_available@offset:
  3422                           	opt stack 0
  3423  00008A                     __write_fat@value:
  3424                           	opt stack 0
  3425  00008A                     __read_root@root_sector:
  3426                           	opt stack 0
  3427  00008A                     __display_outputs@low:
  3428                           	opt stack 0
  3429                           
  3430                           ; 16 bytes @ 0x2A
  3431  00008A                     	ds	1
  3432  00008B                     __parse_command_short@cmd:
  3433                           	opt stack 0
  3434  00008B                     rtcc_read_eeprom@error_found:
  3435                           	opt stack 0
  3436  00008B                     ExternalFlash_SectorRead@config:
  3437                           	opt stack 0
  3438  00008B                     __get_empty_cluster@offset:
  3439                           	opt stack 0
  3440  00008B                     fat_get_empty_clusters@offset:
  3441                           	opt stack 0
  3442  00008B                     __read_fat@offset:
  3443                           	opt stack 0
  3444  00008B                     __write_root@root_sector:
  3445                           	opt stack 0
  3446  00008B                     fat_find_file@buffer:
  3447                           	opt stack 0
  3448                           
  3449                           ; 11 bytes @ 0x2B
  3450  00008B                     	ds	1
  3451  00008C                     ??_APP_DeviceCustomHIDTasks:
  3452  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3453                           	opt stack 0
  3454  00008C                     __root_is_available@file_number:
  3455                           	opt stack 0
  3456  00008C                     __write_fat@fat_sector:
  3457                           	opt stack 0
  3458  00008C                     __read_root@offset:
  3459                           	opt stack 0
  3460  00008C                     rtcc_read_eeprom@date:
  3461                           	opt stack 0
  3462                           
  3463                           ; 6 bytes @ 0x2C
  3464  00008C                     	ds	1
  3465  00008D                     __display_itoa@len:
  3466                           	opt stack 0
  3467  00008D                     __root_is_available@first_byte:
  3468                           	opt stack 0
  3469  00008D                     ExternalFlash_SectorWrite@page:
  3470                           	opt stack 0
  3471  00008D                     __get_empty_cluster@value:
  3472                           	opt stack 0
  3473  00008D                     fat_get_empty_clusters@value:
  3474                           	opt stack 0
  3475  00008D                     __read_fat@value:
  3476                           	opt stack 0
  3477  00008D                     __write_root@offset:
  3478                           	opt stack 0
  3479  00008D                     ExternalFlash_SectorRead@sector_addr:
  3480                           	opt stack 0
  3481                           
  3482                           ; 4 bytes @ 0x2D
  3483  00008D                     	ds	1
  3484  00008E                     __display_itoa@missing:
  3485                           	opt stack 0
  3486  00008E                     __get_available_root_entry@file_number:
  3487                           	opt stack 0
  3488  00008E                     __read_root@slot:
  3489                           	opt stack 0
  3490  00008E                     __write_fat@offset:
  3491                           	opt stack 0
  3492                           
  3493                           ; 2 bytes @ 0x2E
  3494  00008E                     	ds	1
  3495  00008F                     ??_MSDWriteHandler:
  3496  00008F                     __display_itoa@pos:
  3497                           	opt stack 0
  3498  00008F                     __write_root@slot:
  3499                           	opt stack 0
  3500  00008F                     __get_empty_cluster@cluster:
  3501                           	opt stack 0
  3502  00008F                     fat_get_empty_clusters@empty_clusters:
  3503                           	opt stack 0
  3504                           
  3505                           ; 2 bytes @ 0x2F
  3506  00008F                     	ds	1
  3507  000090                     ??__display_charger:
  3508  000090                     ??__display_efficiency:
  3509  000090                     __display_inout@line1:
  3510                           	opt stack 0
  3511  000090                     __display_temperature@header:
  3512                           	opt stack 0
  3513                           
  3514                           ; 20 bytes @ 0x30
  3515  000090                     	ds	1
  3516  000091                     ExternalFlash_SectorRead@buffer:
  3517                           	opt stack 0
  3518  000091                     fat_get_empty_clusters@cluster:
  3519                           	opt stack 0
  3520  000091                     fat_append_to_file@number_of_bytes:
  3521                           	opt stack 0
  3522                           
  3523                           ; 2 bytes @ 0x31
  3524  000091                     	ds	1
  3525  000092                     rtcc_read_eeprom@buffer:
  3526                           	opt stack 0
  3527  000092                     __display_efficiency@header:
  3528                           	opt stack 0
  3529                           
  3530                           ; 19 bytes @ 0x32
  3531  000092                     	ds	1
  3532  000093                     ExternalFlash_SectorRead@page:
  3533                           	opt stack 0
  3534  000093                     fat_append_to_file@data:
  3535                           	opt stack 0
  3536                           
  3537                           ; 2 bytes @ 0x33
  3538  000093                     	ds	1
  3539  000094                     APP_DeviceCustomHIDTasks@return_value:
  3540                           	opt stack 0
  3541                           
  3542                           ; 2 bytes @ 0x34
  3543  000094                     	ds	1
  3544  000095                     ??_MSDReadHandler:
  3545  000095                     ??_fat_append_to_file:
  3546  000095                     __display_usb@usb_on:
  3547                           	opt stack 0
  3548                           
  3549                           ; 16 bytes @ 0x35
  3550  000095                     	ds	1
  3551  000096                     APP_DeviceCustomHIDTasks@idx:
  3552                           	opt stack 0
  3553  000096                     fat_find_file@slot:
  3554                           	opt stack 0
  3555                           
  3556                           ; 1 bytes @ 0x36
  3557  000096                     	ds	1
  3558  000097                     __write_calibration@addr:
  3559                           	opt stack 0
  3560  000097                     fat_find_file@sector:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x37
  3564  000097                     	ds	2
  3565  000099                     ??_MSDProcessCommandMediaPresent:
  3566  000099                     __write_calibration@ptr:
  3567                           	opt stack 0
  3568  000099                     fat_find_file@offset:
  3569                           	opt stack 0
  3570                           
  3571                           ; 2 bytes @ 0x39
  3572  000099                     	ds	1
  3573  00009A                     __display_outputs@header:
  3574                           	opt stack 0
  3575                           
  3576                           ; 14 bytes @ 0x3A
  3577  00009A                     	ds	1
  3578  00009B                     __write_calibration@index:
  3579                           	opt stack 0
  3580  00009B                     _MSDProcessCommandMediaPresent$2712:
  3581                           	opt stack 0
  3582  00009B                     fat_create_file@name:
  3583                           	opt stack 0
  3584                           
  3585                           ; 2 bytes @ 0x3B
  3586  00009B                     	ds	1
  3587  00009C                     __write_calibration@cntr:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x3C
  3591  00009C                     	ds	1
  3592  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3593                           	opt stack 0
  3594  00009D                     fat_create_file@extension:
  3595                           	opt stack 0
  3596  00009D                     fat_append_to_file@sector:
  3597                           	opt stack 0
  3598                           
  3599                           ; 2 bytes @ 0x3D
  3600  00009D                     	ds	1
  3601  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3602                           	opt stack 0
  3603                           
  3604                           ; 4 bytes @ 0x3E
  3605  00009E                     	ds	1
  3606  00009F                     fat_create_file@size:
  3607                           	opt stack 0
  3608  00009F                     fat_append_to_file@file_size:
  3609                           	opt stack 0
  3610                           
  3611                           ; 4 bytes @ 0x3F
  3612  00009F                     	ds	3
  3613  0000A2                     MSDProcessCommandMediaPresent@capacity:
  3614                           	opt stack 0
  3615  0000A2                     __display_inout@line2:
  3616                           	opt stack 0
  3617                           
  3618                           ; 18 bytes @ 0x42
  3619  0000A2                     	ds	1
  3620  0000A3                     ??_fat_create_file:
  3621  0000A3                     fat_append_to_file@new_cluster:
  3622                           	opt stack 0
  3623                           
  3624                           ; 2 bytes @ 0x43
  3625  0000A3                     	ds	1
  3626  0000A4                     __display_temperature@external1:
  3627                           	opt stack 0
  3628                           
  3629                           ; 12 bytes @ 0x44
  3630  0000A4                     	ds	1
  3631  0000A5                     __display_usb@cntr:
  3632                           	opt stack 0
  3633  0000A5                     fat_append_to_file@fat_cluster:
  3634                           	opt stack 0
  3635  0000A5                     __display_efficiency@source:
  3636                           	opt stack 0
  3637                           
  3638                           ; 19 bytes @ 0x45
  3639  0000A5                     	ds	1
  3640  0000A6                     MSDProcessCommandMediaPresent@i:
  3641                           	opt stack 0
  3642                           
  3643                           ; 1 bytes @ 0x46
  3644  0000A6                     	ds	1
  3645  0000A7                     ??_MSDProcessCommand:
  3646  0000A7                     fat_create_file@next_cluster:
  3647                           	opt stack 0
  3648  0000A7                     fat_append_to_file@offset:
  3649                           	opt stack 0
  3650                           
  3651                           ; 2 bytes @ 0x47
  3652  0000A7                     	ds	1
  3653  0000A8                     __display_outputs@mode:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x48
  3657  0000A8                     	ds	1
  3658  0000A9                     __display_outputs@cntr:
  3659                           	opt stack 0
  3660  0000A9                     fat_append_to_file@file_number:
  3661                           	opt stack 0
  3662  0000A9                     fat_create_file@cluster_count:
  3663                           	opt stack 0
  3664                           
  3665                           ; 2 bytes @ 0x49
  3666  0000A9                     	ds	1
  3667  0000AA                     fat_append_to_file@length:
  3668                           	opt stack 0
  3669                           
  3670                           ; 2 bytes @ 0x4A
  3671  0000AA                     	ds	1
  3672  0000AB                     fat_create_file@root_slot:
  3673                           	opt stack 0
  3674                           
  3675                           ; 1 bytes @ 0x4B
  3676  0000AB                     	ds	1
  3677  0000AC                     ??_MSDTasks:
  3678  0000AC                     fat_create_file@number_of_clusters:
  3679                           	opt stack 0
  3680  0000AC                     fat_append_to_file@position:
  3681                           	opt stack 0
  3682                           
  3683                           ; 4 bytes @ 0x4C
  3684  0000AC                     	ds	1
  3685  0000AD                     _MSDTasks$2694:
  3686                           	opt stack 0
  3687                           
  3688                           ; 2 bytes @ 0x4D
  3689  0000AD                     	ds	1
  3690  0000AE                     fat_create_file@cluster:
  3691                           	opt stack 0
  3692                           
  3693                           ; 2 bytes @ 0x4E
  3694  0000AE                     	ds	1
  3695  0000AF                     _MSDTasks$2695:
  3696                           	opt stack 0
  3697                           
  3698                           ; 2 bytes @ 0x4F
  3699  0000AF                     	ds	1
  3700  0000B0                     __display_temperature@external2:
  3701                           	opt stack 0
  3702  0000B0                     fat_create_file@root_entry:
  3703                           	opt stack 0
  3704  0000B0                     fat_append_to_file@root:
  3705                           	opt stack 0
  3706                           
  3707                           ; 32 bytes @ 0x50
  3708  0000B0                     	ds	1
  3709  0000B1                     MSDTasks@i:
  3710                           	opt stack 0
  3711                           
  3712                           ; 1 bytes @ 0x51
  3713  0000B1                     	ds	1
  3714  0000B2                     
  3715                           ; 1 bytes @ 0x52
  3716  0000B2                     	ds	2
  3717  0000B4                     __display_inout@line4:
  3718                           	opt stack 0
  3719                           
  3720                           ; 14 bytes @ 0x54
  3721  0000B4                     	ds	4
  3722  0000B8                     __display_efficiency@footer:
  3723                           	opt stack 0
  3724                           
  3725                           ; 14 bytes @ 0x58
  3726  0000B8                     	ds	4
  3727  0000BC                     __display_temperature@internal:
  3728                           	opt stack 0
  3729                           
  3730                           ; 11 bytes @ 0x5C
  3731  0000BC                     	ds	6
  3732  0000C2                     __display_inout@line3:
  3733                           	opt stack 0
  3734                           
  3735                           ; 3 bytes @ 0x62
  3736  0000C2                     	ds	3
  3737  0000C5                     __display_inout@cntr:
  3738                           	opt stack 0
  3739                           
  3740                           ; 1 bytes @ 0x65
  3741  0000C5                     	ds	1
  3742  0000C6                     __display_efficiency@efficiency:
  3743                           	opt stack 0
  3744                           
  3745                           ; 3 bytes @ 0x66
  3746  0000C6                     	ds	1
  3747  0000C7                     __display_temperature@cntr:
  3748                           	opt stack 0
  3749                           
  3750                           ; 1 bytes @ 0x67
  3751  0000C7                     	ds	2
  3752  0000C9                     __display_efficiency@panel:
  3753                           	opt stack 0
  3754                           
  3755                           ; 4 bytes @ 0x69
  3756  0000C9                     	ds	4
  3757  0000CD                     __display_efficiency@battery:
  3758                           	opt stack 0
  3759                           
  3760                           ; 4 bytes @ 0x6D
  3761  0000CD                     	ds	3
  3762  0000D0                     
  3763                           ; 1 bytes @ 0x70
  3764  0000D0                     	ds	1
  3765  0000D1                     __display_efficiency@cntr:
  3766                           	opt stack 0
  3767                           
  3768                           ; 1 bytes @ 0x71
  3769  0000D1                     	ds	1
  3770  0000D2                     ??_display_prepare:
  3771                           
  3772                           ; 1 bytes @ 0x72
  3773  0000D2                     	ds	2
  3774  0000D4                     display_prepare@mode:
  3775                           	opt stack 0
  3776                           
  3777                           ; 1 bytes @ 0x74
  3778  0000D4                     	ds	1
  3779  0000D5                     ??_main:
  3780                           
  3781                           ; 1 bytes @ 0x75
  3782  0000D5                     	ds	2
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           postdec1	equ	0xFE5
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           
  3793                           	psect	cstackCOMRAM
  3794  00002E                     __pcstackCOMRAM:
  3795                           	opt stack 0
  3796  00002E                     ??_USBStdGetDscHandler:
  3797  00002E                     ??_USBStdGetStatusHandler:
  3798  00002E                     ?i2_USBTransferOnePacket:
  3799                           	opt stack 0
  3800  00002E                     ?i2_ExternalFlash_MediaInitialize:
  3801                           	opt stack 0
  3802  00002E                     USBConfigureEndpoint@direction:
  3803                           	opt stack 0
  3804  00002E                     USBCtrlTrfTxService@byteToSend:
  3805                           	opt stack 0
  3806  00002E                     USBCtrlTrfRxService@i:
  3807                           	opt stack 0
  3808  00002E                     i2USBTransferOnePacket@dir:
  3809                           	opt stack 0
  3810  00002E                     i2USBStallEndpoint@dir:
  3811                           	opt stack 0
  3812  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  3813                           	opt stack 0
  3814  00002E                     i2ExternalFlash_MediaInitialize@config:
  3815                           	opt stack 0
  3816  00002E                     i2ExternalFlash_MediaDetect@config:
  3817                           	opt stack 0
  3818  00002E                     i2memcpy@d1:
  3819                           	opt stack 0
  3820  00002E                     i2memset@p1:
  3821                           	opt stack 0
  3822                           
  3823                           ; 2 bytes @ 0x0
  3824  00002E                     	ds	1
  3825  00002F                     ??_USBConfigureEndpoint:
  3826  00002F                     ??i2_USBStallEndpoint:
  3827  00002F                     USBCtrlTrfRxService@byteToRead:
  3828                           	opt stack 0
  3829  00002F                     USBCtrlTrfInHandler@lastDTS:
  3830                           	opt stack 0
  3831  00002F                     USBStdGetStatusHandler@p:
  3832                           	opt stack 0
  3833  00002F                     i2USBTransferOnePacket@data:
  3834                           	opt stack 0
  3835                           
  3836                           ; 2 bytes @ 0x1
  3837  00002F                     	ds	1
  3838  000030                     i2SYSTEM_Initialize@pll_startup_counter_3284:
  3839                           	opt stack 0
  3840  000030                     i2memcpy@s1:
  3841                           	opt stack 0
  3842  000030                     i2memset@c:
  3843                           	opt stack 0
  3844                           
  3845                           ; 2 bytes @ 0x2
  3846  000030                     	ds	1
  3847  000031                     i2USBTransferOnePacket@len:
  3848                           	opt stack 0
  3849                           
  3850                           ; 1 bytes @ 0x3
  3851  000031                     	ds	1
  3852  000032                     ??i2_USBTransferOnePacket:
  3853  000032                     i2SYSTEM_Initialize@state:
  3854                           	opt stack 0
  3855  000032                     i2memcpy@n:
  3856                           	opt stack 0
  3857  000032                     i2memset@n:
  3858                           	opt stack 0
  3859                           
  3860                           ; 2 bytes @ 0x4
  3861  000032                     	ds	1
  3862  000033                     USBConfigureEndpoint@EPNum:
  3863                           	opt stack 0
  3864  000033                     i2USBStallEndpoint@ep:
  3865                           	opt stack 0
  3866                           
  3867                           ; 1 bytes @ 0x5
  3868  000033                     	ds	1
  3869  000034                     USBConfigureEndpoint@handle:
  3870                           	opt stack 0
  3871  000034                     i2USBStallEndpoint@p:
  3872                           	opt stack 0
  3873  000034                     i2memcpy@d:
  3874                           	opt stack 0
  3875  000034                     i2memset@p:
  3876                           	opt stack 0
  3877                           
  3878                           ; 2 bytes @ 0x6
  3879  000034                     	ds	2
  3880  000036                     USBEnableEndpoint@options:
  3881                           	opt stack 0
  3882  000036                     i2USBDeviceInit@i:
  3883                           	opt stack 0
  3884  000036                     i2USBTransferOnePacket@ep:
  3885                           	opt stack 0
  3886  000036                     i2memcpy@s:
  3887                           	opt stack 0
  3888                           
  3889                           ; 2 bytes @ 0x8
  3890  000036                     	ds	1
  3891  000037                     USBEnableEndpoint@p:
  3892                           	opt stack 0
  3893  000037                     i2USBTransferOnePacket@handle:
  3894                           	opt stack 0
  3895                           
  3896                           ; 2 bytes @ 0x9
  3897  000037                     	ds	1
  3898  000038                     i2memcpy@tmp:
  3899                           	opt stack 0
  3900                           
  3901                           ; 1 bytes @ 0xA
  3902  000038                     	ds	1
  3903  000039                     ??_USBMSDInit:
  3904  000039                     USBEnableEndpoint@ep:
  3905                           	opt stack 0
  3906  000039                     _USBCheckMSDRequest$2640:
  3907                           	opt stack 0
  3908  000039                     MSDTransferTerminated@handle:
  3909                           	opt stack 0
  3910                           
  3911                           ; 2 bytes @ 0xB
  3912  000039                     	ds	1
  3913  00003A                     
  3914                           ; 1 bytes @ 0xC
  3915  00003A                     	ds	1
  3916  00003B                     _USBCheckMSDRequest$2641:
  3917                           	opt stack 0
  3918  00003B                     _MSDTransferTerminated$2729:
  3919                           	opt stack 0
  3920                           
  3921                           ; 2 bytes @ 0xD
  3922  00003B                     	ds	1
  3923  00003C                     
  3924                           ; 1 bytes @ 0xE
  3925  00003C                     	ds	1
  3926  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3927                           	opt stack 0
  3928                           
  3929                           ; 2 bytes @ 0xF
  3930  00003D                     	ds	2
  3931  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3932                           	opt stack 0
  3933                           
  3934                           ; 2 bytes @ 0x11
  3935  00003F                     	ds	2
  3936  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3937                           	opt stack 0
  3938                           
  3939                           ; 2 bytes @ 0x13
  3940  000041                     	ds	2
  3941  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3942                           
  3943                           ; 1 bytes @ 0x15
  3944  000043                     	ds	2
  3945  000045                     ??_USBStdFeatureReqHandler:
  3946  000045                     USBStdSetCfgHandler@i:
  3947                           	opt stack 0
  3948                           
  3949                           ; 1 bytes @ 0x17
  3950  000045                     	ds	1
  3951  000046                     USBStdFeatureReqHandler@pUEP:
  3952                           	opt stack 0
  3953                           
  3954                           ; 2 bytes @ 0x18
  3955  000046                     	ds	2
  3956  000048                     USBStdFeatureReqHandler@current_ep_data:
  3957                           	opt stack 0
  3958                           
  3959                           ; 1 bytes @ 0x1A
  3960  000048                     	ds	1
  3961  000049                     USBStdFeatureReqHandler@p:
  3962                           	opt stack 0
  3963                           
  3964                           ; 2 bytes @ 0x1B
  3965  000049                     	ds	2
  3966  00004B                     ??_USBCtrlEPService:
  3967  00004B                     
  3968                           ; 1 bytes @ 0x1D
  3969  00004B                     	ds	1
  3970  00004C                     USBDeviceTasks@i:
  3971                           	opt stack 0
  3972                           
  3973                           ; 1 bytes @ 0x1E
  3974  00004C                     	ds	1
  3975  00004D                     ??_SYS_InterruptHigh:
  3976                           
  3977                           ; 1 bytes @ 0x1F
  3978  00004D                     	ds	14
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           postinc0	equ	0xFEE
  3984                           wreg	equ	0xFE8
  3985                           postdec1	equ	0xFE5
  3986                           fsr1h	equ	0xFE2
  3987                           fsr1l	equ	0xFE1
  3988                           
  3989 ;;
  3990 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3991 ;;
  3992 ;; *************** function _main *****************
  3993 ;; Defined at:
  3994 ;;		line 50 in file "main.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels required when called:   22
  4014 ;; This function calls:
  4015 ;;		_APP_DeviceCustomHIDTasks
  4016 ;;		_APP_DeviceMSDTasks
  4017 ;;		_SYSTEM_Initialize
  4018 ;;		_USBDeviceAttach
  4019 ;;		_USBDeviceInit
  4020 ;;		_adc_calculate_temperature
  4021 ;;		_adc_calibrate
  4022 ;;		_adc_read
  4023 ;;		_buck_get_mode
  4024 ;;		_buck_operate
  4025 ;;		_display_prepare
  4026 ;;		_display_update
  4027 ;;		_i2c_adc_read
  4028 ;;		_i2c_adc_start
  4029 ;;		_i2c_eeprom_tasks
  4030 ;;		_log_collect_data
  4031 ;;		_log_get_number_of_samples
  4032 ;;		_log_start_new
  4033 ;;		_log_write_to_disk
  4034 ;;		_system_calculate_input_current
  4035 ;;		_system_calculate_input_voltage
  4036 ;;		_system_calculate_output_current
  4037 ;;		_system_calculate_output_voltage
  4038 ;;		_system_init
  4039 ;;		_system_output_off
  4040 ;;		_ui_get_status
  4041 ;;		_ui_run
  4042 ;; This function is called by:
  4043 ;;		Startup code after reset
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text0
  4048  00B816                     __ptext0:
  4049                           	opt stack 0
  4050  00B816                     _main:
  4051                           	opt stack 9
  4052                           
  4053                           ;main.c: 55: system_init();
  4054                           
  4055                           ; BSR set to: 1
  4056                           ;incstack = 0
  4057  00B816  EC79  F07B         	call	_system_init	;wreg free
  4058                           
  4059                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4060  00B81A  0E00               	movlw	0
  4061  00B81C  EC21  F095         	call	_SYSTEM_Initialize
  4062                           
  4063                           ;main.c: 59: USBDeviceInit();
  4064  00B820  ECD1  F070         	call	_USBDeviceInit	;wreg free
  4065                           
  4066                           ;main.c: 60: USBDeviceAttach();
  4067  00B824  EC01  F09C         	call	_USBDeviceAttach	;wreg free
  4068  00B828                     l22795:
  4069                           
  4070                           ;main.c: 63: {
  4071                           ;main.c: 86: APP_DeviceMSDTasks();
  4072  00B828  EC12  F0A1         	call	_APP_DeviceMSDTasks	;wreg free
  4073                           
  4074                           ;main.c: 88: if(!os.done)
  4075  00B82C  0102               	movlb	2	; () banked
  4076  00B82E  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4077  00B830  A4D8               	btfss	status,2,c
  4078  00B832  D7FA               	goto	l22795
  4079                           
  4080                           ; BSR set to: 2
  4081  00B834  0004               	clrwdt		;# 
  4082                           
  4083                           ;main.c: 96: if(os.output_voltage<12000)
  4084  00B836  0102               	movlb	2	; () banked
  4085  00B838  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4086  00B83A  D008               	goto	l22803
  4087  00B83C  0EE0               	movlw	224
  4088  00B83E  0102               	movlb	2	; () banked
  4089  00B840  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4090  00B842  0E2E               	movlw	46
  4091  00B844  0102               	movlb	2	; () banked
  4092  00B846  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4093  00B848  B0D8               	btfsc	status,0,c
  4094  00B84A  D003               	goto	l22805
  4095  00B84C                     l22803:
  4096                           
  4097                           ; BSR set to: 2
  4098                           ;main.c: 97: {
  4099                           ;main.c: 98: system_output_off(OUTPUT_USB);
  4100  00B84C  0E10               	movlw	16
  4101  00B84E  ECE5  F098         	call	_system_output_off
  4102  00B852                     l22805:
  4103                           
  4104                           ;main.c: 99: }
  4105                           ;main.c: 100: if(os.output_voltage<-1)
  4106  00B852  0102               	movlb	2	; () banked
  4107  00B854  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4108  00B856  D013               	goto	l22809
  4109  00B858  0102               	movlb	2	; () banked
  4110  00B85A  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4111  00B85C  0EFF               	movlw	255
  4112  00B85E  0102               	movlb	2	; () banked
  4113  00B860  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4114  00B862  B0D8               	btfsc	status,0,c
  4115  00B864  D00C               	goto	l22809
  4116                           
  4117                           ; BSR set to: 2
  4118                           ;main.c: 101: {
  4119                           ;main.c: 102: system_output_off(OUTPUT_1);
  4120  00B866  0E01               	movlw	1
  4121  00B868  ECE5  F098         	call	_system_output_off
  4122                           
  4123                           ;main.c: 103: system_output_off(OUTPUT_2);
  4124  00B86C  0E02               	movlw	2
  4125  00B86E  ECE5  F098         	call	_system_output_off
  4126                           
  4127                           ;main.c: 104: system_output_off(OUTPUT_3);
  4128  00B872  0E04               	movlw	4
  4129  00B874  ECE5  F098         	call	_system_output_off
  4130                           
  4131                           ;main.c: 105: system_output_off(OUTPUT_4);
  4132  00B878  0E08               	movlw	8
  4133  00B87A  ECE5  F098         	call	_system_output_off
  4134  00B87E                     l22809:
  4135                           
  4136                           ;main.c: 106: }
  4137                           ;main.c: 109: i2c_eeprom_tasks();
  4138  00B87E  ECA4  F093         	call	_i2c_eeprom_tasks	;wreg free
  4139                           
  4140                           ;main.c: 112: ui_run();
  4141  00B882  EC1D  F07F         	call	_ui_run	;wreg free
  4142                           
  4143                           ;main.c: 115: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4144  00B886  0E00               	movlw	0
  4145  00B888  EC24  F08E         	call	_adc_read
  4146  00B88C  0100               	movlb	0	; () banked
  4147  00B88E  5160               	movf	?_adc_read& (0+255),w,b
  4148  00B890  0102               	movlb	2	; () banked
  4149  00B892  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4150  00B894  0100               	movlb	0	; () banked
  4151  00B896  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4152  00B898  0102               	movlb	2	; () banked
  4153  00B89A  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4154                           
  4155                           ;main.c: 116: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _1);
  4156  00B89C  0E01               	movlw	1
  4157  00B89E  EC24  F08E         	call	_adc_read
  4158  00B8A2  0100               	movlb	0	; () banked
  4159  00B8A4  5160               	movf	?_adc_read& (0+255),w,b
  4160  00B8A6  0102               	movlb	2	; () banked
  4161  00B8A8  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4162  00B8AA  0100               	movlb	0	; () banked
  4163  00B8AC  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4164  00B8AE  0102               	movlb	2	; () banked
  4165  00B8B0  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4166                           
  4167                           ;main.c: 117: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _2);
  4168  00B8B2  0E02               	movlw	2
  4169  00B8B4  EC24  F08E         	call	_adc_read
  4170  00B8B8  0100               	movlb	0	; () banked
  4171  00B8BA  5160               	movf	?_adc_read& (0+255),w,b
  4172  00B8BC  0102               	movlb	2	; () banked
  4173  00B8BE  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4174  00B8C0  0100               	movlb	0	; () banked
  4175  00B8C2  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4176  00B8C4  0102               	movlb	2	; () banked
  4177  00B8C6  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4178                           
  4179                           ;main.c: 120: switch(os.timeSlot&0b00001111)
  4180  00B8C8  D122               	goto	l22891
  4181  00B8CA                     l22813:
  4182                           
  4183                           ;main.c: 123: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4184  00B8CA  0E01               	movlw	1
  4185  00B8CC  0100               	movlb	0	; () banked
  4186  00B8CE  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4187  00B8D0  0E00               	movlw	0
  4188  00B8D2  0100               	movlb	0	; () banked
  4189  00B8D4  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4190  00B8D6  0E00               	movlw	0
  4191  00B8D8  EC31  F09A         	call	_i2c_adc_start
  4192                           
  4193                           ;main.c: 124: break;
  4194  00B8DC  D14C               	goto	l22893
  4195  00B8DE                     l22815:
  4196                           
  4197                           ;main.c: 127: APP_DeviceCustomHIDTasks();
  4198  00B8DE  EC5D  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4199                           
  4200                           ;main.c: 131: break;
  4201  00B8E2  D149               	goto	l22893
  4202  00B8E4                     l22817:
  4203                           
  4204                           ;main.c: 135: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4205  00B8E4  ECD5  F097         	call	_i2c_adc_read	;wreg free
  4206  00B8E8  0102               	movlb	2	; () banked
  4207  00B8EA  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4208  00B8EC  0B0F               	andlw	15
  4209  00B8EE  0B03               	andlw	3
  4210  00B8F0  0100               	movlb	0	; () banked
  4211  00B8F2  6FD5               	movwf	??_main& (0+255),b
  4212  00B8F4  6BD6               	clrf	(??_main+1)& (0+255),b
  4213  00B8F6  90D8               	bcf	status,0,c
  4214  00B8F8  0100               	movlb	0	; () banked
  4215  00B8FA  37D5               	rlcf	??_main& (0+255),f,b
  4216  00B8FC  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4217  00B8FE  0E1F               	movlw	low (_os+31)
  4218  00B900  0100               	movlb	0	; () banked
  4219  00B902  25D5               	addwf	??_main& (0+255),w,b
  4220  00B904  6ED9               	movwf	fsr2l,c
  4221  00B906  0E02               	movlw	high (_os+31)
  4222  00B908  0100               	movlb	0	; () banked
  4223  00B90A  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4224  00B90C  6EDA               	movwf	fsr2h,c
  4225  00B90E  0100               	movlb	0	; () banked
  4226  00B910  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4227  00B914  0100               	movlb	0	; () banked
  4228  00B916  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;main.c: 136: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4232  00B91A  0E01               	movlw	1
  4233  00B91C  0100               	movlb	0	; () banked
  4234  00B91E  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4235  00B920  0E00               	movlw	0
  4236  00B922  0100               	movlb	0	; () banked
  4237  00B924  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4238  00B926  0E03               	movlw	3
  4239  00B928  EC31  F09A         	call	_i2c_adc_start
  4240                           
  4241                           ;main.c: 137: system_calculate_output_voltage();
  4242  00B92C  EC11  F07D         	call	_system_calculate_output_voltage	;wreg free
  4243                           
  4244                           ;main.c: 138: break;
  4245  00B930  D122               	goto	l22893
  4246  00B932                     l22823:
  4247                           
  4248                           ;main.c: 141: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4249  00B932  EC6D  F0A1         	call	_ui_get_status	;wreg free
  4250  00B936  0A05               	xorlw	5
  4251  00B938  A4D8               	btfss	status,2,c
  4252  00B93A  D11D               	goto	l22893
  4253                           
  4254                           ;main.c: 142: {
  4255                           ;main.c: 143: display_prepare(os.display_mode);
  4256  00B93C  0102               	movlb	2	; () banked
  4257  00B93E  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4258  00B940  EC39  F08F         	call	_display_prepare
  4259                           
  4260                           ;main.c: 144: }
  4261                           ;main.c: 145: break;
  4262  00B944  D118               	goto	l22893
  4263  00B946                     l22827:
  4264                           
  4265                           ;main.c: 148: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4266  00B946  EC6D  F0A1         	call	_ui_get_status	;wreg free
  4267                           
  4268                           ;main.c: 151: }
  4269                           ;main.c: 152: break;
  4270                           
  4271                           ;main.c: 149: {
  4272  00B94A  D115               	goto	l22893
  4273  00B94C                     l22829:
  4274                           
  4275                           ;main.c: 155: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4276  00B94C  ECD5  F097         	call	_i2c_adc_read	;wreg free
  4277  00B950  0102               	movlb	2	; () banked
  4278  00B952  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4279  00B954  0B0F               	andlw	15
  4280  00B956  0B03               	andlw	3
  4281  00B958  0100               	movlb	0	; () banked
  4282  00B95A  6FD5               	movwf	??_main& (0+255),b
  4283  00B95C  6BD6               	clrf	(??_main+1)& (0+255),b
  4284  00B95E  90D8               	bcf	status,0,c
  4285  00B960  0100               	movlb	0	; () banked
  4286  00B962  37D5               	rlcf	??_main& (0+255),f,b
  4287  00B964  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4288  00B966  0E0A               	movlw	low (_os+10)
  4289  00B968  0100               	movlb	0	; () banked
  4290  00B96A  25D5               	addwf	??_main& (0+255),w,b
  4291  00B96C  6ED9               	movwf	fsr2l,c
  4292  00B96E  0E02               	movlw	high (_os+10)
  4293  00B970  0100               	movlb	0	; () banked
  4294  00B972  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4295  00B974  6EDA               	movwf	fsr2h,c
  4296  00B976  0100               	movlb	0	; () banked
  4297  00B978  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4298  00B97C  0100               	movlb	0	; () banked
  4299  00B97E  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4300                           
  4301                           ;main.c: 157: {
  4302                           ;main.c: 158: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4303                           
  4304                           ; BSR set to: 0
  4305                           
  4306                           ;main.c: 156: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  4307  00B982  0E01               	movlw	1
  4308  00B984  0100               	movlb	0	; () banked
  4309  00B986  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4310  00B988  0E00               	movlw	0
  4311  00B98A  0100               	movlb	0	; () banked
  4312  00B98C  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4313  00B98E  0E01               	movlw	1
  4314  00B990  EC31  F09A         	call	_i2c_adc_start
  4315                           
  4316                           ;main.c: 159: }
  4317                           ;main.c: 160: system_calculate_input_voltage();
  4318  00B994  EC94  F07D         	call	_system_calculate_input_voltage	;wreg free
  4319                           
  4320                           ;main.c: 161: break;
  4321  00B998  D0EE               	goto	l22893
  4322  00B99A                     l22837:
  4323                           
  4324                           ;main.c: 164: APP_DeviceCustomHIDTasks();
  4325  00B99A  EC5D  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4326                           
  4327                           ;main.c: 165: break;
  4328  00B99E  D0EB               	goto	l22893
  4329  00B9A0                     l22841:
  4330                           
  4331                           ;main.c: 169: {
  4332                           ;main.c: 170: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4333  00B9A0  ECD5  F097         	call	_i2c_adc_read	;wreg free
  4334  00B9A4  0102               	movlb	2	; () banked
  4335  00B9A6  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4336  00B9A8  0B0F               	andlw	15
  4337  00B9AA  0B03               	andlw	3
  4338  00B9AC  0100               	movlb	0	; () banked
  4339  00B9AE  6FD5               	movwf	??_main& (0+255),b
  4340  00B9B0  6BD6               	clrf	(??_main+1)& (0+255),b
  4341  00B9B2  90D8               	bcf	status,0,c
  4342  00B9B4  0100               	movlb	0	; () banked
  4343  00B9B6  37D5               	rlcf	??_main& (0+255),f,b
  4344  00B9B8  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4345  00B9BA  0E29               	movlw	low (_os+41)
  4346  00B9BC  0100               	movlb	0	; () banked
  4347  00B9BE  25D5               	addwf	??_main& (0+255),w,b
  4348  00B9C0  6ED9               	movwf	fsr2l,c
  4349  00B9C2  0E02               	movlw	high (_os+41)
  4350  00B9C4  0100               	movlb	0	; () banked
  4351  00B9C6  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4352  00B9C8  6EDA               	movwf	fsr2h,c
  4353  00B9CA  0100               	movlb	0	; () banked
  4354  00B9CC  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4355  00B9D0  0100               	movlb	0	; () banked
  4356  00B9D2  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;main.c: 171: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4360  00B9D6  0E01               	movlw	1
  4361  00B9D8  0100               	movlb	0	; () banked
  4362  00B9DA  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4363  00B9DC  0E00               	movlw	0
  4364  00B9DE  0100               	movlb	0	; () banked
  4365  00B9E0  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4366  00B9E2  0E02               	movlw	2
  4367  00B9E4  EC31  F09A         	call	_i2c_adc_start
  4368                           
  4369                           ;main.c: 172: system_calculate_output_current();
  4370  00B9E8  EC38  F072         	call	_system_calculate_output_current	;wreg free
  4371                           
  4372                           ;main.c: 173: }
  4373                           ;main.c: 174: break;
  4374  00B9EC  D0C4               	goto	l22893
  4375  00B9EE                     l22847:
  4376                           
  4377                           ;main.c: 177: APP_DeviceCustomHIDTasks();
  4378  00B9EE  EC5D  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4379                           
  4380                           ;main.c: 178: log_collect_data();
  4381  00B9F2  ECF0  F060         	call	_log_collect_data	;wreg free
  4382                           
  4383                           ;main.c: 179: if(log_get_number_of_samples() == 30)
  4384  00B9F6  EC44  F0A1         	call	_log_get_number_of_samples	;wreg free
  4385  00B9FA  0E1E               	movlw	30
  4386  00B9FC  0100               	movlb	0	; () banked
  4387  00B9FE  1960               	xorwf	?_log_get_number_of_samples& (0+255),w,b
  4388  00BA00  0100               	movlb	0	; () banked
  4389  00BA02  1161               	iorwf	(?_log_get_number_of_samples+1)& (0+255),w,b
  4390  00BA04  A4D8               	btfss	status,2,c
  4391  00BA06  D0B7               	goto	l22893
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;main.c: 180: {
  4395                           ;main.c: 181: log_write_to_disk();
  4396  00BA08  EC6B  F08E         	call	_log_write_to_disk	;wreg free
  4397                           
  4398                           ;main.c: 182: log_start_new();
  4399  00BA0C  EC9A  F080         	call	_log_start_new	;wreg free
  4400                           
  4401                           ;main.c: 183: }
  4402                           ;main.c: 184: break;
  4403  00BA10  D0B2               	goto	l22893
  4404  00BA12                     l22859:
  4405                           
  4406                           ;main.c: 188: {
  4407                           ;main.c: 189: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4408  00BA12  ECD5  F097         	call	_i2c_adc_read	;wreg free
  4409  00BA16  0102               	movlb	2	; () banked
  4410  00BA18  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4411  00BA1A  0B0F               	andlw	15
  4412  00BA1C  0B03               	andlw	3
  4413  00BA1E  0100               	movlb	0	; () banked
  4414  00BA20  6FD5               	movwf	??_main& (0+255),b
  4415  00BA22  6BD6               	clrf	(??_main+1)& (0+255),b
  4416  00BA24  90D8               	bcf	status,0,c
  4417  00BA26  0100               	movlb	0	; () banked
  4418  00BA28  37D5               	rlcf	??_main& (0+255),f,b
  4419  00BA2A  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4420  00BA2C  0E14               	movlw	low (_os+20)
  4421  00BA2E  0100               	movlb	0	; () banked
  4422  00BA30  25D5               	addwf	??_main& (0+255),w,b
  4423  00BA32  6ED9               	movwf	fsr2l,c
  4424  00BA34  0E02               	movlw	high (_os+20)
  4425  00BA36  0100               	movlb	0	; () banked
  4426  00BA38  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4427  00BA3A  6EDA               	movwf	fsr2h,c
  4428  00BA3C  0100               	movlb	0	; () banked
  4429  00BA3E  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4430  00BA42  0100               	movlb	0	; () banked
  4431  00BA44  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4432                           
  4433                           ;main.c: 190: system_calculate_input_current();
  4434  00BA48  ECE5  F072         	call	_system_calculate_input_current	;wreg free
  4435                           
  4436                           ;main.c: 191: }
  4437                           ;main.c: 192: break;
  4438  00BA4C  D094               	goto	l22893
  4439  00BA4E                     l22861:
  4440                           
  4441                           ;main.c: 195: buck_operate();
  4442  00BA4E  EC77  F097         	call	_buck_operate	;wreg free
  4443                           
  4444                           ;main.c: 196: break;
  4445  00BA52  D091               	goto	l22893
  4446  00BA54                     l22863:
  4447                           
  4448                           ;main.c: 200: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  4449  00BA54  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  4450  00BA58  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  4451  00BA5C  0E04               	movlw	4
  4452  00BA5E  0100               	movlb	0	; () banked
  4453  00BA60  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4454  00BA62  EC5E  F07A         	call	_adc_calculate_temperature	;wreg free
  4455  00BA66  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  4456  00BA6A  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  4457                           
  4458                           ;main.c: 201: os.temperature_onboard_adc = 0;
  4459  00BA6E  0E00               	movlw	0
  4460  00BA70  0102               	movlb	2	; () banked
  4461  00BA72  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  4462  00BA74  0E00               	movlw	0
  4463  00BA76  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  4464                           
  4465                           ; BSR set to: 2
  4466                           ;main.c: 202: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  4467  00BA78  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  4468  00BA7C  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  4469  00BA80  0E05               	movlw	5
  4470  00BA82  0100               	movlb	0	; () banked
  4471  00BA84  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4472  00BA86  EC5E  F07A         	call	_adc_calculate_temperature	;wreg free
  4473  00BA8A  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  4474  00BA8E  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  4475                           
  4476                           ;main.c: 203: os.temperature_external_1_adc = 0;
  4477  00BA92  0E00               	movlw	0
  4478  00BA94  0102               	movlb	2	; () banked
  4479  00BA96  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  4480  00BA98  0E00               	movlw	0
  4481  00BA9A  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  4482                           
  4483                           ; BSR set to: 2
  4484                           ;main.c: 204: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  4485  00BA9C  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  4486  00BAA0  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  4487  00BAA4  0E06               	movlw	6
  4488  00BAA6  0100               	movlb	0	; () banked
  4489  00BAA8  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4490  00BAAA  EC5E  F07A         	call	_adc_calculate_temperature	;wreg free
  4491  00BAAE  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  4492  00BAB2  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  4493                           
  4494                           ;main.c: 205: os.temperature_external_2_adc = 0;
  4495  00BAB6  0E00               	movlw	0
  4496  00BAB8  0102               	movlb	2	; () banked
  4497  00BABA  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  4498  00BABC  0E00               	movlw	0
  4499  00BABE  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  4500                           
  4501                           ; BSR set to: 2
  4502                           ;main.c: 206: adc_calibrate();
  4503  00BAC0  EC38  F0A1         	call	_adc_calibrate	;wreg free
  4504                           
  4505                           ;main.c: 208: if(os.temperature_onboard>3000)
  4506  00BAC4  0102               	movlb	2	; () banked
  4507  00BAC6  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4508  00BAC8  D00A               	goto	l22879
  4509  00BACA  0EB9               	movlw	185
  4510  00BACC  0102               	movlb	2	; () banked
  4511  00BACE  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4512  00BAD0  0E0B               	movlw	11
  4513  00BAD2  0102               	movlb	2	; () banked
  4514  00BAD4  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4515  00BAD6  A0D8               	btfss	status,0,c
  4516  00BAD8  D002               	goto	l22879
  4517                           
  4518                           ; BSR set to: 2
  4519                           ;main.c: 209: {
  4520                           ;main.c: 210: LATDbits.LD1 = 1;
  4521  00BADA  828C               	bsf	3980,1,c	;volatile
  4522                           
  4523                           ;main.c: 211: }
  4524  00BADC  D00B               	goto	l22883
  4525  00BADE                     l22879:
  4526                           
  4527                           ; BSR set to: 2
  4528                           ;main.c: 212: else if(os.temperature_onboard<2500)
  4529  00BADE  0102               	movlb	2	; () banked
  4530  00BAE0  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4531  00BAE2  D007               	goto	l22881
  4532  00BAE4  0EC4               	movlw	196
  4533  00BAE6  0102               	movlb	2	; () banked
  4534  00BAE8  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4535  00BAEA  0E09               	movlw	9
  4536  00BAEC  0102               	movlb	2	; () banked
  4537  00BAEE  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4538  00BAF0  A0D8               	btfss	status,0,c
  4539  00BAF2                     l22881:
  4540                           
  4541                           ; BSR set to: 2
  4542                           ;main.c: 213: {
  4543                           ;main.c: 214: LATDbits.LD1 = 0;
  4544  00BAF2  928C               	bcf	3980,1,c	;volatile
  4545  00BAF4                     l22883:
  4546                           
  4547                           ; BSR set to: 2
  4548                           ;main.c: 215: }
  4549                           ;main.c: 216: display_prepare(os.display_mode);
  4550  00BAF4  0102               	movlb	2	; () banked
  4551  00BAF6  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4552  00BAF8  EC39  F08F         	call	_display_prepare
  4553                           
  4554                           ;main.c: 217: break;
  4555  00BAFC  D03C               	goto	l22893
  4556  00BAFE                     l22885:
  4557                           
  4558                           ;main.c: 220: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4559  00BAFE  EC6D  F0A1         	call	_ui_get_status	;wreg free
  4560  00BB02  0A05               	xorlw	5
  4561  00BB04  A4D8               	btfss	status,2,c
  4562  00BB06  D037               	goto	l22893
  4563                           
  4564                           ;main.c: 221: {
  4565                           ;main.c: 222: display_update();
  4566  00BB08  ECB0  F08E         	call	_display_update	;wreg free
  4567                           
  4568                           ;main.c: 225: }
  4569                           
  4570                           ;main.c: 223: }
  4571                           ;main.c: 224: break;
  4572  00BB0C  D034               	goto	l22893
  4573  00BB0E                     l22891:
  4574  00BB0E  0102               	movlb	2	; () banked
  4575  00BB10  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  4576  00BB12  0B0F               	andlw	15
  4577  00BB14  0100               	movlb	0	; () banked
  4578  00BB16  6FD5               	movwf	??_main& (0+255),b
  4579  00BB18  6BD6               	clrf	(??_main+1)& (0+255),b
  4580                           
  4581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4582                           ; Switch size 1, requested type "space"
  4583                           ; Number of cases is 1, Range of values is 0 to 0
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            4     3 (average)
  4587                           ;	Chosen strategy is simple_byte
  4588  00BB1A  0100               	movlb	0	; () banked
  4589  00BB1C  51D6               	movf	(??_main+1)& (0+255),w,b
  4590  00BB1E  0A00               	xorlw	0	; case 0
  4591  00BB20  A4D8               	btfss	status,2,c
  4592  00BB22  D029               	goto	l22893
  4593                           
  4594                           ; BSR set to: 0
  4595                           ; Switch size 1, requested type "space"
  4596                           ; Number of cases is 13, Range of values is 0 to 15
  4597                           ; switch strategies available:
  4598                           ; Name         Instructions Cycles
  4599                           ; simple_byte           40    21 (average)
  4600                           ;	Chosen strategy is simple_byte
  4601  00BB24  0100               	movlb	0	; () banked
  4602  00BB26  51D5               	movf	??_main& (0+255),w,b
  4603  00BB28  0A00               	xorlw	0	; case 0
  4604  00BB2A  B4D8               	btfsc	status,2,c
  4605  00BB2C  D6CE               	goto	l22813
  4606  00BB2E  0A01               	xorlw	1	; case 1
  4607  00BB30  B4D8               	btfsc	status,2,c
  4608  00BB32  D6D5               	goto	l22815
  4609  00BB34  0A02               	xorlw	2	; case 3
  4610  00BB36  B4D8               	btfsc	status,2,c
  4611  00BB38  D6D5               	goto	l22817
  4612  00BB3A  0A07               	xorlw	7	; case 4
  4613  00BB3C  B4D8               	btfsc	status,2,c
  4614  00BB3E  D6F9               	goto	l22823
  4615  00BB40  0A01               	xorlw	1	; case 5
  4616  00BB42  B4D8               	btfsc	status,2,c
  4617  00BB44  D700               	goto	l22827
  4618  00BB46  0A03               	xorlw	3	; case 6
  4619  00BB48  B4D8               	btfsc	status,2,c
  4620  00BB4A  D700               	goto	l22829
  4621  00BB4C  0A0E               	xorlw	14	; case 8
  4622  00BB4E  B4D8               	btfsc	status,2,c
  4623  00BB50  D724               	goto	l22837
  4624  00BB52  0A01               	xorlw	1	; case 9
  4625  00BB54  B4D8               	btfsc	status,2,c
  4626  00BB56  D724               	goto	l22841
  4627  00BB58  0A02               	xorlw	2	; case 11
  4628  00BB5A  B4D8               	btfsc	status,2,c
  4629  00BB5C  D748               	goto	l22847
  4630  00BB5E  0A07               	xorlw	7	; case 12
  4631  00BB60  B4D8               	btfsc	status,2,c
  4632  00BB62  D757               	goto	l22859
  4633  00BB64  0A01               	xorlw	1	; case 13
  4634  00BB66  B4D8               	btfsc	status,2,c
  4635  00BB68  D772               	goto	l22861
  4636  00BB6A  0A03               	xorlw	3	; case 14
  4637  00BB6C  B4D8               	btfsc	status,2,c
  4638  00BB6E  D772               	goto	l22863
  4639  00BB70  0A01               	xorlw	1	; case 15
  4640  00BB72  B4D8               	btfsc	status,2,c
  4641  00BB74  D7C4               	goto	l22885
  4642  00BB76                     l22893:
  4643                           
  4644                           ;main.c: 226: os.done = 1;
  4645  00BB76  0E01               	movlw	1
  4646  00BB78  0102               	movlb	2	; () banked
  4647  00BB7A  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  4648                           
  4649                           ; BSR set to: 2
  4650                           
  4651                           ; BSR set to: 2
  4652  00BB7C  D655               	goto	l22795
  4653  00BB7E                     __end_of_main:
  4654                           	opt stack 0
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           postdec1	equ	0xFE5
  4662                           fsr1h	equ	0xFE2
  4663                           fsr1l	equ	0xFE1
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _ui_run *****************
  4671 ;; Defined at:
  4672 ;;		line 334 in file "ui.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:   15
  4693 ;; This function calls:
  4694 ;;		__ui_encoder
  4695 ;;		_i2c_digipot_backlight
  4696 ;;		_i2c_digipot_reset_off
  4697 ;;		_i2c_digipot_reset_on
  4698 ;;		_i2c_display_send_init_sequence
  4699 ;;		_system_encoder_disable
  4700 ;;		_system_encoder_enable
  4701 ;;		_ui_init
  4702 ;; This function is called by:
  4703 ;;		_main
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text1
  4708  00FE3A                     __ptext1:
  4709                           	opt stack 0
  4710  00FE3A                     _ui_run:
  4711                           	opt stack 15
  4712                           
  4713                           ;ui.c: 336: switch(userInterfaceStatus)
  4714                           
  4715                           ; BSR set to: 2
  4716                           ;incstack = 0
  4717  00FE3A  D06C               	goto	l22405
  4718  00FE3C                     l22349:
  4719                           
  4720                           ;ui.c: 339: if (os.buttonCount!=0)
  4721  00FE3C  0102               	movlb	2	; () banked
  4722  00FE3E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4723  00FE40  B4D8               	btfsc	status,2,c
  4724  00FE42  0012               	return	
  4725                           
  4726                           ; BSR set to: 2
  4727                           ;ui.c: 340: {
  4728                           ;ui.c: 341: ui_init();
  4729  00FE44  EC8C  F0A0         	call	_ui_init	;wreg free
  4730                           
  4731                           ;ui.c: 342: os.buttonCount = 0;
  4732  00FE48  0E00               	movlw	0
  4733  00FE4A  0102               	movlb	2	; () banked
  4734  00FE4C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  4735                           
  4736                           ; BSR set to: 2
  4737                           ;ui.c: 343: }
  4738                           ;ui.c: 344: break;
  4739  00FE4E  0012               	return	
  4740  00FE50                     l1847:
  4741                           
  4742                           ; BSR set to: 1
  4743                           ;ui.c: 353: LATDbits.LD0 = 0;
  4744  00FE50  908C               	bcf	3980,0,c	;volatile
  4745                           
  4746                           ; BSR set to: 1
  4747                           ;ui.c: 355: system_ui_inactive_count = 0;
  4748  00FE52  0E00               	movlw	0
  4749  00FE54  0101               	movlb	1	; () banked
  4750  00FE56  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4751  00FE58  0E00               	movlw	0
  4752  00FE5A  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4753                           
  4754                           ;ui.c: 356: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4755  00FE5C  0E02               	movlw	2
  4756  00FE5E  0101               	movlb	1	; () banked
  4757  00FE60  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4758                           
  4759                           ;ui.c: 357: break;
  4760  00FE62  0012               	return	
  4761  00FE64                     l22357:
  4762                           
  4763                           ; BSR set to: 1
  4764                           ;ui.c: 361: i2c_digipot_reset_on();
  4765  00FE64  EC9D  F09D         	call	_i2c_digipot_reset_on	;wreg free
  4766                           
  4767                           ;ui.c: 363: system_ui_inactive_count = 0;
  4768  00FE68  0E00               	movlw	0
  4769  00FE6A  0101               	movlb	1	; () banked
  4770  00FE6C  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4771  00FE6E  0E00               	movlw	0
  4772  00FE70  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4773                           
  4774                           ; BSR set to: 1
  4775                           ;ui.c: 364: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4776  00FE72  0E03               	movlw	3
  4777  00FE74  0101               	movlb	1	; () banked
  4778  00FE76  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4779                           
  4780                           ;ui.c: 365: break;
  4781  00FE78  0012               	return	
  4782  00FE7A                     l22363:
  4783                           
  4784                           ; BSR set to: 1
  4785                           ;ui.c: 368: ++system_ui_inactive_count;
  4786  00FE7A  0101               	movlb	1	; () banked
  4787  00FE7C  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4788  00FE7E  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4789                           
  4790                           ; BSR set to: 1
  4791                           ;ui.c: 370: if (system_ui_inactive_count>3)
  4792  00FE80  0101               	movlb	1	; () banked
  4793  00FE82  51E8               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4794  00FE84  E105               	bnz	u22210
  4795  00FE86  0E04               	movlw	4
  4796  00FE88  0101               	movlb	1	; () banked
  4797  00FE8A  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4798  00FE8C  A0D8               	btfss	status,0,c
  4799  00FE8E  0012               	return	
  4800  00FE90                     u22210:
  4801                           
  4802                           ; BSR set to: 1
  4803                           ;ui.c: 371: {
  4804                           ;ui.c: 372: i2c_digipot_reset_off();
  4805  00FE90  ECB3  F09D         	call	_i2c_digipot_reset_off	;wreg free
  4806                           
  4807                           ;ui.c: 373: system_ui_inactive_count = 0;
  4808  00FE94  0E00               	movlw	0
  4809  00FE96  0101               	movlb	1	; () banked
  4810  00FE98  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4811  00FE9A  0E00               	movlw	0
  4812  00FE9C  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4813                           
  4814                           ; BSR set to: 1
  4815                           ;ui.c: 374: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4816  00FE9E  0E04               	movlw	4
  4817  00FEA0  0101               	movlb	1	; () banked
  4818  00FEA2  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4819                           
  4820                           ; BSR set to: 1
  4821                           ;ui.c: 375: }
  4822                           ;ui.c: 376: break;
  4823  00FEA4  0012               	return	
  4824  00FEA6                     l22373:
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;ui.c: 380: i2c_display_send_init_sequence();
  4828  00FEA6  EC0E  F09D         	call	_i2c_display_send_init_sequence	;wreg free
  4829                           
  4830                           ;ui.c: 382: i2c_digipot_backlight(150);
  4831  00FEAA  0E96               	movlw	150
  4832  00FEAC  ECA6  F09C         	call	_i2c_digipot_backlight
  4833                           
  4834                           ;ui.c: 384: system_encoder_enable();
  4835  00FEB0  EC1B  F0A1         	call	_system_encoder_enable	;wreg free
  4836                           
  4837                           ;ui.c: 386: system_ui_inactive_count = 0;
  4838  00FEB4  0E00               	movlw	0
  4839  00FEB6  0101               	movlb	1	; () banked
  4840  00FEB8  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4841  00FEBA  0E00               	movlw	0
  4842  00FEBC  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4843                           
  4844                           ; BSR set to: 1
  4845                           ;ui.c: 387: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4846  00FEBE  0E05               	movlw	5
  4847  00FEC0  0101               	movlb	1	; () banked
  4848  00FEC2  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4849                           
  4850                           ;ui.c: 388: break;
  4851  00FEC4  0012               	return	
  4852  00FEC6                     l22383:
  4853                           
  4854                           ; BSR set to: 1
  4855                           ;ui.c: 391: if (os.encoderCount==0 && os.buttonCount==0)
  4856  00FEC6  0102               	movlb	2	; () banked
  4857  00FEC8  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  4858  00FECA  A4D8               	btfss	status,2,c
  4859  00FECC  D01B               	goto	l22399
  4860                           
  4861                           ; BSR set to: 2
  4862  00FECE  0102               	movlb	2	; () banked
  4863  00FED0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4864  00FED2  A4D8               	btfss	status,2,c
  4865  00FED4  D017               	goto	l22399
  4866                           
  4867                           ; BSR set to: 2
  4868                           ;ui.c: 392: {
  4869                           ;ui.c: 393: ++system_ui_inactive_count;
  4870  00FED6  0101               	movlb	1	; () banked
  4871  00FED8  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4872  00FEDA  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4873                           
  4874                           ; BSR set to: 1
  4875                           ;ui.c: 394: if(system_ui_inactive_count > 2000)
  4876  00FEDC  0ED1               	movlw	209
  4877  00FEDE  0101               	movlb	1	; () banked
  4878  00FEE0  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4879  00FEE2  0E07               	movlw	7
  4880  00FEE4  0101               	movlb	1	; () banked
  4881  00FEE6  59E8               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  4882  00FEE8  A0D8               	btfss	status,0,c
  4883  00FEEA  0012               	return	
  4884                           
  4885                           ; BSR set to: 1
  4886                           ;ui.c: 395: {
  4887                           ;ui.c: 397: system_encoder_disable();
  4888  00FEEC  EC6A  F0A1         	call	_system_encoder_disable	;wreg free
  4889                           
  4890                           ;ui.c: 399: LATDbits.LD0 = 1;
  4891  00FEF0  808C               	bsf	3980,0,c	;volatile
  4892                           
  4893                           ;ui.c: 402: system_ui_inactive_count = 0;
  4894  00FEF2  0E00               	movlw	0
  4895  00FEF4  0101               	movlb	1	; () banked
  4896  00FEF6  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4897  00FEF8  0E00               	movlw	0
  4898  00FEFA  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4899                           
  4900                           ; BSR set to: 1
  4901                           ;ui.c: 403: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  4902  00FEFC  0E00               	movlw	0
  4903  00FEFE  0101               	movlb	1	; () banked
  4904  00FF00  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4905                           
  4906                           ; BSR set to: 1
  4907                           ;ui.c: 404: }
  4908                           ;ui.c: 405: }
  4909  00FF02  0012               	return	
  4910  00FF04                     l22399:
  4911                           
  4912                           ;ui.c: 406: else
  4913                           ;ui.c: 407: {
  4914                           ;ui.c: 408: system_ui_inactive_count = 0;
  4915  00FF04  0E00               	movlw	0
  4916  00FF06  0101               	movlb	1	; () banked
  4917  00FF08  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4918  00FF0A  0E00               	movlw	0
  4919  00FF0C  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4920                           
  4921                           ; BSR set to: 1
  4922                           ;ui.c: 409: _ui_encoder();
  4923  00FF0E  EC16  F050         	call	__ui_encoder	;wreg free
  4924                           
  4925                           ;ui.c: 412: }
  4926                           
  4927                           ;ui.c: 410: }
  4928                           ;ui.c: 411: break;
  4929  00FF12  0012               	return	
  4930  00FF14                     l22405:
  4931  00FF14  0101               	movlb	1	; () banked
  4932  00FF16  51F3               	movf	_userInterfaceStatus& (0+255),w,b
  4933                           
  4934                           ; Switch size 1, requested type "space"
  4935                           ; Number of cases is 6, Range of values is 0 to 5
  4936                           ; switch strategies available:
  4937                           ; Name         Instructions Cycles
  4938                           ; simple_byte           19    10 (average)
  4939                           ;	Chosen strategy is simple_byte
  4940  00FF18  0A00               	xorlw	0	; case 0
  4941  00FF1A  B4D8               	btfsc	status,2,c
  4942  00FF1C  D78F               	goto	l22349
  4943  00FF1E  0A01               	xorlw	1	; case 1
  4944  00FF20  B4D8               	btfsc	status,2,c
  4945  00FF22  D796               	goto	l1847
  4946  00FF24  0A03               	xorlw	3	; case 2
  4947  00FF26  B4D8               	btfsc	status,2,c
  4948  00FF28  D79D               	goto	l22357
  4949  00FF2A  0A01               	xorlw	1	; case 3
  4950  00FF2C  B4D8               	btfsc	status,2,c
  4951  00FF2E  D7A5               	goto	l22363
  4952  00FF30  0A07               	xorlw	7	; case 4
  4953  00FF32  B4D8               	btfsc	status,2,c
  4954  00FF34  D7B8               	goto	l22373
  4955  00FF36  0A01               	xorlw	1	; case 5
  4956  00FF38  A4D8               	btfss	status,2,c
  4957  00FF3A  0012               	return	
  4958  00FF3C  D7C4               	goto	l22383
  4959  00FF3E                     __end_of_ui_run:
  4960                           	opt stack 0
  4961                           tblptru	equ	0xFF8
  4962                           tblptrh	equ	0xFF7
  4963                           tblptrl	equ	0xFF6
  4964                           tablat	equ	0xFF5
  4965                           postinc0	equ	0xFEE
  4966                           wreg	equ	0xFE8
  4967                           postdec1	equ	0xFE5
  4968                           fsr1h	equ	0xFE2
  4969                           fsr1l	equ	0xFE1
  4970                           postinc2	equ	0xFDE
  4971                           postdec2	equ	0xFDD
  4972                           fsr2h	equ	0xFDA
  4973                           fsr2l	equ	0xFD9
  4974                           status	equ	0xFD8
  4975                           
  4976 ;; *************** function _system_encoder_enable *****************
  4977 ;; Defined at:
  4978 ;;		line 198 in file "os.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;		None
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;Total ram usage:        0 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:   10
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_ui_run
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text2
  5007  014236                     __ptext2:
  5008                           	opt stack 0
  5009  014236                     _system_encoder_enable:
  5010                           	opt stack 19
  5011                           
  5012                           ;os.c: 201: INTCON3bits.INT2IF = 0;
  5013                           
  5014                           ;incstack = 0
  5015  014236  92F0               	bcf	intcon3,1,c	;volatile
  5016                           
  5017                           ;os.c: 202: INTCON3bits.INT3IF = 0;
  5018  014238  94F0               	bcf	intcon3,2,c	;volatile
  5019                           
  5020                           ;os.c: 205: os.encoderCount = 0;
  5021  01423A  0E00               	movlw	0
  5022  01423C  0102               	movlb	2	; () banked
  5023  01423E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5024                           
  5025                           ; BSR set to: 2
  5026                           ;os.c: 208: INTCON3bits.INT2IE = 1;
  5027  014240  88F0               	bsf	intcon3,4,c	;volatile
  5028                           
  5029                           ; BSR set to: 2
  5030                           ;os.c: 209: INTCON3bits.INT3IE = 1;
  5031  014242  8AF0               	bsf	intcon3,5,c	;volatile
  5032                           
  5033                           ; BSR set to: 2
  5034  014244  0012               	return		;funcret
  5035  014246                     __end_of_system_encoder_enable:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           intcon3	equ	0xFF0
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           fsr1h	equ	0xFE2
  5046                           fsr1l	equ	0xFE1
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           fsr2h	equ	0xFDA
  5050                           fsr2l	equ	0xFD9
  5051                           status	equ	0xFD8
  5052                           
  5053 ;; *************** function _system_encoder_disable *****************
  5054 ;; Defined at:
  5055 ;;		line 191 in file "os.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;		None
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		None
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;Total ram usage:        0 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; Hardware stack levels required when called:   10
  5076 ;; This function calls:
  5077 ;;		Nothing
  5078 ;; This function is called by:
  5079 ;;		_ui_run
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text3
  5084  0142D4                     __ptext3:
  5085                           	opt stack 0
  5086  0142D4                     _system_encoder_disable:
  5087                           	opt stack 19
  5088                           
  5089                           ;os.c: 194: INTCON3bits.INT2IE = 0;
  5090                           
  5091                           ; BSR set to: 2
  5092                           ;incstack = 0
  5093  0142D4  98F0               	bcf	intcon3,4,c	;volatile
  5094                           
  5095                           ;os.c: 195: INTCON3bits.INT3IE = 0;
  5096  0142D6  9AF0               	bcf	intcon3,5,c	;volatile
  5097  0142D8  0012               	return		;funcret
  5098  0142DA                     __end_of_system_encoder_disable:
  5099                           	opt stack 0
  5100                           tblptru	equ	0xFF8
  5101                           tblptrh	equ	0xFF7
  5102                           tblptrl	equ	0xFF6
  5103                           tablat	equ	0xFF5
  5104                           intcon3	equ	0xFF0
  5105                           postinc0	equ	0xFEE
  5106                           wreg	equ	0xFE8
  5107                           postdec1	equ	0xFE5
  5108                           fsr1h	equ	0xFE2
  5109                           fsr1l	equ	0xFE1
  5110                           postinc2	equ	0xFDE
  5111                           postdec2	equ	0xFDD
  5112                           fsr2h	equ	0xFDA
  5113                           fsr2l	equ	0xFD9
  5114                           status	equ	0xFD8
  5115                           
  5116 ;; *************** function _i2c_display_send_init_sequence *****************
  5117 ;; Defined at:
  5118 ;;		line 248 in file "i2c.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;Total ram usage:        9 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:   12
  5139 ;; This function calls:
  5140 ;;		__i2c_write
  5141 ;;		_i2c_set_frequency
  5142 ;; This function is called by:
  5143 ;;		_ui_run
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text4
  5148  013A1C                     __ptext4:
  5149                           	opt stack 0
  5150  013A1C                     _i2c_display_send_init_sequence:
  5151                           	opt stack 17
  5152                           
  5153                           ;i2c.c: 250: uint8_t init_sequence[9] = {
  5154                           ;i2c.c: 251: 0x3A,
  5155                           ;i2c.c: 253: 0b00011110,
  5156                           ;i2c.c: 254: 0x39,
  5157                           ;i2c.c: 256: 0b00001100,
  5158                           ;i2c.c: 257: 0x74,
  5159                           ;i2c.c: 258: 0b1011100,
  5160                           ;i2c.c: 259: 0x6d,
  5161                           ;i2c.c: 260: 0x0c,
  5162                           ;i2c.c: 261: 0x01
  5163                           ;i2c.c: 262: };
  5164                           
  5165                           ;incstack = 0
  5166  013A1C  EE23  F0ED         	lfsr	2,i2c_display_send_init_sequence@F8354
  5167  013A20  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5168  013A24  0E08               	movlw	8
  5169  013A26                     u19901:
  5170  013A26  CFDB FFE3          	movff	plusw2,plusw1
  5171  013A2A  06E8               	decf	wreg,f,c
  5172  013A2C  E2FC               	bc	u19901
  5173                           
  5174                           ;i2c.c: 265: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5175  013A2E  0E00               	movlw	0
  5176  013A30  ECDC  F093         	call	_i2c_set_frequency
  5177                           
  5178                           ;i2c.c: 268: _i2c_write(0b01111000, &init_sequence[0], 9);
  5179  013A34  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5180  013A36  0100               	movlb	0	; () banked
  5181  013A38  6F65               	movwf	__i2c_write@data& (0+255),b
  5182  013A3A  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5183  013A3C  0100               	movlb	0	; () banked
  5184  013A3E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5185  013A40  0E09               	movlw	9
  5186  013A42  0100               	movlb	0	; () banked
  5187  013A44  6F67               	movwf	__i2c_write@length& (0+255),b
  5188  013A46  0E78               	movlw	120
  5189  013A48  EC8C  F098         	call	__i2c_write
  5190  013A4C  0012               	return		;funcret
  5191  013A4E                     __end_of_i2c_display_send_init_sequence:
  5192                           	opt stack 0
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           intcon3	equ	0xFF0
  5198                           postinc0	equ	0xFEE
  5199                           wreg	equ	0xFE8
  5200                           postdec1	equ	0xFE5
  5201                           plusw1	equ	0xFE3
  5202                           fsr1h	equ	0xFE2
  5203                           fsr1l	equ	0xFE1
  5204                           postinc2	equ	0xFDE
  5205                           postdec2	equ	0xFDD
  5206                           plusw2	equ	0xFDB
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _i2c_digipot_reset_on *****************
  5212 ;; Defined at:
  5213 ;;		line 425 in file "i2c.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;Total ram usage:        2 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:   12
  5234 ;; This function calls:
  5235 ;;		__i2c_write
  5236 ;;		_i2c_set_frequency
  5237 ;; This function is called by:
  5238 ;;		_ui_run
  5239 ;;		_i2c_display_init
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text5
  5244  013B3A                     __ptext5:
  5245                           	opt stack 0
  5246  013B3A                     _i2c_digipot_reset_on:
  5247                           	opt stack 17
  5248                           
  5249                           ;i2c.c: 427: uint8_t data_array[2];
  5250                           ;i2c.c: 428: data_array[0] = 0x10 | 0x00;
  5251                           
  5252                           ;incstack = 0
  5253  013B3A  0E10               	movlw	16
  5254  013B3C  0100               	movlb	0	; () banked
  5255  013B3E  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5256                           
  5257                           ;i2c.c: 430: data_array[1] = 0x00;
  5258  013B40  0E00               	movlw	0
  5259  013B42  0100               	movlb	0	; () banked
  5260  013B44  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;i2c.c: 433: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5264  013B46  0E02               	movlw	2
  5265  013B48  ECDC  F093         	call	_i2c_set_frequency
  5266                           
  5267                           ;i2c.c: 435: _i2c_write(0b01011100, &data_array[0], 2);
  5268  013B4C  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5269  013B4E  0100               	movlb	0	; () banked
  5270  013B50  6F65               	movwf	__i2c_write@data& (0+255),b
  5271  013B52  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5272  013B54  0100               	movlb	0	; () banked
  5273  013B56  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5274  013B58  0E02               	movlw	2
  5275  013B5A  0100               	movlb	0	; () banked
  5276  013B5C  6F67               	movwf	__i2c_write@length& (0+255),b
  5277  013B5E  0E5C               	movlw	92
  5278  013B60  EC8C  F098         	call	__i2c_write
  5279  013B64  0012               	return		;funcret
  5280  013B66                     __end_of_i2c_digipot_reset_on:
  5281                           	opt stack 0
  5282                           tblptru	equ	0xFF8
  5283                           tblptrh	equ	0xFF7
  5284                           tblptrl	equ	0xFF6
  5285                           tablat	equ	0xFF5
  5286                           intcon3	equ	0xFF0
  5287                           postinc0	equ	0xFEE
  5288                           wreg	equ	0xFE8
  5289                           postdec1	equ	0xFE5
  5290                           plusw1	equ	0xFE3
  5291                           fsr1h	equ	0xFE2
  5292                           fsr1l	equ	0xFE1
  5293                           postinc2	equ	0xFDE
  5294                           postdec2	equ	0xFDD
  5295                           plusw2	equ	0xFDB
  5296                           fsr2h	equ	0xFDA
  5297                           fsr2l	equ	0xFD9
  5298                           status	equ	0xFD8
  5299                           
  5300 ;; *************** function _i2c_digipot_reset_off *****************
  5301 ;; Defined at:
  5302 ;;		line 438 in file "i2c.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;Total ram usage:        2 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:   12
  5323 ;; This function calls:
  5324 ;;		__i2c_write
  5325 ;;		_i2c_set_frequency
  5326 ;; This function is called by:
  5327 ;;		_ui_run
  5328 ;;		_i2c_display_init
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text6
  5333  013B66                     __ptext6:
  5334                           	opt stack 0
  5335  013B66                     _i2c_digipot_reset_off:
  5336                           	opt stack 17
  5337                           
  5338                           ;i2c.c: 440: uint8_t data_array[2];
  5339                           ;i2c.c: 441: data_array[0] = 0x10 | 0x00;
  5340                           
  5341                           ;incstack = 0
  5342  013B66  0E10               	movlw	16
  5343  013B68  0100               	movlb	0	; () banked
  5344  013B6A  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  5345                           
  5346                           ;i2c.c: 442: data_array[1] = 0x80;
  5347  013B6C  0E80               	movlw	128
  5348  013B6E  0100               	movlb	0	; () banked
  5349  013B70  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;i2c.c: 445: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5353  013B72  0E02               	movlw	2
  5354  013B74  ECDC  F093         	call	_i2c_set_frequency
  5355                           
  5356                           ;i2c.c: 447: _i2c_write(0b01011100, &data_array[0], 2);
  5357  013B78  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  5358  013B7A  0100               	movlb	0	; () banked
  5359  013B7C  6F65               	movwf	__i2c_write@data& (0+255),b
  5360  013B7E  0E00               	movlw	high i2c_digipot_reset_off@data_array
  5361  013B80  0100               	movlb	0	; () banked
  5362  013B82  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5363  013B84  0E02               	movlw	2
  5364  013B86  0100               	movlb	0	; () banked
  5365  013B88  6F67               	movwf	__i2c_write@length& (0+255),b
  5366  013B8A  0E5C               	movlw	92
  5367  013B8C  EC8C  F098         	call	__i2c_write
  5368  013B90  0012               	return		;funcret
  5369  013B92                     __end_of_i2c_digipot_reset_off:
  5370                           	opt stack 0
  5371                           tblptru	equ	0xFF8
  5372                           tblptrh	equ	0xFF7
  5373                           tblptrl	equ	0xFF6
  5374                           tablat	equ	0xFF5
  5375                           intcon3	equ	0xFF0
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postdec1	equ	0xFE5
  5379                           plusw1	equ	0xFE3
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           postinc2	equ	0xFDE
  5383                           postdec2	equ	0xFDD
  5384                           plusw2	equ	0xFDB
  5385                           fsr2h	equ	0xFDA
  5386                           fsr2l	equ	0xFD9
  5387                           status	equ	0xFD8
  5388                           
  5389 ;; *************** function _i2c_digipot_backlight *****************
  5390 ;; Defined at:
  5391 ;;		line 450 in file "i2c.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  level           1    wreg     unsigned char 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  level           1   10[BANK0 ] unsigned char 
  5396 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;Total ram usage:        3 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:   12
  5413 ;; This function calls:
  5414 ;;		__i2c_write
  5415 ;;		_i2c_set_frequency
  5416 ;; This function is called by:
  5417 ;;		_ui_run
  5418 ;;		_i2c_display_init
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text7
  5423  01394C                     __ptext7:
  5424                           	opt stack 0
  5425  01394C                     _i2c_digipot_backlight:
  5426                           	opt stack 17
  5427                           
  5428                           ;incstack = 0
  5429                           ;i2c_digipot_backlight@level stored from wreg
  5430  01394C  0100               	movlb	0	; () banked
  5431  01394E  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  5432                           
  5433                           ;i2c.c: 452: uint8_t data_array[2];
  5434                           ;i2c.c: 453: data_array[0] = 0x00 | 0x00;
  5435  013950  0E00               	movlw	0
  5436  013952  0100               	movlb	0	; () banked
  5437  013954  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;i2c.c: 454: data_array[1] = level>>1;
  5441  013956  0100               	movlb	0	; () banked
  5442  013958  90D8               	bcf	status,0,c
  5443  01395A  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  5444  01395C  0100               	movlb	0	; () banked
  5445  01395E  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;i2c.c: 457: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5449  013960  0E02               	movlw	2
  5450  013962  ECDC  F093         	call	_i2c_set_frequency
  5451                           
  5452                           ;i2c.c: 459: _i2c_write(0b01011100, &data_array[0], 2);
  5453  013966  0E6B               	movlw	low i2c_digipot_backlight@data_array
  5454  013968  0100               	movlb	0	; () banked
  5455  01396A  6F65               	movwf	__i2c_write@data& (0+255),b
  5456  01396C  0E00               	movlw	high i2c_digipot_backlight@data_array
  5457  01396E  0100               	movlb	0	; () banked
  5458  013970  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5459  013972  0E02               	movlw	2
  5460  013974  0100               	movlb	0	; () banked
  5461  013976  6F67               	movwf	__i2c_write@length& (0+255),b
  5462  013978  0E5C               	movlw	92
  5463  01397A  EC8C  F098         	call	__i2c_write
  5464  01397E  0012               	return		;funcret
  5465  013980                     __end_of_i2c_digipot_backlight:
  5466                           	opt stack 0
  5467                           tblptru	equ	0xFF8
  5468                           tblptrh	equ	0xFF7
  5469                           tblptrl	equ	0xFF6
  5470                           tablat	equ	0xFF5
  5471                           intcon3	equ	0xFF0
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           postdec1	equ	0xFE5
  5475                           plusw1	equ	0xFE3
  5476                           fsr1h	equ	0xFE2
  5477                           fsr1l	equ	0xFE1
  5478                           postinc2	equ	0xFDE
  5479                           postdec2	equ	0xFDD
  5480                           plusw2	equ	0xFDB
  5481                           fsr2h	equ	0xFDA
  5482                           fsr2l	equ	0xFD9
  5483                           status	equ	0xFD8
  5484                           
  5485 ;; *************** function __ui_encoder *****************
  5486 ;; Defined at:
  5487 ;;		line 17 in file "ui.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;Total ram usage:        0 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:   14
  5508 ;; This function calls:
  5509 ;;		_rtcc_correct_day
  5510 ;;		_rtcc_decrement_day
  5511 ;;		_rtcc_decrement_hours
  5512 ;;		_rtcc_decrement_minutes
  5513 ;;		_rtcc_decrement_month
  5514 ;;		_rtcc_decrement_seconds
  5515 ;;		_rtcc_decrement_year
  5516 ;;		_rtcc_increment_day
  5517 ;;		_rtcc_increment_hours
  5518 ;;		_rtcc_increment_minutes
  5519 ;;		_rtcc_increment_month
  5520 ;;		_rtcc_increment_seconds
  5521 ;;		_rtcc_increment_year
  5522 ;;		_rtcc_write_eeprom
  5523 ;;		_system_output_off
  5524 ;;		_system_output_on
  5525 ;;		_system_output_toggle
  5526 ;; This function is called by:
  5527 ;;		_ui_run
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text8
  5532  00A02C                     __ptext8:
  5533                           	opt stack 0
  5534  00A02C                     __ui_encoder:
  5535                           	opt stack 15
  5536                           
  5537                           ;ui.c: 19: switch(os.display_mode)
  5538                           
  5539                           ;incstack = 0
  5540  00A02C  D1EB               	goto	l21161
  5541  00A02E                     l20937:
  5542                           
  5543                           ;ui.c: 22: if(os.encoderCount>0)
  5544  00A02E  0102               	movlb	2	; () banked
  5545  00A030  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5546  00A032  0A80               	xorlw	128
  5547  00A034  0F7F               	addlw	-129
  5548  00A036  A0D8               	btfss	status,0,c
  5549  00A038  D002               	goto	l20941
  5550                           
  5551                           ; BSR set to: 2
  5552                           ;ui.c: 23: {
  5553                           ;ui.c: 24: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5554  00A03A  0E10               	movlw	16
  5555  00A03C  D004               	goto	L1
  5556  00A03E                     l20941:
  5557                           
  5558                           ; BSR set to: 2
  5559                           ;ui.c: 26: else if(os.encoderCount<0)
  5560  00A03E  0102               	movlb	2	; () banked
  5561  00A040  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5562  00A042  D003               	goto	l1747
  5563                           
  5564                           ; BSR set to: 2
  5565                           ;ui.c: 27: {
  5566                           ;ui.c: 28: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  5567  00A044  0E60               	movlw	96
  5568  00A046                     L1:
  5569  00A046  0102               	movlb	2	; () banked
  5570  00A048  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5571  00A04A                     l1747:
  5572                           
  5573                           ; BSR set to: 2
  5574                           ;ui.c: 29: }
  5575                           ;ui.c: 30: if(os.buttonCount)
  5576  00A04A  0102               	movlb	2	; () banked
  5577  00A04C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5578                           
  5579                           ; BSR set to: 2
  5580                           ;ui.c: 33: }
  5581                           ;ui.c: 34: os.encoderCount = 0;
  5582                           
  5583                           ; BSR set to: 2
  5584                           
  5585                           ;ui.c: 31: {
  5586                           ;ui.c: 32: ;
  5587  00A04E  0E00               	movlw	0
  5588  00A050  0102               	movlb	2	; () banked
  5589  00A052  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5590                           
  5591                           ;ui.c: 35: os.buttonCount = 0;
  5592  00A054  0E00               	movlw	0
  5593  00A056  0102               	movlb	2	; () banked
  5594  00A058  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5595                           
  5596                           ;ui.c: 36: break;
  5597  00A05A  0012               	return	
  5598  00A05C                     l20947:
  5599                           
  5600                           ; BSR set to: 2
  5601                           ;ui.c: 39: if(os.encoderCount>0)
  5602  00A05C  0102               	movlb	2	; () banked
  5603  00A05E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5604  00A060  0A80               	xorlw	128
  5605  00A062  0F7F               	addlw	-129
  5606  00A064  A0D8               	btfss	status,0,c
  5607  00A066  D002               	goto	l20951
  5608                           
  5609                           ; BSR set to: 2
  5610                           ;ui.c: 40: {
  5611                           ;ui.c: 41: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5612  00A068  0E20               	movlw	32
  5613  00A06A  D004               	goto	L2
  5614  00A06C                     l20951:
  5615                           
  5616                           ; BSR set to: 2
  5617                           ;ui.c: 43: else if(os.encoderCount<0)
  5618  00A06C  0102               	movlb	2	; () banked
  5619  00A06E  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5620  00A070  D003               	goto	l1753
  5621                           
  5622                           ; BSR set to: 2
  5623                           ;ui.c: 44: {
  5624                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_OVERVIEW;
  5625  00A072  0E00               	movlw	0
  5626  00A074                     L2:
  5627  00A074  0102               	movlb	2	; () banked
  5628  00A076  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5629  00A078                     l1753:
  5630                           
  5631                           ; BSR set to: 2
  5632                           ;ui.c: 46: }
  5633                           ;ui.c: 47: if(os.buttonCount)
  5634  00A078  0102               	movlb	2	; () banked
  5635  00A07A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5636  00A07C  B4D8               	btfsc	status,2,c
  5637  00A07E  D003               	goto	l1755
  5638                           
  5639                           ; BSR set to: 2
  5640                           ;ui.c: 48: {
  5641                           ;ui.c: 49: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  5642  00A080  0E11               	movlw	17
  5643  00A082  0102               	movlb	2	; () banked
  5644  00A084  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5645  00A086                     l1755:
  5646                           
  5647                           ; BSR set to: 2
  5648                           ;ui.c: 50: }
  5649                           ;ui.c: 51: os.encoderCount = 0;
  5650  00A086  0E00               	movlw	0
  5651  00A088  0102               	movlb	2	; () banked
  5652  00A08A  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5653                           
  5654                           ;ui.c: 52: os.buttonCount = 0;
  5655  00A08C  0E00               	movlw	0
  5656  00A08E  0102               	movlb	2	; () banked
  5657  00A090  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5658                           
  5659                           ;ui.c: 53: break;
  5660  00A092  0012               	return	
  5661  00A094                     l20957:
  5662                           
  5663                           ; BSR set to: 2
  5664                           ;ui.c: 56: if(os.encoderCount>0)
  5665  00A094  0102               	movlb	2	; () banked
  5666  00A096  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5667  00A098  0A80               	xorlw	128
  5668  00A09A  0F7F               	addlw	-129
  5669  00A09C  A0D8               	btfss	status,0,c
  5670  00A09E  D003               	goto	l20961
  5671                           
  5672                           ; BSR set to: 2
  5673                           ;ui.c: 57: {
  5674                           ;ui.c: 58: rtcc_increment_year();
  5675  00A0A0  EC21  F09E         	call	_rtcc_increment_year	;wreg free
  5676                           
  5677                           ;ui.c: 59: }
  5678  00A0A4  D004               	goto	l20965
  5679  00A0A6                     l20961:
  5680                           
  5681                           ;ui.c: 60: else if(os.encoderCount<0)
  5682  00A0A6  0102               	movlb	2	; () banked
  5683  00A0A8  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5684                           
  5685                           ; BSR set to: 2
  5686                           ;ui.c: 61: {
  5687                           ;ui.c: 62: rtcc_decrement_year();
  5688  00A0AA  EC8A  F09E         	call	_rtcc_decrement_year	;wreg free
  5689  00A0AE                     l20965:
  5690                           
  5691                           ;ui.c: 63: }
  5692                           ;ui.c: 64: if(os.buttonCount)
  5693  00A0AE  0102               	movlb	2	; () banked
  5694  00A0B0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5695  00A0B2  B4D8               	btfsc	status,2,c
  5696  00A0B4  D005               	goto	l20971
  5697                           
  5698                           ; BSR set to: 2
  5699                           ;ui.c: 65: {
  5700                           ;ui.c: 66: rtcc_correct_day();
  5701  00A0B6  EC58  F09F         	call	_rtcc_correct_day	;wreg free
  5702                           
  5703                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  5704  00A0BA  0E12               	movlw	18
  5705  00A0BC  0102               	movlb	2	; () banked
  5706  00A0BE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5707  00A0C0                     l20971:
  5708                           
  5709                           ; BSR set to: 2
  5710                           ;ui.c: 68: }
  5711                           ;ui.c: 69: os.encoderCount = 0;
  5712  00A0C0  0E00               	movlw	0
  5713  00A0C2  0102               	movlb	2	; () banked
  5714  00A0C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5715                           
  5716                           ; BSR set to: 2
  5717                           ;ui.c: 70: os.buttonCount = 0;
  5718  00A0C6  0E00               	movlw	0
  5719  00A0C8  0102               	movlb	2	; () banked
  5720  00A0CA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5721                           
  5722                           ;ui.c: 71: break;
  5723  00A0CC  0012               	return	
  5724  00A0CE                     l20975:
  5725                           
  5726                           ; BSR set to: 2
  5727                           ;ui.c: 74: if(os.encoderCount>0)
  5728  00A0CE  0102               	movlb	2	; () banked
  5729  00A0D0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5730  00A0D2  0A80               	xorlw	128
  5731  00A0D4  0F7F               	addlw	-129
  5732  00A0D6  A0D8               	btfss	status,0,c
  5733  00A0D8  D003               	goto	l20979
  5734                           
  5735                           ; BSR set to: 2
  5736                           ;ui.c: 75: {
  5737                           ;ui.c: 76: rtcc_increment_month();
  5738  00A0DA  EC4B  F09E         	call	_rtcc_increment_month	;wreg free
  5739                           
  5740                           ;ui.c: 77: }
  5741  00A0DE  D004               	goto	l20983
  5742  00A0E0                     l20979:
  5743                           
  5744                           ;ui.c: 78: else if(os.encoderCount<0)
  5745  00A0E0  0102               	movlb	2	; () banked
  5746  00A0E2  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5747                           
  5748                           ; BSR set to: 2
  5749                           ;ui.c: 79: {
  5750                           ;ui.c: 80: rtcc_decrement_month();
  5751  00A0E4  ECB4  F09E         	call	_rtcc_decrement_month	;wreg free
  5752  00A0E8                     l20983:
  5753                           
  5754                           ;ui.c: 81: }
  5755                           ;ui.c: 82: if(os.buttonCount)
  5756  00A0E8  0102               	movlb	2	; () banked
  5757  00A0EA  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5758  00A0EC  B4D8               	btfsc	status,2,c
  5759  00A0EE  D005               	goto	l20989
  5760                           
  5761                           ; BSR set to: 2
  5762                           ;ui.c: 83: {
  5763                           ;ui.c: 84: rtcc_correct_day();
  5764  00A0F0  EC58  F09F         	call	_rtcc_correct_day	;wreg free
  5765                           
  5766                           ;ui.c: 85: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  5767  00A0F4  0E13               	movlw	19
  5768  00A0F6  0102               	movlb	2	; () banked
  5769  00A0F8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5770  00A0FA                     l20989:
  5771                           
  5772                           ; BSR set to: 2
  5773                           ;ui.c: 86: }
  5774                           ;ui.c: 87: os.encoderCount = 0;
  5775  00A0FA  0E00               	movlw	0
  5776  00A0FC  0102               	movlb	2	; () banked
  5777  00A0FE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5778                           
  5779                           ; BSR set to: 2
  5780                           ;ui.c: 88: os.buttonCount = 0;
  5781  00A100  0E00               	movlw	0
  5782  00A102  0102               	movlb	2	; () banked
  5783  00A104  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5784                           
  5785                           ;ui.c: 89: break;
  5786  00A106  0012               	return	
  5787  00A108                     l20993:
  5788                           
  5789                           ; BSR set to: 2
  5790                           ;ui.c: 92: if(os.encoderCount>0)
  5791  00A108  0102               	movlb	2	; () banked
  5792  00A10A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5793  00A10C  0A80               	xorlw	128
  5794  00A10E  0F7F               	addlw	-129
  5795  00A110  A0D8               	btfss	status,0,c
  5796  00A112  D003               	goto	l20997
  5797                           
  5798                           ; BSR set to: 2
  5799                           ;ui.c: 93: {
  5800                           ;ui.c: 94: rtcc_increment_day();
  5801  00A114  ECC9  F09D         	call	_rtcc_increment_day	;wreg free
  5802                           
  5803                           ;ui.c: 95: }
  5804  00A118  D004               	goto	l21001
  5805  00A11A                     l20997:
  5806                           
  5807                           ;ui.c: 96: else if(os.encoderCount<0)
  5808  00A11A  0102               	movlb	2	; () banked
  5809  00A11C  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5810                           
  5811                           ; BSR set to: 2
  5812                           ;ui.c: 97: {
  5813                           ;ui.c: 98: rtcc_decrement_day();
  5814  00A11E  ECDF  F09D         	call	_rtcc_decrement_day	;wreg free
  5815  00A122                     l21001:
  5816                           
  5817                           ;ui.c: 99: }
  5818                           ;ui.c: 100: if(os.buttonCount)
  5819  00A122  0102               	movlb	2	; () banked
  5820  00A124  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5821  00A126  B4D8               	btfsc	status,2,c
  5822  00A128  D003               	goto	l1770
  5823                           
  5824                           ; BSR set to: 2
  5825                           ;ui.c: 101: {
  5826                           ;ui.c: 102: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  5827  00A12A  0E14               	movlw	20
  5828  00A12C  0102               	movlb	2	; () banked
  5829  00A12E  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5830  00A130                     l1770:
  5831                           
  5832                           ; BSR set to: 2
  5833                           ;ui.c: 103: }
  5834                           ;ui.c: 104: os.encoderCount = 0;
  5835  00A130  0E00               	movlw	0
  5836  00A132  0102               	movlb	2	; () banked
  5837  00A134  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5838                           
  5839                           ;ui.c: 105: os.buttonCount = 0;
  5840  00A136  0E00               	movlw	0
  5841  00A138  0102               	movlb	2	; () banked
  5842  00A13A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5843                           
  5844                           ;ui.c: 106: break;
  5845  00A13C  0012               	return	
  5846  00A13E                     l21005:
  5847                           
  5848                           ; BSR set to: 2
  5849                           ;ui.c: 109: if(os.encoderCount>0)
  5850  00A13E  0102               	movlb	2	; () banked
  5851  00A140  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5852  00A142  0A80               	xorlw	128
  5853  00A144  0F7F               	addlw	-129
  5854  00A146  A0D8               	btfss	status,0,c
  5855  00A148  D003               	goto	l21009
  5856                           
  5857                           ; BSR set to: 2
  5858                           ;ui.c: 110: {
  5859                           ;ui.c: 111: rtcc_increment_hours();
  5860  00A14A  EC75  F09E         	call	_rtcc_increment_hours	;wreg free
  5861                           
  5862                           ;ui.c: 112: }
  5863  00A14E  D004               	goto	l21013
  5864  00A150                     l21009:
  5865                           
  5866                           ;ui.c: 113: else if(os.encoderCount<0)
  5867  00A150  0102               	movlb	2	; () banked
  5868  00A152  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5869                           
  5870                           ; BSR set to: 2
  5871                           ;ui.c: 114: {
  5872                           ;ui.c: 115: rtcc_decrement_hours();
  5873  00A154  ECDE  F09E         	call	_rtcc_decrement_hours	;wreg free
  5874  00A158                     l21013:
  5875                           
  5876                           ;ui.c: 116: }
  5877                           ;ui.c: 117: if(os.buttonCount)
  5878  00A158  0102               	movlb	2	; () banked
  5879  00A15A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5880  00A15C  B4D8               	btfsc	status,2,c
  5881  00A15E  D003               	goto	l1775
  5882                           
  5883                           ; BSR set to: 2
  5884                           ;ui.c: 118: {
  5885                           ;ui.c: 119: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  5886  00A160  0E15               	movlw	21
  5887  00A162  0102               	movlb	2	; () banked
  5888  00A164  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5889  00A166                     l1775:
  5890                           
  5891                           ; BSR set to: 2
  5892                           ;ui.c: 120: }
  5893                           ;ui.c: 121: os.encoderCount = 0;
  5894  00A166  0E00               	movlw	0
  5895  00A168  0102               	movlb	2	; () banked
  5896  00A16A  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5897                           
  5898                           ;ui.c: 122: os.buttonCount = 0;
  5899  00A16C  0E00               	movlw	0
  5900  00A16E  0102               	movlb	2	; () banked
  5901  00A170  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5902                           
  5903                           ;ui.c: 123: break;
  5904  00A172  0012               	return	
  5905  00A174                     l21017:
  5906                           
  5907                           ; BSR set to: 2
  5908                           ;ui.c: 126: if(os.encoderCount>0)
  5909  00A174  0102               	movlb	2	; () banked
  5910  00A176  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5911  00A178  0A80               	xorlw	128
  5912  00A17A  0F7F               	addlw	-129
  5913  00A17C  A0D8               	btfss	status,0,c
  5914  00A17E  D003               	goto	l21021
  5915                           
  5916                           ; BSR set to: 2
  5917                           ;ui.c: 127: {
  5918                           ;ui.c: 128: rtcc_increment_minutes();
  5919  00A180  EC60  F09E         	call	_rtcc_increment_minutes	;wreg free
  5920                           
  5921                           ;ui.c: 129: }
  5922  00A184  D004               	goto	l21025
  5923  00A186                     l21021:
  5924                           
  5925                           ;ui.c: 130: else if(os.encoderCount<0)
  5926  00A186  0102               	movlb	2	; () banked
  5927  00A188  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5928                           
  5929                           ; BSR set to: 2
  5930                           ;ui.c: 131: {
  5931                           ;ui.c: 132: rtcc_decrement_minutes();
  5932  00A18A  ECC9  F09E         	call	_rtcc_decrement_minutes	;wreg free
  5933  00A18E                     l21025:
  5934                           
  5935                           ;ui.c: 133: }
  5936                           ;ui.c: 134: if(os.buttonCount)
  5937  00A18E  0102               	movlb	2	; () banked
  5938  00A190  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5939  00A192  B4D8               	btfsc	status,2,c
  5940  00A194  D003               	goto	l1780
  5941                           
  5942                           ; BSR set to: 2
  5943                           ;ui.c: 135: {
  5944                           ;ui.c: 136: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  5945  00A196  0E16               	movlw	22
  5946  00A198  0102               	movlb	2	; () banked
  5947  00A19A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5948  00A19C                     l1780:
  5949                           
  5950                           ; BSR set to: 2
  5951                           ;ui.c: 137: }
  5952                           ;ui.c: 138: os.encoderCount = 0;
  5953  00A19C  0E00               	movlw	0
  5954  00A19E  0102               	movlb	2	; () banked
  5955  00A1A0  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5956                           
  5957                           ;ui.c: 139: os.buttonCount = 0;
  5958  00A1A2  0E00               	movlw	0
  5959  00A1A4  0102               	movlb	2	; () banked
  5960  00A1A6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5961                           
  5962                           ;ui.c: 140: break;
  5963  00A1A8  0012               	return	
  5964  00A1AA                     l21029:
  5965                           
  5966                           ; BSR set to: 2
  5967                           ;ui.c: 143: if(os.encoderCount>0)
  5968  00A1AA  0102               	movlb	2	; () banked
  5969  00A1AC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5970  00A1AE  0A80               	xorlw	128
  5971  00A1B0  0F7F               	addlw	-129
  5972  00A1B2  A0D8               	btfss	status,0,c
  5973  00A1B4  D003               	goto	l21033
  5974                           
  5975                           ; BSR set to: 2
  5976                           ;ui.c: 144: {
  5977                           ;ui.c: 145: rtcc_increment_seconds();
  5978  00A1B6  EC36  F09E         	call	_rtcc_increment_seconds	;wreg free
  5979                           
  5980                           ;ui.c: 146: }
  5981  00A1BA  D004               	goto	l21037
  5982  00A1BC                     l21033:
  5983                           
  5984                           ;ui.c: 147: else if(os.encoderCount<0)
  5985  00A1BC  0102               	movlb	2	; () banked
  5986  00A1BE  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5987                           
  5988                           ; BSR set to: 2
  5989                           ;ui.c: 148: {
  5990                           ;ui.c: 149: rtcc_decrement_seconds();
  5991  00A1C0  EC9F  F09E         	call	_rtcc_decrement_seconds	;wreg free
  5992  00A1C4                     l21037:
  5993                           
  5994                           ;ui.c: 150: }
  5995                           ;ui.c: 151: if(os.buttonCount)
  5996  00A1C4  0102               	movlb	2	; () banked
  5997  00A1C6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5998  00A1C8  B4D8               	btfsc	status,2,c
  5999  00A1CA  D005               	goto	l21043
  6000                           
  6001                           ; BSR set to: 2
  6002                           ;ui.c: 152: {
  6003                           ;ui.c: 153: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6004  00A1CC  0E10               	movlw	16
  6005  00A1CE  0102               	movlb	2	; () banked
  6006  00A1D0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6007                           
  6008                           ; BSR set to: 2
  6009                           ;ui.c: 154: rtcc_write_eeprom();
  6010  00A1D2  ECBA  F099         	call	_rtcc_write_eeprom	;wreg free
  6011  00A1D6                     l21043:
  6012                           
  6013                           ;ui.c: 155: }
  6014                           ;ui.c: 156: os.encoderCount = 0;
  6015  00A1D6  0E00               	movlw	0
  6016  00A1D8  0102               	movlb	2	; () banked
  6017  00A1DA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6018                           
  6019                           ; BSR set to: 2
  6020                           ;ui.c: 157: os.buttonCount = 0;
  6021  00A1DC  0E00               	movlw	0
  6022  00A1DE  0102               	movlb	2	; () banked
  6023  00A1E0  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6024                           
  6025                           ;ui.c: 158: break;
  6026  00A1E2  0012               	return	
  6027  00A1E4                     l21047:
  6028                           
  6029                           ; BSR set to: 2
  6030                           ;ui.c: 161: if(os.encoderCount>0)
  6031  00A1E4  0102               	movlb	2	; () banked
  6032  00A1E6  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6033  00A1E8  0A80               	xorlw	128
  6034  00A1EA  0F7F               	addlw	-129
  6035  00A1EC  A0D8               	btfss	status,0,c
  6036  00A1EE  D002               	goto	l21051
  6037                           
  6038                           ; BSR set to: 2
  6039                           ;ui.c: 162: {
  6040                           ;ui.c: 163: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6041  00A1F0  0E30               	movlw	48
  6042  00A1F2  D004               	goto	L3
  6043  00A1F4                     l21051:
  6044                           
  6045                           ; BSR set to: 2
  6046                           ;ui.c: 165: else if(os.encoderCount<0)
  6047  00A1F4  0102               	movlb	2	; () banked
  6048  00A1F6  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6049  00A1F8  D003               	goto	l1788
  6050                           
  6051                           ; BSR set to: 2
  6052                           ;ui.c: 166: {
  6053                           ;ui.c: 167: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6054  00A1FA  0E10               	movlw	16
  6055  00A1FC                     L3:
  6056  00A1FC  0102               	movlb	2	; () banked
  6057  00A1FE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6058  00A200                     l1788:
  6059                           
  6060                           ; BSR set to: 2
  6061                           ;ui.c: 168: }
  6062                           ;ui.c: 169: if(os.buttonCount)
  6063  00A200  0102               	movlb	2	; () banked
  6064  00A202  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6065  00A204  B4D8               	btfsc	status,2,c
  6066  00A206  D00E               	goto	l21059
  6067                           
  6068                           ; BSR set to: 2
  6069                           ;ui.c: 170: {
  6070                           ;ui.c: 171: if(os.output_voltage>12000)
  6071  00A208  0102               	movlb	2	; () banked
  6072  00A20A  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6073  00A20C  D00B               	goto	l21059
  6074  00A20E  0EE1               	movlw	225
  6075  00A210  0102               	movlb	2	; () banked
  6076  00A212  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  6077  00A214  0E2E               	movlw	46
  6078  00A216  0102               	movlb	2	; () banked
  6079  00A218  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  6080  00A21A  A0D8               	btfss	status,0,c
  6081  00A21C  D003               	goto	l21059
  6082                           
  6083                           ; BSR set to: 2
  6084                           ;ui.c: 172: {
  6085                           ;ui.c: 173: system_output_toggle(OUTPUT_USB);
  6086  00A21E  0E10               	movlw	16
  6087  00A220  EC45  F09F         	call	_system_output_toggle
  6088  00A224                     l21059:
  6089                           
  6090                           ;ui.c: 174: }
  6091                           ;ui.c: 175: }
  6092                           ;ui.c: 176: os.encoderCount = 0;
  6093  00A224  0E00               	movlw	0
  6094  00A226  0102               	movlb	2	; () banked
  6095  00A228  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6096                           
  6097                           ; BSR set to: 2
  6098                           ;ui.c: 177: os.buttonCount = 0;
  6099  00A22A  0E00               	movlw	0
  6100  00A22C  0102               	movlb	2	; () banked
  6101  00A22E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6102                           
  6103                           ;ui.c: 178: break;
  6104  00A230  0012               	return	
  6105  00A232                     l21063:
  6106                           
  6107                           ; BSR set to: 2
  6108                           ;ui.c: 181: if(os.encoderCount>0)
  6109  00A232  0102               	movlb	2	; () banked
  6110  00A234  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6111  00A236  0A80               	xorlw	128
  6112  00A238  0F7F               	addlw	-129
  6113  00A23A  A0D8               	btfss	status,0,c
  6114  00A23C  D002               	goto	l21067
  6115                           
  6116                           ; BSR set to: 2
  6117                           ;ui.c: 182: {
  6118                           ;ui.c: 183: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6119  00A23E  0E40               	movlw	64
  6120  00A240  D004               	goto	L4
  6121  00A242                     l21067:
  6122                           
  6123                           ; BSR set to: 2
  6124                           ;ui.c: 185: else if(os.encoderCount<0)
  6125  00A242  0102               	movlb	2	; () banked
  6126  00A244  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6127  00A246  D003               	goto	l1794
  6128                           
  6129                           ; BSR set to: 2
  6130                           ;ui.c: 186: {
  6131                           ;ui.c: 187: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  6132  00A248  0E20               	movlw	32
  6133  00A24A                     L4:
  6134  00A24A  0102               	movlb	2	; () banked
  6135  00A24C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6136  00A24E                     l1794:
  6137                           
  6138                           ; BSR set to: 2
  6139                           ;ui.c: 188: }
  6140                           ;ui.c: 189: if(os.buttonCount)
  6141  00A24E  0102               	movlb	2	; () banked
  6142  00A250  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6143  00A252  B4D8               	btfsc	status,2,c
  6144  00A254  D003               	goto	l1796
  6145                           
  6146                           ; BSR set to: 2
  6147                           ;ui.c: 190: {
  6148                           ;ui.c: 191: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  6149  00A256  0E31               	movlw	49
  6150  00A258  0102               	movlb	2	; () banked
  6151  00A25A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6152  00A25C                     l1796:
  6153                           
  6154                           ; BSR set to: 2
  6155                           ;ui.c: 192: }
  6156                           ;ui.c: 193: os.encoderCount = 0;
  6157  00A25C  0E00               	movlw	0
  6158  00A25E  0102               	movlb	2	; () banked
  6159  00A260  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6160                           
  6161                           ;ui.c: 194: os.buttonCount = 0;
  6162  00A262  0E00               	movlw	0
  6163  00A264  0102               	movlb	2	; () banked
  6164  00A266  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6165                           
  6166                           ;ui.c: 195: break;
  6167  00A268  0012               	return	
  6168  00A26A                     l21073:
  6169                           
  6170                           ; BSR set to: 2
  6171                           ;ui.c: 198: if(os.encoderCount>0)
  6172  00A26A  0102               	movlb	2	; () banked
  6173  00A26C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6174  00A26E  0A80               	xorlw	128
  6175  00A270  0F7F               	addlw	-129
  6176  00A272  A0D8               	btfss	status,0,c
  6177  00A274  D007               	goto	l21079
  6178                           
  6179                           ; BSR set to: 2
  6180                           ;ui.c: 199: {
  6181                           ;ui.c: 200: if(os.output_voltage>-1)
  6182  00A276  0102               	movlb	2	; () banked
  6183  00A278  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6184  00A27A  D00A               	goto	l21083
  6185                           
  6186                           ; BSR set to: 2
  6187                           ;ui.c: 201: system_output_on(OUTPUT_1);
  6188  00A27C  0E01               	movlw	1
  6189  00A27E  EC0A  F09A         	call	_system_output_on
  6190                           
  6191                           ;ui.c: 202: }
  6192  00A282  D006               	goto	l21083
  6193  00A284                     l21079:
  6194                           
  6195                           ;ui.c: 203: else if(os.encoderCount<0)
  6196  00A284  0102               	movlb	2	; () banked
  6197  00A286  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6198  00A288  D003               	goto	l21083
  6199                           
  6200                           ; BSR set to: 2
  6201                           ;ui.c: 204: {
  6202                           ;ui.c: 205: system_output_off(OUTPUT_1);
  6203  00A28A  0E01               	movlw	1
  6204  00A28C  ECE5  F098         	call	_system_output_off
  6205  00A290                     l21083:
  6206                           
  6207                           ;ui.c: 206: }
  6208                           ;ui.c: 207: if(os.buttonCount)
  6209  00A290  0102               	movlb	2	; () banked
  6210  00A292  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6211  00A294  B4D8               	btfsc	status,2,c
  6212  00A296  D003               	goto	l1802
  6213                           
  6214                           ; BSR set to: 2
  6215                           ;ui.c: 208: {
  6216                           ;ui.c: 209: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6217  00A298  0E32               	movlw	50
  6218  00A29A  0102               	movlb	2	; () banked
  6219  00A29C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6220  00A29E                     l1802:
  6221                           
  6222                           ; BSR set to: 2
  6223                           ;ui.c: 210: }
  6224                           ;ui.c: 211: os.encoderCount = 0;
  6225  00A29E  0E00               	movlw	0
  6226  00A2A0  0102               	movlb	2	; () banked
  6227  00A2A2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6228                           
  6229                           ;ui.c: 212: os.buttonCount = 0;
  6230  00A2A4  0E00               	movlw	0
  6231  00A2A6  0102               	movlb	2	; () banked
  6232  00A2A8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6233                           
  6234                           ;ui.c: 213: break;
  6235  00A2AA  0012               	return	
  6236  00A2AC                     l21087:
  6237                           
  6238                           ; BSR set to: 2
  6239                           ;ui.c: 216: if(os.encoderCount>0)
  6240  00A2AC  0102               	movlb	2	; () banked
  6241  00A2AE  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6242  00A2B0  0A80               	xorlw	128
  6243  00A2B2  0F7F               	addlw	-129
  6244  00A2B4  A0D8               	btfss	status,0,c
  6245  00A2B6  D007               	goto	l21093
  6246                           
  6247                           ; BSR set to: 2
  6248                           ;ui.c: 217: {
  6249                           ;ui.c: 218: if(os.output_voltage>-1)
  6250  00A2B8  0102               	movlb	2	; () banked
  6251  00A2BA  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6252  00A2BC  D00A               	goto	l21097
  6253                           
  6254                           ; BSR set to: 2
  6255                           ;ui.c: 219: system_output_on(OUTPUT_2);
  6256  00A2BE  0E02               	movlw	2
  6257  00A2C0  EC0A  F09A         	call	_system_output_on
  6258                           
  6259                           ;ui.c: 220: }
  6260  00A2C4  D006               	goto	l21097
  6261  00A2C6                     l21093:
  6262                           
  6263                           ;ui.c: 221: else if(os.encoderCount<0)
  6264  00A2C6  0102               	movlb	2	; () banked
  6265  00A2C8  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6266  00A2CA  D003               	goto	l21097
  6267                           
  6268                           ; BSR set to: 2
  6269                           ;ui.c: 222: {
  6270                           ;ui.c: 223: system_output_off(OUTPUT_2);
  6271  00A2CC  0E02               	movlw	2
  6272  00A2CE  ECE5  F098         	call	_system_output_off
  6273  00A2D2                     l21097:
  6274                           
  6275                           ;ui.c: 224: }
  6276                           ;ui.c: 225: if(os.buttonCount)
  6277  00A2D2  0102               	movlb	2	; () banked
  6278  00A2D4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6279  00A2D6  B4D8               	btfsc	status,2,c
  6280  00A2D8  D003               	goto	l1808
  6281                           
  6282                           ; BSR set to: 2
  6283                           ;ui.c: 226: {
  6284                           ;ui.c: 227: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6285  00A2DA  0E33               	movlw	51
  6286  00A2DC  0102               	movlb	2	; () banked
  6287  00A2DE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6288  00A2E0                     l1808:
  6289                           
  6290                           ; BSR set to: 2
  6291                           ;ui.c: 228: }
  6292                           ;ui.c: 229: os.encoderCount = 0;
  6293  00A2E0  0E00               	movlw	0
  6294  00A2E2  0102               	movlb	2	; () banked
  6295  00A2E4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6296                           
  6297                           ;ui.c: 230: os.buttonCount = 0;
  6298  00A2E6  0E00               	movlw	0
  6299  00A2E8  0102               	movlb	2	; () banked
  6300  00A2EA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6301                           
  6302                           ;ui.c: 231: break;
  6303  00A2EC  0012               	return	
  6304  00A2EE                     l21101:
  6305                           
  6306                           ; BSR set to: 2
  6307                           ;ui.c: 234: if(os.encoderCount>0)
  6308  00A2EE  0102               	movlb	2	; () banked
  6309  00A2F0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6310  00A2F2  0A80               	xorlw	128
  6311  00A2F4  0F7F               	addlw	-129
  6312  00A2F6  A0D8               	btfss	status,0,c
  6313  00A2F8  D007               	goto	l21107
  6314                           
  6315                           ; BSR set to: 2
  6316                           ;ui.c: 235: {
  6317                           ;ui.c: 236: if(os.output_voltage>-1)
  6318  00A2FA  0102               	movlb	2	; () banked
  6319  00A2FC  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6320  00A2FE  D00A               	goto	l21111
  6321                           
  6322                           ; BSR set to: 2
  6323                           ;ui.c: 237: system_output_on(OUTPUT_3);
  6324  00A300  0E04               	movlw	4
  6325  00A302  EC0A  F09A         	call	_system_output_on
  6326                           
  6327                           ;ui.c: 238: }
  6328  00A306  D006               	goto	l21111
  6329  00A308                     l21107:
  6330                           
  6331                           ;ui.c: 239: else if(os.encoderCount<0)
  6332  00A308  0102               	movlb	2	; () banked
  6333  00A30A  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6334  00A30C  D003               	goto	l21111
  6335                           
  6336                           ; BSR set to: 2
  6337                           ;ui.c: 240: {
  6338                           ;ui.c: 241: system_output_off(OUTPUT_3);
  6339  00A30E  0E04               	movlw	4
  6340  00A310  ECE5  F098         	call	_system_output_off
  6341  00A314                     l21111:
  6342                           
  6343                           ;ui.c: 242: }
  6344                           ;ui.c: 243: if(os.buttonCount)
  6345  00A314  0102               	movlb	2	; () banked
  6346  00A316  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6347  00A318  B4D8               	btfsc	status,2,c
  6348  00A31A  D003               	goto	l1814
  6349                           
  6350                           ; BSR set to: 2
  6351                           ;ui.c: 244: {
  6352                           ;ui.c: 245: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6353  00A31C  0E34               	movlw	52
  6354  00A31E  0102               	movlb	2	; () banked
  6355  00A320  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6356  00A322                     l1814:
  6357                           
  6358                           ; BSR set to: 2
  6359                           ;ui.c: 246: }
  6360                           ;ui.c: 247: os.encoderCount = 0;
  6361  00A322  0E00               	movlw	0
  6362  00A324  0102               	movlb	2	; () banked
  6363  00A326  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6364                           
  6365                           ;ui.c: 248: os.buttonCount = 0;
  6366  00A328  0E00               	movlw	0
  6367  00A32A  0102               	movlb	2	; () banked
  6368  00A32C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6369                           
  6370                           ;ui.c: 249: break;
  6371  00A32E  0012               	return	
  6372  00A330                     l21115:
  6373                           
  6374                           ; BSR set to: 2
  6375                           ;ui.c: 252: if(os.encoderCount>0)
  6376  00A330  0102               	movlb	2	; () banked
  6377  00A332  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6378  00A334  0A80               	xorlw	128
  6379  00A336  0F7F               	addlw	-129
  6380  00A338  A0D8               	btfss	status,0,c
  6381  00A33A  D007               	goto	l21121
  6382                           
  6383                           ; BSR set to: 2
  6384                           ;ui.c: 253: {
  6385                           ;ui.c: 254: if(os.output_voltage>-1)
  6386  00A33C  0102               	movlb	2	; () banked
  6387  00A33E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6388  00A340  D00A               	goto	l21125
  6389                           
  6390                           ; BSR set to: 2
  6391                           ;ui.c: 255: system_output_on(OUTPUT_4);
  6392  00A342  0E08               	movlw	8
  6393  00A344  EC0A  F09A         	call	_system_output_on
  6394                           
  6395                           ;ui.c: 256: }
  6396  00A348  D006               	goto	l21125
  6397  00A34A                     l21121:
  6398                           
  6399                           ;ui.c: 257: else if(os.encoderCount<0)
  6400  00A34A  0102               	movlb	2	; () banked
  6401  00A34C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6402  00A34E  D003               	goto	l21125
  6403                           
  6404                           ; BSR set to: 2
  6405                           ;ui.c: 258: {
  6406                           ;ui.c: 259: system_output_off(OUTPUT_4);
  6407  00A350  0E08               	movlw	8
  6408  00A352  ECE5  F098         	call	_system_output_off
  6409  00A356                     l21125:
  6410                           
  6411                           ;ui.c: 260: }
  6412                           ;ui.c: 261: if(os.buttonCount)
  6413  00A356  0102               	movlb	2	; () banked
  6414  00A358  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6415  00A35A  B4D8               	btfsc	status,2,c
  6416  00A35C  D003               	goto	l1820
  6417                           
  6418                           ; BSR set to: 2
  6419                           ;ui.c: 262: {
  6420                           ;ui.c: 263: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6421  00A35E  0E30               	movlw	48
  6422  00A360  0102               	movlb	2	; () banked
  6423  00A362  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6424  00A364                     l1820:
  6425                           
  6426                           ; BSR set to: 2
  6427                           ;ui.c: 264: }
  6428                           ;ui.c: 265: os.encoderCount = 0;
  6429  00A364  0E00               	movlw	0
  6430  00A366  0102               	movlb	2	; () banked
  6431  00A368  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6432                           
  6433                           ;ui.c: 266: os.buttonCount = 0;
  6434  00A36A  0E00               	movlw	0
  6435  00A36C  0102               	movlb	2	; () banked
  6436  00A36E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6437                           
  6438                           ;ui.c: 267: break;
  6439  00A370  0012               	return	
  6440  00A372                     l21129:
  6441                           
  6442                           ; BSR set to: 2
  6443                           ;ui.c: 270: if(os.encoderCount>0)
  6444  00A372  0102               	movlb	2	; () banked
  6445  00A374  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6446  00A376  0A80               	xorlw	128
  6447  00A378  0F7F               	addlw	-129
  6448  00A37A  A0D8               	btfss	status,0,c
  6449  00A37C  D002               	goto	l21133
  6450                           
  6451                           ; BSR set to: 2
  6452                           ;ui.c: 271: {
  6453                           ;ui.c: 272: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6454  00A37E  0E50               	movlw	80
  6455  00A380  D004               	goto	L5
  6456  00A382                     l21133:
  6457                           
  6458                           ; BSR set to: 2
  6459                           ;ui.c: 274: else if(os.encoderCount<0)
  6460  00A382  0102               	movlb	2	; () banked
  6461  00A384  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6462  00A386  D003               	goto	l1823
  6463                           
  6464                           ; BSR set to: 2
  6465                           ;ui.c: 275: {
  6466                           ;ui.c: 276: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6467  00A388  0E30               	movlw	48
  6468  00A38A                     L5:
  6469  00A38A  0102               	movlb	2	; () banked
  6470  00A38C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6471  00A38E                     l1823:
  6472                           
  6473                           ; BSR set to: 2
  6474                           ;ui.c: 277: }
  6475                           ;ui.c: 278: if(os.buttonCount)
  6476  00A38E  0102               	movlb	2	; () banked
  6477  00A390  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6478                           
  6479                           ; BSR set to: 2
  6480                           ;ui.c: 281: }
  6481                           ;ui.c: 282: os.encoderCount = 0;
  6482                           
  6483                           ; BSR set to: 2
  6484                           
  6485                           ;ui.c: 279: {
  6486                           ;ui.c: 280: ;
  6487  00A392  0E00               	movlw	0
  6488  00A394  0102               	movlb	2	; () banked
  6489  00A396  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6490                           
  6491                           ;ui.c: 283: os.buttonCount = 0;
  6492  00A398  0E00               	movlw	0
  6493  00A39A  0102               	movlb	2	; () banked
  6494  00A39C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6495                           
  6496                           ;ui.c: 284: break;
  6497  00A39E  0012               	return	
  6498  00A3A0                     l21139:
  6499                           
  6500                           ; BSR set to: 2
  6501                           ;ui.c: 287: if(os.encoderCount>0)
  6502  00A3A0  0102               	movlb	2	; () banked
  6503  00A3A2  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6504  00A3A4  0A80               	xorlw	128
  6505  00A3A6  0F7F               	addlw	-129
  6506  00A3A8  A0D8               	btfss	status,0,c
  6507  00A3AA  D002               	goto	l21143
  6508                           
  6509                           ; BSR set to: 2
  6510                           ;ui.c: 288: {
  6511                           ;ui.c: 289: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6512  00A3AC  0E60               	movlw	96
  6513  00A3AE  D004               	goto	L6
  6514  00A3B0                     l21143:
  6515                           
  6516                           ; BSR set to: 2
  6517                           ;ui.c: 291: else if(os.encoderCount<0)
  6518  00A3B0  0102               	movlb	2	; () banked
  6519  00A3B2  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6520  00A3B4  D003               	goto	l1828
  6521                           
  6522                           ; BSR set to: 2
  6523                           ;ui.c: 292: {
  6524                           ;ui.c: 293: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6525  00A3B6  0E40               	movlw	64
  6526  00A3B8                     L6:
  6527  00A3B8  0102               	movlb	2	; () banked
  6528  00A3BA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6529  00A3BC                     l1828:
  6530                           
  6531                           ; BSR set to: 2
  6532                           ;ui.c: 294: }
  6533                           ;ui.c: 295: if(os.buttonCount)
  6534  00A3BC  0102               	movlb	2	; () banked
  6535  00A3BE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6536                           
  6537                           ; BSR set to: 2
  6538                           ;ui.c: 298: }
  6539                           ;ui.c: 299: os.encoderCount = 0;
  6540                           
  6541                           ; BSR set to: 2
  6542                           
  6543                           ;ui.c: 296: {
  6544                           ;ui.c: 297: ;
  6545  00A3C0  0E00               	movlw	0
  6546  00A3C2  0102               	movlb	2	; () banked
  6547  00A3C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6548                           
  6549                           ;ui.c: 300: os.buttonCount = 0;
  6550  00A3C6  0E00               	movlw	0
  6551  00A3C8  0102               	movlb	2	; () banked
  6552  00A3CA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6553                           
  6554                           ;ui.c: 301: break;
  6555  00A3CC  0012               	return	
  6556  00A3CE                     l21149:
  6557                           
  6558                           ; BSR set to: 2
  6559                           ;ui.c: 304: if(os.encoderCount>0)
  6560  00A3CE  0102               	movlb	2	; () banked
  6561  00A3D0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6562  00A3D2  0A80               	xorlw	128
  6563  00A3D4  0F7F               	addlw	-129
  6564  00A3D6  A0D8               	btfss	status,0,c
  6565  00A3D8  D002               	goto	l21153
  6566                           
  6567                           ; BSR set to: 2
  6568                           ;ui.c: 305: {
  6569                           ;ui.c: 306: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6570  00A3DA  0E00               	movlw	0
  6571  00A3DC  D004               	goto	L7
  6572  00A3DE                     l21153:
  6573                           
  6574                           ; BSR set to: 2
  6575                           ;ui.c: 308: else if(os.encoderCount<0)
  6576  00A3DE  0102               	movlb	2	; () banked
  6577  00A3E0  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6578  00A3E2  D003               	goto	l1833
  6579                           
  6580                           ; BSR set to: 2
  6581                           ;ui.c: 309: {
  6582                           ;ui.c: 310: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6583  00A3E4  0E50               	movlw	80
  6584  00A3E6                     L7:
  6585  00A3E6  0102               	movlb	2	; () banked
  6586  00A3E8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6587  00A3EA                     l1833:
  6588                           
  6589                           ; BSR set to: 2
  6590                           ;ui.c: 311: }
  6591                           ;ui.c: 312: if(os.buttonCount)
  6592  00A3EA  0102               	movlb	2	; () banked
  6593  00A3EC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6594                           
  6595                           ; BSR set to: 2
  6596                           ;ui.c: 315: }
  6597                           ;ui.c: 316: os.encoderCount = 0;
  6598                           
  6599                           ; BSR set to: 2
  6600                           
  6601                           ;ui.c: 313: {
  6602                           ;ui.c: 314: ;
  6603  00A3EE  0E00               	movlw	0
  6604  00A3F0  0102               	movlb	2	; () banked
  6605  00A3F2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6606                           
  6607                           ;ui.c: 317: os.buttonCount = 0;
  6608  00A3F4  0E00               	movlw	0
  6609  00A3F6  0102               	movlb	2	; () banked
  6610  00A3F8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6611                           
  6612                           ;ui.c: 318: break;
  6613  00A3FA  0012               	return	
  6614  00A3FC                     l21159:
  6615                           
  6616                           ; BSR set to: 2
  6617                           ;ui.c: 321: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6618  00A3FC  0E00               	movlw	0
  6619  00A3FE  0102               	movlb	2	; () banked
  6620  00A400  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6621                           
  6622                           ;ui.c: 322: }
  6623  00A402  0012               	return	
  6624  00A404                     l21161:
  6625  00A404  0102               	movlb	2	; () banked
  6626  00A406  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  6627                           
  6628                           ; Switch size 1, requested type "space"
  6629                           ; Number of cases is 17, Range of values is 0 to 96
  6630                           ; switch strategies available:
  6631                           ; Name         Instructions Cycles
  6632                           ; simple_byte           52    27 (average)
  6633                           ;	Chosen strategy is simple_byte
  6634  00A408  0A00               	xorlw	0	; case 0
  6635  00A40A  B4D8               	btfsc	status,2,c
  6636  00A40C  D610               	goto	l20937
  6637  00A40E  0A10               	xorlw	16	; case 16
  6638  00A410  B4D8               	btfsc	status,2,c
  6639  00A412  D624               	goto	l20947
  6640  00A414  0A01               	xorlw	1	; case 17
  6641  00A416  B4D8               	btfsc	status,2,c
  6642  00A418  D63D               	goto	l20957
  6643  00A41A  0A03               	xorlw	3	; case 18
  6644  00A41C  B4D8               	btfsc	status,2,c
  6645  00A41E  D657               	goto	l20975
  6646  00A420  0A01               	xorlw	1	; case 19
  6647  00A422  B4D8               	btfsc	status,2,c
  6648  00A424  D671               	goto	l20993
  6649  00A426  0A07               	xorlw	7	; case 20
  6650  00A428  B4D8               	btfsc	status,2,c
  6651  00A42A  D689               	goto	l21005
  6652  00A42C  0A01               	xorlw	1	; case 21
  6653  00A42E  B4D8               	btfsc	status,2,c
  6654  00A430  D6A1               	goto	l21017
  6655  00A432  0A03               	xorlw	3	; case 22
  6656  00A434  B4D8               	btfsc	status,2,c
  6657  00A436  D6B9               	goto	l21029
  6658  00A438  0A36               	xorlw	54	; case 32
  6659  00A43A  B4D8               	btfsc	status,2,c
  6660  00A43C  D6D3               	goto	l21047
  6661  00A43E  0A10               	xorlw	16	; case 48
  6662  00A440  B4D8               	btfsc	status,2,c
  6663  00A442  D6F7               	goto	l21063
  6664  00A444  0A01               	xorlw	1	; case 49
  6665  00A446  B4D8               	btfsc	status,2,c
  6666  00A448  D710               	goto	l21073
  6667  00A44A  0A03               	xorlw	3	; case 50
  6668  00A44C  B4D8               	btfsc	status,2,c
  6669  00A44E  D72E               	goto	l21087
  6670  00A450  0A01               	xorlw	1	; case 51
  6671  00A452  B4D8               	btfsc	status,2,c
  6672  00A454  D74C               	goto	l21101
  6673  00A456  0A07               	xorlw	7	; case 52
  6674  00A458  B4D8               	btfsc	status,2,c
  6675  00A45A  D76A               	goto	l21115
  6676  00A45C  0A74               	xorlw	116	; case 64
  6677  00A45E  B4D8               	btfsc	status,2,c
  6678  00A460  D788               	goto	l21129
  6679  00A462  0A10               	xorlw	16	; case 80
  6680  00A464  B4D8               	btfsc	status,2,c
  6681  00A466  D79C               	goto	l21139
  6682  00A468  0A30               	xorlw	48	; case 96
  6683  00A46A  B4D8               	btfsc	status,2,c
  6684  00A46C  D7B0               	goto	l21149
  6685  00A46E  D7C6               	goto	l21159
  6686  00A470                     __end_of__ui_encoder:
  6687                           	opt stack 0
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           intcon3	equ	0xFF0
  6693                           postinc0	equ	0xFEE
  6694                           wreg	equ	0xFE8
  6695                           postdec1	equ	0xFE5
  6696                           plusw1	equ	0xFE3
  6697                           fsr1h	equ	0xFE2
  6698                           fsr1l	equ	0xFE1
  6699                           postinc2	equ	0xFDE
  6700                           postdec2	equ	0xFDD
  6701                           plusw2	equ	0xFDB
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706 ;; *************** function _system_output_toggle *****************
  6707 ;; Defined at:
  6708 ;;		line 499 in file "os.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  output          1    wreg     enum E8129
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  output          1    2[BANK0 ] enum E8129
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;Total ram usage:        1 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:   11
  6729 ;; This function calls:
  6730 ;;		_system_output_is_on
  6731 ;;		_system_output_off
  6732 ;;		_system_output_on
  6733 ;; This function is called by:
  6734 ;;		__ui_encoder
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           	psect	text9
  6739  013E8A                     __ptext9:
  6740                           	opt stack 0
  6741  013E8A                     _system_output_toggle:
  6742                           	opt stack 17
  6743                           
  6744                           ; BSR set to: 2
  6745                           ;incstack = 0
  6746                           ;system_output_toggle@output stored from wreg
  6747  013E8A  0100               	movlb	0	; () banked
  6748  013E8C  6F62               	movwf	system_output_toggle@output& (0+255),b
  6749                           
  6750                           ;os.c: 501: if(system_output_is_on(output))
  6751  013E8E  0100               	movlb	0	; () banked
  6752  013E90  5162               	movf	system_output_toggle@output& (0+255),w,b
  6753  013E92  ECF8  F09F         	call	_system_output_is_on
  6754  013E96  0900               	iorlw	0
  6755  013E98  B4D8               	btfsc	status,2,c
  6756  013E9A  D005               	goto	l19531
  6757                           
  6758                           ;os.c: 502: system_output_off(output);
  6759  013E9C  0100               	movlb	0	; () banked
  6760  013E9E  5162               	movf	system_output_toggle@output& (0+255),w,b
  6761  013EA0  ECE5  F098         	call	_system_output_off
  6762  013EA4  0012               	return	
  6763  013EA6                     l19531:
  6764                           
  6765                           ;os.c: 503: else
  6766                           ;os.c: 504: system_output_on(output);
  6767  013EA6  0100               	movlb	0	; () banked
  6768  013EA8  5162               	movf	system_output_toggle@output& (0+255),w,b
  6769  013EAA  EC0A  F09A         	call	_system_output_on
  6770  013EAE  0012               	return	
  6771  013EB0                     __end_of_system_output_toggle:
  6772                           	opt stack 0
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           intcon3	equ	0xFF0
  6778                           postinc0	equ	0xFEE
  6779                           wreg	equ	0xFE8
  6780                           postdec1	equ	0xFE5
  6781                           plusw1	equ	0xFE3
  6782                           fsr1h	equ	0xFE2
  6783                           fsr1l	equ	0xFE1
  6784                           postinc2	equ	0xFDE
  6785                           postdec2	equ	0xFDD
  6786                           plusw2	equ	0xFDB
  6787                           fsr2h	equ	0xFDA
  6788                           fsr2l	equ	0xFD9
  6789                           status	equ	0xFD8
  6790                           
  6791 ;; *************** function _rtcc_increment_year *****************
  6792 ;; Defined at:
  6793 ;;		line 150 in file "rtcc.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  year            1    8[BANK0 ] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;Total ram usage:        1 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:   12
  6814 ;; This function calls:
  6815 ;;		__rtcc_increment_bcd
  6816 ;;		_rtcc_get_year
  6817 ;;		_rtcc_set_year
  6818 ;; This function is called by:
  6819 ;;		__ui_encoder
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text10
  6824  013C42                     __ptext10:
  6825                           	opt stack 0
  6826  013C42                     _rtcc_increment_year:
  6827                           	opt stack 16
  6828                           
  6829                           ;rtcc.c: 152: uint8_t year = rtcc_get_year();
  6830                           
  6831                           ;incstack = 0
  6832  013C42  ECA0  F0A0         	call	_rtcc_get_year	;wreg free
  6833  013C46  0100               	movlb	0	; () banked
  6834  013C48  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;rtcc.c: 153: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  6838  013C4A  0E00               	movlw	0
  6839  013C4C  0100               	movlb	0	; () banked
  6840  013C4E  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6841  013C50  0E99               	movlw	153
  6842  013C52  0100               	movlb	0	; () banked
  6843  013C54  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6844  013C56  0100               	movlb	0	; () banked
  6845  013C58  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6846  013C5A  EC49  F09B         	call	__rtcc_increment_bcd
  6847  013C5E  0100               	movlb	0	; () banked
  6848  013C60  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;rtcc.c: 154: rtcc_set_year(year);
  6852  013C62  0100               	movlb	0	; () banked
  6853  013C64  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6854  013C66  EC05  F0A0         	call	_rtcc_set_year
  6855  013C6A  0012               	return		;funcret
  6856  013C6C                     __end_of_rtcc_increment_year:
  6857                           	opt stack 0
  6858                           tblptru	equ	0xFF8
  6859                           tblptrh	equ	0xFF7
  6860                           tblptrl	equ	0xFF6
  6861                           tablat	equ	0xFF5
  6862                           intcon3	equ	0xFF0
  6863                           postinc0	equ	0xFEE
  6864                           wreg	equ	0xFE8
  6865                           postdec1	equ	0xFE5
  6866                           plusw1	equ	0xFE3
  6867                           fsr1h	equ	0xFE2
  6868                           fsr1l	equ	0xFE1
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           plusw2	equ	0xFDB
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _rtcc_increment_seconds *****************
  6877 ;; Defined at:
  6878 ;;		line 340 in file "rtcc.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  seconds         1    8[BANK0 ] unsigned char 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2, status,0, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6896 ;;Total ram usage:        1 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:   12
  6899 ;; This function calls:
  6900 ;;		__rtcc_increment_bcd
  6901 ;;		_rtcc_get_seconds
  6902 ;;		_rtcc_set_seconds
  6903 ;; This function is called by:
  6904 ;;		__ui_encoder
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text11
  6909  013C6C                     __ptext11:
  6910                           	opt stack 0
  6911  013C6C                     _rtcc_increment_seconds:
  6912                           	opt stack 16
  6913                           
  6914                           ;rtcc.c: 342: uint8_t seconds = rtcc_get_seconds();
  6915                           
  6916                           ;incstack = 0
  6917  013C6C  ECAA  F0A0         	call	_rtcc_get_seconds	;wreg free
  6918  013C70  0100               	movlb	0	; () banked
  6919  013C72  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;rtcc.c: 343: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  6923  013C74  0E00               	movlw	0
  6924  013C76  0100               	movlb	0	; () banked
  6925  013C78  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6926  013C7A  0E59               	movlw	89
  6927  013C7C  0100               	movlb	0	; () banked
  6928  013C7E  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6929  013C80  0100               	movlb	0	; () banked
  6930  013C82  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6931  013C84  EC49  F09B         	call	__rtcc_increment_bcd
  6932  013C88  0100               	movlb	0	; () banked
  6933  013C8A  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;rtcc.c: 344: rtcc_set_seconds(seconds);
  6937  013C8C  0100               	movlb	0	; () banked
  6938  013C8E  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6939  013C90  EC12  F0A0         	call	_rtcc_set_seconds
  6940  013C94  0012               	return		;funcret
  6941  013C96                     __end_of_rtcc_increment_seconds:
  6942                           	opt stack 0
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           intcon3	equ	0xFF0
  6948                           postinc0	equ	0xFEE
  6949                           wreg	equ	0xFE8
  6950                           postdec1	equ	0xFE5
  6951                           plusw1	equ	0xFE3
  6952                           fsr1h	equ	0xFE2
  6953                           fsr1l	equ	0xFE1
  6954                           postinc2	equ	0xFDE
  6955                           postdec2	equ	0xFDD
  6956                           plusw2	equ	0xFDB
  6957                           fsr2h	equ	0xFDA
  6958                           fsr2l	equ	0xFD9
  6959                           status	equ	0xFD8
  6960                           
  6961 ;; *************** function _rtcc_increment_month *****************
  6962 ;; Defined at:
  6963 ;;		line 188 in file "rtcc.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;		None
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  month           1    8[BANK0 ] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;Total ram usage:        1 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:   12
  6984 ;; This function calls:
  6985 ;;		__rtcc_increment_bcd
  6986 ;;		_rtcc_get_month
  6987 ;;		_rtcc_set_month
  6988 ;; This function is called by:
  6989 ;;		__ui_encoder
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text12
  6994  013C96                     __ptext12:
  6995                           	opt stack 0
  6996  013C96                     _rtcc_increment_month:
  6997                           	opt stack 16
  6998                           
  6999                           ;rtcc.c: 190: uint8_t month = rtcc_get_month();
  7000                           
  7001                           ;incstack = 0
  7002  013C96  ECB4  F0A0         	call	_rtcc_get_month	;wreg free
  7003  013C9A  0100               	movlb	0	; () banked
  7004  013C9C  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;rtcc.c: 191: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  7008  013C9E  0E01               	movlw	1
  7009  013CA0  0100               	movlb	0	; () banked
  7010  013CA2  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7011  013CA4  0E12               	movlw	18
  7012  013CA6  0100               	movlb	0	; () banked
  7013  013CA8  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7014  013CAA  0100               	movlb	0	; () banked
  7015  013CAC  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7016  013CAE  EC49  F09B         	call	__rtcc_increment_bcd
  7017  013CB2  0100               	movlb	0	; () banked
  7018  013CB4  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;rtcc.c: 192: rtcc_set_month(month);
  7022  013CB6  0100               	movlb	0	; () banked
  7023  013CB8  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7024  013CBA  EC1F  F0A0         	call	_rtcc_set_month
  7025  013CBE  0012               	return		;funcret
  7026  013CC0                     __end_of_rtcc_increment_month:
  7027                           	opt stack 0
  7028                           tblptru	equ	0xFF8
  7029                           tblptrh	equ	0xFF7
  7030                           tblptrl	equ	0xFF6
  7031                           tablat	equ	0xFF5
  7032                           intcon3	equ	0xFF0
  7033                           postinc0	equ	0xFEE
  7034                           wreg	equ	0xFE8
  7035                           postdec1	equ	0xFE5
  7036                           plusw1	equ	0xFE3
  7037                           fsr1h	equ	0xFE2
  7038                           fsr1l	equ	0xFE1
  7039                           postinc2	equ	0xFDE
  7040                           postdec2	equ	0xFDD
  7041                           plusw2	equ	0xFDB
  7042                           fsr2h	equ	0xFDA
  7043                           fsr2l	equ	0xFD9
  7044                           status	equ	0xFD8
  7045                           
  7046 ;; *************** function _rtcc_increment_minutes *****************
  7047 ;; Defined at:
  7048 ;;		line 302 in file "rtcc.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  minutes         1    8[BANK0 ] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;Total ram usage:        1 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:   12
  7069 ;; This function calls:
  7070 ;;		__rtcc_increment_bcd
  7071 ;;		_rtcc_get_minutes
  7072 ;;		_rtcc_set_minutes
  7073 ;; This function is called by:
  7074 ;;		__ui_encoder
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text13
  7079  013CC0                     __ptext13:
  7080                           	opt stack 0
  7081  013CC0                     _rtcc_increment_minutes:
  7082                           	opt stack 16
  7083                           
  7084                           ;rtcc.c: 304: uint8_t minutes = rtcc_get_minutes();
  7085                           
  7086                           ;incstack = 0
  7087  013CC0  ECBE  F0A0         	call	_rtcc_get_minutes	;wreg free
  7088  013CC4  0100               	movlb	0	; () banked
  7089  013CC6  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;rtcc.c: 305: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  7093  013CC8  0E00               	movlw	0
  7094  013CCA  0100               	movlb	0	; () banked
  7095  013CCC  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7096  013CCE  0E59               	movlw	89
  7097  013CD0  0100               	movlb	0	; () banked
  7098  013CD2  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7099  013CD4  0100               	movlb	0	; () banked
  7100  013CD6  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7101  013CD8  EC49  F09B         	call	__rtcc_increment_bcd
  7102  013CDC  0100               	movlb	0	; () banked
  7103  013CDE  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;rtcc.c: 306: rtcc_set_minutes(minutes);
  7107  013CE0  0100               	movlb	0	; () banked
  7108  013CE2  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7109  013CE4  EC2C  F0A0         	call	_rtcc_set_minutes
  7110  013CE8  0012               	return		;funcret
  7111  013CEA                     __end_of_rtcc_increment_minutes:
  7112                           	opt stack 0
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           intcon3	equ	0xFF0
  7118                           postinc0	equ	0xFEE
  7119                           wreg	equ	0xFE8
  7120                           postdec1	equ	0xFE5
  7121                           plusw1	equ	0xFE3
  7122                           fsr1h	equ	0xFE2
  7123                           fsr1l	equ	0xFE1
  7124                           postinc2	equ	0xFDE
  7125                           postdec2	equ	0xFDD
  7126                           plusw2	equ	0xFDB
  7127                           fsr2h	equ	0xFDA
  7128                           fsr2l	equ	0xFD9
  7129                           status	equ	0xFD8
  7130                           
  7131 ;; *************** function _rtcc_increment_hours *****************
  7132 ;; Defined at:
  7133 ;;		line 264 in file "rtcc.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  hours           1    8[BANK0 ] unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;Total ram usage:        1 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:   12
  7154 ;; This function calls:
  7155 ;;		__rtcc_increment_bcd
  7156 ;;		_rtcc_get_hours
  7157 ;;		_rtcc_set_hours
  7158 ;; This function is called by:
  7159 ;;		__ui_encoder
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text14
  7164  013CEA                     __ptext14:
  7165                           	opt stack 0
  7166  013CEA                     _rtcc_increment_hours:
  7167                           	opt stack 16
  7168                           
  7169                           ;rtcc.c: 266: uint8_t hours = rtcc_get_hours();
  7170                           
  7171                           ;incstack = 0
  7172  013CEA  ECC8  F0A0         	call	_rtcc_get_hours	;wreg free
  7173  013CEE  0100               	movlb	0	; () banked
  7174  013CF0  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;rtcc.c: 267: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  7178  013CF2  0E00               	movlw	0
  7179  013CF4  0100               	movlb	0	; () banked
  7180  013CF6  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7181  013CF8  0E23               	movlw	35
  7182  013CFA  0100               	movlb	0	; () banked
  7183  013CFC  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7184  013CFE  0100               	movlb	0	; () banked
  7185  013D00  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7186  013D02  EC49  F09B         	call	__rtcc_increment_bcd
  7187  013D06  0100               	movlb	0	; () banked
  7188  013D08  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;rtcc.c: 268: rtcc_set_hours(hours);
  7192  013D0A  0100               	movlb	0	; () banked
  7193  013D0C  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7194  013D0E  EC39  F0A0         	call	_rtcc_set_hours
  7195  013D12  0012               	return		;funcret
  7196  013D14                     __end_of_rtcc_increment_hours:
  7197                           	opt stack 0
  7198                           tblptru	equ	0xFF8
  7199                           tblptrh	equ	0xFF7
  7200                           tblptrl	equ	0xFF6
  7201                           tablat	equ	0xFF5
  7202                           intcon3	equ	0xFF0
  7203                           postinc0	equ	0xFEE
  7204                           wreg	equ	0xFE8
  7205                           postdec1	equ	0xFE5
  7206                           plusw1	equ	0xFE3
  7207                           fsr1h	equ	0xFE2
  7208                           fsr1l	equ	0xFE1
  7209                           postinc2	equ	0xFDE
  7210                           postdec2	equ	0xFDD
  7211                           plusw2	equ	0xFDB
  7212                           fsr2h	equ	0xFDA
  7213                           fsr2l	equ	0xFD9
  7214                           status	equ	0xFD8
  7215                           
  7216 ;; *************** function _rtcc_increment_day *****************
  7217 ;; Defined at:
  7218 ;;		line 226 in file "rtcc.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  day             1    8[BANK0 ] unsigned char 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;Total ram usage:        1 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:   12
  7239 ;; This function calls:
  7240 ;;		__number_of_days
  7241 ;;		__rtcc_increment_bcd
  7242 ;;		_rtcc_get_day
  7243 ;;		_rtcc_set_day
  7244 ;; This function is called by:
  7245 ;;		__ui_encoder
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text15
  7250  013B92                     __ptext15:
  7251                           	opt stack 0
  7252  013B92                     _rtcc_increment_day:
  7253                           	opt stack 16
  7254                           
  7255                           ;rtcc.c: 228: uint8_t day = rtcc_get_day();
  7256                           
  7257                           ;incstack = 0
  7258  013B92  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
  7259  013B96  0100               	movlb	0	; () banked
  7260  013B98  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;rtcc.c: 229: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7264  013B9A  0E01               	movlw	1
  7265  013B9C  0100               	movlb	0	; () banked
  7266  013B9E  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7267  013BA0  EC4E  F091         	call	__number_of_days	;wreg free
  7268  013BA4  0100               	movlb	0	; () banked
  7269  013BA6  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7270  013BA8  0100               	movlb	0	; () banked
  7271  013BAA  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7272  013BAC  EC49  F09B         	call	__rtcc_increment_bcd
  7273  013BB0  0100               	movlb	0	; () banked
  7274  013BB2  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;rtcc.c: 230: rtcc_set_day(day);
  7278  013BB4  0100               	movlb	0	; () banked
  7279  013BB6  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7280  013BB8  EC46  F0A0         	call	_rtcc_set_day
  7281  013BBC  0012               	return		;funcret
  7282  013BBE                     __end_of_rtcc_increment_day:
  7283                           	opt stack 0
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           intcon3	equ	0xFF0
  7289                           postinc0	equ	0xFEE
  7290                           wreg	equ	0xFE8
  7291                           postdec1	equ	0xFE5
  7292                           plusw1	equ	0xFE3
  7293                           fsr1h	equ	0xFE2
  7294                           fsr1l	equ	0xFE1
  7295                           postinc2	equ	0xFDE
  7296                           postdec2	equ	0xFDD
  7297                           plusw2	equ	0xFDB
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function __rtcc_increment_bcd *****************
  7303 ;; Defined at:
  7304 ;;		line 34 in file "rtcc.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  value           1    wreg     unsigned char 
  7307 ;;  min             1    4[BANK0 ] unsigned char 
  7308 ;;  max             1    5[BANK0 ] unsigned char 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  value           1    7[BANK0 ] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      unsigned char 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;Total ram usage:        4 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:   10
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_rtcc_increment_year
  7331 ;;		_rtcc_increment_month
  7332 ;;		_rtcc_increment_day
  7333 ;;		_rtcc_increment_hours
  7334 ;;		_rtcc_increment_minutes
  7335 ;;		_rtcc_increment_seconds
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text16
  7340  013692                     __ptext16:
  7341                           	opt stack 0
  7342  013692                     __rtcc_increment_bcd:
  7343                           	opt stack 17
  7344                           
  7345                           ;incstack = 0
  7346                           ;__rtcc_increment_bcd@value stored from wreg
  7347  013692  0100               	movlb	0	; () banked
  7348  013694  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7349                           
  7350                           ;rtcc.c: 36: if(value==max)
  7351  013696  0100               	movlb	0	; () banked
  7352  013698  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7353  01369A  0100               	movlb	0	; () banked
  7354  01369C  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7355  01369E  A4D8               	btfss	status,2,c
  7356  0136A0  D003               	goto	l13079
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;rtcc.c: 37: return min;
  7360  0136A2  0100               	movlb	0	; () banked
  7361  0136A4  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7362  0136A6  0012               	return	
  7363  0136A8                     l13079:
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;rtcc.c: 38: ++value;
  7367  0136A8  0100               	movlb	0	; () banked
  7368  0136AA  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7369                           
  7370                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7371  0136AC  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7372  0136B0  0E0F               	movlw	15
  7373  0136B2  0100               	movlb	0	; () banked
  7374  0136B4  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7375  0136B6  0E09               	movlw	9
  7376  0136B8  0100               	movlb	0	; () banked
  7377  0136BA  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7378  0136BC  D006               	goto	l13083
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;rtcc.c: 40: {
  7382                           ;rtcc.c: 41: value += 0x10;
  7383  0136BE  0E10               	movlw	16
  7384  0136C0  0100               	movlb	0	; () banked
  7385  0136C2  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7386                           
  7387                           ;rtcc.c: 42: value &= 0xF0;
  7388  0136C4  0EF0               	movlw	240
  7389  0136C6  0100               	movlb	0	; () banked
  7390  0136C8  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7391  0136CA                     l13083:
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;rtcc.c: 43: }
  7395                           ;rtcc.c: 44: return value;
  7396  0136CA  0100               	movlb	0	; () banked
  7397  0136CC  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7398  0136CE  0012               	return	
  7399  0136D0                     __end_of__rtcc_increment_bcd:
  7400                           	opt stack 0
  7401                           tblptru	equ	0xFF8
  7402                           tblptrh	equ	0xFF7
  7403                           tblptrl	equ	0xFF6
  7404                           tablat	equ	0xFF5
  7405                           intcon3	equ	0xFF0
  7406                           postinc0	equ	0xFEE
  7407                           wreg	equ	0xFE8
  7408                           postdec1	equ	0xFE5
  7409                           plusw1	equ	0xFE3
  7410                           fsr1h	equ	0xFE2
  7411                           fsr1l	equ	0xFE1
  7412                           postinc2	equ	0xFDE
  7413                           postdec2	equ	0xFDD
  7414                           plusw2	equ	0xFDB
  7415                           fsr2h	equ	0xFDA
  7416                           fsr2l	equ	0xFD9
  7417                           status	equ	0xFD8
  7418                           
  7419 ;; *************** function _rtcc_decrement_year *****************
  7420 ;; Defined at:
  7421 ;;		line 157 in file "rtcc.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;		None
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  year            1    8[BANK0 ] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  1    wreg      void 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0, cstack
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;Total ram usage:        1 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:   12
  7442 ;; This function calls:
  7443 ;;		__rtcc_decrement_bcd
  7444 ;;		_rtcc_get_year
  7445 ;;		_rtcc_set_year
  7446 ;; This function is called by:
  7447 ;;		__ui_encoder
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text17
  7452  013D14                     __ptext17:
  7453                           	opt stack 0
  7454  013D14                     _rtcc_decrement_year:
  7455                           	opt stack 16
  7456                           
  7457                           ;rtcc.c: 159: uint8_t year = rtcc_get_year();
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;incstack = 0
  7461  013D14  ECA0  F0A0         	call	_rtcc_get_year	;wreg free
  7462  013D18  0100               	movlb	0	; () banked
  7463  013D1A  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;rtcc.c: 160: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  7467  013D1C  0E00               	movlw	0
  7468  013D1E  0100               	movlb	0	; () banked
  7469  013D20  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7470  013D22  0E99               	movlw	153
  7471  013D24  0100               	movlb	0	; () banked
  7472  013D26  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7473  013D28  0100               	movlb	0	; () banked
  7474  013D2A  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7475  013D2C  EC68  F09B         	call	__rtcc_decrement_bcd
  7476  013D30  0100               	movlb	0	; () banked
  7477  013D32  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;rtcc.c: 161: rtcc_set_year(year);
  7481  013D34  0100               	movlb	0	; () banked
  7482  013D36  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7483  013D38  EC05  F0A0         	call	_rtcc_set_year
  7484  013D3C  0012               	return		;funcret
  7485  013D3E                     __end_of_rtcc_decrement_year:
  7486                           	opt stack 0
  7487                           tblptru	equ	0xFF8
  7488                           tblptrh	equ	0xFF7
  7489                           tblptrl	equ	0xFF6
  7490                           tablat	equ	0xFF5
  7491                           intcon3	equ	0xFF0
  7492                           postinc0	equ	0xFEE
  7493                           wreg	equ	0xFE8
  7494                           postdec1	equ	0xFE5
  7495                           plusw1	equ	0xFE3
  7496                           fsr1h	equ	0xFE2
  7497                           fsr1l	equ	0xFE1
  7498                           postinc2	equ	0xFDE
  7499                           postdec2	equ	0xFDD
  7500                           plusw2	equ	0xFDB
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8
  7504                           
  7505 ;; *************** function _rtcc_decrement_seconds *****************
  7506 ;; Defined at:
  7507 ;;		line 347 in file "rtcc.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  seconds         1    8[BANK0 ] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;Total ram usage:        1 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:   12
  7528 ;; This function calls:
  7529 ;;		__rtcc_decrement_bcd
  7530 ;;		_rtcc_get_seconds
  7531 ;;		_rtcc_set_seconds
  7532 ;; This function is called by:
  7533 ;;		__ui_encoder
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text18
  7538  013D3E                     __ptext18:
  7539                           	opt stack 0
  7540  013D3E                     _rtcc_decrement_seconds:
  7541                           	opt stack 16
  7542                           
  7543                           ;rtcc.c: 349: uint8_t seconds = rtcc_get_seconds();
  7544                           
  7545                           ;incstack = 0
  7546  013D3E  ECAA  F0A0         	call	_rtcc_get_seconds	;wreg free
  7547  013D42  0100               	movlb	0	; () banked
  7548  013D44  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;rtcc.c: 350: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  7552  013D46  0E00               	movlw	0
  7553  013D48  0100               	movlb	0	; () banked
  7554  013D4A  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7555  013D4C  0E59               	movlw	89
  7556  013D4E  0100               	movlb	0	; () banked
  7557  013D50  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7558  013D52  0100               	movlb	0	; () banked
  7559  013D54  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7560  013D56  EC68  F09B         	call	__rtcc_decrement_bcd
  7561  013D5A  0100               	movlb	0	; () banked
  7562  013D5C  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;rtcc.c: 351: rtcc_set_seconds(seconds);
  7566  013D5E  0100               	movlb	0	; () banked
  7567  013D60  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7568  013D62  EC12  F0A0         	call	_rtcc_set_seconds
  7569  013D66  0012               	return		;funcret
  7570  013D68                     __end_of_rtcc_decrement_seconds:
  7571                           	opt stack 0
  7572                           tblptru	equ	0xFF8
  7573                           tblptrh	equ	0xFF7
  7574                           tblptrl	equ	0xFF6
  7575                           tablat	equ	0xFF5
  7576                           intcon3	equ	0xFF0
  7577                           postinc0	equ	0xFEE
  7578                           wreg	equ	0xFE8
  7579                           postdec1	equ	0xFE5
  7580                           plusw1	equ	0xFE3
  7581                           fsr1h	equ	0xFE2
  7582                           fsr1l	equ	0xFE1
  7583                           postinc2	equ	0xFDE
  7584                           postdec2	equ	0xFDD
  7585                           plusw2	equ	0xFDB
  7586                           fsr2h	equ	0xFDA
  7587                           fsr2l	equ	0xFD9
  7588                           status	equ	0xFD8
  7589                           
  7590 ;; *************** function _rtcc_decrement_month *****************
  7591 ;; Defined at:
  7592 ;;		line 195 in file "rtcc.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;		None
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  month           1    8[BANK0 ] unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7609 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7610 ;;Total ram usage:        1 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:   12
  7613 ;; This function calls:
  7614 ;;		__rtcc_decrement_bcd
  7615 ;;		_rtcc_get_month
  7616 ;;		_rtcc_set_month
  7617 ;; This function is called by:
  7618 ;;		__ui_encoder
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text19
  7623  013D68                     __ptext19:
  7624                           	opt stack 0
  7625  013D68                     _rtcc_decrement_month:
  7626                           	opt stack 16
  7627                           
  7628                           ;rtcc.c: 197: uint8_t month = rtcc_get_month();
  7629                           
  7630                           ;incstack = 0
  7631  013D68  ECB4  F0A0         	call	_rtcc_get_month	;wreg free
  7632  013D6C  0100               	movlb	0	; () banked
  7633  013D6E  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;rtcc.c: 198: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  7637  013D70  0E01               	movlw	1
  7638  013D72  0100               	movlb	0	; () banked
  7639  013D74  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7640  013D76  0E12               	movlw	18
  7641  013D78  0100               	movlb	0	; () banked
  7642  013D7A  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7643  013D7C  0100               	movlb	0	; () banked
  7644  013D7E  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7645  013D80  EC68  F09B         	call	__rtcc_decrement_bcd
  7646  013D84  0100               	movlb	0	; () banked
  7647  013D86  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;rtcc.c: 199: rtcc_set_month(month);
  7651  013D88  0100               	movlb	0	; () banked
  7652  013D8A  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7653  013D8C  EC1F  F0A0         	call	_rtcc_set_month
  7654  013D90  0012               	return		;funcret
  7655  013D92                     __end_of_rtcc_decrement_month:
  7656                           	opt stack 0
  7657                           tblptru	equ	0xFF8
  7658                           tblptrh	equ	0xFF7
  7659                           tblptrl	equ	0xFF6
  7660                           tablat	equ	0xFF5
  7661                           intcon3	equ	0xFF0
  7662                           postinc0	equ	0xFEE
  7663                           wreg	equ	0xFE8
  7664                           postdec1	equ	0xFE5
  7665                           plusw1	equ	0xFE3
  7666                           fsr1h	equ	0xFE2
  7667                           fsr1l	equ	0xFE1
  7668                           postinc2	equ	0xFDE
  7669                           postdec2	equ	0xFDD
  7670                           plusw2	equ	0xFDB
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675 ;; *************** function _rtcc_decrement_minutes *****************
  7676 ;; Defined at:
  7677 ;;		line 309 in file "rtcc.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  minutes         1    8[BANK0 ] unsigned char 
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;Total ram usage:        1 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:   12
  7698 ;; This function calls:
  7699 ;;		__rtcc_decrement_bcd
  7700 ;;		_rtcc_get_minutes
  7701 ;;		_rtcc_set_minutes
  7702 ;; This function is called by:
  7703 ;;		__ui_encoder
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text20
  7708  013D92                     __ptext20:
  7709                           	opt stack 0
  7710  013D92                     _rtcc_decrement_minutes:
  7711                           	opt stack 16
  7712                           
  7713                           ;rtcc.c: 311: uint8_t minutes = rtcc_get_minutes();
  7714                           
  7715                           ;incstack = 0
  7716  013D92  ECBE  F0A0         	call	_rtcc_get_minutes	;wreg free
  7717  013D96  0100               	movlb	0	; () banked
  7718  013D98  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;rtcc.c: 312: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  7722  013D9A  0E00               	movlw	0
  7723  013D9C  0100               	movlb	0	; () banked
  7724  013D9E  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7725  013DA0  0E59               	movlw	89
  7726  013DA2  0100               	movlb	0	; () banked
  7727  013DA4  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7728  013DA6  0100               	movlb	0	; () banked
  7729  013DA8  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7730  013DAA  EC68  F09B         	call	__rtcc_decrement_bcd
  7731  013DAE  0100               	movlb	0	; () banked
  7732  013DB0  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;rtcc.c: 313: rtcc_set_minutes(minutes);
  7736  013DB2  0100               	movlb	0	; () banked
  7737  013DB4  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7738  013DB6  EC2C  F0A0         	call	_rtcc_set_minutes
  7739  013DBA  0012               	return		;funcret
  7740  013DBC                     __end_of_rtcc_decrement_minutes:
  7741                           	opt stack 0
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           intcon3	equ	0xFF0
  7747                           postinc0	equ	0xFEE
  7748                           wreg	equ	0xFE8
  7749                           postdec1	equ	0xFE5
  7750                           plusw1	equ	0xFE3
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           postinc2	equ	0xFDE
  7754                           postdec2	equ	0xFDD
  7755                           plusw2	equ	0xFDB
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760 ;; *************** function _rtcc_decrement_hours *****************
  7761 ;; Defined at:
  7762 ;;		line 271 in file "rtcc.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;		None
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  hours           1    8[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7777 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7779 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7780 ;;Total ram usage:        1 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:   12
  7783 ;; This function calls:
  7784 ;;		__rtcc_decrement_bcd
  7785 ;;		_rtcc_get_hours
  7786 ;;		_rtcc_set_hours
  7787 ;; This function is called by:
  7788 ;;		__ui_encoder
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text21
  7793  013DBC                     __ptext21:
  7794                           	opt stack 0
  7795  013DBC                     _rtcc_decrement_hours:
  7796                           	opt stack 16
  7797                           
  7798                           ;rtcc.c: 273: uint8_t hours = rtcc_get_hours();
  7799                           
  7800                           ;incstack = 0
  7801  013DBC  ECC8  F0A0         	call	_rtcc_get_hours	;wreg free
  7802  013DC0  0100               	movlb	0	; () banked
  7803  013DC2  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;rtcc.c: 274: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  7807  013DC4  0E00               	movlw	0
  7808  013DC6  0100               	movlb	0	; () banked
  7809  013DC8  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7810  013DCA  0E23               	movlw	35
  7811  013DCC  0100               	movlb	0	; () banked
  7812  013DCE  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7813  013DD0  0100               	movlb	0	; () banked
  7814  013DD2  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7815  013DD4  EC68  F09B         	call	__rtcc_decrement_bcd
  7816  013DD8  0100               	movlb	0	; () banked
  7817  013DDA  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;rtcc.c: 275: rtcc_set_hours(hours);
  7821  013DDC  0100               	movlb	0	; () banked
  7822  013DDE  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7823  013DE0  EC39  F0A0         	call	_rtcc_set_hours
  7824  013DE4  0012               	return		;funcret
  7825  013DE6                     __end_of_rtcc_decrement_hours:
  7826                           	opt stack 0
  7827                           tblptru	equ	0xFF8
  7828                           tblptrh	equ	0xFF7
  7829                           tblptrl	equ	0xFF6
  7830                           tablat	equ	0xFF5
  7831                           intcon3	equ	0xFF0
  7832                           postinc0	equ	0xFEE
  7833                           wreg	equ	0xFE8
  7834                           postdec1	equ	0xFE5
  7835                           plusw1	equ	0xFE3
  7836                           fsr1h	equ	0xFE2
  7837                           fsr1l	equ	0xFE1
  7838                           postinc2	equ	0xFDE
  7839                           postdec2	equ	0xFDD
  7840                           plusw2	equ	0xFDB
  7841                           fsr2h	equ	0xFDA
  7842                           fsr2l	equ	0xFD9
  7843                           status	equ	0xFD8
  7844                           
  7845 ;; *************** function _rtcc_decrement_day *****************
  7846 ;; Defined at:
  7847 ;;		line 233 in file "rtcc.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;  day             1    8[BANK0 ] unsigned char 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;Total ram usage:        1 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:   12
  7868 ;; This function calls:
  7869 ;;		__number_of_days
  7870 ;;		__rtcc_decrement_bcd
  7871 ;;		_rtcc_get_day
  7872 ;;		_rtcc_set_day
  7873 ;; This function is called by:
  7874 ;;		__ui_encoder
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text22
  7879  013BBE                     __ptext22:
  7880                           	opt stack 0
  7881  013BBE                     _rtcc_decrement_day:
  7882                           	opt stack 16
  7883                           
  7884                           ;rtcc.c: 235: uint8_t day = rtcc_get_day();
  7885                           
  7886                           ;incstack = 0
  7887  013BBE  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
  7888  013BC2  0100               	movlb	0	; () banked
  7889  013BC4  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;rtcc.c: 236: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  7893  013BC6  0E01               	movlw	1
  7894  013BC8  0100               	movlb	0	; () banked
  7895  013BCA  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7896  013BCC  EC4E  F091         	call	__number_of_days	;wreg free
  7897  013BD0  0100               	movlb	0	; () banked
  7898  013BD2  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7899  013BD4  0100               	movlb	0	; () banked
  7900  013BD6  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7901  013BD8  EC68  F09B         	call	__rtcc_decrement_bcd
  7902  013BDC  0100               	movlb	0	; () banked
  7903  013BDE  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;rtcc.c: 237: rtcc_set_day(day);
  7907  013BE0  0100               	movlb	0	; () banked
  7908  013BE2  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7909  013BE4  EC46  F0A0         	call	_rtcc_set_day
  7910  013BE8  0012               	return		;funcret
  7911  013BEA                     __end_of_rtcc_decrement_day:
  7912                           	opt stack 0
  7913                           tblptru	equ	0xFF8
  7914                           tblptrh	equ	0xFF7
  7915                           tblptrl	equ	0xFF6
  7916                           tablat	equ	0xFF5
  7917                           intcon3	equ	0xFF0
  7918                           postinc0	equ	0xFEE
  7919                           wreg	equ	0xFE8
  7920                           postdec1	equ	0xFE5
  7921                           plusw1	equ	0xFE3
  7922                           fsr1h	equ	0xFE2
  7923                           fsr1l	equ	0xFE1
  7924                           postinc2	equ	0xFDE
  7925                           postdec2	equ	0xFDD
  7926                           plusw2	equ	0xFDB
  7927                           fsr2h	equ	0xFDA
  7928                           fsr2l	equ	0xFD9
  7929                           status	equ	0xFD8
  7930                           
  7931 ;; *************** function __rtcc_decrement_bcd *****************
  7932 ;; Defined at:
  7933 ;;		line 47 in file "rtcc.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  value           1    wreg     unsigned char 
  7936 ;;  min             1    4[BANK0 ] unsigned char 
  7937 ;;  max             1    5[BANK0 ] unsigned char 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  value           1    7[BANK0 ] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      unsigned char 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2, status,0
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;Total ram usage:        4 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:   10
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_rtcc_decrement_year
  7960 ;;		_rtcc_decrement_month
  7961 ;;		_rtcc_decrement_day
  7962 ;;		_rtcc_decrement_hours
  7963 ;;		_rtcc_decrement_minutes
  7964 ;;		_rtcc_decrement_seconds
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text23
  7969  0136D0                     __ptext23:
  7970                           	opt stack 0
  7971  0136D0                     __rtcc_decrement_bcd:
  7972                           	opt stack 17
  7973                           
  7974                           ;incstack = 0
  7975                           ;__rtcc_decrement_bcd@value stored from wreg
  7976  0136D0  0100               	movlb	0	; () banked
  7977  0136D2  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  7978                           
  7979                           ;rtcc.c: 49: if(value==min)
  7980  0136D4  0100               	movlb	0	; () banked
  7981  0136D6  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  7982  0136D8  0100               	movlb	0	; () banked
  7983  0136DA  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  7984  0136DC  A4D8               	btfss	status,2,c
  7985  0136DE  D003               	goto	l13091
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;rtcc.c: 50: return max;
  7989  0136E0  0100               	movlb	0	; () banked
  7990  0136E2  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  7991  0136E4  0012               	return	
  7992  0136E6                     l13091:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;rtcc.c: 51: --value;
  7996  0136E6  0100               	movlb	0	; () banked
  7997  0136E8  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  7998                           
  7999                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  8000  0136EA  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  8001  0136EE  0E0F               	movlw	15
  8002  0136F0  0100               	movlb	0	; () banked
  8003  0136F2  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  8004  0136F4  0E09               	movlw	9
  8005  0136F6  0100               	movlb	0	; () banked
  8006  0136F8  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  8007  0136FA  D006               	goto	l13095
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;rtcc.c: 53: {
  8011                           ;rtcc.c: 54: value &= 0xF0;
  8012  0136FC  0EF0               	movlw	240
  8013  0136FE  0100               	movlb	0	; () banked
  8014  013700  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8015                           
  8016                           ;rtcc.c: 55: value |= 0x09;
  8017  013702  0E09               	movlw	9
  8018  013704  0100               	movlb	0	; () banked
  8019  013706  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8020  013708                     l13095:
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;rtcc.c: 56: }
  8024                           ;rtcc.c: 57: return value;
  8025  013708  0100               	movlb	0	; () banked
  8026  01370A  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  8027  01370C  0012               	return	
  8028  01370E                     __end_of__rtcc_decrement_bcd:
  8029                           	opt stack 0
  8030                           tblptru	equ	0xFF8
  8031                           tblptrh	equ	0xFF7
  8032                           tblptrl	equ	0xFF6
  8033                           tablat	equ	0xFF5
  8034                           intcon3	equ	0xFF0
  8035                           postinc0	equ	0xFEE
  8036                           wreg	equ	0xFE8
  8037                           postdec1	equ	0xFE5
  8038                           plusw1	equ	0xFE3
  8039                           fsr1h	equ	0xFE2
  8040                           fsr1l	equ	0xFE1
  8041                           postinc2	equ	0xFDE
  8042                           postdec2	equ	0xFDD
  8043                           plusw2	equ	0xFDB
  8044                           fsr2h	equ	0xFDA
  8045                           fsr2l	equ	0xFD9
  8046                           status	equ	0xFD8
  8047                           
  8048 ;; *************** function _system_init *****************
  8049 ;; Defined at:
  8050 ;;		line 250 in file "os.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  8055 ;;  temp           50    0        unsigned char [50]
  8056 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  8057 ;;  filename        9  104[BANK1 ] unsigned char [9]
  8058 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  8059 ;;  extension       4  122[BANK1 ] unsigned char [4]
  8060 ;;  file_number     1    0        unsigned char 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8073 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;Total ram usage:      130 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:   16
  8077 ;; This function calls:
  8078 ;;		__system_encoder_init
  8079 ;;		__system_timer0_init
  8080 ;;		_adc_init
  8081 ;;		_buck_init
  8082 ;;		_flash_init
  8083 ;;		_i2c_eeprom_read_calibration
  8084 ;;		_i2c_init
  8085 ;;		_log_start_new
  8086 ;;		_rtcc_init
  8087 ;;		_ui_init
  8088 ;; This function is called by:
  8089 ;;		_main
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text24
  8094  00F6F2                     __ptext24:
  8095                           	opt stack 0
  8096  00F6F2                     _system_init:
  8097                           	opt stack 14
  8098                           
  8099                           ;os.c: 252: char filename[9] = "TEST    ";
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;incstack = 0
  8103  00F6F2  EE22  F0D8         	lfsr	2,system_init@F8573
  8104  00F6F6  EE11  F068         	lfsr	1,system_init@filename
  8105  00F6FA  0E08               	movlw	8
  8106  00F6FC                     u22141:
  8107  00F6FC  CFDB FFE3          	movff	plusw2,plusw1
  8108  00F700  06E8               	decf	wreg,f,c
  8109  00F702  E2FC               	bc	u22141
  8110                           
  8111                           ;os.c: 253: char extension[4] = "TXT";
  8112  00F704  C2E5  F17A         	movff	system_init@F8575,system_init@extension
  8113  00F708  C2E6  F17B         	movff	system_init@F8575+1,system_init@extension+1
  8114  00F70C  C2E7  F17C         	movff	system_init@F8575+2,system_init@extension+2
  8115  00F710  C2E8  F17D         	movff	system_init@F8575+3,system_init@extension+3
  8116                           
  8117                           ;os.c: 254: char filename2[9] = "NEWFILE ";
  8118  00F714  EE23  F0F6         	lfsr	2,system_init@F8577
  8119  00F718  EE11  F071         	lfsr	1,system_init@filename2
  8120  00F71C  0E08               	movlw	8
  8121  00F71E                     u22151:
  8122  00F71E  CFDB FFE3          	movff	plusw2,plusw1
  8123  00F722  06E8               	decf	wreg,f,c
  8124  00F724  E2FC               	bc	u22151
  8125                           
  8126                           ;os.c: 255: char extension2[4] = "TXT";
  8127  00F726  C2E1  F17E         	movff	system_init@F8579,system_init@extension2
  8128  00F72A  C2E2  F17F         	movff	system_init@F8579+1,system_init@extension2+1
  8129  00F72E  C2E3  F180         	movff	system_init@F8579+2,system_init@extension2+2
  8130  00F732  C2E4  F181         	movff	system_init@F8579+3,system_init@extension2+3
  8131                           
  8132                           ;os.c: 256: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  8133  00F736  EE24  F000         	lfsr	2,system_init@F8581
  8134  00F73A  EE11  F000         	lfsr	1,system_init@appendtext
  8135  00F73E  0E67               	movlw	103
  8136  00F740                     u22161:
  8137  00F740  CFDB FFE3          	movff	plusw2,plusw1
  8138  00F744  06E8               	decf	wreg,f,c
  8139  00F746  E2FC               	bc	u22161
  8140                           
  8141                           ;os.c: 257: uint8_t file_number;
  8142                           ;os.c: 258: uint8_t temp[50];
  8143                           ;os.c: 261: TRISCbits.TRISC2 = 0;
  8144  00F748  9494               	bcf	3988,2,c	;volatile
  8145                           
  8146                           ;os.c: 262: TRISDbits.TRISD0 = 0;
  8147  00F74A  9095               	bcf	3989,0,c	;volatile
  8148                           
  8149                           ;os.c: 264: TRISDbits.TRISD3 = 0;
  8150  00F74C  9695               	bcf	3989,3,c	;volatile
  8151                           
  8152                           ;os.c: 265: LATDbits.LD3 = 0;
  8153  00F74E  968C               	bcf	3980,3,c	;volatile
  8154                           
  8155                           ;os.c: 268: LATDbits.LD1 = 0;
  8156  00F750  928C               	bcf	3980,1,c	;volatile
  8157                           
  8158                           ;os.c: 269: TRISDbits.TRISD1 = 0;
  8159  00F752  9295               	bcf	3989,1,c	;volatile
  8160                           
  8161                           ;os.c: 272: LATBbits.LB1 = 0;
  8162  00F754  928A               	bcf	3978,1,c	;volatile
  8163                           
  8164                           ;os.c: 273: TRISBbits.TRISB1 = 0;
  8165  00F756  9293               	bcf	3987,1,c	;volatile
  8166                           
  8167                           ;os.c: 274: LATBbits.LB2 = 0;
  8168  00F758  948A               	bcf	3978,2,c	;volatile
  8169                           
  8170                           ;os.c: 275: TRISBbits.TRISB2 = 0;
  8171  00F75A  9493               	bcf	3987,2,c	;volatile
  8172                           
  8173                           ;os.c: 276: LATBbits.LB3 = 0;
  8174  00F75C  968A               	bcf	3978,3,c	;volatile
  8175                           
  8176                           ;os.c: 277: TRISBbits.TRISB3 = 0;
  8177  00F75E  9693               	bcf	3987,3,c	;volatile
  8178                           
  8179                           ;os.c: 281: TRISDbits.TRISD6 = 1;
  8180  00F760  8C95               	bsf	3989,6,c	;volatile
  8181                           
  8182                           ;os.c: 282: TRISDbits.TRISD4 = 0;
  8183  00F762  9895               	bcf	3989,4,c	;volatile
  8184                           
  8185                           ;os.c: 283: TRISDbits.TRISD5 = 0;
  8186  00F764  9A95               	bcf	3989,5,c	;volatile
  8187                           
  8188                           ;os.c: 284: TRISDbits.TRISD7 = 0;
  8189  00F766  9E95               	bcf	3989,7,c	;volatile
  8190                           
  8191                           ;os.c: 285: LATDbits.LD7 = 1;
  8192  00F768  8E8C               	bsf	3980,7,c	;volatile
  8193                           
  8194                           ;os.c: 288: TRISAbits.TRISA3 = 1;
  8195  00F76A  8692               	bsf	3986,3,c	;volatile
  8196                           
  8197                           ;os.c: 289: ANCON0bits.PCFG3 = 0;
  8198  00F76C  010F               	movlb	15	; () banked
  8199  00F76E  9748               	bcf	72,3,b	;volatile
  8200                           
  8201                           ; BSR set to: 15
  8202                           ;os.c: 290: TRISBbits.TRISB0 = 1;
  8203  00F770  8093               	bsf	3987,0,c	;volatile
  8204                           
  8205                           ; BSR set to: 15
  8206                           ;os.c: 291: ANCON1bits.PCFG12 = 0;
  8207  00F772  010F               	movlb	15	; () banked
  8208  00F774  9949               	bcf	73,4,b	;volatile
  8209                           
  8210                           ; BSR set to: 15
  8211                           ;os.c: 292: TRISAbits.TRISA1 = 1;
  8212  00F776  8292               	bsf	3986,1,c	;volatile
  8213                           
  8214                           ; BSR set to: 15
  8215                           ;os.c: 293: ANCON0bits.PCFG1 = 0;
  8216  00F778  010F               	movlb	15	; () banked
  8217  00F77A  9348               	bcf	72,1,b	;volatile
  8218                           
  8219                           ; BSR set to: 15
  8220                           ;os.c: 294: TRISAbits.TRISA2 = 1;
  8221  00F77C  8492               	bsf	3986,2,c	;volatile
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;os.c: 295: ANCON0bits.PCFG2 = 0;
  8225  00F77E  010F               	movlb	15	; () banked
  8226  00F780  9548               	bcf	72,2,b	;volatile
  8227                           
  8228                           ; BSR set to: 15
  8229                           ;os.c: 298: LATCbits.LC7 = 0;
  8230  00F782  9E8B               	bcf	3979,7,c	;volatile
  8231                           
  8232                           ; BSR set to: 15
  8233                           ;os.c: 299: TRISCbits.TRISC7 = 0;
  8234  00F784  9E94               	bcf	3988,7,c	;volatile
  8235                           
  8236                           ; BSR set to: 15
  8237                           ;os.c: 300: LATEbits.LE2 = 1;
  8238  00F786  848D               	bsf	3981,2,c	;volatile
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;os.c: 301: TRISEbits.TRISE2 = 0;
  8242  00F788  9496               	bcf	3990,2,c	;volatile
  8243                           
  8244                           ; BSR set to: 15
  8245                           ;os.c: 302: LATEbits.LE1 = 1;
  8246  00F78A  828D               	bsf	3981,1,c	;volatile
  8247                           
  8248                           ; BSR set to: 15
  8249                           ;os.c: 303: TRISEbits.TRISE1 = 0;
  8250  00F78C  9296               	bcf	3990,1,c	;volatile
  8251                           
  8252                           ; BSR set to: 15
  8253                           ;os.c: 304: LATEbits.LE0 = 1;
  8254  00F78E  808D               	bsf	3981,0,c	;volatile
  8255                           
  8256                           ; BSR set to: 15
  8257                           ;os.c: 305: TRISEbits.TRISE0 = 0;
  8258  00F790  9096               	bcf	3990,0,c	;volatile
  8259                           
  8260                           ; BSR set to: 15
  8261                           ;os.c: 306: LATAbits.LA5 = 1;
  8262  00F792  8A89               	bsf	3977,5,c	;volatile
  8263                           
  8264                           ; BSR set to: 15
  8265                           ;os.c: 307: TRISAbits.TRISA5 = 0;
  8266  00F794  9A92               	bcf	3986,5,c	;volatile
  8267                           
  8268                           ; BSR set to: 15
  8269                           ;os.c: 309: TRISAbits.TRISA0 = 1;
  8270  00F796  8092               	bsf	3986,0,c	;volatile
  8271                           
  8272                           ; BSR set to: 15
  8273                           ;os.c: 310: ANCON0bits.PCFG0 = 1;
  8274  00F798  010F               	movlb	15	; () banked
  8275  00F79A  8148               	bsf	72,0,b	;volatile
  8276                           
  8277                           ; BSR set to: 15
  8278                           ;os.c: 311: TRISBbits.TRISB6 = 1;
  8279  00F79C  8C93               	bsf	3987,6,c	;volatile
  8280                           
  8281                           ; BSR set to: 15
  8282                           ;os.c: 312: TRISBbits.TRISB7 = 1;
  8283  00F79E  8E93               	bsf	3987,7,c	;volatile
  8284                           
  8285                           ; BSR set to: 15
  8286                           ;os.c: 333: os.clockFrequency = CPU_FREQUENCY_48MHz;
  8287  00F7A0  0E02               	movlw	2
  8288  00F7A2  0102               	movlb	2	; () banked
  8289  00F7A4  6F00               	movwf	_os& (0+255),b	;volatile
  8290                           
  8291                           ; BSR set to: 2
  8292                           ;os.c: 334: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  8293  00F7A6  0E01               	movlw	1
  8294  00F7A8  0102               	movlb	2	; () banked
  8295  00F7AA  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  8296                           
  8297                           ; BSR set to: 2
  8298                           ;os.c: 335: os.buckFrequency = BUCK_OFF;
  8299  00F7AC  0E00               	movlw	0
  8300  00F7AE  0102               	movlb	2	; () banked
  8301  00F7B0  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  8302                           
  8303                           ; BSR set to: 2
  8304                           ;os.c: 336: os.buckDutyCycle = 0;
  8305  00F7B2  0E00               	movlw	0
  8306  00F7B4  0102               	movlb	2	; () banked
  8307  00F7B6  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8308                           
  8309                           ; BSR set to: 2
  8310                           ;os.c: 337: os.buckLastStep = -1;
  8311  00F7B8  0102               	movlb	2	; () banked
  8312  00F7BA  6904               	setf	(_os+4)& (0+255),b	;volatile
  8313                           
  8314                           ; BSR set to: 2
  8315                           ;os.c: 338: os.display_mode = DISPLAY_MODE_OVERVIEW;
  8316  00F7BC  0E00               	movlw	0
  8317  00F7BE  0102               	movlb	2	; () banked
  8318  00F7C0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8319                           
  8320                           ; BSR set to: 2
  8321                           ;os.c: 341: os.output_voltage = 13000;
  8322  00F7C2  0E32               	movlw	50
  8323  00F7C4  0102               	movlb	2	; () banked
  8324  00F7C6  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8325  00F7C8  0EC8               	movlw	200
  8326  00F7CA  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8327                           
  8328                           ; BSR set to: 2
  8329                           ;os.c: 345: PIR1bits.TMR1IF = 0;
  8330  00F7CC  909E               	bcf	3998,0,c	;volatile
  8331                           
  8332                           ; BSR set to: 2
  8333                           ;os.c: 347: TMR1H = 0xFC;
  8334  00F7CE  0EFC               	movlw	252
  8335  00F7D0  6ECF               	movwf	4047,c	;volatile
  8336                           
  8337                           ; BSR set to: 2
  8338                           ;os.c: 348: TMR1L = 0x00;
  8339  00F7D2  0E00               	movlw	0
  8340  00F7D4  6ECE               	movwf	4046,c	;volatile
  8341                           
  8342                           ; BSR set to: 2
  8343                           ;os.c: 350: T1CONbits.TMR1ON = 1;
  8344  00F7D6  80CD               	bsf	4045,0,c	;volatile
  8345                           
  8346                           ; BSR set to: 2
  8347                           ;os.c: 352: T1CONbits.T1OSCEN = 1;
  8348  00F7D8  86CD               	bsf	4045,3,c	;volatile
  8349  00F7DA                     l1390:
  8350  00F7DA  A09E               	btfss	3998,0,c	;volatile
  8351  00F7DC  D7FE               	goto	l1390
  8352                           
  8353                           ;os.c: 356: T1CONbits.TMR1ON = 0;
  8354  00F7DE  90CD               	bcf	4045,0,c	;volatile
  8355                           
  8356                           ;os.c: 359: i2c_init();
  8357  00F7E0  EC32  F0A1         	call	_i2c_init	;wreg free
  8358                           
  8359                           ;os.c: 361: ui_init();
  8360  00F7E4  EC8C  F0A0         	call	_ui_init	;wreg free
  8361                           
  8362                           ;os.c: 364: adc_init();
  8363  00F7E8  ECDC  F09F         	call	_adc_init	;wreg free
  8364                           
  8365                           ;os.c: 367: rtcc_init();
  8366  00F7EC  EC90  F09F         	call	_rtcc_init	;wreg free
  8367                           
  8368                           ;os.c: 370: i2c_eeprom_read_calibration();
  8369  00F7F0  EC3A  F074         	call	_i2c_eeprom_read_calibration	;wreg free
  8370                           
  8371                           ;os.c: 385: _system_timer0_init();
  8372  00F7F4  EC09  F09B         	call	__system_timer0_init	;wreg free
  8373                           
  8374                           ;os.c: 394: _system_encoder_init();
  8375  00F7F8  EC7B  F09A         	call	__system_encoder_init	;wreg free
  8376                           
  8377                           ;os.c: 396: flash_init();
  8378  00F7FC  ECE3  F099         	call	_flash_init	;wreg free
  8379                           
  8380                           ;os.c: 430: buck_init();
  8381  00F800  EC2B  F0A1         	call	_buck_init	;wreg free
  8382                           
  8383                           ;os.c: 433: log_start_new();
  8384  00F804  EC9A  F080         	call	_log_start_new	;wreg free
  8385  00F808  0012               	return		;funcret
  8386  00F80A                     __end_of_system_init:
  8387                           	opt stack 0
  8388                           tblptru	equ	0xFF8
  8389                           tblptrh	equ	0xFF7
  8390                           tblptrl	equ	0xFF6
  8391                           tablat	equ	0xFF5
  8392                           intcon3	equ	0xFF0
  8393                           postinc0	equ	0xFEE
  8394                           wreg	equ	0xFE8
  8395                           postdec1	equ	0xFE5
  8396                           plusw1	equ	0xFE3
  8397                           fsr1h	equ	0xFE2
  8398                           fsr1l	equ	0xFE1
  8399                           postinc2	equ	0xFDE
  8400                           postdec2	equ	0xFDD
  8401                           plusw2	equ	0xFDB
  8402                           fsr2h	equ	0xFDA
  8403                           fsr2l	equ	0xFD9
  8404                           status	equ	0xFD8
  8405                           
  8406 ;; *************** function _ui_init *****************
  8407 ;; Defined at:
  8408 ;;		line 325 in file "ui.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8426 ;;Total ram usage:        0 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:   10
  8429 ;; This function calls:
  8430 ;;		Nothing
  8431 ;; This function is called by:
  8432 ;;		_system_init
  8433 ;;		_ui_run
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text25
  8438  014118                     __ptext25:
  8439                           	opt stack 0
  8440  014118                     _ui_init:
  8441                           	opt stack 19
  8442                           
  8443                           ;ui.c: 327: system_ui_inactive_count = 0;
  8444                           
  8445                           ;incstack = 0
  8446  014118  0E00               	movlw	0
  8447  01411A  0101               	movlb	1	; () banked
  8448  01411C  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8449  01411E  0E00               	movlw	0
  8450  014120  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  8451                           
  8452                           ; BSR set to: 1
  8453                           ;ui.c: 329: LATCbits.LC2 = 1;
  8454  014122  848B               	bsf	3979,2,c	;volatile
  8455                           
  8456                           ;ui.c: 330: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8457  014124  0E01               	movlw	1
  8458  014126  0101               	movlb	1	; () banked
  8459  014128  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  8460                           
  8461                           ; BSR set to: 1
  8462  01412A  0012               	return		;funcret
  8463  01412C                     __end_of_ui_init:
  8464                           	opt stack 0
  8465                           tblptru	equ	0xFF8
  8466                           tblptrh	equ	0xFF7
  8467                           tblptrl	equ	0xFF6
  8468                           tablat	equ	0xFF5
  8469                           intcon3	equ	0xFF0
  8470                           postinc0	equ	0xFEE
  8471                           wreg	equ	0xFE8
  8472                           postdec1	equ	0xFE5
  8473                           plusw1	equ	0xFE3
  8474                           fsr1h	equ	0xFE2
  8475                           fsr1l	equ	0xFE1
  8476                           postinc2	equ	0xFDE
  8477                           postdec2	equ	0xFDD
  8478                           plusw2	equ	0xFDB
  8479                           fsr2h	equ	0xFDA
  8480                           fsr2l	equ	0xFD9
  8481                           status	equ	0xFD8
  8482                           
  8483 ;; *************** function _rtcc_init *****************
  8484 ;; Defined at:
  8485 ;;		line 105 in file "rtcc.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;		None
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8503 ;;Total ram usage:        0 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:   15
  8506 ;; This function calls:
  8507 ;;		_rtcc_read_eeprom
  8508 ;; This function is called by:
  8509 ;;		_system_init
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text26
  8514  013F20                     __ptext26:
  8515                           	opt stack 0
  8516  013F20                     _rtcc_init:
  8517                           	opt stack 14
  8518                           
  8519                           ;rtcc.c: 107: EECON2 = 0x55;
  8520                           
  8521                           ; BSR set to: 1
  8522                           ;incstack = 0
  8523  013F20  0E55               	movlw	85
  8524  013F22  6EA7               	movwf	4007,c	;volatile
  8525                           
  8526                           ;rtcc.c: 108: EECON2 = 0xAA;
  8527  013F24  0EAA               	movlw	170
  8528  013F26  6EA7               	movwf	4007,c	;volatile
  8529                           
  8530                           ;rtcc.c: 109: RTCCFGbits.RTCWREN = 1;
  8531  013F28  010F               	movlb	15	; () banked
  8532  013F2A  8B3F               	bsf	63,5,b	;volatile
  8533                           
  8534                           ; BSR set to: 15
  8535                           ;rtcc.c: 110: RTCCFGbits.RTCEN = 1;
  8536  013F2C  010F               	movlb	15	; () banked
  8537  013F2E  8F3F               	bsf	63,7,b	;volatile
  8538                           
  8539                           ; BSR set to: 15
  8540                           ;rtcc.c: 111: RTCCFGbits.RTCOE = 0;
  8541  013F30  010F               	movlb	15	; () banked
  8542  013F32  953F               	bcf	63,2,b	;volatile
  8543                           
  8544                           ;rtcc.c: 112: RTCCAL = 0x00;
  8545  013F34  0E00               	movlw	0
  8546  013F36  010F               	movlb	15	; () banked
  8547  013F38  6F3E               	movwf	62,b	;volatile
  8548                           
  8549                           ; BSR set to: 15
  8550                           ;rtcc.c: 115: rtcc_read_eeprom();
  8551  013F3A  EC03  F070         	call	_rtcc_read_eeprom	;wreg free
  8552  013F3E  0012               	return		;funcret
  8553  013F40                     __end_of_rtcc_init:
  8554                           	opt stack 0
  8555                           tblptru	equ	0xFF8
  8556                           tblptrh	equ	0xFF7
  8557                           tblptrl	equ	0xFF6
  8558                           tablat	equ	0xFF5
  8559                           intcon3	equ	0xFF0
  8560                           postinc0	equ	0xFEE
  8561                           wreg	equ	0xFE8
  8562                           postdec1	equ	0xFE5
  8563                           plusw1	equ	0xFE3
  8564                           fsr1h	equ	0xFE2
  8565                           fsr1l	equ	0xFE1
  8566                           postinc2	equ	0xFDE
  8567                           postdec2	equ	0xFDD
  8568                           plusw2	equ	0xFDB
  8569                           fsr2h	equ	0xFDA
  8570                           fsr2l	equ	0xFD9
  8571                           status	equ	0xFD8
  8572                           
  8573 ;; *************** function _rtcc_read_eeprom *****************
  8574 ;; Defined at:
  8575 ;;		line 354 in file "rtcc.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  date            6   44[BANK0 ] unsigned char [6]
  8580 ;;  buffer          1   50[BANK0 ] unsigned char 
  8581 ;;  error_found     1   43[BANK0 ] unsigned char 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;Total ram usage:        8 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:   14
  8598 ;; This function calls:
  8599 ;;		__rtcc_verify_bcd
  8600 ;;		_i2c_eeprom_read
  8601 ;;		_rtcc_correct_day
  8602 ;;		_rtcc_get_day
  8603 ;;		_rtcc_set_day
  8604 ;;		_rtcc_set_hours
  8605 ;;		_rtcc_set_minutes
  8606 ;;		_rtcc_set_month
  8607 ;;		_rtcc_set_seconds
  8608 ;;		_rtcc_set_year
  8609 ;;		_rtcc_write_eeprom
  8610 ;; This function is called by:
  8611 ;;		_rtcc_init
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text27
  8616  00E006                     __ptext27:
  8617                           	opt stack 0
  8618  00E006                     _rtcc_read_eeprom:
  8619                           	opt stack 14
  8620                           
  8621                           ;rtcc.c: 356: uint8_t date[6];
  8622                           ;rtcc.c: 357: uint8_t buffer;
  8623                           ;rtcc.c: 358: uint8_t error_found = 0;
  8624                           
  8625                           ;incstack = 0
  8626  00E006  0E00               	movlw	0
  8627  00E008  0100               	movlb	0	; () banked
  8628  00E00A  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;rtcc.c: 361: i2c_eeprom_read(0x040, &date[0], 6);
  8632  00E00C  0E00               	movlw	0
  8633  00E00E  0100               	movlb	0	; () banked
  8634  00E010  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  8635  00E012  0E40               	movlw	64
  8636  00E014  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  8637  00E016  0E8C               	movlw	low rtcc_read_eeprom@date
  8638  00E018  0100               	movlb	0	; () banked
  8639  00E01A  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  8640  00E01C  0E00               	movlw	high rtcc_read_eeprom@date
  8641  00E01E  0100               	movlb	0	; () banked
  8642  00E020  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  8643  00E022  0E06               	movlw	6
  8644  00E024  0100               	movlb	0	; () banked
  8645  00E026  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  8646  00E028  EC53  F096         	call	_i2c_eeprom_read	;wreg free
  8647                           
  8648                           ;rtcc.c: 367: buffer = _rtcc_verify_bcd(date[0], 0x00, 0x99);
  8649  00E02C  0E00               	movlw	0
  8650  00E02E  0100               	movlb	0	; () banked
  8651  00E030  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8652  00E032  0E99               	movlw	153
  8653  00E034  0100               	movlb	0	; () banked
  8654  00E036  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8655  00E038  0100               	movlb	0	; () banked
  8656  00E03A  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8657  00E03C  EC48  F097         	call	__rtcc_verify_bcd
  8658  00E040  0100               	movlb	0	; () banked
  8659  00E042  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;rtcc.c: 368: if(buffer != date[0])
  8663  00E044  0100               	movlb	0	; () banked
  8664  00E046  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8665  00E048  0100               	movlb	0	; () banked
  8666  00E04A  198C               	xorwf	rtcc_read_eeprom@date& (0+255),w,b
  8667  00E04C  B4D8               	btfsc	status,2,c
  8668  00E04E  D005               	goto	l19803
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;rtcc.c: 369: {
  8672                           ;rtcc.c: 370: date[0] = buffer;
  8673  00E050  C092  F08C         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;rtcc.c: 371: error_found = 1;
  8677  00E054  0E01               	movlw	1
  8678  00E056  0100               	movlb	0	; () banked
  8679  00E058  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8680  00E05A                     l19803:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;rtcc.c: 372: }
  8684                           ;rtcc.c: 373: rtcc_set_year(date[0]);
  8685  00E05A  0100               	movlb	0	; () banked
  8686  00E05C  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8687  00E05E  EC05  F0A0         	call	_rtcc_set_year
  8688                           
  8689                           ;rtcc.c: 376: buffer = _rtcc_verify_bcd(date[1], 0x01, 0x12);
  8690  00E062  0E01               	movlw	1
  8691  00E064  0100               	movlb	0	; () banked
  8692  00E066  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8693  00E068  0E12               	movlw	18
  8694  00E06A  0100               	movlb	0	; () banked
  8695  00E06C  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8696  00E06E  0100               	movlb	0	; () banked
  8697  00E070  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8698  00E072  EC48  F097         	call	__rtcc_verify_bcd
  8699  00E076  0100               	movlb	0	; () banked
  8700  00E078  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8701                           
  8702                           ;rtcc.c: 377: if(buffer != date[1])
  8703  00E07A  0100               	movlb	0	; () banked
  8704  00E07C  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8705  00E07E  0100               	movlb	0	; () banked
  8706  00E080  198D               	xorwf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8707  00E082  B4D8               	btfsc	status,2,c
  8708  00E084  D005               	goto	l19811
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;rtcc.c: 378: {
  8712                           ;rtcc.c: 379: date[1] = buffer;
  8713  00E086  C092  F08D         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+1
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;rtcc.c: 380: error_found = 1;
  8717  00E08A  0E01               	movlw	1
  8718  00E08C  0100               	movlb	0	; () banked
  8719  00E08E  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8720  00E090                     l19811:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;rtcc.c: 381: }
  8724                           ;rtcc.c: 382: rtcc_set_month(date[1]);
  8725  00E090  0100               	movlb	0	; () banked
  8726  00E092  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8727  00E094  EC1F  F0A0         	call	_rtcc_set_month
  8728                           
  8729                           ;rtcc.c: 385: buffer = _rtcc_verify_bcd(date[2], 0x01, 0x31);
  8730  00E098  0E01               	movlw	1
  8731  00E09A  0100               	movlb	0	; () banked
  8732  00E09C  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8733  00E09E  0E31               	movlw	49
  8734  00E0A0  0100               	movlb	0	; () banked
  8735  00E0A2  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8736  00E0A4  0100               	movlb	0	; () banked
  8737  00E0A6  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8738  00E0A8  EC48  F097         	call	__rtcc_verify_bcd
  8739  00E0AC  0100               	movlb	0	; () banked
  8740  00E0AE  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8741                           
  8742                           ;rtcc.c: 386: if(buffer != date[2])
  8743  00E0B0  0100               	movlb	0	; () banked
  8744  00E0B2  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8745  00E0B4  0100               	movlb	0	; () banked
  8746  00E0B6  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8747  00E0B8  B4D8               	btfsc	status,2,c
  8748  00E0BA  D005               	goto	l19819
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;rtcc.c: 387: {
  8752                           ;rtcc.c: 388: date[2] = buffer;
  8753  00E0BC  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;rtcc.c: 389: error_found = 1;
  8757  00E0C0  0E01               	movlw	1
  8758  00E0C2  0100               	movlb	0	; () banked
  8759  00E0C4  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8760  00E0C6                     l19819:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;rtcc.c: 390: }
  8764                           ;rtcc.c: 391: rtcc_set_day(date[2]);
  8765  00E0C6  0100               	movlb	0	; () banked
  8766  00E0C8  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8767  00E0CA  EC46  F0A0         	call	_rtcc_set_day
  8768                           
  8769                           ;rtcc.c: 394: rtcc_correct_day();
  8770  00E0CE  EC58  F09F         	call	_rtcc_correct_day	;wreg free
  8771                           
  8772                           ;rtcc.c: 395: buffer = rtcc_get_day();
  8773  00E0D2  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
  8774  00E0D6  0100               	movlb	0	; () banked
  8775  00E0D8  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;rtcc.c: 396: if(buffer != date[2])
  8779  00E0DA  0100               	movlb	0	; () banked
  8780  00E0DC  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8781  00E0DE  0100               	movlb	0	; () banked
  8782  00E0E0  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8783  00E0E2  B4D8               	btfsc	status,2,c
  8784  00E0E4  D005               	goto	l19831
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;rtcc.c: 397: {
  8788                           ;rtcc.c: 398: date[2] = buffer;
  8789  00E0E6  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;rtcc.c: 399: error_found = 1;
  8793  00E0EA  0E01               	movlw	1
  8794  00E0EC  0100               	movlb	0	; () banked
  8795  00E0EE  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8796  00E0F0                     l19831:
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;rtcc.c: 400: }
  8800                           ;rtcc.c: 403: buffer = _rtcc_verify_bcd(date[3], 0x00, 0x23);
  8801  00E0F0  0E00               	movlw	0
  8802  00E0F2  0100               	movlb	0	; () banked
  8803  00E0F4  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8804  00E0F6  0E23               	movlw	35
  8805  00E0F8  0100               	movlb	0	; () banked
  8806  00E0FA  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8807  00E0FC  0100               	movlb	0	; () banked
  8808  00E0FE  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8809  00E100  EC48  F097         	call	__rtcc_verify_bcd
  8810  00E104  0100               	movlb	0	; () banked
  8811  00E106  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;rtcc.c: 404: if(buffer != date[3])
  8815  00E108  0100               	movlb	0	; () banked
  8816  00E10A  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8817  00E10C  0100               	movlb	0	; () banked
  8818  00E10E  198F               	xorwf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8819  00E110  B4D8               	btfsc	status,2,c
  8820  00E112  D005               	goto	l19839
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;rtcc.c: 405: {
  8824                           ;rtcc.c: 406: date[3] = buffer;
  8825  00E114  C092  F08F         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+3
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;rtcc.c: 407: error_found = 1;
  8829  00E118  0E01               	movlw	1
  8830  00E11A  0100               	movlb	0	; () banked
  8831  00E11C  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8832  00E11E                     l19839:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;rtcc.c: 408: }
  8836                           ;rtcc.c: 409: rtcc_set_hours(date[3]);
  8837  00E11E  0100               	movlb	0	; () banked
  8838  00E120  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8839  00E122  EC39  F0A0         	call	_rtcc_set_hours
  8840                           
  8841                           ;rtcc.c: 412: buffer = _rtcc_verify_bcd(date[4], 0x00, 0x59);
  8842  00E126  0E00               	movlw	0
  8843  00E128  0100               	movlb	0	; () banked
  8844  00E12A  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8845  00E12C  0E59               	movlw	89
  8846  00E12E  0100               	movlb	0	; () banked
  8847  00E130  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8848  00E132  0100               	movlb	0	; () banked
  8849  00E134  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8850  00E136  EC48  F097         	call	__rtcc_verify_bcd
  8851  00E13A  0100               	movlb	0	; () banked
  8852  00E13C  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8853                           
  8854                           ;rtcc.c: 413: if(buffer != date[4])
  8855  00E13E  0100               	movlb	0	; () banked
  8856  00E140  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8857  00E142  0100               	movlb	0	; () banked
  8858  00E144  1990               	xorwf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8859  00E146  B4D8               	btfsc	status,2,c
  8860  00E148  D005               	goto	l19847
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;rtcc.c: 414: {
  8864                           ;rtcc.c: 415: date[4] = buffer;
  8865  00E14A  C092  F090         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+4
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;rtcc.c: 416: error_found = 1;
  8869  00E14E  0E01               	movlw	1
  8870  00E150  0100               	movlb	0	; () banked
  8871  00E152  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8872  00E154                     l19847:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;rtcc.c: 417: }
  8876                           ;rtcc.c: 418: rtcc_set_minutes(date[4]);
  8877  00E154  0100               	movlb	0	; () banked
  8878  00E156  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8879  00E158  EC2C  F0A0         	call	_rtcc_set_minutes
  8880                           
  8881                           ;rtcc.c: 421: buffer = _rtcc_verify_bcd(date[5], 0x00, 0x59);
  8882  00E15C  0E00               	movlw	0
  8883  00E15E  0100               	movlb	0	; () banked
  8884  00E160  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8885  00E162  0E59               	movlw	89
  8886  00E164  0100               	movlb	0	; () banked
  8887  00E166  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8888  00E168  0100               	movlb	0	; () banked
  8889  00E16A  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8890  00E16C  EC48  F097         	call	__rtcc_verify_bcd
  8891  00E170  0100               	movlb	0	; () banked
  8892  00E172  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8893                           
  8894                           ;rtcc.c: 422: if(buffer != date[5])
  8895  00E174  0100               	movlb	0	; () banked
  8896  00E176  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8897  00E178  0100               	movlb	0	; () banked
  8898  00E17A  1991               	xorwf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8899  00E17C  B4D8               	btfsc	status,2,c
  8900  00E17E  D005               	goto	l19855
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;rtcc.c: 423: {
  8904                           ;rtcc.c: 424: date[5] = buffer;
  8905  00E180  C092  F091         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+5
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;rtcc.c: 425: error_found = 1;
  8909  00E184  0E01               	movlw	1
  8910  00E186  0100               	movlb	0	; () banked
  8911  00E188  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8912  00E18A                     l19855:
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;rtcc.c: 426: }
  8916                           ;rtcc.c: 427: rtcc_set_seconds(date[5]);
  8917  00E18A  0100               	movlb	0	; () banked
  8918  00E18C  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8919  00E18E  EC12  F0A0         	call	_rtcc_set_seconds
  8920                           
  8921                           ;rtcc.c: 430: if(error_found)
  8922  00E192  0100               	movlb	0	; () banked
  8923  00E194  518B               	movf	rtcc_read_eeprom@error_found& (0+255),w,b
  8924  00E196  0100               	movlb	0	; () banked
  8925  00E198  B4D8               	btfsc	status,2,c
  8926  00E19A  0012               	return	
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;rtcc.c: 431: {
  8930                           ;rtcc.c: 432: rtcc_write_eeprom();
  8931  00E19C  ECBA  F099         	call	_rtcc_write_eeprom	;wreg free
  8932  00E1A0  0012               	return	
  8933  00E1A2                     __end_of_rtcc_read_eeprom:
  8934                           	opt stack 0
  8935                           tblptru	equ	0xFF8
  8936                           tblptrh	equ	0xFF7
  8937                           tblptrl	equ	0xFF6
  8938                           tablat	equ	0xFF5
  8939                           intcon3	equ	0xFF0
  8940                           postinc0	equ	0xFEE
  8941                           wreg	equ	0xFE8
  8942                           postdec1	equ	0xFE5
  8943                           plusw1	equ	0xFE3
  8944                           fsr1h	equ	0xFE2
  8945                           fsr1l	equ	0xFE1
  8946                           postinc2	equ	0xFDE
  8947                           postdec2	equ	0xFDD
  8948                           plusw2	equ	0xFDB
  8949                           fsr2h	equ	0xFDA
  8950                           fsr2l	equ	0xFD9
  8951                           status	equ	0xFD8
  8952                           
  8953 ;; *************** function _rtcc_correct_day *****************
  8954 ;; Defined at:
  8955 ;;		line 118 in file "rtcc.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  max             1    5[BANK0 ] unsigned char 
  8960 ;;  day             1    4[BANK0 ] unsigned char 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;Total ram usage:        2 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:   12
  8977 ;; This function calls:
  8978 ;;		__number_of_days
  8979 ;;		_rtcc_get_day
  8980 ;;		_rtcc_set_day
  8981 ;; This function is called by:
  8982 ;;		__ui_encoder
  8983 ;;		_rtcc_read_eeprom
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text28
  8988  013EB0                     __ptext28:
  8989                           	opt stack 0
  8990  013EB0                     _rtcc_correct_day:
  8991                           	opt stack 16
  8992                           
  8993                           ;rtcc.c: 120: uint8_t day = rtcc_get_day();
  8994                           
  8995                           ;incstack = 0
  8996  013EB0  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
  8997  013EB4  0100               	movlb	0	; () banked
  8998  013EB6  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;rtcc.c: 121: uint8_t max = _number_of_days();
  9002  013EB8  EC4E  F091         	call	__number_of_days	;wreg free
  9003  013EBC  0100               	movlb	0	; () banked
  9004  013EBE  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;rtcc.c: 122: if(day>max)
  9008  013EC0  0100               	movlb	0	; () banked
  9009  013EC2  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  9010  013EC4  0100               	movlb	0	; () banked
  9011  013EC6  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  9012  013EC8  B0D8               	btfsc	status,0,c
  9013  013ECA  0012               	return	
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;rtcc.c: 123: rtcc_set_day(max);
  9017  013ECC  0100               	movlb	0	; () banked
  9018  013ECE  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  9019  013ED0  EC46  F0A0         	call	_rtcc_set_day
  9020  013ED4  0012               	return	
  9021  013ED6                     __end_of_rtcc_correct_day:
  9022                           	opt stack 0
  9023                           tblptru	equ	0xFF8
  9024                           tblptrh	equ	0xFF7
  9025                           tblptrl	equ	0xFF6
  9026                           tablat	equ	0xFF5
  9027                           intcon3	equ	0xFF0
  9028                           postinc0	equ	0xFEE
  9029                           wreg	equ	0xFE8
  9030                           postdec1	equ	0xFE5
  9031                           plusw1	equ	0xFE3
  9032                           fsr1h	equ	0xFE2
  9033                           fsr1l	equ	0xFE1
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           plusw2	equ	0xFDB
  9037                           fsr2h	equ	0xFDA
  9038                           fsr2l	equ	0xFD9
  9039                           status	equ	0xFD8
  9040                           
  9041 ;; *************** function __number_of_days *****************
  9042 ;; Defined at:
  9043 ;;		line 60 in file "rtcc.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  month           1    3[BANK0 ] unsigned char 
  9048 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  9049 ;;  year            1    1[BANK0 ] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  1    wreg      unsigned char 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;Total ram usage:        4 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:   11
  9066 ;; This function calls:
  9067 ;;		_rtcc_get_month
  9068 ;;		_rtcc_get_year
  9069 ;; This function is called by:
  9070 ;;		_rtcc_correct_day
  9071 ;;		_rtcc_increment_day
  9072 ;;		_rtcc_decrement_day
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text29
  9077  01229C                     __ptext29:
  9078                           	opt stack 0
  9079  01229C                     __number_of_days:
  9080                           	opt stack 16
  9081                           
  9082                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  9083                           
  9084                           ;incstack = 0
  9085  01229C  ECB4  F0A0         	call	_rtcc_get_month	;wreg free
  9086  0122A0  0100               	movlb	0	; () banked
  9087  0122A2  6F63               	movwf	__number_of_days@month& (0+255),b
  9088                           
  9089                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  9090  0122A4  ECA0  F0A0         	call	_rtcc_get_year	;wreg free
  9091  0122A8  0100               	movlb	0	; () banked
  9092  0122AA  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;rtcc.c: 64: uint8_t year;
  9096                           ;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || month==0x11)
  9097  0122AC  0E04               	movlw	4
  9098  0122AE  0100               	movlb	0	; () banked
  9099  0122B0  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9100  0122B2  B4D8               	btfsc	status,2,c
  9101  0122B4  D00F               	goto	l18791
  9102                           
  9103                           ; BSR set to: 0
  9104  0122B6  0E06               	movlw	6
  9105  0122B8  0100               	movlb	0	; () banked
  9106  0122BA  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9107  0122BC  B4D8               	btfsc	status,2,c
  9108  0122BE  D00A               	goto	l18791
  9109                           
  9110                           ; BSR set to: 0
  9111  0122C0  0E09               	movlw	9
  9112  0122C2  0100               	movlb	0	; () banked
  9113  0122C4  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9114  0122C6  B4D8               	btfsc	status,2,c
  9115  0122C8  D005               	goto	l18791
  9116                           
  9117                           ; BSR set to: 0
  9118  0122CA  0E11               	movlw	17
  9119  0122CC  0100               	movlb	0	; () banked
  9120  0122CE  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9121  0122D0  A4D8               	btfss	status,2,c
  9122  0122D2  D002               	goto	l18795
  9123  0122D4                     l18791:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;rtcc.c: 66: return 0x30;
  9127  0122D4  0E30               	movlw	48
  9128                           
  9129                           ; BSR set to: 0
  9130  0122D6  0012               	return	
  9131  0122D8                     l18795:
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;rtcc.c: 67: if(month==0x02)
  9135  0122D8  0E02               	movlw	2
  9136  0122DA  0100               	movlb	0	; () banked
  9137  0122DC  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9138  0122DE  A4D8               	btfss	status,2,c
  9139  0122E0  D01A               	goto	l18815
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;rtcc.c: 68: {
  9143                           ;rtcc.c: 69: year = bcd_year>>4;
  9144  0122E2  0100               	movlb	0	; () banked
  9145  0122E4  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  9146  0122E6  0B0F               	andlw	15
  9147  0122E8  0100               	movlb	0	; () banked
  9148  0122EA  6F61               	movwf	__number_of_days@year& (0+255),b
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;rtcc.c: 70: year *= 10;
  9152  0122EC  0E0A               	movlw	10
  9153  0122EE  0100               	movlb	0	; () banked
  9154  0122F0  0361               	mulwf	__number_of_days@year& (0+255),b
  9155  0122F2  50F3               	movf	prodl,w,c
  9156  0122F4  6F61               	movwf	__number_of_days@year& (0+255),b
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  9160  0122F6  0100               	movlb	0	; () banked
  9161  0122F8  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  9162  0122FA  0B0F               	andlw	15
  9163  0122FC  0100               	movlb	0	; () banked
  9164  0122FE  2761               	addwf	__number_of_days@year& (0+255),f,b
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;rtcc.c: 72: if(year&0b11)
  9168  012300  C061  F060         	movff	__number_of_days@year,??__number_of_days
  9169  012304  0E03               	movlw	3
  9170  012306  0100               	movlb	0	; () banked
  9171  012308  1760               	andwf	??__number_of_days& (0+255),f,b
  9172  01230A  B4D8               	btfsc	status,2,c
  9173  01230C  D002               	goto	l18811
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;rtcc.c: 73: return 0x28;
  9177  01230E  0E28               	movlw	40
  9178                           
  9179                           ; BSR set to: 0
  9180  012310  0012               	return	
  9181  012312                     l18811:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;rtcc.c: 74: else
  9185                           ;rtcc.c: 75: return 0x29;
  9186  012312  0E29               	movlw	41
  9187                           
  9188                           ; BSR set to: 0
  9189  012314  0012               	return	
  9190  012316                     l18815:
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;rtcc.c: 76: }
  9194                           ;rtcc.c: 77: return 0x31;
  9195  012316  0E31               	movlw	49
  9196  012318  0012               	return	
  9197  01231A                     __end_of__number_of_days:
  9198                           	opt stack 0
  9199                           tblptru	equ	0xFF8
  9200                           tblptrh	equ	0xFF7
  9201                           tblptrl	equ	0xFF6
  9202                           tablat	equ	0xFF5
  9203                           prodl	equ	0xFF3
  9204                           intcon3	equ	0xFF0
  9205                           postinc0	equ	0xFEE
  9206                           wreg	equ	0xFE8
  9207                           postdec1	equ	0xFE5
  9208                           plusw1	equ	0xFE3
  9209                           fsr1h	equ	0xFE2
  9210                           fsr1l	equ	0xFE1
  9211                           postinc2	equ	0xFDE
  9212                           postdec2	equ	0xFDD
  9213                           plusw2	equ	0xFDB
  9214                           fsr2h	equ	0xFDA
  9215                           fsr2l	equ	0xFD9
  9216                           status	equ	0xFD8
  9217                           
  9218 ;; *************** function __rtcc_verify_bcd *****************
  9219 ;; Defined at:
  9220 ;;		line 80 in file "rtcc.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  value           1    wreg     unsigned char 
  9223 ;;  min             1    0[BANK0 ] unsigned char 
  9224 ;;  max             1    1[BANK0 ] unsigned char 
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  value           1    3[BANK0 ] unsigned char 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      unsigned char 
  9229 ;; Registers used:
  9230 ;;		wreg, status,2, status,0
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9238 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9239 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9240 ;;Total ram usage:        4 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:   10
  9243 ;; This function calls:
  9244 ;;		Nothing
  9245 ;; This function is called by:
  9246 ;;		_rtcc_read_eeprom
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           	psect	text30
  9251  012E90                     __ptext30:
  9252                           	opt stack 0
  9253  012E90                     __rtcc_verify_bcd:
  9254                           	opt stack 17
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;incstack = 0
  9258                           ;__rtcc_verify_bcd@value stored from wreg
  9259  012E90  0100               	movlb	0	; () banked
  9260  012E92  6F63               	movwf	__rtcc_verify_bcd@value& (0+255),b
  9261                           
  9262                           ;rtcc.c: 83: if((value&0x0F)>0x09)
  9263  012E94  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9264  012E98  0E0F               	movlw	15
  9265  012E9A  0100               	movlb	0	; () banked
  9266  012E9C  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9267  012E9E  0E09               	movlw	9
  9268  012EA0  0100               	movlb	0	; () banked
  9269  012EA2  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9270  012EA4  D003               	goto	l19137
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;rtcc.c: 84: {
  9274                           ;rtcc.c: 85: return min;
  9275  012EA6  0100               	movlb	0	; () banked
  9276  012EA8  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9277                           
  9278                           ; BSR set to: 0
  9279  012EAA  0012               	return	
  9280  012EAC                     l19137:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;rtcc.c: 86: }
  9284                           ;rtcc.c: 87: if((value&0xF0)>0x90)
  9285  012EAC  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9286  012EB0  0EF0               	movlw	240
  9287  012EB2  0100               	movlb	0	; () banked
  9288  012EB4  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9289  012EB6  0E90               	movlw	144
  9290  012EB8  0100               	movlb	0	; () banked
  9291  012EBA  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9292  012EBC  D003               	goto	l19143
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;rtcc.c: 88: {
  9296                           ;rtcc.c: 89: return min;
  9297  012EBE  0100               	movlb	0	; () banked
  9298  012EC0  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9299                           
  9300                           ; BSR set to: 0
  9301  012EC2  0012               	return	
  9302  012EC4                     l19143:
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;rtcc.c: 90: }
  9306                           ;rtcc.c: 92: if(value<min)
  9307  012EC4  0100               	movlb	0	; () banked
  9308  012EC6  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9309  012EC8  0100               	movlb	0	; () banked
  9310  012ECA  5D63               	subwf	__rtcc_verify_bcd@value& (0+255),w,b
  9311  012ECC  B0D8               	btfsc	status,0,c
  9312  012ECE  D003               	goto	l19149
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;rtcc.c: 93: {
  9316                           ;rtcc.c: 94: return min;
  9317  012ED0  0100               	movlb	0	; () banked
  9318  012ED2  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9319                           
  9320                           ; BSR set to: 0
  9321  012ED4  0012               	return	
  9322  012ED6                     l19149:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;rtcc.c: 95: }
  9326                           ;rtcc.c: 96: if(value>max)
  9327  012ED6  0100               	movlb	0	; () banked
  9328  012ED8  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9329  012EDA  0100               	movlb	0	; () banked
  9330  012EDC  5D61               	subwf	__rtcc_verify_bcd@max& (0+255),w,b
  9331  012EDE  B0D8               	btfsc	status,0,c
  9332  012EE0  D003               	goto	l19155
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;rtcc.c: 97: {
  9336                           ;rtcc.c: 98: return max;
  9337  012EE2  0100               	movlb	0	; () banked
  9338  012EE4  5161               	movf	__rtcc_verify_bcd@max& (0+255),w,b
  9339                           
  9340                           ; BSR set to: 0
  9341  012EE6  0012               	return	
  9342  012EE8                     l19155:
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;rtcc.c: 99: }
  9346                           ;rtcc.c: 101: return value;
  9347  012EE8  0100               	movlb	0	; () banked
  9348  012EEA  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9349  012EEC  0012               	return	
  9350  012EEE                     __end_of__rtcc_verify_bcd:
  9351                           	opt stack 0
  9352                           tblptru	equ	0xFF8
  9353                           tblptrh	equ	0xFF7
  9354                           tblptrl	equ	0xFF6
  9355                           tablat	equ	0xFF5
  9356                           prodl	equ	0xFF3
  9357                           intcon3	equ	0xFF0
  9358                           postinc0	equ	0xFEE
  9359                           wreg	equ	0xFE8
  9360                           postdec1	equ	0xFE5
  9361                           plusw1	equ	0xFE3
  9362                           fsr1h	equ	0xFE2
  9363                           fsr1l	equ	0xFE1
  9364                           postinc2	equ	0xFDE
  9365                           postdec2	equ	0xFDD
  9366                           plusw2	equ	0xFDB
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function _log_start_new *****************
  9372 ;; Defined at:
  9373 ;;		line 71 in file "log.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;		None
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  1    wreg      void 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;Total ram usage:        0 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:   12
  9394 ;; This function calls:
  9395 ;;		_rtcc_get_seconds_decimal
  9396 ;; This function is called by:
  9397 ;;		_main
  9398 ;;		_system_init
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text31
  9403  010134                     __ptext31:
  9404                           	opt stack 0
  9405  010134                     _log_start_new:
  9406                           	opt stack 17
  9407                           
  9408                           ;log.c: 73: inputVoltageSum = 0;
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;incstack = 0
  9412  010134  0E00               	movlw	0
  9413  010136  0102               	movlb	2	; () banked
  9414  010138  6F9A               	movwf	_inputVoltageSum& (0+255),b
  9415  01013A  0E00               	movlw	0
  9416  01013C  6F9B               	movwf	(_inputVoltageSum+1)& (0+255),b
  9417  01013E  0E00               	movlw	0
  9418  010140  6F9C               	movwf	(_inputVoltageSum+2)& (0+255),b
  9419  010142  0E00               	movlw	0
  9420  010144  6F9D               	movwf	(_inputVoltageSum+3)& (0+255),b
  9421                           
  9422                           ;log.c: 74: inputCurrentSum = 0;
  9423  010146  0E00               	movlw	0
  9424  010148  0102               	movlb	2	; () banked
  9425  01014A  6F96               	movwf	_inputCurrentSum& (0+255),b
  9426  01014C  0E00               	movlw	0
  9427  01014E  6F97               	movwf	(_inputCurrentSum+1)& (0+255),b
  9428  010150  0E00               	movlw	0
  9429  010152  6F98               	movwf	(_inputCurrentSum+2)& (0+255),b
  9430  010154  0E00               	movlw	0
  9431  010156  6F99               	movwf	(_inputCurrentSum+3)& (0+255),b
  9432                           
  9433                           ;log.c: 75: outputVoltageSum = 0;
  9434  010158  0E00               	movlw	0
  9435  01015A  0102               	movlb	2	; () banked
  9436  01015C  6F92               	movwf	_outputVoltageSum& (0+255),b
  9437  01015E  0E00               	movlw	0
  9438  010160  6F93               	movwf	(_outputVoltageSum+1)& (0+255),b
  9439  010162  0E00               	movlw	0
  9440  010164  6F94               	movwf	(_outputVoltageSum+2)& (0+255),b
  9441  010166  0E00               	movlw	0
  9442  010168  6F95               	movwf	(_outputVoltageSum+3)& (0+255),b
  9443                           
  9444                           ;log.c: 76: outputCurrentSum = 0;
  9445  01016A  0E00               	movlw	0
  9446  01016C  0102               	movlb	2	; () banked
  9447  01016E  6F8E               	movwf	_outputCurrentSum& (0+255),b
  9448  010170  0E00               	movlw	0
  9449  010172  6F8F               	movwf	(_outputCurrentSum+1)& (0+255),b
  9450  010174  0E00               	movlw	0
  9451  010176  6F90               	movwf	(_outputCurrentSum+2)& (0+255),b
  9452  010178  0E00               	movlw	0
  9453  01017A  6F91               	movwf	(_outputCurrentSum+3)& (0+255),b
  9454                           
  9455                           ;log.c: 77: inputPowerSum = 0;
  9456  01017C  0E00               	movlw	0
  9457  01017E  0102               	movlb	2	; () banked
  9458  010180  6F8A               	movwf	_inputPowerSum& (0+255),b
  9459  010182  0E00               	movlw	0
  9460  010184  6F8B               	movwf	(_inputPowerSum+1)& (0+255),b
  9461  010186  0E00               	movlw	0
  9462  010188  6F8C               	movwf	(_inputPowerSum+2)& (0+255),b
  9463  01018A  0E00               	movlw	0
  9464  01018C  6F8D               	movwf	(_inputPowerSum+3)& (0+255),b
  9465                           
  9466                           ;log.c: 78: outputPowerSum = 0;
  9467  01018E  0E00               	movlw	0
  9468  010190  0102               	movlb	2	; () banked
  9469  010192  6F86               	movwf	_outputPowerSum& (0+255),b
  9470  010194  0E00               	movlw	0
  9471  010196  6F87               	movwf	(_outputPowerSum+1)& (0+255),b
  9472  010198  0E00               	movlw	0
  9473  01019A  6F88               	movwf	(_outputPowerSum+2)& (0+255),b
  9474  01019C  0E00               	movlw	0
  9475  01019E  6F89               	movwf	(_outputPowerSum+3)& (0+255),b
  9476                           
  9477                           ;log.c: 79: inputCapacitySum = 0;
  9478  0101A0  0E00               	movlw	0
  9479  0101A2  0102               	movlb	2	; () banked
  9480  0101A4  6F82               	movwf	_inputCapacitySum& (0+255),b
  9481  0101A6  0E00               	movlw	0
  9482  0101A8  6F83               	movwf	(_inputCapacitySum+1)& (0+255),b
  9483  0101AA  0E00               	movlw	0
  9484  0101AC  6F84               	movwf	(_inputCapacitySum+2)& (0+255),b
  9485  0101AE  0E00               	movlw	0
  9486  0101B0  6F85               	movwf	(_inputCapacitySum+3)& (0+255),b
  9487                           
  9488                           ;log.c: 80: outputCapacitySum = 0;
  9489  0101B2  0E00               	movlw	0
  9490  0101B4  0102               	movlb	2	; () banked
  9491  0101B6  6F7E               	movwf	_outputCapacitySum& (0+255),b
  9492  0101B8  0E00               	movlw	0
  9493  0101BA  6F7F               	movwf	(_outputCapacitySum+1)& (0+255),b
  9494  0101BC  0E00               	movlw	0
  9495  0101BE  6F80               	movwf	(_outputCapacitySum+2)& (0+255),b
  9496  0101C0  0E00               	movlw	0
  9497  0101C2  6F81               	movwf	(_outputCapacitySum+3)& (0+255),b
  9498                           
  9499                           ;log.c: 81: temperatureOnboardSum = 0;
  9500  0101C4  0E00               	movlw	0
  9501  0101C6  0102               	movlb	2	; () banked
  9502  0101C8  6F7A               	movwf	_temperatureOnboardSum& (0+255),b
  9503  0101CA  0E00               	movlw	0
  9504  0101CC  6F7B               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  9505  0101CE  0E00               	movlw	0
  9506  0101D0  6F7C               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  9507  0101D2  0E00               	movlw	0
  9508  0101D4  6F7D               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  9509                           
  9510                           ;log.c: 82: temperatureExternal1Sum = 0;
  9511  0101D6  0E00               	movlw	0
  9512  0101D8  0102               	movlb	2	; () banked
  9513  0101DA  6F76               	movwf	_temperatureExternal1Sum& (0+255),b
  9514  0101DC  0E00               	movlw	0
  9515  0101DE  6F77               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  9516  0101E0  0E00               	movlw	0
  9517  0101E2  6F78               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  9518  0101E4  0E00               	movlw	0
  9519  0101E6  6F79               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  9520                           
  9521                           ;log.c: 83: temperatureExternal2Sum = 0;
  9522  0101E8  0E00               	movlw	0
  9523  0101EA  0102               	movlb	2	; () banked
  9524  0101EC  6F72               	movwf	_temperatureExternal2Sum& (0+255),b
  9525  0101EE  0E00               	movlw	0
  9526  0101F0  6F73               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  9527  0101F2  0E00               	movlw	0
  9528  0101F4  6F74               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  9529  0101F6  0E00               	movlw	0
  9530  0101F8  6F75               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  9531                           
  9532                           ;log.c: 84: chargerOnTime = 0;
  9533  0101FA  0E00               	movlw	0
  9534  0101FC  0102               	movlb	2	; () banked
  9535  0101FE  6FB1               	movwf	(_chargerOnTime+1)& (0+255),b
  9536  010200  0E00               	movlw	0
  9537  010202  6FB0               	movwf	_chargerOnTime& (0+255),b
  9538                           
  9539                           ;log.c: 85: lowPowerTime = 0;
  9540  010204  0E00               	movlw	0
  9541  010206  0102               	movlb	2	; () banked
  9542  010208  6FAF               	movwf	(_lowPowerTime+1)& (0+255),b
  9543  01020A  0E00               	movlw	0
  9544  01020C  6FAE               	movwf	_lowPowerTime& (0+255),b
  9545                           
  9546                           ;log.c: 86: status = 0;
  9547  01020E  0E00               	movlw	0
  9548  010210  0101               	movlb	1	; () banked
  9549  010212  6FF0               	movwf	_status& (0+255),b
  9550                           
  9551                           ;log.c: 87: averageCount = 0;
  9552  010214  0E00               	movlw	0
  9553  010216  6E17               	movwf	_averageCount+1,c
  9554  010218  0E00               	movlw	0
  9555  01021A  6E16               	movwf	_averageCount,c
  9556                           
  9557                           ; BSR set to: 1
  9558                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  9559  01021C  EC09  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
  9560  010220  0101               	movlb	1	; () banked
  9561  010222  6FEF               	movwf	_lastSecond& (0+255),b
  9562                           
  9563                           ; BSR set to: 1
  9564  010224  0012               	return		;funcret
  9565  010226                     __end_of_log_start_new:
  9566                           	opt stack 0
  9567                           tblptru	equ	0xFF8
  9568                           tblptrh	equ	0xFF7
  9569                           tblptrl	equ	0xFF6
  9570                           tablat	equ	0xFF5
  9571                           prodl	equ	0xFF3
  9572                           intcon3	equ	0xFF0
  9573                           postinc0	equ	0xFEE
  9574                           wreg	equ	0xFE8
  9575                           postdec1	equ	0xFE5
  9576                           plusw1	equ	0xFE3
  9577                           fsr1h	equ	0xFE2
  9578                           fsr1l	equ	0xFE1
  9579                           postinc2	equ	0xFDE
  9580                           postdec2	equ	0xFDD
  9581                           plusw2	equ	0xFDB
  9582                           fsr2h	equ	0xFDA
  9583                           fsr2l	equ	0xFD9
  9584                           status	equ	0xFD8
  9585                           
  9586 ;; *************** function _i2c_init *****************
  9587 ;; Defined at:
  9588 ;;		line 94 in file "i2c.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;		None
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;		None
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  1    wreg      void 
  9595 ;; Registers used:
  9596 ;;		wreg, status,2, status,0, cstack
  9597 ;; Tracked objects:
  9598 ;;		On entry : 0/0
  9599 ;;		On exit  : 0/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;Total ram usage:        0 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; Hardware stack levels required when called:   11
  9609 ;; This function calls:
  9610 ;;		__i2c_open_1
  9611 ;;		_i2c_set_frequency
  9612 ;; This function is called by:
  9613 ;;		_system_init
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text32
  9618  014264                     __ptext32:
  9619                           	opt stack 0
  9620  014264                     _i2c_init:
  9621                           	opt stack 18
  9622                           
  9623                           ;i2c.c: 96: _i2c_open_1();
  9624                           
  9625                           ; BSR set to: 1
  9626                           ;incstack = 0
  9627  014264  EC53  F0A0         	call	__i2c_open_1	;wreg free
  9628                           
  9629                           ;i2c.c: 98: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9630  014268  0E00               	movlw	0
  9631  01426A  ECDC  F093         	call	_i2c_set_frequency
  9632  01426E  0012               	return		;funcret
  9633  014270                     __end_of_i2c_init:
  9634                           	opt stack 0
  9635                           tblptru	equ	0xFF8
  9636                           tblptrh	equ	0xFF7
  9637                           tblptrl	equ	0xFF6
  9638                           tablat	equ	0xFF5
  9639                           prodl	equ	0xFF3
  9640                           intcon3	equ	0xFF0
  9641                           postinc0	equ	0xFEE
  9642                           wreg	equ	0xFE8
  9643                           postdec1	equ	0xFE5
  9644                           plusw1	equ	0xFE3
  9645                           fsr1h	equ	0xFE2
  9646                           fsr1l	equ	0xFE1
  9647                           postinc2	equ	0xFDE
  9648                           postdec2	equ	0xFDD
  9649                           plusw2	equ	0xFDB
  9650                           fsr2h	equ	0xFDA
  9651                           fsr2l	equ	0xFD9
  9652                           status	equ	0xFD8
  9653                           
  9654 ;; *************** function __i2c_open_1 *****************
  9655 ;; Defined at:
  9656 ;;		line 33 in file "i2c.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;		None
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;		None
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      void 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9674 ;;Total ram usage:        0 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; Hardware stack levels required when called:   10
  9677 ;; This function calls:
  9678 ;;		Nothing
  9679 ;; This function is called by:
  9680 ;;		_i2c_init
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text33
  9685  0140A6                     __ptext33:
  9686                           	opt stack 0
  9687  0140A6                     __i2c_open_1:
  9688                           	opt stack 18
  9689                           
  9690                           ;i2c.c: 35: SSP1STATbits.SMP = 0;
  9691                           
  9692                           ;incstack = 0
  9693  0140A6  9EC7               	bcf	4039,7,c	;volatile
  9694                           
  9695                           ;i2c.c: 36: SSP1STATbits.CKE = 0;
  9696  0140A8  9CC7               	bcf	4039,6,c	;volatile
  9697                           
  9698                           ;i2c.c: 37: SSP1ADD = 29;
  9699  0140AA  0E1D               	movlw	29
  9700  0140AC  6EC8               	movwf	4040,c	;volatile
  9701                           
  9702                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  9703  0140AE  9EC6               	bcf	4038,7,c	;volatile
  9704                           
  9705                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  9706  0140B0  9CC6               	bcf	4038,6,c	;volatile
  9707                           
  9708                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  9709  0140B2  50C6               	movf	4038,w,c	;volatile
  9710  0140B4  0BF0               	andlw	-16
  9711  0140B6  0908               	iorlw	8
  9712  0140B8  6EC6               	movwf	4038,c	;volatile
  9713                           
  9714                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  9715  0140BA  8AC6               	bsf	4038,5,c	;volatile
  9716  0140BC  0012               	return		;funcret
  9717  0140BE                     __end_of__i2c_open_1:
  9718                           	opt stack 0
  9719                           tblptru	equ	0xFF8
  9720                           tblptrh	equ	0xFF7
  9721                           tblptrl	equ	0xFF6
  9722                           tablat	equ	0xFF5
  9723                           prodl	equ	0xFF3
  9724                           intcon3	equ	0xFF0
  9725                           postinc0	equ	0xFEE
  9726                           wreg	equ	0xFE8
  9727                           postdec1	equ	0xFE5
  9728                           plusw1	equ	0xFE3
  9729                           fsr1h	equ	0xFE2
  9730                           fsr1l	equ	0xFE1
  9731                           postinc2	equ	0xFDE
  9732                           postdec2	equ	0xFDD
  9733                           plusw2	equ	0xFDB
  9734                           fsr2h	equ	0xFDA
  9735                           fsr2l	equ	0xFD9
  9736                           status	equ	0xFD8
  9737                           
  9738 ;; *************** function _i2c_eeprom_read_calibration *****************
  9739 ;; Defined at:
  9740 ;;		line 579 in file "i2c.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  buffer          4   27[BANK0 ] unsigned char [4]
  9745 ;;  addr            2   31[BANK0 ] unsigned int 
  9746 ;;  cntr            1   33[BANK0 ] unsigned char 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9759 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9760 ;;Total ram usage:        9 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:   13
  9763 ;; This function calls:
  9764 ;;		__i2c_eeprom_load_default_calibration
  9765 ;;		_i2c_eeprom_read
  9766 ;;		_schedule_eeprom_write_task
  9767 ;; This function is called by:
  9768 ;;		_system_init
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text34
  9773  00E874                     __ptext34:
  9774                           	opt stack 0
  9775  00E874                     _i2c_eeprom_read_calibration:
  9776                           	opt stack 16
  9777                           
  9778                           ;i2c.c: 581: uint8_t buffer[4];
  9779                           ;i2c.c: 582: uint8_t cntr;
  9780                           ;i2c.c: 583: uint16_t addr;
  9781                           ;i2c.c: 585: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  9782                           
  9783                           ;incstack = 0
  9784  00E874  0E00               	movlw	0
  9785  00E876  0100               	movlb	0	; () banked
  9786  00E878  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
  9787  00E87A                     l20769:
  9788                           
  9789                           ; BSR set to: 0
  9790  00E87A  0E06               	movlw	6
  9791  00E87C  0100               	movlb	0	; () banked
  9792  00E87E  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
  9793  00E880  D001               	goto	l20773
  9794  00E882  0012               	return	
  9795  00E884                     l20773:
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;i2c.c: 586: {
  9799                           ;i2c.c: 588: addr = 0x0200 + (cntr<<4);
  9800  00E884  0100               	movlb	0	; () banked
  9801  00E886  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9802  00E888  0100               	movlb	0	; () banked
  9803  00E88A  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
  9804  00E88C  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
  9805  00E88E  0100               	movlb	0	; () banked
  9806  00E890  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9807  00E892  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9808  00E894  0EF0               	movlw	240
  9809  00E896  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9810  00E898  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9811  00E89A  0B0F               	andlw	15
  9812  00E89C  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9813  00E89E  0EF0               	movlw	240
  9814  00E8A0  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9815  00E8A2  0E00               	movlw	0
  9816  00E8A4  0100               	movlb	0	; () banked
  9817  00E8A6  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9818  00E8A8  0100               	movlb	0	; () banked
  9819  00E8AA  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
  9820  00E8AC  0E02               	movlw	2
  9821  00E8AE  0100               	movlb	0	; () banked
  9822  00E8B0  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
  9823  00E8B2  0100               	movlb	0	; () banked
  9824  00E8B4  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;i2c.c: 589: i2c_eeprom_read(addr, &buffer[0], 4);
  9828  00E8B6  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9829  00E8BA  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9830  00E8BE  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
  9831  00E8C0  0100               	movlb	0	; () banked
  9832  00E8C2  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9833  00E8C4  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  9834  00E8C6  0100               	movlb	0	; () banked
  9835  00E8C8  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9836  00E8CA  0E04               	movlw	4
  9837  00E8CC  0100               	movlb	0	; () banked
  9838  00E8CE  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9839  00E8D0  EC53  F096         	call	_i2c_eeprom_read	;wreg free
  9840                           
  9841                           ;i2c.c: 591: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  9842  00E8D4  0E77               	movlw	119
  9843  00E8D6  0100               	movlb	0	; () banked
  9844  00E8D8  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
  9845  00E8DA  A4D8               	btfss	status,2,c
  9846  00E8DC  D02A               	goto	l20789
  9847                           
  9848                           ; BSR set to: 0
  9849  00E8DE  0E55               	movlw	85
  9850  00E8E0  0100               	movlb	0	; () banked
  9851  00E8E2  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
  9852  00E8E4  A4D8               	btfss	status,2,c
  9853  00E8E6  D025               	goto	l20789
  9854                           
  9855                           ; BSR set to: 0
  9856  00E8E8  0E33               	movlw	51
  9857  00E8EA  0100               	movlb	0	; () banked
  9858  00E8EC  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
  9859  00E8EE  A4D8               	btfss	status,2,c
  9860  00E8F0  D020               	goto	l20789
  9861                           
  9862                           ; BSR set to: 0
  9863  00E8F2  0100               	movlb	0	; () banked
  9864  00E8F4  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9865  00E8F6  0100               	movlb	0	; () banked
  9866  00E8F8  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
  9867  00E8FA  A4D8               	btfss	status,2,c
  9868  00E8FC  D01A               	goto	l20789
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;i2c.c: 592: {
  9872                           ;i2c.c: 594: addr += 4;
  9873  00E8FE  0E04               	movlw	4
  9874  00E900  0100               	movlb	0	; () banked
  9875  00E902  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
  9876  00E904  0E00               	movlw	0
  9877  00E906  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;i2c.c: 595: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  9881  00E908  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9882  00E90C  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9883  00E910  0100               	movlb	0	; () banked
  9884  00E912  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9885  00E914  0D0C               	mullw	12
  9886  00E916  0E00               	movlw	low _calibrationParameters
  9887  00E918  24F3               	addwf	prodl,w,c
  9888  00E91A  0100               	movlb	0	; () banked
  9889  00E91C  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9890  00E91E  0E03               	movlw	high _calibrationParameters
  9891  00E920  20F4               	addwfc	prodh,w,c
  9892  00E922  0100               	movlb	0	; () banked
  9893  00E924  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9894  00E926  0E0C               	movlw	12
  9895  00E928  0100               	movlb	0	; () banked
  9896  00E92A  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9897  00E92C  EC53  F096         	call	_i2c_eeprom_read	;wreg free
  9898                           
  9899                           ;i2c.c: 596: }
  9900  00E930  D043               	goto	l20809
  9901  00E932                     l20789:
  9902                           
  9903                           ;i2c.c: 597: else
  9904                           ;i2c.c: 598: {
  9905                           ;i2c.c: 600: _i2c_eeprom_load_default_calibration(&calibrationParameters[cntr], cntr);
  9906  00E932  0100               	movlb	0	; () banked
  9907  00E934  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9908  00E936  0D0C               	mullw	12
  9909  00E938  0E00               	movlw	low _calibrationParameters
  9910  00E93A  24F3               	addwf	prodl,w,c
  9911  00E93C  0100               	movlb	0	; () banked
  9912  00E93E  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
  9913  00E940  0E03               	movlw	high _calibrationParameters
  9914  00E942  20F4               	addwfc	prodh,w,c
  9915  00E944  0100               	movlb	0	; () banked
  9916  00E946  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
  9917  00E948  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  9918  00E94C  EC53  F054         	call	__i2c_eeprom_load_default_calibration	;wreg free
  9919                           
  9920                           ;i2c.c: 602: switch((calibrationIndex_t) cntr)
  9921  00E950  D01C               	goto	l20807
  9922  00E952                     l20791:
  9923                           
  9924                           ;i2c.c: 605: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  9925  00E952  0E02               	movlw	2
  9926  00E954  EC11  F099         	call	_schedule_eeprom_write_task
  9927                           
  9928                           ;i2c.c: 606: break;
  9929  00E958  D02F               	goto	l20809
  9930  00E95A                     l20793:
  9931                           
  9932                           ;i2c.c: 608: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  9933  00E95A  0E03               	movlw	3
  9934  00E95C  EC11  F099         	call	_schedule_eeprom_write_task
  9935                           
  9936                           ;i2c.c: 609: break;
  9937  00E960  D02B               	goto	l20809
  9938  00E962                     l20795:
  9939                           
  9940                           ;i2c.c: 611: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  9941  00E962  0E04               	movlw	4
  9942  00E964  EC11  F099         	call	_schedule_eeprom_write_task
  9943                           
  9944                           ;i2c.c: 612: break;
  9945  00E968  D027               	goto	l20809
  9946  00E96A                     l20797:
  9947                           
  9948                           ;i2c.c: 614: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  9949  00E96A  0E05               	movlw	5
  9950  00E96C  EC11  F099         	call	_schedule_eeprom_write_task
  9951                           
  9952                           ;i2c.c: 615: break;
  9953  00E970  D023               	goto	l20809
  9954  00E972                     l20799:
  9955                           
  9956                           ;i2c.c: 617: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  9957  00E972  0E06               	movlw	6
  9958  00E974  EC11  F099         	call	_schedule_eeprom_write_task
  9959                           
  9960                           ;i2c.c: 618: break;
  9961  00E978  D01F               	goto	l20809
  9962  00E97A                     l20801:
  9963                           
  9964                           ;i2c.c: 620: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  9965  00E97A  0E07               	movlw	7
  9966  00E97C  EC11  F099         	call	_schedule_eeprom_write_task
  9967                           
  9968                           ;i2c.c: 621: break;
  9969  00E980  D01B               	goto	l20809
  9970  00E982                     l20803:
  9971                           
  9972                           ;i2c.c: 623: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  9973  00E982  0E08               	movlw	8
  9974  00E984  EC11  F099         	call	_schedule_eeprom_write_task
  9975                           
  9976                           ;i2c.c: 625: }
  9977                           
  9978                           ;i2c.c: 624: break;
  9979  00E988  D017               	goto	l20809
  9980  00E98A                     l20807:
  9981  00E98A  0100               	movlb	0	; () banked
  9982  00E98C  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9983                           
  9984                           ; Switch size 1, requested type "space"
  9985                           ; Number of cases is 7, Range of values is 0 to 6
  9986                           ; switch strategies available:
  9987                           ; Name         Instructions Cycles
  9988                           ; simple_byte           22    12 (average)
  9989                           ;	Chosen strategy is simple_byte
  9990  00E98E  0A00               	xorlw	0	; case 0
  9991  00E990  B4D8               	btfsc	status,2,c
  9992  00E992  D7DF               	goto	l20791
  9993  00E994  0A01               	xorlw	1	; case 1
  9994  00E996  B4D8               	btfsc	status,2,c
  9995  00E998  D7E0               	goto	l20793
  9996  00E99A  0A03               	xorlw	3	; case 2
  9997  00E99C  B4D8               	btfsc	status,2,c
  9998  00E99E  D7E1               	goto	l20795
  9999  00E9A0  0A01               	xorlw	1	; case 3
 10000  00E9A2  B4D8               	btfsc	status,2,c
 10001  00E9A4  D7E2               	goto	l20797
 10002  00E9A6  0A07               	xorlw	7	; case 4
 10003  00E9A8  B4D8               	btfsc	status,2,c
 10004  00E9AA  D7E3               	goto	l20799
 10005  00E9AC  0A01               	xorlw	1	; case 5
 10006  00E9AE  B4D8               	btfsc	status,2,c
 10007  00E9B0  D7E4               	goto	l20801
 10008  00E9B2  0A03               	xorlw	3	; case 6
 10009  00E9B4  B4D8               	btfsc	status,2,c
 10010  00E9B6  D7E5               	goto	l20803
 10011  00E9B8                     l20809:
 10012  00E9B8  0100               	movlb	0	; () banked
 10013  00E9BA  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
 10014  00E9BC  D75E               	goto	l20769
 10015  00E9BE                     __end_of_i2c_eeprom_read_calibration:
 10016                           	opt stack 0
 10017                           tblptru	equ	0xFF8
 10018                           tblptrh	equ	0xFF7
 10019                           tblptrl	equ	0xFF6
 10020                           tablat	equ	0xFF5
 10021                           prodh	equ	0xFF4
 10022                           prodl	equ	0xFF3
 10023                           intcon3	equ	0xFF0
 10024                           postinc0	equ	0xFEE
 10025                           wreg	equ	0xFE8
 10026                           postdec1	equ	0xFE5
 10027                           plusw1	equ	0xFE3
 10028                           fsr1h	equ	0xFE2
 10029                           fsr1l	equ	0xFE1
 10030                           postinc2	equ	0xFDE
 10031                           postdec2	equ	0xFDD
 10032                           plusw2	equ	0xFDB
 10033                           fsr2h	equ	0xFDA
 10034                           fsr2l	equ	0xFD9
 10035                           status	equ	0xFD8
 10036                           
 10037 ;; *************** function _i2c_eeprom_read *****************
 10038 ;; Defined at:
 10039 ;;		line 563 in file "i2c.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  address         2   17[BANK0 ] unsigned int 
 10042 ;;  data            2   19[BANK0 ] PTR unsigned char 
 10043 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
 10044 ;;  length          1   21[BANK0 ] unsigned char 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  slave_addres    1   24[BANK0 ] unsigned char 
 10047 ;;  addr            1   23[BANK0 ] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10057 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10058 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10061 ;;Total ram usage:        8 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:   12
 10064 ;; This function calls:
 10065 ;;		__i2c_read
 10066 ;;		__i2c_write
 10067 ;;		_i2c_set_frequency
 10068 ;; This function is called by:
 10069 ;;		_i2c_eeprom_read_calibration
 10070 ;;		_rtcc_read_eeprom
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text35
 10075  012CA6                     __ptext35:
 10076                           	opt stack 0
 10077  012CA6                     _i2c_eeprom_read:
 10078                           	opt stack 15
 10079                           
 10080                           ;i2c.c: 565: uint8_t slave_address;
 10081                           ;i2c.c: 566: uint8_t addr;
 10082                           ;i2c.c: 567: addr = address & 0xFF;
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;incstack = 0
 10086  012CA6  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
 10087                           
 10088                           ;i2c.c: 568: address &= 0b0000011100000000;
 10089  012CAA  0100               	movlb	0	; () banked
 10090  012CAC  0E00               	movlw	0
 10091  012CAE  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
 10092  012CB0  0E07               	movlw	7
 10093  012CB2  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
 10094                           
 10095                           ;i2c.c: 569: address >>= 7;
 10096  012CB4  0E07               	movlw	7
 10097  012CB6  0100               	movlb	0	; () banked
 10098  012CB8  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
 10099  012CBA                     u18065:
 10100  012CBA  90D8               	bcf	status,0,c
 10101  012CBC  0100               	movlb	0	; () banked
 10102  012CBE  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
 10103  012CC0  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
 10104  012CC2  0100               	movlb	0	; () banked
 10105  012CC4  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
 10106  012CC6  D7F9               	goto	u18065
 10107                           
 10108                           ;i2c.c: 570: slave_address = 0b10100000 | address;
 10109  012CC8  0100               	movlb	0	; () banked
 10110  012CCA  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
 10111  012CCC  09A0               	iorlw	160
 10112  012CCE  0100               	movlb	0	; () banked
 10113  012CD0  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;i2c.c: 573: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10117  012CD2  0E02               	movlw	2
 10118  012CD4  ECDC  F093         	call	_i2c_set_frequency
 10119                           
 10120                           ;i2c.c: 575: _i2c_write(slave_address, &addr, 1);
 10121  012CD8  0E77               	movlw	low i2c_eeprom_read@addr
 10122  012CDA  0100               	movlb	0	; () banked
 10123  012CDC  6F65               	movwf	__i2c_write@data& (0+255),b
 10124  012CDE  0E00               	movlw	high i2c_eeprom_read@addr
 10125  012CE0  0100               	movlb	0	; () banked
 10126  012CE2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10127  012CE4  0E01               	movlw	1
 10128  012CE6  0100               	movlb	0	; () banked
 10129  012CE8  6F67               	movwf	__i2c_write@length& (0+255),b
 10130  012CEA  0100               	movlb	0	; () banked
 10131  012CEC  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
 10132  012CEE  EC8C  F098         	call	__i2c_write
 10133                           
 10134                           ;i2c.c: 576: _i2c_read(slave_address, &data[0], length);
 10135  012CF2  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
 10136  012CF6  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
 10137  012CFA  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
 10138  012CFE  0100               	movlb	0	; () banked
 10139  012D00  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
 10140  012D02  EC95  F086         	call	__i2c_read
 10141  012D06  0012               	return		;funcret
 10142  012D08                     __end_of_i2c_eeprom_read:
 10143                           	opt stack 0
 10144                           tblptru	equ	0xFF8
 10145                           tblptrh	equ	0xFF7
 10146                           tblptrl	equ	0xFF6
 10147                           tablat	equ	0xFF5
 10148                           prodh	equ	0xFF4
 10149                           prodl	equ	0xFF3
 10150                           intcon3	equ	0xFF0
 10151                           postinc0	equ	0xFEE
 10152                           wreg	equ	0xFE8
 10153                           postdec1	equ	0xFE5
 10154                           plusw1	equ	0xFE3
 10155                           fsr1h	equ	0xFE2
 10156                           fsr1l	equ	0xFE1
 10157                           postinc2	equ	0xFDE
 10158                           postdec2	equ	0xFDD
 10159                           plusw2	equ	0xFDB
 10160                           fsr2h	equ	0xFDA
 10161                           fsr2l	equ	0xFD9
 10162                           status	equ	0xFD8
 10163                           
 10164 ;; *************** function __i2c_read *****************
 10165 ;; Defined at:
 10166 ;;		line 167 in file "i2c.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;  slave_addres    1    wreg     unsigned char 
 10169 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10170 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
 10171 ;;  length          1    7[BANK0 ] unsigned char 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  slave_addres    1   15[BANK0 ] unsigned char 
 10174 ;;  cntr            1   16[BANK0 ] unsigned char 
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10184 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10186 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10187 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10188 ;;Total ram usage:       12 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:   11
 10191 ;; This function calls:
 10192 ;;		__i2c_acknowledge
 10193 ;;		__i2c_get
 10194 ;;		__i2c_not_acknowledge
 10195 ;;		__i2c_send
 10196 ;;		__i2c_start
 10197 ;;		__i2c_stop
 10198 ;;		__i2c_wait_idle
 10199 ;; This function is called by:
 10200 ;;		_i2c_eeprom_read
 10201 ;;		_i2c_eeprom_readByte
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text36
 10206  010D2A                     __ptext36:
 10207                           	opt stack 0
 10208  010D2A                     __i2c_read:
 10209                           	opt stack 15
 10210                           
 10211                           ;incstack = 0
 10212                           ;__i2c_read@slave_address stored from wreg
 10213  010D2A  0100               	movlb	0	; () banked
 10214  010D2C  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
 10215                           
 10216                           ;i2c.c: 169: uint8_t cntr;
 10217                           ;i2c.c: 171: _i2c_wait_idle();
 10218  010D2E  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 10219                           
 10220                           ;i2c.c: 172: _i2c_start();
 10221  010D32  EC66  F0A1         	call	__i2c_start	;wreg free
 10222                           
 10223                           ;i2c.c: 173: _i2c_wait_idle();
 10224  010D36  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 10225                           
 10226                           ;i2c.c: 174: _i2c_send(slave_address | 0x01);
 10227  010D3A  0100               	movlb	0	; () banked
 10228  010D3C  516F               	movf	__i2c_read@slave_address& (0+255),w,b
 10229  010D3E  0901               	iorlw	1
 10230  010D40  EC5D  F0A1         	call	__i2c_send
 10231                           
 10232                           ;i2c.c: 175: _i2c_wait_idle();
 10233  010D44  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 10234                           
 10235                           ;i2c.c: 185: for(cntr=0; cntr<length-1; ++cntr)
 10236  010D48  0E00               	movlw	0
 10237  010D4A  0100               	movlb	0	; () banked
 10238  010D4C  6F70               	movwf	__i2c_read@cntr& (0+255),b
 10239  010D4E  D012               	goto	l18757
 10240  010D50                     l18751:
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;i2c.c: 186: {
 10244                           ;i2c.c: 187: data[cntr] = _i2c_get();
 10245  010D50  0100               	movlb	0	; () banked
 10246  010D52  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10247  010D54  0D01               	mullw	1
 10248  010D56  50F3               	movf	prodl,w,c
 10249  010D58  0100               	movlb	0	; () banked
 10250  010D5A  2565               	addwf	__i2c_read@data& (0+255),w,b
 10251  010D5C  6ED9               	movwf	fsr2l,c
 10252  010D5E  50F4               	movf	prodh,w,c
 10253  010D60  0100               	movlb	0	; () banked
 10254  010D62  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10255  010D64  6EDA               	movwf	fsr2h,c
 10256  010D66  EC4E  F0A1         	call	__i2c_get	;wreg free
 10257  010D6A  6EDF               	movwf	indf2,c
 10258                           
 10259                           ;i2c.c: 188: _i2c_acknowledge();
 10260  010D6C  EC53  F0A1         	call	__i2c_acknowledge	;wreg free
 10261  010D70  0100               	movlb	0	; () banked
 10262  010D72  2B70               	incf	__i2c_read@cntr& (0+255),f,b
 10263  010D74                     l18757:
 10264                           
 10265                           ; BSR set to: 0
 10266  010D74  0EFF               	movlw	255
 10267  010D76  0100               	movlb	0	; () banked
 10268  010D78  6F68               	movwf	??__i2c_read& (0+255),b
 10269  010D7A  0EFF               	movlw	255
 10270  010D7C  0100               	movlb	0	; () banked
 10271  010D7E  6F69               	movwf	(??__i2c_read+1)& (0+255),b
 10272  010D80  0100               	movlb	0	; () banked
 10273  010D82  5167               	movf	__i2c_read@length& (0+255),w,b
 10274  010D84  0100               	movlb	0	; () banked
 10275  010D86  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
 10276  010D88  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
 10277  010D8A  0100               	movlb	0	; () banked
 10278  010D8C  5168               	movf	??__i2c_read& (0+255),w,b
 10279  010D8E  0100               	movlb	0	; () banked
 10280  010D90  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
 10281  010D92  0100               	movlb	0	; () banked
 10282  010D94  5169               	movf	(??__i2c_read+1)& (0+255),w,b
 10283  010D96  0100               	movlb	0	; () banked
 10284  010D98  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
 10285  010D9A  0100               	movlb	0	; () banked
 10286  010D9C  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10287  010D9E  0100               	movlb	0	; () banked
 10288  010DA0  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
 10289  010DA2  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
 10290  010DA4  0100               	movlb	0	; () banked
 10291  010DA6  516A               	movf	(??__i2c_read+2)& (0+255),w,b
 10292  010DA8  0100               	movlb	0	; () banked
 10293  010DAA  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
 10294  010DAC  0100               	movlb	0	; () banked
 10295  010DAE  516D               	movf	(??__i2c_read+5)& (0+255),w,b
 10296  010DB0  0A80               	xorlw	128
 10297  010DB2  0100               	movlb	0	; () banked
 10298  010DB4  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
 10299  010DB6  0100               	movlb	0	; () banked
 10300  010DB8  516B               	movf	(??__i2c_read+3)& (0+255),w,b
 10301  010DBA  0A80               	xorlw	128
 10302  010DBC  0100               	movlb	0	; () banked
 10303  010DBE  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
 10304  010DC0  A0D8               	btfss	status,0,c
 10305  010DC2  D7C6               	goto	l18751
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;i2c.c: 189: }
 10309                           ;i2c.c: 190: data[cntr] = _i2c_get();
 10310                           
 10311                           ; BSR set to: 0
 10312  010DC4  0100               	movlb	0	; () banked
 10313  010DC6  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10314  010DC8  0D01               	mullw	1
 10315  010DCA  50F3               	movf	prodl,w,c
 10316  010DCC  0100               	movlb	0	; () banked
 10317  010DCE  2565               	addwf	__i2c_read@data& (0+255),w,b
 10318  010DD0  6ED9               	movwf	fsr2l,c
 10319  010DD2  50F4               	movf	prodh,w,c
 10320  010DD4  0100               	movlb	0	; () banked
 10321  010DD6  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10322  010DD8  6EDA               	movwf	fsr2h,c
 10323  010DDA  EC4E  F0A1         	call	__i2c_get	;wreg free
 10324  010DDE  6EDF               	movwf	indf2,c
 10325                           
 10326                           ;i2c.c: 191: _i2c_not_acknowledge();
 10327  010DE0  EC49  F0A1         	call	__i2c_not_acknowledge	;wreg free
 10328                           
 10329                           ;i2c.c: 193: _i2c_stop();
 10330  010DE4  EC62  F0A1         	call	__i2c_stop	;wreg free
 10331  010DE8  0012               	return		;funcret
 10332  010DEA                     __end_of__i2c_read:
 10333                           	opt stack 0
 10334                           tblptru	equ	0xFF8
 10335                           tblptrh	equ	0xFF7
 10336                           tblptrl	equ	0xFF6
 10337                           tablat	equ	0xFF5
 10338                           prodh	equ	0xFF4
 10339                           prodl	equ	0xFF3
 10340                           intcon3	equ	0xFF0
 10341                           postinc0	equ	0xFEE
 10342                           wreg	equ	0xFE8
 10343                           postdec1	equ	0xFE5
 10344                           plusw1	equ	0xFE3
 10345                           fsr1h	equ	0xFE2
 10346                           fsr1l	equ	0xFE1
 10347                           indf2	equ	0xFDF
 10348                           postinc2	equ	0xFDE
 10349                           postdec2	equ	0xFDD
 10350                           plusw2	equ	0xFDB
 10351                           fsr2h	equ	0xFDA
 10352                           fsr2l	equ	0xFD9
 10353                           status	equ	0xFD8
 10354                           
 10355 ;; *************** function __i2c_eeprom_load_default_calibration *****************
 10356 ;; Defined at:
 10357 ;;		line 645 in file "i2c.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;  buffer          2    0[BANK0 ] PTR struct .
 10360 ;;		 -> calibrationParameters(84), 
 10361 ;;  index           1    2[BANK0 ] enum E8142
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      void 
 10366 ;; Registers used:
 10367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10373 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;Total ram usage:        3 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; Hardware stack levels required when called:   10
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_i2c_eeprom_read_calibration
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text37
 10388  00A8A6                     __ptext37:
 10389                           	opt stack 0
 10390  00A8A6                     __i2c_eeprom_load_default_calibration:
 10391                           	opt stack 18
 10392                           
 10393                           ;i2c.c: 647: switch(index)
 10394                           
 10395                           ;incstack = 0
 10396  00A8A6  D1F1               	goto	l19653
 10397  00A8A8                     l19553:
 10398                           
 10399                           ;i2c.c: 650: (*buffer).NeutralOffset = 0;
 10400  00A8A8  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10401  00A8AC  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10402  00A8B0  0E00               	movlw	0
 10403  00A8B2  6EDE               	movwf	postinc2,c
 10404  00A8B4  0E00               	movlw	0
 10405  00A8B6  6EDD               	movwf	postdec2,c
 10406                           
 10407                           ;i2c.c: 651: (*buffer).NeutralMultiplier = 11;
 10408  00A8B8  0100               	movlb	0	; () banked
 10409  00A8BA  EE20 F002          	lfsr	2,2
 10410  00A8BE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10411  00A8C0  26D9               	addwf	fsr2l,f,c
 10412  00A8C2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10413  00A8C4  22DA               	addwfc	fsr2h,f,c
 10414  00A8C6  0E0B               	movlw	11
 10415  00A8C8  6EDE               	movwf	postinc2,c
 10416  00A8CA  0E00               	movlw	0
 10417  00A8CC  6EDD               	movwf	postdec2,c
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;i2c.c: 652: (*buffer).NeutralShift = 4;
 10421  00A8CE  0100               	movlb	0	; () banked
 10422  00A8D0  EE20 F004          	lfsr	2,4
 10423  00A8D4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10424  00A8D6  26D9               	addwf	fsr2l,f,c
 10425  00A8D8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10426  00A8DA  22DA               	addwfc	fsr2h,f,c
 10427  00A8DC  0E04               	movlw	4
 10428  00A8DE  6EDF               	movwf	indf2,c
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;i2c.c: 653: (*buffer).Offset = 0;
 10432  00A8E0  0100               	movlb	0	; () banked
 10433  00A8E2  EE20 F005          	lfsr	2,5
 10434  00A8E6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10435  00A8E8  26D9               	addwf	fsr2l,f,c
 10436  00A8EA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10437  00A8EC  22DA               	addwfc	fsr2h,f,c
 10438  00A8EE  0E00               	movlw	0
 10439  00A8F0  6EDE               	movwf	postinc2,c
 10440  00A8F2  0E00               	movlw	0
 10441  00A8F4  6EDD               	movwf	postdec2,c
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;i2c.c: 654: (*buffer).Multiplier = 11;
 10445  00A8F6  0100               	movlb	0	; () banked
 10446  00A8F8  EE20 F007          	lfsr	2,7
 10447  00A8FC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10448  00A8FE  26D9               	addwf	fsr2l,f,c
 10449  00A900  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10450  00A902  22DA               	addwfc	fsr2h,f,c
 10451  00A904  0E0B               	movlw	11
 10452  00A906  6EDE               	movwf	postinc2,c
 10453  00A908  0E00               	movlw	0
 10454  00A90A  6EDD               	movwf	postdec2,c
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;i2c.c: 655: (*buffer).Shift = 4;
 10458  00A90C  0100               	movlb	0	; () banked
 10459  00A90E  EE20 F009          	lfsr	2,9
 10460  00A912  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10461  00A914  26D9               	addwf	fsr2l,f,c
 10462  00A916  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10463  00A918  22DA               	addwfc	fsr2h,f,c
 10464  00A91A  0E04               	movlw	4
 10465  00A91C  6EDF               	movwf	indf2,c
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;i2c.c: 656: (*buffer).AutoCalibration = 0;
 10469  00A91E  0100               	movlb	0	; () banked
 10470  00A920  EE20 F00A          	lfsr	2,10
 10471  00A924  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10472  00A926  26D9               	addwf	fsr2l,f,c
 10473  00A928  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10474  00A92A  22DA               	addwfc	fsr2h,f,c
 10475  00A92C  0E00               	movlw	0
 10476  00A92E  6EDE               	movwf	postinc2,c
 10477  00A930  0E00               	movlw	0
 10478  00A932  6EDD               	movwf	postdec2,c
 10479                           
 10480                           ;i2c.c: 657: break;
 10481  00A934  0012               	return	
 10482  00A936                     l19567:
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;i2c.c: 659: (*buffer).NeutralOffset = 0;
 10486  00A936  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10487  00A93A  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10488  00A93E  0E00               	movlw	0
 10489  00A940  6EDE               	movwf	postinc2,c
 10490  00A942  0E00               	movlw	0
 10491  00A944  6EDD               	movwf	postdec2,c
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;i2c.c: 660: (*buffer).NeutralMultiplier = 17;
 10495  00A946  0100               	movlb	0	; () banked
 10496  00A948  EE20 F002          	lfsr	2,2
 10497  00A94C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10498  00A94E  26D9               	addwf	fsr2l,f,c
 10499  00A950  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10500  00A952  22DA               	addwfc	fsr2h,f,c
 10501  00A954  0E11               	movlw	17
 10502  00A956  6EDE               	movwf	postinc2,c
 10503  00A958  0E00               	movlw	0
 10504  00A95A  6EDD               	movwf	postdec2,c
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;i2c.c: 661: (*buffer).NeutralShift = 5;
 10508  00A95C  0100               	movlb	0	; () banked
 10509  00A95E  EE20 F004          	lfsr	2,4
 10510  00A962  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10511  00A964  26D9               	addwf	fsr2l,f,c
 10512  00A966  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10513  00A968  22DA               	addwfc	fsr2h,f,c
 10514  00A96A  0E05               	movlw	5
 10515  00A96C  6EDF               	movwf	indf2,c
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;i2c.c: 662: (*buffer).Offset = 0;
 10519  00A96E  0100               	movlb	0	; () banked
 10520  00A970  EE20 F005          	lfsr	2,5
 10521  00A974  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10522  00A976  26D9               	addwf	fsr2l,f,c
 10523  00A978  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10524  00A97A  22DA               	addwfc	fsr2h,f,c
 10525  00A97C  0E00               	movlw	0
 10526  00A97E  6EDE               	movwf	postinc2,c
 10527  00A980  0E00               	movlw	0
 10528  00A982  6EDD               	movwf	postdec2,c
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;i2c.c: 663: (*buffer).Multiplier = 17;
 10532  00A984  0100               	movlb	0	; () banked
 10533  00A986  EE20 F007          	lfsr	2,7
 10534  00A98A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10535  00A98C  26D9               	addwf	fsr2l,f,c
 10536  00A98E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10537  00A990  22DA               	addwfc	fsr2h,f,c
 10538  00A992  0E11               	movlw	17
 10539  00A994  6EDE               	movwf	postinc2,c
 10540  00A996  0E00               	movlw	0
 10541  00A998  6EDD               	movwf	postdec2,c
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;i2c.c: 664: (*buffer).Shift = 5;
 10545  00A99A  0100               	movlb	0	; () banked
 10546  00A99C  EE20 F009          	lfsr	2,9
 10547  00A9A0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10548  00A9A2  26D9               	addwf	fsr2l,f,c
 10549  00A9A4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10550  00A9A6  22DA               	addwfc	fsr2h,f,c
 10551  00A9A8  0E05               	movlw	5
 10552  00A9AA  6EDF               	movwf	indf2,c
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;i2c.c: 665: (*buffer).AutoCalibration = 0;
 10556  00A9AC  0100               	movlb	0	; () banked
 10557  00A9AE  EE20 F00A          	lfsr	2,10
 10558  00A9B2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10559  00A9B4  26D9               	addwf	fsr2l,f,c
 10560  00A9B6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10561  00A9B8  22DA               	addwfc	fsr2h,f,c
 10562  00A9BA  0E00               	movlw	0
 10563  00A9BC  6EDE               	movwf	postinc2,c
 10564  00A9BE  0E00               	movlw	0
 10565  00A9C0  6EDD               	movwf	postdec2,c
 10566                           
 10567                           ;i2c.c: 666: break;
 10568  00A9C2  0012               	return	
 10569  00A9C4                     l19581:
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;i2c.c: 668: (*buffer).NeutralOffset = 0;
 10573  00A9C4  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10574  00A9C8  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10575  00A9CC  0E00               	movlw	0
 10576  00A9CE  6EDE               	movwf	postinc2,c
 10577  00A9D0  0E00               	movlw	0
 10578  00A9D2  6EDD               	movwf	postdec2,c
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;i2c.c: 669: (*buffer).NeutralMultiplier = 5851;
 10582  00A9D4  0100               	movlb	0	; () banked
 10583  00A9D6  EE20 F002          	lfsr	2,2
 10584  00A9DA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10585  00A9DC  26D9               	addwf	fsr2l,f,c
 10586  00A9DE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10587  00A9E0  22DA               	addwfc	fsr2h,f,c
 10588  00A9E2  0EDB               	movlw	219
 10589  00A9E4  6EDE               	movwf	postinc2,c
 10590  00A9E6  0E16               	movlw	22
 10591  00A9E8  6EDD               	movwf	postdec2,c
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;i2c.c: 670: (*buffer).NeutralShift = 15;
 10595  00A9EA  0100               	movlb	0	; () banked
 10596  00A9EC  EE20 F004          	lfsr	2,4
 10597  00A9F0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10598  00A9F2  26D9               	addwf	fsr2l,f,c
 10599  00A9F4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10600  00A9F6  22DA               	addwfc	fsr2h,f,c
 10601  00A9F8  0E0F               	movlw	15
 10602  00A9FA  6EDF               	movwf	indf2,c
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;i2c.c: 671: (*buffer).Offset = 0;
 10606  00A9FC  0100               	movlb	0	; () banked
 10607  00A9FE  EE20 F005          	lfsr	2,5
 10608  00AA02  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10609  00AA04  26D9               	addwf	fsr2l,f,c
 10610  00AA06  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10611  00AA08  22DA               	addwfc	fsr2h,f,c
 10612  00AA0A  0E00               	movlw	0
 10613  00AA0C  6EDE               	movwf	postinc2,c
 10614  00AA0E  0E00               	movlw	0
 10615  00AA10  6EDD               	movwf	postdec2,c
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;i2c.c: 672: (*buffer).Multiplier = 5851;
 10619  00AA12  0100               	movlb	0	; () banked
 10620  00AA14  EE20 F007          	lfsr	2,7
 10621  00AA18  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10622  00AA1A  26D9               	addwf	fsr2l,f,c
 10623  00AA1C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10624  00AA1E  22DA               	addwfc	fsr2h,f,c
 10625  00AA20  0EDB               	movlw	219
 10626  00AA22  6EDE               	movwf	postinc2,c
 10627  00AA24  0E16               	movlw	22
 10628  00AA26  6EDD               	movwf	postdec2,c
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;i2c.c: 673: (*buffer).Shift = 15;
 10632  00AA28  0100               	movlb	0	; () banked
 10633  00AA2A  EE20 F009          	lfsr	2,9
 10634  00AA2E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10635  00AA30  26D9               	addwf	fsr2l,f,c
 10636  00AA32  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10637  00AA34  22DA               	addwfc	fsr2h,f,c
 10638  00AA36  0E0F               	movlw	15
 10639  00AA38  6EDF               	movwf	indf2,c
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;i2c.c: 674: (*buffer).AutoCalibration = 0;
 10643  00AA3A  0100               	movlb	0	; () banked
 10644  00AA3C  EE20 F00A          	lfsr	2,10
 10645  00AA40  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10646  00AA42  26D9               	addwf	fsr2l,f,c
 10647  00AA44  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10648  00AA46  22DA               	addwfc	fsr2h,f,c
 10649  00AA48  0E00               	movlw	0
 10650  00AA4A  6EDE               	movwf	postinc2,c
 10651  00AA4C  0E00               	movlw	0
 10652  00AA4E  6EDD               	movwf	postdec2,c
 10653                           
 10654                           ;i2c.c: 675: break;
 10655  00AA50  0012               	return	
 10656  00AA52                     l19595:
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;i2c.c: 677: (*buffer).NeutralOffset = 0;
 10660  00AA52  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10661  00AA56  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10662  00AA5A  0E00               	movlw	0
 10663  00AA5C  6EDE               	movwf	postinc2,c
 10664  00AA5E  0E00               	movlw	0
 10665  00AA60  6EDD               	movwf	postdec2,c
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;i2c.c: 678: (*buffer).NeutralMultiplier = 5851;
 10669  00AA62  0100               	movlb	0	; () banked
 10670  00AA64  EE20 F002          	lfsr	2,2
 10671  00AA68  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10672  00AA6A  26D9               	addwf	fsr2l,f,c
 10673  00AA6C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10674  00AA6E  22DA               	addwfc	fsr2h,f,c
 10675  00AA70  0EDB               	movlw	219
 10676  00AA72  6EDE               	movwf	postinc2,c
 10677  00AA74  0E16               	movlw	22
 10678  00AA76  6EDD               	movwf	postdec2,c
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;i2c.c: 679: (*buffer).NeutralShift = 15;
 10682  00AA78  0100               	movlb	0	; () banked
 10683  00AA7A  EE20 F004          	lfsr	2,4
 10684  00AA7E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10685  00AA80  26D9               	addwf	fsr2l,f,c
 10686  00AA82  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10687  00AA84  22DA               	addwfc	fsr2h,f,c
 10688  00AA86  0E0F               	movlw	15
 10689  00AA88  6EDF               	movwf	indf2,c
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;i2c.c: 680: (*buffer).Offset = 0;
 10693  00AA8A  0100               	movlb	0	; () banked
 10694  00AA8C  EE20 F005          	lfsr	2,5
 10695  00AA90  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10696  00AA92  26D9               	addwf	fsr2l,f,c
 10697  00AA94  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10698  00AA96  22DA               	addwfc	fsr2h,f,c
 10699  00AA98  0E00               	movlw	0
 10700  00AA9A  6EDE               	movwf	postinc2,c
 10701  00AA9C  0E00               	movlw	0
 10702  00AA9E  6EDD               	movwf	postdec2,c
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;i2c.c: 681: (*buffer).Multiplier = 5851;
 10706  00AAA0  0100               	movlb	0	; () banked
 10707  00AAA2  EE20 F007          	lfsr	2,7
 10708  00AAA6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10709  00AAA8  26D9               	addwf	fsr2l,f,c
 10710  00AAAA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10711  00AAAC  22DA               	addwfc	fsr2h,f,c
 10712  00AAAE  0EDB               	movlw	219
 10713  00AAB0  6EDE               	movwf	postinc2,c
 10714  00AAB2  0E16               	movlw	22
 10715  00AAB4  6EDD               	movwf	postdec2,c
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;i2c.c: 682: (*buffer).Shift = 15;
 10719  00AAB6  0100               	movlb	0	; () banked
 10720  00AAB8  EE20 F009          	lfsr	2,9
 10721  00AABC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10722  00AABE  26D9               	addwf	fsr2l,f,c
 10723  00AAC0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10724  00AAC2  22DA               	addwfc	fsr2h,f,c
 10725  00AAC4  0E0F               	movlw	15
 10726  00AAC6  6EDF               	movwf	indf2,c
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;i2c.c: 683: (*buffer).AutoCalibration = 0;
 10730  00AAC8  0100               	movlb	0	; () banked
 10731  00AACA  EE20 F00A          	lfsr	2,10
 10732  00AACE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10733  00AAD0  26D9               	addwf	fsr2l,f,c
 10734  00AAD2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10735  00AAD4  22DA               	addwfc	fsr2h,f,c
 10736  00AAD6  0E00               	movlw	0
 10737  00AAD8  6EDE               	movwf	postinc2,c
 10738  00AADA  0E00               	movlw	0
 10739  00AADC  6EDD               	movwf	postdec2,c
 10740                           
 10741                           ;i2c.c: 684: break;
 10742  00AADE  0012               	return	
 10743  00AAE0                     l19609:
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;i2c.c: 686: (*buffer).NeutralOffset = -13769;
 10747  00AAE0  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10748  00AAE4  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10749  00AAE8  0E37               	movlw	55
 10750  00AAEA  6EDE               	movwf	postinc2,c
 10751  00AAEC  0ECA               	movlw	202
 10752  00AAEE  6EDD               	movwf	postdec2,c
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;i2c.c: 687: (*buffer).NeutralMultiplier = -11479;
 10756  00AAF0  0100               	movlb	0	; () banked
 10757  00AAF2  EE20 F002          	lfsr	2,2
 10758  00AAF6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10759  00AAF8  26D9               	addwf	fsr2l,f,c
 10760  00AAFA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10761  00AAFC  22DA               	addwfc	fsr2h,f,c
 10762  00AAFE  0E29               	movlw	41
 10763  00AB00  6EDE               	movwf	postinc2,c
 10764  00AB02  0ED3               	movlw	211
 10765  00AB04  6EDD               	movwf	postdec2,c
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;i2c.c: 688: (*buffer).NeutralShift = 13;
 10769  00AB06  0100               	movlb	0	; () banked
 10770  00AB08  EE20 F004          	lfsr	2,4
 10771  00AB0C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10772  00AB0E  26D9               	addwf	fsr2l,f,c
 10773  00AB10  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10774  00AB12  22DA               	addwfc	fsr2h,f,c
 10775  00AB14  0E0D               	movlw	13
 10776  00AB16  6EDF               	movwf	indf2,c
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;i2c.c: 689: (*buffer).Offset = -13769;
 10780  00AB18  0100               	movlb	0	; () banked
 10781  00AB1A  EE20 F005          	lfsr	2,5
 10782  00AB1E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10783  00AB20  26D9               	addwf	fsr2l,f,c
 10784  00AB22  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10785  00AB24  22DA               	addwfc	fsr2h,f,c
 10786  00AB26  0E37               	movlw	55
 10787  00AB28  6EDE               	movwf	postinc2,c
 10788  00AB2A  0ECA               	movlw	202
 10789  00AB2C  6EDD               	movwf	postdec2,c
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;i2c.c: 690: (*buffer).Multiplier = -11479;
 10793  00AB2E  0100               	movlb	0	; () banked
 10794  00AB30  EE20 F007          	lfsr	2,7
 10795  00AB34  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10796  00AB36  26D9               	addwf	fsr2l,f,c
 10797  00AB38  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10798  00AB3A  22DA               	addwfc	fsr2h,f,c
 10799  00AB3C  0E29               	movlw	41
 10800  00AB3E  6EDE               	movwf	postinc2,c
 10801  00AB40  0ED3               	movlw	211
 10802  00AB42  6EDD               	movwf	postdec2,c
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;i2c.c: 691: (*buffer).Shift = 13;
 10806  00AB44  0100               	movlb	0	; () banked
 10807  00AB46  EE20 F009          	lfsr	2,9
 10808  00AB4A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10809  00AB4C  26D9               	addwf	fsr2l,f,c
 10810  00AB4E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10811  00AB50  22DA               	addwfc	fsr2h,f,c
 10812  00AB52  0E0D               	movlw	13
 10813  00AB54  6EDF               	movwf	indf2,c
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;i2c.c: 692: (*buffer).AutoCalibration = 0;
 10817  00AB56  0100               	movlb	0	; () banked
 10818  00AB58  EE20 F00A          	lfsr	2,10
 10819  00AB5C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10820  00AB5E  26D9               	addwf	fsr2l,f,c
 10821  00AB60  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10822  00AB62  22DA               	addwfc	fsr2h,f,c
 10823  00AB64  0E00               	movlw	0
 10824  00AB66  6EDE               	movwf	postinc2,c
 10825  00AB68  0E00               	movlw	0
 10826  00AB6A  6EDD               	movwf	postdec2,c
 10827                           
 10828                           ;i2c.c: 693: break;
 10829  00AB6C  0012               	return	
 10830  00AB6E                     l19623:
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;i2c.c: 695: (*buffer).NeutralOffset = -13769;
 10834  00AB6E  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10835  00AB72  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10836  00AB76  0E37               	movlw	55
 10837  00AB78  6EDE               	movwf	postinc2,c
 10838  00AB7A  0ECA               	movlw	202
 10839  00AB7C  6EDD               	movwf	postdec2,c
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;i2c.c: 696: (*buffer).NeutralMultiplier = -11479;
 10843  00AB7E  0100               	movlb	0	; () banked
 10844  00AB80  EE20 F002          	lfsr	2,2
 10845  00AB84  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10846  00AB86  26D9               	addwf	fsr2l,f,c
 10847  00AB88  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10848  00AB8A  22DA               	addwfc	fsr2h,f,c
 10849  00AB8C  0E29               	movlw	41
 10850  00AB8E  6EDE               	movwf	postinc2,c
 10851  00AB90  0ED3               	movlw	211
 10852  00AB92  6EDD               	movwf	postdec2,c
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;i2c.c: 697: (*buffer).NeutralShift = 13;
 10856  00AB94  0100               	movlb	0	; () banked
 10857  00AB96  EE20 F004          	lfsr	2,4
 10858  00AB9A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10859  00AB9C  26D9               	addwf	fsr2l,f,c
 10860  00AB9E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10861  00ABA0  22DA               	addwfc	fsr2h,f,c
 10862  00ABA2  0E0D               	movlw	13
 10863  00ABA4  6EDF               	movwf	indf2,c
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;i2c.c: 698: (*buffer).Offset = -13769;
 10867  00ABA6  0100               	movlb	0	; () banked
 10868  00ABA8  EE20 F005          	lfsr	2,5
 10869  00ABAC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10870  00ABAE  26D9               	addwf	fsr2l,f,c
 10871  00ABB0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10872  00ABB2  22DA               	addwfc	fsr2h,f,c
 10873  00ABB4  0E37               	movlw	55
 10874  00ABB6  6EDE               	movwf	postinc2,c
 10875  00ABB8  0ECA               	movlw	202
 10876  00ABBA  6EDD               	movwf	postdec2,c
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;i2c.c: 699: (*buffer).Multiplier = -11479;
 10880  00ABBC  0100               	movlb	0	; () banked
 10881  00ABBE  EE20 F007          	lfsr	2,7
 10882  00ABC2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10883  00ABC4  26D9               	addwf	fsr2l,f,c
 10884  00ABC6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10885  00ABC8  22DA               	addwfc	fsr2h,f,c
 10886  00ABCA  0E29               	movlw	41
 10887  00ABCC  6EDE               	movwf	postinc2,c
 10888  00ABCE  0ED3               	movlw	211
 10889  00ABD0  6EDD               	movwf	postdec2,c
 10890                           
 10891                           ; BSR set to: 0
 10892                           ;i2c.c: 700: (*buffer).Shift = 13;
 10893  00ABD2  0100               	movlb	0	; () banked
 10894  00ABD4  EE20 F009          	lfsr	2,9
 10895  00ABD8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10896  00ABDA  26D9               	addwf	fsr2l,f,c
 10897  00ABDC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10898  00ABDE  22DA               	addwfc	fsr2h,f,c
 10899  00ABE0  0E0D               	movlw	13
 10900  00ABE2  6EDF               	movwf	indf2,c
 10901                           
 10902                           ; BSR set to: 0
 10903                           ;i2c.c: 701: (*buffer).AutoCalibration = 0;
 10904  00ABE4  0100               	movlb	0	; () banked
 10905  00ABE6  EE20 F00A          	lfsr	2,10
 10906  00ABEA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10907  00ABEC  26D9               	addwf	fsr2l,f,c
 10908  00ABEE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10909  00ABF0  22DA               	addwfc	fsr2h,f,c
 10910  00ABF2  0E00               	movlw	0
 10911  00ABF4  6EDE               	movwf	postinc2,c
 10912  00ABF6  0E00               	movlw	0
 10913  00ABF8  6EDD               	movwf	postdec2,c
 10914                           
 10915                           ;i2c.c: 702: break;
 10916  00ABFA  0012               	return	
 10917  00ABFC                     l19637:
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;i2c.c: 704: (*buffer).NeutralOffset = -13769;
 10921  00ABFC  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10922  00AC00  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10923  00AC04  0E37               	movlw	55
 10924  00AC06  6EDE               	movwf	postinc2,c
 10925  00AC08  0ECA               	movlw	202
 10926  00AC0A  6EDD               	movwf	postdec2,c
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;i2c.c: 705: (*buffer).NeutralMultiplier = -11479;
 10930  00AC0C  0100               	movlb	0	; () banked
 10931  00AC0E  EE20 F002          	lfsr	2,2
 10932  00AC12  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10933  00AC14  26D9               	addwf	fsr2l,f,c
 10934  00AC16  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10935  00AC18  22DA               	addwfc	fsr2h,f,c
 10936  00AC1A  0E29               	movlw	41
 10937  00AC1C  6EDE               	movwf	postinc2,c
 10938  00AC1E  0ED3               	movlw	211
 10939  00AC20  6EDD               	movwf	postdec2,c
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;i2c.c: 706: (*buffer).NeutralShift = 13;
 10943  00AC22  0100               	movlb	0	; () banked
 10944  00AC24  EE20 F004          	lfsr	2,4
 10945  00AC28  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10946  00AC2A  26D9               	addwf	fsr2l,f,c
 10947  00AC2C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10948  00AC2E  22DA               	addwfc	fsr2h,f,c
 10949  00AC30  0E0D               	movlw	13
 10950  00AC32  6EDF               	movwf	indf2,c
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;i2c.c: 707: (*buffer).Offset = -13769;
 10954  00AC34  0100               	movlb	0	; () banked
 10955  00AC36  EE20 F005          	lfsr	2,5
 10956  00AC3A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10957  00AC3C  26D9               	addwf	fsr2l,f,c
 10958  00AC3E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10959  00AC40  22DA               	addwfc	fsr2h,f,c
 10960  00AC42  0E37               	movlw	55
 10961  00AC44  6EDE               	movwf	postinc2,c
 10962  00AC46  0ECA               	movlw	202
 10963  00AC48  6EDD               	movwf	postdec2,c
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;i2c.c: 708: (*buffer).Multiplier = -11479;
 10967  00AC4A  0100               	movlb	0	; () banked
 10968  00AC4C  EE20 F007          	lfsr	2,7
 10969  00AC50  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10970  00AC52  26D9               	addwf	fsr2l,f,c
 10971  00AC54  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10972  00AC56  22DA               	addwfc	fsr2h,f,c
 10973  00AC58  0E29               	movlw	41
 10974  00AC5A  6EDE               	movwf	postinc2,c
 10975  00AC5C  0ED3               	movlw	211
 10976  00AC5E  6EDD               	movwf	postdec2,c
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;i2c.c: 709: (*buffer).Shift = 13;
 10980  00AC60  0100               	movlb	0	; () banked
 10981  00AC62  EE20 F009          	lfsr	2,9
 10982  00AC66  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10983  00AC68  26D9               	addwf	fsr2l,f,c
 10984  00AC6A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10985  00AC6C  22DA               	addwfc	fsr2h,f,c
 10986  00AC6E  0E0D               	movlw	13
 10987  00AC70  6EDF               	movwf	indf2,c
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;i2c.c: 710: (*buffer).AutoCalibration = 0;
 10991  00AC72  0100               	movlb	0	; () banked
 10992  00AC74  EE20 F00A          	lfsr	2,10
 10993  00AC78  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10994  00AC7A  26D9               	addwf	fsr2l,f,c
 10995  00AC7C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10996  00AC7E  22DA               	addwfc	fsr2h,f,c
 10997  00AC80  0E00               	movlw	0
 10998  00AC82  6EDE               	movwf	postinc2,c
 10999  00AC84  0E00               	movlw	0
 11000  00AC86  6EDD               	movwf	postdec2,c
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;i2c.c: 712: }
 11004                           
 11005                           ;i2c.c: 711: break;
 11006  00AC88  0012               	return	
 11007  00AC8A                     l19653:
 11008  00AC8A  0100               	movlb	0	; () banked
 11009  00AC8C  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 11010                           
 11011                           ; Switch size 1, requested type "space"
 11012                           ; Number of cases is 7, Range of values is 0 to 6
 11013                           ; switch strategies available:
 11014                           ; Name         Instructions Cycles
 11015                           ; simple_byte           22    12 (average)
 11016                           ;	Chosen strategy is simple_byte
 11017  00AC8E  0A00               	xorlw	0	; case 0
 11018  00AC90  B4D8               	btfsc	status,2,c
 11019  00AC92  D60A               	goto	l19553
 11020  00AC94  0A01               	xorlw	1	; case 1
 11021  00AC96  B4D8               	btfsc	status,2,c
 11022  00AC98  D64E               	goto	l19567
 11023  00AC9A  0A03               	xorlw	3	; case 2
 11024  00AC9C  B4D8               	btfsc	status,2,c
 11025  00AC9E  D692               	goto	l19581
 11026  00ACA0  0A01               	xorlw	1	; case 3
 11027  00ACA2  B4D8               	btfsc	status,2,c
 11028  00ACA4  D6D6               	goto	l19595
 11029  00ACA6  0A07               	xorlw	7	; case 4
 11030  00ACA8  B4D8               	btfsc	status,2,c
 11031  00ACAA  D71A               	goto	l19609
 11032  00ACAC  0A01               	xorlw	1	; case 5
 11033  00ACAE  B4D8               	btfsc	status,2,c
 11034  00ACB0  D75E               	goto	l19623
 11035  00ACB2  0A03               	xorlw	3	; case 6
 11036  00ACB4  A4D8               	btfss	status,2,c
 11037  00ACB6  0012               	return	
 11038  00ACB8  D7A1               	goto	l19637
 11039  00ACBA                     __end_of__i2c_eeprom_load_default_calibration:
 11040                           	opt stack 0
 11041                           tblptru	equ	0xFF8
 11042                           tblptrh	equ	0xFF7
 11043                           tblptrl	equ	0xFF6
 11044                           tablat	equ	0xFF5
 11045                           prodh	equ	0xFF4
 11046                           prodl	equ	0xFF3
 11047                           intcon3	equ	0xFF0
 11048                           postinc0	equ	0xFEE
 11049                           wreg	equ	0xFE8
 11050                           postdec1	equ	0xFE5
 11051                           plusw1	equ	0xFE3
 11052                           fsr1h	equ	0xFE2
 11053                           fsr1l	equ	0xFE1
 11054                           indf2	equ	0xFDF
 11055                           postinc2	equ	0xFDE
 11056                           postdec2	equ	0xFDD
 11057                           plusw2	equ	0xFDB
 11058                           fsr2h	equ	0xFDA
 11059                           fsr2l	equ	0xFD9
 11060                           status	equ	0xFD8
 11061                           
 11062 ;; *************** function _flash_init *****************
 11063 ;; Defined at:
 11064 ;;		line 448 in file "flash.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;		None
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;		None
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      void 
 11071 ;; Registers used:
 11072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11082 ;;Total ram usage:        0 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:   14
 11085 ;; This function calls:
 11086 ;;		__flash_set_page_size
 11087 ;; This function is called by:
 11088 ;;		_system_init
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text38
 11093  0133C6                     __ptext38:
 11094                           	opt stack 0
 11095  0133C6                     _flash_init:
 11096                           	opt stack 15
 11097                           
 11098                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;incstack = 0
 11102  0133C6  0E55               	movlw	85
 11103  0133C8  6EA7               	movwf	4007,c	;volatile
 11104  0133CA  0EAA               	movlw	170
 11105  0133CC  6EA7               	movwf	4007,c	;volatile
 11106  0133CE  010E               	movlb	14	; () banked
 11107  0133D0  91BF               	bcf	191,0,b	;volatile
 11108                           
 11109                           ;flash.c: 452: RPINR21 = 23;
 11110  0133D2  0E17               	movlw	23
 11111  0133D4  010E               	movlb	14	; () banked
 11112  0133D6  6FFC               	movwf	252,b	;volatile
 11113                           
 11114                           ;flash.c: 453: RPOR21 = 10;
 11115  0133D8  0E0A               	movlw	10
 11116  0133DA  010E               	movlb	14	; () banked
 11117  0133DC  6FD5               	movwf	213,b	;volatile
 11118                           
 11119                           ;flash.c: 455: RPOR22 = 11;
 11120  0133DE  0E0B               	movlw	11
 11121  0133E0  010E               	movlb	14	; () banked
 11122  0133E2  6FD6               	movwf	214,b	;volatile
 11123                           
 11124                           ;flash.c: 456: RPINR22 = 22;
 11125  0133E4  0E16               	movlw	22
 11126  0133E6  010E               	movlb	14	; () banked
 11127  0133E8  6FFD               	movwf	253,b	;volatile
 11128                           
 11129                           ;flash.c: 457: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11130  0133EA  0E55               	movlw	85
 11131  0133EC  6EA7               	movwf	4007,c	;volatile
 11132  0133EE  0EAA               	movlw	170
 11133  0133F0  6EA7               	movwf	4007,c	;volatile
 11134                           
 11135                           ; BSR set to: 14
 11136  0133F2  010E               	movlb	14	; () banked
 11137  0133F4  81BF               	bsf	191,0,b	;volatile
 11138                           
 11139                           ; BSR set to: 14
 11140                           ;flash.c: 460: SSP2STATbits.SMP = 1;
 11141  0133F6  8E73               	bsf	3955,7,c	;volatile
 11142                           
 11143                           ; BSR set to: 14
 11144                           ;flash.c: 461: SSP2STATbits.CKE = 1;
 11145  0133F8  8C73               	bsf	3955,6,c	;volatile
 11146                           
 11147                           ; BSR set to: 14
 11148                           ;flash.c: 462: SSP2CON1bits.CKP = 0;
 11149  0133FA  9872               	bcf	3954,4,c	;volatile
 11150                           
 11151                           ; BSR set to: 14
 11152                           ;flash.c: 463: SSP2CON1bits.SSPM =0b0000;
 11153  0133FC  9072               	bcf	3954,0,c	;volatile
 11154  0133FE  9272               	bcf	3954,1,c	;volatile
 11155  013400  9472               	bcf	3954,2,c	;volatile
 11156  013402  9672               	bcf	3954,3,c	;volatile
 11157                           
 11158                           ; BSR set to: 14
 11159                           ;flash.c: 464: SSP2CON1bits.SSPEN = 1;
 11160  013404  8A72               	bsf	3954,5,c	;volatile
 11161                           
 11162                           ;flash.c: 467: power_state = FLASH_POWER_STATE_NORMAL;
 11163  013406  0E00               	movlw	0
 11164  013408  0100               	movlb	0	; () banked
 11165  01340A  6FDF               	movwf	_power_state& (0+255),b
 11166                           
 11167                           ; BSR set to: 0
 11168                           ;flash.c: 470: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 11169  01340C  0E00               	movlw	0
 11170  01340E  ECF5  F08E         	call	__flash_set_page_size
 11171  013412  0012               	return		;funcret
 11172  013414                     __end_of_flash_init:
 11173                           	opt stack 0
 11174                           tblptru	equ	0xFF8
 11175                           tblptrh	equ	0xFF7
 11176                           tblptrl	equ	0xFF6
 11177                           tablat	equ	0xFF5
 11178                           prodh	equ	0xFF4
 11179                           prodl	equ	0xFF3
 11180                           intcon3	equ	0xFF0
 11181                           postinc0	equ	0xFEE
 11182                           wreg	equ	0xFE8
 11183                           postdec1	equ	0xFE5
 11184                           plusw1	equ	0xFE3
 11185                           fsr1h	equ	0xFE2
 11186                           fsr1l	equ	0xFE1
 11187                           indf2	equ	0xFDF
 11188                           postinc2	equ	0xFDE
 11189                           postdec2	equ	0xFDD
 11190                           plusw2	equ	0xFDB
 11191                           fsr2h	equ	0xFDA
 11192                           fsr2l	equ	0xFD9
 11193                           status	equ	0xFD8
 11194                           
 11195 ;; *************** function __flash_set_page_size *****************
 11196 ;; Defined at:
 11197 ;;		line 260 in file "flash.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;  size            1    wreg     enum E8327
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  size            1   23[BANK0 ] enum E8327
 11202 ;;  command         4   19[BANK0 ] unsigned char [4]
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  1    wreg      void 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11215 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11216 ;;Total ram usage:        5 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:   13
 11219 ;; This function calls:
 11220 ;;		__flash_spi_tx
 11221 ;;		_flash_is_busy
 11222 ;;		_memcpy
 11223 ;; This function is called by:
 11224 ;;		_flash_init
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           	psect	text39
 11229  011DEA                     __ptext39:
 11230                           	opt stack 0
 11231  011DEA                     __flash_set_page_size:
 11232                           	opt stack 15
 11233                           
 11234                           ;incstack = 0
 11235                           ;__flash_set_page_size@size stored from wreg
 11236  011DEA  0100               	movlb	0	; () banked
 11237  011DEC  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 11238  011DEE                     l19945:
 11239  011DEE  EC7E  F09F         	call	_flash_is_busy	;wreg free
 11240  011DF2  0900               	iorlw	0
 11241  011DF4  A4D8               	btfss	status,2,c
 11242  011DF6  D7FB               	goto	l19945
 11243                           
 11244                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
 11245  011DF8  0100               	movlb	0	; () banked
 11246  011DFA  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 11247  011DFC  0100               	movlb	0	; () banked
 11248  011DFE  A4D8               	btfss	status,2,c
 11249  011E00  D013               	goto	l19951
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
 11253  011E02  0E73               	movlw	low __flash_set_page_size@command
 11254  011E04  0100               	movlb	0	; () banked
 11255  011E06  6F60               	movwf	memcpy@d1& (0+255),b
 11256  011E08  0E00               	movlw	high __flash_set_page_size@command
 11257  011E0A  0100               	movlb	0	; () banked
 11258  011E0C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11259  011E0E  0E2E               	movlw	low _flash_command_pagesize_512
 11260  011E10  0100               	movlb	0	; () banked
 11261  011E12  6F62               	movwf	memcpy@s1& (0+255),b
 11262  011E14  0E94               	movlw	high _flash_command_pagesize_512
 11263  011E16  0100               	movlb	0	; () banked
 11264  011E18  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11265  011E1A  0E00               	movlw	0
 11266  011E1C  0100               	movlb	0	; () banked
 11267  011E1E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11268  011E20  0E04               	movlw	4
 11269  011E22  6F64               	movwf	memcpy@n& (0+255),b
 11270  011E24  EC55  F095         	call	_memcpy	;wreg free
 11271  011E28                     l19951:
 11272                           
 11273                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
 11274  011E28  0100               	movlb	0	; () banked
 11275  011E2A  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 11276  011E2C  A4D8               	btfss	status,2,c
 11277  011E2E  D013               	goto	l19955
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
 11281  011E30  0E73               	movlw	low __flash_set_page_size@command
 11282  011E32  0100               	movlb	0	; () banked
 11283  011E34  6F60               	movwf	memcpy@d1& (0+255),b
 11284  011E36  0E00               	movlw	high __flash_set_page_size@command
 11285  011E38  0100               	movlb	0	; () banked
 11286  011E3A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11287  011E3C  0E2A               	movlw	low _flash_command_pagesize_528
 11288  011E3E  0100               	movlb	0	; () banked
 11289  011E40  6F62               	movwf	memcpy@s1& (0+255),b
 11290  011E42  0E94               	movlw	high _flash_command_pagesize_528
 11291  011E44  0100               	movlb	0	; () banked
 11292  011E46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11293  011E48  0E00               	movlw	0
 11294  011E4A  0100               	movlb	0	; () banked
 11295  011E4C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11296  011E4E  0E04               	movlw	4
 11297  011E50  6F64               	movwf	memcpy@n& (0+255),b
 11298  011E52  EC55  F095         	call	_memcpy	;wreg free
 11299  011E56                     l19955:
 11300                           
 11301                           ;flash.c: 274: _flash_spi_tx(command, 4);
 11302  011E56  0E73               	movlw	low __flash_set_page_size@command
 11303  011E58  0100               	movlb	0	; () banked
 11304  011E5A  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 11305  011E5C  0E00               	movlw	high __flash_set_page_size@command
 11306  011E5E  0100               	movlb	0	; () banked
 11307  011E60  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 11308  011E62  0E00               	movlw	0
 11309  011E64  0100               	movlb	0	; () banked
 11310  011E66  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 11311  011E68  0E04               	movlw	4
 11312  011E6A  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 11313  011E6C  ECB7  F094         	call	__flash_spi_tx	;wreg free
 11314  011E70  0012               	return		;funcret
 11315  011E72                     __end_of__flash_set_page_size:
 11316                           	opt stack 0
 11317                           tblptru	equ	0xFF8
 11318                           tblptrh	equ	0xFF7
 11319                           tblptrl	equ	0xFF6
 11320                           tablat	equ	0xFF5
 11321                           prodh	equ	0xFF4
 11322                           prodl	equ	0xFF3
 11323                           intcon3	equ	0xFF0
 11324                           postinc0	equ	0xFEE
 11325                           wreg	equ	0xFE8
 11326                           postdec1	equ	0xFE5
 11327                           plusw1	equ	0xFE3
 11328                           fsr1h	equ	0xFE2
 11329                           fsr1l	equ	0xFE1
 11330                           indf2	equ	0xFDF
 11331                           postinc2	equ	0xFDE
 11332                           postdec2	equ	0xFDD
 11333                           plusw2	equ	0xFDB
 11334                           fsr2h	equ	0xFDA
 11335                           fsr2l	equ	0xFD9
 11336                           status	equ	0xFD8
 11337                           
 11338 ;; *************** function _buck_init *****************
 11339 ;; Defined at:
 11340 ;;		line 543 in file "buck.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;		None
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;		None
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2, cstack
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11358 ;;Total ram usage:        0 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:   11
 11361 ;; This function calls:
 11362 ;;		__buck_pin_init
 11363 ;;		__buck_timer2_init
 11364 ;; This function is called by:
 11365 ;;		_system_init
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text40
 11370  014256                     __ptext40:
 11371                           	opt stack 0
 11372  014256                     _buck_init:
 11373                           	opt stack 18
 11374                           
 11375                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 11376                           
 11377                           ;incstack = 0
 11378  014256  0E00               	movlw	0
 11379  014258  6E1C               	movwf	_buck_status,c
 11380                           
 11381                           ;buck.c: 546: _buck_timer2_init();
 11382  01425A  EC5F  F0A0         	call	__buck_timer2_init	;wreg free
 11383                           
 11384                           ;buck.c: 547: _buck_pin_init();
 11385  01425E  EC55  F09C         	call	__buck_pin_init	;wreg free
 11386  014262  0012               	return		;funcret
 11387  014264                     __end_of_buck_init:
 11388                           	opt stack 0
 11389                           tblptru	equ	0xFF8
 11390                           tblptrh	equ	0xFF7
 11391                           tblptrl	equ	0xFF6
 11392                           tablat	equ	0xFF5
 11393                           prodh	equ	0xFF4
 11394                           prodl	equ	0xFF3
 11395                           intcon3	equ	0xFF0
 11396                           postinc0	equ	0xFEE
 11397                           wreg	equ	0xFE8
 11398                           postdec1	equ	0xFE5
 11399                           plusw1	equ	0xFE3
 11400                           fsr1h	equ	0xFE2
 11401                           fsr1l	equ	0xFE1
 11402                           indf2	equ	0xFDF
 11403                           postinc2	equ	0xFDE
 11404                           postdec2	equ	0xFDD
 11405                           plusw2	equ	0xFDB
 11406                           fsr2h	equ	0xFDA
 11407                           fsr2l	equ	0xFD9
 11408                           status	equ	0xFD8
 11409                           
 11410 ;; *************** function __buck_timer2_init *****************
 11411 ;; Defined at:
 11412 ;;		line 64 in file "buck.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;		None
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      void 
 11419 ;; Registers used:
 11420 ;;		None
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;Total ram usage:        0 bytes
 11431 ;; Hardware stack levels used:    1
 11432 ;; Hardware stack levels required when called:   10
 11433 ;; This function calls:
 11434 ;;		Nothing
 11435 ;; This function is called by:
 11436 ;;		_buck_init
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           
 11440                           	psect	text41
 11441  0140BE                     __ptext41:
 11442                           	opt stack 0
 11443  0140BE                     __buck_timer2_init:
 11444                           	opt stack 18
 11445                           
 11446                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 11447                           
 11448                           ;incstack = 0
 11449  0140BE  010F               	movlb	15	; () banked
 11450  0140C0  9152               	bcf	82,0,b	;volatile
 11451  0140C2  9352               	bcf	82,1,b	;volatile
 11452  0140C4  9552               	bcf	82,2,b	;volatile
 11453                           
 11454                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 11455  0140C6  86CA               	bsf	4042,3,c	;volatile
 11456  0140C8  88CA               	bsf	4042,4,c	;volatile
 11457  0140CA  8ACA               	bsf	4042,5,c	;volatile
 11458  0140CC  8CCA               	bsf	4042,6,c	;volatile
 11459                           
 11460                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 11461  0140CE  92CA               	bcf	4042,1,c	;volatile
 11462                           
 11463                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 11464  0140D0  90CA               	bcf	4042,0,c	;volatile
 11465                           
 11466                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 11467  0140D2  94CA               	bcf	4042,2,c	;volatile
 11468                           
 11469                           ; BSR set to: 15
 11470  0140D4  0012               	return		;funcret
 11471  0140D6                     __end_of__buck_timer2_init:
 11472                           	opt stack 0
 11473                           tblptru	equ	0xFF8
 11474                           tblptrh	equ	0xFF7
 11475                           tblptrl	equ	0xFF6
 11476                           tablat	equ	0xFF5
 11477                           prodh	equ	0xFF4
 11478                           prodl	equ	0xFF3
 11479                           intcon3	equ	0xFF0
 11480                           postinc0	equ	0xFEE
 11481                           wreg	equ	0xFE8
 11482                           postdec1	equ	0xFE5
 11483                           plusw1	equ	0xFE3
 11484                           fsr1h	equ	0xFE2
 11485                           fsr1l	equ	0xFE1
 11486                           indf2	equ	0xFDF
 11487                           postinc2	equ	0xFDE
 11488                           postdec2	equ	0xFDD
 11489                           plusw2	equ	0xFDB
 11490                           fsr2h	equ	0xFDA
 11491                           fsr2l	equ	0xFD9
 11492                           status	equ	0xFD8
 11493                           
 11494 ;; *************** function __buck_pin_init *****************
 11495 ;; Defined at:
 11496 ;;		line 41 in file "buck.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;		None
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1    wreg      void 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:   10
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_buck_init
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text42
 11525  0138AA                     __ptext42:
 11526                           	opt stack 0
 11527  0138AA                     __buck_pin_init:
 11528                           	opt stack 18
 11529                           
 11530                           ;buck.c: 44: LATBbits.LB1 = 0;
 11531                           
 11532                           ; BSR set to: 15
 11533                           ;incstack = 0
 11534  0138AA  928A               	bcf	3978,1,c	;volatile
 11535                           
 11536                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 11537  0138AC  9293               	bcf	3987,1,c	;volatile
 11538                           
 11539                           ;buck.c: 46: LATBbits.LB2 = 0;
 11540  0138AE  948A               	bcf	3978,2,c	;volatile
 11541                           
 11542                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 11543  0138B0  9493               	bcf	3987,2,c	;volatile
 11544                           
 11545                           ;buck.c: 48: LATBbits.LB3 = 0;
 11546  0138B2  968A               	bcf	3978,3,c	;volatile
 11547                           
 11548                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 11549  0138B4  9693               	bcf	3987,3,c	;volatile
 11550                           
 11551                           ;buck.c: 52: LATBbits.LATB2 = 0;
 11552  0138B6  948A               	bcf	3978,2,c	;volatile
 11553                           
 11554                           ;buck.c: 53: LATBbits.LATB1 = 0;
 11555  0138B8  928A               	bcf	3978,1,c	;volatile
 11556                           
 11557                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11558  0138BA  0E55               	movlw	85
 11559  0138BC  6EA7               	movwf	4007,c	;volatile
 11560  0138BE  0EAA               	movlw	170
 11561  0138C0  6EA7               	movwf	4007,c	;volatile
 11562  0138C2  010E               	movlb	14	; () banked
 11563  0138C4  91BF               	bcf	191,0,b	;volatile
 11564                           
 11565                           ;buck.c: 57: RPOR6 = 14;
 11566  0138C6  0E0E               	movlw	14
 11567  0138C8  010E               	movlb	14	; () banked
 11568  0138CA  6FC6               	movwf	198,b	;volatile
 11569                           
 11570                           ;buck.c: 58: RPOR5 = 15;
 11571  0138CC  0E0F               	movlw	15
 11572  0138CE  010E               	movlb	14	; () banked
 11573  0138D0  6FC5               	movwf	197,b	;volatile
 11574                           
 11575                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11576  0138D2  0E55               	movlw	85
 11577  0138D4  6EA7               	movwf	4007,c	;volatile
 11578  0138D6  0EAA               	movlw	170
 11579  0138D8  6EA7               	movwf	4007,c	;volatile
 11580                           
 11581                           ; BSR set to: 14
 11582  0138DA  010E               	movlb	14	; () banked
 11583  0138DC  81BF               	bsf	191,0,b	;volatile
 11584                           
 11585                           ; BSR set to: 14
 11586  0138DE  0012               	return		;funcret
 11587  0138E0                     __end_of__buck_pin_init:
 11588                           	opt stack 0
 11589                           tblptru	equ	0xFF8
 11590                           tblptrh	equ	0xFF7
 11591                           tblptrl	equ	0xFF6
 11592                           tablat	equ	0xFF5
 11593                           prodh	equ	0xFF4
 11594                           prodl	equ	0xFF3
 11595                           intcon3	equ	0xFF0
 11596                           postinc0	equ	0xFEE
 11597                           wreg	equ	0xFE8
 11598                           postdec1	equ	0xFE5
 11599                           plusw1	equ	0xFE3
 11600                           fsr1h	equ	0xFE2
 11601                           fsr1l	equ	0xFE1
 11602                           indf2	equ	0xFDF
 11603                           postinc2	equ	0xFDE
 11604                           postdec2	equ	0xFDD
 11605                           plusw2	equ	0xFDB
 11606                           fsr2h	equ	0xFDA
 11607                           fsr2l	equ	0xFD9
 11608                           status	equ	0xFD8
 11609                           
 11610 ;; *************** function _adc_init *****************
 11611 ;; Defined at:
 11612 ;;		line 9 in file "adc.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;		None
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;		None
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  1    wreg      void 
 11619 ;; Registers used:
 11620 ;;		wreg, status,2
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11630 ;;Total ram usage:        0 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:   10
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		_system_init
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           	psect	text43
 11641  013FB8                     __ptext43:
 11642                           	opt stack 0
 11643  013FB8                     _adc_init:
 11644                           	opt stack 19
 11645                           
 11646                           ;adc.c: 11: ADCON0bits.VCFG1 = 0;
 11647                           
 11648                           ; BSR set to: 14
 11649                           ;incstack = 0
 11650  013FB8  9EC2               	bcf	4034,7,c	;volatile
 11651                           
 11652                           ;adc.c: 12: ADCON0bits.VCFG0 = 1;
 11653  013FBA  8CC2               	bsf	4034,6,c	;volatile
 11654                           
 11655                           ;adc.c: 13: ADCON0bits.CHS = 0b1100;
 11656  013FBC  50C2               	movf	4034,w,c	;volatile
 11657  013FBE  0BC3               	andlw	-61
 11658  013FC0  0930               	iorlw	48
 11659  013FC2  6EC2               	movwf	4034,c	;volatile
 11660                           
 11661                           ;adc.c: 14: ADCON0bits.ADON = 1;
 11662  013FC4  80C2               	bsf	4034,0,c	;volatile
 11663                           
 11664                           ;adc.c: 15: ADCON1bits.ADFM = 0;
 11665  013FC6  9EC1               	bcf	4033,7,c	;volatile
 11666                           
 11667                           ;adc.c: 16: ADCON1bits.ADCAL = 0;
 11668  013FC8  9CC1               	bcf	4033,6,c	;volatile
 11669                           
 11670                           ;adc.c: 17: ADCON1bits.ADCS = 0b110;
 11671  013FCA  50C1               	movf	4033,w,c	;volatile
 11672  013FCC  0BF8               	andlw	-8
 11673  013FCE  0906               	iorlw	6
 11674  013FD0  6EC1               	movwf	4033,c	;volatile
 11675  013FD2  0012               	return		;funcret
 11676  013FD4                     __end_of_adc_init:
 11677                           	opt stack 0
 11678                           tblptru	equ	0xFF8
 11679                           tblptrh	equ	0xFF7
 11680                           tblptrl	equ	0xFF6
 11681                           tablat	equ	0xFF5
 11682                           prodh	equ	0xFF4
 11683                           prodl	equ	0xFF3
 11684                           intcon3	equ	0xFF0
 11685                           postinc0	equ	0xFEE
 11686                           wreg	equ	0xFE8
 11687                           postdec1	equ	0xFE5
 11688                           plusw1	equ	0xFE3
 11689                           fsr1h	equ	0xFE2
 11690                           fsr1l	equ	0xFE1
 11691                           indf2	equ	0xFDF
 11692                           postinc2	equ	0xFDE
 11693                           postdec2	equ	0xFDD
 11694                           plusw2	equ	0xFDB
 11695                           fsr2h	equ	0xFDA
 11696                           fsr2l	equ	0xFD9
 11697                           status	equ	0xFD8
 11698                           
 11699 ;; *************** function __system_timer0_init *****************
 11700 ;; Defined at:
 11701 ;;		line 214 in file "os.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;		None
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;		None
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1    wreg      void 
 11708 ;; Registers used:
 11709 ;;		wreg, status,2, status,0
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11719 ;;Total ram usage:        0 bytes
 11720 ;; Hardware stack levels used:    1
 11721 ;; Hardware stack levels required when called:   10
 11722 ;; This function calls:
 11723 ;;		Nothing
 11724 ;; This function is called by:
 11725 ;;		_system_init
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text44
 11730  013612                     __ptext44:
 11731                           	opt stack 0
 11732  013612                     __system_timer0_init:
 11733                           	opt stack 19
 11734                           
 11735                           ;os.c: 217: T0CONbits.T0CS = 0;
 11736                           
 11737                           ;incstack = 0
 11738  013612  9AD5               	bcf	4053,5,c	;volatile
 11739                           
 11740                           ;os.c: 219: T0CONbits.T08BIT = 0;
 11741  013614  9CD5               	bcf	4053,6,c	;volatile
 11742                           
 11743                           ;os.c: 221: T0CONbits.T0PS2 = 0;
 11744  013616  94D5               	bcf	4053,2,c	;volatile
 11745                           
 11746                           ;os.c: 222: T0CONbits.T0PS1 = 1;
 11747  013618  82D5               	bsf	4053,1,c	;volatile
 11748                           
 11749                           ;os.c: 223: T0CONbits.T0PS0 = 0;
 11750  01361A  90D5               	bcf	4053,0,c	;volatile
 11751                           
 11752                           ;os.c: 225: T0CONbits.PSA = 0;
 11753  01361C  96D5               	bcf	4053,3,c	;volatile
 11754                           
 11755                           ;os.c: 227: switch(os.clockFrequency)
 11756  01361E  D009               	goto	l20735
 11757  013620                     l20729:
 11758                           
 11759                           ;os.c: 230: TMR0H = 0xF8;
 11760  013620  0EF8               	movlw	248
 11761  013622  6ED7               	movwf	4055,c	;volatile
 11762                           
 11763                           ;os.c: 231: TMR0L = 0x30;
 11764  013624  0E30               	movlw	48
 11765  013626  D003               	goto	L8
 11766  013628                     l20731:
 11767                           
 11768                           ;os.c: 234: TMR0H = 0xD1;
 11769  013628  0ED1               	movlw	209
 11770  01362A  6ED7               	movwf	4055,c	;volatile
 11771                           
 11772                           ;os.c: 235: TMR0L = 0x20;
 11773  01362C  0E20               	movlw	32
 11774  01362E                     L8:
 11775  01362E  6ED6               	movwf	4054,c	;volatile
 11776                           
 11777                           ;os.c: 237: }
 11778                           
 11779                           ;os.c: 236: break;
 11780  013630  D008               	goto	l1375
 11781  013632                     l20735:
 11782  013632  0102               	movlb	2	; () banked
 11783  013634  5100               	movf	_os& (0+255),w,b	;volatile
 11784                           
 11785                           ; Switch size 1, requested type "space"
 11786                           ; Number of cases is 2, Range of values is 1 to 2
 11787                           ; switch strategies available:
 11788                           ; Name         Instructions Cycles
 11789                           ; simple_byte            7     4 (average)
 11790                           ;	Chosen strategy is simple_byte
 11791  013636  0A01               	xorlw	1	; case 1
 11792  013638  B4D8               	btfsc	status,2,c
 11793  01363A  D7F2               	goto	l20729
 11794  01363C  0A03               	xorlw	3	; case 2
 11795  01363E  B4D8               	btfsc	status,2,c
 11796  013640  D7F3               	goto	l20731
 11797  013642                     l1375:
 11798                           
 11799                           ;os.c: 239: T0CONbits.TMR0ON = 1;
 11800  013642  8ED5               	bsf	4053,7,c	;volatile
 11801                           
 11802                           ;os.c: 242: INTCONbits.TMR0IF = 0;
 11803  013644  94F2               	bcf	intcon,2,c	;volatile
 11804                           
 11805                           ;os.c: 243: INTCONbits.TMR0IE = 1;
 11806  013646  8AF2               	bsf	intcon,5,c	;volatile
 11807                           
 11808                           ;os.c: 244: INTCONbits.GIE = 1;
 11809  013648  8EF2               	bsf	intcon,7,c	;volatile
 11810                           
 11811                           ;os.c: 247: os.timeSlot = 0;
 11812  01364A  0E00               	movlw	0
 11813  01364C  0102               	movlb	2	; () banked
 11814  01364E  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 11815                           
 11816                           ; BSR set to: 2
 11817  013650  0012               	return		;funcret
 11818  013652                     __end_of__system_timer0_init:
 11819                           	opt stack 0
 11820                           tblptru	equ	0xFF8
 11821                           tblptrh	equ	0xFF7
 11822                           tblptrl	equ	0xFF6
 11823                           tablat	equ	0xFF5
 11824                           prodh	equ	0xFF4
 11825                           prodl	equ	0xFF3
 11826                           intcon	equ	0xFF2
 11827                           intcon3	equ	0xFF0
 11828                           postinc0	equ	0xFEE
 11829                           wreg	equ	0xFE8
 11830                           postdec1	equ	0xFE5
 11831                           plusw1	equ	0xFE3
 11832                           fsr1h	equ	0xFE2
 11833                           fsr1l	equ	0xFE1
 11834                           indf2	equ	0xFDF
 11835                           postinc2	equ	0xFDE
 11836                           postdec2	equ	0xFDD
 11837                           plusw2	equ	0xFDB
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842 ;; *************** function __system_encoder_init *****************
 11843 ;; Defined at:
 11844 ;;		line 160 in file "os.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		wreg, status,2
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:   10
 11865 ;; This function calls:
 11866 ;;		Nothing
 11867 ;; This function is called by:
 11868 ;;		_system_init
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872                           	psect	text45
 11873  0134F6                     __ptext45:
 11874                           	opt stack 0
 11875  0134F6                     __system_encoder_init:
 11876                           	opt stack 19
 11877                           
 11878                           ;os.c: 162: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11879                           
 11880                           ; BSR set to: 2
 11881                           ;incstack = 0
 11882  0134F6  0E55               	movlw	85
 11883  0134F8  6EA7               	movwf	4007,c	;volatile
 11884  0134FA  0EAA               	movlw	170
 11885  0134FC  6EA7               	movwf	4007,c	;volatile
 11886  0134FE  010E               	movlb	14	; () banked
 11887  013500  91BF               	bcf	191,0,b	;volatile
 11888                           
 11889                           ;os.c: 163: RPINR1 = 0;
 11890  013502  0E00               	movlw	0
 11891  013504  010E               	movlb	14	; () banked
 11892  013506  6FE1               	movwf	225,b	;volatile
 11893                           
 11894                           ;os.c: 164: RPINR3 = 9;
 11895  013508  0E09               	movlw	9
 11896  01350A  010E               	movlb	14	; () banked
 11897  01350C  6FE3               	movwf	227,b	;volatile
 11898                           
 11899                           ;os.c: 165: RPINR2 = 10;
 11900  01350E  0E0A               	movlw	10
 11901  013510  010E               	movlb	14	; () banked
 11902  013512  6FE2               	movwf	226,b	;volatile
 11903                           
 11904                           ;os.c: 166: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 11905  013514  0E55               	movlw	85
 11906  013516  6EA7               	movwf	4007,c	;volatile
 11907  013518  0EAA               	movlw	170
 11908  01351A  6EA7               	movwf	4007,c	;volatile
 11909                           
 11910                           ; BSR set to: 14
 11911  01351C  010E               	movlb	14	; () banked
 11912  01351E  91BF               	bcf	191,0,b	;volatile
 11913                           
 11914                           ; BSR set to: 14
 11915                           ;os.c: 173: INTCON2bits.INTEDG1 = 0;
 11916  013520  9AF1               	bcf	intcon2,5,c	;volatile
 11917                           
 11918                           ; BSR set to: 14
 11919                           ;os.c: 174: INTCON3bits.INT1IF = 0;
 11920  013522  90F0               	bcf	intcon3,0,c	;volatile
 11921                           
 11922                           ; BSR set to: 14
 11923                           ;os.c: 175: INTCON3bits.INT1IE = 1;
 11924  013524  86F0               	bsf	intcon3,3,c	;volatile
 11925                           
 11926                           ; BSR set to: 14
 11927                           ;os.c: 177: INTCON2bits.INTEDG2 = 1;
 11928  013526  88F1               	bsf	intcon2,4,c	;volatile
 11929                           
 11930                           ; BSR set to: 14
 11931                           ;os.c: 178: INTCON3bits.INT2IF = 0;
 11932  013528  92F0               	bcf	intcon3,1,c	;volatile
 11933                           
 11934                           ; BSR set to: 14
 11935                           ;os.c: 181: INTCON2bits.INTEDG3 = 1;
 11936  01352A  86F1               	bsf	intcon2,3,c	;volatile
 11937                           
 11938                           ; BSR set to: 14
 11939                           ;os.c: 182: INTCON3bits.INT3IF = 0;
 11940  01352C  94F0               	bcf	intcon3,2,c	;volatile
 11941                           
 11942                           ; BSR set to: 14
 11943                           ;os.c: 185: INTCONbits.GIE = 1;
 11944  01352E  8EF2               	bsf	intcon,7,c	;volatile
 11945                           
 11946                           ;os.c: 187: os.encoderCount = 0;
 11947  013530  0E00               	movlw	0
 11948  013532  0102               	movlb	2	; () banked
 11949  013534  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 11950                           
 11951                           ;os.c: 188: os.buttonCount = 0;
 11952  013536  0E00               	movlw	0
 11953  013538  0102               	movlb	2	; () banked
 11954  01353A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 11955                           
 11956                           ; BSR set to: 2
 11957  01353C  0012               	return		;funcret
 11958  01353E                     __end_of__system_encoder_init:
 11959                           	opt stack 0
 11960                           tblptru	equ	0xFF8
 11961                           tblptrh	equ	0xFF7
 11962                           tblptrl	equ	0xFF6
 11963                           tablat	equ	0xFF5
 11964                           prodh	equ	0xFF4
 11965                           prodl	equ	0xFF3
 11966                           intcon	equ	0xFF2
 11967                           intcon2	equ	0xFF1
 11968                           intcon3	equ	0xFF0
 11969                           postinc0	equ	0xFEE
 11970                           wreg	equ	0xFE8
 11971                           postdec1	equ	0xFE5
 11972                           plusw1	equ	0xFE3
 11973                           fsr1h	equ	0xFE2
 11974                           fsr1l	equ	0xFE1
 11975                           indf2	equ	0xFDF
 11976                           postinc2	equ	0xFDE
 11977                           postdec2	equ	0xFDD
 11978                           plusw2	equ	0xFDB
 11979                           fsr2h	equ	0xFDA
 11980                           fsr2l	equ	0xFD9
 11981                           status	equ	0xFD8
 11982                           
 11983 ;; *************** function _system_calculate_output_voltage *****************
 11984 ;; Defined at:
 11985 ;;		line 587 in file "os.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;		None
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;  tmp             4   16[BANK0 ] long 
 11990 ;; Return value:  Size  Location     Type
 11991 ;;                  1    wreg      void 
 11992 ;; Registers used:
 11993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11994 ;; Tracked objects:
 11995 ;;		On entry : 0/0
 11996 ;;		On exit  : 0/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12000 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12002 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12003 ;;Total ram usage:        8 bytes
 12004 ;; Hardware stack levels used:    1
 12005 ;; Hardware stack levels required when called:   11
 12006 ;; This function calls:
 12007 ;;		___lmul
 12008 ;; This function is called by:
 12009 ;;		_main
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           	psect	text46
 12014  00FA22                     __ptext46:
 12015                           	opt stack 0
 12016  00FA22                     _system_calculate_output_voltage:
 12017                           	opt stack 19
 12018                           
 12019                           ;os.c: 589: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 12020                           
 12021                           ; BSR set to: 2
 12022                           ;incstack = 0
 12023  00FA22  0102               	movlb	2	; () banked
 12024  00FA24  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 12025  00FA26  0102               	movlb	2	; () banked
 12026  00FA28  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 12027  00FA2A  0100               	movlb	0	; () banked
 12028  00FA2C  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 12029  00FA2E  0102               	movlb	2	; () banked
 12030  00FA30  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 12031  00FA32  0102               	movlb	2	; () banked
 12032  00FA34  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 12033  00FA36  0100               	movlb	0	; () banked
 12034  00FA38  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 12035  00FA3A  0102               	movlb	2	; () banked
 12036  00FA3C  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 12037  00FA3E  0100               	movlb	0	; () banked
 12038  00FA40  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12039  00FA42  0102               	movlb	2	; () banked
 12040  00FA44  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 12041  00FA46  0100               	movlb	0	; () banked
 12042  00FA48  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12043  00FA4A  0102               	movlb	2	; () banked
 12044  00FA4C  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 12045  00FA4E  0100               	movlb	0	; () banked
 12046  00FA50  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12047  00FA52  0102               	movlb	2	; () banked
 12048  00FA54  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 12049  00FA56  0100               	movlb	0	; () banked
 12050  00FA58  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12051  00FA5A  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 12052  00FA5E  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 12053  00FA62  0100               	movlb	0	; () banked
 12054  00FA64  0E00               	movlw	0
 12055  00FA66  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 12056  00FA68  0EFF               	movlw	-1
 12057  00FA6A  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 12058  00FA6C  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 12059                           
 12060                           ;os.c: 590: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 12061  00FA6E  C311  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 12062  00FA72  C312  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 12063  00FA76  0E00               	movlw	0
 12064  00FA78  0100               	movlb	0	; () banked
 12065  00FA7A  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 12066  00FA7C  0EFF               	movlw	255
 12067  00FA7E  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 12068  00FA80  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 12069  00FA82  0100               	movlb	0	; () banked
 12070  00FA84  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 12071  00FA86  0100               	movlb	0	; () banked
 12072  00FA88  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 12073  00FA8A  0100               	movlb	0	; () banked
 12074  00FA8C  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 12075  00FA8E  0100               	movlb	0	; () banked
 12076  00FA90  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12077  00FA92  0100               	movlb	0	; () banked
 12078  00FA94  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 12079  00FA96  0100               	movlb	0	; () banked
 12080  00FA98  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12081  00FA9A  0100               	movlb	0	; () banked
 12082  00FA9C  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 12083  00FA9E  0100               	movlb	0	; () banked
 12084  00FAA0  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;os.c: 591: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 12088  00FAA2  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 12089  00FAA6  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 12090  00FAAA  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 12091  00FAAE  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 12092  00FAB2  EE23  F013         	lfsr	2,_calibrationParameters+19
 12093  00FAB6  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12094  00FABA  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12095  00FABE  0100               	movlb	0	; () banked
 12096  00FAC0  0E00               	movlw	0
 12097  00FAC2  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12098  00FAC4  0EFF               	movlw	-1
 12099  00FAC6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12100  00FAC8  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12101  00FACA  ECBC  F092         	call	___lmul	;wreg free
 12102  00FACE  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 12103  00FAD2  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 12104  00FAD6  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 12105  00FADA  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 12106                           
 12107                           ;os.c: 592: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 12108  00FADE  C315  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 12109  00FAE2  0EFF               	movlw	-1
 12110  00FAE4  0100               	movlb	0	; () banked
 12111  00FAE6  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12112  00FAE8  0100               	movlb	0	; () banked
 12113  00FAEA  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 12114  00FAEC  0100               	movlb	0	; () banked
 12115  00FAEE  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 12116  00FAF0  D006               	goto	u22460
 12117  00FAF2                     u22465:
 12118  00FAF2  0100               	movlb	0	; () banked
 12119  00FAF4  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 12120  00FAF6  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12121  00FAF8  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12122  00FAFA  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12123  00FAFC  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 12124  00FAFE                     u22460:
 12125  00FAFE  0100               	movlb	0	; () banked
 12126  00FB00  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12127  00FB02  D7F7               	goto	u22465
 12128                           
 12129                           ;os.c: 593: tmp += 1;
 12130  00FB04  0E01               	movlw	1
 12131  00FB06  0100               	movlb	0	; () banked
 12132  00FB08  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 12133  00FB0A  0E00               	movlw	0
 12134  00FB0C  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12135  00FB0E  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12136  00FB10  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;os.c: 594: tmp >>= 1;
 12140  00FB12  0100               	movlb	0	; () banked
 12141  00FB14  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 12142  00FB16  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12143  00FB18  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12144  00FB1A  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12145  00FB1C  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;os.c: 595: os.output_voltage = (int16_t) tmp;
 12149  00FB1E  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 12150  00FB22  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 12151                           
 12152                           ; BSR set to: 0
 12153  00FB26  0012               	return		;funcret
 12154  00FB28                     __end_of_system_calculate_output_voltage:
 12155                           	opt stack 0
 12156                           tblptru	equ	0xFF8
 12157                           tblptrh	equ	0xFF7
 12158                           tblptrl	equ	0xFF6
 12159                           tablat	equ	0xFF5
 12160                           prodh	equ	0xFF4
 12161                           prodl	equ	0xFF3
 12162                           intcon	equ	0xFF2
 12163                           intcon2	equ	0xFF1
 12164                           intcon3	equ	0xFF0
 12165                           postinc0	equ	0xFEE
 12166                           wreg	equ	0xFE8
 12167                           postdec1	equ	0xFE5
 12168                           plusw1	equ	0xFE3
 12169                           fsr1h	equ	0xFE2
 12170                           fsr1l	equ	0xFE1
 12171                           indf2	equ	0xFDF
 12172                           postinc2	equ	0xFDE
 12173                           postdec2	equ	0xFDD
 12174                           plusw2	equ	0xFDB
 12175                           fsr2h	equ	0xFDA
 12176                           fsr2l	equ	0xFD9
 12177                           status	equ	0xFD8
 12178                           
 12179 ;; *************** function _system_calculate_output_current *****************
 12180 ;; Defined at:
 12181 ;;		line 625 in file "os.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;		None
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;  tmp             4   16[BANK0 ] long 
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12198 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12199 ;;Total ram usage:        8 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:   11
 12202 ;; This function calls:
 12203 ;;		___lmul
 12204 ;;		_buck_get_mode
 12205 ;; This function is called by:
 12206 ;;		_main
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text47
 12211  00E470                     __ptext47:
 12212                           	opt stack 0
 12213  00E470                     _system_calculate_output_current:
 12214                           	opt stack 19
 12215                           
 12216                           ;os.c: 627: int32_t tmp;
 12217                           ;os.c: 629: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;incstack = 0
 12221  00E470  EC78  F0A1         	call	_buck_get_mode	;wreg free
 12222  00E474  0900               	iorlw	0
 12223  00E476  B4D8               	btfsc	status,2,c
 12224  00E478  D005               	goto	l22631
 12225  00E47A  EC78  F0A1         	call	_buck_get_mode	;wreg free
 12226  00E47E  0A80               	xorlw	128
 12227  00E480  A4D8               	btfss	status,2,c
 12228  00E482  D006               	goto	l22633
 12229  00E484                     l22631:
 12230                           
 12231                           ;os.c: 630: {
 12232                           ;os.c: 631: os.output_current = 0;
 12233  00E484  0E00               	movlw	0
 12234  00E486  0102               	movlb	2	; () banked
 12235  00E488  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 12236  00E48A  0E00               	movlw	0
 12237  00E48C  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 12238                           
 12239                           ;os.c: 632: }
 12240  00E48E  0012               	return	
 12241  00E490                     l22633:
 12242                           
 12243                           ;os.c: 633: else
 12244                           ;os.c: 634: {
 12245                           ;os.c: 635: tmp = (int32_t) (os.output_current_adc[0] + os.output_current_adc[1] + os.ou
      +                          tput_current_adc[2] + os.output_current_adc[3]);
 12246  00E490  0102               	movlb	2	; () banked
 12247  00E492  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 12248  00E494  0102               	movlb	2	; () banked
 12249  00E496  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 12250  00E498  0100               	movlb	0	; () banked
 12251  00E49A  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 12252  00E49C  0102               	movlb	2	; () banked
 12253  00E49E  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 12254  00E4A0  0102               	movlb	2	; () banked
 12255  00E4A2  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 12256  00E4A4  0100               	movlb	0	; () banked
 12257  00E4A6  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 12258  00E4A8  0102               	movlb	2	; () banked
 12259  00E4AA  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 12260  00E4AC  0100               	movlb	0	; () banked
 12261  00E4AE  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12262  00E4B0  0102               	movlb	2	; () banked
 12263  00E4B2  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 12264  00E4B4  0100               	movlb	0	; () banked
 12265  00E4B6  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 12266  00E4B8  0102               	movlb	2	; () banked
 12267  00E4BA  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 12268  00E4BC  0100               	movlb	0	; () banked
 12269  00E4BE  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12270  00E4C0  0102               	movlb	2	; () banked
 12271  00E4C2  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 12272  00E4C4  0100               	movlb	0	; () banked
 12273  00E4C6  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 12274  00E4C8  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 12275  00E4CC  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 12276  00E4D0  0100               	movlb	0	; () banked
 12277  00E4D2  0E00               	movlw	0
 12278  00E4D4  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 12279  00E4D6  0EFF               	movlw	-1
 12280  00E4D8  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 12281  00E4DA  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 12282                           
 12283                           ;os.c: 636: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 12284  00E4DC  C32E  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 12285  00E4E0  C32F  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 12286  00E4E4  0E00               	movlw	0
 12287  00E4E6  0100               	movlb	0	; () banked
 12288  00E4E8  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 12289  00E4EA  0EFF               	movlw	255
 12290  00E4EC  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 12291  00E4EE  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 12292  00E4F0  0100               	movlb	0	; () banked
 12293  00E4F2  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 12294  00E4F4  0100               	movlb	0	; () banked
 12295  00E4F6  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12296  00E4F8  0100               	movlb	0	; () banked
 12297  00E4FA  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 12298  00E4FC  0100               	movlb	0	; () banked
 12299  00E4FE  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12300  00E500  0100               	movlb	0	; () banked
 12301  00E502  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 12302  00E504  0100               	movlb	0	; () banked
 12303  00E506  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12304  00E508  0100               	movlb	0	; () banked
 12305  00E50A  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 12306  00E50C  0100               	movlb	0	; () banked
 12307  00E50E  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12308                           
 12309                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 12310  00E510  C329  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 12311  00E514  C32A  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 12312  00E518  0E00               	movlw	0
 12313  00E51A  0100               	movlb	0	; () banked
 12314  00E51C  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 12315  00E51E  0EFF               	movlw	255
 12316  00E520  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 12317  00E522  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 12318  00E524  0100               	movlb	0	; () banked
 12319  00E526  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 12320  00E528  0100               	movlb	0	; () banked
 12321  00E52A  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12322  00E52C  0100               	movlb	0	; () banked
 12323  00E52E  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 12324  00E530  0100               	movlb	0	; () banked
 12325  00E532  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12326  00E534  0100               	movlb	0	; () banked
 12327  00E536  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 12328  00E538  0100               	movlb	0	; () banked
 12329  00E53A  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12330  00E53C  0100               	movlb	0	; () banked
 12331  00E53E  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 12332  00E540  0100               	movlb	0	; () banked
 12333  00E542  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;os.c: 638: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 12337  00E544  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 12338  00E548  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 12339  00E54C  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 12340  00E550  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 12341  00E554  EE23  F02B         	lfsr	2,_calibrationParameters+43
 12342  00E558  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12343  00E55C  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12344  00E560  0100               	movlb	0	; () banked
 12345  00E562  0E00               	movlw	0
 12346  00E564  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12347  00E566  0EFF               	movlw	-1
 12348  00E568  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12349  00E56A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12350  00E56C  ECBC  F092         	call	___lmul	;wreg free
 12351  00E570  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 12352  00E574  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 12353  00E578  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 12354  00E57C  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 12355                           
 12356                           ;os.c: 639: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 12357  00E580  C32D  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 12358  00E584  0EFF               	movlw	-1
 12359  00E586  0100               	movlb	0	; () banked
 12360  00E588  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12361  00E58A  0100               	movlb	0	; () banked
 12362  00E58C  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 12363  00E58E  0100               	movlb	0	; () banked
 12364  00E590  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 12365  00E592  D006               	goto	u22500
 12366  00E594                     u22505:
 12367  00E594  0100               	movlb	0	; () banked
 12368  00E596  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12369  00E598  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12370  00E59A  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12371  00E59C  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12372  00E59E  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12373  00E5A0                     u22500:
 12374  00E5A0  0100               	movlb	0	; () banked
 12375  00E5A2  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 12376  00E5A4  D7F7               	goto	u22505
 12377                           
 12378                           ;os.c: 640: tmp += 1;
 12379  00E5A6  0E01               	movlw	1
 12380  00E5A8  0100               	movlb	0	; () banked
 12381  00E5AA  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12382  00E5AC  0E00               	movlw	0
 12383  00E5AE  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12384  00E5B0  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12385  00E5B2  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;os.c: 641: tmp >>= 1;
 12389  00E5B4  0100               	movlb	0	; () banked
 12390  00E5B6  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12391  00E5B8  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12392  00E5BA  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12393  00E5BC  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12394  00E5BE  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;os.c: 642: os.output_current = (int16_t) tmp;
 12398  00E5C0  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 12399  00E5C4  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 12400  00E5C8  0012               	return	
 12401  00E5CA                     __end_of_system_calculate_output_current:
 12402                           	opt stack 0
 12403                           tblptru	equ	0xFF8
 12404                           tblptrh	equ	0xFF7
 12405                           tblptrl	equ	0xFF6
 12406                           tablat	equ	0xFF5
 12407                           prodh	equ	0xFF4
 12408                           prodl	equ	0xFF3
 12409                           intcon	equ	0xFF2
 12410                           intcon2	equ	0xFF1
 12411                           intcon3	equ	0xFF0
 12412                           postinc0	equ	0xFEE
 12413                           wreg	equ	0xFE8
 12414                           postdec1	equ	0xFE5
 12415                           plusw1	equ	0xFE3
 12416                           fsr1h	equ	0xFE2
 12417                           fsr1l	equ	0xFE1
 12418                           indf2	equ	0xFDF
 12419                           postinc2	equ	0xFDE
 12420                           postdec2	equ	0xFDD
 12421                           plusw2	equ	0xFDB
 12422                           fsr2h	equ	0xFDA
 12423                           fsr2l	equ	0xFD9
 12424                           status	equ	0xFD8
 12425                           
 12426 ;; *************** function _system_calculate_input_voltage *****************
 12427 ;; Defined at:
 12428 ;;		line 570 in file "os.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;		None
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  tmp             4   16[BANK0 ] long 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12443 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12444 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12445 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12446 ;;Total ram usage:        8 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; Hardware stack levels required when called:   11
 12449 ;; This function calls:
 12450 ;;		___lmul
 12451 ;; This function is called by:
 12452 ;;		_main
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           	psect	text48
 12457  00FB28                     __ptext48:
 12458                           	opt stack 0
 12459  00FB28                     _system_calculate_input_voltage:
 12460                           	opt stack 19
 12461                           
 12462                           ;os.c: 572: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 12463                           
 12464                           ;incstack = 0
 12465  00FB28  0102               	movlb	2	; () banked
 12466  00FB2A  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 12467  00FB2C  0102               	movlb	2	; () banked
 12468  00FB2E  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 12469  00FB30  0100               	movlb	0	; () banked
 12470  00FB32  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 12471  00FB34  0102               	movlb	2	; () banked
 12472  00FB36  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 12473  00FB38  0102               	movlb	2	; () banked
 12474  00FB3A  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 12475  00FB3C  0100               	movlb	0	; () banked
 12476  00FB3E  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12477  00FB40  0102               	movlb	2	; () banked
 12478  00FB42  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 12479  00FB44  0100               	movlb	0	; () banked
 12480  00FB46  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12481  00FB48  0102               	movlb	2	; () banked
 12482  00FB4A  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 12483  00FB4C  0100               	movlb	0	; () banked
 12484  00FB4E  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12485  00FB50  0102               	movlb	2	; () banked
 12486  00FB52  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 12487  00FB54  0100               	movlb	0	; () banked
 12488  00FB56  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12489  00FB58  0102               	movlb	2	; () banked
 12490  00FB5A  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 12491  00FB5C  0100               	movlb	0	; () banked
 12492  00FB5E  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12493  00FB60  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 12494  00FB64  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 12495  00FB68  0100               	movlb	0	; () banked
 12496  00FB6A  0E00               	movlw	0
 12497  00FB6C  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 12498  00FB6E  0EFF               	movlw	-1
 12499  00FB70  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 12500  00FB72  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 12501                           
 12502                           ;os.c: 573: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 12503  00FB74  C305  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 12504  00FB78  C306  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 12505  00FB7C  0E00               	movlw	0
 12506  00FB7E  0100               	movlb	0	; () banked
 12507  00FB80  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 12508  00FB82  0EFF               	movlw	255
 12509  00FB84  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 12510  00FB86  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 12511  00FB88  0100               	movlb	0	; () banked
 12512  00FB8A  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 12513  00FB8C  0100               	movlb	0	; () banked
 12514  00FB8E  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12515  00FB90  0100               	movlb	0	; () banked
 12516  00FB92  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 12517  00FB94  0100               	movlb	0	; () banked
 12518  00FB96  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12519  00FB98  0100               	movlb	0	; () banked
 12520  00FB9A  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 12521  00FB9C  0100               	movlb	0	; () banked
 12522  00FB9E  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12523  00FBA0  0100               	movlb	0	; () banked
 12524  00FBA2  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 12525  00FBA4  0100               	movlb	0	; () banked
 12526  00FBA6  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;os.c: 574: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 12530  00FBA8  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 12531  00FBAC  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 12532  00FBB0  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 12533  00FBB4  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 12534  00FBB8  EE23  F007         	lfsr	2,_calibrationParameters+7
 12535  00FBBC  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12536  00FBC0  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12537  00FBC4  0100               	movlb	0	; () banked
 12538  00FBC6  0E00               	movlw	0
 12539  00FBC8  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12540  00FBCA  0EFF               	movlw	-1
 12541  00FBCC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12542  00FBCE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12543  00FBD0  ECBC  F092         	call	___lmul	;wreg free
 12544  00FBD4  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 12545  00FBD8  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 12546  00FBDC  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 12547  00FBE0  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 12548                           
 12549                           ;os.c: 575: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 12550  00FBE4  C309  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 12551  00FBE8  0EFF               	movlw	-1
 12552  00FBEA  0100               	movlb	0	; () banked
 12553  00FBEC  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12554  00FBEE  0100               	movlb	0	; () banked
 12555  00FBF0  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 12556  00FBF2  0100               	movlb	0	; () banked
 12557  00FBF4  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12558  00FBF6  D006               	goto	u22470
 12559  00FBF8                     u22475:
 12560  00FBF8  0100               	movlb	0	; () banked
 12561  00FBFA  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12562  00FBFC  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12563  00FBFE  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12564  00FC00  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12565  00FC02  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12566  00FC04                     u22470:
 12567  00FC04  0100               	movlb	0	; () banked
 12568  00FC06  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12569  00FC08  D7F7               	goto	u22475
 12570                           
 12571                           ;os.c: 576: tmp += 1;
 12572  00FC0A  0E01               	movlw	1
 12573  00FC0C  0100               	movlb	0	; () banked
 12574  00FC0E  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12575  00FC10  0E00               	movlw	0
 12576  00FC12  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12577  00FC14  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12578  00FC16  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;os.c: 577: tmp >>= 1;
 12582  00FC18  0100               	movlb	0	; () banked
 12583  00FC1A  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12584  00FC1C  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12585  00FC1E  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12586  00FC20  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12587  00FC22  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;os.c: 578: os.input_voltage = (int16_t) tmp;
 12591  00FC24  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 12592  00FC28  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 12593                           
 12594                           ; BSR set to: 0
 12595  00FC2C  0012               	return		;funcret
 12596  00FC2E                     __end_of_system_calculate_input_voltage:
 12597                           	opt stack 0
 12598                           tblptru	equ	0xFF8
 12599                           tblptrh	equ	0xFF7
 12600                           tblptrl	equ	0xFF6
 12601                           tablat	equ	0xFF5
 12602                           prodh	equ	0xFF4
 12603                           prodl	equ	0xFF3
 12604                           intcon	equ	0xFF2
 12605                           intcon2	equ	0xFF1
 12606                           intcon3	equ	0xFF0
 12607                           postinc0	equ	0xFEE
 12608                           wreg	equ	0xFE8
 12609                           postdec1	equ	0xFE5
 12610                           plusw1	equ	0xFE3
 12611                           fsr1h	equ	0xFE2
 12612                           fsr1l	equ	0xFE1
 12613                           indf2	equ	0xFDF
 12614                           postinc2	equ	0xFDE
 12615                           postdec2	equ	0xFDD
 12616                           plusw2	equ	0xFDB
 12617                           fsr2h	equ	0xFDA
 12618                           fsr2l	equ	0xFD9
 12619                           status	equ	0xFD8
 12620                           
 12621 ;; *************** function _system_calculate_input_current *****************
 12622 ;; Defined at:
 12623 ;;		line 604 in file "os.c"
 12624 ;; Parameters:    Size  Location     Type
 12625 ;;		None
 12626 ;; Auto vars:     Size  Location     Type
 12627 ;;  tmp             4   16[BANK0 ] long 
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  1    wreg      void 
 12630 ;; Registers used:
 12631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12638 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12639 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12640 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12641 ;;Total ram usage:        8 bytes
 12642 ;; Hardware stack levels used:    1
 12643 ;; Hardware stack levels required when called:   11
 12644 ;; This function calls:
 12645 ;;		___lmul
 12646 ;;		_buck_get_mode
 12647 ;; This function is called by:
 12648 ;;		_main
 12649 ;; This function uses a non-reentrant model
 12650 ;;
 12651                           
 12652                           	psect	text49
 12653  00E5CA                     __ptext49:
 12654                           	opt stack 0
 12655  00E5CA                     _system_calculate_input_current:
 12656                           	opt stack 19
 12657                           
 12658                           ;os.c: 606: int32_t tmp;
 12659                           ;os.c: 608: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;incstack = 0
 12663  00E5CA  EC78  F0A1         	call	_buck_get_mode	;wreg free
 12664  00E5CE  0900               	iorlw	0
 12665  00E5D0  B4D8               	btfsc	status,2,c
 12666  00E5D2  D005               	goto	l22713
 12667  00E5D4  EC78  F0A1         	call	_buck_get_mode	;wreg free
 12668  00E5D8  0A80               	xorlw	128
 12669  00E5DA  A4D8               	btfss	status,2,c
 12670  00E5DC  D006               	goto	l22715
 12671  00E5DE                     l22713:
 12672                           
 12673                           ;os.c: 609: {
 12674                           ;os.c: 610: os.input_current = 0;
 12675  00E5DE  0E00               	movlw	0
 12676  00E5E0  0102               	movlb	2	; () banked
 12677  00E5E2  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 12678  00E5E4  0E00               	movlw	0
 12679  00E5E6  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 12680                           
 12681                           ;os.c: 611: }
 12682  00E5E8  0012               	return	
 12683  00E5EA                     l22715:
 12684                           
 12685                           ;os.c: 612: else
 12686                           ;os.c: 613: {
 12687                           ;os.c: 614: tmp = (int32_t) (os.input_current_adc[0] + os.input_current_adc[1] + os.inpu
      +                          t_current_adc[2] + os.input_current_adc[3]);
 12688  00E5EA  0102               	movlb	2	; () banked
 12689  00E5EC  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 12690  00E5EE  0102               	movlb	2	; () banked
 12691  00E5F0  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 12692  00E5F2  0100               	movlb	0	; () banked
 12693  00E5F4  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 12694  00E5F6  0102               	movlb	2	; () banked
 12695  00E5F8  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 12696  00E5FA  0102               	movlb	2	; () banked
 12697  00E5FC  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 12698  00E5FE  0100               	movlb	0	; () banked
 12699  00E600  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12700  00E602  0102               	movlb	2	; () banked
 12701  00E604  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 12702  00E606  0100               	movlb	0	; () banked
 12703  00E608  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12704  00E60A  0102               	movlb	2	; () banked
 12705  00E60C  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 12706  00E60E  0100               	movlb	0	; () banked
 12707  00E610  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12708  00E612  0102               	movlb	2	; () banked
 12709  00E614  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 12710  00E616  0100               	movlb	0	; () banked
 12711  00E618  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12712  00E61A  0102               	movlb	2	; () banked
 12713  00E61C  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 12714  00E61E  0100               	movlb	0	; () banked
 12715  00E620  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12716  00E622  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 12717  00E626  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 12718  00E62A  0100               	movlb	0	; () banked
 12719  00E62C  0E00               	movlw	0
 12720  00E62E  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 12721  00E630  0EFF               	movlw	-1
 12722  00E632  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 12723  00E634  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 12724                           
 12725                           ;os.c: 615: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 12726  00E636  C322  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 12727  00E63A  C323  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 12728  00E63E  0E00               	movlw	0
 12729  00E640  0100               	movlb	0	; () banked
 12730  00E642  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12731  00E644  0EFF               	movlw	255
 12732  00E646  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12733  00E648  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12734  00E64A  0100               	movlb	0	; () banked
 12735  00E64C  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12736  00E64E  0100               	movlb	0	; () banked
 12737  00E650  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12738  00E652  0100               	movlb	0	; () banked
 12739  00E654  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12740  00E656  0100               	movlb	0	; () banked
 12741  00E658  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12742  00E65A  0100               	movlb	0	; () banked
 12743  00E65C  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12744  00E65E  0100               	movlb	0	; () banked
 12745  00E660  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12746  00E662  0100               	movlb	0	; () banked
 12747  00E664  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12748  00E666  0100               	movlb	0	; () banked
 12749  00E668  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12750                           
 12751                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 12752  00E66A  C31D  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 12753  00E66E  C31E  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 12754  00E672  0E00               	movlw	0
 12755  00E674  0100               	movlb	0	; () banked
 12756  00E676  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12757  00E678  0EFF               	movlw	255
 12758  00E67A  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12759  00E67C  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12760  00E67E  0100               	movlb	0	; () banked
 12761  00E680  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12762  00E682  0100               	movlb	0	; () banked
 12763  00E684  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12764  00E686  0100               	movlb	0	; () banked
 12765  00E688  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12766  00E68A  0100               	movlb	0	; () banked
 12767  00E68C  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12768  00E68E  0100               	movlb	0	; () banked
 12769  00E690  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12770  00E692  0100               	movlb	0	; () banked
 12771  00E694  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12772  00E696  0100               	movlb	0	; () banked
 12773  00E698  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12774  00E69A  0100               	movlb	0	; () banked
 12775  00E69C  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;os.c: 617: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 12779  00E69E  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 12780  00E6A2  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 12781  00E6A6  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 12782  00E6AA  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 12783  00E6AE  EE23  F01F         	lfsr	2,_calibrationParameters+31
 12784  00E6B2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12785  00E6B6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12786  00E6BA  0100               	movlb	0	; () banked
 12787  00E6BC  0E00               	movlw	0
 12788  00E6BE  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12789  00E6C0  0EFF               	movlw	-1
 12790  00E6C2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12791  00E6C4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12792  00E6C6  ECBC  F092         	call	___lmul	;wreg free
 12793  00E6CA  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 12794  00E6CE  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 12795  00E6D2  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 12796  00E6D6  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 12797                           
 12798                           ;os.c: 618: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 12799  00E6DA  C321  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 12800  00E6DE  0EFF               	movlw	-1
 12801  00E6E0  0100               	movlb	0	; () banked
 12802  00E6E2  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12803  00E6E4  0100               	movlb	0	; () banked
 12804  00E6E6  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 12805  00E6E8  0100               	movlb	0	; () banked
 12806  00E6EA  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12807  00E6EC  D006               	goto	u22630
 12808  00E6EE                     u22635:
 12809  00E6EE  0100               	movlb	0	; () banked
 12810  00E6F0  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12811  00E6F2  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12812  00E6F4  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12813  00E6F6  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12814  00E6F8  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12815  00E6FA                     u22630:
 12816  00E6FA  0100               	movlb	0	; () banked
 12817  00E6FC  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 12818  00E6FE  D7F7               	goto	u22635
 12819                           
 12820                           ;os.c: 619: tmp += 1;
 12821  00E700  0E01               	movlw	1
 12822  00E702  0100               	movlb	0	; () banked
 12823  00E704  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12824  00E706  0E00               	movlw	0
 12825  00E708  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12826  00E70A  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12827  00E70C  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;os.c: 620: tmp >>= 1;
 12831  00E70E  0100               	movlb	0	; () banked
 12832  00E710  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12833  00E712  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12834  00E714  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12835  00E716  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12836  00E718  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;os.c: 621: os.input_current = (int16_t) tmp;
 12840  00E71A  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 12841  00E71E  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 12842  00E722  0012               	return	
 12843  00E724                     __end_of_system_calculate_input_current:
 12844                           	opt stack 0
 12845                           tblptru	equ	0xFF8
 12846                           tblptrh	equ	0xFF7
 12847                           tblptrl	equ	0xFF6
 12848                           tablat	equ	0xFF5
 12849                           prodh	equ	0xFF4
 12850                           prodl	equ	0xFF3
 12851                           intcon	equ	0xFF2
 12852                           intcon2	equ	0xFF1
 12853                           intcon3	equ	0xFF0
 12854                           postinc0	equ	0xFEE
 12855                           wreg	equ	0xFE8
 12856                           postdec1	equ	0xFE5
 12857                           plusw1	equ	0xFE3
 12858                           fsr1h	equ	0xFE2
 12859                           fsr1l	equ	0xFE1
 12860                           indf2	equ	0xFDF
 12861                           postinc2	equ	0xFDE
 12862                           postdec2	equ	0xFDD
 12863                           plusw2	equ	0xFDB
 12864                           fsr2h	equ	0xFDA
 12865                           fsr2l	equ	0xFD9
 12866                           status	equ	0xFD8
 12867                           
 12868 ;; *************** function _log_write_to_disk *****************
 12869 ;; Defined at:
 12870 ;;		line 199 in file "log.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;		None
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;  log_entry      32    1[BANK1 ] struct .
 12875 ;;  file_number     1    0[BANK1 ] unsigned char 
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  1    wreg      void 
 12878 ;; Registers used:
 12879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12886 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12888 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12889 ;;Total ram usage:       33 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; Hardware stack levels required when called:   17
 12892 ;; This function calls:
 12893 ;;		_fat_append_to_file
 12894 ;;		_fat_create_file
 12895 ;;		_fat_find_file
 12896 ;;		_log_generate_entry
 12897 ;; This function is called by:
 12898 ;;		_main
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text50
 12903  011CD6                     __ptext50:
 12904                           	opt stack 0
 12905  011CD6                     _log_write_to_disk:
 12906                           	opt stack 13
 12907                           
 12908                           ;log.c: 201: uint8_t file_number;
 12909                           ;log.c: 202: logEntry_t log_entry;
 12910                           ;log.c: 205: log_generate_entry(&log_entry);
 12911                           
 12912                           ;incstack = 0
 12913  011CD6  0E01               	movlw	low log_write_to_disk@log_entry
 12914  011CD8  0100               	movlb	0	; () banked
 12915  011CDA  6F78               	movwf	log_generate_entry@log_entry& (0+255),b
 12916  011CDC  0E01               	movlw	high log_write_to_disk@log_entry
 12917  011CDE  0100               	movlb	0	; () banked
 12918  011CE0  6F79               	movwf	(log_generate_entry@log_entry+1)& (0+255),b
 12919  011CE2  EC62  F058         	call	_log_generate_entry	;wreg free
 12920                           
 12921                           ;log.c: 208: file_number = fat_find_file(filename, extension);
 12922  011CE6  0EEB               	movlw	low _filename
 12923  011CE8  0100               	movlb	0	; () banked
 12924  011CEA  6F87               	movwf	fat_find_file@name& (0+255),b
 12925  011CEC  0E02               	movlw	high _filename
 12926  011CEE  0100               	movlb	0	; () banked
 12927  011CF0  6F88               	movwf	(fat_find_file@name+1)& (0+255),b
 12928  011CF2  0EF4               	movlw	low _extension
 12929  011CF4  0100               	movlb	0	; () banked
 12930  011CF6  6F89               	movwf	fat_find_file@extension& (0+255),b
 12931  011CF8  0E02               	movlw	high _extension
 12932  011CFA  0100               	movlb	0	; () banked
 12933  011CFC  6F8A               	movwf	(fat_find_file@extension+1)& (0+255),b
 12934  011CFE  EC20  F080         	call	_fat_find_file	;wreg free
 12935  011D02  0101               	movlb	1	; () banked
 12936  011D04  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12937                           
 12938                           ; BSR set to: 1
 12939                           ;log.c: 209: if(file_number==0xFF)
 12940  011D06  0101               	movlb	1	; () banked
 12941  011D08  2900               	incf	log_write_to_disk@file_number& (0+255),w,b
 12942  011D0A  A4D8               	btfss	status,2,c
 12943  011D0C  D019               	goto	l22707
 12944                           
 12945                           ; BSR set to: 1
 12946                           ;log.c: 210: {
 12947                           ;log.c: 212: file_number = fat_create_file(filename, extension, 0);
 12948  011D0E  0EEB               	movlw	low _filename
 12949  011D10  0100               	movlb	0	; () banked
 12950  011D12  6F9B               	movwf	fat_create_file@name& (0+255),b
 12951  011D14  0E02               	movlw	high _filename
 12952  011D16  0100               	movlb	0	; () banked
 12953  011D18  6F9C               	movwf	(fat_create_file@name+1)& (0+255),b
 12954  011D1A  0EF4               	movlw	low _extension
 12955  011D1C  0100               	movlb	0	; () banked
 12956  011D1E  6F9D               	movwf	fat_create_file@extension& (0+255),b
 12957  011D20  0E02               	movlw	high _extension
 12958  011D22  0100               	movlb	0	; () banked
 12959  011D24  6F9E               	movwf	(fat_create_file@extension+1)& (0+255),b
 12960  011D26  0E00               	movlw	0
 12961  011D28  0100               	movlb	0	; () banked
 12962  011D2A  6F9F               	movwf	fat_create_file@size& (0+255),b
 12963  011D2C  0E00               	movlw	0
 12964  011D2E  6FA0               	movwf	(fat_create_file@size+1)& (0+255),b
 12965  011D30  0E00               	movlw	0
 12966  011D32  6FA1               	movwf	(fat_create_file@size+2)& (0+255),b
 12967  011D34  0E00               	movlw	0
 12968  011D36  6FA2               	movwf	(fat_create_file@size+3)& (0+255),b
 12969  011D38  EC52  F06D         	call	_fat_create_file	;wreg free
 12970  011D3C  0101               	movlb	1	; () banked
 12971  011D3E  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12972  011D40                     l22707:
 12973                           
 12974                           ; BSR set to: 1
 12975                           ;log.c: 213: }
 12976                           ;log.c: 216: fat_append_to_file(file_number, sizeof(logEntry_t), &log_entry);
 12977  011D40  0E00               	movlw	0
 12978  011D42  0100               	movlb	0	; () banked
 12979  011D44  6F92               	movwf	(fat_append_to_file@number_of_bytes+1)& (0+255),b
 12980  011D46  0E20               	movlw	32
 12981  011D48  6F91               	movwf	fat_append_to_file@number_of_bytes& (0+255),b
 12982  011D4A  0E01               	movlw	low log_write_to_disk@log_entry
 12983  011D4C  0100               	movlb	0	; () banked
 12984  011D4E  6F93               	movwf	fat_append_to_file@data& (0+255),b
 12985  011D50  0E01               	movlw	high log_write_to_disk@log_entry
 12986  011D52  0100               	movlb	0	; () banked
 12987  011D54  6F94               	movwf	(fat_append_to_file@data+1)& (0+255),b
 12988  011D56  0101               	movlb	1	; () banked
 12989  011D58  5100               	movf	log_write_to_disk@file_number& (0+255),w,b
 12990  011D5A  EC5F  F062         	call	_fat_append_to_file
 12991  011D5E  0012               	return		;funcret
 12992  011D60                     __end_of_log_write_to_disk:
 12993                           	opt stack 0
 12994                           tblptru	equ	0xFF8
 12995                           tblptrh	equ	0xFF7
 12996                           tblptrl	equ	0xFF6
 12997                           tablat	equ	0xFF5
 12998                           prodh	equ	0xFF4
 12999                           prodl	equ	0xFF3
 13000                           intcon	equ	0xFF2
 13001                           intcon2	equ	0xFF1
 13002                           intcon3	equ	0xFF0
 13003                           postinc0	equ	0xFEE
 13004                           wreg	equ	0xFE8
 13005                           postdec1	equ	0xFE5
 13006                           plusw1	equ	0xFE3
 13007                           fsr1h	equ	0xFE2
 13008                           fsr1l	equ	0xFE1
 13009                           indf2	equ	0xFDF
 13010                           postinc2	equ	0xFDE
 13011                           postdec2	equ	0xFDD
 13012                           plusw2	equ	0xFDB
 13013                           fsr2h	equ	0xFDA
 13014                           fsr2l	equ	0xFD9
 13015                           status	equ	0xFD8
 13016                           
 13017 ;; *************** function _log_generate_entry *****************
 13018 ;; Defined at:
 13019 ;;		line 174 in file "log.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  log_entry       2   24[BANK0 ] PTR struct .
 13022 ;;		 -> log_write_to_disk@log_entry(32), 
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;		None
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  1    wreg      void 
 13027 ;; Registers used:
 13028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13037 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13038 ;;Total ram usage:        4 bytes
 13039 ;; Hardware stack levels used:    1
 13040 ;; Hardware stack levels required when called:   13
 13041 ;; This function calls:
 13042 ;;		___aldiv
 13043 ;;		___lldiv
 13044 ;;		__get_checksum
 13045 ;;		__get_dateTime
 13046 ;;		__get_temperature
 13047 ;; This function is called by:
 13048 ;;		_log_write_to_disk
 13049 ;; This function uses a non-reentrant model
 13050 ;;
 13051                           
 13052                           	psect	text51
 13053  00B0C4                     __ptext51:
 13054                           	opt stack 0
 13055  00B0C4                     _log_generate_entry:
 13056                           	opt stack 16
 13057                           
 13058                           ;log.c: 176: log_entry->dateTime = _get_dateTime();
 13059                           
 13060                           ;incstack = 0
 13061  00B0C4  EC4D  F06E         	call	__get_dateTime	;wreg free
 13062  00B0C8  C078  FFD9         	movff	log_generate_entry@log_entry,fsr2l
 13063  00B0CC  C079  FFDA         	movff	log_generate_entry@log_entry+1,fsr2h
 13064  00B0D0  0100               	movlb	0	; () banked
 13065  00B0D2  C064  FFDE         	movff	?__get_dateTime,postinc2
 13066  00B0D6  0100               	movlb	0	; () banked
 13067  00B0D8  C065  FFDE         	movff	?__get_dateTime+1,postinc2
 13068  00B0DC  0100               	movlb	0	; () banked
 13069  00B0DE  C066  FFDE         	movff	?__get_dateTime+2,postinc2
 13070  00B0E2  0100               	movlb	0	; () banked
 13071  00B0E4  C067  FFDE         	movff	?__get_dateTime+3,postinc2
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;log.c: 177: log_entry->inputVoltage = inputVoltageSum / averageCount;
 13075  00B0E8  C29A  F060         	movff	_inputVoltageSum,___lldiv@dividend
 13076  00B0EC  C29B  F061         	movff	_inputVoltageSum+1,___lldiv@dividend+1
 13077  00B0F0  C29C  F062         	movff	_inputVoltageSum+2,___lldiv@dividend+2
 13078  00B0F4  C29D  F063         	movff	_inputVoltageSum+3,___lldiv@dividend+3
 13079  00B0F8  C016  F064         	movff	_averageCount,___lldiv@divisor
 13080  00B0FC  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13081  00B100  0100               	movlb	0	; () banked
 13082  00B102  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13083  00B104  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13084  00B106  EC71  F088         	call	___lldiv	;wreg free
 13085  00B10A  0100               	movlb	0	; () banked
 13086  00B10C  EE20 F004          	lfsr	2,4
 13087  00B110  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13088  00B112  26D9               	addwf	fsr2l,f,c
 13089  00B114  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13090  00B116  22DA               	addwfc	fsr2h,f,c
 13091  00B118  0100               	movlb	0	; () banked
 13092  00B11A  C060  FFDE         	movff	?___lldiv,postinc2
 13093  00B11E  0100               	movlb	0	; () banked
 13094  00B120  C061  FFDD         	movff	?___lldiv+1,postdec2
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;log.c: 178: log_entry->inputCurrent = inputCurrentSum / averageCount;
 13098  00B124  C296  F060         	movff	_inputCurrentSum,___lldiv@dividend
 13099  00B128  C297  F061         	movff	_inputCurrentSum+1,___lldiv@dividend+1
 13100  00B12C  C298  F062         	movff	_inputCurrentSum+2,___lldiv@dividend+2
 13101  00B130  C299  F063         	movff	_inputCurrentSum+3,___lldiv@dividend+3
 13102  00B134  C016  F064         	movff	_averageCount,___lldiv@divisor
 13103  00B138  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13104  00B13C  0100               	movlb	0	; () banked
 13105  00B13E  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13106  00B140  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13107  00B142  EC71  F088         	call	___lldiv	;wreg free
 13108  00B146  0100               	movlb	0	; () banked
 13109  00B148  EE20 F006          	lfsr	2,6
 13110  00B14C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13111  00B14E  26D9               	addwf	fsr2l,f,c
 13112  00B150  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13113  00B152  22DA               	addwfc	fsr2h,f,c
 13114  00B154  0100               	movlb	0	; () banked
 13115  00B156  C060  FFDE         	movff	?___lldiv,postinc2
 13116  00B15A  0100               	movlb	0	; () banked
 13117  00B15C  C061  FFDD         	movff	?___lldiv+1,postdec2
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;log.c: 179: log_entry->outputVoltage = outputVoltageSum / averageCount;
 13121  00B160  C292  F060         	movff	_outputVoltageSum,___lldiv@dividend
 13122  00B164  C293  F061         	movff	_outputVoltageSum+1,___lldiv@dividend+1
 13123  00B168  C294  F062         	movff	_outputVoltageSum+2,___lldiv@dividend+2
 13124  00B16C  C295  F063         	movff	_outputVoltageSum+3,___lldiv@dividend+3
 13125  00B170  C016  F064         	movff	_averageCount,___lldiv@divisor
 13126  00B174  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13127  00B178  0100               	movlb	0	; () banked
 13128  00B17A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13129  00B17C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13130  00B17E  EC71  F088         	call	___lldiv	;wreg free
 13131  00B182  0100               	movlb	0	; () banked
 13132  00B184  EE20 F008          	lfsr	2,8
 13133  00B188  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13134  00B18A  26D9               	addwf	fsr2l,f,c
 13135  00B18C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13136  00B18E  22DA               	addwfc	fsr2h,f,c
 13137  00B190  0100               	movlb	0	; () banked
 13138  00B192  C060  FFDE         	movff	?___lldiv,postinc2
 13139  00B196  0100               	movlb	0	; () banked
 13140  00B198  C061  FFDD         	movff	?___lldiv+1,postdec2
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;log.c: 180: log_entry->outputCurrent = outputCurrentSum / averageCount;
 13144  00B19C  C28E  F060         	movff	_outputCurrentSum,___lldiv@dividend
 13145  00B1A0  C28F  F061         	movff	_outputCurrentSum+1,___lldiv@dividend+1
 13146  00B1A4  C290  F062         	movff	_outputCurrentSum+2,___lldiv@dividend+2
 13147  00B1A8  C291  F063         	movff	_outputCurrentSum+3,___lldiv@dividend+3
 13148  00B1AC  C016  F064         	movff	_averageCount,___lldiv@divisor
 13149  00B1B0  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13150  00B1B4  0100               	movlb	0	; () banked
 13151  00B1B6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13152  00B1B8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13153  00B1BA  EC71  F088         	call	___lldiv	;wreg free
 13154  00B1BE  0100               	movlb	0	; () banked
 13155  00B1C0  EE20 F00A          	lfsr	2,10
 13156  00B1C4  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13157  00B1C6  26D9               	addwf	fsr2l,f,c
 13158  00B1C8  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13159  00B1CA  22DA               	addwfc	fsr2h,f,c
 13160  00B1CC  0100               	movlb	0	; () banked
 13161  00B1CE  C060  FFDE         	movff	?___lldiv,postinc2
 13162  00B1D2  0100               	movlb	0	; () banked
 13163  00B1D4  C061  FFDD         	movff	?___lldiv+1,postdec2
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;log.c: 181: log_entry->inputPower = inputPowerSum / averageCount;
 13167  00B1D8  C28A  F060         	movff	_inputPowerSum,___lldiv@dividend
 13168  00B1DC  C28B  F061         	movff	_inputPowerSum+1,___lldiv@dividend+1
 13169  00B1E0  C28C  F062         	movff	_inputPowerSum+2,___lldiv@dividend+2
 13170  00B1E4  C28D  F063         	movff	_inputPowerSum+3,___lldiv@dividend+3
 13171  00B1E8  C016  F064         	movff	_averageCount,___lldiv@divisor
 13172  00B1EC  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13173  00B1F0  0100               	movlb	0	; () banked
 13174  00B1F2  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13175  00B1F4  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13176  00B1F6  EC71  F088         	call	___lldiv	;wreg free
 13177  00B1FA  0100               	movlb	0	; () banked
 13178  00B1FC  EE20 F00C          	lfsr	2,12
 13179  00B200  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13180  00B202  26D9               	addwf	fsr2l,f,c
 13181  00B204  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13182  00B206  22DA               	addwfc	fsr2h,f,c
 13183  00B208  0100               	movlb	0	; () banked
 13184  00B20A  C060  FFDE         	movff	?___lldiv,postinc2
 13185  00B20E  0100               	movlb	0	; () banked
 13186  00B210  C061  FFDD         	movff	?___lldiv+1,postdec2
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;log.c: 182: log_entry->outputPower = outputPowerSum / averageCount;
 13190  00B214  C286  F060         	movff	_outputPowerSum,___lldiv@dividend
 13191  00B218  C287  F061         	movff	_outputPowerSum+1,___lldiv@dividend+1
 13192  00B21C  C288  F062         	movff	_outputPowerSum+2,___lldiv@dividend+2
 13193  00B220  C289  F063         	movff	_outputPowerSum+3,___lldiv@dividend+3
 13194  00B224  C016  F064         	movff	_averageCount,___lldiv@divisor
 13195  00B228  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13196  00B22C  0100               	movlb	0	; () banked
 13197  00B22E  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13198  00B230  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13199  00B232  EC71  F088         	call	___lldiv	;wreg free
 13200  00B236  0100               	movlb	0	; () banked
 13201  00B238  EE20 F00E          	lfsr	2,14
 13202  00B23C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13203  00B23E  26D9               	addwf	fsr2l,f,c
 13204  00B240  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13205  00B242  22DA               	addwfc	fsr2h,f,c
 13206  00B244  0100               	movlb	0	; () banked
 13207  00B246  C060  FFDE         	movff	?___lldiv,postinc2
 13208  00B24A  0100               	movlb	0	; () banked
 13209  00B24C  C061  FFDD         	movff	?___lldiv+1,postdec2
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;log.c: 183: log_entry->inputCapacity = (inputCapacitySum+500) / 1000;
 13213  00B250  0EF4               	movlw	244
 13214  00B252  0102               	movlb	2	; () banked
 13215  00B254  2582               	addwf	_inputCapacitySum& (0+255),w,b
 13216  00B256  0100               	movlb	0	; () banked
 13217  00B258  6F60               	movwf	___lldiv@dividend& (0+255),b
 13218  00B25A  0E01               	movlw	1
 13219  00B25C  0102               	movlb	2	; () banked
 13220  00B25E  2183               	addwfc	(_inputCapacitySum+1)& (0+255),w,b
 13221  00B260  0100               	movlb	0	; () banked
 13222  00B262  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 13223  00B264  0E00               	movlw	0
 13224  00B266  0102               	movlb	2	; () banked
 13225  00B268  2184               	addwfc	(_inputCapacitySum+2)& (0+255),w,b
 13226  00B26A  0100               	movlb	0	; () banked
 13227  00B26C  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 13228  00B26E  0E00               	movlw	0
 13229  00B270  0102               	movlb	2	; () banked
 13230  00B272  2185               	addwfc	(_inputCapacitySum+3)& (0+255),w,b
 13231  00B274  0100               	movlb	0	; () banked
 13232  00B276  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 13233  00B278  0EE8               	movlw	232
 13234  00B27A  0100               	movlb	0	; () banked
 13235  00B27C  6F64               	movwf	___lldiv@divisor& (0+255),b
 13236  00B27E  0E03               	movlw	3
 13237  00B280  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13238  00B282  0E00               	movlw	0
 13239  00B284  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13240  00B286  0E00               	movlw	0
 13241  00B288  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13242  00B28A  EC71  F088         	call	___lldiv	;wreg free
 13243  00B28E  0100               	movlb	0	; () banked
 13244  00B290  EE20 F010          	lfsr	2,16
 13245  00B294  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13246  00B296  26D9               	addwf	fsr2l,f,c
 13247  00B298  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13248  00B29A  22DA               	addwfc	fsr2h,f,c
 13249  00B29C  0100               	movlb	0	; () banked
 13250  00B29E  C060  FFDE         	movff	?___lldiv,postinc2
 13251  00B2A2  0100               	movlb	0	; () banked
 13252  00B2A4  C061  FFDD         	movff	?___lldiv+1,postdec2
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;log.c: 184: log_entry->outputCapacity = (outputCapacitySum+500) / 1000;
 13256  00B2A8  0EF4               	movlw	244
 13257  00B2AA  0102               	movlb	2	; () banked
 13258  00B2AC  257E               	addwf	_outputCapacitySum& (0+255),w,b
 13259  00B2AE  0100               	movlb	0	; () banked
 13260  00B2B0  6F60               	movwf	___lldiv@dividend& (0+255),b
 13261  00B2B2  0E01               	movlw	1
 13262  00B2B4  0102               	movlb	2	; () banked
 13263  00B2B6  217F               	addwfc	(_outputCapacitySum+1)& (0+255),w,b
 13264  00B2B8  0100               	movlb	0	; () banked
 13265  00B2BA  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 13266  00B2BC  0E00               	movlw	0
 13267  00B2BE  0102               	movlb	2	; () banked
 13268  00B2C0  2180               	addwfc	(_outputCapacitySum+2)& (0+255),w,b
 13269  00B2C2  0100               	movlb	0	; () banked
 13270  00B2C4  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 13271  00B2C6  0E00               	movlw	0
 13272  00B2C8  0102               	movlb	2	; () banked
 13273  00B2CA  2181               	addwfc	(_outputCapacitySum+3)& (0+255),w,b
 13274  00B2CC  0100               	movlb	0	; () banked
 13275  00B2CE  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 13276  00B2D0  0EE8               	movlw	232
 13277  00B2D2  0100               	movlb	0	; () banked
 13278  00B2D4  6F64               	movwf	___lldiv@divisor& (0+255),b
 13279  00B2D6  0E03               	movlw	3
 13280  00B2D8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13281  00B2DA  0E00               	movlw	0
 13282  00B2DC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13283  00B2DE  0E00               	movlw	0
 13284  00B2E0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13285  00B2E2  EC71  F088         	call	___lldiv	;wreg free
 13286  00B2E6  0100               	movlb	0	; () banked
 13287  00B2E8  EE20 F012          	lfsr	2,18
 13288  00B2EC  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13289  00B2EE  26D9               	addwf	fsr2l,f,c
 13290  00B2F0  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13291  00B2F2  22DA               	addwfc	fsr2h,f,c
 13292  00B2F4  0100               	movlb	0	; () banked
 13293  00B2F6  C060  FFDE         	movff	?___lldiv,postinc2
 13294  00B2FA  0100               	movlb	0	; () banked
 13295  00B2FC  C061  FFDD         	movff	?___lldiv+1,postdec2
 13296                           
 13297                           ; BSR set to: 0
 13298                           ;log.c: 185: log_entry->temperatureOnboard = _get_temperature(temperatureOnboardSum/aver
      +                          ageCount);
 13299  00B300  0100               	movlb	0	; () banked
 13300  00B302  EE20 F014          	lfsr	2,20
 13301  00B306  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13302  00B308  26D9               	addwf	fsr2l,f,c
 13303  00B30A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13304  00B30C  22DA               	addwfc	fsr2h,f,c
 13305  00B30E  C27A  F060         	movff	_temperatureOnboardSum,___aldiv@dividend
 13306  00B312  C27B  F061         	movff	_temperatureOnboardSum+1,___aldiv@dividend+1
 13307  00B316  C27C  F062         	movff	_temperatureOnboardSum+2,___aldiv@dividend+2
 13308  00B31A  C27D  F063         	movff	_temperatureOnboardSum+3,___aldiv@dividend+3
 13309  00B31E  C016  F064         	movff	_averageCount,___aldiv@divisor
 13310  00B322  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 13311  00B326  0100               	movlb	0	; () banked
 13312  00B328  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 13313  00B32A  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 13314  00B32C  ECEC  F07A         	call	___aldiv	;wreg free
 13315  00B330  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 13316  00B334  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 13317  00B338  EC58  F09D         	call	__get_temperature	;wreg free
 13318  00B33C  6EDF               	movwf	indf2,c
 13319                           
 13320                           ;log.c: 186: log_entry->temperatureExternal1 = _get_temperature(temperatureExternal1Sum/
      +                          averageCount);
 13321  00B33E  0100               	movlb	0	; () banked
 13322  00B340  EE20 F015          	lfsr	2,21
 13323  00B344  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13324  00B346  26D9               	addwf	fsr2l,f,c
 13325  00B348  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13326  00B34A  22DA               	addwfc	fsr2h,f,c
 13327  00B34C  C276  F060         	movff	_temperatureExternal1Sum,___aldiv@dividend
 13328  00B350  C277  F061         	movff	_temperatureExternal1Sum+1,___aldiv@dividend+1
 13329  00B354  C278  F062         	movff	_temperatureExternal1Sum+2,___aldiv@dividend+2
 13330  00B358  C279  F063         	movff	_temperatureExternal1Sum+3,___aldiv@dividend+3
 13331  00B35C  C016  F064         	movff	_averageCount,___aldiv@divisor
 13332  00B360  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 13333  00B364  0100               	movlb	0	; () banked
 13334  00B366  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 13335  00B368  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 13336  00B36A  ECEC  F07A         	call	___aldiv	;wreg free
 13337  00B36E  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 13338  00B372  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 13339  00B376  EC58  F09D         	call	__get_temperature	;wreg free
 13340  00B37A  6EDF               	movwf	indf2,c
 13341                           
 13342                           ;log.c: 187: log_entry->temperatureExternal2 = _get_temperature(temperatureExternal2Sum/
      +                          averageCount);
 13343  00B37C  0100               	movlb	0	; () banked
 13344  00B37E  EE20 F016          	lfsr	2,22
 13345  00B382  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13346  00B384  26D9               	addwf	fsr2l,f,c
 13347  00B386  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13348  00B388  22DA               	addwfc	fsr2h,f,c
 13349  00B38A  C272  F060         	movff	_temperatureExternal2Sum,___aldiv@dividend
 13350  00B38E  C273  F061         	movff	_temperatureExternal2Sum+1,___aldiv@dividend+1
 13351  00B392  C274  F062         	movff	_temperatureExternal2Sum+2,___aldiv@dividend+2
 13352  00B396  C275  F063         	movff	_temperatureExternal2Sum+3,___aldiv@dividend+3
 13353  00B39A  C016  F064         	movff	_averageCount,___aldiv@divisor
 13354  00B39E  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 13355  00B3A2  0100               	movlb	0	; () banked
 13356  00B3A4  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 13357  00B3A6  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 13358  00B3A8  ECEC  F07A         	call	___aldiv	;wreg free
 13359  00B3AC  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 13360  00B3B0  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 13361  00B3B4  EC58  F09D         	call	__get_temperature	;wreg free
 13362  00B3B8  6EDF               	movwf	indf2,c
 13363                           
 13364                           ;log.c: 188: log_entry->chargerOnTime = chargerOnTime >> 1;
 13365  00B3BA  0100               	movlb	0	; () banked
 13366  00B3BC  EE20 F017          	lfsr	2,23
 13367  00B3C0  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13368  00B3C2  26D9               	addwf	fsr2l,f,c
 13369  00B3C4  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13370  00B3C6  22DA               	addwfc	fsr2h,f,c
 13371  00B3C8  90D8               	bcf	status,0,c
 13372  00B3CA  0102               	movlb	2	; () banked
 13373  00B3CC  31B1               	rrcf	(_chargerOnTime+1)& (0+255),w,b
 13374  00B3CE  0100               	movlb	0	; () banked
 13375  00B3D0  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 13376  00B3D2  0102               	movlb	2	; () banked
 13377  00B3D4  31B0               	rrcf	_chargerOnTime& (0+255),w,b
 13378  00B3D6  0100               	movlb	0	; () banked
 13379  00B3D8  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13380  00B3DA  0100               	movlb	0	; () banked
 13381  00B3DC  517A               	movf	??_log_generate_entry& (0+255),w,b
 13382  00B3DE  6EDF               	movwf	indf2,c
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;log.c: 189: log_entry->lowPowerTime = lowPowerTime >> 1;
 13386  00B3E0  0100               	movlb	0	; () banked
 13387  00B3E2  EE20 F018          	lfsr	2,24
 13388  00B3E6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13389  00B3E8  26D9               	addwf	fsr2l,f,c
 13390  00B3EA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13391  00B3EC  22DA               	addwfc	fsr2h,f,c
 13392  00B3EE  90D8               	bcf	status,0,c
 13393  00B3F0  0102               	movlb	2	; () banked
 13394  00B3F2  31AF               	rrcf	(_lowPowerTime+1)& (0+255),w,b
 13395  00B3F4  0100               	movlb	0	; () banked
 13396  00B3F6  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 13397  00B3F8  0102               	movlb	2	; () banked
 13398  00B3FA  31AE               	rrcf	_lowPowerTime& (0+255),w,b
 13399  00B3FC  0100               	movlb	0	; () banked
 13400  00B3FE  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13401  00B400  0100               	movlb	0	; () banked
 13402  00B402  517A               	movf	??_log_generate_entry& (0+255),w,b
 13403  00B404  6EDF               	movwf	indf2,c
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;log.c: 190: log_entry->unused[0] = 0x00;
 13407  00B406  0100               	movlb	0	; () banked
 13408  00B408  EE20 F019          	lfsr	2,25
 13409  00B40C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13410  00B40E  26D9               	addwf	fsr2l,f,c
 13411  00B410  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13412  00B412  22DA               	addwfc	fsr2h,f,c
 13413  00B414  0E00               	movlw	0
 13414  00B416  6EDF               	movwf	indf2,c
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;log.c: 191: log_entry->unused[1] = 0x00;
 13418  00B418  0100               	movlb	0	; () banked
 13419  00B41A  EE20 F01A          	lfsr	2,26
 13420  00B41E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13421  00B420  26D9               	addwf	fsr2l,f,c
 13422  00B422  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13423  00B424  22DA               	addwfc	fsr2h,f,c
 13424  00B426  0E00               	movlw	0
 13425  00B428  6EDF               	movwf	indf2,c
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;log.c: 192: log_entry->unused[2] = 0x00;
 13429  00B42A  0100               	movlb	0	; () banked
 13430  00B42C  EE20 F01B          	lfsr	2,27
 13431  00B430  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13432  00B432  26D9               	addwf	fsr2l,f,c
 13433  00B434  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13434  00B436  22DA               	addwfc	fsr2h,f,c
 13435  00B438  0E00               	movlw	0
 13436  00B43A  6EDF               	movwf	indf2,c
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;log.c: 193: log_entry->unused[3] = 0x00;
 13440  00B43C  0100               	movlb	0	; () banked
 13441  00B43E  EE20 F01C          	lfsr	2,28
 13442  00B442  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13443  00B444  26D9               	addwf	fsr2l,f,c
 13444  00B446  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13445  00B448  22DA               	addwfc	fsr2h,f,c
 13446  00B44A  0E00               	movlw	0
 13447  00B44C  6EDF               	movwf	indf2,c
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;log.c: 194: log_entry->unused[4] = 0x00;
 13451  00B44E  0100               	movlb	0	; () banked
 13452  00B450  EE20 F01D          	lfsr	2,29
 13453  00B454  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13454  00B456  26D9               	addwf	fsr2l,f,c
 13455  00B458  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13456  00B45A  22DA               	addwfc	fsr2h,f,c
 13457  00B45C  0E00               	movlw	0
 13458  00B45E  6EDF               	movwf	indf2,c
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;log.c: 195: log_entry->status = status;
 13462  00B460  0100               	movlb	0	; () banked
 13463  00B462  EE20 F01E          	lfsr	2,30
 13464  00B466  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13465  00B468  26D9               	addwf	fsr2l,f,c
 13466  00B46A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13467  00B46C  22DA               	addwfc	fsr2h,f,c
 13468  00B46E  C1F0  FFDF         	movff	_status,indf2
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;log.c: 196: log_entry->checksum = _get_checksum(log_entry);
 13472  00B472  C078  F060         	movff	log_generate_entry@log_entry,__get_checksum@log_entry
 13473  00B476  C079  F061         	movff	log_generate_entry@log_entry+1,__get_checksum@log_entry+1
 13474  00B47A  ECC3  F09A         	call	__get_checksum	;wreg free
 13475  00B47E  0100               	movlb	0	; () banked
 13476  00B480  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13477  00B482  0100               	movlb	0	; () banked
 13478  00B484  EE20 F01F          	lfsr	2,31
 13479  00B488  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13480  00B48A  26D9               	addwf	fsr2l,f,c
 13481  00B48C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13482  00B48E  22DA               	addwfc	fsr2h,f,c
 13483  00B490  C07A  FFDF         	movff	??_log_generate_entry,indf2
 13484                           
 13485                           ; BSR set to: 0
 13486  00B494  0012               	return		;funcret
 13487  00B496                     __end_of_log_generate_entry:
 13488                           	opt stack 0
 13489                           tblptru	equ	0xFF8
 13490                           tblptrh	equ	0xFF7
 13491                           tblptrl	equ	0xFF6
 13492                           tablat	equ	0xFF5
 13493                           prodh	equ	0xFF4
 13494                           prodl	equ	0xFF3
 13495                           intcon	equ	0xFF2
 13496                           intcon2	equ	0xFF1
 13497                           intcon3	equ	0xFF0
 13498                           postinc0	equ	0xFEE
 13499                           wreg	equ	0xFE8
 13500                           postdec1	equ	0xFE5
 13501                           plusw1	equ	0xFE3
 13502                           fsr1h	equ	0xFE2
 13503                           fsr1l	equ	0xFE1
 13504                           indf2	equ	0xFDF
 13505                           postinc2	equ	0xFDE
 13506                           postdec2	equ	0xFDD
 13507                           plusw2	equ	0xFDB
 13508                           fsr2h	equ	0xFDA
 13509                           fsr2l	equ	0xFD9
 13510                           status	equ	0xFD8
 13511                           
 13512 ;; *************** function __get_temperature *****************
 13513 ;; Defined at:
 13514 ;;		line 107 in file "log.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;  temperature     2   14[BANK0 ] int 
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;		None
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1    wreg      unsigned char 
 13521 ;; Registers used:
 13522 ;;		wreg, status,2, status,0, cstack
 13523 ;; Tracked objects:
 13524 ;;		On entry : 0/0
 13525 ;;		On exit  : 0/0
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13531 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13532 ;;Total ram usage:        2 bytes
 13533 ;; Hardware stack levels used:    1
 13534 ;; Hardware stack levels required when called:   11
 13535 ;; This function calls:
 13536 ;;		___awdiv
 13537 ;; This function is called by:
 13538 ;;		_log_generate_entry
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           	psect	text52
 13543  013AB0                     __ptext52:
 13544                           	opt stack 0
 13545  013AB0                     __get_temperature:
 13546                           	opt stack 17
 13547                           
 13548                           ;log.c: 109: temperature += 4025;
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;incstack = 0
 13552  013AB0  0100               	movlb	0	; () banked
 13553  013AB2  0EB9               	movlw	185
 13554  013AB4  276E               	addwf	__get_temperature@temperature& (0+255),f,b
 13555  013AB6  0E0F               	movlw	15
 13556  013AB8  236F               	addwfc	(__get_temperature@temperature+1)& (0+255),f,b
 13557                           
 13558                           ; BSR set to: 0
 13559                           ;log.c: 110: temperature /= 50;
 13560  013ABA  C06E  F060         	movff	__get_temperature@temperature,___awdiv@dividend
 13561  013ABE  C06F  F061         	movff	__get_temperature@temperature+1,___awdiv@dividend+1
 13562  013AC2  0E00               	movlw	0
 13563  013AC4  0100               	movlb	0	; () banked
 13564  013AC6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 13565  013AC8  0E32               	movlw	50
 13566  013ACA  6F62               	movwf	___awdiv@divisor& (0+255),b
 13567  013ACC  EC55  F087         	call	___awdiv	;wreg free
 13568  013AD0  C060  F06E         	movff	?___awdiv,__get_temperature@temperature
 13569  013AD4  C061  F06F         	movff	?___awdiv+1,__get_temperature@temperature+1
 13570                           
 13571                           ;log.c: 111: return (uint8_t) temperature;
 13572  013AD8  0100               	movlb	0	; () banked
 13573  013ADA  516E               	movf	__get_temperature@temperature& (0+255),w,b
 13574  013ADC  0012               	return	
 13575  013ADE                     __end_of__get_temperature:
 13576                           	opt stack 0
 13577                           tblptru	equ	0xFF8
 13578                           tblptrh	equ	0xFF7
 13579                           tblptrl	equ	0xFF6
 13580                           tablat	equ	0xFF5
 13581                           prodh	equ	0xFF4
 13582                           prodl	equ	0xFF3
 13583                           intcon	equ	0xFF2
 13584                           intcon2	equ	0xFF1
 13585                           intcon3	equ	0xFF0
 13586                           postinc0	equ	0xFEE
 13587                           wreg	equ	0xFE8
 13588                           postdec1	equ	0xFE5
 13589                           plusw1	equ	0xFE3
 13590                           fsr1h	equ	0xFE2
 13591                           fsr1l	equ	0xFE1
 13592                           indf2	equ	0xFDF
 13593                           postinc2	equ	0xFDE
 13594                           postdec2	equ	0xFDD
 13595                           plusw2	equ	0xFDB
 13596                           fsr2h	equ	0xFDA
 13597                           fsr2l	equ	0xFD9
 13598                           status	equ	0xFD8
 13599                           
 13600 ;; *************** function ___awdiv *****************
 13601 ;; Defined at:
 13602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;  dividend        2    0[BANK0 ] int 
 13605 ;;  divisor         2    2[BANK0 ] int 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;  quotient        2    6[BANK0 ] int 
 13608 ;;  sign            1    5[BANK0 ] unsigned char 
 13609 ;;  counter         1    4[BANK0 ] unsigned char 
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  2    0[BANK0 ] int 
 13612 ;; Registers used:
 13613 ;;		wreg, status,2, status,0
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13620 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13622 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13623 ;;Total ram usage:        8 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; Hardware stack levels required when called:   10
 13626 ;; This function calls:
 13627 ;;		Nothing
 13628 ;; This function is called by:
 13629 ;;		__get_temperature
 13630 ;; This function uses a non-reentrant model
 13631 ;;
 13632                           
 13633                           	psect	text53
 13634  010EAA                     __ptext53:
 13635                           	opt stack 0
 13636  010EAA                     ___awdiv:
 13637                           	opt stack 17
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;incstack = 0
 13641  010EAA  0E00               	movlw	0
 13642  010EAC  0100               	movlb	0	; () banked
 13643  010EAE  6F65               	movwf	___awdiv@sign& (0+255),b
 13644                           
 13645                           ; BSR set to: 0
 13646  010EB0  0100               	movlb	0	; () banked
 13647  010EB2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13648  010EB4  D008               	goto	l19349
 13649                           
 13650                           ; BSR set to: 0
 13651  010EB6  0100               	movlb	0	; () banked
 13652  010EB8  6D62               	negf	___awdiv@divisor& (0+255),b
 13653  010EBA  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13654  010EBC  B0D8               	btfsc	status,0,c
 13655  010EBE  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13656                           
 13657                           ; BSR set to: 0
 13658  010EC0  0E01               	movlw	1
 13659  010EC2  0100               	movlb	0	; () banked
 13660  010EC4  6F65               	movwf	___awdiv@sign& (0+255),b
 13661  010EC6                     l19349:
 13662                           
 13663                           ; BSR set to: 0
 13664  010EC6  0100               	movlb	0	; () banked
 13665  010EC8  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13666  010ECA  D008               	goto	l19355
 13667                           
 13668                           ; BSR set to: 0
 13669  010ECC  0100               	movlb	0	; () banked
 13670  010ECE  6D60               	negf	___awdiv@dividend& (0+255),b
 13671  010ED0  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13672  010ED2  B0D8               	btfsc	status,0,c
 13673  010ED4  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13674                           
 13675                           ; BSR set to: 0
 13676  010ED6  0E01               	movlw	1
 13677  010ED8  0100               	movlb	0	; () banked
 13678  010EDA  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13679  010EDC                     l19355:
 13680                           
 13681                           ; BSR set to: 0
 13682  010EDC  0E00               	movlw	0
 13683  010EDE  0100               	movlb	0	; () banked
 13684  010EE0  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13685  010EE2  0E00               	movlw	0
 13686  010EE4  6F66               	movwf	___awdiv@quotient& (0+255),b
 13687                           
 13688                           ; BSR set to: 0
 13689  010EE6  0100               	movlb	0	; () banked
 13690  010EE8  5162               	movf	___awdiv@divisor& (0+255),w,b
 13691  010EEA  0100               	movlb	0	; () banked
 13692  010EEC  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13693  010EEE  B4D8               	btfsc	status,2,c
 13694  010EF0  D02C               	goto	l19377
 13695                           
 13696                           ; BSR set to: 0
 13697  010EF2  0E01               	movlw	1
 13698  010EF4  0100               	movlb	0	; () banked
 13699  010EF6  6F64               	movwf	___awdiv@counter& (0+255),b
 13700  010EF8  D006               	goto	l19363
 13701  010EFA                     l19361:
 13702                           
 13703                           ; BSR set to: 0
 13704  010EFA  0100               	movlb	0	; () banked
 13705  010EFC  90D8               	bcf	status,0,c
 13706  010EFE  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13707  010F00  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13708  010F02  0100               	movlb	0	; () banked
 13709  010F04  2B64               	incf	___awdiv@counter& (0+255),f,b
 13710  010F06                     l19363:
 13711                           
 13712                           ; BSR set to: 0
 13713  010F06  0100               	movlb	0	; () banked
 13714  010F08  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13715  010F0A  D7F7               	goto	l19361
 13716  010F0C                     l19365:
 13717                           
 13718                           ; BSR set to: 0
 13719  010F0C  0100               	movlb	0	; () banked
 13720  010F0E  90D8               	bcf	status,0,c
 13721  010F10  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13722  010F12  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13723                           
 13724                           ; BSR set to: 0
 13725  010F14  0100               	movlb	0	; () banked
 13726  010F16  5162               	movf	___awdiv@divisor& (0+255),w,b
 13727  010F18  0100               	movlb	0	; () banked
 13728  010F1A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13729  010F1C  0100               	movlb	0	; () banked
 13730  010F1E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13731  010F20  0100               	movlb	0	; () banked
 13732  010F22  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13733  010F24  A0D8               	btfss	status,0,c
 13734  010F26  D00A               	goto	l19373
 13735                           
 13736                           ; BSR set to: 0
 13737  010F28  0100               	movlb	0	; () banked
 13738  010F2A  5162               	movf	___awdiv@divisor& (0+255),w,b
 13739  010F2C  0100               	movlb	0	; () banked
 13740  010F2E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13741  010F30  0100               	movlb	0	; () banked
 13742  010F32  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13743  010F34  0100               	movlb	0	; () banked
 13744  010F36  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13745                           
 13746                           ; BSR set to: 0
 13747  010F38  0100               	movlb	0	; () banked
 13748  010F3A  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13749  010F3C                     l19373:
 13750                           
 13751                           ; BSR set to: 0
 13752  010F3C  0100               	movlb	0	; () banked
 13753  010F3E  90D8               	bcf	status,0,c
 13754  010F40  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13755  010F42  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13756                           
 13757                           ; BSR set to: 0
 13758  010F44  0100               	movlb	0	; () banked
 13759  010F46  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13760  010F48  D7E1               	goto	l19365
 13761  010F4A                     l19377:
 13762                           
 13763                           ; BSR set to: 0
 13764  010F4A  0100               	movlb	0	; () banked
 13765  010F4C  5165               	movf	___awdiv@sign& (0+255),w,b
 13766  010F4E  0100               	movlb	0	; () banked
 13767  010F50  B4D8               	btfsc	status,2,c
 13768  010F52  D005               	goto	l19381
 13769                           
 13770                           ; BSR set to: 0
 13771  010F54  0100               	movlb	0	; () banked
 13772  010F56  6D66               	negf	___awdiv@quotient& (0+255),b
 13773  010F58  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13774  010F5A  B0D8               	btfsc	status,0,c
 13775  010F5C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13776  010F5E                     l19381:
 13777                           
 13778                           ; BSR set to: 0
 13779  010F5E  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13780  010F62  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13781  010F66  0012               	return	
 13782  010F68                     __end_of___awdiv:
 13783                           	opt stack 0
 13784                           tblptru	equ	0xFF8
 13785                           tblptrh	equ	0xFF7
 13786                           tblptrl	equ	0xFF6
 13787                           tablat	equ	0xFF5
 13788                           prodh	equ	0xFF4
 13789                           prodl	equ	0xFF3
 13790                           intcon	equ	0xFF2
 13791                           intcon2	equ	0xFF1
 13792                           intcon3	equ	0xFF0
 13793                           postinc0	equ	0xFEE
 13794                           wreg	equ	0xFE8
 13795                           postdec1	equ	0xFE5
 13796                           plusw1	equ	0xFE3
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           plusw2	equ	0xFDB
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function __get_dateTime *****************
 13808 ;; Defined at:
 13809 ;;		line 39 in file "log.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  datetime        4   20[BANK0 ] unsigned long 
 13814 ;;  seconds         1   19[BANK0 ] unsigned char 
 13815 ;;  minutes         1   18[BANK0 ] unsigned char 
 13816 ;;  hours           1   17[BANK0 ] unsigned char 
 13817 ;;  day             1   16[BANK0 ] unsigned char 
 13818 ;;  month           1   15[BANK0 ] unsigned char 
 13819 ;;  year            1   14[BANK0 ] unsigned char 
 13820 ;; Return value:  Size  Location     Type
 13821 ;;                  4    4[BANK0 ] unsigned long 
 13822 ;; Registers used:
 13823 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13830 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13831 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13832 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13833 ;;Total ram usage:       20 bytes
 13834 ;; Hardware stack levels used:    1
 13835 ;; Hardware stack levels required when called:   12
 13836 ;; This function calls:
 13837 ;;		_rtcc_get_day_decimal
 13838 ;;		_rtcc_get_hours_decimal
 13839 ;;		_rtcc_get_minutes_decimal
 13840 ;;		_rtcc_get_month_decimal
 13841 ;;		_rtcc_get_seconds_decimal
 13842 ;;		_rtcc_get_year_decimal
 13843 ;; This function is called by:
 13844 ;;		_log_generate_entry
 13845 ;; This function uses a non-reentrant model
 13846 ;;
 13847                           
 13848                           	psect	text54
 13849  00DC9A                     __ptext54:
 13850                           	opt stack 0
 13851  00DC9A                     __get_dateTime:
 13852                           	opt stack 16
 13853                           
 13854                           ;log.c: 41: uint32_t datetime;
 13855                           ;log.c: 42: uint8_t year = rtcc_get_year_decimal();
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;incstack = 0
 13859  00DC9A  ECEE  F0A0         	call	_rtcc_get_year_decimal	;wreg free
 13860  00DC9E  0100               	movlb	0	; () banked
 13861  00DCA0  6F6E               	movwf	__get_dateTime@year& (0+255),b
 13862                           
 13863                           ;log.c: 43: uint8_t month = rtcc_get_month_decimal();
 13864  00DCA2  ECF7  F0A0         	call	_rtcc_get_month_decimal	;wreg free
 13865  00DCA6  0100               	movlb	0	; () banked
 13866  00DCA8  6F6F               	movwf	__get_dateTime@month& (0+255),b
 13867                           
 13868                           ;log.c: 44: uint8_t day = rtcc_get_day_decimal();
 13869  00DCAA  EC00  F0A1         	call	_rtcc_get_day_decimal	;wreg free
 13870  00DCAE  0100               	movlb	0	; () banked
 13871  00DCB0  6F70               	movwf	__get_dateTime@day& (0+255),b
 13872                           
 13873                           ;log.c: 45: uint8_t hours = rtcc_get_hours_decimal();
 13874  00DCB2  ECE5  F0A0         	call	_rtcc_get_hours_decimal	;wreg free
 13875  00DCB6  0100               	movlb	0	; () banked
 13876  00DCB8  6F71               	movwf	__get_dateTime@hours& (0+255),b
 13877                           
 13878                           ;log.c: 46: uint8_t minutes = rtcc_get_minutes_decimal();
 13879  00DCBA  ECDC  F0A0         	call	_rtcc_get_minutes_decimal	;wreg free
 13880  00DCBE  0100               	movlb	0	; () banked
 13881  00DCC0  6F72               	movwf	__get_dateTime@minutes& (0+255),b
 13882                           
 13883                           ;log.c: 47: uint8_t seconds = rtcc_get_seconds_decimal();
 13884  00DCC2  EC09  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
 13885  00DCC6  0100               	movlb	0	; () banked
 13886  00DCC8  6F73               	movwf	__get_dateTime@seconds& (0+255),b
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;log.c: 48: datetime = (((uint32_t)(year&0b111111)) << 26);
 13890  00DCCA  C06E  F068         	movff	__get_dateTime@year,??__get_dateTime
 13891  00DCCE  0E3F               	movlw	63
 13892  00DCD0  0100               	movlb	0	; () banked
 13893  00DCD2  1768               	andwf	??__get_dateTime& (0+255),f,b
 13894  00DCD4  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13895  00DCD8  0100               	movlb	0	; () banked
 13896  00DCDA  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13897  00DCDC  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13898  00DCDE  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13899  00DCE0  0E1A               	movlw	26
 13900  00DCE2                     u19245:
 13901  00DCE2  90D8               	bcf	status,0,c
 13902  00DCE4  0100               	movlb	0	; () banked
 13903  00DCE6  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13904  00DCE8  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13905  00DCEA  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13906  00DCEC  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13907  00DCEE  2EE8               	decfsz	wreg,f,c
 13908  00DCF0  D7F8               	goto	u19245
 13909  00DCF2  C069  F074         	movff	??__get_dateTime+1,__get_dateTime@datetime
 13910  00DCF6  C06A  F075         	movff	??__get_dateTime+2,__get_dateTime@datetime+1
 13911  00DCFA  C06B  F076         	movff	??__get_dateTime+3,__get_dateTime@datetime+2
 13912  00DCFE  C06C  F077         	movff	??__get_dateTime+4,__get_dateTime@datetime+3
 13913                           
 13914                           ; BSR set to: 0
 13915                           ;log.c: 49: datetime |= (((uint32_t)(month&0b1111)) << 22);
 13916  00DD02  C06F  F068         	movff	__get_dateTime@month,??__get_dateTime
 13917  00DD06  0E0F               	movlw	15
 13918  00DD08  0100               	movlb	0	; () banked
 13919  00DD0A  1768               	andwf	??__get_dateTime& (0+255),f,b
 13920  00DD0C  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13921  00DD10  0100               	movlb	0	; () banked
 13922  00DD12  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13923  00DD14  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13924  00DD16  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13925  00DD18  0E16               	movlw	22
 13926  00DD1A                     u19255:
 13927  00DD1A  90D8               	bcf	status,0,c
 13928  00DD1C  0100               	movlb	0	; () banked
 13929  00DD1E  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13930  00DD20  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13931  00DD22  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13932  00DD24  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13933  00DD26  2EE8               	decfsz	wreg,f,c
 13934  00DD28  D7F8               	goto	u19255
 13935  00DD2A  0100               	movlb	0	; () banked
 13936  00DD2C  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13937  00DD2E  0100               	movlb	0	; () banked
 13938  00DD30  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13939  00DD32  0100               	movlb	0	; () banked
 13940  00DD34  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13941  00DD36  0100               	movlb	0	; () banked
 13942  00DD38  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13943  00DD3A  0100               	movlb	0	; () banked
 13944  00DD3C  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13945  00DD3E  0100               	movlb	0	; () banked
 13946  00DD40  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13947  00DD42  0100               	movlb	0	; () banked
 13948  00DD44  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13949  00DD46  0100               	movlb	0	; () banked
 13950  00DD48  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;log.c: 50: datetime |= (((uint32_t)day&0b11111)) << 17;
 13954  00DD4A  C070  F068         	movff	__get_dateTime@day,??__get_dateTime
 13955  00DD4E  0E1F               	movlw	31
 13956  00DD50  0100               	movlb	0	; () banked
 13957  00DD52  1768               	andwf	??__get_dateTime& (0+255),f,b
 13958  00DD54  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13959  00DD58  0100               	movlb	0	; () banked
 13960  00DD5A  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13961  00DD5C  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13962  00DD5E  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13963  00DD60  0E11               	movlw	17
 13964  00DD62                     u19265:
 13965  00DD62  90D8               	bcf	status,0,c
 13966  00DD64  0100               	movlb	0	; () banked
 13967  00DD66  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13968  00DD68  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13969  00DD6A  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13970  00DD6C  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13971  00DD6E  2EE8               	decfsz	wreg,f,c
 13972  00DD70  D7F8               	goto	u19265
 13973  00DD72  0100               	movlb	0	; () banked
 13974  00DD74  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13975  00DD76  0100               	movlb	0	; () banked
 13976  00DD78  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13977  00DD7A  0100               	movlb	0	; () banked
 13978  00DD7C  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13979  00DD7E  0100               	movlb	0	; () banked
 13980  00DD80  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13981  00DD82  0100               	movlb	0	; () banked
 13982  00DD84  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13983  00DD86  0100               	movlb	0	; () banked
 13984  00DD88  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13985  00DD8A  0100               	movlb	0	; () banked
 13986  00DD8C  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13987  00DD8E  0100               	movlb	0	; () banked
 13988  00DD90  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;log.c: 51: datetime |= (((uint32_t)(hours&0b11111)) << 12);
 13992  00DD92  C071  F068         	movff	__get_dateTime@hours,??__get_dateTime
 13993  00DD96  0E1F               	movlw	31
 13994  00DD98  0100               	movlb	0	; () banked
 13995  00DD9A  1768               	andwf	??__get_dateTime& (0+255),f,b
 13996  00DD9C  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13997  00DDA0  0100               	movlb	0	; () banked
 13998  00DDA2  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13999  00DDA4  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 14000  00DDA6  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 14001  00DDA8  0E0C               	movlw	12
 14002  00DDAA                     u19275:
 14003  00DDAA  90D8               	bcf	status,0,c
 14004  00DDAC  0100               	movlb	0	; () banked
 14005  00DDAE  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 14006  00DDB0  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 14007  00DDB2  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 14008  00DDB4  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 14009  00DDB6  2EE8               	decfsz	wreg,f,c
 14010  00DDB8  D7F8               	goto	u19275
 14011  00DDBA  0100               	movlb	0	; () banked
 14012  00DDBC  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 14013  00DDBE  0100               	movlb	0	; () banked
 14014  00DDC0  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 14015  00DDC2  0100               	movlb	0	; () banked
 14016  00DDC4  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 14017  00DDC6  0100               	movlb	0	; () banked
 14018  00DDC8  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 14019  00DDCA  0100               	movlb	0	; () banked
 14020  00DDCC  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 14021  00DDCE  0100               	movlb	0	; () banked
 14022  00DDD0  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 14023  00DDD2  0100               	movlb	0	; () banked
 14024  00DDD4  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 14025  00DDD6  0100               	movlb	0	; () banked
 14026  00DDD8  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;log.c: 52: datetime |= (((uint16_t)(minutes&0b111111)) << 6);
 14030  00DDDA  0100               	movlb	0	; () banked
 14031  00DDDC  5172               	movf	__get_dateTime@minutes& (0+255),w,b
 14032  00DDDE  0B3F               	andlw	63
 14033  00DDE0  0100               	movlb	0	; () banked
 14034  00DDE2  6F68               	movwf	??__get_dateTime& (0+255),b
 14035  00DDE4  6B69               	clrf	(??__get_dateTime+1)& (0+255),b
 14036  00DDE6  0E06               	movlw	6
 14037  00DDE8                     u19285:
 14038  00DDE8  90D8               	bcf	status,0,c
 14039  00DDEA  0100               	movlb	0	; () banked
 14040  00DDEC  3768               	rlcf	??__get_dateTime& (0+255),f,b
 14041  00DDEE  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 14042  00DDF0  2EE8               	decfsz	wreg,f,c
 14043  00DDF2  D7FA               	goto	u19285
 14044  00DDF4  0100               	movlb	0	; () banked
 14045  00DDF6  5168               	movf	??__get_dateTime& (0+255),w,b
 14046  00DDF8  0100               	movlb	0	; () banked
 14047  00DDFA  6F6A               	movwf	(??__get_dateTime+2)& (0+255),b
 14048  00DDFC  0100               	movlb	0	; () banked
 14049  00DDFE  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 14050  00DE00  0100               	movlb	0	; () banked
 14051  00DE02  6F6B               	movwf	(??__get_dateTime+3)& (0+255),b
 14052  00DE04  0100               	movlb	0	; () banked
 14053  00DE06  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 14054  00DE08  0100               	movlb	0	; () banked
 14055  00DE0A  6B6D               	clrf	(??__get_dateTime+5)& (0+255),b
 14056  00DE0C  0100               	movlb	0	; () banked
 14057  00DE0E  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 14058  00DE10  0100               	movlb	0	; () banked
 14059  00DE12  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 14060  00DE14  0100               	movlb	0	; () banked
 14061  00DE16  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 14062  00DE18  0100               	movlb	0	; () banked
 14063  00DE1A  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 14064  00DE1C  0100               	movlb	0	; () banked
 14065  00DE1E  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 14066  00DE20  0100               	movlb	0	; () banked
 14067  00DE22  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 14068  00DE24  0100               	movlb	0	; () banked
 14069  00DE26  516D               	movf	(??__get_dateTime+5)& (0+255),w,b
 14070  00DE28  0100               	movlb	0	; () banked
 14071  00DE2A  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 14072                           
 14073                           ; BSR set to: 0
 14074                           ;log.c: 53: datetime |= (seconds&0b111111);
 14075  00DE2C  C073  F068         	movff	__get_dateTime@seconds,??__get_dateTime
 14076  00DE30  0E3F               	movlw	63
 14077  00DE32  0100               	movlb	0	; () banked
 14078  00DE34  1768               	andwf	??__get_dateTime& (0+255),f,b
 14079  00DE36  0100               	movlb	0	; () banked
 14080  00DE38  5168               	movf	??__get_dateTime& (0+255),w,b
 14081  00DE3A  0100               	movlb	0	; () banked
 14082  00DE3C  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;log.c: 54: return datetime;
 14086  00DE3E  C074  F064         	movff	__get_dateTime@datetime,?__get_dateTime
 14087  00DE42  C075  F065         	movff	__get_dateTime@datetime+1,?__get_dateTime+1
 14088  00DE46  C076  F066         	movff	__get_dateTime@datetime+2,?__get_dateTime+2
 14089  00DE4A  C077  F067         	movff	__get_dateTime@datetime+3,?__get_dateTime+3
 14090  00DE4E  0012               	return	
 14091  00DE50                     __end_of__get_dateTime:
 14092                           	opt stack 0
 14093                           tblptru	equ	0xFF8
 14094                           tblptrh	equ	0xFF7
 14095                           tblptrl	equ	0xFF6
 14096                           tablat	equ	0xFF5
 14097                           prodh	equ	0xFF4
 14098                           prodl	equ	0xFF3
 14099                           intcon	equ	0xFF2
 14100                           intcon2	equ	0xFF1
 14101                           intcon3	equ	0xFF0
 14102                           postinc0	equ	0xFEE
 14103                           wreg	equ	0xFE8
 14104                           postdec1	equ	0xFE5
 14105                           plusw1	equ	0xFE3
 14106                           fsr1h	equ	0xFE2
 14107                           fsr1l	equ	0xFE1
 14108                           indf2	equ	0xFDF
 14109                           postinc2	equ	0xFDE
 14110                           postdec2	equ	0xFDD
 14111                           plusw2	equ	0xFDB
 14112                           fsr2h	equ	0xFDA
 14113                           fsr2l	equ	0xFD9
 14114                           status	equ	0xFD8
 14115                           
 14116 ;; *************** function __get_checksum *****************
 14117 ;; Defined at:
 14118 ;;		line 57 in file "log.c"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;  log_entry       2    0[BANK0 ] PTR struct .
 14121 ;;		 -> log_write_to_disk@log_entry(32), 
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;  byte_array      2    2[BANK0 ] PTR unsigned char 
 14124 ;;		 -> log_write_to_disk@log_entry(32), 
 14125 ;;  cntr            1    5[BANK0 ] unsigned char 
 14126 ;;  checksum        1    4[BANK0 ] unsigned char 
 14127 ;; Return value:  Size  Location     Type
 14128 ;;                  1    wreg      unsigned char 
 14129 ;; Registers used:
 14130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14131 ;; Tracked objects:
 14132 ;;		On entry : 0/0
 14133 ;;		On exit  : 0/0
 14134 ;;		Unchanged: 0/0
 14135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14137 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14140 ;;Total ram usage:        6 bytes
 14141 ;; Hardware stack levels used:    1
 14142 ;; Hardware stack levels required when called:   10
 14143 ;; This function calls:
 14144 ;;		Nothing
 14145 ;; This function is called by:
 14146 ;;		_log_generate_entry
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150                           	psect	text55
 14151  013586                     __ptext55:
 14152                           	opt stack 0
 14153  013586                     __get_checksum:
 14154                           	opt stack 18
 14155                           
 14156                           ;log.c: 59: uint8_t checksum;
 14157                           ;log.c: 60: uint8_t *byte_array;
 14158                           ;log.c: 61: uint8_t cntr;
 14159                           ;log.c: 62: byte_array = (uint8_t*) log_entry;
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;incstack = 0
 14163  013586  C060  F062         	movff	__get_checksum@log_entry,__get_checksum@byte_array
 14164  01358A  C061  F063         	movff	__get_checksum@log_entry+1,__get_checksum@byte_array+1
 14165                           
 14166                           ;log.c: 63: checksum = 0x00;
 14167  01358E  0E00               	movlw	0
 14168  013590  0100               	movlb	0	; () banked
 14169  013592  6F64               	movwf	__get_checksum@checksum& (0+255),b
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;log.c: 64: for(cntr=0; cntr<31; ++cntr)
 14173  013594  0E00               	movlw	0
 14174  013596  0100               	movlb	0	; () banked
 14175  013598  6F65               	movwf	__get_checksum@cntr& (0+255),b
 14176  01359A  0E1E               	movlw	30
 14177  01359C  0100               	movlb	0	; () banked
 14178  01359E  6565               	cpfsgt	__get_checksum@cntr& (0+255),b
 14179  0135A0  D001               	goto	l20145
 14180  0135A2  D011               	goto	l20151
 14181  0135A4                     l20145:
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;log.c: 65: {
 14185                           ;log.c: 66: checksum ^= byte_array[cntr];
 14186  0135A4  0100               	movlb	0	; () banked
 14187  0135A6  5165               	movf	__get_checksum@cntr& (0+255),w,b
 14188  0135A8  0D01               	mullw	1
 14189  0135AA  50F3               	movf	prodl,w,c
 14190  0135AC  0100               	movlb	0	; () banked
 14191  0135AE  2562               	addwf	__get_checksum@byte_array& (0+255),w,b
 14192  0135B0  6ED9               	movwf	fsr2l,c
 14193  0135B2  50F4               	movf	prodh,w,c
 14194  0135B4  0100               	movlb	0	; () banked
 14195  0135B6  2163               	addwfc	(__get_checksum@byte_array+1)& (0+255),w,b
 14196  0135B8  6EDA               	movwf	fsr2h,c
 14197  0135BA  50DF               	movf	indf2,w,c
 14198  0135BC  0100               	movlb	0	; () banked
 14199  0135BE  1B64               	xorwf	__get_checksum@checksum& (0+255),f,b
 14200                           
 14201                           ; BSR set to: 0
 14202  0135C0  0100               	movlb	0	; () banked
 14203  0135C2  2B65               	incf	__get_checksum@cntr& (0+255),f,b
 14204  0135C4  D7EA               	goto	L9
 14205  0135C6                     l20151:
 14206                           
 14207                           ; BSR set to: 0
 14208                           ;log.c: 67: }
 14209                           ;log.c: 68: return checksum;
 14210  0135C6  0100               	movlb	0	; () banked
 14211  0135C8  5164               	movf	__get_checksum@checksum& (0+255),w,b
 14212  0135CA  0012               	return	
 14213  0135CC                     __end_of__get_checksum:
 14214                           	opt stack 0
 14215                           tblptru	equ	0xFF8
 14216                           tblptrh	equ	0xFF7
 14217                           tblptrl	equ	0xFF6
 14218                           tablat	equ	0xFF5
 14219                           prodh	equ	0xFF4
 14220                           prodl	equ	0xFF3
 14221                           intcon	equ	0xFF2
 14222                           intcon2	equ	0xFF1
 14223                           intcon3	equ	0xFF0
 14224                           postinc0	equ	0xFEE
 14225                           wreg	equ	0xFE8
 14226                           postdec1	equ	0xFE5
 14227                           plusw1	equ	0xFE3
 14228                           fsr1h	equ	0xFE2
 14229                           fsr1l	equ	0xFE1
 14230                           indf2	equ	0xFDF
 14231                           postinc2	equ	0xFDE
 14232                           postdec2	equ	0xFDD
 14233                           plusw2	equ	0xFDB
 14234                           fsr2h	equ	0xFDA
 14235                           fsr2l	equ	0xFD9
 14236                           status	equ	0xFD8
 14237                           
 14238 ;; *************** function _fat_create_file *****************
 14239 ;; Defined at:
 14240 ;;		line 321 in file "fat16.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  name            2   59[BANK0 ] PTR unsigned char 
 14243 ;;		 -> filename(9), 
 14244 ;;  extension       2   61[BANK0 ] PTR unsigned char 
 14245 ;;		 -> extension(4), 
 14246 ;;  size            4   63[BANK0 ] unsigned long 
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;  root_entry     32   80[BANK0 ] struct .
 14249 ;;  cluster         2   78[BANK0 ] unsigned int 
 14250 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 14251 ;;  cluster_coun    2   73[BANK0 ] unsigned int 
 14252 ;;  next_cluster    2   71[BANK0 ] unsigned int 
 14253 ;;  root_slot       1   75[BANK0 ] unsigned char 
 14254 ;; Return value:  Size  Location     Type
 14255 ;;                  1    wreg      unsigned char 
 14256 ;; Registers used:
 14257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14258 ;; Tracked objects:
 14259 ;;		On entry : 0/0
 14260 ;;		On exit  : 0/0
 14261 ;;		Unchanged: 0/0
 14262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14263 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14264 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14265 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14266 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14267 ;;Total ram usage:       53 bytes
 14268 ;; Hardware stack levels used:    1
 14269 ;; Hardware stack levels required when called:   16
 14270 ;; This function calls:
 14271 ;;		__get_available_root_entry
 14272 ;;		__get_date
 14273 ;;		__get_empty_cluster
 14274 ;;		__get_time
 14275 ;;		__write_fat
 14276 ;;		__write_root
 14277 ;;		_fat_find_file
 14278 ;;		_fat_get_empty_clusters
 14279 ;;		_memcpy
 14280 ;; This function is called by:
 14281 ;;		_log_write_to_disk
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text56
 14286  00DAA4                     __ptext56:
 14287                           	opt stack 0
 14288  00DAA4                     _fat_create_file:
 14289                           	opt stack 13
 14290                           
 14291                           ;fat16.c: 323: uint8_t root_slot;
 14292                           ;fat16.c: 324: rootEntry_t root_entry;
 14293                           ;fat16.c: 325: uint16_t cluster;
 14294                           ;fat16.c: 326: uint16_t next_cluster;
 14295                           ;fat16.c: 327: uint16_t number_of_clusters;
 14296                           ;fat16.c: 328: uint16_t cluster_count;
 14297                           ;fat16.c: 332: if(fat_find_file(name, extension) != 0xFF)
 14298                           
 14299                           ; BSR set to: 0
 14300                           ;incstack = 0
 14301  00DAA4  C09B  F087         	movff	fat_create_file@name,fat_find_file@name
 14302  00DAA8  C09C  F088         	movff	fat_create_file@name+1,fat_find_file@name+1
 14303  00DAAC  C09D  F089         	movff	fat_create_file@extension,fat_find_file@extension
 14304  00DAB0  C09E  F08A         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 14305  00DAB4  EC20  F080         	call	_fat_find_file	;wreg free
 14306  00DAB8  0AFF               	xorlw	255
 14307  00DABA  B4D8               	btfsc	status,2,c
 14308  00DABC  D002               	goto	l21809
 14309                           
 14310                           ;fat16.c: 333: {
 14311                           ;fat16.c: 336: return 0xFF;
 14312  00DABE  0EFF               	movlw	255
 14313  00DAC0  0012               	return	
 14314  00DAC2                     l21809:
 14315                           
 14316                           ;fat16.c: 337: }
 14317                           ;fat16.c: 341: root_slot = _get_available_root_entry();
 14318  00DAC2  EC6F  F09D         	call	__get_available_root_entry	;wreg free
 14319  00DAC6  0100               	movlb	0	; () banked
 14320  00DAC8  6FAB               	movwf	fat_create_file@root_slot& (0+255),b
 14321                           
 14322                           ; BSR set to: 0
 14323                           ;fat16.c: 342: if(root_slot == 0xFF)
 14324  00DACA  0100               	movlb	0	; () banked
 14325  00DACC  29AB               	incf	fat_create_file@root_slot& (0+255),w,b
 14326  00DACE  A4D8               	btfss	status,2,c
 14327  00DAD0  D002               	goto	l21817
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;fat16.c: 343: {
 14331                           ;fat16.c: 346: return 0xFE;
 14332  00DAD2  0EFE               	movlw	254
 14333                           
 14334                           ; BSR set to: 0
 14335  00DAD4  0012               	return	
 14336  00DAD6                     l21817:
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;fat16.c: 347: }
 14340                           ;fat16.c: 350: number_of_clusters = (size>>9) + 1;
 14341  00DAD6  C09F  F0A3         	movff	fat_create_file@size,??_fat_create_file
 14342  00DADA  C0A0  F0A4         	movff	fat_create_file@size+1,??_fat_create_file+1
 14343  00DADE  C0A1  F0A5         	movff	fat_create_file@size+2,??_fat_create_file+2
 14344  00DAE2  C0A2  F0A6         	movff	fat_create_file@size+3,??_fat_create_file+3
 14345  00DAE6  0E0A               	movlw	10
 14346  00DAE8  D006               	goto	u21710
 14347  00DAEA                     u21715:
 14348  00DAEA  0100               	movlb	0	; () banked
 14349  00DAEC  90D8               	bcf	status,0,c
 14350  00DAEE  33A6               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 14351  00DAF0  33A5               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 14352  00DAF2  33A4               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 14353  00DAF4  33A3               	rrcf	??_fat_create_file& (0+255),f,b
 14354  00DAF6                     u21710:
 14355  00DAF6  2EE8               	decfsz	wreg,f,c
 14356  00DAF8  D7F8               	goto	u21715
 14357  00DAFA  0E01               	movlw	1
 14358  00DAFC  0100               	movlb	0	; () banked
 14359  00DAFE  25A3               	addwf	??_fat_create_file& (0+255),w,b
 14360  00DB00  0100               	movlb	0	; () banked
 14361  00DB02  6FAC               	movwf	fat_create_file@number_of_clusters& (0+255),b
 14362  00DB04  0E00               	movlw	0
 14363  00DB06  0100               	movlb	0	; () banked
 14364  00DB08  21A4               	addwfc	(??_fat_create_file+1)& (0+255),w,b
 14365  00DB0A  0100               	movlb	0	; () banked
 14366  00DB0C  6FAD               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;fat16.c: 351: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 14370  00DB0E  C0AC  F087         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 14371  00DB12  C0AD  F088         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 14372  00DB16  EC2D  F089         	call	_fat_get_empty_clusters	;wreg free
 14373  00DB1A  0100               	movlb	0	; () banked
 14374  00DB1C  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 14375  00DB1E  0100               	movlb	0	; () banked
 14376  00DB20  1987               	xorwf	?_fat_get_empty_clusters& (0+255),w,b
 14377  00DB22  E106               	bnz	u21720
 14378  00DB24  0100               	movlb	0	; () banked
 14379  00DB26  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14380  00DB28  0100               	movlb	0	; () banked
 14381  00DB2A  1988               	xorwf	(?_fat_get_empty_clusters+1)& (0+255),w,b
 14382  00DB2C  B4D8               	btfsc	status,2,c
 14383  00DB2E  D002               	goto	l21825
 14384  00DB30                     u21720:
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;fat16.c: 352: {
 14388                           ;fat16.c: 355: return 0xFD;
 14389  00DB30  0EFD               	movlw	253
 14390                           
 14391                           ; BSR set to: 0
 14392  00DB32  0012               	return	
 14393  00DB34                     l21825:
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;fat16.c: 356: }
 14397                           ;fat16.c: 359: cluster = _get_empty_cluster(2);
 14398  00DB34  0E00               	movlw	0
 14399  00DB36  0100               	movlb	0	; () banked
 14400  00DB38  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14401  00DB3A  0E02               	movlw	2
 14402  00DB3C  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14403  00DB3E  EC93  F08D         	call	__get_empty_cluster	;wreg free
 14404  00DB42  C087  F0AE         	movff	?__get_empty_cluster,fat_create_file@cluster
 14405  00DB46  C088  F0AF         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 14406                           
 14407                           ;fat16.c: 362: memcpy(root_entry.fileName, name, 8);
 14408  00DB4A  0EB0               	movlw	low fat_create_file@root_entry
 14409  00DB4C  0100               	movlb	0	; () banked
 14410  00DB4E  6F60               	movwf	memcpy@d1& (0+255),b
 14411  00DB50  0E00               	movlw	high fat_create_file@root_entry
 14412  00DB52  0100               	movlb	0	; () banked
 14413  00DB54  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14414  00DB56  C09B  F062         	movff	fat_create_file@name,memcpy@s1
 14415  00DB5A  C09C  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 14416  00DB5E  0E00               	movlw	0
 14417  00DB60  0100               	movlb	0	; () banked
 14418  00DB62  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14419  00DB64  0E08               	movlw	8
 14420  00DB66  6F64               	movwf	memcpy@n& (0+255),b
 14421  00DB68  EC55  F095         	call	_memcpy	;wreg free
 14422                           
 14423                           ;fat16.c: 363: memcpy(root_entry.fileExtension, extension, 3);
 14424  00DB6C  0EB8               	movlw	low (fat_create_file@root_entry+8)
 14425  00DB6E  0100               	movlb	0	; () banked
 14426  00DB70  6F60               	movwf	memcpy@d1& (0+255),b
 14427  00DB72  0E00               	movlw	high (fat_create_file@root_entry+8)
 14428  00DB74  0100               	movlb	0	; () banked
 14429  00DB76  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14430  00DB78  C09D  F062         	movff	fat_create_file@extension,memcpy@s1
 14431  00DB7C  C09E  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 14432  00DB80  0E00               	movlw	0
 14433  00DB82  0100               	movlb	0	; () banked
 14434  00DB84  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14435  00DB86  0E03               	movlw	3
 14436  00DB88  6F64               	movwf	memcpy@n& (0+255),b
 14437  00DB8A  EC55  F095         	call	_memcpy	;wreg free
 14438                           
 14439                           ;fat16.c: 364: root_entry.attributes = 0x00;
 14440  00DB8E  0E00               	movlw	0
 14441  00DB90  0100               	movlb	0	; () banked
 14442  00DB92  6FBB               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 14443                           
 14444                           ; BSR set to: 0
 14445                           ;fat16.c: 365: root_entry.reserved1 = 0x00;
 14446  00DB94  0E00               	movlw	0
 14447  00DB96  0100               	movlb	0	; () banked
 14448  00DB98  6FBC               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;fat16.c: 366: root_entry.secondFractions = 0x00;
 14452  00DB9A  0E00               	movlw	0
 14453  00DB9C  0100               	movlb	0	; () banked
 14454  00DB9E  6FBD               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 14455                           
 14456                           ; BSR set to: 0
 14457                           ;fat16.c: 367: root_entry.createdTime = _get_time();
 14458  00DBA0  EC7D  F08F         	call	__get_time	;wreg free
 14459  00DBA4  C064  F0BE         	movff	?__get_time,fat_create_file@root_entry+14
 14460  00DBA8  C065  F0BF         	movff	?__get_time+1,fat_create_file@root_entry+15
 14461                           
 14462                           ;fat16.c: 368: root_entry.createdDate = _get_date();
 14463  00DBAC  EC0D  F091         	call	__get_date	;wreg free
 14464  00DBB0  C064  F0C0         	movff	?__get_date,fat_create_file@root_entry+16
 14465  00DBB4  C065  F0C1         	movff	?__get_date+1,fat_create_file@root_entry+17
 14466                           
 14467                           ;fat16.c: 369: root_entry.lastAccessDate = root_entry.createdDate;
 14468  00DBB8  C0C0  F0C2         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 14469  00DBBC  C0C1  F0C3         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 14470                           
 14471                           ;fat16.c: 370: root_entry.reserved2 = 0x00;
 14472  00DBC0  0E00               	movlw	0
 14473  00DBC2  0100               	movlb	0	; () banked
 14474  00DBC4  6FC5               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 14475  00DBC6  0E00               	movlw	0
 14476  00DBC8  6FC4               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;fat16.c: 371: root_entry.modifiedTime = root_entry.createdTime;
 14480  00DBCA  C0BE  F0C6         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 14481  00DBCE  C0BF  F0C7         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 14482                           
 14483                           ; BSR set to: 0
 14484                           ;fat16.c: 372: root_entry.modifiedDate = root_entry.createdDate;
 14485  00DBD2  C0C0  F0C8         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 14486  00DBD6  C0C1  F0C9         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;fat16.c: 373: root_entry.firstCluster = cluster;
 14490  00DBDA  C0AE  F0CA         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 14491  00DBDE  C0AF  F0CB         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;fat16.c: 374: root_entry.fileSize = size;
 14495  00DBE2  C09F  F0CC         	movff	fat_create_file@size,fat_create_file@root_entry+28
 14496  00DBE6  C0A0  F0CD         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 14497  00DBEA  C0A1  F0CE         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 14498  00DBEE  C0A2  F0CF         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 14499                           
 14500                           ;fat16.c: 377: _write_root(root_slot, &root_entry);
 14501  00DBF2  0EB0               	movlw	low fat_create_file@root_entry
 14502  00DBF4  0100               	movlb	0	; () banked
 14503  00DBF6  6F88               	movwf	__write_root@data& (0+255),b
 14504  00DBF8  0E00               	movlw	high fat_create_file@root_entry
 14505  00DBFA  0100               	movlb	0	; () banked
 14506  00DBFC  6F89               	movwf	(__write_root@data+1)& (0+255),b
 14507  00DBFE  0100               	movlb	0	; () banked
 14508  00DC00  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 14509  00DC02  EC4B  F094         	call	__write_root
 14510                           
 14511                           ;fat16.c: 382: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 14512  00DC06  0E00               	movlw	0
 14513  00DC08  0100               	movlb	0	; () banked
 14514  00DC0A  6FAA               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 14515  00DC0C  0E01               	movlw	1
 14516  00DC0E  6FA9               	movwf	fat_create_file@cluster_count& (0+255),b
 14517  00DC10  D037               	goto	l21865
 14518  00DC12                     l21855:
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;fat16.c: 383: {
 14522                           ;fat16.c: 385: if(cluster_count==number_of_clusters)
 14523  00DC12  0100               	movlb	0	; () banked
 14524  00DC14  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 14525  00DC16  0100               	movlb	0	; () banked
 14526  00DC18  19A9               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 14527  00DC1A  E111               	bnz	l21859
 14528  00DC1C  0100               	movlb	0	; () banked
 14529  00DC1E  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14530  00DC20  0100               	movlb	0	; () banked
 14531  00DC22  19AA               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 14532  00DC24  A4D8               	btfss	status,2,c
 14533  00DC26  D00B               	goto	l21859
 14534                           
 14535                           ; BSR set to: 0
 14536                           ;fat16.c: 386: {
 14537                           ;fat16.c: 388: _write_fat(cluster, 0xFFFF);
 14538  00DC28  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 14539  00DC2C  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 14540  00DC30  0EFF               	movlw	255
 14541  00DC32  0100               	movlb	0	; () banked
 14542  00DC34  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 14543  00DC36  698A               	setf	__write_fat@value& (0+255),b
 14544  00DC38  EC91  F099         	call	__write_fat	;wreg free
 14545                           
 14546                           ;fat16.c: 389: }
 14547  00DC3C  D01E               	goto	l21863
 14548  00DC3E                     l21859:
 14549                           
 14550                           ;fat16.c: 390: else
 14551                           ;fat16.c: 391: {
 14552                           ;fat16.c: 393: next_cluster = _get_empty_cluster(cluster+1);
 14553  00DC3E  0E01               	movlw	1
 14554  00DC40  0100               	movlb	0	; () banked
 14555  00DC42  25AE               	addwf	fat_create_file@cluster& (0+255),w,b
 14556  00DC44  0100               	movlb	0	; () banked
 14557  00DC46  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14558  00DC48  0E00               	movlw	0
 14559  00DC4A  0100               	movlb	0	; () banked
 14560  00DC4C  21AF               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 14561  00DC4E  0100               	movlb	0	; () banked
 14562  00DC50  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14563  00DC52  EC93  F08D         	call	__get_empty_cluster	;wreg free
 14564  00DC56  C087  F0A7         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 14565  00DC5A  C088  F0A8         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 14566                           
 14567                           ;fat16.c: 395: _write_fat(cluster, next_cluster);
 14568  00DC5E  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 14569  00DC62  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 14570  00DC66  C0A7  F08A         	movff	fat_create_file@next_cluster,__write_fat@value
 14571  00DC6A  C0A8  F08B         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 14572  00DC6E  EC91  F099         	call	__write_fat	;wreg free
 14573                           
 14574                           ;fat16.c: 397: cluster = next_cluster;
 14575  00DC72  C0A7  F0AE         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 14576  00DC76  C0A8  F0AF         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 14577  00DC7A                     l21863:
 14578  00DC7A  0100               	movlb	0	; () banked
 14579  00DC7C  4BA9               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 14580  00DC7E  2BAA               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 14581  00DC80                     l21865:
 14582                           
 14583                           ; BSR set to: 0
 14584  00DC80  0100               	movlb	0	; () banked
 14585  00DC82  51A9               	movf	fat_create_file@cluster_count& (0+255),w,b
 14586  00DC84  0100               	movlb	0	; () banked
 14587  00DC86  5DAC               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 14588  00DC88  0100               	movlb	0	; () banked
 14589  00DC8A  51AA               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 14590  00DC8C  0100               	movlb	0	; () banked
 14591  00DC8E  59AD               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14592  00DC90  B0D8               	btfsc	status,0,c
 14593  00DC92  D7BF               	goto	l21855
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;fat16.c: 398: }
 14597                           ;fat16.c: 399: }
 14598                           ;fat16.c: 400: return root_slot;
 14599                           
 14600                           ; BSR set to: 0
 14601  00DC94  0100               	movlb	0	; () banked
 14602  00DC96  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 14603  00DC98  0012               	return	
 14604  00DC9A                     __end_of_fat_create_file:
 14605                           	opt stack 0
 14606                           tblptru	equ	0xFF8
 14607                           tblptrh	equ	0xFF7
 14608                           tblptrl	equ	0xFF6
 14609                           tablat	equ	0xFF5
 14610                           prodh	equ	0xFF4
 14611                           prodl	equ	0xFF3
 14612                           intcon	equ	0xFF2
 14613                           intcon2	equ	0xFF1
 14614                           intcon3	equ	0xFF0
 14615                           postinc0	equ	0xFEE
 14616                           wreg	equ	0xFE8
 14617                           postdec1	equ	0xFE5
 14618                           plusw1	equ	0xFE3
 14619                           fsr1h	equ	0xFE2
 14620                           fsr1l	equ	0xFE1
 14621                           indf2	equ	0xFDF
 14622                           postinc2	equ	0xFDE
 14623                           postdec2	equ	0xFDD
 14624                           plusw2	equ	0xFDB
 14625                           fsr2h	equ	0xFDA
 14626                           fsr2l	equ	0xFD9
 14627                           status	equ	0xFD8
 14628                           
 14629 ;; *************** function _fat_get_empty_clusters *****************
 14630 ;; Defined at:
 14631 ;;		line 132 in file "fat16.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;  maximum         2   39[BANK0 ] unsigned int 
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;  cluster         2   49[BANK0 ] unsigned int 
 14636 ;;  empty_cluste    2   47[BANK0 ] unsigned int 
 14637 ;;  value           2   45[BANK0 ] unsigned int 
 14638 ;;  offset          2   43[BANK0 ] unsigned int 
 14639 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  2   39[BANK0 ] unsigned int 
 14642 ;; Registers used:
 14643 ;;		wreg, status,2, status,0, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14650 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14652 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14653 ;;Total ram usage:       12 bytes
 14654 ;; Hardware stack levels used:    1
 14655 ;; Hardware stack levels required when called:   14
 14656 ;; This function calls:
 14657 ;;		_flash_partial_read
 14658 ;; This function is called by:
 14659 ;;		_fat_create_file
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           
 14663                           	psect	text57
 14664  01125A                     __ptext57:
 14665                           	opt stack 0
 14666  01125A                     _fat_get_empty_clusters:
 14667                           	opt stack 14
 14668                           
 14669                           ;fat16.c: 134: uint16_t empty_clusters = 0;
 14670                           
 14671                           ;incstack = 0
 14672  01125A  0E00               	movlw	0
 14673  01125C  0100               	movlb	0	; () banked
 14674  01125E  6F90               	movwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),b
 14675  011260  0E00               	movlw	0
 14676  011262  6F8F               	movwf	fat_get_empty_clusters@empty_clusters& (0+255),b
 14677                           
 14678                           ;fat16.c: 135: uint16_t cluster;
 14679                           ;fat16.c: 136: uint16_t fat_sector;
 14680                           ;fat16.c: 137: uint16_t offset;
 14681                           ;fat16.c: 138: uint16_t value;
 14682                           ;fat16.c: 141: for(cluster=2; cluster<(8170+2); ++cluster)
 14683  011264  0E00               	movlw	0
 14684  011266  0100               	movlb	0	; () banked
 14685  011268  6F92               	movwf	(fat_get_empty_clusters@cluster+1)& (0+255),b
 14686  01126A  0E02               	movlw	2
 14687  01126C  6F91               	movwf	fat_get_empty_clusters@cluster& (0+255),b
 14688  01126E                     l20009:
 14689                           
 14690                           ; BSR set to: 0
 14691  01126E  0EEC               	movlw	236
 14692  011270  0100               	movlb	0	; () banked
 14693  011272  5D91               	subwf	fat_get_empty_clusters@cluster& (0+255),w,b
 14694  011274  0E1F               	movlw	31
 14695  011276  0100               	movlb	0	; () banked
 14696  011278  5992               	subwfb	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14697  01127A  B0D8               	btfsc	status,0,c
 14698  01127C  D045               	goto	l2968
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;fat16.c: 142: {
 14702                           ;fat16.c: 143: fat_sector = cluster>>8;
 14703                           
 14704                           ; BSR set to: 0
 14705                           
 14706                           ; BSR set to: 0
 14707  01127E  0100               	movlb	0	; () banked
 14708  011280  5192               	movf	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14709  011282  0100               	movlb	0	; () banked
 14710  011284  6F89               	movwf	fat_get_empty_clusters@fat_sector& (0+255),b
 14711  011286  6B8A               	clrf	(fat_get_empty_clusters@fat_sector+1)& (0+255),b
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;fat16.c: 144: fat_sector += 2;
 14715  011288  0E02               	movlw	2
 14716  01128A  0100               	movlb	0	; () banked
 14717  01128C  2789               	addwf	fat_get_empty_clusters@fat_sector& (0+255),f,b
 14718  01128E  0E00               	movlw	0
 14719  011290  238A               	addwfc	(fat_get_empty_clusters@fat_sector+1)& (0+255),f,b
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;fat16.c: 145: offset = cluster & 0xFF;
 14723  011292  0100               	movlb	0	; () banked
 14724  011294  5191               	movf	fat_get_empty_clusters@cluster& (0+255),w,b
 14725  011296  0100               	movlb	0	; () banked
 14726  011298  6F8B               	movwf	fat_get_empty_clusters@offset& (0+255),b
 14727  01129A  6B8C               	clrf	(fat_get_empty_clusters@offset+1)& (0+255),b
 14728                           
 14729                           ; BSR set to: 0
 14730                           ;fat16.c: 146: offset <<= 1;
 14731  01129C  0100               	movlb	0	; () banked
 14732  01129E  90D8               	bcf	status,0,c
 14733  0112A0  378B               	rlcf	fat_get_empty_clusters@offset& (0+255),f,b
 14734  0112A2  378C               	rlcf	(fat_get_empty_clusters@offset+1)& (0+255),f,b
 14735                           
 14736                           ; BSR set to: 0
 14737                           ;fat16.c: 147: flash_partial_read(fat_sector, offset, 2, &value);
 14738  0112A4  C089  F073         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 14739  0112A8  C08A  F074         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 14740  0112AC  C08B  F075         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 14741  0112B0  C08C  F076         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 14742  0112B4  0E00               	movlw	0
 14743  0112B6  0100               	movlb	0	; () banked
 14744  0112B8  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14745  0112BA  0E02               	movlw	2
 14746  0112BC  6F77               	movwf	flash_partial_read@length& (0+255),b
 14747  0112BE  0E8D               	movlw	low fat_get_empty_clusters@value
 14748  0112C0  0100               	movlb	0	; () banked
 14749  0112C2  6F79               	movwf	flash_partial_read@data& (0+255),b
 14750  0112C4  0E00               	movlw	high fat_get_empty_clusters@value
 14751  0112C6  0100               	movlb	0	; () banked
 14752  0112C8  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14753  0112CA  EC8E  F08A         	call	_flash_partial_read	;wreg free
 14754                           
 14755                           ;fat16.c: 148: if(value==0x0000)
 14756  0112CE  0100               	movlb	0	; () banked
 14757  0112D0  518D               	movf	fat_get_empty_clusters@value& (0+255),w,b
 14758  0112D2  0100               	movlb	0	; () banked
 14759  0112D4  118E               	iorwf	(fat_get_empty_clusters@value+1)& (0+255),w,b
 14760  0112D6  A4D8               	btfss	status,2,c
 14761  0112D8  D013               	goto	l20031
 14762                           
 14763                           ; BSR set to: 0
 14764                           ;fat16.c: 149: {
 14765                           ;fat16.c: 150: ++empty_clusters;
 14766  0112DA  0100               	movlb	0	; () banked
 14767  0112DC  4B8F               	infsnz	fat_get_empty_clusters@empty_clusters& (0+255),f,b
 14768  0112DE  2B90               	incf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),f,b
 14769                           
 14770                           ; BSR set to: 0
 14771                           ;fat16.c: 151: if(empty_clusters==maximum)
 14772  0112E0  0100               	movlb	0	; () banked
 14773  0112E2  5187               	movf	fat_get_empty_clusters@maximum& (0+255),w,b
 14774  0112E4  0100               	movlb	0	; () banked
 14775  0112E6  198F               	xorwf	fat_get_empty_clusters@empty_clusters& (0+255),w,b
 14776  0112E8  E10B               	bnz	l20031
 14777  0112EA  0100               	movlb	0	; () banked
 14778  0112EC  5188               	movf	(fat_get_empty_clusters@maximum+1)& (0+255),w,b
 14779  0112EE  0100               	movlb	0	; () banked
 14780  0112F0  1990               	xorwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),w,b
 14781  0112F2  A4D8               	btfss	status,2,c
 14782  0112F4  D005               	goto	l20031
 14783                           
 14784                           ; BSR set to: 0
 14785                           ;fat16.c: 152: {
 14786                           ;fat16.c: 153: return empty_clusters;
 14787  0112F6  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14788  0112FA  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14789  0112FE  0012               	return	
 14790  011300                     l20031:
 14791                           
 14792                           ; BSR set to: 0
 14793  011300  0100               	movlb	0	; () banked
 14794  011302  4B91               	infsnz	fat_get_empty_clusters@cluster& (0+255),f,b
 14795  011304  2B92               	incf	(fat_get_empty_clusters@cluster+1)& (0+255),f,b
 14796  011306  D7B3               	goto	l20009
 14797  011308                     l2968:
 14798                           
 14799                           ; BSR set to: 0
 14800                           ;fat16.c: 154: }
 14801                           ;fat16.c: 155: }
 14802                           ;fat16.c: 156: }
 14803                           ;fat16.c: 157: return empty_clusters;
 14804  011308  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14805  01130C  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14806                           
 14807                           ; BSR set to: 0
 14808  011310  0012               	return		;funcret
 14809  011312                     __end_of_fat_get_empty_clusters:
 14810                           	opt stack 0
 14811                           tblptru	equ	0xFF8
 14812                           tblptrh	equ	0xFF7
 14813                           tblptrl	equ	0xFF6
 14814                           tablat	equ	0xFF5
 14815                           prodh	equ	0xFF4
 14816                           prodl	equ	0xFF3
 14817                           intcon	equ	0xFF2
 14818                           intcon2	equ	0xFF1
 14819                           intcon3	equ	0xFF0
 14820                           postinc0	equ	0xFEE
 14821                           wreg	equ	0xFE8
 14822                           postdec1	equ	0xFE5
 14823                           plusw1	equ	0xFE3
 14824                           fsr1h	equ	0xFE2
 14825                           fsr1l	equ	0xFE1
 14826                           indf2	equ	0xFDF
 14827                           postinc2	equ	0xFDE
 14828                           postdec2	equ	0xFDD
 14829                           plusw2	equ	0xFDB
 14830                           fsr2h	equ	0xFDA
 14831                           fsr2l	equ	0xFD9
 14832                           status	equ	0xFD8
 14833                           
 14834 ;; *************** function _fat_find_file *****************
 14835 ;; Defined at:
 14836 ;;		line 262 in file "fat16.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;  name            2   39[BANK0 ] PTR unsigned char 
 14839 ;;		 -> filename(9), 
 14840 ;;  extension       2   41[BANK0 ] PTR unsigned char 
 14841 ;;		 -> extension(4), 
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;  buffer         11   43[BANK0 ] unsigned char [11]
 14844 ;;  offset          2   57[BANK0 ] unsigned int 
 14845 ;;  sector          2   55[BANK0 ] unsigned int 
 14846 ;;  slot            1   54[BANK0 ] unsigned char 
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      unsigned char 
 14849 ;; Registers used:
 14850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14857 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14859 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14860 ;;Total ram usage:       20 bytes
 14861 ;; Hardware stack levels used:    1
 14862 ;; Hardware stack levels required when called:   14
 14863 ;; This function calls:
 14864 ;;		_flash_partial_read
 14865 ;;		_strncmp
 14866 ;; This function is called by:
 14867 ;;		_fat_create_file
 14868 ;;		_log_write_to_disk
 14869 ;; This function uses a non-reentrant model
 14870 ;;
 14871                           
 14872                           	psect	text58
 14873  010040                     __ptext58:
 14874                           	opt stack 0
 14875  010040                     _fat_find_file:
 14876                           	opt stack 15
 14877                           
 14878                           ;fat16.c: 264: uint8_t slot;
 14879                           ;fat16.c: 265: uint16_t sector;
 14880                           ;fat16.c: 266: uint16_t offset;
 14881                           ;fat16.c: 267: uint8_t buffer[11];
 14882                           ;fat16.c: 268: slot = 0;
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;incstack = 0
 14886  010040  0E00               	movlw	0
 14887  010042  0100               	movlb	0	; () banked
 14888  010044  6F96               	movwf	fat_find_file@slot& (0+255),b
 14889                           
 14890                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 14891  010046  0E00               	movlw	0
 14892  010048  0100               	movlb	0	; () banked
 14893  01004A  6F98               	movwf	(fat_find_file@sector+1)& (0+255),b
 14894  01004C  0E12               	movlw	18
 14895  01004E  6F97               	movwf	fat_find_file@sector& (0+255),b
 14896  010050                     l20069:
 14897                           
 14898                           ; BSR set to: 0
 14899  010050  0100               	movlb	0	; () banked
 14900  010052  5198               	movf	(fat_find_file@sector+1)& (0+255),w,b
 14901  010054  E16D               	bnz	l20111
 14902  010056  0E16               	movlw	22
 14903  010058  0100               	movlb	0	; () banked
 14904  01005A  5D97               	subwf	fat_find_file@sector& (0+255),w,b
 14905  01005C  B0D8               	btfsc	status,0,c
 14906  01005E  D068               	goto	l20111
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;fat16.c: 270: {
 14910                           ;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 14911                           
 14912                           ; BSR set to: 0
 14913                           
 14914                           ; BSR set to: 0
 14915  010060  0E00               	movlw	0
 14916  010062  0100               	movlb	0	; () banked
 14917  010064  6F9A               	movwf	(fat_find_file@offset+1)& (0+255),b
 14918  010066  0E00               	movlw	0
 14919  010068  6F99               	movwf	fat_find_file@offset& (0+255),b
 14920  01006A                     l20075:
 14921                           
 14922                           ; BSR set to: 0
 14923  01006A  0E02               	movlw	2
 14924  01006C  0100               	movlb	0	; () banked
 14925  01006E  5D9A               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 14926  010070  B0D8               	btfsc	status,0,c
 14927  010072  D05A               	goto	l20107
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;fat16.c: 272: {
 14931                           ;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 14932                           
 14933                           ; BSR set to: 0
 14934                           
 14935                           ; BSR set to: 0
 14936  010074  C097  F073         	movff	fat_find_file@sector,flash_partial_read@page
 14937  010078  C098  F074         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 14938  01007C  C099  F075         	movff	fat_find_file@offset,flash_partial_read@start
 14939  010080  C09A  F076         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 14940  010084  0E00               	movlw	0
 14941  010086  0100               	movlb	0	; () banked
 14942  010088  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14943  01008A  0E0B               	movlw	11
 14944  01008C  6F77               	movwf	flash_partial_read@length& (0+255),b
 14945  01008E  0E8B               	movlw	low fat_find_file@buffer
 14946  010090  0100               	movlb	0	; () banked
 14947  010092  6F79               	movwf	flash_partial_read@data& (0+255),b
 14948  010094  0E00               	movlw	high fat_find_file@buffer
 14949  010096  0100               	movlb	0	; () banked
 14950  010098  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14951  01009A  EC8E  F08A         	call	_flash_partial_read	;wreg free
 14952                           
 14953                           ;fat16.c: 274: if(buffer[0]==0x00)
 14954  01009E  0100               	movlb	0	; () banked
 14955  0100A0  518B               	movf	fat_find_file@buffer& (0+255),w,b
 14956  0100A2  0100               	movlb	0	; () banked
 14957  0100A4  A4D8               	btfss	status,2,c
 14958  0100A6  D002               	goto	l20089
 14959                           
 14960                           ; BSR set to: 0
 14961                           ;fat16.c: 275: {
 14962                           ;fat16.c: 278: return 0xFF;
 14963  0100A8  0EFF               	movlw	255
 14964                           
 14965                           ; BSR set to: 0
 14966  0100AA  0012               	return	
 14967  0100AC                     l20089:
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 14971  0100AC  0EE5               	movlw	229
 14972  0100AE  0100               	movlb	0	; () banked
 14973  0100B0  198B               	xorwf	fat_find_file@buffer& (0+255),w,b
 14974  0100B2  B4D8               	btfsc	status,2,c
 14975  0100B4  D031               	goto	l20101
 14976                           
 14977                           ; BSR set to: 0
 14978                           ;fat16.c: 286: else
 14979                           ;fat16.c: 287: {
 14980                           ;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 14981                           
 14982                           ; BSR set to: 0
 14983                           
 14984                           ; BSR set to: 0
 14985                           ;fat16.c: 281: {
 14986                           ;fat16.c: 285: }
 14987  0100B6  C087  F060         	movff	fat_find_file@name,strncmp@s1
 14988  0100BA  C088  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 14989  0100BE  0E8B               	movlw	low fat_find_file@buffer
 14990  0100C0  0100               	movlb	0	; () banked
 14991  0100C2  6F62               	movwf	strncmp@s2& (0+255),b
 14992  0100C4  0E00               	movlw	high fat_find_file@buffer
 14993  0100C6  0100               	movlb	0	; () banked
 14994  0100C8  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14995  0100CA  0E00               	movlw	0
 14996  0100CC  0100               	movlb	0	; () banked
 14997  0100CE  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14998  0100D0  0E08               	movlw	8
 14999  0100D2  6F64               	movwf	strncmp@len& (0+255),b
 15000  0100D4  EC68  F08C         	call	_strncmp	;wreg free
 15001  0100D8  0100               	movlb	0	; () banked
 15002  0100DA  5160               	movf	?_strncmp& (0+255),w,b
 15003  0100DC  0100               	movlb	0	; () banked
 15004  0100DE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 15005  0100E0  A4D8               	btfss	status,2,c
 15006  0100E2  D01A               	goto	l20101
 15007                           
 15008                           ; BSR set to: 0
 15009                           ;fat16.c: 290: {
 15010                           ;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 15011  0100E4  C089  F060         	movff	fat_find_file@extension,strncmp@s1
 15012  0100E8  C08A  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 15013  0100EC  0E93               	movlw	low (fat_find_file@buffer+8)
 15014  0100EE  0100               	movlb	0	; () banked
 15015  0100F0  6F62               	movwf	strncmp@s2& (0+255),b
 15016  0100F2  0E00               	movlw	high (fat_find_file@buffer+8)
 15017  0100F4  0100               	movlb	0	; () banked
 15018  0100F6  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 15019  0100F8  0E00               	movlw	0
 15020  0100FA  0100               	movlb	0	; () banked
 15021  0100FC  6F65               	movwf	(strncmp@len+1)& (0+255),b
 15022  0100FE  0E03               	movlw	3
 15023  010100  6F64               	movwf	strncmp@len& (0+255),b
 15024  010102  EC68  F08C         	call	_strncmp	;wreg free
 15025  010106  0100               	movlb	0	; () banked
 15026  010108  5160               	movf	?_strncmp& (0+255),w,b
 15027  01010A  0100               	movlb	0	; () banked
 15028  01010C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 15029  01010E  A4D8               	btfss	status,2,c
 15030  010110  D003               	goto	l20101
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;fat16.c: 293: {
 15034                           ;fat16.c: 296: return slot;
 15035  010112  0100               	movlb	0	; () banked
 15036  010114  5196               	movf	fat_find_file@slot& (0+255),w,b
 15037                           
 15038                           ; BSR set to: 0
 15039  010116  0012               	return	
 15040  010118                     l20101:
 15041                           
 15042                           ; BSR set to: 0
 15043                           ;fat16.c: 297: }
 15044                           ;fat16.c: 298: }
 15045                           ;fat16.c: 299: }
 15046                           ;fat16.c: 300: ++slot;
 15047  010118  0100               	movlb	0	; () banked
 15048  01011A  2B96               	incf	fat_find_file@slot& (0+255),f,b
 15049                           
 15050                           ; BSR set to: 0
 15051  01011C  0E20               	movlw	32
 15052  01011E  0100               	movlb	0	; () banked
 15053  010120  2799               	addwf	fat_find_file@offset& (0+255),f,b
 15054  010122  0E00               	movlw	0
 15055  010124  239A               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 15056  010126  D7A1               	goto	l20075
 15057  010128                     l20107:
 15058                           
 15059                           ; BSR set to: 0
 15060  010128  0100               	movlb	0	; () banked
 15061  01012A  4B97               	infsnz	fat_find_file@sector& (0+255),f,b
 15062  01012C  2B98               	incf	(fat_find_file@sector+1)& (0+255),f,b
 15063  01012E  D790               	goto	l20069
 15064  010130                     l20111:
 15065                           
 15066                           ; BSR set to: 0
 15067                           ;fat16.c: 301: }
 15068                           ;fat16.c: 302: }
 15069                           ;fat16.c: 303: return 0xFF;
 15070  010130  0EFF               	movlw	255
 15071  010132  0012               	return	
 15072  010134                     __end_of_fat_find_file:
 15073                           	opt stack 0
 15074                           tblptru	equ	0xFF8
 15075                           tblptrh	equ	0xFF7
 15076                           tblptrl	equ	0xFF6
 15077                           tablat	equ	0xFF5
 15078                           prodh	equ	0xFF4
 15079                           prodl	equ	0xFF3
 15080                           intcon	equ	0xFF2
 15081                           intcon2	equ	0xFF1
 15082                           intcon3	equ	0xFF0
 15083                           postinc0	equ	0xFEE
 15084                           wreg	equ	0xFE8
 15085                           postdec1	equ	0xFE5
 15086                           plusw1	equ	0xFE3
 15087                           fsr1h	equ	0xFE2
 15088                           fsr1l	equ	0xFE1
 15089                           indf2	equ	0xFDF
 15090                           postinc2	equ	0xFDE
 15091                           postdec2	equ	0xFDD
 15092                           plusw2	equ	0xFDB
 15093                           fsr2h	equ	0xFDA
 15094                           fsr2l	equ	0xFD9
 15095                           status	equ	0xFD8
 15096                           
 15097 ;; *************** function _strncmp *****************
 15098 ;; Defined at:
 15099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strncmp.c"
 15100 ;; Parameters:    Size  Location     Type
 15101 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 15102 ;;		 -> extension(4), filename(9), 
 15103 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 15104 ;;		 -> fat_find_file@buffer(11), 
 15105 ;;  len             2    4[BANK0 ] unsigned int 
 15106 ;; Auto vars:     Size  Location     Type
 15107 ;;		None
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  2    0[BANK0 ] int 
 15110 ;; Registers used:
 15111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15112 ;; Tracked objects:
 15113 ;;		On entry : 0/0
 15114 ;;		On exit  : 0/0
 15115 ;;		Unchanged: 0/0
 15116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15117 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15119 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15120 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15121 ;;Total ram usage:        9 bytes
 15122 ;; Hardware stack levels used:    1
 15123 ;; Hardware stack levels required when called:   10
 15124 ;; This function calls:
 15125 ;;		Nothing
 15126 ;; This function is called by:
 15127 ;;		_fat_find_file
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text59
 15132  0118D0                     __ptext59:
 15133                           	opt stack 0
 15134  0118D0                     _strncmp:
 15135                           	opt stack 18
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;incstack = 0
 15139  0118D0  D039               	goto	l19299
 15140  0118D2                     l19289:
 15141  0118D2  C060  FFD9         	movff	strncmp@s1,fsr2l
 15142  0118D6  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 15143  0118DA  50DF               	movf	indf2,w,c
 15144  0118DC  B4D8               	btfsc	status,2,c
 15145  0118DE  D00C               	goto	l19293
 15146  0118E0  C062  FFD9         	movff	strncmp@s2,fsr2l
 15147  0118E4  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 15148  0118E8  C060  FFE1         	movff	strncmp@s1,fsr1l
 15149  0118EC  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 15150  0118F0  50DE               	movf	postinc2,w,c
 15151  0118F2  18E6               	xorwf	postinc1,w,c
 15152  0118F4  B4D8               	btfsc	status,2,c
 15153  0118F6  D020               	goto	l19297
 15154  0118F8                     l19293:
 15155  0118F8  C062  FFD9         	movff	strncmp@s2,fsr2l
 15156  0118FC  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 15157  011900  50DF               	movf	indf2,w,c
 15158  011902  0100               	movlb	0	; () banked
 15159  011904  6F66               	movwf	??_strncmp& (0+255),b
 15160  011906  6B67               	clrf	(??_strncmp+1)& (0+255),b
 15161  011908  0100               	movlb	0	; () banked
 15162  01190A  1F66               	comf	??_strncmp& (0+255),f,b
 15163  01190C  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 15164  01190E  4B66               	infsnz	??_strncmp& (0+255),f,b
 15165  011910  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 15166  011912  C060  FFD9         	movff	strncmp@s1,fsr2l
 15167  011916  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 15168  01191A  50DF               	movf	indf2,w,c
 15169  01191C  0100               	movlb	0	; () banked
 15170  01191E  6F68               	movwf	(??_strncmp+2)& (0+255),b
 15171  011920  0100               	movlb	0	; () banked
 15172  011922  5168               	movf	(??_strncmp+2)& (0+255),w,b
 15173  011924  0100               	movlb	0	; () banked
 15174  011926  2566               	addwf	??_strncmp& (0+255),w,b
 15175  011928  0100               	movlb	0	; () banked
 15176  01192A  6F60               	movwf	?_strncmp& (0+255),b
 15177  01192C  0E00               	movlw	0
 15178  01192E  0100               	movlb	0	; () banked
 15179  011930  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 15180  011932  0100               	movlb	0	; () banked
 15181  011934  6F61               	movwf	(?_strncmp+1)& (0+255),b
 15182                           
 15183                           ; BSR set to: 0
 15184  011936  0012               	return	
 15185  011938                     l19297:
 15186  011938  0100               	movlb	0	; () banked
 15187  01193A  4B60               	infsnz	strncmp@s1& (0+255),f,b
 15188  01193C  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 15189  01193E  0100               	movlb	0	; () banked
 15190  011940  4B62               	infsnz	strncmp@s2& (0+255),f,b
 15191  011942  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 15192  011944                     l19299:
 15193  011944  0100               	movlb	0	; () banked
 15194  011946  0764               	decf	strncmp@len& (0+255),f,b
 15195  011948  A0D8               	btfss	status,0,c
 15196  01194A  0765               	decf	(strncmp@len+1)& (0+255),f,b
 15197  01194C  0100               	movlb	0	; () banked
 15198  01194E  2964               	incf	strncmp@len& (0+255),w,b
 15199  011950  E1C0               	bnz	l19289
 15200  011952  0100               	movlb	0	; () banked
 15201  011954  2965               	incf	(strncmp@len+1)& (0+255),w,b
 15202  011956  A4D8               	btfss	status,2,c
 15203  011958  D7BC               	goto	l19289
 15204                           
 15205                           ; BSR set to: 0
 15206                           
 15207                           ; BSR set to: 0
 15208  01195A  0E00               	movlw	0
 15209  01195C  0100               	movlb	0	; () banked
 15210  01195E  6F61               	movwf	(?_strncmp+1)& (0+255),b
 15211  011960  0E00               	movlw	0
 15212  011962  6F60               	movwf	?_strncmp& (0+255),b
 15213  011964  0012               	return	
 15214  011966                     __end_of_strncmp:
 15215                           	opt stack 0
 15216                           tblptru	equ	0xFF8
 15217                           tblptrh	equ	0xFF7
 15218                           tblptrl	equ	0xFF6
 15219                           tablat	equ	0xFF5
 15220                           prodh	equ	0xFF4
 15221                           prodl	equ	0xFF3
 15222                           intcon	equ	0xFF2
 15223                           intcon2	equ	0xFF1
 15224                           intcon3	equ	0xFF0
 15225                           postinc0	equ	0xFEE
 15226                           wreg	equ	0xFE8
 15227                           postinc1	equ	0xFE6
 15228                           postdec1	equ	0xFE5
 15229                           plusw1	equ	0xFE3
 15230                           fsr1h	equ	0xFE2
 15231                           fsr1l	equ	0xFE1
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           postdec2	equ	0xFDD
 15235                           plusw2	equ	0xFDB
 15236                           fsr2h	equ	0xFDA
 15237                           fsr2l	equ	0xFD9
 15238                           status	equ	0xFD8
 15239                           
 15240 ;; *************** function __get_available_root_entry *****************
 15241 ;; Defined at:
 15242 ;;		line 96 in file "fat16.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;		None
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;  file_number     1   46[BANK0 ] unsigned char 
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      unsigned char 
 15249 ;; Registers used:
 15250 ;;		wreg, status,2, status,0, cstack
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15259 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15260 ;;Total ram usage:        1 bytes
 15261 ;; Hardware stack levels used:    1
 15262 ;; Hardware stack levels required when called:   15
 15263 ;; This function calls:
 15264 ;;		__root_is_available
 15265 ;; This function is called by:
 15266 ;;		_fat_create_file
 15267 ;; This function uses a non-reentrant model
 15268 ;;
 15269                           
 15270                           	psect	text60
 15271  013ADE                     __ptext60:
 15272                           	opt stack 0
 15273  013ADE                     __get_available_root_entry:
 15274                           	opt stack 13
 15275                           
 15276                           ;fat16.c: 98: uint8_t file_number;
 15277                           ;fat16.c: 99: for(file_number=0; file_number<64; ++file_number)
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;incstack = 0
 15281  013ADE  0E00               	movlw	0
 15282  013AE0  0100               	movlb	0	; () banked
 15283  013AE2  6F8E               	movwf	__get_available_root_entry@file_number& (0+255),b
 15284  013AE4                     l19961:
 15285                           
 15286                           ; BSR set to: 0
 15287  013AE4  0E3F               	movlw	63
 15288  013AE6  0100               	movlb	0	; () banked
 15289  013AE8  658E               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 15290  013AEA  D001               	goto	l19965
 15291  013AEC  D00D               	goto	l19975
 15292  013AEE                     l19965:
 15293                           
 15294                           ; BSR set to: 0
 15295                           ;fat16.c: 100: {
 15296                           ;fat16.c: 101: if(_root_is_available(file_number))
 15297  013AEE  0100               	movlb	0	; () banked
 15298  013AF0  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15299  013AF2  ECB3  F08C         	call	__root_is_available
 15300  013AF6  0900               	iorlw	0
 15301  013AF8  B4D8               	btfsc	status,2,c
 15302  013AFA  D003               	goto	l19971
 15303                           
 15304                           ;fat16.c: 102: {
 15305                           ;fat16.c: 103: return file_number;
 15306  013AFC  0100               	movlb	0	; () banked
 15307  013AFE  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15308                           
 15309                           ; BSR set to: 0
 15310  013B00  0012               	return	
 15311  013B02                     l19971:
 15312  013B02  0100               	movlb	0	; () banked
 15313  013B04  2B8E               	incf	__get_available_root_entry@file_number& (0+255),f,b
 15314  013B06  D7EE               	goto	l19961
 15315  013B08                     l19975:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;fat16.c: 104: }
 15319                           ;fat16.c: 105: }
 15320                           ;fat16.c: 106: return 0xFF;
 15321  013B08  0EFF               	movlw	255
 15322  013B0A  0012               	return	
 15323  013B0C                     __end_of__get_available_root_entry:
 15324                           	opt stack 0
 15325                           tblptru	equ	0xFF8
 15326                           tblptrh	equ	0xFF7
 15327                           tblptrl	equ	0xFF6
 15328                           tablat	equ	0xFF5
 15329                           prodh	equ	0xFF4
 15330                           prodl	equ	0xFF3
 15331                           intcon	equ	0xFF2
 15332                           intcon2	equ	0xFF1
 15333                           intcon3	equ	0xFF0
 15334                           postinc0	equ	0xFEE
 15335                           wreg	equ	0xFE8
 15336                           postinc1	equ	0xFE6
 15337                           postdec1	equ	0xFE5
 15338                           plusw1	equ	0xFE3
 15339                           fsr1h	equ	0xFE2
 15340                           fsr1l	equ	0xFE1
 15341                           indf2	equ	0xFDF
 15342                           postinc2	equ	0xFDE
 15343                           postdec2	equ	0xFDD
 15344                           plusw2	equ	0xFDB
 15345                           fsr2h	equ	0xFDA
 15346                           fsr2l	equ	0xFD9
 15347                           status	equ	0xFD8
 15348                           
 15349 ;; *************** function _fat_append_to_file *****************
 15350 ;; Defined at:
 15351 ;;		line 460 in file "fat16.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;  file_number     1    wreg     unsigned char 
 15354 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 15355 ;;  data            2   51[BANK0 ] PTR unsigned char 
 15356 ;;		 -> log_write_to_disk@log_entry(32), 
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;  file_number     1   73[BANK0 ] unsigned char 
 15359 ;;  root           32   80[BANK0 ] struct .
 15360 ;;  position        4   76[BANK0 ] unsigned long 
 15361 ;;  file_size       4   63[BANK0 ] unsigned long 
 15362 ;;  length          2   74[BANK0 ] unsigned int 
 15363 ;;  offset          2   71[BANK0 ] unsigned int 
 15364 ;;  fat_cluster     2   69[BANK0 ] unsigned int 
 15365 ;;  new_cluster     2   67[BANK0 ] unsigned int 
 15366 ;;  sector          2   61[BANK0 ] unsigned int 
 15367 ;; Return value:  Size  Location     Type
 15368 ;;                  1    wreg      unsigned char 
 15369 ;; Registers used:
 15370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15371 ;; Tracked objects:
 15372 ;;		On entry : 0/0
 15373 ;;		On exit  : 0/0
 15374 ;;		Unchanged: 0/0
 15375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15377 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15378 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15379 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15380 ;;Total ram usage:       63 bytes
 15381 ;; Hardware stack levels used:    1
 15382 ;; Hardware stack levels required when called:   16
 15383 ;; This function calls:
 15384 ;;		__get_empty_cluster
 15385 ;;		__read_fat
 15386 ;;		__read_root
 15387 ;;		__root_is_available
 15388 ;;		__sector_from_cluster
 15389 ;;		__update_modified_time
 15390 ;;		__write_fat
 15391 ;;		__write_root
 15392 ;;		_flash_partial_write
 15393 ;; This function is called by:
 15394 ;;		_log_write_to_disk
 15395 ;; This function uses a non-reentrant model
 15396 ;;
 15397                           
 15398                           	psect	text61
 15399  00C4BE                     __ptext61:
 15400                           	opt stack 0
 15401  00C4BE                     _fat_append_to_file:
 15402                           	opt stack 13
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;incstack = 0
 15406                           ;fat_append_to_file@file_number stored from wreg
 15407  00C4BE  0100               	movlb	0	; () banked
 15408  00C4C0  6FA9               	movwf	fat_append_to_file@file_number& (0+255),b
 15409                           
 15410                           ;fat16.c: 462: rootEntry_t root;
 15411                           ;fat16.c: 463: uint32_t file_size;
 15412                           ;fat16.c: 464: uint16_t fat_cluster;
 15413                           ;fat16.c: 465: uint16_t new_cluster;
 15414                           ;fat16.c: 466: uint32_t position;
 15415                           ;fat16.c: 467: uint16_t offset;
 15416                           ;fat16.c: 468: uint16_t sector;
 15417                           ;fat16.c: 469: uint16_t length;
 15418                           ;fat16.c: 472: if(file_number>=64)
 15419  00C4C2  0E3F               	movlw	63
 15420  00C4C4  0100               	movlb	0	; () banked
 15421  00C4C6  65A9               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 15422  00C4C8  D001               	goto	l21875
 15423  00C4CA  0012               	return	
 15424  00C4CC                     l21875:
 15425                           
 15426                           ; BSR set to: 0
 15427                           ;fat16.c: 476: }
 15428                           ;fat16.c: 479: if(_root_is_available(file_number))
 15429  00C4CC  0100               	movlb	0	; () banked
 15430  00C4CE  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15431  00C4D0  ECB3  F08C         	call	__root_is_available
 15432  00C4D4  0900               	iorlw	0
 15433  00C4D6  A4D8               	btfss	status,2,c
 15434  00C4D8  0012               	return	
 15435                           
 15436                           ;fat16.c: 483: }
 15437                           ;fat16.c: 486: _read_root(file_number, &root);
 15438                           
 15439                           ;fat16.c: 480: {
 15440                           ;fat16.c: 482: return 0xFE;
 15441                           ;	Return value of _fat_append_to_file is never used
 15442  00C4DA  0EB0               	movlw	low fat_append_to_file@root
 15443  00C4DC  0100               	movlb	0	; () banked
 15444  00C4DE  6F87               	movwf	__read_root@data& (0+255),b
 15445  00C4E0  0E00               	movlw	high fat_append_to_file@root
 15446  00C4E2  0100               	movlb	0	; () banked
 15447  00C4E4  6F88               	movwf	(__read_root@data+1)& (0+255),b
 15448  00C4E6  0100               	movlb	0	; () banked
 15449  00C4E8  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15450  00C4EA  EC81  F094         	call	__read_root
 15451                           
 15452                           ;fat16.c: 487: file_size = root.fileSize;
 15453  00C4EE  C0CC  F09F         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 15454  00C4F2  C0CD  F0A0         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 15455  00C4F6  C0CE  F0A1         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 15456  00C4FA  C0CF  F0A2         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 15457                           
 15458                           ;fat16.c: 488: fat_cluster = root.firstCluster;
 15459  00C4FE  C0CA  F0A5         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 15460  00C502  C0CB  F0A6         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 15461                           
 15462                           ;fat16.c: 491: position = 0;
 15463  00C506  0E00               	movlw	0
 15464  00C508  0100               	movlb	0	; () banked
 15465  00C50A  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 15466  00C50C  0E00               	movlw	0
 15467  00C50E  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 15468  00C510  0E00               	movlw	0
 15469  00C512  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 15470  00C514  0E00               	movlw	0
 15471  00C516  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 15472                           
 15473                           ;fat16.c: 492: while((file_size-position)>512)
 15474  00C518  D013               	goto	l21891
 15475  00C51A                     l21887:
 15476                           
 15477                           ; BSR set to: 0
 15478                           ;fat16.c: 493: {
 15479                           ;fat16.c: 494: fat_cluster = _read_fat(fat_cluster);
 15480  00C51A  C0A5  F087         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 15481  00C51E  C0A6  F088         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 15482  00C522  EC5F  F098         	call	__read_fat	;wreg free
 15483  00C526  C087  F0A5         	movff	?__read_fat,fat_append_to_file@fat_cluster
 15484  00C52A  C088  F0A6         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 15485                           
 15486                           ;fat16.c: 495: position += 512;
 15487  00C52E  0E00               	movlw	0
 15488  00C530  0100               	movlb	0	; () banked
 15489  00C532  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 15490  00C534  0E02               	movlw	2
 15491  00C536  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 15492  00C538  0E00               	movlw	0
 15493  00C53A  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 15494  00C53C  0E00               	movlw	0
 15495  00C53E  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 15496  00C540                     l21891:
 15497                           
 15498                           ; BSR set to: 0
 15499  00C540  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 15500  00C544  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 15501  00C548  C0AE  F097         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 15502  00C54C  C0AF  F098         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 15503  00C550  0100               	movlb	0	; () banked
 15504  00C552  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15505  00C554  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15506  00C556  1F97               	comf	(??_fat_append_to_file+2)& (0+255),f,b
 15507  00C558  1F98               	comf	(??_fat_append_to_file+3)& (0+255),f,b
 15508  00C55A  2B95               	incf	??_fat_append_to_file& (0+255),f,b
 15509  00C55C  0E00               	movlw	0
 15510  00C55E  2396               	addwfc	(??_fat_append_to_file+1)& (0+255),f,b
 15511  00C560  2397               	addwfc	(??_fat_append_to_file+2)& (0+255),f,b
 15512  00C562  2398               	addwfc	(??_fat_append_to_file+3)& (0+255),f,b
 15513  00C564  0100               	movlb	0	; () banked
 15514  00C566  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 15515  00C568  0100               	movlb	0	; () banked
 15516  00C56A  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15517  00C56C  0100               	movlb	0	; () banked
 15518  00C56E  6F99               	movwf	(??_fat_append_to_file+4)& (0+255),b
 15519  00C570  0100               	movlb	0	; () banked
 15520  00C572  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 15521  00C574  0100               	movlb	0	; () banked
 15522  00C576  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15523  00C578  0100               	movlb	0	; () banked
 15524  00C57A  6F9A               	movwf	(??_fat_append_to_file+5)& (0+255),b
 15525  00C57C  0100               	movlb	0	; () banked
 15526  00C57E  51A1               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 15527  00C580  0100               	movlb	0	; () banked
 15528  00C582  2197               	addwfc	(??_fat_append_to_file+2)& (0+255),w,b
 15529  00C584  0100               	movlb	0	; () banked
 15530  00C586  6F9B               	movwf	(??_fat_append_to_file+6)& (0+255),b
 15531  00C588  0100               	movlb	0	; () banked
 15532  00C58A  51A2               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 15533  00C58C  0100               	movlb	0	; () banked
 15534  00C58E  2198               	addwfc	(??_fat_append_to_file+3)& (0+255),w,b
 15535  00C590  0100               	movlb	0	; () banked
 15536  00C592  6F9C               	movwf	(??_fat_append_to_file+7)& (0+255),b
 15537  00C594  0100               	movlb	0	; () banked
 15538  00C596  519C               	movf	(??_fat_append_to_file+7)& (0+255),w,b
 15539  00C598  0100               	movlb	0	; () banked
 15540  00C59A  119B               	iorwf	(??_fat_append_to_file+6)& (0+255),w,b
 15541  00C59C  E1BE               	bnz	l21887
 15542  00C59E  0100               	movlb	0	; () banked
 15543  00C5A0  0599               	decf	(??_fat_append_to_file+4)& (0+255),w,b
 15544  00C5A2  0E02               	movlw	2
 15545  00C5A4  0100               	movlb	0	; () banked
 15546  00C5A6  599A               	subwfb	(??_fat_append_to_file+5)& (0+255),w,b
 15547  00C5A8  B0D8               	btfsc	status,0,c
 15548  00C5AA  D7B7               	goto	l21887
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;fat16.c: 496: }
 15552                           ;fat16.c: 499: offset = file_size - position;
 15553                           
 15554                           ; BSR set to: 0
 15555  00C5AC  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 15556  00C5B0  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 15557  00C5B4  0100               	movlb	0	; () banked
 15558  00C5B6  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15559  00C5B8  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15560  00C5BA  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 15561  00C5BC  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 15562  00C5BE  0100               	movlb	0	; () banked
 15563  00C5C0  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 15564  00C5C2  0100               	movlb	0	; () banked
 15565  00C5C4  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15566  00C5C6  0100               	movlb	0	; () banked
 15567  00C5C8  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 15568  00C5CA  0100               	movlb	0	; () banked
 15569  00C5CC  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 15570  00C5CE  0100               	movlb	0	; () banked
 15571  00C5D0  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15572  00C5D2  0100               	movlb	0	; () banked
 15573  00C5D4  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;fat16.c: 502: position = 0;
 15577  00C5D6  0E00               	movlw	0
 15578  00C5D8  0100               	movlb	0	; () banked
 15579  00C5DA  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 15580  00C5DC  0E00               	movlw	0
 15581  00C5DE  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 15582  00C5E0  0E00               	movlw	0
 15583  00C5E2  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 15584  00C5E4  0E00               	movlw	0
 15585  00C5E6  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 15586                           
 15587                           ;fat16.c: 503: while(position < number_of_bytes)
 15588  00C5E8  D08A               	goto	l21919
 15589  00C5EA                     l21897:
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;fat16.c: 504: {
 15593                           ;fat16.c: 506: if(offset==512)
 15594  00C5EA  0E02               	movlw	2
 15595  00C5EC  0100               	movlb	0	; () banked
 15596  00C5EE  19A8               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 15597  00C5F0  0100               	movlb	0	; () banked
 15598  00C5F2  11A7               	iorwf	fat_append_to_file@offset& (0+255),w,b
 15599  00C5F4  A4D8               	btfss	status,2,c
 15600  00C5F6  D028               	goto	l21905
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;fat16.c: 507: {
 15604                           ;fat16.c: 510: new_cluster = _get_empty_cluster(0x0000);
 15605  00C5F8  0E00               	movlw	0
 15606  00C5FA  0100               	movlb	0	; () banked
 15607  00C5FC  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 15608  00C5FE  0E00               	movlw	0
 15609  00C600  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 15610  00C602  EC93  F08D         	call	__get_empty_cluster	;wreg free
 15611  00C606  C087  F0A3         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 15612  00C60A  C088  F0A4         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 15613                           
 15614                           ;fat16.c: 512: _write_fat(fat_cluster, new_cluster);
 15615  00C60E  C0A5  F088         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 15616  00C612  C0A6  F089         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 15617  00C616  C0A3  F08A         	movff	fat_append_to_file@new_cluster,__write_fat@value
 15618  00C61A  C0A4  F08B         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 15619  00C61E  EC91  F099         	call	__write_fat	;wreg free
 15620                           
 15621                           ;fat16.c: 514: _write_fat(new_cluster, 0xFFFF);
 15622  00C622  C0A3  F088         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 15623  00C626  C0A4  F089         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 15624  00C62A  0EFF               	movlw	255
 15625  00C62C  0100               	movlb	0	; () banked
 15626  00C62E  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 15627  00C630  698A               	setf	__write_fat@value& (0+255),b
 15628  00C632  EC91  F099         	call	__write_fat	;wreg free
 15629                           
 15630                           ;fat16.c: 516: fat_cluster = new_cluster;
 15631  00C636  C0A3  F0A5         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 15632  00C63A  C0A4  F0A6         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 15633                           
 15634                           ;fat16.c: 517: offset = 0;
 15635  00C63E  0E00               	movlw	0
 15636  00C640  0100               	movlb	0	; () banked
 15637  00C642  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 15638  00C644  0E00               	movlw	0
 15639  00C646  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 15640  00C648                     l21905:
 15641                           
 15642                           ; BSR set to: 0
 15643                           ;fat16.c: 518: }
 15644                           ;fat16.c: 521: sector = _sector_from_cluster(fat_cluster);
 15645  00C648  C0A5  F060         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 15646  00C64C  C0A6  F061         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 15647  00C650  EC6B  F0A0         	call	__sector_from_cluster	;wreg free
 15648  00C654  C060  F09D         	movff	?__sector_from_cluster,fat_append_to_file@sector
 15649  00C658  C061  F09E         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 15650                           
 15651                           ;fat16.c: 524: length = 512 - offset;
 15652  00C65C  C0A7  F095         	movff	fat_append_to_file@offset,??_fat_append_to_file
 15653  00C660  C0A8  F096         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 15654  00C664  0100               	movlb	0	; () banked
 15655  00C666  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15656  00C668  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15657  00C66A  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 15658  00C66C  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 15659  00C66E  0E00               	movlw	0
 15660  00C670  0100               	movlb	0	; () banked
 15661  00C672  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15662  00C674  0100               	movlb	0	; () banked
 15663  00C676  6FAA               	movwf	fat_append_to_file@length& (0+255),b
 15664  00C678  0E02               	movlw	2
 15665  00C67A  0100               	movlb	0	; () banked
 15666  00C67C  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15667  00C67E  0100               	movlb	0	; () banked
 15668  00C680  6FAB               	movwf	(fat_append_to_file@length+1)& (0+255),b
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;fat16.c: 525: if(length>number_of_bytes)
 15672  00C682  0100               	movlb	0	; () banked
 15673  00C684  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15674  00C686  0100               	movlb	0	; () banked
 15675  00C688  5D91               	subwf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15676  00C68A  0100               	movlb	0	; () banked
 15677  00C68C  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15678  00C68E  0100               	movlb	0	; () banked
 15679  00C690  5992               	subwfb	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15680  00C692  B0D8               	btfsc	status,0,c
 15681  00C694  D004               	goto	l21913
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;fat16.c: 526: {
 15685                           ;fat16.c: 527: length = number_of_bytes;
 15686  00C696  C091  F0AA         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 15687  00C69A  C092  F0AB         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 15688  00C69E                     l21913:
 15689                           
 15690                           ; BSR set to: 0
 15691                           ;fat16.c: 528: }
 15692                           ;fat16.c: 531: flash_partial_write(sector, offset, length, &data[position]);
 15693  00C69E  C09D  F07F         	movff	fat_append_to_file@sector,flash_partial_write@page
 15694  00C6A2  C09E  F080         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 15695  00C6A6  C0A7  F081         	movff	fat_append_to_file@offset,flash_partial_write@start
 15696  00C6AA  C0A8  F082         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 15697  00C6AE  C0AA  F083         	movff	fat_append_to_file@length,flash_partial_write@length
 15698  00C6B2  C0AB  F084         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 15699  00C6B6  0100               	movlb	0	; () banked
 15700  00C6B8  51AC               	movf	fat_append_to_file@position& (0+255),w,b
 15701  00C6BA  0100               	movlb	0	; () banked
 15702  00C6BC  2593               	addwf	fat_append_to_file@data& (0+255),w,b
 15703  00C6BE  0100               	movlb	0	; () banked
 15704  00C6C0  6F85               	movwf	flash_partial_write@data& (0+255),b
 15705  00C6C2  0100               	movlb	0	; () banked
 15706  00C6C4  51AD               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 15707  00C6C6  0100               	movlb	0	; () banked
 15708  00C6C8  2194               	addwfc	(fat_append_to_file@data+1)& (0+255),w,b
 15709  00C6CA  0100               	movlb	0	; () banked
 15710  00C6CC  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15711  00C6CE  EC6C  F093         	call	_flash_partial_write	;wreg free
 15712                           
 15713                           ;fat16.c: 534: position += length;
 15714  00C6D2  0100               	movlb	0	; () banked
 15715  00C6D4  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15716  00C6D6  0100               	movlb	0	; () banked
 15717  00C6D8  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 15718  00C6DA  0100               	movlb	0	; () banked
 15719  00C6DC  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15720  00C6DE  0100               	movlb	0	; () banked
 15721  00C6E0  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 15722  00C6E2  0E00               	movlw	0
 15723  00C6E4  0100               	movlb	0	; () banked
 15724  00C6E6  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 15725  00C6E8  0E00               	movlw	0
 15726  00C6EA  0100               	movlb	0	; () banked
 15727  00C6EC  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 15728                           
 15729                           ; BSR set to: 0
 15730                           ;fat16.c: 535: offset += length;
 15731  00C6EE  0100               	movlb	0	; () banked
 15732  00C6F0  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15733  00C6F2  0100               	movlb	0	; () banked
 15734  00C6F4  27A7               	addwf	fat_append_to_file@offset& (0+255),f,b
 15735  00C6F6  0100               	movlb	0	; () banked
 15736  00C6F8  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15737  00C6FA  0100               	movlb	0	; () banked
 15738  00C6FC  23A8               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 15739  00C6FE                     l21919:
 15740                           
 15741                           ; BSR set to: 0
 15742  00C6FE  0100               	movlb	0	; () banked
 15743  00C700  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15744  00C702  0100               	movlb	0	; () banked
 15745  00C704  6F95               	movwf	??_fat_append_to_file& (0+255),b
 15746  00C706  0100               	movlb	0	; () banked
 15747  00C708  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15748  00C70A  0100               	movlb	0	; () banked
 15749  00C70C  6F96               	movwf	(??_fat_append_to_file+1)& (0+255),b
 15750  00C70E  0100               	movlb	0	; () banked
 15751  00C710  6B97               	clrf	(??_fat_append_to_file+2)& (0+255),b
 15752  00C712  0100               	movlb	0	; () banked
 15753  00C714  6B98               	clrf	(??_fat_append_to_file+3)& (0+255),b
 15754  00C716  0100               	movlb	0	; () banked
 15755  00C718  5195               	movf	??_fat_append_to_file& (0+255),w,b
 15756  00C71A  0100               	movlb	0	; () banked
 15757  00C71C  5DAC               	subwf	fat_append_to_file@position& (0+255),w,b
 15758  00C71E  0100               	movlb	0	; () banked
 15759  00C720  5196               	movf	(??_fat_append_to_file+1)& (0+255),w,b
 15760  00C722  0100               	movlb	0	; () banked
 15761  00C724  59AD               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 15762  00C726  0100               	movlb	0	; () banked
 15763  00C728  5197               	movf	(??_fat_append_to_file+2)& (0+255),w,b
 15764  00C72A  0100               	movlb	0	; () banked
 15765  00C72C  59AE               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 15766  00C72E  0100               	movlb	0	; () banked
 15767  00C730  5198               	movf	(??_fat_append_to_file+3)& (0+255),w,b
 15768  00C732  0100               	movlb	0	; () banked
 15769  00C734  59AF               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 15770  00C736  A0D8               	btfss	status,0,c
 15771  00C738  D758               	goto	l21897
 15772                           
 15773                           ; BSR set to: 0
 15774                           ;fat16.c: 536: }
 15775                           ;fat16.c: 540: root.fileSize += number_of_bytes;
 15776                           
 15777                           ; BSR set to: 0
 15778  00C73A  0100               	movlb	0	; () banked
 15779  00C73C  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15780  00C73E  0100               	movlb	0	; () banked
 15781  00C740  27CC               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 15782  00C742  0100               	movlb	0	; () banked
 15783  00C744  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15784  00C746  0100               	movlb	0	; () banked
 15785  00C748  23CD               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 15786  00C74A  0E00               	movlw	0
 15787  00C74C  0100               	movlb	0	; () banked
 15788  00C74E  23CE               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 15789  00C750  0E00               	movlw	0
 15790  00C752  0100               	movlb	0	; () banked
 15791  00C754  23CF               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;fat16.c: 541: _update_modified_time(&root);
 15795  00C756  0EB0               	movlw	low fat_append_to_file@root
 15796  00C758  0100               	movlb	0	; () banked
 15797  00C75A  6F6D               	movwf	__update_modified_time@root& (0+255),b
 15798  00C75C  0E00               	movlw	high fat_append_to_file@root
 15799  00C75E  0100               	movlb	0	; () banked
 15800  00C760  6F6E               	movwf	(__update_modified_time@root+1)& (0+255),b
 15801  00C762  EC87  F09B         	call	__update_modified_time	;wreg free
 15802                           
 15803                           ;fat16.c: 542: _write_root(file_number, &root);
 15804  00C766  0EB0               	movlw	low fat_append_to_file@root
 15805  00C768  0100               	movlb	0	; () banked
 15806  00C76A  6F88               	movwf	__write_root@data& (0+255),b
 15807  00C76C  0E00               	movlw	high fat_append_to_file@root
 15808  00C76E  0100               	movlb	0	; () banked
 15809  00C770  6F89               	movwf	(__write_root@data+1)& (0+255),b
 15810  00C772  0100               	movlb	0	; () banked
 15811  00C774  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15812  00C776  EC4B  F094         	call	__write_root
 15813  00C77A  0012               	return	
 15814  00C77C                     __end_of_fat_append_to_file:
 15815                           	opt stack 0
 15816                           tblptru	equ	0xFF8
 15817                           tblptrh	equ	0xFF7
 15818                           tblptrl	equ	0xFF6
 15819                           tablat	equ	0xFF5
 15820                           prodh	equ	0xFF4
 15821                           prodl	equ	0xFF3
 15822                           intcon	equ	0xFF2
 15823                           intcon2	equ	0xFF1
 15824                           intcon3	equ	0xFF0
 15825                           postinc0	equ	0xFEE
 15826                           wreg	equ	0xFE8
 15827                           postinc1	equ	0xFE6
 15828                           postdec1	equ	0xFE5
 15829                           plusw1	equ	0xFE3
 15830                           fsr1h	equ	0xFE2
 15831                           fsr1l	equ	0xFE1
 15832                           indf2	equ	0xFDF
 15833                           postinc2	equ	0xFDE
 15834                           postdec2	equ	0xFDD
 15835                           plusw2	equ	0xFDB
 15836                           fsr2h	equ	0xFDA
 15837                           fsr2l	equ	0xFD9
 15838                           status	equ	0xFD8
 15839                           
 15840 ;; *************** function __write_root *****************
 15841 ;; Defined at:
 15842 ;;		line 184 in file "fat16.c"
 15843 ;; Parameters:    Size  Location     Type
 15844 ;;  slot            1    wreg     unsigned char 
 15845 ;;  data            2   40[BANK0 ] PTR struct .
 15846 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  slot            1   47[BANK0 ] unsigned char 
 15849 ;;  offset          2   45[BANK0 ] unsigned int 
 15850 ;;  root_sector     2   43[BANK0 ] unsigned int 
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  1    wreg      void 
 15853 ;; Registers used:
 15854 ;;		wreg, status,2, status,0, cstack
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15861 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15863 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15864 ;;Total ram usage:        8 bytes
 15865 ;; Hardware stack levels used:    1
 15866 ;; Hardware stack levels required when called:   15
 15867 ;; This function calls:
 15868 ;;		_flash_partial_write
 15869 ;; This function is called by:
 15870 ;;		_fat_create_file
 15871 ;;		_fat_append_to_file
 15872 ;;		_fat_rename_file
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           
 15876                           	psect	text62
 15877  012896                     __ptext62:
 15878                           	opt stack 0
 15879  012896                     __write_root:
 15880                           	opt stack 13
 15881                           
 15882                           ;incstack = 0
 15883                           ;__write_root@slot stored from wreg
 15884  012896  0100               	movlb	0	; () banked
 15885  012898  6F8F               	movwf	__write_root@slot& (0+255),b
 15886                           
 15887                           ;fat16.c: 186: uint16_t root_sector;
 15888                           ;fat16.c: 187: uint16_t offset;
 15889                           ;fat16.c: 188: root_sector = (slot >> 4) + 18;
 15890  01289A  C08F  F08A         	movff	__write_root@slot,??__write_root
 15891  01289E  0100               	movlb	0	; () banked
 15892  0128A0  3B8A               	swapf	??__write_root& (0+255),f,b
 15893  0128A2  0E0F               	movlw	15
 15894  0128A4  178A               	andwf	??__write_root& (0+255),f,b
 15895  0128A6  0E12               	movlw	18
 15896  0128A8  0100               	movlb	0	; () banked
 15897  0128AA  258A               	addwf	??__write_root& (0+255),w,b
 15898  0128AC  0100               	movlb	0	; () banked
 15899  0128AE  6F8B               	movwf	__write_root@root_sector& (0+255),b
 15900  0128B0  0100               	movlb	0	; () banked
 15901  0128B2  6B8C               	clrf	(__write_root@root_sector+1)& (0+255),b
 15902  0128B4  0E00               	movlw	0
 15903  0128B6  238C               	addwfc	(__write_root@root_sector+1)& (0+255),f,b
 15904                           
 15905                           ;fat16.c: 189: offset = (slot & 0b1111);
 15906  0128B8  C08F  F08A         	movff	__write_root@slot,??__write_root
 15907  0128BC  0E0F               	movlw	15
 15908  0128BE  0100               	movlb	0	; () banked
 15909  0128C0  178A               	andwf	??__write_root& (0+255),f,b
 15910  0128C2  0100               	movlb	0	; () banked
 15911  0128C4  518A               	movf	??__write_root& (0+255),w,b
 15912  0128C6  0100               	movlb	0	; () banked
 15913  0128C8  6F8D               	movwf	__write_root@offset& (0+255),b
 15914  0128CA  6B8E               	clrf	(__write_root@offset+1)& (0+255),b
 15915                           
 15916                           ;fat16.c: 190: offset <<= 5;
 15917  0128CC  0100               	movlb	0	; () banked
 15918  0128CE  0E05               	movlw	5
 15919  0128D0                     u19145:
 15920  0128D0  90D8               	bcf	status,0,c
 15921  0128D2  378D               	rlcf	__write_root@offset& (0+255),f,b
 15922  0128D4  378E               	rlcf	(__write_root@offset+1)& (0+255),f,b
 15923  0128D6  2EE8               	decfsz	wreg,f,c
 15924  0128D8  D7FB               	goto	u19145
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;fat16.c: 191: flash_partial_write(root_sector, offset, 32, data);
 15928  0128DA  C08B  F07F         	movff	__write_root@root_sector,flash_partial_write@page
 15929  0128DE  C08C  F080         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 15930  0128E2  C08D  F081         	movff	__write_root@offset,flash_partial_write@start
 15931  0128E6  C08E  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 15932  0128EA  0E00               	movlw	0
 15933  0128EC  0100               	movlb	0	; () banked
 15934  0128EE  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15935  0128F0  0E20               	movlw	32
 15936  0128F2  6F83               	movwf	flash_partial_write@length& (0+255),b
 15937  0128F4  C088  F085         	movff	__write_root@data,flash_partial_write@data
 15938  0128F8  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 15939  0128FC  EC6C  F093         	call	_flash_partial_write	;wreg free
 15940  012900  0012               	return		;funcret
 15941  012902                     __end_of__write_root:
 15942                           	opt stack 0
 15943                           tblptru	equ	0xFF8
 15944                           tblptrh	equ	0xFF7
 15945                           tblptrl	equ	0xFF6
 15946                           tablat	equ	0xFF5
 15947                           prodh	equ	0xFF4
 15948                           prodl	equ	0xFF3
 15949                           intcon	equ	0xFF2
 15950                           intcon2	equ	0xFF1
 15951                           intcon3	equ	0xFF0
 15952                           postinc0	equ	0xFEE
 15953                           wreg	equ	0xFE8
 15954                           postinc1	equ	0xFE6
 15955                           postdec1	equ	0xFE5
 15956                           plusw1	equ	0xFE3
 15957                           fsr1h	equ	0xFE2
 15958                           fsr1l	equ	0xFE1
 15959                           indf2	equ	0xFDF
 15960                           postinc2	equ	0xFDE
 15961                           postdec2	equ	0xFDD
 15962                           plusw2	equ	0xFDB
 15963                           fsr2h	equ	0xFDA
 15964                           fsr2l	equ	0xFD9
 15965                           status	equ	0xFD8
 15966                           
 15967 ;; *************** function __write_fat *****************
 15968 ;; Defined at:
 15969 ;;		line 160 in file "fat16.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;  cluster         2   40[BANK0 ] unsigned int 
 15972 ;;  value           2   42[BANK0 ] unsigned int 
 15973 ;; Auto vars:     Size  Location     Type
 15974 ;;  offset          2   46[BANK0 ] unsigned int 
 15975 ;;  fat_sector      2   44[BANK0 ] unsigned int 
 15976 ;; Return value:  Size  Location     Type
 15977 ;;                  1    wreg      void 
 15978 ;; Registers used:
 15979 ;;		wreg, status,2, status,0, cstack
 15980 ;; Tracked objects:
 15981 ;;		On entry : 0/0
 15982 ;;		On exit  : 0/0
 15983 ;;		Unchanged: 0/0
 15984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15988 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15989 ;;Total ram usage:        8 bytes
 15990 ;; Hardware stack levels used:    1
 15991 ;; Hardware stack levels required when called:   15
 15992 ;; This function calls:
 15993 ;;		_flash_partial_write
 15994 ;; This function is called by:
 15995 ;;		_fat_create_file
 15996 ;;		_fat_append_to_file
 15997 ;;		_fat_delete_file
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text63
 16002  013322                     __ptext63:
 16003                           	opt stack 0
 16004  013322                     __write_fat:
 16005                           	opt stack 13
 16006                           
 16007                           ;fat16.c: 162: uint16_t fat_sector;
 16008                           ;fat16.c: 163: uint16_t offset;
 16009                           ;fat16.c: 164: fat_sector = cluster>>8;
 16010                           
 16011                           ;incstack = 0
 16012  013322  0100               	movlb	0	; () banked
 16013  013324  5189               	movf	(__write_fat@cluster+1)& (0+255),w,b
 16014  013326  0100               	movlb	0	; () banked
 16015  013328  6F8C               	movwf	__write_fat@fat_sector& (0+255),b
 16016  01332A  6B8D               	clrf	(__write_fat@fat_sector+1)& (0+255),b
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;fat16.c: 165: fat_sector += 2;
 16020  01332C  0E02               	movlw	2
 16021  01332E  0100               	movlb	0	; () banked
 16022  013330  278C               	addwf	__write_fat@fat_sector& (0+255),f,b
 16023  013332  0E00               	movlw	0
 16024  013334  238D               	addwfc	(__write_fat@fat_sector+1)& (0+255),f,b
 16025                           
 16026                           ; BSR set to: 0
 16027                           ;fat16.c: 166: offset = cluster & 0xFF;
 16028  013336  0100               	movlb	0	; () banked
 16029  013338  5188               	movf	__write_fat@cluster& (0+255),w,b
 16030  01333A  0100               	movlb	0	; () banked
 16031  01333C  6F8E               	movwf	__write_fat@offset& (0+255),b
 16032  01333E  6B8F               	clrf	(__write_fat@offset+1)& (0+255),b
 16033                           
 16034                           ; BSR set to: 0
 16035                           ;fat16.c: 167: offset <<= 1;
 16036  013340  0100               	movlb	0	; () banked
 16037  013342  90D8               	bcf	status,0,c
 16038  013344  378E               	rlcf	__write_fat@offset& (0+255),f,b
 16039  013346  378F               	rlcf	(__write_fat@offset+1)& (0+255),f,b
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;fat16.c: 168: flash_partial_write(fat_sector, offset, 2, &value);
 16043  013348  C08C  F07F         	movff	__write_fat@fat_sector,flash_partial_write@page
 16044  01334C  C08D  F080         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 16045  013350  C08E  F081         	movff	__write_fat@offset,flash_partial_write@start
 16046  013354  C08F  F082         	movff	__write_fat@offset+1,flash_partial_write@start+1
 16047  013358  0E00               	movlw	0
 16048  01335A  0100               	movlb	0	; () banked
 16049  01335C  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 16050  01335E  0E02               	movlw	2
 16051  013360  6F83               	movwf	flash_partial_write@length& (0+255),b
 16052  013362  0E8A               	movlw	low __write_fat@value
 16053  013364  0100               	movlb	0	; () banked
 16054  013366  6F85               	movwf	flash_partial_write@data& (0+255),b
 16055  013368  0E00               	movlw	high __write_fat@value
 16056  01336A  0100               	movlb	0	; () banked
 16057  01336C  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 16058  01336E  EC6C  F093         	call	_flash_partial_write	;wreg free
 16059  013372  0012               	return		;funcret
 16060  013374                     __end_of__write_fat:
 16061                           	opt stack 0
 16062                           tblptru	equ	0xFF8
 16063                           tblptrh	equ	0xFF7
 16064                           tblptrl	equ	0xFF6
 16065                           tablat	equ	0xFF5
 16066                           prodh	equ	0xFF4
 16067                           prodl	equ	0xFF3
 16068                           intcon	equ	0xFF2
 16069                           intcon2	equ	0xFF1
 16070                           intcon3	equ	0xFF0
 16071                           postinc0	equ	0xFEE
 16072                           wreg	equ	0xFE8
 16073                           postinc1	equ	0xFE6
 16074                           postdec1	equ	0xFE5
 16075                           plusw1	equ	0xFE3
 16076                           fsr1h	equ	0xFE2
 16077                           fsr1l	equ	0xFE1
 16078                           indf2	equ	0xFDF
 16079                           postinc2	equ	0xFDE
 16080                           postdec2	equ	0xFDD
 16081                           plusw2	equ	0xFDB
 16082                           fsr2h	equ	0xFDA
 16083                           fsr2l	equ	0xFD9
 16084                           status	equ	0xFD8
 16085                           
 16086 ;; *************** function _flash_partial_write *****************
 16087 ;; Defined at:
 16088 ;;		line 589 in file "flash.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;  page            2   31[BANK0 ] unsigned int 
 16091 ;;  start           2   33[BANK0 ] unsigned int 
 16092 ;;  length          2   35[BANK0 ] unsigned int 
 16093 ;;  data            2   37[BANK0 ] PTR unsigned char 
 16094 ;;		 -> log_write_to_disk@log_entry(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_ent
      +ry(32), 
 16095 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), 
 16096 ;; Auto vars:     Size  Location     Type
 16097 ;;  match           1   39[BANK0 ] enum E8335
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  1    wreg      void 
 16100 ;; Registers used:
 16101 ;;		wreg, status,2, status,0, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16107 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16110 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16111 ;;Total ram usage:        9 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:   14
 16114 ;; This function calls:
 16115 ;;		__flash_compare_page_to_buffer
 16116 ;;		__flash_copy_page_to_buffer
 16117 ;;		__flash_write_page_from_buffer
 16118 ;;		__flash_write_to_buffer
 16119 ;;		_flash_is_busy
 16120 ;; This function is called by:
 16121 ;;		__write_fat
 16122 ;;		__write_root
 16123 ;;		_fat_append_to_file
 16124 ;;		__delete_root
 16125 ;;		__write_file_size
 16126 ;; This function uses a non-reentrant model
 16127 ;;
 16128                           
 16129                           	psect	text64
 16130  0126D8                     __ptext64:
 16131                           	opt stack 0
 16132  0126D8                     _flash_partial_write:
 16133                           	opt stack 13
 16134  0126D8                     l19219:
 16135  0126D8  EC7E  F09F         	call	_flash_is_busy	;wreg free
 16136  0126DC  0900               	iorlw	0
 16137  0126DE  A4D8               	btfss	status,2,c
 16138  0126E0  D7FB               	goto	l19219
 16139                           
 16140                           ;flash.c: 597: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 16141  0126E2  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 16142  0126E6  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 16143  0126EA  0E00               	movlw	0
 16144  0126EC  0100               	movlb	0	; () banked
 16145  0126EE  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 16146  0126F0  EC08  F092         	call	__flash_copy_page_to_buffer	;wreg free
 16147                           
 16148                           ;flash.c: 600: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 16149  0126F4  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 16150  0126F8  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 16151  0126FC  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 16152  012700  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 16153  012704  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 16154  012708  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 16155  01270C  0E00               	movlw	0
 16156  01270E  0100               	movlb	0	; () banked
 16157  012710  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 16158  012712  ECBC  F095         	call	__flash_write_to_buffer	;wreg free
 16159                           
 16160                           ;flash.c: 603: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 16161  012716  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 16162  01271A  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 16163  01271E  0E00               	movlw	0
 16164  012720  0100               	movlb	0	; () banked
 16165  012722  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 16166  012724  ECCE  F08B         	call	__flash_compare_page_to_buffer	;wreg free
 16167  012728  0100               	movlb	0	; () banked
 16168  01272A  6F87               	movwf	flash_partial_write@match& (0+255),b
 16169                           
 16170                           ; BSR set to: 0
 16171                           ;flash.c: 606: if(match==DATA_DOES_NOT_MATCH)
 16172  01272C  0100               	movlb	0	; () banked
 16173  01272E  0587               	decf	flash_partial_write@match& (0+255),w,b
 16174  012730  A4D8               	btfss	status,2,c
 16175  012732  0012               	return	
 16176                           
 16177                           ; BSR set to: 0
 16178                           ;flash.c: 607: {
 16179                           ;flash.c: 608: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 16180  012734  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 16181  012738  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 16182  01273C  0E00               	movlw	0
 16183  01273E  0100               	movlb	0	; () banked
 16184  012740  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 16185  012742  EC80  F092         	call	__flash_write_page_from_buffer	;wreg free
 16186  012746  0012               	return	
 16187  012748                     __end_of_flash_partial_write:
 16188                           	opt stack 0
 16189                           tblptru	equ	0xFF8
 16190                           tblptrh	equ	0xFF7
 16191                           tblptrl	equ	0xFF6
 16192                           tablat	equ	0xFF5
 16193                           prodh	equ	0xFF4
 16194                           prodl	equ	0xFF3
 16195                           intcon	equ	0xFF2
 16196                           intcon2	equ	0xFF1
 16197                           intcon3	equ	0xFF0
 16198                           postinc0	equ	0xFEE
 16199                           wreg	equ	0xFE8
 16200                           postinc1	equ	0xFE6
 16201                           postdec1	equ	0xFE5
 16202                           plusw1	equ	0xFE3
 16203                           fsr1h	equ	0xFE2
 16204                           fsr1l	equ	0xFE1
 16205                           indf2	equ	0xFDF
 16206                           postinc2	equ	0xFDE
 16207                           postdec2	equ	0xFDD
 16208                           plusw2	equ	0xFDB
 16209                           fsr2h	equ	0xFDA
 16210                           fsr2l	equ	0xFD9
 16211                           status	equ	0xFD8
 16212                           
 16213 ;; *************** function __flash_copy_page_to_buffer *****************
 16214 ;; Defined at:
 16215 ;;		line 315 in file "flash.c"
 16216 ;; Parameters:    Size  Location     Type
 16217 ;;  page            2   19[BANK0 ] unsigned int 
 16218 ;;  buffer          1   21[BANK0 ] enum E8331
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;  command         4   25[BANK0 ] unsigned char [4]
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		wreg, status,2, status,0, cstack
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16230 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16231 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16232 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16233 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16234 ;;Total ram usage:       10 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; Hardware stack levels required when called:   13
 16237 ;; This function calls:
 16238 ;;		__flash_spi_tx
 16239 ;;		_flash_is_busy
 16240 ;; This function is called by:
 16241 ;;		_flash_partial_write
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           	psect	text65
 16246  012410                     __ptext65:
 16247                           	opt stack 0
 16248  012410                     __flash_copy_page_to_buffer:
 16249                           	opt stack 13
 16250  012410                     l18887:
 16251  012410  EC7E  F09F         	call	_flash_is_busy	;wreg free
 16252  012414  0900               	iorlw	0
 16253  012416  A4D8               	btfss	status,2,c
 16254  012418  D7FB               	goto	l18887
 16255                           
 16256                           ;flash.c: 323: if(buffer==FLASH_BUFFER_1)
 16257  01241A  0100               	movlb	0	; () banked
 16258  01241C  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 16259  01241E  0100               	movlb	0	; () banked
 16260  012420  A4D8               	btfss	status,2,c
 16261  012422  D003               	goto	l18893
 16262                           
 16263                           ; BSR set to: 0
 16264                           ;flash.c: 324: command[0] = 0x53;
 16265  012424  0E53               	movlw	83
 16266  012426  0100               	movlb	0	; () banked
 16267  012428  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 16268  01242A                     l18893:
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;flash.c: 325: if(buffer==FLASH_BUFFER_2)
 16272  01242A  0100               	movlb	0	; () banked
 16273  01242C  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 16274  01242E  A4D8               	btfss	status,2,c
 16275  012430  D003               	goto	l18897
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;flash.c: 326: command[0] = 0x55;
 16279  012432  0E55               	movlw	85
 16280  012434  0100               	movlb	0	; () banked
 16281  012436  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 16282  012438                     l18897:
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;flash.c: 328: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 16286  012438  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 16287  01243C  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 16288  012440  0E07               	movlw	7
 16289  012442  0100               	movlb	0	; () banked
 16290  012444  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 16291  012446                     u17965:
 16292  012446  0100               	movlb	0	; () banked
 16293  012448  90D8               	bcf	status,0,c
 16294  01244A  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 16295  01244C  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 16296  01244E  0100               	movlb	0	; () banked
 16297  012450  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 16298  012452  D7F9               	goto	u17965
 16299  012454  0100               	movlb	0	; () banked
 16300  012456  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 16301  012458  0100               	movlb	0	; () banked
 16302  01245A  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;flash.c: 329: command[2] = ((unsigned char)((page<<1)&0xFF));
 16306  01245C  0100               	movlb	0	; () banked
 16307  01245E  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 16308  012460  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 16309  012462  0100               	movlb	0	; () banked
 16310  012464  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 16311                           
 16312                           ;flash.c: 330: command[3] = 0x00;
 16313  012466  0E00               	movlw	0
 16314  012468  0100               	movlb	0	; () banked
 16315  01246A  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 16316                           
 16317                           ; BSR set to: 0
 16318                           ;flash.c: 333: _flash_spi_tx(command, 4);
 16319  01246C  0E79               	movlw	low __flash_copy_page_to_buffer@command
 16320  01246E  0100               	movlb	0	; () banked
 16321  012470  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 16322  012472  0E00               	movlw	high __flash_copy_page_to_buffer@command
 16323  012474  0100               	movlb	0	; () banked
 16324  012476  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 16325  012478  0E00               	movlw	0
 16326  01247A  0100               	movlb	0	; () banked
 16327  01247C  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 16328  01247E  0E04               	movlw	4
 16329  012480  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 16330  012482  ECB7  F094         	call	__flash_spi_tx	;wreg free
 16331  012486  0012               	return		;funcret
 16332  012488                     __end_of__flash_copy_page_to_buffer:
 16333                           	opt stack 0
 16334                           tblptru	equ	0xFF8
 16335                           tblptrh	equ	0xFF7
 16336                           tblptrl	equ	0xFF6
 16337                           tablat	equ	0xFF5
 16338                           prodh	equ	0xFF4
 16339                           prodl	equ	0xFF3
 16340                           intcon	equ	0xFF2
 16341                           intcon2	equ	0xFF1
 16342                           intcon3	equ	0xFF0
 16343                           postinc0	equ	0xFEE
 16344                           wreg	equ	0xFE8
 16345                           postinc1	equ	0xFE6
 16346                           postdec1	equ	0xFE5
 16347                           plusw1	equ	0xFE3
 16348                           fsr1h	equ	0xFE2
 16349                           fsr1l	equ	0xFE1
 16350                           indf2	equ	0xFDF
 16351                           postinc2	equ	0xFDE
 16352                           postdec2	equ	0xFDD
 16353                           plusw2	equ	0xFDB
 16354                           fsr2h	equ	0xFDA
 16355                           fsr2l	equ	0xFD9
 16356                           status	equ	0xFD8
 16357                           
 16358 ;; *************** function __update_modified_time *****************
 16359 ;; Defined at:
 16360 ;;		line 55 in file "fat16.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  root            2   13[BANK0 ] PTR struct .
 16363 ;;		 -> fat_append_to_file@root(32), 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;		None
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  1    wreg      void 
 16368 ;; Registers used:
 16369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16379 ;;Total ram usage:        2 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; Hardware stack levels required when called:   13
 16382 ;; This function calls:
 16383 ;;		__get_date
 16384 ;;		__get_time
 16385 ;; This function is called by:
 16386 ;;		_fat_append_to_file
 16387 ;; This function uses a non-reentrant model
 16388 ;;
 16389                           
 16390                           	psect	text66
 16391  01370E                     __ptext66:
 16392                           	opt stack 0
 16393  01370E                     __update_modified_time:
 16394                           	opt stack 15
 16395                           
 16396                           ;fat16.c: 57: root->modifiedDate = _get_date();
 16397                           
 16398                           ;incstack = 0
 16399  01370E  EC0D  F091         	call	__get_date	;wreg free
 16400  013712  0100               	movlb	0	; () banked
 16401  013714  EE20 F018          	lfsr	2,24
 16402  013718  516D               	movf	__update_modified_time@root& (0+255),w,b
 16403  01371A  26D9               	addwf	fsr2l,f,c
 16404  01371C  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 16405  01371E  22DA               	addwfc	fsr2h,f,c
 16406  013720  0100               	movlb	0	; () banked
 16407  013722  C064  FFDE         	movff	?__get_date,postinc2
 16408  013726  0100               	movlb	0	; () banked
 16409  013728  C065  FFDD         	movff	?__get_date+1,postdec2
 16410                           
 16411                           ;fat16.c: 58: root->modifiedTime = _get_time();
 16412  01372C  EC7D  F08F         	call	__get_time	;wreg free
 16413  013730  0100               	movlb	0	; () banked
 16414  013732  EE20 F016          	lfsr	2,22
 16415  013736  516D               	movf	__update_modified_time@root& (0+255),w,b
 16416  013738  26D9               	addwf	fsr2l,f,c
 16417  01373A  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 16418  01373C  22DA               	addwfc	fsr2h,f,c
 16419  01373E  0100               	movlb	0	; () banked
 16420  013740  C064  FFDE         	movff	?__get_time,postinc2
 16421  013744  0100               	movlb	0	; () banked
 16422  013746  C065  FFDD         	movff	?__get_time+1,postdec2
 16423                           
 16424                           ; BSR set to: 0
 16425  01374A  0012               	return		;funcret
 16426  01374C                     __end_of__update_modified_time:
 16427                           	opt stack 0
 16428                           tblptru	equ	0xFF8
 16429                           tblptrh	equ	0xFF7
 16430                           tblptrl	equ	0xFF6
 16431                           tablat	equ	0xFF5
 16432                           prodh	equ	0xFF4
 16433                           prodl	equ	0xFF3
 16434                           intcon	equ	0xFF2
 16435                           intcon2	equ	0xFF1
 16436                           intcon3	equ	0xFF0
 16437                           postinc0	equ	0xFEE
 16438                           wreg	equ	0xFE8
 16439                           postinc1	equ	0xFE6
 16440                           postdec1	equ	0xFE5
 16441                           plusw1	equ	0xFE3
 16442                           fsr1h	equ	0xFE2
 16443                           fsr1l	equ	0xFE1
 16444                           indf2	equ	0xFDF
 16445                           postinc2	equ	0xFDE
 16446                           postdec2	equ	0xFDD
 16447                           plusw2	equ	0xFDB
 16448                           fsr2h	equ	0xFDA
 16449                           fsr2l	equ	0xFD9
 16450                           status	equ	0xFD8
 16451                           
 16452 ;; *************** function __get_time *****************
 16453 ;; Defined at:
 16454 ;;		line 31 in file "fat16.c"
 16455 ;; Parameters:    Size  Location     Type
 16456 ;;		None
 16457 ;; Auto vars:     Size  Location     Type
 16458 ;;  time            2   11[BANK0 ] unsigned int 
 16459 ;;  seconds         1   10[BANK0 ] unsigned char 
 16460 ;;  minutes         1    9[BANK0 ] unsigned char 
 16461 ;;  hours           1    8[BANK0 ] unsigned char 
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  2    4[BANK0 ] unsigned int 
 16464 ;; Registers used:
 16465 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/0
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16472 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16474 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16475 ;;Total ram usage:        9 bytes
 16476 ;; Hardware stack levels used:    1
 16477 ;; Hardware stack levels required when called:   12
 16478 ;; This function calls:
 16479 ;;		_rtcc_get_hours_decimal
 16480 ;;		_rtcc_get_minutes_decimal
 16481 ;;		_rtcc_get_seconds_decimal
 16482 ;; This function is called by:
 16483 ;;		__update_modified_time
 16484 ;;		_fat_create_file
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           	psect	text67
 16489  011EFA                     __ptext67:
 16490                           	opt stack 0
 16491  011EFA                     __get_time:
 16492                           	opt stack 16
 16493                           
 16494                           ;fat16.c: 33: uint16_t time;
 16495                           ;fat16.c: 34: uint8_t hours = rtcc_get_hours_decimal();
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;incstack = 0
 16499  011EFA  ECE5  F0A0         	call	_rtcc_get_hours_decimal	;wreg free
 16500  011EFE  0100               	movlb	0	; () banked
 16501  011F00  6F68               	movwf	__get_time@hours& (0+255),b
 16502                           
 16503                           ;fat16.c: 35: uint8_t minutes = rtcc_get_minutes_decimal();
 16504  011F02  ECDC  F0A0         	call	_rtcc_get_minutes_decimal	;wreg free
 16505  011F06  0100               	movlb	0	; () banked
 16506  011F08  6F69               	movwf	__get_time@minutes& (0+255),b
 16507                           
 16508                           ;fat16.c: 36: uint8_t seconds = rtcc_get_seconds_decimal();
 16509  011F0A  EC09  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
 16510  011F0E  0100               	movlb	0	; () banked
 16511  011F10  6F6A               	movwf	__get_time@seconds& (0+255),b
 16512                           
 16513                           ; BSR set to: 0
 16514                           ;fat16.c: 37: time = ((hours&0b11111) << 11);
 16515  011F12  0100               	movlb	0	; () banked
 16516  011F14  5168               	movf	__get_time@hours& (0+255),w,b
 16517  011F16  0B1F               	andlw	31
 16518  011F18  0100               	movlb	0	; () banked
 16519  011F1A  6F66               	movwf	??__get_time& (0+255),b
 16520  011F1C  6B67               	clrf	(??__get_time+1)& (0+255),b
 16521  011F1E  0E0B               	movlw	11
 16522  011F20                     u18235:
 16523  011F20  90D8               	bcf	status,0,c
 16524  011F22  0100               	movlb	0	; () banked
 16525  011F24  3766               	rlcf	??__get_time& (0+255),f,b
 16526  011F26  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 16527  011F28  2EE8               	decfsz	wreg,f,c
 16528  011F2A  D7FA               	goto	u18235
 16529  011F2C  C066  F06B         	movff	??__get_time,__get_time@time
 16530  011F30  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;fat16.c: 38: time |= ((minutes&0b111111) << 5);
 16534  011F34  0100               	movlb	0	; () banked
 16535  011F36  5169               	movf	__get_time@minutes& (0+255),w,b
 16536  011F38  0B3F               	andlw	63
 16537  011F3A  0100               	movlb	0	; () banked
 16538  011F3C  6F66               	movwf	??__get_time& (0+255),b
 16539  011F3E  6B67               	clrf	(??__get_time+1)& (0+255),b
 16540  011F40  0E05               	movlw	5
 16541  011F42                     u18245:
 16542  011F42  90D8               	bcf	status,0,c
 16543  011F44  0100               	movlb	0	; () banked
 16544  011F46  3766               	rlcf	??__get_time& (0+255),f,b
 16545  011F48  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 16546  011F4A  2EE8               	decfsz	wreg,f,c
 16547  011F4C  D7FA               	goto	u18245
 16548  011F4E  0100               	movlb	0	; () banked
 16549  011F50  5166               	movf	??__get_time& (0+255),w,b
 16550  011F52  0100               	movlb	0	; () banked
 16551  011F54  136B               	iorwf	__get_time@time& (0+255),f,b
 16552  011F56  0100               	movlb	0	; () banked
 16553  011F58  5167               	movf	(??__get_time+1)& (0+255),w,b
 16554  011F5A  0100               	movlb	0	; () banked
 16555  011F5C  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;fat16.c: 39: time |= ((seconds>>1)&0b11111);
 16559  011F5E  C06A  F066         	movff	__get_time@seconds,??__get_time
 16560  011F62  0100               	movlb	0	; () banked
 16561  011F64  90D8               	bcf	status,0,c
 16562  011F66  3366               	rrcf	??__get_time& (0+255),f,b
 16563  011F68  0E1F               	movlw	31
 16564  011F6A  0100               	movlb	0	; () banked
 16565  011F6C  1766               	andwf	??__get_time& (0+255),f,b
 16566  011F6E  0100               	movlb	0	; () banked
 16567  011F70  5166               	movf	??__get_time& (0+255),w,b
 16568  011F72  0100               	movlb	0	; () banked
 16569  011F74  136B               	iorwf	__get_time@time& (0+255),f,b
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;fat16.c: 40: return time;
 16573  011F76  C06B  F064         	movff	__get_time@time,?__get_time
 16574  011F7A  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 16575  011F7E  0012               	return	
 16576  011F80                     __end_of__get_time:
 16577                           	opt stack 0
 16578                           tblptru	equ	0xFF8
 16579                           tblptrh	equ	0xFF7
 16580                           tblptrl	equ	0xFF6
 16581                           tablat	equ	0xFF5
 16582                           prodh	equ	0xFF4
 16583                           prodl	equ	0xFF3
 16584                           intcon	equ	0xFF2
 16585                           intcon2	equ	0xFF1
 16586                           intcon3	equ	0xFF0
 16587                           postinc0	equ	0xFEE
 16588                           wreg	equ	0xFE8
 16589                           postinc1	equ	0xFE6
 16590                           postdec1	equ	0xFE5
 16591                           plusw1	equ	0xFE3
 16592                           fsr1h	equ	0xFE2
 16593                           fsr1l	equ	0xFE1
 16594                           indf2	equ	0xFDF
 16595                           postinc2	equ	0xFDE
 16596                           postdec2	equ	0xFDD
 16597                           plusw2	equ	0xFDB
 16598                           fsr2h	equ	0xFDA
 16599                           fsr2l	equ	0xFD9
 16600                           status	equ	0xFD8
 16601                           
 16602 ;; *************** function _rtcc_get_minutes_decimal *****************
 16603 ;; Defined at:
 16604 ;;		line 287 in file "rtcc.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;		None
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  1    wreg      unsigned char 
 16611 ;; Registers used:
 16612 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/0
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16622 ;;Total ram usage:        1 bytes
 16623 ;; Hardware stack levels used:    1
 16624 ;; Hardware stack levels required when called:   11
 16625 ;; This function calls:
 16626 ;;		__rtcc_bcd_to_decimal
 16627 ;;		_rtcc_get_minutes
 16628 ;; This function is called by:
 16629 ;;		__get_time
 16630 ;;		__get_dateTime
 16631 ;; This function uses a non-reentrant model
 16632 ;;
 16633                           
 16634                           	psect	text68
 16635  0141B8                     __ptext68:
 16636                           	opt stack 0
 16637  0141B8                     _rtcc_get_minutes_decimal:
 16638                           	opt stack 16
 16639                           
 16640                           ;rtcc.c: 289: uint8_t bcd_minutes = rtcc_get_minutes();
 16641                           
 16642                           ; BSR set to: 0
 16643                           ;incstack = 0
 16644  0141B8  ECBE  F0A0         	call	_rtcc_get_minutes	;wreg free
 16645  0141BC  0100               	movlb	0	; () banked
 16646  0141BE  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 16647                           
 16648                           ; BSR set to: 0
 16649                           ;rtcc.c: 290: return _rtcc_bcd_to_decimal(bcd_minutes);
 16650  0141C0  0100               	movlb	0	; () banked
 16651  0141C2  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 16652  0141C4  EC1D  F09F         	call	__rtcc_bcd_to_decimal
 16653  0141C8  0012               	return	
 16654  0141CA                     __end_of_rtcc_get_minutes_decimal:
 16655                           	opt stack 0
 16656                           tblptru	equ	0xFF8
 16657                           tblptrh	equ	0xFF7
 16658                           tblptrl	equ	0xFF6
 16659                           tablat	equ	0xFF5
 16660                           prodh	equ	0xFF4
 16661                           prodl	equ	0xFF3
 16662                           intcon	equ	0xFF2
 16663                           intcon2	equ	0xFF1
 16664                           intcon3	equ	0xFF0
 16665                           postinc0	equ	0xFEE
 16666                           wreg	equ	0xFE8
 16667                           postinc1	equ	0xFE6
 16668                           postdec1	equ	0xFE5
 16669                           plusw1	equ	0xFE3
 16670                           fsr1h	equ	0xFE2
 16671                           fsr1l	equ	0xFE1
 16672                           indf2	equ	0xFDF
 16673                           postinc2	equ	0xFDE
 16674                           postdec2	equ	0xFDD
 16675                           plusw2	equ	0xFDB
 16676                           fsr2h	equ	0xFDA
 16677                           fsr2l	equ	0xFD9
 16678                           status	equ	0xFD8
 16679                           
 16680 ;; *************** function _rtcc_get_hours_decimal *****************
 16681 ;; Defined at:
 16682 ;;		line 249 in file "rtcc.c"
 16683 ;; Parameters:    Size  Location     Type
 16684 ;;		None
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      unsigned char 
 16689 ;; Registers used:
 16690 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16699 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16700 ;;Total ram usage:        1 bytes
 16701 ;; Hardware stack levels used:    1
 16702 ;; Hardware stack levels required when called:   11
 16703 ;; This function calls:
 16704 ;;		__rtcc_bcd_to_decimal
 16705 ;;		_rtcc_get_hours
 16706 ;; This function is called by:
 16707 ;;		__get_time
 16708 ;;		__get_dateTime
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712                           	psect	text69
 16713  0141CA                     __ptext69:
 16714                           	opt stack 0
 16715  0141CA                     _rtcc_get_hours_decimal:
 16716                           	opt stack 16
 16717                           
 16718                           ;rtcc.c: 251: uint8_t bcd_hours = rtcc_get_hours();
 16719                           
 16720                           ;incstack = 0
 16721  0141CA  ECC8  F0A0         	call	_rtcc_get_hours	;wreg free
 16722  0141CE  0100               	movlb	0	; () banked
 16723  0141D0  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;rtcc.c: 252: return _rtcc_bcd_to_decimal(bcd_hours);
 16727  0141D2  0100               	movlb	0	; () banked
 16728  0141D4  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 16729  0141D6  EC1D  F09F         	call	__rtcc_bcd_to_decimal
 16730  0141DA  0012               	return	
 16731  0141DC                     __end_of_rtcc_get_hours_decimal:
 16732                           	opt stack 0
 16733                           tblptru	equ	0xFF8
 16734                           tblptrh	equ	0xFF7
 16735                           tblptrl	equ	0xFF6
 16736                           tablat	equ	0xFF5
 16737                           prodh	equ	0xFF4
 16738                           prodl	equ	0xFF3
 16739                           intcon	equ	0xFF2
 16740                           intcon2	equ	0xFF1
 16741                           intcon3	equ	0xFF0
 16742                           postinc0	equ	0xFEE
 16743                           wreg	equ	0xFE8
 16744                           postinc1	equ	0xFE6
 16745                           postdec1	equ	0xFE5
 16746                           plusw1	equ	0xFE3
 16747                           fsr1h	equ	0xFE2
 16748                           fsr1l	equ	0xFE1
 16749                           indf2	equ	0xFDF
 16750                           postinc2	equ	0xFDE
 16751                           postdec2	equ	0xFDD
 16752                           plusw2	equ	0xFDB
 16753                           fsr2h	equ	0xFDA
 16754                           fsr2l	equ	0xFD9
 16755                           status	equ	0xFD8
 16756                           
 16757 ;; *************** function __get_date *****************
 16758 ;; Defined at:
 16759 ;;		line 43 in file "fat16.c"
 16760 ;; Parameters:    Size  Location     Type
 16761 ;;		None
 16762 ;; Auto vars:     Size  Location     Type
 16763 ;;  date            2   11[BANK0 ] unsigned int 
 16764 ;;  day             1   10[BANK0 ] unsigned char 
 16765 ;;  month           1    9[BANK0 ] unsigned char 
 16766 ;;  year            1    8[BANK0 ] unsigned char 
 16767 ;; Return value:  Size  Location     Type
 16768 ;;                  2    4[BANK0 ] unsigned int 
 16769 ;; Registers used:
 16770 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16771 ;; Tracked objects:
 16772 ;;		On entry : 0/0
 16773 ;;		On exit  : 0/0
 16774 ;;		Unchanged: 0/0
 16775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16777 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16779 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16780 ;;Total ram usage:        9 bytes
 16781 ;; Hardware stack levels used:    1
 16782 ;; Hardware stack levels required when called:   12
 16783 ;; This function calls:
 16784 ;;		_rtcc_get_day_decimal
 16785 ;;		_rtcc_get_month_decimal
 16786 ;;		_rtcc_get_year_decimal
 16787 ;; This function is called by:
 16788 ;;		__update_modified_time
 16789 ;;		_fat_create_file
 16790 ;; This function uses a non-reentrant model
 16791 ;;
 16792                           
 16793                           	psect	text70
 16794  01221A                     __ptext70:
 16795                           	opt stack 0
 16796  01221A                     __get_date:
 16797                           	opt stack 16
 16798                           
 16799                           ;fat16.c: 45: uint16_t date;
 16800                           ;fat16.c: 46: uint8_t year = rtcc_get_year_decimal();
 16801                           
 16802                           ;incstack = 0
 16803  01221A  ECEE  F0A0         	call	_rtcc_get_year_decimal	;wreg free
 16804  01221E  0100               	movlb	0	; () banked
 16805  012220  6F68               	movwf	__get_date@year& (0+255),b
 16806                           
 16807                           ;fat16.c: 47: uint8_t month = rtcc_get_month_decimal();
 16808  012222  ECF7  F0A0         	call	_rtcc_get_month_decimal	;wreg free
 16809  012226  0100               	movlb	0	; () banked
 16810  012228  6F69               	movwf	__get_date@month& (0+255),b
 16811                           
 16812                           ;fat16.c: 48: uint8_t day = rtcc_get_day_decimal();
 16813  01222A  EC00  F0A1         	call	_rtcc_get_day_decimal	;wreg free
 16814  01222E  0100               	movlb	0	; () banked
 16815  012230  6F6A               	movwf	__get_date@day& (0+255),b
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;fat16.c: 49: date = (((year+20)&0b1111111) << 9);
 16819  012232  0100               	movlb	0	; () banked
 16820  012234  5168               	movf	__get_date@year& (0+255),w,b
 16821  012236  0F14               	addlw	20
 16822  012238  0B7F               	andlw	127
 16823  01223A  0100               	movlb	0	; () banked
 16824  01223C  6F66               	movwf	??__get_date& (0+255),b
 16825  01223E  6B67               	clrf	(??__get_date+1)& (0+255),b
 16826  012240  0E09               	movlw	9
 16827  012242                     u18255:
 16828  012242  90D8               	bcf	status,0,c
 16829  012244  0100               	movlb	0	; () banked
 16830  012246  3766               	rlcf	??__get_date& (0+255),f,b
 16831  012248  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16832  01224A  2EE8               	decfsz	wreg,f,c
 16833  01224C  D7FA               	goto	u18255
 16834  01224E  C066  F06B         	movff	??__get_date,__get_date@date
 16835  012252  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 16836                           
 16837                           ; BSR set to: 0
 16838                           ;fat16.c: 50: date |= ((month&0b1111) << 5);
 16839  012256  0100               	movlb	0	; () banked
 16840  012258  5169               	movf	__get_date@month& (0+255),w,b
 16841  01225A  0B0F               	andlw	15
 16842  01225C  0100               	movlb	0	; () banked
 16843  01225E  6F66               	movwf	??__get_date& (0+255),b
 16844  012260  6B67               	clrf	(??__get_date+1)& (0+255),b
 16845  012262  0E05               	movlw	5
 16846  012264                     u18265:
 16847  012264  90D8               	bcf	status,0,c
 16848  012266  0100               	movlb	0	; () banked
 16849  012268  3766               	rlcf	??__get_date& (0+255),f,b
 16850  01226A  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16851  01226C  2EE8               	decfsz	wreg,f,c
 16852  01226E  D7FA               	goto	u18265
 16853  012270  0100               	movlb	0	; () banked
 16854  012272  5166               	movf	??__get_date& (0+255),w,b
 16855  012274  0100               	movlb	0	; () banked
 16856  012276  136B               	iorwf	__get_date@date& (0+255),f,b
 16857  012278  0100               	movlb	0	; () banked
 16858  01227A  5167               	movf	(??__get_date+1)& (0+255),w,b
 16859  01227C  0100               	movlb	0	; () banked
 16860  01227E  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 16861                           
 16862                           ; BSR set to: 0
 16863                           ;fat16.c: 51: date |= (day&0b11111);
 16864  012280  C06A  F066         	movff	__get_date@day,??__get_date
 16865  012284  0E1F               	movlw	31
 16866  012286  0100               	movlb	0	; () banked
 16867  012288  1766               	andwf	??__get_date& (0+255),f,b
 16868  01228A  0100               	movlb	0	; () banked
 16869  01228C  5166               	movf	??__get_date& (0+255),w,b
 16870  01228E  0100               	movlb	0	; () banked
 16871  012290  136B               	iorwf	__get_date@date& (0+255),f,b
 16872                           
 16873                           ; BSR set to: 0
 16874                           ;fat16.c: 52: return date;
 16875  012292  C06B  F064         	movff	__get_date@date,?__get_date
 16876  012296  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 16877  01229A  0012               	return	
 16878  01229C                     __end_of__get_date:
 16879                           	opt stack 0
 16880                           tblptru	equ	0xFF8
 16881                           tblptrh	equ	0xFF7
 16882                           tblptrl	equ	0xFF6
 16883                           tablat	equ	0xFF5
 16884                           prodh	equ	0xFF4
 16885                           prodl	equ	0xFF3
 16886                           intcon	equ	0xFF2
 16887                           intcon2	equ	0xFF1
 16888                           intcon3	equ	0xFF0
 16889                           postinc0	equ	0xFEE
 16890                           wreg	equ	0xFE8
 16891                           postinc1	equ	0xFE6
 16892                           postdec1	equ	0xFE5
 16893                           plusw1	equ	0xFE3
 16894                           fsr1h	equ	0xFE2
 16895                           fsr1l	equ	0xFE1
 16896                           indf2	equ	0xFDF
 16897                           postinc2	equ	0xFDE
 16898                           postdec2	equ	0xFDD
 16899                           plusw2	equ	0xFDB
 16900                           fsr2h	equ	0xFDA
 16901                           fsr2l	equ	0xFD9
 16902                           status	equ	0xFD8
 16903                           
 16904 ;; *************** function _rtcc_get_year_decimal *****************
 16905 ;; Defined at:
 16906 ;;		line 135 in file "rtcc.c"
 16907 ;; Parameters:    Size  Location     Type
 16908 ;;		None
 16909 ;; Auto vars:     Size  Location     Type
 16910 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 16911 ;; Return value:  Size  Location     Type
 16912 ;;                  1    wreg      unsigned char 
 16913 ;; Registers used:
 16914 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16915 ;; Tracked objects:
 16916 ;;		On entry : 0/0
 16917 ;;		On exit  : 0/0
 16918 ;;		Unchanged: 0/0
 16919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16924 ;;Total ram usage:        1 bytes
 16925 ;; Hardware stack levels used:    1
 16926 ;; Hardware stack levels required when called:   11
 16927 ;; This function calls:
 16928 ;;		__rtcc_bcd_to_decimal
 16929 ;;		_rtcc_get_year
 16930 ;; This function is called by:
 16931 ;;		__get_date
 16932 ;;		__get_dateTime
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           	psect	text71
 16937  0141DC                     __ptext71:
 16938                           	opt stack 0
 16939  0141DC                     _rtcc_get_year_decimal:
 16940                           	opt stack 16
 16941                           
 16942                           ;rtcc.c: 137: uint8_t bcd_year = rtcc_get_year();
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;incstack = 0
 16946  0141DC  ECA0  F0A0         	call	_rtcc_get_year	;wreg free
 16947  0141E0  0100               	movlb	0	; () banked
 16948  0141E2  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;rtcc.c: 138: return _rtcc_bcd_to_decimal(bcd_year);
 16952  0141E4  0100               	movlb	0	; () banked
 16953  0141E6  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 16954  0141E8  EC1D  F09F         	call	__rtcc_bcd_to_decimal
 16955  0141EC  0012               	return	
 16956  0141EE                     __end_of_rtcc_get_year_decimal:
 16957                           	opt stack 0
 16958                           tblptru	equ	0xFF8
 16959                           tblptrh	equ	0xFF7
 16960                           tblptrl	equ	0xFF6
 16961                           tablat	equ	0xFF5
 16962                           prodh	equ	0xFF4
 16963                           prodl	equ	0xFF3
 16964                           intcon	equ	0xFF2
 16965                           intcon2	equ	0xFF1
 16966                           intcon3	equ	0xFF0
 16967                           postinc0	equ	0xFEE
 16968                           wreg	equ	0xFE8
 16969                           postinc1	equ	0xFE6
 16970                           postdec1	equ	0xFE5
 16971                           plusw1	equ	0xFE3
 16972                           fsr1h	equ	0xFE2
 16973                           fsr1l	equ	0xFE1
 16974                           indf2	equ	0xFDF
 16975                           postinc2	equ	0xFDE
 16976                           postdec2	equ	0xFDD
 16977                           plusw2	equ	0xFDB
 16978                           fsr2h	equ	0xFDA
 16979                           fsr2l	equ	0xFD9
 16980                           status	equ	0xFD8
 16981                           
 16982 ;; *************** function _rtcc_get_month_decimal *****************
 16983 ;; Defined at:
 16984 ;;		line 173 in file "rtcc.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;		None
 16987 ;; Auto vars:     Size  Location     Type
 16988 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 16989 ;; Return value:  Size  Location     Type
 16990 ;;                  1    wreg      unsigned char 
 16991 ;; Registers used:
 16992 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16993 ;; Tracked objects:
 16994 ;;		On entry : 0/0
 16995 ;;		On exit  : 0/0
 16996 ;;		Unchanged: 0/0
 16997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17001 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17002 ;;Total ram usage:        1 bytes
 17003 ;; Hardware stack levels used:    1
 17004 ;; Hardware stack levels required when called:   11
 17005 ;; This function calls:
 17006 ;;		__rtcc_bcd_to_decimal
 17007 ;;		_rtcc_get_month
 17008 ;; This function is called by:
 17009 ;;		__get_date
 17010 ;;		__get_dateTime
 17011 ;; This function uses a non-reentrant model
 17012 ;;
 17013                           
 17014                           	psect	text72
 17015  0141EE                     __ptext72:
 17016                           	opt stack 0
 17017  0141EE                     _rtcc_get_month_decimal:
 17018                           	opt stack 16
 17019                           
 17020                           ;rtcc.c: 175: uint8_t bcd_month = rtcc_get_month();
 17021                           
 17022                           ;incstack = 0
 17023  0141EE  ECB4  F0A0         	call	_rtcc_get_month	;wreg free
 17024  0141F2  0100               	movlb	0	; () banked
 17025  0141F4  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 17026                           
 17027                           ; BSR set to: 0
 17028                           ;rtcc.c: 176: return _rtcc_bcd_to_decimal(bcd_month);
 17029  0141F6  0100               	movlb	0	; () banked
 17030  0141F8  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 17031  0141FA  EC1D  F09F         	call	__rtcc_bcd_to_decimal
 17032  0141FE  0012               	return	
 17033  014200                     __end_of_rtcc_get_month_decimal:
 17034                           	opt stack 0
 17035                           tblptru	equ	0xFF8
 17036                           tblptrh	equ	0xFF7
 17037                           tblptrl	equ	0xFF6
 17038                           tablat	equ	0xFF5
 17039                           prodh	equ	0xFF4
 17040                           prodl	equ	0xFF3
 17041                           intcon	equ	0xFF2
 17042                           intcon2	equ	0xFF1
 17043                           intcon3	equ	0xFF0
 17044                           postinc0	equ	0xFEE
 17045                           wreg	equ	0xFE8
 17046                           postinc1	equ	0xFE6
 17047                           postdec1	equ	0xFE5
 17048                           plusw1	equ	0xFE3
 17049                           fsr1h	equ	0xFE2
 17050                           fsr1l	equ	0xFE1
 17051                           indf2	equ	0xFDF
 17052                           postinc2	equ	0xFDE
 17053                           postdec2	equ	0xFDD
 17054                           plusw2	equ	0xFDB
 17055                           fsr2h	equ	0xFDA
 17056                           fsr2l	equ	0xFD9
 17057                           status	equ	0xFD8
 17058                           
 17059 ;; *************** function _rtcc_get_day_decimal *****************
 17060 ;; Defined at:
 17061 ;;		line 211 in file "rtcc.c"
 17062 ;; Parameters:    Size  Location     Type
 17063 ;;		None
 17064 ;; Auto vars:     Size  Location     Type
 17065 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 17066 ;; Return value:  Size  Location     Type
 17067 ;;                  1    wreg      unsigned char 
 17068 ;; Registers used:
 17069 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17070 ;; Tracked objects:
 17071 ;;		On entry : 0/0
 17072 ;;		On exit  : 0/0
 17073 ;;		Unchanged: 0/0
 17074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17079 ;;Total ram usage:        1 bytes
 17080 ;; Hardware stack levels used:    1
 17081 ;; Hardware stack levels required when called:   11
 17082 ;; This function calls:
 17083 ;;		__rtcc_bcd_to_decimal
 17084 ;;		_rtcc_get_day
 17085 ;; This function is called by:
 17086 ;;		__get_date
 17087 ;;		__get_dateTime
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091                           	psect	text73
 17092  014200                     __ptext73:
 17093                           	opt stack 0
 17094  014200                     _rtcc_get_day_decimal:
 17095                           	opt stack 16
 17096                           
 17097                           ;rtcc.c: 213: uint8_t bcd_day = rtcc_get_day();
 17098                           
 17099                           ;incstack = 0
 17100  014200  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
 17101  014204  0100               	movlb	0	; () banked
 17102  014206  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;rtcc.c: 214: return _rtcc_bcd_to_decimal(bcd_day);
 17106  014208  0100               	movlb	0	; () banked
 17107  01420A  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 17108  01420C  EC1D  F09F         	call	__rtcc_bcd_to_decimal
 17109  014210  0012               	return	
 17110  014212                     __end_of_rtcc_get_day_decimal:
 17111                           	opt stack 0
 17112                           tblptru	equ	0xFF8
 17113                           tblptrh	equ	0xFF7
 17114                           tblptrl	equ	0xFF6
 17115                           tablat	equ	0xFF5
 17116                           prodh	equ	0xFF4
 17117                           prodl	equ	0xFF3
 17118                           intcon	equ	0xFF2
 17119                           intcon2	equ	0xFF1
 17120                           intcon3	equ	0xFF0
 17121                           postinc0	equ	0xFEE
 17122                           wreg	equ	0xFE8
 17123                           postinc1	equ	0xFE6
 17124                           postdec1	equ	0xFE5
 17125                           plusw1	equ	0xFE3
 17126                           fsr1h	equ	0xFE2
 17127                           fsr1l	equ	0xFE1
 17128                           indf2	equ	0xFDF
 17129                           postinc2	equ	0xFDE
 17130                           postdec2	equ	0xFDD
 17131                           plusw2	equ	0xFDB
 17132                           fsr2h	equ	0xFDA
 17133                           fsr2l	equ	0xFD9
 17134                           status	equ	0xFD8
 17135                           
 17136 ;; *************** function __sector_from_cluster *****************
 17137 ;; Defined at:
 17138 ;;		line 455 in file "fat16.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17141 ;; Auto vars:     Size  Location     Type
 17142 ;;		None
 17143 ;; Return value:  Size  Location     Type
 17144 ;;                  2    0[BANK0 ] unsigned int 
 17145 ;; Registers used:
 17146 ;;		wreg, status,2, status,0
 17147 ;; Tracked objects:
 17148 ;;		On entry : 0/0
 17149 ;;		On exit  : 0/0
 17150 ;;		Unchanged: 0/0
 17151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17156 ;;Total ram usage:        2 bytes
 17157 ;; Hardware stack levels used:    1
 17158 ;; Hardware stack levels required when called:   10
 17159 ;; This function calls:
 17160 ;;		Nothing
 17161 ;; This function is called by:
 17162 ;;		_fat_append_to_file
 17163 ;;		_fat_read_from_file
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167                           	psect	text74
 17168  0140D6                     __ptext74:
 17169                           	opt stack 0
 17170  0140D6                     __sector_from_cluster:
 17171                           	opt stack 18
 17172                           
 17173                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 17174                           
 17175                           ;incstack = 0
 17176  0140D6  0E14               	movlw	20
 17177  0140D8  0100               	movlb	0	; () banked
 17178  0140DA  2560               	addwf	__sector_from_cluster@fat_cluster& (0+255),w,b
 17179  0140DC  0100               	movlb	0	; () banked
 17180  0140DE  6F60               	movwf	?__sector_from_cluster& (0+255),b
 17181  0140E0  0E00               	movlw	0
 17182  0140E2  0100               	movlb	0	; () banked
 17183  0140E4  2161               	addwfc	(__sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17184  0140E6  0100               	movlb	0	; () banked
 17185  0140E8  6F61               	movwf	(?__sector_from_cluster+1)& (0+255),b
 17186  0140EA  0012               	return	
 17187  0140EC                     __end_of__sector_from_cluster:
 17188                           	opt stack 0
 17189                           tblptru	equ	0xFF8
 17190                           tblptrh	equ	0xFF7
 17191                           tblptrl	equ	0xFF6
 17192                           tablat	equ	0xFF5
 17193                           prodh	equ	0xFF4
 17194                           prodl	equ	0xFF3
 17195                           intcon	equ	0xFF2
 17196                           intcon2	equ	0xFF1
 17197                           intcon3	equ	0xFF0
 17198                           postinc0	equ	0xFEE
 17199                           wreg	equ	0xFE8
 17200                           postinc1	equ	0xFE6
 17201                           postdec1	equ	0xFE5
 17202                           plusw1	equ	0xFE3
 17203                           fsr1h	equ	0xFE2
 17204                           fsr1l	equ	0xFE1
 17205                           indf2	equ	0xFDF
 17206                           postinc2	equ	0xFDE
 17207                           postdec2	equ	0xFDD
 17208                           plusw2	equ	0xFDB
 17209                           fsr2h	equ	0xFDA
 17210                           fsr2l	equ	0xFD9
 17211                           status	equ	0xFD8
 17212                           
 17213 ;; *************** function __root_is_available *****************
 17214 ;; Defined at:
 17215 ;;		line 61 in file "fat16.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;  file_number     1    wreg     unsigned char 
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;  file_number     1   44[BANK0 ] unsigned char 
 17220 ;;  offset          2   42[BANK0 ] unsigned int 
 17221 ;;  root_sector     2   40[BANK0 ] unsigned int 
 17222 ;;  first_byte      1   45[BANK0 ] unsigned char 
 17223 ;; Return value:  Size  Location     Type
 17224 ;;                  1    wreg      unsigned char 
 17225 ;; Registers used:
 17226 ;;		wreg, status,2, status,0, cstack
 17227 ;; Tracked objects:
 17228 ;;		On entry : 0/0
 17229 ;;		On exit  : 0/0
 17230 ;;		Unchanged: 0/0
 17231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17233 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17235 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17236 ;;Total ram usage:        7 bytes
 17237 ;; Hardware stack levels used:    1
 17238 ;; Hardware stack levels required when called:   14
 17239 ;; This function calls:
 17240 ;;		_flash_partial_read
 17241 ;; This function is called by:
 17242 ;;		__get_available_root_entry
 17243 ;;		_fat_append_to_file
 17244 ;;		_fat_delete_file
 17245 ;; This function uses a non-reentrant model
 17246 ;;
 17247                           
 17248                           	psect	text75
 17249  011966                     __ptext75:
 17250                           	opt stack 0
 17251  011966                     __root_is_available:
 17252                           	opt stack 13
 17253                           
 17254                           ; BSR set to: 0
 17255                           ;incstack = 0
 17256                           ;__root_is_available@file_number stored from wreg
 17257  011966  0100               	movlb	0	; () banked
 17258  011968  6F8C               	movwf	__root_is_available@file_number& (0+255),b
 17259                           
 17260                           ;fat16.c: 63: uint16_t root_sector;
 17261                           ;fat16.c: 64: uint16_t offset;
 17262                           ;fat16.c: 65: uint8_t first_byte;
 17263                           ;fat16.c: 69: if(file_number>=64)
 17264  01196A  0E3F               	movlw	63
 17265  01196C  0100               	movlb	0	; () banked
 17266  01196E  658C               	cpfsgt	__root_is_available@file_number& (0+255),b
 17267  011970  D002               	goto	l19269
 17268                           
 17269                           ; BSR set to: 0
 17270                           ;fat16.c: 70: {
 17271                           ;fat16.c: 72: return 0;
 17272  011972  0E00               	movlw	0
 17273                           
 17274                           ; BSR set to: 0
 17275  011974  0012               	return	
 17276  011976                     l19269:
 17277                           
 17278                           ; BSR set to: 0
 17279                           ;fat16.c: 73: }
 17280                           ;fat16.c: 76: root_sector = (file_number >> 4) + 18;
 17281  011976  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 17282  01197A  0100               	movlb	0	; () banked
 17283  01197C  3B87               	swapf	??__root_is_available& (0+255),f,b
 17284  01197E  0E0F               	movlw	15
 17285  011980  1787               	andwf	??__root_is_available& (0+255),f,b
 17286  011982  0E12               	movlw	18
 17287  011984  0100               	movlb	0	; () banked
 17288  011986  2587               	addwf	??__root_is_available& (0+255),w,b
 17289  011988  0100               	movlb	0	; () banked
 17290  01198A  6F88               	movwf	__root_is_available@root_sector& (0+255),b
 17291  01198C  0100               	movlb	0	; () banked
 17292  01198E  6B89               	clrf	(__root_is_available@root_sector+1)& (0+255),b
 17293  011990  0E00               	movlw	0
 17294  011992  2389               	addwfc	(__root_is_available@root_sector+1)& (0+255),f,b
 17295                           
 17296                           ;fat16.c: 77: offset = (file_number & 0b1111);
 17297  011994  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 17298  011998  0E0F               	movlw	15
 17299  01199A  0100               	movlb	0	; () banked
 17300  01199C  1787               	andwf	??__root_is_available& (0+255),f,b
 17301  01199E  0100               	movlb	0	; () banked
 17302  0119A0  5187               	movf	??__root_is_available& (0+255),w,b
 17303  0119A2  0100               	movlb	0	; () banked
 17304  0119A4  6F8A               	movwf	__root_is_available@offset& (0+255),b
 17305  0119A6  6B8B               	clrf	(__root_is_available@offset+1)& (0+255),b
 17306                           
 17307                           ;fat16.c: 78: offset <<= 5;
 17308  0119A8  0100               	movlb	0	; () banked
 17309  0119AA  0E05               	movlw	5
 17310  0119AC                     u18285:
 17311  0119AC  90D8               	bcf	status,0,c
 17312  0119AE  378A               	rlcf	__root_is_available@offset& (0+255),f,b
 17313  0119B0  378B               	rlcf	(__root_is_available@offset+1)& (0+255),f,b
 17314  0119B2  2EE8               	decfsz	wreg,f,c
 17315  0119B4  D7FB               	goto	u18285
 17316                           
 17317                           ; BSR set to: 0
 17318                           ;fat16.c: 81: flash_partial_read(root_sector, offset, 1, &first_byte);
 17319  0119B6  C088  F073         	movff	__root_is_available@root_sector,flash_partial_read@page
 17320  0119BA  C089  F074         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17321  0119BE  C08A  F075         	movff	__root_is_available@offset,flash_partial_read@start
 17322  0119C2  C08B  F076         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17323  0119C6  0E00               	movlw	0
 17324  0119C8  0100               	movlb	0	; () banked
 17325  0119CA  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17326  0119CC  0E01               	movlw	1
 17327  0119CE  6F77               	movwf	flash_partial_read@length& (0+255),b
 17328  0119D0  0E8D               	movlw	low __root_is_available@first_byte
 17329  0119D2  0100               	movlb	0	; () banked
 17330  0119D4  6F79               	movwf	flash_partial_read@data& (0+255),b
 17331  0119D6  0E00               	movlw	high __root_is_available@first_byte
 17332  0119D8  0100               	movlb	0	; () banked
 17333  0119DA  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17334  0119DC  EC8E  F08A         	call	_flash_partial_read	;wreg free
 17335                           
 17336                           ;fat16.c: 84: if((first_byte==0x00) || (first_byte==0xE5))
 17337  0119E0  0100               	movlb	0	; () banked
 17338  0119E2  518D               	movf	__root_is_available@first_byte& (0+255),w,b
 17339  0119E4  0100               	movlb	0	; () banked
 17340  0119E6  B4D8               	btfsc	status,2,c
 17341  0119E8  D005               	goto	l19277
 17342                           
 17343                           ; BSR set to: 0
 17344  0119EA  0EE5               	movlw	229
 17345  0119EC  0100               	movlb	0	; () banked
 17346  0119EE  198D               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17347  0119F0  A4D8               	btfss	status,2,c
 17348  0119F2  D002               	goto	l19283
 17349  0119F4                     l19277:
 17350                           
 17351                           ; BSR set to: 0
 17352                           ;fat16.c: 85: {
 17353                           ;fat16.c: 87: return 1;
 17354  0119F4  0E01               	movlw	1
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;fat16.c: 88: }
 17358                           
 17359                           ; BSR set to: 0
 17360  0119F6  0012               	return	
 17361  0119F8                     l19283:
 17362                           
 17363                           ; BSR set to: 0
 17364                           ;fat16.c: 89: else
 17365                           ;fat16.c: 90: {
 17366                           ;fat16.c: 92: return 0;
 17367  0119F8  0E00               	movlw	0
 17368                           
 17369                           ; BSR set to: 0
 17370  0119FA  0012               	return	
 17371  0119FC                     __end_of__root_is_available:
 17372                           	opt stack 0
 17373                           tblptru	equ	0xFF8
 17374                           tblptrh	equ	0xFF7
 17375                           tblptrl	equ	0xFF6
 17376                           tablat	equ	0xFF5
 17377                           prodh	equ	0xFF4
 17378                           prodl	equ	0xFF3
 17379                           intcon	equ	0xFF2
 17380                           intcon2	equ	0xFF1
 17381                           intcon3	equ	0xFF0
 17382                           postinc0	equ	0xFEE
 17383                           wreg	equ	0xFE8
 17384                           postinc1	equ	0xFE6
 17385                           postdec1	equ	0xFE5
 17386                           plusw1	equ	0xFE3
 17387                           fsr1h	equ	0xFE2
 17388                           fsr1l	equ	0xFE1
 17389                           indf2	equ	0xFDF
 17390                           postinc2	equ	0xFDE
 17391                           postdec2	equ	0xFDD
 17392                           plusw2	equ	0xFDB
 17393                           fsr2h	equ	0xFDA
 17394                           fsr2l	equ	0xFD9
 17395                           status	equ	0xFD8
 17396                           
 17397 ;; *************** function __read_root *****************
 17398 ;; Defined at:
 17399 ;;		line 194 in file "fat16.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  slot            1    wreg     unsigned char 
 17402 ;;  data            2   39[BANK0 ] PTR struct .
 17403 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;  slot            1   46[BANK0 ] unsigned char 
 17406 ;;  offset          2   44[BANK0 ] unsigned int 
 17407 ;;  root_sector     2   42[BANK0 ] unsigned int 
 17408 ;; Return value:  Size  Location     Type
 17409 ;;                  1    wreg      void 
 17410 ;; Registers used:
 17411 ;;		wreg, status,2, status,0, cstack
 17412 ;; Tracked objects:
 17413 ;;		On entry : 0/0
 17414 ;;		On exit  : 0/0
 17415 ;;		Unchanged: 0/0
 17416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17417 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17418 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17420 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17421 ;;Total ram usage:        8 bytes
 17422 ;; Hardware stack levels used:    1
 17423 ;; Hardware stack levels required when called:   14
 17424 ;; This function calls:
 17425 ;;		_flash_partial_read
 17426 ;; This function is called by:
 17427 ;;		_fat_append_to_file
 17428 ;;		_fat_rename_file
 17429 ;;		_fat_read_from_file
 17430 ;; This function uses a non-reentrant model
 17431 ;;
 17432                           
 17433                           	psect	text76
 17434  012902                     __ptext76:
 17435                           	opt stack 0
 17436  012902                     __read_root:
 17437                           	opt stack 14
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;incstack = 0
 17441                           ;__read_root@slot stored from wreg
 17442  012902  0100               	movlb	0	; () banked
 17443  012904  6F8E               	movwf	__read_root@slot& (0+255),b
 17444                           
 17445                           ;fat16.c: 196: uint16_t root_sector;
 17446                           ;fat16.c: 197: uint16_t offset;
 17447                           ;fat16.c: 198: root_sector = (slot >> 4) + 18;
 17448  012906  C08E  F089         	movff	__read_root@slot,??__read_root
 17449  01290A  0100               	movlb	0	; () banked
 17450  01290C  3B89               	swapf	??__read_root& (0+255),f,b
 17451  01290E  0E0F               	movlw	15
 17452  012910  1789               	andwf	??__read_root& (0+255),f,b
 17453  012912  0E12               	movlw	18
 17454  012914  0100               	movlb	0	; () banked
 17455  012916  2589               	addwf	??__read_root& (0+255),w,b
 17456  012918  0100               	movlb	0	; () banked
 17457  01291A  6F8A               	movwf	__read_root@root_sector& (0+255),b
 17458  01291C  0100               	movlb	0	; () banked
 17459  01291E  6B8B               	clrf	(__read_root@root_sector+1)& (0+255),b
 17460  012920  0E00               	movlw	0
 17461  012922  238B               	addwfc	(__read_root@root_sector+1)& (0+255),f,b
 17462                           
 17463                           ;fat16.c: 199: offset = (slot & 0b1111);
 17464  012924  C08E  F089         	movff	__read_root@slot,??__read_root
 17465  012928  0E0F               	movlw	15
 17466  01292A  0100               	movlb	0	; () banked
 17467  01292C  1789               	andwf	??__read_root& (0+255),f,b
 17468  01292E  0100               	movlb	0	; () banked
 17469  012930  5189               	movf	??__read_root& (0+255),w,b
 17470  012932  0100               	movlb	0	; () banked
 17471  012934  6F8C               	movwf	__read_root@offset& (0+255),b
 17472  012936  6B8D               	clrf	(__read_root@offset+1)& (0+255),b
 17473                           
 17474                           ;fat16.c: 200: offset <<= 5;
 17475  012938  0100               	movlb	0	; () banked
 17476  01293A  0E05               	movlw	5
 17477  01293C                     u19155:
 17478  01293C  90D8               	bcf	status,0,c
 17479  01293E  378C               	rlcf	__read_root@offset& (0+255),f,b
 17480  012940  378D               	rlcf	(__read_root@offset+1)& (0+255),f,b
 17481  012942  2EE8               	decfsz	wreg,f,c
 17482  012944  D7FB               	goto	u19155
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 17486  012946  C08A  F073         	movff	__read_root@root_sector,flash_partial_read@page
 17487  01294A  C08B  F074         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 17488  01294E  C08C  F075         	movff	__read_root@offset,flash_partial_read@start
 17489  012952  C08D  F076         	movff	__read_root@offset+1,flash_partial_read@start+1
 17490  012956  0E00               	movlw	0
 17491  012958  0100               	movlb	0	; () banked
 17492  01295A  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17493  01295C  0E20               	movlw	32
 17494  01295E  6F77               	movwf	flash_partial_read@length& (0+255),b
 17495  012960  C087  F079         	movff	__read_root@data,flash_partial_read@data
 17496  012964  C088  F07A         	movff	__read_root@data+1,flash_partial_read@data+1
 17497  012968  EC8E  F08A         	call	_flash_partial_read	;wreg free
 17498  01296C  0012               	return		;funcret
 17499  01296E                     __end_of__read_root:
 17500                           	opt stack 0
 17501                           tblptru	equ	0xFF8
 17502                           tblptrh	equ	0xFF7
 17503                           tblptrl	equ	0xFF6
 17504                           tablat	equ	0xFF5
 17505                           prodh	equ	0xFF4
 17506                           prodl	equ	0xFF3
 17507                           intcon	equ	0xFF2
 17508                           intcon2	equ	0xFF1
 17509                           intcon3	equ	0xFF0
 17510                           postinc0	equ	0xFEE
 17511                           wreg	equ	0xFE8
 17512                           postinc1	equ	0xFE6
 17513                           postdec1	equ	0xFE5
 17514                           plusw1	equ	0xFE3
 17515                           fsr1h	equ	0xFE2
 17516                           fsr1l	equ	0xFE1
 17517                           indf2	equ	0xFDF
 17518                           postinc2	equ	0xFDE
 17519                           postdec2	equ	0xFDD
 17520                           plusw2	equ	0xFDB
 17521                           fsr2h	equ	0xFDA
 17522                           fsr2l	equ	0xFD9
 17523                           status	equ	0xFD8
 17524                           
 17525 ;; *************** function __read_fat *****************
 17526 ;; Defined at:
 17527 ;;		line 171 in file "fat16.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;  cluster         2   39[BANK0 ] unsigned int 
 17530 ;; Auto vars:     Size  Location     Type
 17531 ;;  value           2   45[BANK0 ] unsigned int 
 17532 ;;  offset          2   43[BANK0 ] unsigned int 
 17533 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  2   39[BANK0 ] unsigned int 
 17536 ;; Registers used:
 17537 ;;		wreg, status,2, status,0, cstack
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17543 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17544 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17546 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17547 ;;Total ram usage:        8 bytes
 17548 ;; Hardware stack levels used:    1
 17549 ;; Hardware stack levels required when called:   14
 17550 ;; This function calls:
 17551 ;;		_flash_partial_read
 17552 ;; This function is called by:
 17553 ;;		_fat_append_to_file
 17554 ;;		_fat_delete_file
 17555 ;;		_fat_read_from_file
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559                           	psect	text77
 17560  0130BE                     __ptext77:
 17561                           	opt stack 0
 17562  0130BE                     __read_fat:
 17563                           	opt stack 14
 17564                           
 17565                           ;fat16.c: 173: uint16_t fat_sector;
 17566                           ;fat16.c: 174: uint16_t offset;
 17567                           ;fat16.c: 175: uint16_t value;
 17568                           ;fat16.c: 176: fat_sector = cluster>>8;
 17569                           
 17570                           ;incstack = 0
 17571  0130BE  0100               	movlb	0	; () banked
 17572  0130C0  5188               	movf	(__read_fat@cluster+1)& (0+255),w,b
 17573  0130C2  0100               	movlb	0	; () banked
 17574  0130C4  6F89               	movwf	__read_fat@fat_sector& (0+255),b
 17575  0130C6  6B8A               	clrf	(__read_fat@fat_sector+1)& (0+255),b
 17576                           
 17577                           ; BSR set to: 0
 17578                           ;fat16.c: 177: fat_sector += 2;
 17579  0130C8  0E02               	movlw	2
 17580  0130CA  0100               	movlb	0	; () banked
 17581  0130CC  2789               	addwf	__read_fat@fat_sector& (0+255),f,b
 17582  0130CE  0E00               	movlw	0
 17583  0130D0  238A               	addwfc	(__read_fat@fat_sector+1)& (0+255),f,b
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;fat16.c: 178: offset = cluster & 0xFF;
 17587  0130D2  0100               	movlb	0	; () banked
 17588  0130D4  5187               	movf	__read_fat@cluster& (0+255),w,b
 17589  0130D6  0100               	movlb	0	; () banked
 17590  0130D8  6F8B               	movwf	__read_fat@offset& (0+255),b
 17591  0130DA  6B8C               	clrf	(__read_fat@offset+1)& (0+255),b
 17592                           
 17593                           ; BSR set to: 0
 17594                           ;fat16.c: 179: offset <<= 1;
 17595  0130DC  0100               	movlb	0	; () banked
 17596  0130DE  90D8               	bcf	status,0,c
 17597  0130E0  378B               	rlcf	__read_fat@offset& (0+255),f,b
 17598  0130E2  378C               	rlcf	(__read_fat@offset+1)& (0+255),f,b
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 17602  0130E4  C089  F073         	movff	__read_fat@fat_sector,flash_partial_read@page
 17603  0130E8  C08A  F074         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 17604  0130EC  C08B  F075         	movff	__read_fat@offset,flash_partial_read@start
 17605  0130F0  C08C  F076         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17606  0130F4  0E00               	movlw	0
 17607  0130F6  0100               	movlb	0	; () banked
 17608  0130F8  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17609  0130FA  0E02               	movlw	2
 17610  0130FC  6F77               	movwf	flash_partial_read@length& (0+255),b
 17611  0130FE  0E8D               	movlw	low __read_fat@value
 17612  013100  0100               	movlb	0	; () banked
 17613  013102  6F79               	movwf	flash_partial_read@data& (0+255),b
 17614  013104  0E00               	movlw	high __read_fat@value
 17615  013106  0100               	movlb	0	; () banked
 17616  013108  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17617  01310A  EC8E  F08A         	call	_flash_partial_read	;wreg free
 17618                           
 17619                           ;fat16.c: 181: return value;
 17620  01310E  C08D  F087         	movff	__read_fat@value,?__read_fat
 17621  013112  C08E  F088         	movff	__read_fat@value+1,?__read_fat+1
 17622  013116  0012               	return	
 17623  013118                     __end_of__read_fat:
 17624                           	opt stack 0
 17625                           tblptru	equ	0xFF8
 17626                           tblptrh	equ	0xFF7
 17627                           tblptrl	equ	0xFF6
 17628                           tablat	equ	0xFF5
 17629                           prodh	equ	0xFF4
 17630                           prodl	equ	0xFF3
 17631                           intcon	equ	0xFF2
 17632                           intcon2	equ	0xFF1
 17633                           intcon3	equ	0xFF0
 17634                           postinc0	equ	0xFEE
 17635                           wreg	equ	0xFE8
 17636                           postinc1	equ	0xFE6
 17637                           postdec1	equ	0xFE5
 17638                           plusw1	equ	0xFE3
 17639                           fsr1h	equ	0xFE2
 17640                           fsr1l	equ	0xFE1
 17641                           indf2	equ	0xFDF
 17642                           postinc2	equ	0xFDE
 17643                           postdec2	equ	0xFDD
 17644                           plusw2	equ	0xFDB
 17645                           fsr2h	equ	0xFDA
 17646                           fsr2l	equ	0xFD9
 17647                           status	equ	0xFD8
 17648                           
 17649 ;; *************** function __get_empty_cluster *****************
 17650 ;; Defined at:
 17651 ;;		line 109 in file "fat16.c"
 17652 ;; Parameters:    Size  Location     Type
 17653 ;;  first_cluste    2   39[BANK0 ] unsigned int 
 17654 ;; Auto vars:     Size  Location     Type
 17655 ;;  cluster         2   47[BANK0 ] unsigned int 
 17656 ;;  value           2   45[BANK0 ] unsigned int 
 17657 ;;  offset          2   43[BANK0 ] unsigned int 
 17658 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 17659 ;; Return value:  Size  Location     Type
 17660 ;;                  2   39[BANK0 ] unsigned int 
 17661 ;; Registers used:
 17662 ;;		wreg, status,2, status,0, cstack
 17663 ;; Tracked objects:
 17664 ;;		On entry : 0/0
 17665 ;;		On exit  : 0/0
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17669 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17671 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17672 ;;Total ram usage:       10 bytes
 17673 ;; Hardware stack levels used:    1
 17674 ;; Hardware stack levels required when called:   14
 17675 ;; This function calls:
 17676 ;;		_flash_partial_read
 17677 ;; This function is called by:
 17678 ;;		_fat_create_file
 17679 ;;		_fat_append_to_file
 17680 ;; This function uses a non-reentrant model
 17681 ;;
 17682                           
 17683                           	psect	text78
 17684  011B26                     __ptext78:
 17685                           	opt stack 0
 17686  011B26                     __get_empty_cluster:
 17687                           	opt stack 14
 17688                           
 17689                           ;fat16.c: 111: uint16_t cluster;
 17690                           ;fat16.c: 112: uint16_t fat_sector;
 17691                           ;fat16.c: 113: uint16_t offset;
 17692                           ;fat16.c: 114: uint16_t value;
 17693                           ;fat16.c: 117: for(cluster=first_cluster; cluster<(8170+2); ++cluster)
 17694                           
 17695                           ;incstack = 0
 17696  011B26  C087  F08F         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 17697  011B2A  C088  F090         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 17698  011B2E                     l19981:
 17699  011B2E  0EEC               	movlw	236
 17700  011B30  0100               	movlb	0	; () banked
 17701  011B32  5D8F               	subwf	__get_empty_cluster@cluster& (0+255),w,b
 17702  011B34  0E1F               	movlw	31
 17703  011B36  0100               	movlb	0	; () banked
 17704  011B38  5990               	subwfb	(__get_empty_cluster@cluster+1)& (0+255),w,b
 17705  011B3A  B0D8               	btfsc	status,0,c
 17706  011B3C  D037               	goto	l20003
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;fat16.c: 118: {
 17710                           ;fat16.c: 119: fat_sector = cluster>>8;
 17711                           
 17712                           ; BSR set to: 0
 17713                           
 17714                           ; BSR set to: 0
 17715  011B3E  0100               	movlb	0	; () banked
 17716  011B40  5190               	movf	(__get_empty_cluster@cluster+1)& (0+255),w,b
 17717  011B42  0100               	movlb	0	; () banked
 17718  011B44  6F89               	movwf	__get_empty_cluster@fat_sector& (0+255),b
 17719  011B46  6B8A               	clrf	(__get_empty_cluster@fat_sector+1)& (0+255),b
 17720                           
 17721                           ; BSR set to: 0
 17722                           ;fat16.c: 120: fat_sector += 2;
 17723  011B48  0E02               	movlw	2
 17724  011B4A  0100               	movlb	0	; () banked
 17725  011B4C  2789               	addwf	__get_empty_cluster@fat_sector& (0+255),f,b
 17726  011B4E  0E00               	movlw	0
 17727  011B50  238A               	addwfc	(__get_empty_cluster@fat_sector+1)& (0+255),f,b
 17728                           
 17729                           ; BSR set to: 0
 17730                           ;fat16.c: 121: offset = cluster & 0xFF;
 17731  011B52  0100               	movlb	0	; () banked
 17732  011B54  518F               	movf	__get_empty_cluster@cluster& (0+255),w,b
 17733  011B56  0100               	movlb	0	; () banked
 17734  011B58  6F8B               	movwf	__get_empty_cluster@offset& (0+255),b
 17735  011B5A  6B8C               	clrf	(__get_empty_cluster@offset+1)& (0+255),b
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;fat16.c: 122: offset <<= 1;
 17739  011B5C  0100               	movlb	0	; () banked
 17740  011B5E  90D8               	bcf	status,0,c
 17741  011B60  378B               	rlcf	__get_empty_cluster@offset& (0+255),f,b
 17742  011B62  378C               	rlcf	(__get_empty_cluster@offset+1)& (0+255),f,b
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;fat16.c: 123: flash_partial_read(fat_sector, offset, 2, &value);
 17746  011B64  C089  F073         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 17747  011B68  C08A  F074         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 17748  011B6C  C08B  F075         	movff	__get_empty_cluster@offset,flash_partial_read@start
 17749  011B70  C08C  F076         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 17750  011B74  0E00               	movlw	0
 17751  011B76  0100               	movlb	0	; () banked
 17752  011B78  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17753  011B7A  0E02               	movlw	2
 17754  011B7C  6F77               	movwf	flash_partial_read@length& (0+255),b
 17755  011B7E  0E8D               	movlw	low __get_empty_cluster@value
 17756  011B80  0100               	movlb	0	; () banked
 17757  011B82  6F79               	movwf	flash_partial_read@data& (0+255),b
 17758  011B84  0E00               	movlw	high __get_empty_cluster@value
 17759  011B86  0100               	movlb	0	; () banked
 17760  011B88  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17761  011B8A  EC8E  F08A         	call	_flash_partial_read	;wreg free
 17762                           
 17763                           ;fat16.c: 124: if(value==0x0000)
 17764  011B8E  0100               	movlb	0	; () banked
 17765  011B90  518D               	movf	__get_empty_cluster@value& (0+255),w,b
 17766  011B92  0100               	movlb	0	; () banked
 17767  011B94  118E               	iorwf	(__get_empty_cluster@value+1)& (0+255),w,b
 17768  011B96  A4D8               	btfss	status,2,c
 17769  011B98  D005               	goto	l19999
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;fat16.c: 125: {
 17773                           ;fat16.c: 126: return cluster;
 17774  011B9A  C08F  F087         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 17775  011B9E  C090  F088         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 17776  011BA2  0012               	return	
 17777  011BA4                     l19999:
 17778                           
 17779                           ; BSR set to: 0
 17780  011BA4  0100               	movlb	0	; () banked
 17781  011BA6  4B8F               	infsnz	__get_empty_cluster@cluster& (0+255),f,b
 17782  011BA8  2B90               	incf	(__get_empty_cluster@cluster+1)& (0+255),f,b
 17783  011BAA  D7C1               	goto	l19981
 17784  011BAC                     l20003:
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;fat16.c: 127: }
 17788                           ;fat16.c: 128: }
 17789                           ;fat16.c: 129: return 0x0000;
 17790  011BAC  0E00               	movlw	0
 17791  011BAE  0100               	movlb	0	; () banked
 17792  011BB0  6F88               	movwf	(?__get_empty_cluster+1)& (0+255),b
 17793  011BB2  0E00               	movlw	0
 17794  011BB4  6F87               	movwf	?__get_empty_cluster& (0+255),b
 17795  011BB6  0012               	return	
 17796  011BB8                     __end_of__get_empty_cluster:
 17797                           	opt stack 0
 17798                           tblptru	equ	0xFF8
 17799                           tblptrh	equ	0xFF7
 17800                           tblptrl	equ	0xFF6
 17801                           tablat	equ	0xFF5
 17802                           prodh	equ	0xFF4
 17803                           prodl	equ	0xFF3
 17804                           intcon	equ	0xFF2
 17805                           intcon2	equ	0xFF1
 17806                           intcon3	equ	0xFF0
 17807                           postinc0	equ	0xFEE
 17808                           wreg	equ	0xFE8
 17809                           postinc1	equ	0xFE6
 17810                           postdec1	equ	0xFE5
 17811                           plusw1	equ	0xFE3
 17812                           fsr1h	equ	0xFE2
 17813                           fsr1l	equ	0xFE1
 17814                           indf2	equ	0xFDF
 17815                           postinc2	equ	0xFDE
 17816                           postdec2	equ	0xFDD
 17817                           plusw2	equ	0xFDB
 17818                           fsr2h	equ	0xFDA
 17819                           fsr2l	equ	0xFD9
 17820                           status	equ	0xFD8
 17821                           
 17822 ;; *************** function _log_get_number_of_samples *****************
 17823 ;; Defined at:
 17824 ;;		line 169 in file "log.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;		None
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;		None
 17829 ;; Return value:  Size  Location     Type
 17830 ;;                  2    0[BANK0 ] unsigned int 
 17831 ;; Registers used:
 17832 ;;		None
 17833 ;; Tracked objects:
 17834 ;;		On entry : 0/0
 17835 ;;		On exit  : 0/0
 17836 ;;		Unchanged: 0/0
 17837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17841 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17842 ;;Total ram usage:        2 bytes
 17843 ;; Hardware stack levels used:    1
 17844 ;; Hardware stack levels required when called:   10
 17845 ;; This function calls:
 17846 ;;		Nothing
 17847 ;; This function is called by:
 17848 ;;		_main
 17849 ;; This function uses a non-reentrant model
 17850 ;;
 17851                           
 17852                           	psect	text79
 17853  014288                     __ptext79:
 17854                           	opt stack 0
 17855  014288                     _log_get_number_of_samples:
 17856                           	opt stack 20
 17857                           
 17858                           ;log.c: 171: return averageCount;
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;incstack = 0
 17862  014288  C016  F060         	movff	_averageCount,?_log_get_number_of_samples
 17863  01428C  C017  F061         	movff	_averageCount+1,?_log_get_number_of_samples+1
 17864  014290  0012               	return		;funcret
 17865  014292                     __end_of_log_get_number_of_samples:
 17866                           	opt stack 0
 17867                           tblptru	equ	0xFF8
 17868                           tblptrh	equ	0xFF7
 17869                           tblptrl	equ	0xFF6
 17870                           tablat	equ	0xFF5
 17871                           prodh	equ	0xFF4
 17872                           prodl	equ	0xFF3
 17873                           intcon	equ	0xFF2
 17874                           intcon2	equ	0xFF1
 17875                           intcon3	equ	0xFF0
 17876                           postinc0	equ	0xFEE
 17877                           wreg	equ	0xFE8
 17878                           postinc1	equ	0xFE6
 17879                           postdec1	equ	0xFE5
 17880                           plusw1	equ	0xFE3
 17881                           fsr1h	equ	0xFE2
 17882                           fsr1l	equ	0xFE1
 17883                           indf2	equ	0xFDF
 17884                           postinc2	equ	0xFDE
 17885                           postdec2	equ	0xFDD
 17886                           plusw2	equ	0xFDB
 17887                           fsr2h	equ	0xFDA
 17888                           fsr2l	equ	0xFD9
 17889                           status	equ	0xFD8
 17890                           
 17891 ;; *************** function _log_collect_data *****************
 17892 ;; Defined at:
 17893 ;;		line 114 in file "log.c"
 17894 ;; Parameters:    Size  Location     Type
 17895 ;;		None
 17896 ;; Auto vars:     Size  Location     Type
 17897 ;;  temp            2   24[BANK0 ] unsigned int 
 17898 ;; Return value:  Size  Location     Type
 17899 ;;                  1    wreg      void 
 17900 ;; Registers used:
 17901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17902 ;; Tracked objects:
 17903 ;;		On entry : 0/0
 17904 ;;		On exit  : 0/0
 17905 ;;		Unchanged: 0/0
 17906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17909 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17910 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17911 ;;Total ram usage:        6 bytes
 17912 ;; Hardware stack levels used:    1
 17913 ;; Hardware stack levels required when called:   12
 17914 ;; This function calls:
 17915 ;;		__get_input_power
 17916 ;;		__get_output_power
 17917 ;;		_buck_get_mode
 17918 ;;		_rtcc_get_seconds_decimal
 17919 ;;		_system_output_is_on
 17920 ;; This function is called by:
 17921 ;;		_main
 17922 ;; This function uses a non-reentrant model
 17923 ;;
 17924                           
 17925                           	psect	text80
 17926  00C1E0                     __ptext80:
 17927                           	opt stack 0
 17928  00C1E0                     _log_collect_data:
 17929                           	opt stack 18
 17930                           
 17931                           ;log.c: 116: uint16_t temp;
 17932                           ;log.c: 119: temp = rtcc_get_seconds_decimal();
 17933                           
 17934                           ;incstack = 0
 17935  00C1E0  EC09  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
 17936  00C1E4  0100               	movlb	0	; () banked
 17937  00C1E6  6F74               	movwf	??_log_collect_data& (0+255),b
 17938  00C1E8  0100               	movlb	0	; () banked
 17939  00C1EA  5174               	movf	??_log_collect_data& (0+255),w,b
 17940  00C1EC  0100               	movlb	0	; () banked
 17941  00C1EE  6F78               	movwf	log_collect_data@temp& (0+255),b
 17942  00C1F0  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 17943                           
 17944                           ; BSR set to: 0
 17945                           ;log.c: 120: if(lastSecond==temp)
 17946  00C1F2  0101               	movlb	1	; () banked
 17947  00C1F4  51EF               	movf	_lastSecond& (0+255),w,b
 17948  00C1F6  0100               	movlb	0	; () banked
 17949  00C1F8  6F74               	movwf	??_log_collect_data& (0+255),b
 17950  00C1FA  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 17951  00C1FC  0100               	movlb	0	; () banked
 17952  00C1FE  5178               	movf	log_collect_data@temp& (0+255),w,b
 17953  00C200  0100               	movlb	0	; () banked
 17954  00C202  1974               	xorwf	??_log_collect_data& (0+255),w,b
 17955  00C204  E106               	bnz	l3297
 17956  00C206  0100               	movlb	0	; () banked
 17957  00C208  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17958  00C20A  0100               	movlb	0	; () banked
 17959  00C20C  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 17960  00C20E  B4D8               	btfsc	status,2,c
 17961  00C210  0012               	return	
 17962  00C212                     l3297:
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;log.c: 123: }
 17966                           ;log.c: 126: lastSecond = (uint8_t) temp;
 17967  00C212  C078  F1EF         	movff	log_collect_data@temp,_lastSecond
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 17971  00C216  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 17972  00C21A  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 17973  00C21E  0E00               	movlw	0
 17974  00C220  0100               	movlb	0	; () banked
 17975  00C222  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17976  00C224  0EFF               	movlw	255
 17977  00C226  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17978  00C228  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17979  00C22A  0100               	movlb	0	; () banked
 17980  00C22C  5174               	movf	??_log_collect_data& (0+255),w,b
 17981  00C22E  0102               	movlb	2	; () banked
 17982  00C230  279A               	addwf	_inputVoltageSum& (0+255),f,b
 17983  00C232  0100               	movlb	0	; () banked
 17984  00C234  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17985  00C236  0102               	movlb	2	; () banked
 17986  00C238  239B               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 17987  00C23A  0100               	movlb	0	; () banked
 17988  00C23C  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17989  00C23E  0102               	movlb	2	; () banked
 17990  00C240  239C               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 17991  00C242  0100               	movlb	0	; () banked
 17992  00C244  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17993  00C246  0102               	movlb	2	; () banked
 17994  00C248  239D               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 17995                           
 17996                           ;log.c: 130: inputCurrentSum += os.input_current;
 17997  00C24A  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 17998  00C24E  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 17999  00C252  0E00               	movlw	0
 18000  00C254  0100               	movlb	0	; () banked
 18001  00C256  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18002  00C258  0EFF               	movlw	255
 18003  00C25A  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18004  00C25C  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18005  00C25E  0100               	movlb	0	; () banked
 18006  00C260  5174               	movf	??_log_collect_data& (0+255),w,b
 18007  00C262  0102               	movlb	2	; () banked
 18008  00C264  2796               	addwf	_inputCurrentSum& (0+255),f,b
 18009  00C266  0100               	movlb	0	; () banked
 18010  00C268  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18011  00C26A  0102               	movlb	2	; () banked
 18012  00C26C  2397               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 18013  00C26E  0100               	movlb	0	; () banked
 18014  00C270  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18015  00C272  0102               	movlb	2	; () banked
 18016  00C274  2398               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 18017  00C276  0100               	movlb	0	; () banked
 18018  00C278  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18019  00C27A  0102               	movlb	2	; () banked
 18020  00C27C  2399               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 18021                           
 18022                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 18023  00C27E  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 18024  00C282  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 18025  00C286  0E00               	movlw	0
 18026  00C288  0100               	movlb	0	; () banked
 18027  00C28A  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18028  00C28C  0EFF               	movlw	255
 18029  00C28E  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18030  00C290  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18031  00C292  0100               	movlb	0	; () banked
 18032  00C294  5174               	movf	??_log_collect_data& (0+255),w,b
 18033  00C296  0102               	movlb	2	; () banked
 18034  00C298  2792               	addwf	_outputVoltageSum& (0+255),f,b
 18035  00C29A  0100               	movlb	0	; () banked
 18036  00C29C  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18037  00C29E  0102               	movlb	2	; () banked
 18038  00C2A0  2393               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 18039  00C2A2  0100               	movlb	0	; () banked
 18040  00C2A4  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18041  00C2A6  0102               	movlb	2	; () banked
 18042  00C2A8  2394               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 18043  00C2AA  0100               	movlb	0	; () banked
 18044  00C2AC  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18045  00C2AE  0102               	movlb	2	; () banked
 18046  00C2B0  2395               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 18047                           
 18048                           ;log.c: 132: outputCurrentSum += os.output_current;
 18049  00C2B2  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 18050  00C2B6  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 18051  00C2BA  0E00               	movlw	0
 18052  00C2BC  0100               	movlb	0	; () banked
 18053  00C2BE  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18054  00C2C0  0EFF               	movlw	255
 18055  00C2C2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18056  00C2C4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18057  00C2C6  0100               	movlb	0	; () banked
 18058  00C2C8  5174               	movf	??_log_collect_data& (0+255),w,b
 18059  00C2CA  0102               	movlb	2	; () banked
 18060  00C2CC  278E               	addwf	_outputCurrentSum& (0+255),f,b
 18061  00C2CE  0100               	movlb	0	; () banked
 18062  00C2D0  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18063  00C2D2  0102               	movlb	2	; () banked
 18064  00C2D4  238F               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 18065  00C2D6  0100               	movlb	0	; () banked
 18066  00C2D8  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18067  00C2DA  0102               	movlb	2	; () banked
 18068  00C2DC  2390               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 18069  00C2DE  0100               	movlb	0	; () banked
 18070  00C2E0  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18071  00C2E2  0102               	movlb	2	; () banked
 18072  00C2E4  2391               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 18073                           
 18074                           ; BSR set to: 2
 18075                           ;log.c: 133: temp = _get_input_power();
 18076  00C2E6  ECCB  F090         	call	__get_input_power	;wreg free
 18077  00C2EA  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 18078  00C2EE  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 18079                           
 18080                           ;log.c: 134: inputPowerSum += temp>>1;
 18081  00C2F2  90D8               	bcf	status,0,c
 18082  00C2F4  0100               	movlb	0	; () banked
 18083  00C2F6  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 18084  00C2F8  0100               	movlb	0	; () banked
 18085  00C2FA  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 18086  00C2FC  0100               	movlb	0	; () banked
 18087  00C2FE  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 18088  00C300  0100               	movlb	0	; () banked
 18089  00C302  6F74               	movwf	??_log_collect_data& (0+255),b
 18090  00C304  0100               	movlb	0	; () banked
 18091  00C306  5174               	movf	??_log_collect_data& (0+255),w,b
 18092  00C308  0102               	movlb	2	; () banked
 18093  00C30A  278A               	addwf	_inputPowerSum& (0+255),f,b
 18094  00C30C  0100               	movlb	0	; () banked
 18095  00C30E  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18096  00C310  0102               	movlb	2	; () banked
 18097  00C312  238B               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 18098  00C314  0E00               	movlw	0
 18099  00C316  0102               	movlb	2	; () banked
 18100  00C318  238C               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 18101  00C31A  0E00               	movlw	0
 18102  00C31C  0102               	movlb	2	; () banked
 18103  00C31E  238D               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 18104                           
 18105                           ; BSR set to: 2
 18106                           ;log.c: 135: inputCapacitySum += temp;
 18107  00C320  0100               	movlb	0	; () banked
 18108  00C322  5178               	movf	log_collect_data@temp& (0+255),w,b
 18109  00C324  0102               	movlb	2	; () banked
 18110  00C326  2782               	addwf	_inputCapacitySum& (0+255),f,b
 18111  00C328  0100               	movlb	0	; () banked
 18112  00C32A  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 18113  00C32C  0102               	movlb	2	; () banked
 18114  00C32E  2383               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 18115  00C330  0E00               	movlw	0
 18116  00C332  0102               	movlb	2	; () banked
 18117  00C334  2384               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 18118  00C336  0E00               	movlw	0
 18119  00C338  0102               	movlb	2	; () banked
 18120  00C33A  2385               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 18121                           
 18122                           ; BSR set to: 2
 18123                           ;log.c: 136: temp = _get_output_power();
 18124  00C33C  EC89  F090         	call	__get_output_power	;wreg free
 18125  00C340  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 18126  00C344  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 18127                           
 18128                           ;log.c: 137: outputPowerSum += temp>>1;
 18129  00C348  90D8               	bcf	status,0,c
 18130  00C34A  0100               	movlb	0	; () banked
 18131  00C34C  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 18132  00C34E  0100               	movlb	0	; () banked
 18133  00C350  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 18134  00C352  0100               	movlb	0	; () banked
 18135  00C354  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 18136  00C356  0100               	movlb	0	; () banked
 18137  00C358  6F74               	movwf	??_log_collect_data& (0+255),b
 18138  00C35A  0100               	movlb	0	; () banked
 18139  00C35C  5174               	movf	??_log_collect_data& (0+255),w,b
 18140  00C35E  0102               	movlb	2	; () banked
 18141  00C360  2786               	addwf	_outputPowerSum& (0+255),f,b
 18142  00C362  0100               	movlb	0	; () banked
 18143  00C364  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18144  00C366  0102               	movlb	2	; () banked
 18145  00C368  2387               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 18146  00C36A  0E00               	movlw	0
 18147  00C36C  0102               	movlb	2	; () banked
 18148  00C36E  2388               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 18149  00C370  0E00               	movlw	0
 18150  00C372  0102               	movlb	2	; () banked
 18151  00C374  2389               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 18152                           
 18153                           ; BSR set to: 2
 18154                           ;log.c: 138: outputCapacitySum += temp;
 18155  00C376  0100               	movlb	0	; () banked
 18156  00C378  5178               	movf	log_collect_data@temp& (0+255),w,b
 18157  00C37A  0102               	movlb	2	; () banked
 18158  00C37C  277E               	addwf	_outputCapacitySum& (0+255),f,b
 18159  00C37E  0100               	movlb	0	; () banked
 18160  00C380  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 18161  00C382  0102               	movlb	2	; () banked
 18162  00C384  237F               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 18163  00C386  0E00               	movlw	0
 18164  00C388  0102               	movlb	2	; () banked
 18165  00C38A  2380               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 18166  00C38C  0E00               	movlw	0
 18167  00C38E  0102               	movlb	2	; () banked
 18168  00C390  2381               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 18169                           
 18170                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 18171  00C392  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 18172  00C396  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 18173  00C39A  0E00               	movlw	0
 18174  00C39C  0100               	movlb	0	; () banked
 18175  00C39E  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18176  00C3A0  0EFF               	movlw	255
 18177  00C3A2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18178  00C3A4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18179  00C3A6  0100               	movlb	0	; () banked
 18180  00C3A8  5174               	movf	??_log_collect_data& (0+255),w,b
 18181  00C3AA  0102               	movlb	2	; () banked
 18182  00C3AC  277A               	addwf	_temperatureOnboardSum& (0+255),f,b
 18183  00C3AE  0100               	movlb	0	; () banked
 18184  00C3B0  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18185  00C3B2  0102               	movlb	2	; () banked
 18186  00C3B4  237B               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 18187  00C3B6  0100               	movlb	0	; () banked
 18188  00C3B8  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18189  00C3BA  0102               	movlb	2	; () banked
 18190  00C3BC  237C               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 18191  00C3BE  0100               	movlb	0	; () banked
 18192  00C3C0  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18193  00C3C2  0102               	movlb	2	; () banked
 18194  00C3C4  237D               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 18195                           
 18196                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 18197  00C3C6  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 18198  00C3CA  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 18199  00C3CE  0E00               	movlw	0
 18200  00C3D0  0100               	movlb	0	; () banked
 18201  00C3D2  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18202  00C3D4  0EFF               	movlw	255
 18203  00C3D6  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18204  00C3D8  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18205  00C3DA  0100               	movlb	0	; () banked
 18206  00C3DC  5174               	movf	??_log_collect_data& (0+255),w,b
 18207  00C3DE  0102               	movlb	2	; () banked
 18208  00C3E0  2776               	addwf	_temperatureExternal1Sum& (0+255),f,b
 18209  00C3E2  0100               	movlb	0	; () banked
 18210  00C3E4  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18211  00C3E6  0102               	movlb	2	; () banked
 18212  00C3E8  2377               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 18213  00C3EA  0100               	movlb	0	; () banked
 18214  00C3EC  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18215  00C3EE  0102               	movlb	2	; () banked
 18216  00C3F0  2378               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 18217  00C3F2  0100               	movlb	0	; () banked
 18218  00C3F4  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18219  00C3F6  0102               	movlb	2	; () banked
 18220  00C3F8  2379               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 18221                           
 18222                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 18223  00C3FA  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 18224  00C3FE  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 18225  00C402  0E00               	movlw	0
 18226  00C404  0100               	movlb	0	; () banked
 18227  00C406  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18228  00C408  0EFF               	movlw	255
 18229  00C40A  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18230  00C40C  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18231  00C40E  0100               	movlb	0	; () banked
 18232  00C410  5174               	movf	??_log_collect_data& (0+255),w,b
 18233  00C412  0102               	movlb	2	; () banked
 18234  00C414  2772               	addwf	_temperatureExternal2Sum& (0+255),f,b
 18235  00C416  0100               	movlb	0	; () banked
 18236  00C418  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18237  00C41A  0102               	movlb	2	; () banked
 18238  00C41C  2373               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 18239  00C41E  0100               	movlb	0	; () banked
 18240  00C420  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18241  00C422  0102               	movlb	2	; () banked
 18242  00C424  2374               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 18243  00C426  0100               	movlb	0	; () banked
 18244  00C428  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18245  00C42A  0102               	movlb	2	; () banked
 18246  00C42C  2375               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 18247                           
 18248                           ; BSR set to: 2
 18249                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 18250  00C42E  EC78  F0A1         	call	_buck_get_mode	;wreg free
 18251  00C432  0100               	movlb	0	; () banked
 18252  00C434  6F74               	movwf	??_log_collect_data& (0+255),b
 18253  00C436  0E7F               	movlw	127
 18254  00C438  0100               	movlb	0	; () banked
 18255  00C43A  1774               	andwf	??_log_collect_data& (0+255),f,b
 18256  00C43C  B4D8               	btfsc	status,2,c
 18257  00C43E  D003               	goto	l22669
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;log.c: 143: {
 18261                           ;log.c: 144: ++chargerOnTime;
 18262  00C440  0102               	movlb	2	; () banked
 18263  00C442  4BB0               	infsnz	_chargerOnTime& (0+255),f,b
 18264  00C444  2BB1               	incf	(_chargerOnTime+1)& (0+255),f,b
 18265  00C446                     l22669:
 18266                           
 18267                           ;log.c: 145: }
 18268                           ;log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 18269  00C446  0102               	movlb	2	; () banked
 18270  00C448  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 18271  00C44A  A4D8               	btfss	status,2,c
 18272  00C44C  D003               	goto	l22673
 18273                           
 18274                           ; BSR set to: 2
 18275                           ;log.c: 147: {
 18276                           ;log.c: 148: ++lowPowerTime;
 18277  00C44E  0102               	movlb	2	; () banked
 18278  00C450  4BAE               	infsnz	_lowPowerTime& (0+255),f,b
 18279  00C452  2BAF               	incf	(_lowPowerTime+1)& (0+255),f,b
 18280  00C454                     l22673:
 18281                           
 18282                           ; BSR set to: 2
 18283                           ;log.c: 149: }
 18284                           ;log.c: 150: if(system_output_is_on(OUTPUT_1))
 18285  00C454  0E01               	movlw	1
 18286  00C456  ECF8  F09F         	call	_system_output_is_on
 18287  00C45A  0900               	iorlw	0
 18288  00C45C  B4D8               	btfsc	status,2,c
 18289  00C45E  D002               	goto	l22677
 18290                           
 18291                           ;log.c: 151: status |= 0b10000000;
 18292  00C460  0101               	movlb	1	; () banked
 18293  00C462  8FF0               	bsf	_status& (0+255),7,b
 18294  00C464                     l22677:
 18295                           
 18296                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 18297  00C464  0E02               	movlw	2
 18298  00C466  ECF8  F09F         	call	_system_output_is_on
 18299  00C46A  0900               	iorlw	0
 18300  00C46C  B4D8               	btfsc	status,2,c
 18301  00C46E  D002               	goto	l22681
 18302                           
 18303                           ;log.c: 153: status |= 0b01000000;
 18304  00C470  0101               	movlb	1	; () banked
 18305  00C472  8DF0               	bsf	_status& (0+255),6,b
 18306  00C474                     l22681:
 18307                           
 18308                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 18309  00C474  0E04               	movlw	4
 18310  00C476  ECF8  F09F         	call	_system_output_is_on
 18311  00C47A  0900               	iorlw	0
 18312  00C47C  B4D8               	btfsc	status,2,c
 18313  00C47E  D002               	goto	l22685
 18314                           
 18315                           ;log.c: 155: status |= 0b00100000;
 18316  00C480  0101               	movlb	1	; () banked
 18317  00C482  8BF0               	bsf	_status& (0+255),5,b
 18318  00C484                     l22685:
 18319                           
 18320                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 18321  00C484  0E08               	movlw	8
 18322  00C486  ECF8  F09F         	call	_system_output_is_on
 18323  00C48A  0900               	iorlw	0
 18324  00C48C  B4D8               	btfsc	status,2,c
 18325  00C48E  D002               	goto	l22689
 18326                           
 18327                           ;log.c: 157: status |= 0b00010000;
 18328  00C490  0101               	movlb	1	; () banked
 18329  00C492  89F0               	bsf	_status& (0+255),4,b
 18330  00C494                     l22689:
 18331                           
 18332                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 18333  00C494  0E10               	movlw	16
 18334  00C496  ECF8  F09F         	call	_system_output_is_on
 18335  00C49A  0900               	iorlw	0
 18336  00C49C  B4D8               	btfsc	status,2,c
 18337  00C49E  D002               	goto	l22693
 18338                           
 18339                           ;log.c: 159: status |= 0b00001000;
 18340  00C4A0  0101               	movlb	1	; () banked
 18341  00C4A2  87F0               	bsf	_status& (0+255),3,b
 18342  00C4A4                     l22693:
 18343                           
 18344                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 18345  00C4A4  0E20               	movlw	32
 18346  00C4A6  ECF8  F09F         	call	_system_output_is_on
 18347  00C4AA  0900               	iorlw	0
 18348  00C4AC  B4D8               	btfsc	status,2,c
 18349  00C4AE  D002               	goto	l3306
 18350                           
 18351                           ;log.c: 161: status |= 0b00000100;
 18352  00C4B0  0101               	movlb	1	; () banked
 18353  00C4B2  85F0               	bsf	_status& (0+255),2,b
 18354  00C4B4                     l3306:
 18355                           
 18356                           ;log.c: 163: status |= 0b00000010;
 18357  00C4B4  0101               	movlb	1	; () banked
 18358  00C4B6  83F0               	bsf	_status& (0+255),1,b
 18359                           
 18360                           ;log.c: 164: ++averageCount;
 18361  00C4B8  4A16               	infsnz	_averageCount,f,c
 18362  00C4BA  2A17               	incf	_averageCount+1,f,c
 18363  00C4BC  0012               	return		;funcret
 18364  00C4BE                     __end_of_log_collect_data:
 18365                           	opt stack 0
 18366                           tblptru	equ	0xFF8
 18367                           tblptrh	equ	0xFF7
 18368                           tblptrl	equ	0xFF6
 18369                           tablat	equ	0xFF5
 18370                           prodh	equ	0xFF4
 18371                           prodl	equ	0xFF3
 18372                           intcon	equ	0xFF2
 18373                           intcon2	equ	0xFF1
 18374                           intcon3	equ	0xFF0
 18375                           postinc0	equ	0xFEE
 18376                           wreg	equ	0xFE8
 18377                           postinc1	equ	0xFE6
 18378                           postdec1	equ	0xFE5
 18379                           plusw1	equ	0xFE3
 18380                           fsr1h	equ	0xFE2
 18381                           fsr1l	equ	0xFE1
 18382                           indf2	equ	0xFDF
 18383                           postinc2	equ	0xFDE
 18384                           postdec2	equ	0xFDD
 18385                           plusw2	equ	0xFDB
 18386                           fsr2h	equ	0xFDA
 18387                           fsr2l	equ	0xFD9
 18388                           status	equ	0xFD8
 18389                           
 18390 ;; *************** function _system_output_is_on *****************
 18391 ;; Defined at:
 18392 ;;		line 491 in file "os.c"
 18393 ;; Parameters:    Size  Location     Type
 18394 ;;  output          1    wreg     enum E8129
 18395 ;; Auto vars:     Size  Location     Type
 18396 ;;  output          1    0[BANK0 ] enum E8129
 18397 ;; Return value:  Size  Location     Type
 18398 ;;                  1    wreg      unsigned char 
 18399 ;; Registers used:
 18400 ;;		wreg, status,2, status,0
 18401 ;; Tracked objects:
 18402 ;;		On entry : 0/0
 18403 ;;		On exit  : 0/0
 18404 ;;		Unchanged: 0/0
 18405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18410 ;;Total ram usage:        1 bytes
 18411 ;; Hardware stack levels used:    1
 18412 ;; Hardware stack levels required when called:   10
 18413 ;; This function calls:
 18414 ;;		Nothing
 18415 ;; This function is called by:
 18416 ;;		_system_output_toggle
 18417 ;;		_log_collect_data
 18418 ;; This function uses a non-reentrant model
 18419 ;;
 18420                           
 18421                           	psect	text81
 18422  013FF0                     __ptext81:
 18423                           	opt stack 0
 18424  013FF0                     _system_output_is_on:
 18425                           	opt stack 17
 18426                           
 18427                           ;incstack = 0
 18428                           ;system_output_is_on@output stored from wreg
 18429  013FF0  0100               	movlb	0	; () banked
 18430  013FF2  6F60               	movwf	system_output_is_on@output& (0+255),b
 18431                           
 18432                           ;os.c: 493: if(os.outputs&output)
 18433  013FF4  0102               	movlb	2	; () banked
 18434  013FF6  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 18435  013FF8  0100               	movlb	0	; () banked
 18436  013FFA  1560               	andwf	system_output_is_on@output& (0+255),w,b
 18437  013FFC  0900               	iorlw	0
 18438  013FFE  B4D8               	btfsc	status,2,c
 18439  014000  D002               	goto	l19087
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;os.c: 494: return 1;
 18443  014002  0E01               	movlw	1
 18444                           
 18445                           ; BSR set to: 0
 18446                           
 18447                           ; BSR set to: 0
 18448  014004  0012               	return	
 18449  014006                     l19087:
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;os.c: 495: else
 18453                           ;os.c: 496: return 0;
 18454  014006  0E00               	movlw	0
 18455                           
 18456                           ; BSR set to: 0
 18457  014008  0012               	return	
 18458  01400A                     __end_of_system_output_is_on:
 18459                           	opt stack 0
 18460                           tblptru	equ	0xFF8
 18461                           tblptrh	equ	0xFF7
 18462                           tblptrl	equ	0xFF6
 18463                           tablat	equ	0xFF5
 18464                           prodh	equ	0xFF4
 18465                           prodl	equ	0xFF3
 18466                           intcon	equ	0xFF2
 18467                           intcon2	equ	0xFF1
 18468                           intcon3	equ	0xFF0
 18469                           postinc0	equ	0xFEE
 18470                           wreg	equ	0xFE8
 18471                           postinc1	equ	0xFE6
 18472                           postdec1	equ	0xFE5
 18473                           plusw1	equ	0xFE3
 18474                           fsr1h	equ	0xFE2
 18475                           fsr1l	equ	0xFE1
 18476                           indf2	equ	0xFDF
 18477                           postinc2	equ	0xFDE
 18478                           postdec2	equ	0xFDD
 18479                           plusw2	equ	0xFDB
 18480                           fsr2h	equ	0xFDA
 18481                           fsr2l	equ	0xFD9
 18482                           status	equ	0xFD8
 18483                           
 18484 ;; *************** function _rtcc_get_seconds_decimal *****************
 18485 ;; Defined at:
 18486 ;;		line 325 in file "rtcc.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;		None
 18489 ;; Auto vars:     Size  Location     Type
 18490 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 18491 ;; Return value:  Size  Location     Type
 18492 ;;                  1    wreg      unsigned char 
 18493 ;; Registers used:
 18494 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18495 ;; Tracked objects:
 18496 ;;		On entry : 0/0
 18497 ;;		On exit  : 0/0
 18498 ;;		Unchanged: 0/0
 18499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18504 ;;Total ram usage:        1 bytes
 18505 ;; Hardware stack levels used:    1
 18506 ;; Hardware stack levels required when called:   11
 18507 ;; This function calls:
 18508 ;;		__rtcc_bcd_to_decimal
 18509 ;;		_rtcc_get_seconds
 18510 ;; This function is called by:
 18511 ;;		__get_time
 18512 ;;		__get_dateTime
 18513 ;;		_log_start_new
 18514 ;;		_log_collect_data
 18515 ;; This function uses a non-reentrant model
 18516 ;;
 18517                           
 18518                           	psect	text82
 18519  014212                     __ptext82:
 18520                           	opt stack 0
 18521  014212                     _rtcc_get_seconds_decimal:
 18522                           	opt stack 17
 18523                           
 18524                           ;rtcc.c: 327: uint8_t bcd_seconds = rtcc_get_seconds();
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;incstack = 0
 18528  014212  ECAA  F0A0         	call	_rtcc_get_seconds	;wreg free
 18529  014216  0100               	movlb	0	; () banked
 18530  014218  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;rtcc.c: 328: return _rtcc_bcd_to_decimal(bcd_seconds);
 18534  01421A  0100               	movlb	0	; () banked
 18535  01421C  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 18536  01421E  EC1D  F09F         	call	__rtcc_bcd_to_decimal
 18537  014222  0012               	return	
 18538  014224                     __end_of_rtcc_get_seconds_decimal:
 18539                           	opt stack 0
 18540                           tblptru	equ	0xFF8
 18541                           tblptrh	equ	0xFF7
 18542                           tblptrl	equ	0xFF6
 18543                           tablat	equ	0xFF5
 18544                           prodh	equ	0xFF4
 18545                           prodl	equ	0xFF3
 18546                           intcon	equ	0xFF2
 18547                           intcon2	equ	0xFF1
 18548                           intcon3	equ	0xFF0
 18549                           postinc0	equ	0xFEE
 18550                           wreg	equ	0xFE8
 18551                           postinc1	equ	0xFE6
 18552                           postdec1	equ	0xFE5
 18553                           plusw1	equ	0xFE3
 18554                           fsr1h	equ	0xFE2
 18555                           fsr1l	equ	0xFE1
 18556                           indf2	equ	0xFDF
 18557                           postinc2	equ	0xFDE
 18558                           postdec2	equ	0xFDD
 18559                           plusw2	equ	0xFDB
 18560                           fsr2h	equ	0xFDA
 18561                           fsr2l	equ	0xFD9
 18562                           status	equ	0xFD8
 18563                           
 18564 ;; *************** function __rtcc_bcd_to_decimal *****************
 18565 ;; Defined at:
 18566 ;;		line 7 in file "rtcc.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;  input           1    wreg     unsigned char 
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;  input           1    2[BANK0 ] unsigned char 
 18571 ;;  ones            1    1[BANK0 ] unsigned char 
 18572 ;;  tens            1    0[BANK0 ] unsigned char 
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  1    wreg      unsigned char 
 18575 ;; Registers used:
 18576 ;;		wreg, status,2, status,0, prodl, prodh
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/0
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18583 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18585 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18586 ;;Total ram usage:        3 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; Hardware stack levels required when called:   10
 18589 ;; This function calls:
 18590 ;;		Nothing
 18591 ;; This function is called by:
 18592 ;;		_rtcc_get_year_decimal
 18593 ;;		_rtcc_get_month_decimal
 18594 ;;		_rtcc_get_day_decimal
 18595 ;;		_rtcc_get_hours_decimal
 18596 ;;		_rtcc_get_minutes_decimal
 18597 ;;		_rtcc_get_seconds_decimal
 18598 ;; This function uses a non-reentrant model
 18599 ;;
 18600                           
 18601                           	psect	text83
 18602  013E3A                     __ptext83:
 18603                           	opt stack 0
 18604  013E3A                     __rtcc_bcd_to_decimal:
 18605                           	opt stack 17
 18606                           
 18607                           ;incstack = 0
 18608                           ;__rtcc_bcd_to_decimal@input stored from wreg
 18609  013E3A  0100               	movlb	0	; () banked
 18610  013E3C  6F62               	movwf	__rtcc_bcd_to_decimal@input& (0+255),b
 18611                           
 18612                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 18613  013E3E  0100               	movlb	0	; () banked
 18614  013E40  3962               	swapf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 18615  013E42  0B0F               	andlw	15
 18616  013E44  0B0F               	andlw	15
 18617  013E46  0100               	movlb	0	; () banked
 18618  013E48  6F60               	movwf	__rtcc_bcd_to_decimal@tens& (0+255),b
 18619                           
 18620                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 18621  013E4A  0100               	movlb	0	; () banked
 18622  013E4C  5162               	movf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 18623  013E4E  0B0F               	andlw	15
 18624  013E50  0100               	movlb	0	; () banked
 18625  013E52  6F61               	movwf	__rtcc_bcd_to_decimal@ones& (0+255),b
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;rtcc.c: 11: return ((10*tens) + ones);
 18629  013E54  0100               	movlb	0	; () banked
 18630  013E56  5160               	movf	__rtcc_bcd_to_decimal@tens& (0+255),w,b
 18631  013E58  0D0A               	mullw	10
 18632  013E5A  50F3               	movf	prodl,w,c
 18633  013E5C  0100               	movlb	0	; () banked
 18634  013E5E  2561               	addwf	__rtcc_bcd_to_decimal@ones& (0+255),w,b
 18635  013E60  0012               	return	
 18636  013E62                     __end_of__rtcc_bcd_to_decimal:
 18637                           	opt stack 0
 18638                           tblptru	equ	0xFF8
 18639                           tblptrh	equ	0xFF7
 18640                           tblptrl	equ	0xFF6
 18641                           tablat	equ	0xFF5
 18642                           prodh	equ	0xFF4
 18643                           prodl	equ	0xFF3
 18644                           intcon	equ	0xFF2
 18645                           intcon2	equ	0xFF1
 18646                           intcon3	equ	0xFF0
 18647                           postinc0	equ	0xFEE
 18648                           wreg	equ	0xFE8
 18649                           postinc1	equ	0xFE6
 18650                           postdec1	equ	0xFE5
 18651                           plusw1	equ	0xFE3
 18652                           fsr1h	equ	0xFE2
 18653                           fsr1l	equ	0xFE1
 18654                           indf2	equ	0xFDF
 18655                           postinc2	equ	0xFDE
 18656                           postdec2	equ	0xFDD
 18657                           plusw2	equ	0xFDB
 18658                           fsr2h	equ	0xFDA
 18659                           fsr2l	equ	0xFD9
 18660                           status	equ	0xFD8
 18661                           
 18662 ;; *************** function __get_output_power *****************
 18663 ;; Defined at:
 18664 ;;		line 99 in file "log.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;		None
 18667 ;; Auto vars:     Size  Location     Type
 18668 ;;  pwr             4   15[BANK0 ] unsigned long 
 18669 ;; Return value:  Size  Location     Type
 18670 ;;                  2   13[BANK0 ] unsigned int 
 18671 ;; Registers used:
 18672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18673 ;; Tracked objects:
 18674 ;;		On entry : 0/0
 18675 ;;		On exit  : 0/0
 18676 ;;		Unchanged: 0/0
 18677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18678 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18679 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18681 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18682 ;;Total ram usage:        6 bytes
 18683 ;; Hardware stack levels used:    1
 18684 ;; Hardware stack levels required when called:   11
 18685 ;; This function calls:
 18686 ;;		___lldiv
 18687 ;;		___lmul
 18688 ;; This function is called by:
 18689 ;;		_log_collect_data
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693                           	psect	text84
 18694  012112                     __ptext84:
 18695                           	opt stack 0
 18696  012112                     __get_output_power:
 18697                           	opt stack 18
 18698                           
 18699                           ;log.c: 101: uint32_t pwr;
 18700                           ;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) os.output_current);
 18701                           
 18702                           ; BSR set to: 0
 18703                           ;incstack = 0
 18704  012112  EE22  F027         	lfsr	2,_os+39	;volatile
 18705  012116  CFDE F060          	movff	postinc2,___lmul@multiplier
 18706  01211A  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 18707  01211E  0100               	movlb	0	; () banked
 18708  012120  0E00               	movlw	0
 18709  012122  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18710  012124  0EFF               	movlw	-1
 18711  012126  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18712  012128  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18713  01212A  EE22  F032         	lfsr	2,_os+50	;volatile
 18714  01212E  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18715  012132  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 18716  012136  0100               	movlb	0	; () banked
 18717  012138  0E00               	movlw	0
 18718  01213A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18719  01213C  0EFF               	movlw	-1
 18720  01213E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18721  012140  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18722  012142  ECBC  F092         	call	___lmul	;wreg free
 18723  012146  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 18724  01214A  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 18725  01214E  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 18726  012152  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 18727                           
 18728                           ;log.c: 103: pwr /= 1000;
 18729  012156  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 18730  01215A  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 18731  01215E  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 18732  012162  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 18733  012166  0EE8               	movlw	232
 18734  012168  0100               	movlb	0	; () banked
 18735  01216A  6F64               	movwf	___lldiv@divisor& (0+255),b
 18736  01216C  0E03               	movlw	3
 18737  01216E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 18738  012170  0E00               	movlw	0
 18739  012172  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 18740  012174  0E00               	movlw	0
 18741  012176  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 18742  012178  EC71  F088         	call	___lldiv	;wreg free
 18743  01217C  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 18744  012180  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 18745  012184  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 18746  012188  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 18747                           
 18748                           ;log.c: 104: return (uint16_t) pwr;
 18749  01218C  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 18750  012190  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 18751  012194  0012               	return	
 18752  012196                     __end_of__get_output_power:
 18753                           	opt stack 0
 18754                           tblptru	equ	0xFF8
 18755                           tblptrh	equ	0xFF7
 18756                           tblptrl	equ	0xFF6
 18757                           tablat	equ	0xFF5
 18758                           prodh	equ	0xFF4
 18759                           prodl	equ	0xFF3
 18760                           intcon	equ	0xFF2
 18761                           intcon2	equ	0xFF1
 18762                           intcon3	equ	0xFF0
 18763                           postinc0	equ	0xFEE
 18764                           wreg	equ	0xFE8
 18765                           postinc1	equ	0xFE6
 18766                           postdec1	equ	0xFE5
 18767                           plusw1	equ	0xFE3
 18768                           fsr1h	equ	0xFE2
 18769                           fsr1l	equ	0xFE1
 18770                           indf2	equ	0xFDF
 18771                           postinc2	equ	0xFDE
 18772                           postdec2	equ	0xFDD
 18773                           plusw2	equ	0xFDB
 18774                           fsr2h	equ	0xFDA
 18775                           fsr2l	equ	0xFD9
 18776                           status	equ	0xFD8
 18777                           
 18778 ;; *************** function __get_input_power *****************
 18779 ;; Defined at:
 18780 ;;		line 91 in file "log.c"
 18781 ;; Parameters:    Size  Location     Type
 18782 ;;		None
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;  pwr             4   16[BANK0 ] long 
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  2   14[BANK0 ] unsigned int 
 18787 ;; Registers used:
 18788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18789 ;; Tracked objects:
 18790 ;;		On entry : 0/0
 18791 ;;		On exit  : 0/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18795 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18797 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18798 ;;Total ram usage:        6 bytes
 18799 ;; Hardware stack levels used:    1
 18800 ;; Hardware stack levels required when called:   11
 18801 ;; This function calls:
 18802 ;;		___aldiv
 18803 ;;		___lmul
 18804 ;; This function is called by:
 18805 ;;		_log_collect_data
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           	psect	text85
 18810  012196                     __ptext85:
 18811                           	opt stack 0
 18812  012196                     __get_input_power:
 18813                           	opt stack 18
 18814                           
 18815                           ;log.c: 93: int32_t pwr;
 18816                           ;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.input_current);
 18817                           
 18818                           ;incstack = 0
 18819  012196  EE22  F012         	lfsr	2,_os+18	;volatile
 18820  01219A  CFDE F060          	movff	postinc2,___lmul@multiplier
 18821  01219E  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 18822  0121A2  0100               	movlb	0	; () banked
 18823  0121A4  0E00               	movlw	0
 18824  0121A6  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18825  0121A8  0EFF               	movlw	-1
 18826  0121AA  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18827  0121AC  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18828  0121AE  EE22  F01D         	lfsr	2,_os+29	;volatile
 18829  0121B2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18830  0121B6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 18831  0121BA  0100               	movlb	0	; () banked
 18832  0121BC  0E00               	movlw	0
 18833  0121BE  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18834  0121C0  0EFF               	movlw	-1
 18835  0121C2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18836  0121C4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18837  0121C6  ECBC  F092         	call	___lmul	;wreg free
 18838  0121CA  C060  F070         	movff	?___lmul,__get_input_power@pwr
 18839  0121CE  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 18840  0121D2  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 18841  0121D6  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 18842                           
 18843                           ;log.c: 95: pwr /= 1000;
 18844  0121DA  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 18845  0121DE  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 18846  0121E2  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 18847  0121E6  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 18848  0121EA  0EE8               	movlw	232
 18849  0121EC  0100               	movlb	0	; () banked
 18850  0121EE  6F64               	movwf	___aldiv@divisor& (0+255),b
 18851  0121F0  0E03               	movlw	3
 18852  0121F2  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 18853  0121F4  0E00               	movlw	0
 18854  0121F6  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 18855  0121F8  0E00               	movlw	0
 18856  0121FA  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 18857  0121FC  ECEC  F07A         	call	___aldiv	;wreg free
 18858  012200  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 18859  012204  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 18860  012208  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 18861  01220C  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 18862                           
 18863                           ;log.c: 96: return (uint16_t) pwr;
 18864  012210  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 18865  012214  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 18866  012218  0012               	return	
 18867  01221A                     __end_of__get_input_power:
 18868                           	opt stack 0
 18869                           tblptru	equ	0xFF8
 18870                           tblptrh	equ	0xFF7
 18871                           tblptrl	equ	0xFF6
 18872                           tablat	equ	0xFF5
 18873                           prodh	equ	0xFF4
 18874                           prodl	equ	0xFF3
 18875                           intcon	equ	0xFF2
 18876                           intcon2	equ	0xFF1
 18877                           intcon3	equ	0xFF0
 18878                           postinc0	equ	0xFEE
 18879                           wreg	equ	0xFE8
 18880                           postinc1	equ	0xFE6
 18881                           postdec1	equ	0xFE5
 18882                           plusw1	equ	0xFE3
 18883                           fsr1h	equ	0xFE2
 18884                           fsr1l	equ	0xFE1
 18885                           indf2	equ	0xFDF
 18886                           postinc2	equ	0xFDE
 18887                           postdec2	equ	0xFDD
 18888                           plusw2	equ	0xFDB
 18889                           fsr2h	equ	0xFDA
 18890                           fsr2l	equ	0xFD9
 18891                           status	equ	0xFD8
 18892                           
 18893 ;; *************** function _i2c_eeprom_tasks *****************
 18894 ;; Defined at:
 18895 ;;		line 779 in file "i2c.c"
 18896 ;; Parameters:    Size  Location     Type
 18897 ;;		None
 18898 ;; Auto vars:     Size  Location     Type
 18899 ;;		None
 18900 ;; Return value:  Size  Location     Type
 18901 ;;                  1    wreg      void 
 18902 ;; Registers used:
 18903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18904 ;; Tracked objects:
 18905 ;;		On entry : 0/0
 18906 ;;		On exit  : 0/0
 18907 ;;		Unchanged: 0/0
 18908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18913 ;;Total ram usage:        0 bytes
 18914 ;; Hardware stack levels used:    1
 18915 ;; Hardware stack levels required when called:   14
 18916 ;; This function calls:
 18917 ;;		__write_calibration
 18918 ;;		_get_next_eeprom_write_task
 18919 ;; This function is called by:
 18920 ;;		_main
 18921 ;; This function uses a non-reentrant model
 18922 ;;
 18923                           
 18924                           	psect	text86
 18925  012748                     __ptext86:
 18926                           	opt stack 0
 18927  012748                     _i2c_eeprom_tasks:
 18928                           	opt stack 16
 18929                           
 18930                           ;i2c.c: 781: switch(get_next_eeprom_write_task())
 18931                           
 18932                           ;incstack = 0
 18933  012748  D01C               	goto	l22345
 18934  01274A                     l22329:
 18935                           
 18936                           ;i2c.c: 786: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 18937  01274A  0E00               	movlw	0
 18938  01274C  EC13  F088         	call	__write_calibration
 18939                           
 18940                           ;i2c.c: 787: break;
 18941  012750  0012               	return	
 18942  012752                     l22331:
 18943                           
 18944                           ;i2c.c: 789: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 18945  012752  0E01               	movlw	1
 18946  012754  EC13  F088         	call	__write_calibration
 18947                           
 18948                           ;i2c.c: 790: break;
 18949  012758  0012               	return	
 18950  01275A                     l22333:
 18951                           
 18952                           ;i2c.c: 792: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 18953  01275A  0E02               	movlw	2
 18954  01275C  EC13  F088         	call	__write_calibration
 18955                           
 18956                           ;i2c.c: 793: break;
 18957  012760  0012               	return	
 18958  012762                     l22335:
 18959                           
 18960                           ;i2c.c: 795: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 18961  012762  0E03               	movlw	3
 18962  012764  EC13  F088         	call	__write_calibration
 18963                           
 18964                           ;i2c.c: 796: break;
 18965  012768  0012               	return	
 18966  01276A                     l22337:
 18967                           
 18968                           ;i2c.c: 798: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 18969  01276A  0E04               	movlw	4
 18970  01276C  EC13  F088         	call	__write_calibration
 18971                           
 18972                           ;i2c.c: 799: break;
 18973  012770  0012               	return	
 18974  012772                     l22339:
 18975                           
 18976                           ;i2c.c: 801: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 18977  012772  0E05               	movlw	5
 18978  012774  EC13  F088         	call	__write_calibration
 18979                           
 18980                           ;i2c.c: 802: break;
 18981  012778  0012               	return	
 18982  01277A                     l22341:
 18983                           
 18984                           ;i2c.c: 804: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 18985  01277A  0E06               	movlw	6
 18986  01277C  EC13  F088         	call	__write_calibration
 18987                           
 18988                           ;i2c.c: 806: }
 18989                           
 18990                           ;i2c.c: 805: break;
 18991  012780  0012               	return	
 18992  012782                     l22345:
 18993  012782  EC86  F09D         	call	_get_next_eeprom_write_task	;wreg free
 18994                           
 18995                           ; Switch size 1, requested type "space"
 18996                           ; Number of cases is 8, Range of values is 1 to 8
 18997                           ; switch strategies available:
 18998                           ; Name         Instructions Cycles
 18999                           ; simple_byte           25    13 (average)
 19000                           ;	Chosen strategy is simple_byte
 19001  012786  0A01               	xorlw	1	; case 1
 19002  012788  B4D8               	btfsc	status,2,c
 19003  01278A  0012               	return	
 19004  01278C  0A03               	xorlw	3	; case 2
 19005  01278E  B4D8               	btfsc	status,2,c
 19006  012790  D7DC               	goto	l22329
 19007  012792  0A01               	xorlw	1	; case 3
 19008  012794  B4D8               	btfsc	status,2,c
 19009  012796  D7DD               	goto	l22331
 19010  012798  0A07               	xorlw	7	; case 4
 19011  01279A  B4D8               	btfsc	status,2,c
 19012  01279C  D7DE               	goto	l22333
 19013  01279E  0A01               	xorlw	1	; case 5
 19014  0127A0  B4D8               	btfsc	status,2,c
 19015  0127A2  D7DF               	goto	l22335
 19016  0127A4  0A03               	xorlw	3	; case 6
 19017  0127A6  B4D8               	btfsc	status,2,c
 19018  0127A8  D7E0               	goto	l22337
 19019  0127AA  0A01               	xorlw	1	; case 7
 19020  0127AC  B4D8               	btfsc	status,2,c
 19021  0127AE  D7E1               	goto	l22339
 19022  0127B0  0A0F               	xorlw	15	; case 8
 19023  0127B2  A4D8               	btfss	status,2,c
 19024  0127B4  0012               	return	
 19025  0127B6  D7E1               	goto	l22341
 19026  0127B8                     __end_of_i2c_eeprom_tasks:
 19027                           	opt stack 0
 19028                           tblptru	equ	0xFF8
 19029                           tblptrh	equ	0xFF7
 19030                           tblptrl	equ	0xFF6
 19031                           tablat	equ	0xFF5
 19032                           prodh	equ	0xFF4
 19033                           prodl	equ	0xFF3
 19034                           intcon	equ	0xFF2
 19035                           intcon2	equ	0xFF1
 19036                           intcon3	equ	0xFF0
 19037                           postinc0	equ	0xFEE
 19038                           wreg	equ	0xFE8
 19039                           postinc1	equ	0xFE6
 19040                           postdec1	equ	0xFE5
 19041                           plusw1	equ	0xFE3
 19042                           fsr1h	equ	0xFE2
 19043                           fsr1l	equ	0xFE1
 19044                           indf2	equ	0xFDF
 19045                           postinc2	equ	0xFDE
 19046                           postdec2	equ	0xFDD
 19047                           plusw2	equ	0xFDB
 19048                           fsr2h	equ	0xFDA
 19049                           fsr2l	equ	0xFD9
 19050                           status	equ	0xFD8
 19051                           
 19052 ;; *************** function _get_next_eeprom_write_task *****************
 19053 ;; Defined at:
 19054 ;;		line 759 in file "i2c.c"
 19055 ;; Parameters:    Size  Location     Type
 19056 ;;		None
 19057 ;; Auto vars:     Size  Location     Type
 19058 ;;  task            1    0[BANK0 ] enum E8252
 19059 ;; Return value:  Size  Location     Type
 19060 ;;                  1    wreg      enum E8252
 19061 ;; Registers used:
 19062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19063 ;; Tracked objects:
 19064 ;;		On entry : 0/0
 19065 ;;		On exit  : 0/0
 19066 ;;		Unchanged: 0/0
 19067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19072 ;;Total ram usage:        1 bytes
 19073 ;; Hardware stack levels used:    1
 19074 ;; Hardware stack levels required when called:   10
 19075 ;; This function calls:
 19076 ;;		Nothing
 19077 ;; This function is called by:
 19078 ;;		_i2c_eeprom_tasks
 19079 ;; This function uses a non-reentrant model
 19080 ;;
 19081                           
 19082                           	psect	text87
 19083  013B0C                     __ptext87:
 19084                           	opt stack 0
 19085  013B0C                     _get_next_eeprom_write_task:
 19086                           	opt stack 19
 19087                           
 19088                           ;i2c.c: 761: eeprom_write_task_t task;
 19089                           ;i2c.c: 762: if (task_list_read_index == task_list_write_index)
 19090                           
 19091                           ;incstack = 0
 19092  013B0C  501D               	movf	_task_list_write_index,w,c
 19093  013B0E  181E               	xorwf	_task_list_read_index,w,c
 19094  013B10  A4D8               	btfss	status,2,c
 19095  013B12  D002               	goto	l20925
 19096                           
 19097                           ;i2c.c: 763: {
 19098                           ;i2c.c: 765: return EEPROM_WRITE_TASK_NONE;
 19099  013B14  0E00               	movlw	0
 19100                           
 19101                           ;i2c.c: 766: }
 19102  013B16  0012               	return	
 19103  013B18                     l20925:
 19104                           
 19105                           ;i2c.c: 767: else
 19106                           ;i2c.c: 768: {
 19107                           ;i2c.c: 770: task = task_list[task_list_read_index];
 19108  013B18  501E               	movf	_task_list_read_index,w,c
 19109  013B1A  0D01               	mullw	1
 19110  013B1C  0E68               	movlw	low _task_list
 19111  013B1E  24F3               	addwf	prodl,w,c
 19112  013B20  6ED9               	movwf	fsr2l,c
 19113  013B22  0E04               	movlw	high _task_list
 19114  013B24  20F4               	addwfc	prodh,w,c
 19115  013B26  6EDA               	movwf	fsr2h,c
 19116  013B28  50DF               	movf	indf2,w,c
 19117  013B2A  0100               	movlb	0	; () banked
 19118  013B2C  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 19119                           
 19120                           ; BSR set to: 0
 19121                           ;i2c.c: 772: ++task_list_read_index;
 19122  013B2E  2A1E               	incf	_task_list_read_index,f,c
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;i2c.c: 773: task_list_read_index &= 0x0F;
 19126  013B30  0E0F               	movlw	15
 19127  013B32  161E               	andwf	_task_list_read_index,f,c
 19128                           
 19129                           ; BSR set to: 0
 19130                           ;i2c.c: 775: return task;
 19131  013B34  0100               	movlb	0	; () banked
 19132  013B36  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 19133                           
 19134                           ; BSR set to: 0
 19135  013B38  0012               	return	
 19136  013B3A                     __end_of_get_next_eeprom_write_task:
 19137                           	opt stack 0
 19138                           tblptru	equ	0xFF8
 19139                           tblptrh	equ	0xFF7
 19140                           tblptrl	equ	0xFF6
 19141                           tablat	equ	0xFF5
 19142                           prodh	equ	0xFF4
 19143                           prodl	equ	0xFF3
 19144                           intcon	equ	0xFF2
 19145                           intcon2	equ	0xFF1
 19146                           intcon3	equ	0xFF0
 19147                           postinc0	equ	0xFEE
 19148                           wreg	equ	0xFE8
 19149                           postinc1	equ	0xFE6
 19150                           postdec1	equ	0xFE5
 19151                           plusw1	equ	0xFE3
 19152                           fsr1h	equ	0xFE2
 19153                           fsr1l	equ	0xFE1
 19154                           indf2	equ	0xFDF
 19155                           postinc2	equ	0xFDE
 19156                           postdec2	equ	0xFDD
 19157                           plusw2	equ	0xFDB
 19158                           fsr2h	equ	0xFDA
 19159                           fsr2l	equ	0xFD9
 19160                           status	equ	0xFD8
 19161                           
 19162 ;; *************** function __write_calibration *****************
 19163 ;; Defined at:
 19164 ;;		line 715 in file "i2c.c"
 19165 ;; Parameters:    Size  Location     Type
 19166 ;;  index           1    wreg     enum E8142
 19167 ;; Auto vars:     Size  Location     Type
 19168 ;;  index           1   59[BANK0 ] enum E8142
 19169 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 19170 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 19171 ;;		 -> calibrationParameters(84), 
 19172 ;;  addr            2   55[BANK0 ] unsigned int 
 19173 ;;  cntr            1   60[BANK0 ] unsigned char 
 19174 ;; Return value:  Size  Location     Type
 19175 ;;                  1    wreg      void 
 19176 ;; Registers used:
 19177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19178 ;; Tracked objects:
 19179 ;;		On entry : 0/0
 19180 ;;		On exit  : 0/0
 19181 ;;		Unchanged: 0/0
 19182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19184 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19186 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19187 ;;Total ram usage:       24 bytes
 19188 ;; Hardware stack levels used:    1
 19189 ;; Hardware stack levels required when called:   13
 19190 ;; This function calls:
 19191 ;;		_i2c_eeprom_write
 19192 ;; This function is called by:
 19193 ;;		_i2c_eeprom_tasks
 19194 ;; This function uses a non-reentrant model
 19195 ;;
 19196                           
 19197                           	psect	text88
 19198  011026                     __ptext88:
 19199                           	opt stack 0
 19200  011026                     __write_calibration:
 19201                           	opt stack 16
 19202                           
 19203                           ;incstack = 0
 19204                           ;__write_calibration@index stored from wreg
 19205  011026  0100               	movlb	0	; () banked
 19206  011028  6F9B               	movwf	__write_calibration@index& (0+255),b
 19207                           
 19208                           ;i2c.c: 717: uint8_t buffer[16];
 19209                           ;i2c.c: 718: uint8_t *ptr;
 19210                           ;i2c.c: 719: uint8_t cntr;
 19211                           ;i2c.c: 720: uint16_t addr;
 19212                           ;i2c.c: 721: buffer[0] = 0x77;
 19213  01102A  0E77               	movlw	119
 19214  01102C  0100               	movlb	0	; () banked
 19215  01102E  6F87               	movwf	__write_calibration@buffer& (0+255),b
 19216                           
 19217                           ;i2c.c: 722: buffer[1] = 0x55;
 19218  011030  0E55               	movlw	85
 19219  011032  0100               	movlb	0	; () banked
 19220  011034  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 19221                           
 19222                           ;i2c.c: 723: buffer[2] = 0x33;
 19223  011036  0E33               	movlw	51
 19224  011038  0100               	movlb	0	; () banked
 19225  01103A  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 19226                           
 19227                           ; BSR set to: 0
 19228                           ;i2c.c: 724: buffer[3] = (uint8_t) index;
 19229  01103C  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;i2c.c: 725: ptr = (uint8_t*) &calibrationParameters[index];
 19233  011040  0100               	movlb	0	; () banked
 19234  011042  519B               	movf	__write_calibration@index& (0+255),w,b
 19235  011044  0D0C               	mullw	12
 19236  011046  0E00               	movlw	low _calibrationParameters
 19237  011048  24F3               	addwf	prodl,w,c
 19238  01104A  0100               	movlb	0	; () banked
 19239  01104C  6F99               	movwf	__write_calibration@ptr& (0+255),b
 19240  01104E  0E03               	movlw	high _calibrationParameters
 19241  011050  20F4               	addwfc	prodh,w,c
 19242  011052  0100               	movlb	0	; () banked
 19243  011054  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 19244                           
 19245                           ; BSR set to: 0
 19246                           ;i2c.c: 726: for(cntr=4; cntr<16; ++cntr)
 19247  011056  0E04               	movlw	4
 19248  011058  0100               	movlb	0	; () banked
 19249  01105A  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 19250  01105C                     l20901:
 19251                           
 19252                           ; BSR set to: 0
 19253  01105C  0E0F               	movlw	15
 19254  01105E  0100               	movlb	0	; () banked
 19255  011060  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 19256  011062  D001               	goto	l20905
 19257  011064  D015               	goto	l20913
 19258  011066                     l20905:
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;i2c.c: 727: {
 19262                           ;i2c.c: 728: buffer[cntr] = *ptr;
 19263  011066  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 19264  01106A  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 19265  01106E  0100               	movlb	0	; () banked
 19266  011070  519C               	movf	__write_calibration@cntr& (0+255),w,b
 19267  011072  0D01               	mullw	1
 19268  011074  0E87               	movlw	low __write_calibration@buffer
 19269  011076  24F3               	addwf	prodl,w,c
 19270  011078  6EE1               	movwf	fsr1l,c
 19271  01107A  0E00               	movlw	high __write_calibration@buffer
 19272  01107C  20F4               	addwfc	prodh,w,c
 19273  01107E  6EE2               	movwf	fsr1h,c
 19274  011080  CFDF FFE7          	movff	indf2,indf1
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;i2c.c: 729: ++ptr;
 19278  011084  0100               	movlb	0	; () banked
 19279  011086  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 19280  011088  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 19281                           
 19282                           ; BSR set to: 0
 19283  01108A  0100               	movlb	0	; () banked
 19284  01108C  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 19285  01108E  D7E6               	goto	l20901
 19286  011090                     l20913:
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;i2c.c: 730: }
 19290                           ;i2c.c: 731: addr = 0x0200 + (index<<4);
 19291  011090  0100               	movlb	0	; () banked
 19292  011092  519B               	movf	__write_calibration@index& (0+255),w,b
 19293  011094  0100               	movlb	0	; () banked
 19294  011096  6F85               	movwf	??__write_calibration& (0+255),b
 19295  011098  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 19296  01109A  0100               	movlb	0	; () banked
 19297  01109C  3B85               	swapf	??__write_calibration& (0+255),f,b
 19298  01109E  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 19299  0110A0  0EF0               	movlw	240
 19300  0110A2  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 19301  0110A4  5185               	movf	??__write_calibration& (0+255),w,b
 19302  0110A6  0B0F               	andlw	15
 19303  0110A8  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 19304  0110AA  0EF0               	movlw	240
 19305  0110AC  1785               	andwf	??__write_calibration& (0+255),f,b
 19306  0110AE  0E00               	movlw	0
 19307  0110B0  0100               	movlb	0	; () banked
 19308  0110B2  2585               	addwf	??__write_calibration& (0+255),w,b
 19309  0110B4  0100               	movlb	0	; () banked
 19310  0110B6  6F97               	movwf	__write_calibration@addr& (0+255),b
 19311  0110B8  0E02               	movlw	2
 19312  0110BA  0100               	movlb	0	; () banked
 19313  0110BC  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 19314  0110BE  0100               	movlb	0	; () banked
 19315  0110C0  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 19316                           
 19317                           ; BSR set to: 0
 19318                           ;i2c.c: 732: i2c_eeprom_write(addr, &buffer[0], 16);
 19319  0110C2  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 19320  0110C6  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 19321  0110CA  0E87               	movlw	low __write_calibration@buffer
 19322  0110CC  0100               	movlb	0	; () banked
 19323  0110CE  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 19324  0110D0  0E00               	movlw	high __write_calibration@buffer
 19325  0110D2  0100               	movlb	0	; () banked
 19326  0110D4  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 19327  0110D6  0E10               	movlw	16
 19328  0110D8  0100               	movlb	0	; () banked
 19329  0110DA  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 19330  0110DC  ECE3  F089         	call	_i2c_eeprom_write	;wreg free
 19331  0110E0  0012               	return		;funcret
 19332  0110E2                     __end_of__write_calibration:
 19333                           	opt stack 0
 19334                           tblptru	equ	0xFF8
 19335                           tblptrh	equ	0xFF7
 19336                           tblptrl	equ	0xFF6
 19337                           tablat	equ	0xFF5
 19338                           prodh	equ	0xFF4
 19339                           prodl	equ	0xFF3
 19340                           intcon	equ	0xFF2
 19341                           intcon2	equ	0xFF1
 19342                           intcon3	equ	0xFF0
 19343                           postinc0	equ	0xFEE
 19344                           wreg	equ	0xFE8
 19345                           indf1	equ	0xFE7
 19346                           postinc1	equ	0xFE6
 19347                           postdec1	equ	0xFE5
 19348                           plusw1	equ	0xFE3
 19349                           fsr1h	equ	0xFE2
 19350                           fsr1l	equ	0xFE1
 19351                           indf2	equ	0xFDF
 19352                           postinc2	equ	0xFDE
 19353                           postdec2	equ	0xFDD
 19354                           plusw2	equ	0xFDB
 19355                           fsr2h	equ	0xFDA
 19356                           fsr2l	equ	0xFD9
 19357                           status	equ	0xFD8
 19358                           
 19359 ;; *************** function _i2c_adc_start *****************
 19360 ;; Defined at:
 19361 ;;		line 467 in file "i2c.c"
 19362 ;; Parameters:    Size  Location     Type
 19363 ;;  channel         1    wreg     enum E8224
 19364 ;;  resolution      1   10[BANK0 ] enum E8230
 19365 ;;  gain            1   11[BANK0 ] enum E8236
 19366 ;; Auto vars:     Size  Location     Type
 19367 ;;  channel         1   12[BANK0 ] enum E8224
 19368 ;;  configuratio    1   13[BANK0 ] unsigned char 
 19369 ;; Return value:  Size  Location     Type
 19370 ;;                  1    wreg      void 
 19371 ;; Registers used:
 19372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19373 ;; Tracked objects:
 19374 ;;		On entry : 0/0
 19375 ;;		On exit  : 0/0
 19376 ;;		Unchanged: 0/0
 19377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19381 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19382 ;;Total ram usage:        4 bytes
 19383 ;; Hardware stack levels used:    1
 19384 ;; Hardware stack levels required when called:   12
 19385 ;; This function calls:
 19386 ;;		__i2c_write
 19387 ;;		_i2c_set_frequency
 19388 ;; This function is called by:
 19389 ;;		_main
 19390 ;; This function uses a non-reentrant model
 19391 ;;
 19392                           
 19393                           	psect	text89
 19394  013462                     __ptext89:
 19395                           	opt stack 0
 19396  013462                     _i2c_adc_start:
 19397                           	opt stack 18
 19398                           
 19399                           ;incstack = 0
 19400                           ;i2c_adc_start@channel stored from wreg
 19401  013462  0100               	movlb	0	; () banked
 19402  013464  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 19403                           
 19404                           ;i2c.c: 469: uint8_t configuration_byte;
 19405                           ;i2c.c: 470: configuration_byte = 0b10000000;
 19406  013466  0E80               	movlw	128
 19407  013468  0100               	movlb	0	; () banked
 19408  01346A  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 19409                           
 19410                           ; BSR set to: 0
 19411                           ;i2c.c: 471: configuration_byte |= (channel<<5);
 19412  01346C  0100               	movlb	0	; () banked
 19413  01346E  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 19414  013470  46E8               	rlncf	wreg,f,c
 19415  013472  0BE0               	andlw	224
 19416  013474  0100               	movlb	0	; () banked
 19417  013476  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;i2c.c: 472: configuration_byte |= (resolution<<2);
 19421  013478  0100               	movlb	0	; () banked
 19422  01347A  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 19423  01347C  46E8               	rlncf	wreg,f,c
 19424  01347E  0BFC               	andlw	252
 19425  013480  0100               	movlb	0	; () banked
 19426  013482  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;i2c.c: 473: configuration_byte |= gain;
 19430  013484  0100               	movlb	0	; () banked
 19431  013486  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 19432  013488  0100               	movlb	0	; () banked
 19433  01348A  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;i2c.c: 476: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 19437  01348C  0E02               	movlw	2
 19438  01348E  ECDC  F093         	call	_i2c_set_frequency
 19439                           
 19440                           ;i2c.c: 478: _i2c_write(0b11010000, &configuration_byte, 1);
 19441  013492  0E6D               	movlw	low i2c_adc_start@configuration_byte
 19442  013494  0100               	movlb	0	; () banked
 19443  013496  6F65               	movwf	__i2c_write@data& (0+255),b
 19444  013498  0E00               	movlw	high i2c_adc_start@configuration_byte
 19445  01349A  0100               	movlb	0	; () banked
 19446  01349C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19447  01349E  0E01               	movlw	1
 19448  0134A0  0100               	movlb	0	; () banked
 19449  0134A2  6F67               	movwf	__i2c_write@length& (0+255),b
 19450  0134A4  0ED0               	movlw	208
 19451  0134A6  EC8C  F098         	call	__i2c_write
 19452  0134AA  0012               	return		;funcret
 19453  0134AC                     __end_of_i2c_adc_start:
 19454                           	opt stack 0
 19455                           tblptru	equ	0xFF8
 19456                           tblptrh	equ	0xFF7
 19457                           tblptrl	equ	0xFF6
 19458                           tablat	equ	0xFF5
 19459                           prodh	equ	0xFF4
 19460                           prodl	equ	0xFF3
 19461                           intcon	equ	0xFF2
 19462                           intcon2	equ	0xFF1
 19463                           intcon3	equ	0xFF0
 19464                           postinc0	equ	0xFEE
 19465                           wreg	equ	0xFE8
 19466                           indf1	equ	0xFE7
 19467                           postinc1	equ	0xFE6
 19468                           postdec1	equ	0xFE5
 19469                           plusw1	equ	0xFE3
 19470                           fsr1h	equ	0xFE2
 19471                           fsr1l	equ	0xFE1
 19472                           indf2	equ	0xFDF
 19473                           postinc2	equ	0xFDE
 19474                           postdec2	equ	0xFDD
 19475                           plusw2	equ	0xFDB
 19476                           fsr2h	equ	0xFDA
 19477                           fsr2l	equ	0xFD9
 19478                           status	equ	0xFD8
 19479                           
 19480 ;; *************** function _i2c_adc_read *****************
 19481 ;; Defined at:
 19482 ;;		line 481 in file "i2c.c"
 19483 ;; Parameters:    Size  Location     Type
 19484 ;;		None
 19485 ;; Auto vars:     Size  Location     Type
 19486 ;;  result          2    8[BANK0 ] int 
 19487 ;; Return value:  Size  Location     Type
 19488 ;;                  2    5[BANK0 ] int 
 19489 ;; Registers used:
 19490 ;;		wreg, status,2, status,0, cstack
 19491 ;; Tracked objects:
 19492 ;;		On entry : 0/0
 19493 ;;		On exit  : 0/0
 19494 ;;		Unchanged: 0/0
 19495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19499 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19500 ;;Total ram usage:        5 bytes
 19501 ;; Hardware stack levels used:    1
 19502 ;; Hardware stack levels required when called:   11
 19503 ;; This function calls:
 19504 ;;		__i2c_acknowledge
 19505 ;;		__i2c_get
 19506 ;;		__i2c_not_acknowledge
 19507 ;;		__i2c_send
 19508 ;;		__i2c_start
 19509 ;;		__i2c_stop
 19510 ;;		__i2c_wait_idle
 19511 ;;		_i2c_set_frequency
 19512 ;; This function is called by:
 19513 ;;		_main
 19514 ;; This function uses a non-reentrant model
 19515 ;;
 19516                           
 19517                           	psect	text90
 19518  012FAA                     __ptext90:
 19519                           	opt stack 0
 19520  012FAA                     _i2c_adc_read:
 19521                           	opt stack 19
 19522                           
 19523                           ;i2c.c: 483: int16_t result;
 19524                           ;i2c.c: 486: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 19525                           
 19526                           ;incstack = 0
 19527  012FAA  0E02               	movlw	2
 19528  012FAC  ECDC  F093         	call	_i2c_set_frequency
 19529                           
 19530                           ;i2c.c: 488: _i2c_wait_idle();
 19531  012FB0  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 19532                           
 19533                           ;i2c.c: 489: _i2c_start();
 19534  012FB4  EC66  F0A1         	call	__i2c_start	;wreg free
 19535                           
 19536                           ;i2c.c: 490: _i2c_wait_idle();
 19537  012FB8  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 19538                           
 19539                           ;i2c.c: 491: _i2c_send(0b11010000 | 0x01);
 19540  012FBC  0ED1               	movlw	209
 19541  012FBE  EC5D  F0A1         	call	__i2c_send
 19542                           
 19543                           ;i2c.c: 492: _i2c_wait_idle();
 19544  012FC2  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 19545                           
 19546                           ;i2c.c: 493: result = _i2c_get();
 19547  012FC6  EC4E  F0A1         	call	__i2c_get	;wreg free
 19548  012FCA  0100               	movlb	0	; () banked
 19549  012FCC  6F67               	movwf	??_i2c_adc_read& (0+255),b
 19550  012FCE  0100               	movlb	0	; () banked
 19551  012FD0  5167               	movf	??_i2c_adc_read& (0+255),w,b
 19552  012FD2  0100               	movlb	0	; () banked
 19553  012FD4  6F68               	movwf	i2c_adc_read@result& (0+255),b
 19554  012FD6  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 19555                           
 19556                           ; BSR set to: 0
 19557                           ;i2c.c: 494: result <<= 8;
 19558  012FD8  0100               	movlb	0	; () banked
 19559  012FDA  5168               	movf	i2c_adc_read@result& (0+255),w,b
 19560  012FDC  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 19561  012FDE  6B68               	clrf	i2c_adc_read@result& (0+255),b
 19562                           
 19563                           ; BSR set to: 0
 19564                           ;i2c.c: 495: _i2c_acknowledge();
 19565  012FE0  EC53  F0A1         	call	__i2c_acknowledge	;wreg free
 19566                           
 19567                           ;i2c.c: 496: result |= _i2c_get();
 19568  012FE4  EC4E  F0A1         	call	__i2c_get	;wreg free
 19569  012FE8  0100               	movlb	0	; () banked
 19570  012FEA  6F67               	movwf	??_i2c_adc_read& (0+255),b
 19571  012FEC  0100               	movlb	0	; () banked
 19572  012FEE  5167               	movf	??_i2c_adc_read& (0+255),w,b
 19573  012FF0  0100               	movlb	0	; () banked
 19574  012FF2  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 19575                           
 19576                           ; BSR set to: 0
 19577                           ;i2c.c: 497: _i2c_not_acknowledge();
 19578  012FF4  EC49  F0A1         	call	__i2c_not_acknowledge	;wreg free
 19579                           
 19580                           ;i2c.c: 498: _i2c_stop();
 19581  012FF8  EC62  F0A1         	call	__i2c_stop	;wreg free
 19582                           
 19583                           ;i2c.c: 500: return result;
 19584  012FFC  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 19585  013000  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 19586  013004  0012               	return	
 19587  013006                     __end_of_i2c_adc_read:
 19588                           	opt stack 0
 19589                           tblptru	equ	0xFF8
 19590                           tblptrh	equ	0xFF7
 19591                           tblptrl	equ	0xFF6
 19592                           tablat	equ	0xFF5
 19593                           prodh	equ	0xFF4
 19594                           prodl	equ	0xFF3
 19595                           intcon	equ	0xFF2
 19596                           intcon2	equ	0xFF1
 19597                           intcon3	equ	0xFF0
 19598                           postinc0	equ	0xFEE
 19599                           wreg	equ	0xFE8
 19600                           indf1	equ	0xFE7
 19601                           postinc1	equ	0xFE6
 19602                           postdec1	equ	0xFE5
 19603                           plusw1	equ	0xFE3
 19604                           fsr1h	equ	0xFE2
 19605                           fsr1l	equ	0xFE1
 19606                           indf2	equ	0xFDF
 19607                           postinc2	equ	0xFDE
 19608                           postdec2	equ	0xFDD
 19609                           plusw2	equ	0xFDB
 19610                           fsr2h	equ	0xFDA
 19611                           fsr2l	equ	0xFD9
 19612                           status	equ	0xFD8
 19613                           
 19614 ;; *************** function __i2c_not_acknowledge *****************
 19615 ;; Defined at:
 19616 ;;		line 87 in file "i2c.c"
 19617 ;; Parameters:    Size  Location     Type
 19618 ;;		None
 19619 ;; Auto vars:     Size  Location     Type
 19620 ;;		None
 19621 ;; Return value:  Size  Location     Type
 19622 ;;                  1    wreg      void 
 19623 ;; Registers used:
 19624 ;;		None
 19625 ;; Tracked objects:
 19626 ;;		On entry : 0/0
 19627 ;;		On exit  : 0/0
 19628 ;;		Unchanged: 0/0
 19629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19634 ;;Total ram usage:        0 bytes
 19635 ;; Hardware stack levels used:    1
 19636 ;; Hardware stack levels required when called:   10
 19637 ;; This function calls:
 19638 ;;		Nothing
 19639 ;; This function is called by:
 19640 ;;		__i2c_read
 19641 ;;		_i2c_adc_read
 19642 ;; This function uses a non-reentrant model
 19643 ;;
 19644                           
 19645                           	psect	text91
 19646  014292                     __ptext91:
 19647                           	opt stack 0
 19648  014292                     __i2c_not_acknowledge:
 19649                           	opt stack 15
 19650                           
 19651                           ;i2c.c: 89: SSP1CON2bits.ACKDT = 1;
 19652                           
 19653                           ;incstack = 0
 19654  014292  8AC5               	bsf	4037,5,c	;volatile
 19655                           
 19656                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
 19657  014294  88C5               	bsf	4037,4,c	;volatile
 19658  014296                     l1521:
 19659  014296  A8C5               	btfss	4037,4,c	;volatile
 19660  014298  0012               	return	
 19661  01429A  D7FD               	goto	l1521
 19662  01429C                     __end_of__i2c_not_acknowledge:
 19663                           	opt stack 0
 19664                           tblptru	equ	0xFF8
 19665                           tblptrh	equ	0xFF7
 19666                           tblptrl	equ	0xFF6
 19667                           tablat	equ	0xFF5
 19668                           prodh	equ	0xFF4
 19669                           prodl	equ	0xFF3
 19670                           intcon	equ	0xFF2
 19671                           intcon2	equ	0xFF1
 19672                           intcon3	equ	0xFF0
 19673                           postinc0	equ	0xFEE
 19674                           wreg	equ	0xFE8
 19675                           indf1	equ	0xFE7
 19676                           postinc1	equ	0xFE6
 19677                           postdec1	equ	0xFE5
 19678                           plusw1	equ	0xFE3
 19679                           fsr1h	equ	0xFE2
 19680                           fsr1l	equ	0xFE1
 19681                           indf2	equ	0xFDF
 19682                           postinc2	equ	0xFDE
 19683                           postdec2	equ	0xFDD
 19684                           plusw2	equ	0xFDB
 19685                           fsr2h	equ	0xFDA
 19686                           fsr2l	equ	0xFD9
 19687                           status	equ	0xFD8
 19688                           
 19689 ;; *************** function __i2c_get *****************
 19690 ;; Defined at:
 19691 ;;		line 64 in file "i2c.c"
 19692 ;; Parameters:    Size  Location     Type
 19693 ;;		None
 19694 ;; Auto vars:     Size  Location     Type
 19695 ;;		None
 19696 ;; Return value:  Size  Location     Type
 19697 ;;                  1    wreg      unsigned char 
 19698 ;; Registers used:
 19699 ;;		wreg, status,2
 19700 ;; Tracked objects:
 19701 ;;		On entry : 0/0
 19702 ;;		On exit  : 0/0
 19703 ;;		Unchanged: 0/0
 19704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19709 ;;Total ram usage:        0 bytes
 19710 ;; Hardware stack levels used:    1
 19711 ;; Hardware stack levels required when called:   10
 19712 ;; This function calls:
 19713 ;;		Nothing
 19714 ;; This function is called by:
 19715 ;;		__i2c_read
 19716 ;;		_i2c_adc_read
 19717 ;; This function uses a non-reentrant model
 19718 ;;
 19719                           
 19720                           	psect	text92
 19721  01429C                     __ptext92:
 19722                           	opt stack 0
 19723  01429C                     __i2c_get:
 19724                           	opt stack 15
 19725                           
 19726                           ;i2c.c: 66: SSP1CON2bits.RCEN = 1 ;
 19727                           
 19728                           ;incstack = 0
 19729  01429C  86C5               	bsf	4037,3,c	;volatile
 19730  01429E                     l1503:
 19731  01429E  B6C5               	btfsc	4037,3,c	;volatile
 19732  0142A0  D7FE               	goto	l1503
 19733                           
 19734                           ;i2c.c: 68: return SSP1BUF;
 19735  0142A2  50C9               	movf	4041,w,c	;volatile
 19736  0142A4  0012               	return	
 19737  0142A6                     __end_of__i2c_get:
 19738                           	opt stack 0
 19739                           tblptru	equ	0xFF8
 19740                           tblptrh	equ	0xFF7
 19741                           tblptrl	equ	0xFF6
 19742                           tablat	equ	0xFF5
 19743                           prodh	equ	0xFF4
 19744                           prodl	equ	0xFF3
 19745                           intcon	equ	0xFF2
 19746                           intcon2	equ	0xFF1
 19747                           intcon3	equ	0xFF0
 19748                           postinc0	equ	0xFEE
 19749                           wreg	equ	0xFE8
 19750                           indf1	equ	0xFE7
 19751                           postinc1	equ	0xFE6
 19752                           postdec1	equ	0xFE5
 19753                           plusw1	equ	0xFE3
 19754                           fsr1h	equ	0xFE2
 19755                           fsr1l	equ	0xFE1
 19756                           indf2	equ	0xFDF
 19757                           postinc2	equ	0xFDE
 19758                           postdec2	equ	0xFDD
 19759                           plusw2	equ	0xFDB
 19760                           fsr2h	equ	0xFDA
 19761                           fsr2l	equ	0xFD9
 19762                           status	equ	0xFD8
 19763                           
 19764 ;; *************** function __i2c_acknowledge *****************
 19765 ;; Defined at:
 19766 ;;		line 79 in file "i2c.c"
 19767 ;; Parameters:    Size  Location     Type
 19768 ;;		None
 19769 ;; Auto vars:     Size  Location     Type
 19770 ;;		None
 19771 ;; Return value:  Size  Location     Type
 19772 ;;                  1    wreg      void 
 19773 ;; Registers used:
 19774 ;;		None
 19775 ;; Tracked objects:
 19776 ;;		On entry : 0/0
 19777 ;;		On exit  : 0/0
 19778 ;;		Unchanged: 0/0
 19779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19784 ;;Total ram usage:        0 bytes
 19785 ;; Hardware stack levels used:    1
 19786 ;; Hardware stack levels required when called:   10
 19787 ;; This function calls:
 19788 ;;		Nothing
 19789 ;; This function is called by:
 19790 ;;		__i2c_read
 19791 ;;		_i2c_adc_read
 19792 ;; This function uses a non-reentrant model
 19793 ;;
 19794                           
 19795                           	psect	text93
 19796  0142A6                     __ptext93:
 19797                           	opt stack 0
 19798  0142A6                     __i2c_acknowledge:
 19799                           	opt stack 15
 19800                           
 19801                           ;i2c.c: 81: SSP1CON2bits.ACKDT = 0;
 19802                           
 19803                           ;incstack = 0
 19804  0142A6  9AC5               	bcf	4037,5,c	;volatile
 19805                           
 19806                           ;i2c.c: 82: SSP1CON2bits.ACKEN = 1;
 19807  0142A8  88C5               	bsf	4037,4,c	;volatile
 19808  0142AA                     l1515:
 19809  0142AA  A8C5               	btfss	4037,4,c	;volatile
 19810  0142AC  0012               	return	
 19811  0142AE  D7FD               	goto	l1515
 19812  0142B0                     __end_of__i2c_acknowledge:
 19813                           	opt stack 0
 19814                           tblptru	equ	0xFF8
 19815                           tblptrh	equ	0xFF7
 19816                           tblptrl	equ	0xFF6
 19817                           tablat	equ	0xFF5
 19818                           prodh	equ	0xFF4
 19819                           prodl	equ	0xFF3
 19820                           intcon	equ	0xFF2
 19821                           intcon2	equ	0xFF1
 19822                           intcon3	equ	0xFF0
 19823                           postinc0	equ	0xFEE
 19824                           wreg	equ	0xFE8
 19825                           indf1	equ	0xFE7
 19826                           postinc1	equ	0xFE6
 19827                           postdec1	equ	0xFE5
 19828                           plusw1	equ	0xFE3
 19829                           fsr1h	equ	0xFE2
 19830                           fsr1l	equ	0xFE1
 19831                           indf2	equ	0xFDF
 19832                           postinc2	equ	0xFDE
 19833                           postdec2	equ	0xFDD
 19834                           plusw2	equ	0xFDB
 19835                           fsr2h	equ	0xFDA
 19836                           fsr2l	equ	0xFD9
 19837                           status	equ	0xFD8
 19838                           
 19839 ;; *************** function _display_update *****************
 19840 ;; Defined at:
 19841 ;;		line 174 in file "display.c"
 19842 ;; Parameters:    Size  Location     Type
 19843 ;;		None
 19844 ;; Auto vars:     Size  Location     Type
 19845 ;;		None
 19846 ;; Return value:  Size  Location     Type
 19847 ;;                  1    wreg      void 
 19848 ;; Registers used:
 19849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19850 ;; Tracked objects:
 19851 ;;		On entry : 0/0
 19852 ;;		On exit  : 0/0
 19853 ;;		Unchanged: 0/0
 19854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19859 ;;Total ram usage:        0 bytes
 19860 ;; Hardware stack levels used:    1
 19861 ;; Hardware stack levels required when called:   14
 19862 ;; This function calls:
 19863 ;;		_i2c_display_cursor
 19864 ;;		_i2c_display_write_fixed
 19865 ;; This function is called by:
 19866 ;;		_main
 19867 ;; This function uses a non-reentrant model
 19868 ;;
 19869                           
 19870                           	psect	text94
 19871  011D60                     __ptext94:
 19872                           	opt stack 0
 19873  011D60                     _display_update:
 19874                           	opt stack 16
 19875                           
 19876                           ;display.c: 176: i2c_display_cursor(0, 0);
 19877                           
 19878                           ;incstack = 0
 19879  011D60  0E00               	movlw	0
 19880  011D62  0100               	movlb	0	; () banked
 19881  011D64  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19882  011D66  0E00               	movlw	0
 19883  011D68  ECC0  F09C         	call	_i2c_display_cursor
 19884                           
 19885                           ;display.c: 177: i2c_display_write_fixed(&display_content[0][0], 20);
 19886  011D6C  0E54               	movlw	low _display_content
 19887  011D6E  0100               	movlb	0	; () banked
 19888  011D70  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19889  011D72  0E03               	movlw	high _display_content
 19890  011D74  0100               	movlb	0	; () banked
 19891  011D76  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19892  011D78  0E14               	movlw	20
 19893  011D7A  0100               	movlb	0	; () banked
 19894  011D7C  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19895  011D7E  ECEF  F095         	call	_i2c_display_write_fixed	;wreg free
 19896                           
 19897                           ;display.c: 178: i2c_display_cursor(1, 0);
 19898  011D82  0E00               	movlw	0
 19899  011D84  0100               	movlb	0	; () banked
 19900  011D86  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19901  011D88  0E01               	movlw	1
 19902  011D8A  ECC0  F09C         	call	_i2c_display_cursor
 19903                           
 19904                           ;display.c: 179: i2c_display_write_fixed(&display_content[1][0], 20);
 19905  011D8E  0E68               	movlw	low (_display_content+20)
 19906  011D90  0100               	movlb	0	; () banked
 19907  011D92  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19908  011D94  0E03               	movlw	high (_display_content+20)
 19909  011D96  0100               	movlb	0	; () banked
 19910  011D98  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19911  011D9A  0E14               	movlw	20
 19912  011D9C  0100               	movlb	0	; () banked
 19913  011D9E  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19914  011DA0  ECEF  F095         	call	_i2c_display_write_fixed	;wreg free
 19915                           
 19916                           ;display.c: 180: i2c_display_cursor(2, 0);
 19917  011DA4  0E00               	movlw	0
 19918  011DA6  0100               	movlb	0	; () banked
 19919  011DA8  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19920  011DAA  0E02               	movlw	2
 19921  011DAC  ECC0  F09C         	call	_i2c_display_cursor
 19922                           
 19923                           ;display.c: 181: i2c_display_write_fixed(&display_content[2][0], 20);
 19924  011DB0  0E7C               	movlw	low (_display_content+40)
 19925  011DB2  0100               	movlb	0	; () banked
 19926  011DB4  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19927  011DB6  0E03               	movlw	high (_display_content+40)
 19928  011DB8  0100               	movlb	0	; () banked
 19929  011DBA  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19930  011DBC  0E14               	movlw	20
 19931  011DBE  0100               	movlb	0	; () banked
 19932  011DC0  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19933  011DC2  ECEF  F095         	call	_i2c_display_write_fixed	;wreg free
 19934                           
 19935                           ;display.c: 182: i2c_display_cursor(3, 0);
 19936  011DC6  0E00               	movlw	0
 19937  011DC8  0100               	movlb	0	; () banked
 19938  011DCA  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19939  011DCC  0E03               	movlw	3
 19940  011DCE  ECC0  F09C         	call	_i2c_display_cursor
 19941                           
 19942                           ;display.c: 183: i2c_display_write_fixed(&display_content[3][0], 20);
 19943  011DD2  0E90               	movlw	low (_display_content+60)
 19944  011DD4  0100               	movlb	0	; () banked
 19945  011DD6  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19946  011DD8  0E03               	movlw	high (_display_content+60)
 19947  011DDA  0100               	movlb	0	; () banked
 19948  011DDC  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19949  011DDE  0E14               	movlw	20
 19950  011DE0  0100               	movlb	0	; () banked
 19951  011DE2  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19952  011DE4  ECEF  F095         	call	_i2c_display_write_fixed	;wreg free
 19953  011DE8  0012               	return		;funcret
 19954  011DEA                     __end_of_display_update:
 19955                           	opt stack 0
 19956                           tblptru	equ	0xFF8
 19957                           tblptrh	equ	0xFF7
 19958                           tblptrl	equ	0xFF6
 19959                           tablat	equ	0xFF5
 19960                           prodh	equ	0xFF4
 19961                           prodl	equ	0xFF3
 19962                           intcon	equ	0xFF2
 19963                           intcon2	equ	0xFF1
 19964                           intcon3	equ	0xFF0
 19965                           postinc0	equ	0xFEE
 19966                           wreg	equ	0xFE8
 19967                           indf1	equ	0xFE7
 19968                           postinc1	equ	0xFE6
 19969                           postdec1	equ	0xFE5
 19970                           plusw1	equ	0xFE3
 19971                           fsr1h	equ	0xFE2
 19972                           fsr1l	equ	0xFE1
 19973                           indf2	equ	0xFDF
 19974                           postinc2	equ	0xFDE
 19975                           postdec2	equ	0xFDD
 19976                           plusw2	equ	0xFDB
 19977                           fsr2h	equ	0xFDA
 19978                           fsr2l	equ	0xFD9
 19979                           status	equ	0xFD8
 19980                           
 19981 ;; *************** function _i2c_display_write_fixed *****************
 19982 ;; Defined at:
 19983 ;;		line 364 in file "i2c.c"
 19984 ;; Parameters:    Size  Location     Type
 19985 ;;  data            2    5[BANK0 ] PTR unsigned char 
 19986 ;;		 -> display_content(80), 
 19987 ;;  length          1    7[BANK0 ] unsigned char 
 19988 ;; Auto vars:     Size  Location     Type
 19989 ;;  pos             1    8[BANK0 ] unsigned char 
 19990 ;; Return value:  Size  Location     Type
 19991 ;;                  1    wreg      void 
 19992 ;; Registers used:
 19993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19994 ;; Tracked objects:
 19995 ;;		On entry : 0/0
 19996 ;;		On exit  : 0/0
 19997 ;;		Unchanged: 0/0
 19998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19999 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20002 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20003 ;;Total ram usage:        4 bytes
 20004 ;; Hardware stack levels used:    1
 20005 ;; Hardware stack levels required when called:   11
 20006 ;; This function calls:
 20007 ;;		__i2c_send
 20008 ;;		__i2c_start
 20009 ;;		__i2c_stop
 20010 ;;		__i2c_wait_idle
 20011 ;;		_i2c_set_frequency
 20012 ;; This function is called by:
 20013 ;;		_display_update
 20014 ;; This function uses a non-reentrant model
 20015 ;;
 20016                           
 20017                           	psect	text95
 20018  012BDE                     __ptext95:
 20019                           	opt stack 0
 20020  012BDE                     _i2c_display_write_fixed:
 20021                           	opt stack 18
 20022                           
 20023                           ;i2c.c: 366: uint8_t pos;
 20024                           ;i2c.c: 369: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 20025                           
 20026                           ;incstack = 0
 20027  012BDE  0E00               	movlw	0
 20028  012BE0  ECDC  F093         	call	_i2c_set_frequency
 20029                           
 20030                           ;i2c.c: 371: _i2c_wait_idle();
 20031  012BE4  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 20032                           
 20033                           ;i2c.c: 372: _i2c_start();
 20034  012BE8  EC66  F0A1         	call	__i2c_start	;wreg free
 20035                           
 20036                           ;i2c.c: 373: _i2c_wait_idle();
 20037  012BEC  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 20038                           
 20039                           ;i2c.c: 374: _i2c_send(0b01111000);
 20040  012BF0  0E78               	movlw	120
 20041  012BF2  EC5D  F0A1         	call	__i2c_send
 20042                           
 20043                           ;i2c.c: 375: _i2c_wait_idle();
 20044  012BF6  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 20045                           
 20046                           ;i2c.c: 376: _i2c_send(0b01000000);
 20047  012BFA  0E40               	movlw	64
 20048  012BFC  EC5D  F0A1         	call	__i2c_send
 20049                           
 20050                           ;i2c.c: 377: _i2c_wait_idle();
 20051  012C00  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 20052                           
 20053                           ;i2c.c: 380: for(pos=0; pos<length; ++pos)
 20054  012C04  0E00               	movlw	0
 20055  012C06  0100               	movlb	0	; () banked
 20056  012C08  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 20057  012C0A  D012               	goto	l20889
 20058  012C0C                     l20883:
 20059                           
 20060                           ; BSR set to: 0
 20061                           ;i2c.c: 381: {
 20062                           ;i2c.c: 382: _i2c_send(data[pos]);
 20063  012C0C  0100               	movlb	0	; () banked
 20064  012C0E  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 20065  012C10  0D01               	mullw	1
 20066  012C12  50F3               	movf	prodl,w,c
 20067  012C14  0100               	movlb	0	; () banked
 20068  012C16  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 20069  012C18  6ED9               	movwf	fsr2l,c
 20070  012C1A  50F4               	movf	prodh,w,c
 20071  012C1C  0100               	movlb	0	; () banked
 20072  012C1E  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 20073  012C20  6EDA               	movwf	fsr2h,c
 20074  012C22  50DF               	movf	indf2,w,c
 20075  012C24  EC5D  F0A1         	call	__i2c_send
 20076                           
 20077                           ;i2c.c: 383: _i2c_wait_idle();
 20078  012C28  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 20079  012C2C  0100               	movlb	0	; () banked
 20080  012C2E  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 20081  012C30                     l20889:
 20082                           
 20083                           ; BSR set to: 0
 20084  012C30  0100               	movlb	0	; () banked
 20085  012C32  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 20086  012C34  0100               	movlb	0	; () banked
 20087  012C36  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 20088  012C38  A0D8               	btfss	status,0,c
 20089  012C3A  D7E8               	goto	l20883
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;i2c.c: 384: }
 20093                           ;i2c.c: 386: _i2c_stop();
 20094                           
 20095                           ; BSR set to: 0
 20096  012C3C  EC62  F0A1         	call	__i2c_stop	;wreg free
 20097  012C40  0012               	return		;funcret
 20098  012C42                     __end_of_i2c_display_write_fixed:
 20099                           	opt stack 0
 20100                           tblptru	equ	0xFF8
 20101                           tblptrh	equ	0xFF7
 20102                           tblptrl	equ	0xFF6
 20103                           tablat	equ	0xFF5
 20104                           prodh	equ	0xFF4
 20105                           prodl	equ	0xFF3
 20106                           intcon	equ	0xFF2
 20107                           intcon2	equ	0xFF1
 20108                           intcon3	equ	0xFF0
 20109                           postinc0	equ	0xFEE
 20110                           wreg	equ	0xFE8
 20111                           indf1	equ	0xFE7
 20112                           postinc1	equ	0xFE6
 20113                           postdec1	equ	0xFE5
 20114                           plusw1	equ	0xFE3
 20115                           fsr1h	equ	0xFE2
 20116                           fsr1l	equ	0xFE1
 20117                           indf2	equ	0xFDF
 20118                           postinc2	equ	0xFDE
 20119                           postdec2	equ	0xFDD
 20120                           plusw2	equ	0xFDB
 20121                           fsr2h	equ	0xFDA
 20122                           fsr2l	equ	0xFD9
 20123                           status	equ	0xFD8
 20124                           
 20125 ;; *************** function _i2c_display_cursor *****************
 20126 ;; Defined at:
 20127 ;;		line 324 in file "i2c.c"
 20128 ;; Parameters:    Size  Location     Type
 20129 ;;  line            1    wreg     unsigned char 
 20130 ;;  position        1   13[BANK0 ] unsigned char 
 20131 ;; Auto vars:     Size  Location     Type
 20132 ;;  line            1   14[BANK0 ] unsigned char 
 20133 ;;  address         1   15[BANK0 ] unsigned char 
 20134 ;; Return value:  Size  Location     Type
 20135 ;;                  1    wreg      void 
 20136 ;; Registers used:
 20137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20138 ;; Tracked objects:
 20139 ;;		On entry : 0/0
 20140 ;;		On exit  : 0/0
 20141 ;;		Unchanged: 0/0
 20142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20143 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20144 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20146 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20147 ;;Total ram usage:        3 bytes
 20148 ;; Hardware stack levels used:    1
 20149 ;; Hardware stack levels required when called:   13
 20150 ;; This function calls:
 20151 ;;		__ic2_display_set_address
 20152 ;;		_i2c_set_frequency
 20153 ;; This function is called by:
 20154 ;;		_display_update
 20155 ;; This function uses a non-reentrant model
 20156 ;;
 20157                           
 20158                           	psect	text96
 20159  013980                     __ptext96:
 20160                           	opt stack 0
 20161  013980                     _i2c_display_cursor:
 20162                           	opt stack 16
 20163                           
 20164                           ;incstack = 0
 20165                           ;i2c_display_cursor@line stored from wreg
 20166  013980  0100               	movlb	0	; () banked
 20167  013982  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 20168                           
 20169                           ;i2c.c: 326: uint8_t address;
 20170                           ;i2c.c: 329: line &= 0b11;
 20171  013984  0E03               	movlw	3
 20172  013986  0100               	movlb	0	; () banked
 20173  013988  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 20174                           
 20175                           ;i2c.c: 330: address = line<<5;
 20176  01398A  0100               	movlb	0	; () banked
 20177  01398C  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 20178  01398E  46E8               	rlncf	wreg,f,c
 20179  013990  0BE0               	andlw	224
 20180  013992  0100               	movlb	0	; () banked
 20181  013994  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 20182                           
 20183                           ;i2c.c: 331: position &= 0b11111;
 20184  013996  0E1F               	movlw	31
 20185  013998  0100               	movlb	0	; () banked
 20186  01399A  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 20187                           
 20188                           ;i2c.c: 332: address |= position;
 20189  01399C  0100               	movlb	0	; () banked
 20190  01399E  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 20191  0139A0  0100               	movlb	0	; () banked
 20192  0139A2  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 20193                           
 20194                           ; BSR set to: 0
 20195                           ;i2c.c: 335: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 20196  0139A4  0E00               	movlw	0
 20197  0139A6  ECDC  F093         	call	_i2c_set_frequency
 20198                           
 20199                           ;i2c.c: 338: _ic2_display_set_address(address);
 20200  0139AA  0100               	movlb	0	; () banked
 20201  0139AC  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 20202  0139AE  ECDA  F09C         	call	__ic2_display_set_address
 20203  0139B2  0012               	return		;funcret
 20204  0139B4                     __end_of_i2c_display_cursor:
 20205                           	opt stack 0
 20206                           tblptru	equ	0xFF8
 20207                           tblptrh	equ	0xFF7
 20208                           tblptrl	equ	0xFF6
 20209                           tablat	equ	0xFF5
 20210                           prodh	equ	0xFF4
 20211                           prodl	equ	0xFF3
 20212                           intcon	equ	0xFF2
 20213                           intcon2	equ	0xFF1
 20214                           intcon3	equ	0xFF0
 20215                           postinc0	equ	0xFEE
 20216                           wreg	equ	0xFE8
 20217                           indf1	equ	0xFE7
 20218                           postinc1	equ	0xFE6
 20219                           postdec1	equ	0xFE5
 20220                           plusw1	equ	0xFE3
 20221                           fsr1h	equ	0xFE2
 20222                           fsr1l	equ	0xFE1
 20223                           indf2	equ	0xFDF
 20224                           postinc2	equ	0xFDE
 20225                           postdec2	equ	0xFDD
 20226                           plusw2	equ	0xFDB
 20227                           fsr2h	equ	0xFDA
 20228                           fsr2l	equ	0xFD9
 20229                           status	equ	0xFD8
 20230                           
 20231 ;; *************** function __ic2_display_set_address *****************
 20232 ;; Defined at:
 20233 ;;		line 311 in file "i2c.c"
 20234 ;; Parameters:    Size  Location     Type
 20235 ;;  address         1    wreg     unsigned char 
 20236 ;; Auto vars:     Size  Location     Type
 20237 ;;  address         1   10[BANK0 ] unsigned char 
 20238 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 20239 ;; Return value:  Size  Location     Type
 20240 ;;                  1    wreg      void 
 20241 ;; Registers used:
 20242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20243 ;; Tracked objects:
 20244 ;;		On entry : 0/0
 20245 ;;		On exit  : 0/0
 20246 ;;		Unchanged: 0/0
 20247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20249 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20251 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20252 ;;Total ram usage:        3 bytes
 20253 ;; Hardware stack levels used:    1
 20254 ;; Hardware stack levels required when called:   12
 20255 ;; This function calls:
 20256 ;;		__i2c_write
 20257 ;;		_i2c_set_frequency
 20258 ;; This function is called by:
 20259 ;;		_i2c_display_cursor
 20260 ;; This function uses a non-reentrant model
 20261 ;;
 20262                           
 20263                           	psect	text97
 20264  0139B4                     __ptext97:
 20265                           	opt stack 0
 20266  0139B4                     __ic2_display_set_address:
 20267                           	opt stack 16
 20268                           
 20269                           ;incstack = 0
 20270                           ;__ic2_display_set_address@address stored from wreg
 20271  0139B4  0100               	movlb	0	; () banked
 20272  0139B6  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 20273                           
 20274                           ;i2c.c: 313: uint8_t data_array[2];
 20275                           ;i2c.c: 314: data_array[0] = 0b00000000;
 20276  0139B8  0E00               	movlw	0
 20277  0139BA  0100               	movlb	0	; () banked
 20278  0139BC  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 20279                           
 20280                           ; BSR set to: 0
 20281                           ;i2c.c: 315: data_array[1] = 0b10000000 | address;
 20282  0139BE  0100               	movlb	0	; () banked
 20283  0139C0  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 20284  0139C2  0980               	iorlw	128
 20285  0139C4  0100               	movlb	0	; () banked
 20286  0139C6  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 20287                           
 20288                           ; BSR set to: 0
 20289                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 20290  0139C8  0E00               	movlw	0
 20291  0139CA  ECDC  F093         	call	_i2c_set_frequency
 20292                           
 20293                           ;i2c.c: 321: _i2c_write(0b01111000, &data_array[0], 2);
 20294  0139CE  0E6B               	movlw	low __ic2_display_set_address@data_array
 20295  0139D0  0100               	movlb	0	; () banked
 20296  0139D2  6F65               	movwf	__i2c_write@data& (0+255),b
 20297  0139D4  0E00               	movlw	high __ic2_display_set_address@data_array
 20298  0139D6  0100               	movlb	0	; () banked
 20299  0139D8  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 20300  0139DA  0E02               	movlw	2
 20301  0139DC  0100               	movlb	0	; () banked
 20302  0139DE  6F67               	movwf	__i2c_write@length& (0+255),b
 20303  0139E0  0E78               	movlw	120
 20304  0139E2  EC8C  F098         	call	__i2c_write
 20305  0139E6  0012               	return		;funcret
 20306  0139E8                     __end_of__ic2_display_set_address:
 20307                           	opt stack 0
 20308                           tblptru	equ	0xFF8
 20309                           tblptrh	equ	0xFF7
 20310                           tblptrl	equ	0xFF6
 20311                           tablat	equ	0xFF5
 20312                           prodh	equ	0xFF4
 20313                           prodl	equ	0xFF3
 20314                           intcon	equ	0xFF2
 20315                           intcon2	equ	0xFF1
 20316                           intcon3	equ	0xFF0
 20317                           postinc0	equ	0xFEE
 20318                           wreg	equ	0xFE8
 20319                           indf1	equ	0xFE7
 20320                           postinc1	equ	0xFE6
 20321                           postdec1	equ	0xFE5
 20322                           plusw1	equ	0xFE3
 20323                           fsr1h	equ	0xFE2
 20324                           fsr1l	equ	0xFE1
 20325                           indf2	equ	0xFDF
 20326                           postinc2	equ	0xFDE
 20327                           postdec2	equ	0xFDD
 20328                           plusw2	equ	0xFDB
 20329                           fsr2h	equ	0xFDA
 20330                           fsr2l	equ	0xFD9
 20331                           status	equ	0xFD8
 20332                           
 20333 ;; *************** function _display_prepare *****************
 20334 ;; Defined at:
 20335 ;;		line 108 in file "display.c"
 20336 ;; Parameters:    Size  Location     Type
 20337 ;;  mode            1    wreg     unsigned char 
 20338 ;; Auto vars:     Size  Location     Type
 20339 ;;  mode            1  116[BANK0 ] unsigned char 
 20340 ;; Return value:  Size  Location     Type
 20341 ;;                  1    wreg      void 
 20342 ;; Registers used:
 20343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20344 ;; Tracked objects:
 20345 ;;		On entry : 0/0
 20346 ;;		On exit  : 0/0
 20347 ;;		Unchanged: 0/0
 20348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20352 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20353 ;;Total ram usage:        3 bytes
 20354 ;; Hardware stack levels used:    1
 20355 ;; Hardware stack levels required when called:   15
 20356 ;; This function calls:
 20357 ;;		__display_charger
 20358 ;;		__display_clear
 20359 ;;		__display_efficiency
 20360 ;;		__display_inout
 20361 ;;		__display_outputs
 20362 ;;		__display_temperature
 20363 ;;		__display_time
 20364 ;;		__display_usb
 20365 ;; This function is called by:
 20366 ;;		_main
 20367 ;; This function uses a non-reentrant model
 20368 ;;
 20369                           
 20370                           	psect	text98
 20371  011E72                     __ptext98:
 20372                           	opt stack 0
 20373  011E72                     _display_prepare:
 20374                           	opt stack 15
 20375                           
 20376                           ;incstack = 0
 20377                           ;display_prepare@mode stored from wreg
 20378  011E72  0100               	movlb	0	; () banked
 20379  011E74  6FD4               	movwf	display_prepare@mode& (0+255),b
 20380                           
 20381                           ;display.c: 110: _display_clear();
 20382  011E76  EC21  F096         	call	__display_clear	;wreg free
 20383                           
 20384                           ;display.c: 112: switch(mode&0xF0)
 20385  011E7A  D01C               	goto	l22609
 20386  011E7C                     l22593:
 20387                           
 20388                           ;display.c: 115: _display_inout();
 20389  011E7C  EC3C  F06A         	call	__display_inout	;wreg free
 20390                           
 20391                           ;display.c: 116: break;
 20392  011E80  0012               	return	
 20393  011E82                     l22595:
 20394                           
 20395                           ;display.c: 118: _display_time(mode);
 20396  011E82  0100               	movlb	0	; () banked
 20397  011E84  51D4               	movf	display_prepare@mode& (0+255),w,b
 20398  011E86  EC33  F04A         	call	__display_time
 20399                           
 20400                           ;display.c: 119: break;
 20401  011E8A  0012               	return	
 20402  011E8C                     l22597:
 20403                           
 20404                           ;display.c: 121: _display_usb();
 20405  011E8C  EC28  F06F         	call	__display_usb	;wreg free
 20406                           
 20407                           ;display.c: 122: break;
 20408  011E90  0012               	return	
 20409  011E92                     l22599:
 20410                           
 20411                           ;display.c: 124: _display_outputs(mode);
 20412  011E92  0100               	movlb	0	; () banked
 20413  011E94  51D4               	movf	display_prepare@mode& (0+255),w,b
 20414  011E96  EC10  F069         	call	__display_outputs
 20415                           
 20416                           ;display.c: 125: break;
 20417  011E9A  0012               	return	
 20418  011E9C                     l22601:
 20419                           
 20420                           ;display.c: 127: _display_charger();
 20421  011E9C  ECBF  F05D         	call	__display_charger	;wreg free
 20422                           
 20423                           ;display.c: 128: break;
 20424  011EA0  0012               	return	
 20425  011EA2                     l22603:
 20426                           
 20427                           ;display.c: 130: _display_efficiency();
 20428  011EA2  EC4B  F05A         	call	__display_efficiency	;wreg free
 20429                           
 20430                           ;display.c: 131: break;
 20431  011EA6  0012               	return	
 20432  011EA8                     l22605:
 20433                           
 20434                           ;display.c: 133: _display_temperature();
 20435  011EA8  EC54  F06C         	call	__display_temperature	;wreg free
 20436                           
 20437                           ;display.c: 134: break;
 20438  011EAC  0012               	return	
 20439  011EAE                     l22607:
 20440                           
 20441                           ;display.c: 136: _display_inout();
 20442  011EAE  EC3C  F06A         	call	__display_inout	;wreg free
 20443                           
 20444                           ;display.c: 137: }
 20445  011EB2  0012               	return	
 20446  011EB4                     l22609:
 20447  011EB4  0100               	movlb	0	; () banked
 20448  011EB6  51D4               	movf	display_prepare@mode& (0+255),w,b
 20449  011EB8  0BF0               	andlw	240
 20450  011EBA  0100               	movlb	0	; () banked
 20451  011EBC  6FD2               	movwf	??_display_prepare& (0+255),b
 20452  011EBE  6BD3               	clrf	(??_display_prepare+1)& (0+255),b
 20453                           
 20454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20455                           ; Switch size 1, requested type "space"
 20456                           ; Number of cases is 1, Range of values is 0 to 0
 20457                           ; switch strategies available:
 20458                           ; Name         Instructions Cycles
 20459                           ; simple_byte            4     3 (average)
 20460                           ;	Chosen strategy is simple_byte
 20461  011EC0  0100               	movlb	0	; () banked
 20462  011EC2  51D3               	movf	(??_display_prepare+1)& (0+255),w,b
 20463  011EC4  0A00               	xorlw	0	; case 0
 20464  011EC6  A4D8               	btfss	status,2,c
 20465  011EC8  D7F2               	goto	l22607
 20466                           
 20467                           ; BSR set to: 0
 20468                           ; Switch size 1, requested type "space"
 20469                           ; Number of cases is 7, Range of values is 0 to 96
 20470                           ; switch strategies available:
 20471                           ; Name         Instructions Cycles
 20472                           ; simple_byte           22    12 (average)
 20473                           ;	Chosen strategy is simple_byte
 20474  011ECA  0100               	movlb	0	; () banked
 20475  011ECC  51D2               	movf	??_display_prepare& (0+255),w,b
 20476  011ECE  0A00               	xorlw	0	; case 0
 20477  011ED0  B4D8               	btfsc	status,2,c
 20478  011ED2  D7D4               	goto	l22593
 20479  011ED4  0A10               	xorlw	16	; case 16
 20480  011ED6  B4D8               	btfsc	status,2,c
 20481  011ED8  D7D4               	goto	l22595
 20482  011EDA  0A30               	xorlw	48	; case 32
 20483  011EDC  B4D8               	btfsc	status,2,c
 20484  011EDE  D7D6               	goto	l22597
 20485  011EE0  0A10               	xorlw	16	; case 48
 20486  011EE2  B4D8               	btfsc	status,2,c
 20487  011EE4  D7D6               	goto	l22599
 20488  011EE6  0A70               	xorlw	112	; case 64
 20489  011EE8  B4D8               	btfsc	status,2,c
 20490  011EEA  D7D8               	goto	l22601
 20491  011EEC  0A10               	xorlw	16	; case 80
 20492  011EEE  B4D8               	btfsc	status,2,c
 20493  011EF0  D7D8               	goto	l22603
 20494  011EF2  0A30               	xorlw	48	; case 96
 20495  011EF4  B4D8               	btfsc	status,2,c
 20496  011EF6  D7D8               	goto	l22605
 20497  011EF8  D7DA               	goto	l22607
 20498  011EFA                     __end_of_display_prepare:
 20499                           	opt stack 0
 20500                           tblptru	equ	0xFF8
 20501                           tblptrh	equ	0xFF7
 20502                           tblptrl	equ	0xFF6
 20503                           tablat	equ	0xFF5
 20504                           prodh	equ	0xFF4
 20505                           prodl	equ	0xFF3
 20506                           intcon	equ	0xFF2
 20507                           intcon2	equ	0xFF1
 20508                           intcon3	equ	0xFF0
 20509                           postinc0	equ	0xFEE
 20510                           wreg	equ	0xFE8
 20511                           indf1	equ	0xFE7
 20512                           postinc1	equ	0xFE6
 20513                           postdec1	equ	0xFE5
 20514                           plusw1	equ	0xFE3
 20515                           fsr1h	equ	0xFE2
 20516                           fsr1l	equ	0xFE1
 20517                           indf2	equ	0xFDF
 20518                           postinc2	equ	0xFDE
 20519                           postdec2	equ	0xFDD
 20520                           plusw2	equ	0xFDB
 20521                           fsr2h	equ	0xFDA
 20522                           fsr2l	equ	0xFD9
 20523                           status	equ	0xFD8
 20524                           
 20525 ;; *************** function __display_usb *****************
 20526 ;; Defined at:
 20527 ;;		line 303 in file "display.c"
 20528 ;; Parameters:    Size  Location     Type
 20529 ;;		None
 20530 ;; Auto vars:     Size  Location     Type
 20531 ;;  header         20    0[BANK0 ] const unsigned char [20]
 20532 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 20533 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 20534 ;;  low            16   37[BANK0 ] const unsigned char [16]
 20535 ;;  cntr            1   69[BANK0 ] unsigned char 
 20536 ;; Return value:  Size  Location     Type
 20537 ;;                  1    wreg      void 
 20538 ;; Registers used:
 20539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20540 ;; Tracked objects:
 20541 ;;		On entry : 0/0
 20542 ;;		On exit  : 0/0
 20543 ;;		Unchanged: 0/0
 20544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20546 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20548 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20549 ;;Total ram usage:       70 bytes
 20550 ;; Hardware stack levels used:    1
 20551 ;; Hardware stack levels required when called:   10
 20552 ;; This function calls:
 20553 ;;		Nothing
 20554 ;; This function is called by:
 20555 ;;		_display_prepare
 20556 ;; This function uses a non-reentrant model
 20557 ;;
 20558                           
 20559                           	psect	text99
 20560  00DE50                     __ptext99:
 20561                           	opt stack 0
 20562  00DE50                     __display_usb:
 20563                           	opt stack 19
 20564                           
 20565                           ;display.c: 305: uint8_t cntr;
 20566                           ;display.c: 306: const char header[] = "USB Charger Outputs";
 20567                           
 20568                           ;incstack = 0
 20569  00DE50  0E07               	movlw	low __display_usb@F8712
 20570  00DE52  6EF6               	movwf	tblptrl,c
 20571  00DE54                     	if	1	;There is more than 1 active tblptr byte
 20572  00DE54  0E91               	movlw	high __display_usb@F8712
 20573  00DE56  6EF7               	movwf	tblptrh,c
 20574  00DE58                     	endif
 20575  00DE58                     	if	1	;There are 3 active tblptr bytes
 20576  00DE58  0E00               	movlw	low (__display_usb@F8712 shr (0+16))
 20577  00DE5A  6EF8               	movwf	tblptru,c
 20578  00DE5C                     	endif
 20579  00DE5C  EE20  F060         	lfsr	2,__display_usb@header
 20580  00DE60  0E13               	movlw	19
 20581  00DE62                     u20870:
 20582  00DE62  0009               	tblrd		*+
 20583  00DE64  CFF5 FFDE          	movff	tablat,postinc2
 20584  00DE68  06E8               	decf	wreg,f,c
 20585  00DE6A  E2FB               	bc	u20870
 20586                           
 20587                           ;display.c: 307: const char low[] = "Battery too low";
 20588  00DE6C  0E2B               	movlw	low __display_usb@F8714
 20589  00DE6E  6EF6               	movwf	tblptrl,c
 20590  00DE70                     	if	1	;There is more than 1 active tblptr byte
 20591  00DE70  0E92               	movlw	high __display_usb@F8714
 20592  00DE72  6EF7               	movwf	tblptrh,c
 20593  00DE74                     	endif
 20594  00DE74                     	if	1	;There are 3 active tblptr bytes
 20595  00DE74  0E00               	movlw	low (__display_usb@F8714 shr (0+16))
 20596  00DE76  6EF8               	movwf	tblptru,c
 20597  00DE78                     	endif
 20598  00DE78  EE20  F085         	lfsr	2,__display_usb@low
 20599  00DE7C  0E0F               	movlw	15
 20600  00DE7E                     u20880:
 20601  00DE7E  0009               	tblrd		*+
 20602  00DE80  CFF5 FFDE          	movff	tablat,postinc2
 20603  00DE84  06E8               	decf	wreg,f,c
 20604  00DE86  E2FB               	bc	u20880
 20605                           
 20606                           ;display.c: 308: const char usb_on[] = "USB charging on";
 20607  00DE88  0E1B               	movlw	low __display_usb@F8716
 20608  00DE8A  6EF6               	movwf	tblptrl,c
 20609  00DE8C                     	if	1	;There is more than 1 active tblptr byte
 20610  00DE8C  0E92               	movlw	high __display_usb@F8716
 20611  00DE8E  6EF7               	movwf	tblptrh,c
 20612  00DE90                     	endif
 20613  00DE90                     	if	1	;There are 3 active tblptr bytes
 20614  00DE90  0E00               	movlw	low (__display_usb@F8716 shr (0+16))
 20615  00DE92  6EF8               	movwf	tblptru,c
 20616  00DE94                     	endif
 20617  00DE94  EE20  F095         	lfsr	2,__display_usb@usb_on
 20618  00DE98  0E0F               	movlw	15
 20619  00DE9A                     u20890:
 20620  00DE9A  0009               	tblrd		*+
 20621  00DE9C  CFF5 FFDE          	movff	tablat,postinc2
 20622  00DEA0  06E8               	decf	wreg,f,c
 20623  00DEA2  E2FB               	bc	u20890
 20624                           
 20625                           ;display.c: 309: const char usb_off[] = "USB charging off";
 20626  00DEA4  0EEA               	movlw	low __display_usb@F8718
 20627  00DEA6  6EF6               	movwf	tblptrl,c
 20628  00DEA8                     	if	1	;There is more than 1 active tblptr byte
 20629  00DEA8  0E91               	movlw	high __display_usb@F8718
 20630  00DEAA  6EF7               	movwf	tblptrh,c
 20631  00DEAC                     	endif
 20632  00DEAC                     	if	1	;There are 3 active tblptr bytes
 20633  00DEAC  0E00               	movlw	low (__display_usb@F8718 shr (0+16))
 20634  00DEAE  6EF8               	movwf	tblptru,c
 20635  00DEB0                     	endif
 20636  00DEB0  EE20  F074         	lfsr	2,__display_usb@usb_off
 20637  00DEB4  0E10               	movlw	16
 20638  00DEB6                     u20900:
 20639  00DEB6  0009               	tblrd		*+
 20640  00DEB8  CFF5 FFDE          	movff	tablat,postinc2
 20641  00DEBC  06E8               	decf	wreg,f,c
 20642  00DEBE  E2FB               	bc	u20900
 20643                           
 20644                           ;display.c: 312: cntr = 0;
 20645  00DEC0  0E00               	movlw	0
 20646  00DEC2  0100               	movlb	0	; () banked
 20647  00DEC4  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20648                           
 20649                           ;display.c: 313: while(header[cntr])
 20650  00DEC6  D016               	goto	l21393
 20651  00DEC8                     l21389:
 20652                           
 20653                           ; BSR set to: 0
 20654                           ;display.c: 314: display_content[0][cntr] = header[cntr++];
 20655  00DEC8  0100               	movlb	0	; () banked
 20656  00DECA  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20657  00DECC  0D01               	mullw	1
 20658  00DECE  0E60               	movlw	low __display_usb@header
 20659  00DED0  24F3               	addwf	prodl,w,c
 20660  00DED2  6ED9               	movwf	fsr2l,c
 20661  00DED4  0E00               	movlw	high __display_usb@header
 20662  00DED6  20F4               	addwfc	prodh,w,c
 20663  00DED8  6EDA               	movwf	fsr2h,c
 20664  00DEDA  0100               	movlb	0	; () banked
 20665  00DEDC  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20666  00DEDE  0D01               	mullw	1
 20667  00DEE0  0E54               	movlw	low _display_content
 20668  00DEE2  24F3               	addwf	prodl,w,c
 20669  00DEE4  6EE1               	movwf	fsr1l,c
 20670  00DEE6  0E03               	movlw	high _display_content
 20671  00DEE8  20F4               	addwfc	prodh,w,c
 20672  00DEEA  6EE2               	movwf	fsr1h,c
 20673  00DEEC  CFDF FFE7          	movff	indf2,indf1
 20674                           
 20675                           ; BSR set to: 0
 20676  00DEF0  0100               	movlb	0	; () banked
 20677  00DEF2  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20678  00DEF4                     l21393:
 20679                           
 20680                           ; BSR set to: 0
 20681  00DEF4  0100               	movlb	0	; () banked
 20682  00DEF6  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20683  00DEF8  0D01               	mullw	1
 20684  00DEFA  0E60               	movlw	low __display_usb@header
 20685  00DEFC  24F3               	addwf	prodl,w,c
 20686  00DEFE  6ED9               	movwf	fsr2l,c
 20687  00DF00  0E00               	movlw	high __display_usb@header
 20688  00DF02  20F4               	addwfc	prodh,w,c
 20689  00DF04  6EDA               	movwf	fsr2h,c
 20690  00DF06  50DF               	movf	indf2,w,c
 20691  00DF08  A4D8               	btfss	status,2,c
 20692  00DF0A  D7DE               	goto	l21389
 20693                           
 20694                           ; BSR set to: 0
 20695                           ;display.c: 316: if(os.output_voltage<12000)
 20696                           
 20697                           ; BSR set to: 0
 20698  00DF0C  0102               	movlb	2	; () banked
 20699  00DF0E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 20700  00DF10  D008               	goto	l21397
 20701  00DF12  0EE0               	movlw	224
 20702  00DF14  0102               	movlb	2	; () banked
 20703  00DF16  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 20704  00DF18  0E2E               	movlw	46
 20705  00DF1A  0102               	movlb	2	; () banked
 20706  00DF1C  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 20707  00DF1E  B0D8               	btfsc	status,0,c
 20708  00DF20  D026               	goto	l21405
 20709  00DF22                     l21397:
 20710                           
 20711                           ; BSR set to: 2
 20712                           ;display.c: 317: {
 20713                           ;display.c: 318: cntr = 0;
 20714  00DF22  0E00               	movlw	0
 20715  00DF24  0100               	movlb	0	; () banked
 20716  00DF26  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20717                           
 20718                           ;display.c: 319: while(low[cntr])
 20719  00DF28  D016               	goto	l21403
 20720  00DF2A                     l21399:
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;display.c: 320: display_content[2][cntr] = low[cntr++];
 20724  00DF2A  0100               	movlb	0	; () banked
 20725  00DF2C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20726  00DF2E  0D01               	mullw	1
 20727  00DF30  0E85               	movlw	low __display_usb@low
 20728  00DF32  24F3               	addwf	prodl,w,c
 20729  00DF34  6ED9               	movwf	fsr2l,c
 20730  00DF36  0E00               	movlw	high __display_usb@low
 20731  00DF38  20F4               	addwfc	prodh,w,c
 20732  00DF3A  6EDA               	movwf	fsr2h,c
 20733  00DF3C  0100               	movlb	0	; () banked
 20734  00DF3E  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20735  00DF40  0D01               	mullw	1
 20736  00DF42  0E7C               	movlw	low (_display_content+40)
 20737  00DF44  24F3               	addwf	prodl,w,c
 20738  00DF46  6EE1               	movwf	fsr1l,c
 20739  00DF48  0E03               	movlw	high (_display_content+40)
 20740  00DF4A  20F4               	addwfc	prodh,w,c
 20741  00DF4C  6EE2               	movwf	fsr1h,c
 20742  00DF4E  CFDF FFE7          	movff	indf2,indf1
 20743                           
 20744                           ; BSR set to: 0
 20745  00DF52  0100               	movlb	0	; () banked
 20746  00DF54  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20747  00DF56                     l21403:
 20748                           
 20749                           ; BSR set to: 0
 20750  00DF56  0100               	movlb	0	; () banked
 20751  00DF58  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20752  00DF5A  0D01               	mullw	1
 20753  00DF5C  0E85               	movlw	low __display_usb@low
 20754  00DF5E  24F3               	addwf	prodl,w,c
 20755  00DF60  6ED9               	movwf	fsr2l,c
 20756  00DF62  0E00               	movlw	high __display_usb@low
 20757  00DF64  20F4               	addwfc	prodh,w,c
 20758  00DF66  6EDA               	movwf	fsr2h,c
 20759  00DF68  50DF               	movf	indf2,w,c
 20760  00DF6A  A4D8               	btfss	status,2,c
 20761  00DF6C  D7DE               	goto	l21399
 20762  00DF6E                     l21405:
 20763                           
 20764                           ;display.c: 321: }
 20765                           ;display.c: 323: cntr = 0;
 20766  00DF6E  0E00               	movlw	0
 20767  00DF70  0100               	movlb	0	; () banked
 20768  00DF72  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20769                           
 20770                           ; BSR set to: 0
 20771                           ;display.c: 324: if(LATDbits.LD3)
 20772  00DF74  B68C               	btfsc	3980,3,c	;volatile
 20773  00DF76  D017               	goto	l21415
 20774  00DF78  D039               	goto	l21421
 20775  00DF7A                     l21411:
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;display.c: 327: display_content[3][cntr] = usb_on[cntr++];
 20779  00DF7A  0100               	movlb	0	; () banked
 20780  00DF7C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20781  00DF7E  0D01               	mullw	1
 20782  00DF80  0E95               	movlw	low __display_usb@usb_on
 20783  00DF82  24F3               	addwf	prodl,w,c
 20784  00DF84  6ED9               	movwf	fsr2l,c
 20785  00DF86  0E00               	movlw	high __display_usb@usb_on
 20786  00DF88  20F4               	addwfc	prodh,w,c
 20787  00DF8A  6EDA               	movwf	fsr2h,c
 20788  00DF8C  0100               	movlb	0	; () banked
 20789  00DF8E  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20790  00DF90  0D01               	mullw	1
 20791  00DF92  0E90               	movlw	low (_display_content+60)
 20792  00DF94  24F3               	addwf	prodl,w,c
 20793  00DF96  6EE1               	movwf	fsr1l,c
 20794  00DF98  0E03               	movlw	high (_display_content+60)
 20795  00DF9A  20F4               	addwfc	prodh,w,c
 20796  00DF9C  6EE2               	movwf	fsr1h,c
 20797  00DF9E  CFDF FFE7          	movff	indf2,indf1
 20798                           
 20799                           ; BSR set to: 0
 20800  00DFA2  0100               	movlb	0	; () banked
 20801  00DFA4  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20802  00DFA6                     l21415:
 20803                           
 20804                           ; BSR set to: 0
 20805  00DFA6  0100               	movlb	0	; () banked
 20806  00DFA8  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20807  00DFAA  0D01               	mullw	1
 20808  00DFAC  0E95               	movlw	low __display_usb@usb_on
 20809  00DFAE  24F3               	addwf	prodl,w,c
 20810  00DFB0  6ED9               	movwf	fsr2l,c
 20811  00DFB2  0E00               	movlw	high __display_usb@usb_on
 20812  00DFB4  20F4               	addwfc	prodh,w,c
 20813  00DFB6  6EDA               	movwf	fsr2h,c
 20814  00DFB8  50DF               	movf	indf2,w,c
 20815  00DFBA  B4D8               	btfsc	status,2,c
 20816  00DFBC  0012               	return	
 20817  00DFBE  D7DD               	goto	l21411
 20818  00DFC0                     l21417:
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;display.c: 332: display_content[3][cntr] = usb_off[cntr++];
 20822  00DFC0  0100               	movlb	0	; () banked
 20823  00DFC2  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20824  00DFC4  0D01               	mullw	1
 20825  00DFC6  0E74               	movlw	low __display_usb@usb_off
 20826  00DFC8  24F3               	addwf	prodl,w,c
 20827  00DFCA  6ED9               	movwf	fsr2l,c
 20828  00DFCC  0E00               	movlw	high __display_usb@usb_off
 20829  00DFCE  20F4               	addwfc	prodh,w,c
 20830  00DFD0  6EDA               	movwf	fsr2h,c
 20831  00DFD2  0100               	movlb	0	; () banked
 20832  00DFD4  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20833  00DFD6  0D01               	mullw	1
 20834  00DFD8  0E90               	movlw	low (_display_content+60)
 20835  00DFDA  24F3               	addwf	prodl,w,c
 20836  00DFDC  6EE1               	movwf	fsr1l,c
 20837  00DFDE  0E03               	movlw	high (_display_content+60)
 20838  00DFE0  20F4               	addwfc	prodh,w,c
 20839  00DFE2  6EE2               	movwf	fsr1h,c
 20840  00DFE4  CFDF FFE7          	movff	indf2,indf1
 20841                           
 20842                           ; BSR set to: 0
 20843  00DFE8  0100               	movlb	0	; () banked
 20844  00DFEA  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20845  00DFEC                     l21421:
 20846                           
 20847                           ; BSR set to: 0
 20848  00DFEC  0100               	movlb	0	; () banked
 20849  00DFEE  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20850  00DFF0  0D01               	mullw	1
 20851  00DFF2  0E74               	movlw	low __display_usb@usb_off
 20852  00DFF4  24F3               	addwf	prodl,w,c
 20853  00DFF6  6ED9               	movwf	fsr2l,c
 20854  00DFF8  0E00               	movlw	high __display_usb@usb_off
 20855  00DFFA  20F4               	addwfc	prodh,w,c
 20856  00DFFC  6EDA               	movwf	fsr2h,c
 20857  00DFFE  50DF               	movf	indf2,w,c
 20858  00E000  B4D8               	btfsc	status,2,c
 20859  00E002  0012               	return	
 20860  00E004  D7DD               	goto	l21417
 20861  00E006                     __end_of__display_usb:
 20862                           	opt stack 0
 20863                           tblptru	equ	0xFF8
 20864                           tblptrh	equ	0xFF7
 20865                           tblptrl	equ	0xFF6
 20866                           tablat	equ	0xFF5
 20867                           prodh	equ	0xFF4
 20868                           prodl	equ	0xFF3
 20869                           intcon	equ	0xFF2
 20870                           intcon2	equ	0xFF1
 20871                           intcon3	equ	0xFF0
 20872                           postinc0	equ	0xFEE
 20873                           wreg	equ	0xFE8
 20874                           indf1	equ	0xFE7
 20875                           postinc1	equ	0xFE6
 20876                           postdec1	equ	0xFE5
 20877                           plusw1	equ	0xFE3
 20878                           fsr1h	equ	0xFE2
 20879                           fsr1l	equ	0xFE1
 20880                           indf2	equ	0xFDF
 20881                           postinc2	equ	0xFDE
 20882                           postdec2	equ	0xFDD
 20883                           plusw2	equ	0xFDB
 20884                           fsr2h	equ	0xFDA
 20885                           fsr2l	equ	0xFD9
 20886                           status	equ	0xFD8
 20887                           
 20888 ;; *************** function __display_time *****************
 20889 ;; Defined at:
 20890 ;;		line 186 in file "display.c"
 20891 ;; Parameters:    Size  Location     Type
 20892 ;;  mode            1    wreg     unsigned char 
 20893 ;; Auto vars:     Size  Location     Type
 20894 ;;  mode            1  203[BANK1 ] unsigned char 
 20895 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 20896 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 20897 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 20898 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 20899 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 20900 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 20901 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 20902 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 20903 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 20904 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 20905 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 20906 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 20907 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 20908 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 20909 ;;  cntr            1  210[BANK1 ] unsigned char 
 20910 ;;  seconds         1  209[BANK1 ] unsigned char 
 20911 ;;  minutes         1  208[BANK1 ] unsigned char 
 20912 ;;  hours           1  207[BANK1 ] unsigned char 
 20913 ;;  day             1  206[BANK1 ] unsigned char 
 20914 ;;  month           1  205[BANK1 ] unsigned char 
 20915 ;;  year            1  204[BANK1 ] unsigned char 
 20916 ;; Return value:  Size  Location     Type
 20917 ;;                  1    wreg      void 
 20918 ;; Registers used:
 20919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20920 ;; Tracked objects:
 20921 ;;		On entry : 0/0
 20922 ;;		On exit  : 0/0
 20923 ;;		Unchanged: 0/0
 20924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20926 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20928 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20929 ;;Total ram usage:      211 bytes
 20930 ;; Hardware stack levels used:    1
 20931 ;; Hardware stack levels required when called:   11
 20932 ;; This function calls:
 20933 ;;		_rtcc_get_day
 20934 ;;		_rtcc_get_hours
 20935 ;;		_rtcc_get_minutes
 20936 ;;		_rtcc_get_month
 20937 ;;		_rtcc_get_seconds
 20938 ;;		_rtcc_get_year
 20939 ;; This function is called by:
 20940 ;;		_display_prepare
 20941 ;; This function uses a non-reentrant model
 20942 ;;
 20943                           
 20944                           	psect	text100
 20945  009466                     __ptext100:
 20946                           	opt stack 0
 20947  009466                     __display_time:
 20948                           	opt stack 18
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;incstack = 0
 20952                           ;__display_time@mode stored from wreg
 20953  009466  0101               	movlb	1	; () banked
 20954  009468  6FCB               	movwf	__display_time@mode& (0+255),b
 20955                           
 20956                           ;display.c: 188: const char tad[] = "Time and Date";
 20957  00946A  0E77               	movlw	low __display_time@F8675
 20958  00946C  6EF6               	movwf	tblptrl,c
 20959  00946E                     	if	1	;There is more than 1 active tblptr byte
 20960  00946E  0E92               	movlw	high __display_time@F8675
 20961  009470  6EF7               	movwf	tblptrh,c
 20962  009472                     	endif
 20963  009472                     	if	1	;There are 3 active tblptr bytes
 20964  009472  0E00               	movlw	low (__display_time@F8675 shr (0+16))
 20965  009474  6EF8               	movwf	tblptru,c
 20966  009476                     	endif
 20967  009476  EE21  F080         	lfsr	2,__display_time@tad
 20968  00947A  0E0D               	movlw	13
 20969  00947C                     u20590:
 20970  00947C  0009               	tblrd		*+
 20971  00947E  CFF5 FFDE          	movff	tablat,postinc2
 20972  009482  06E8               	decf	wreg,f,c
 20973  009484  E2FB               	bc	u20590
 20974                           
 20975                           ;display.c: 189: const char setyear[] = "Set year";
 20976  009486  0EEE               	movlw	low __display_time@F8677
 20977  009488  6EF6               	movwf	tblptrl,c
 20978  00948A                     	if	1	;There is more than 1 active tblptr byte
 20979  00948A  0E92               	movlw	high __display_time@F8677
 20980  00948C  6EF7               	movwf	tblptrh,c
 20981  00948E                     	endif
 20982  00948E                     	if	1	;There are 3 active tblptr bytes
 20983  00948E  0E00               	movlw	low (__display_time@F8677 shr (0+16))
 20984  009490  6EF8               	movwf	tblptru,c
 20985  009492                     	endif
 20986  009492  EE21  F0BA         	lfsr	2,__display_time@setyear
 20987  009496  0E08               	movlw	8
 20988  009498                     u20600:
 20989  009498  0009               	tblrd		*+
 20990  00949A  CFF5 FFDE          	movff	tablat,postinc2
 20991  00949E  06E8               	decf	wreg,f,c
 20992  0094A0  E2FB               	bc	u20600
 20993                           
 20994                           ;display.c: 190: const char setmonth[] = "Set month";
 20995  0094A2  0EE4               	movlw	low __display_time@F8679
 20996  0094A4  6EF6               	movwf	tblptrl,c
 20997  0094A6                     	if	1	;There is more than 1 active tblptr byte
 20998  0094A6  0E92               	movlw	high __display_time@F8679
 20999  0094A8  6EF7               	movwf	tblptrh,c
 21000  0094AA                     	endif
 21001  0094AA                     	if	1	;There are 3 active tblptr bytes
 21002  0094AA  0E00               	movlw	low (__display_time@F8679 shr (0+16))
 21003  0094AC  6EF8               	movwf	tblptru,c
 21004  0094AE                     	endif
 21005  0094AE  EE21  F0A6         	lfsr	2,__display_time@setmonth
 21006  0094B2  0E09               	movlw	9
 21007  0094B4                     u20610:
 21008  0094B4  0009               	tblrd		*+
 21009  0094B6  CFF5 FFDE          	movff	tablat,postinc2
 21010  0094BA  06E8               	decf	wreg,f,c
 21011  0094BC  E2FB               	bc	u20610
 21012                           
 21013                           ;display.c: 191: const char setday[] = "Set day";
 21014  0094BE  0EFF               	movlw	low __display_time@F8681
 21015  0094C0  6EF6               	movwf	tblptrl,c
 21016  0094C2                     	if	1	;There is more than 1 active tblptr byte
 21017  0094C2  0E92               	movlw	high __display_time@F8681
 21018  0094C4  6EF7               	movwf	tblptrh,c
 21019  0094C6                     	endif
 21020  0094C6                     	if	1	;There are 3 active tblptr bytes
 21021  0094C6  0E00               	movlw	low (__display_time@F8681 shr (0+16))
 21022  0094C8  6EF8               	movwf	tblptru,c
 21023  0094CA                     	endif
 21024  0094CA  EE21  F0C3         	lfsr	2,__display_time@setday
 21025  0094CE  0E07               	movlw	7
 21026  0094D0                     u20620:
 21027  0094D0  0009               	tblrd		*+
 21028  0094D2  CFF5 FFDE          	movff	tablat,postinc2
 21029  0094D6  06E8               	decf	wreg,f,c
 21030  0094D8  E2FB               	bc	u20620
 21031                           
 21032                           ;display.c: 192: const char sethours[] = "Set hours";
 21033  0094DA  0EDA               	movlw	low __display_time@F8683
 21034  0094DC  6EF6               	movwf	tblptrl,c
 21035  0094DE                     	if	1	;There is more than 1 active tblptr byte
 21036  0094DE  0E92               	movlw	high __display_time@F8683
 21037  0094E0  6EF7               	movwf	tblptrh,c
 21038  0094E2                     	endif
 21039  0094E2                     	if	1	;There are 3 active tblptr bytes
 21040  0094E2  0E00               	movlw	low (__display_time@F8683 shr (0+16))
 21041  0094E4  6EF8               	movwf	tblptru,c
 21042  0094E6                     	endif
 21043  0094E6  EE21  F0B0         	lfsr	2,__display_time@sethours
 21044  0094EA  0E09               	movlw	9
 21045  0094EC                     u20630:
 21046  0094EC  0009               	tblrd		*+
 21047  0094EE  CFF5 FFDE          	movff	tablat,postinc2
 21048  0094F2  06E8               	decf	wreg,f,c
 21049  0094F4  E2FB               	bc	u20630
 21050                           
 21051                           ;display.c: 193: const char setminutes[] = "Set minutes";
 21052  0094F6  0EC3               	movlw	low __display_time@F8685
 21053  0094F8  6EF6               	movwf	tblptrl,c
 21054  0094FA                     	if	1	;There is more than 1 active tblptr byte
 21055  0094FA  0E92               	movlw	high __display_time@F8685
 21056  0094FC  6EF7               	movwf	tblptrh,c
 21057  0094FE                     	endif
 21058  0094FE                     	if	1	;There are 3 active tblptr bytes
 21059  0094FE  0E00               	movlw	low (__display_time@F8685 shr (0+16))
 21060  009500  6EF8               	movwf	tblptru,c
 21061  009502                     	endif
 21062  009502  EE21  F08E         	lfsr	2,__display_time@setminutes
 21063  009506  0E0B               	movlw	11
 21064  009508                     u20640:
 21065  009508  0009               	tblrd		*+
 21066  00950A  CFF5 FFDE          	movff	tablat,postinc2
 21067  00950E  06E8               	decf	wreg,f,c
 21068  009510  E2FB               	bc	u20640
 21069                           
 21070                           ;display.c: 194: const char setseconds[] = "Set seconds";
 21071  009512  0EB7               	movlw	low __display_time@F8687
 21072  009514  6EF6               	movwf	tblptrl,c
 21073  009516                     	if	1	;There is more than 1 active tblptr byte
 21074  009516  0E92               	movlw	high __display_time@F8687
 21075  009518  6EF7               	movwf	tblptrh,c
 21076  00951A                     	endif
 21077  00951A                     	if	1	;There are 3 active tblptr bytes
 21078  00951A  0E00               	movlw	low (__display_time@F8687 shr (0+16))
 21079  00951C  6EF8               	movwf	tblptru,c
 21080  00951E                     	endif
 21081  00951E  EE21  F09A         	lfsr	2,__display_time@setseconds
 21082  009522  0E0B               	movlw	11
 21083  009524                     u20650:
 21084  009524  0009               	tblrd		*+
 21085  009526  CFF5 FFDE          	movff	tablat,postinc2
 21086  00952A  06E8               	decf	wreg,f,c
 21087  00952C  E2FB               	bc	u20650
 21088                           
 21089                           ;display.c: 195: const char pts[] = "->Press to set time";
 21090  00952E  0E43               	movlw	low __display_time@F8689
 21091  009530  6EF6               	movwf	tblptrl,c
 21092  009532                     	if	1	;There is more than 1 active tblptr byte
 21093  009532  0E91               	movlw	high __display_time@F8689
 21094  009534  6EF7               	movwf	tblptrh,c
 21095  009536                     	endif
 21096  009536                     	if	1	;There are 3 active tblptr bytes
 21097  009536  0E00               	movlw	low (__display_time@F8689 shr (0+16))
 21098  009538  6EF8               	movwf	tblptru,c
 21099  00953A                     	endif
 21100  00953A  EE21  F000         	lfsr	2,__display_time@pts
 21101  00953E  0E13               	movlw	19
 21102  009540                     u20660:
 21103  009540  0009               	tblrd		*+
 21104  009542  CFF5 FFDE          	movff	tablat,postinc2
 21105  009546  06E8               	decf	wreg,f,c
 21106  009548  E2FB               	bc	u20660
 21107                           
 21108                           ;display.c: 196: const char pressmonth[] = "->Press for month";
 21109  00954A  0EB4               	movlw	low __display_time@F8691
 21110  00954C  6EF6               	movwf	tblptrl,c
 21111  00954E                     	if	1	;There is more than 1 active tblptr byte
 21112  00954E  0E91               	movlw	high __display_time@F8691
 21113  009550  6EF7               	movwf	tblptrh,c
 21114  009552                     	endif
 21115  009552                     	if	1	;There are 3 active tblptr bytes
 21116  009552  0E00               	movlw	low (__display_time@F8691 shr (0+16))
 21117  009554  6EF8               	movwf	tblptru,c
 21118  009556                     	endif
 21119  009556  EE21  F03C         	lfsr	2,__display_time@pressmonth
 21120  00955A  0E11               	movlw	17
 21121  00955C                     u20670:
 21122  00955C  0009               	tblrd		*+
 21123  00955E  CFF5 FFDE          	movff	tablat,postinc2
 21124  009562  06E8               	decf	wreg,f,c
 21125  009564  E2FB               	bc	u20670
 21126                           
 21127                           ;display.c: 197: const char pressday[] = "->Press for day";
 21128  009566  0E4B               	movlw	low __display_time@F8693
 21129  009568  6EF6               	movwf	tblptrl,c
 21130  00956A                     	if	1	;There is more than 1 active tblptr byte
 21131  00956A  0E92               	movlw	high __display_time@F8693
 21132  00956C  6EF7               	movwf	tblptrh,c
 21133  00956E                     	endif
 21134  00956E                     	if	1	;There are 3 active tblptr bytes
 21135  00956E  0E00               	movlw	low (__display_time@F8693 shr (0+16))
 21136  009570  6EF8               	movwf	tblptru,c
 21137  009572                     	endif
 21138  009572  EE21  F060         	lfsr	2,__display_time@pressday
 21139  009576  0E0F               	movlw	15
 21140  009578                     u20680:
 21141  009578  0009               	tblrd		*+
 21142  00957A  CFF5 FFDE          	movff	tablat,postinc2
 21143  00957E  06E8               	decf	wreg,f,c
 21144  009580  E2FB               	bc	u20680
 21145                           
 21146                           ;display.c: 198: const char presshours[] = "->Press for hours";
 21147  009582  0EA2               	movlw	low __display_time@F8695
 21148  009584  6EF6               	movwf	tblptrl,c
 21149  009586                     	if	1	;There is more than 1 active tblptr byte
 21150  009586  0E91               	movlw	high __display_time@F8695
 21151  009588  6EF7               	movwf	tblptrh,c
 21152  00958A                     	endif
 21153  00958A                     	if	1	;There are 3 active tblptr bytes
 21154  00958A  0E00               	movlw	low (__display_time@F8695 shr (0+16))
 21155  00958C  6EF8               	movwf	tblptru,c
 21156  00958E                     	endif
 21157  00958E  EE21  F04E         	lfsr	2,__display_time@presshours
 21158  009592  0E11               	movlw	17
 21159  009594                     u20690:
 21160  009594  0009               	tblrd		*+
 21161  009596  CFF5 FFDE          	movff	tablat,postinc2
 21162  00959A  06E8               	decf	wreg,f,c
 21163  00959C  E2FB               	bc	u20690
 21164                           
 21165                           ;display.c: 199: const char pressminutes[] = "->Press for minutes";
 21166  00959E  0E2F               	movlw	low __display_time@F8697
 21167  0095A0  6EF6               	movwf	tblptrl,c
 21168  0095A2                     	if	1	;There is more than 1 active tblptr byte
 21169  0095A2  0E91               	movlw	high __display_time@F8697
 21170  0095A4  6EF7               	movwf	tblptrh,c
 21171  0095A6                     	endif
 21172  0095A6                     	if	1	;There are 3 active tblptr bytes
 21173  0095A6  0E00               	movlw	low (__display_time@F8697 shr (0+16))
 21174  0095A8  6EF8               	movwf	tblptru,c
 21175  0095AA                     	endif
 21176  0095AA  EE21  F014         	lfsr	2,__display_time@pressminutes
 21177  0095AE  0E13               	movlw	19
 21178  0095B0                     u20700:
 21179  0095B0  0009               	tblrd		*+
 21180  0095B2  CFF5 FFDE          	movff	tablat,postinc2
 21181  0095B6  06E8               	decf	wreg,f,c
 21182  0095B8  E2FB               	bc	u20700
 21183                           
 21184                           ;display.c: 200: const char pressseconds[] = "->Press for seconds";
 21185  0095BA  0E1B               	movlw	low __display_time@F8699
 21186  0095BC  6EF6               	movwf	tblptrl,c
 21187  0095BE                     	if	1	;There is more than 1 active tblptr byte
 21188  0095BE  0E91               	movlw	high __display_time@F8699
 21189  0095C0  6EF7               	movwf	tblptrh,c
 21190  0095C2                     	endif
 21191  0095C2                     	if	1	;There are 3 active tblptr bytes
 21192  0095C2  0E00               	movlw	low (__display_time@F8699 shr (0+16))
 21193  0095C4  6EF8               	movwf	tblptru,c
 21194  0095C6                     	endif
 21195  0095C6  EE21  F028         	lfsr	2,__display_time@pressseconds
 21196  0095CA  0E13               	movlw	19
 21197  0095CC                     u20710:
 21198  0095CC  0009               	tblrd		*+
 21199  0095CE  CFF5 FFDE          	movff	tablat,postinc2
 21200  0095D2  06E8               	decf	wreg,f,c
 21201  0095D4  E2FB               	bc	u20710
 21202                           
 21203                           ;display.c: 201: const char presssave[] = "->Press to save";
 21204  0095D6  0E3B               	movlw	low __display_time@F8701
 21205  0095D8  6EF6               	movwf	tblptrl,c
 21206  0095DA                     	if	1	;There is more than 1 active tblptr byte
 21207  0095DA  0E92               	movlw	high __display_time@F8701
 21208  0095DC  6EF7               	movwf	tblptrh,c
 21209  0095DE                     	endif
 21210  0095DE                     	if	1	;There are 3 active tblptr bytes
 21211  0095DE  0E00               	movlw	low (__display_time@F8701 shr (0+16))
 21212  0095E0  6EF8               	movwf	tblptru,c
 21213  0095E2                     	endif
 21214  0095E2  EE21  F070         	lfsr	2,__display_time@presssave
 21215  0095E6  0E0F               	movlw	15
 21216  0095E8                     u20720:
 21217  0095E8  0009               	tblrd		*+
 21218  0095EA  CFF5 FFDE          	movff	tablat,postinc2
 21219  0095EE  06E8               	decf	wreg,f,c
 21220  0095F0  E2FB               	bc	u20720
 21221                           
 21222                           ;display.c: 203: uint8_t cntr;
 21223                           ;display.c: 204: uint8_t year = rtcc_get_year();
 21224  0095F2  ECA0  F0A0         	call	_rtcc_get_year	;wreg free
 21225  0095F6  0101               	movlb	1	; () banked
 21226  0095F8  6FCC               	movwf	__display_time@year& (0+255),b
 21227                           
 21228                           ; BSR set to: 1
 21229                           ;display.c: 205: uint8_t month = rtcc_get_month();
 21230  0095FA  ECB4  F0A0         	call	_rtcc_get_month	;wreg free
 21231  0095FE  0101               	movlb	1	; () banked
 21232  009600  6FCD               	movwf	__display_time@month& (0+255),b
 21233                           
 21234                           ; BSR set to: 1
 21235                           ;display.c: 206: uint8_t day = rtcc_get_day();
 21236  009602  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
 21237  009606  0101               	movlb	1	; () banked
 21238  009608  6FCE               	movwf	__display_time@day& (0+255),b
 21239                           
 21240                           ; BSR set to: 1
 21241                           ;display.c: 207: uint8_t hours = rtcc_get_hours();
 21242  00960A  ECC8  F0A0         	call	_rtcc_get_hours	;wreg free
 21243  00960E  0101               	movlb	1	; () banked
 21244  009610  6FCF               	movwf	__display_time@hours& (0+255),b
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;display.c: 208: uint8_t minutes = rtcc_get_minutes();
 21248  009612  ECBE  F0A0         	call	_rtcc_get_minutes	;wreg free
 21249  009616  0101               	movlb	1	; () banked
 21250  009618  6FD0               	movwf	__display_time@minutes& (0+255),b
 21251                           
 21252                           ; BSR set to: 1
 21253                           ;display.c: 209: uint8_t seconds = rtcc_get_seconds();
 21254  00961A  ECAA  F0A0         	call	_rtcc_get_seconds	;wreg free
 21255  00961E  0101               	movlb	1	; () banked
 21256  009620  6FD1               	movwf	__display_time@seconds& (0+255),b
 21257                           
 21258                           ;display.c: 211: switch(mode)
 21259  009622  D21B               	goto	l21357
 21260  009624                     l21243:
 21261                           
 21262                           ; BSR set to: 1
 21263                           ;display.c: 214: cntr = 0;
 21264  009624  0E00               	movlw	0
 21265  009626  0101               	movlb	1	; () banked
 21266  009628  6FD2               	movwf	__display_time@cntr& (0+255),b
 21267                           
 21268                           ;display.c: 215: while(tad[cntr])
 21269  00962A  D016               	goto	l21249
 21270  00962C                     l21245:
 21271                           
 21272                           ; BSR set to: 1
 21273                           ;display.c: 216: display_content[0][cntr] = tad[cntr++];
 21274  00962C  0101               	movlb	1	; () banked
 21275  00962E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21276  009630  0D01               	mullw	1
 21277  009632  0E80               	movlw	low __display_time@tad
 21278  009634  24F3               	addwf	prodl,w,c
 21279  009636  6ED9               	movwf	fsr2l,c
 21280  009638  0E01               	movlw	high __display_time@tad
 21281  00963A  20F4               	addwfc	prodh,w,c
 21282  00963C  6EDA               	movwf	fsr2h,c
 21283  00963E  0101               	movlb	1	; () banked
 21284  009640  51D2               	movf	__display_time@cntr& (0+255),w,b
 21285  009642  0D01               	mullw	1
 21286  009644  0E54               	movlw	low _display_content
 21287  009646  24F3               	addwf	prodl,w,c
 21288  009648  6EE1               	movwf	fsr1l,c
 21289  00964A  0E03               	movlw	high _display_content
 21290  00964C  20F4               	addwfc	prodh,w,c
 21291  00964E  6EE2               	movwf	fsr1h,c
 21292  009650  CFDF FFE7          	movff	indf2,indf1
 21293                           
 21294                           ; BSR set to: 1
 21295  009654  0101               	movlb	1	; () banked
 21296  009656  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21297  009658                     l21249:
 21298                           
 21299                           ; BSR set to: 1
 21300  009658  0101               	movlb	1	; () banked
 21301  00965A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21302  00965C  0D01               	mullw	1
 21303  00965E  0E80               	movlw	low __display_time@tad
 21304  009660  24F3               	addwf	prodl,w,c
 21305  009662  6ED9               	movwf	fsr2l,c
 21306  009664  0E01               	movlw	high __display_time@tad
 21307  009666  20F4               	addwfc	prodh,w,c
 21308  009668  6EDA               	movwf	fsr2h,c
 21309  00966A  50DF               	movf	indf2,w,c
 21310  00966C  A4D8               	btfss	status,2,c
 21311  00966E  D7DE               	goto	l21245
 21312                           
 21313                           ; BSR set to: 1
 21314                           ;display.c: 217: cntr = 0;
 21315                           
 21316                           ; BSR set to: 1
 21317  009670  0E00               	movlw	0
 21318  009672  0101               	movlb	1	; () banked
 21319  009674  6FD2               	movwf	__display_time@cntr& (0+255),b
 21320                           
 21321                           ;display.c: 218: while(pts[cntr])
 21322  009676  D016               	goto	l21257
 21323  009678                     l21253:
 21324                           
 21325                           ; BSR set to: 1
 21326                           ;display.c: 219: display_content[3][cntr] = pts[cntr++];
 21327  009678  0101               	movlb	1	; () banked
 21328  00967A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21329  00967C  0D01               	mullw	1
 21330  00967E  0E00               	movlw	low __display_time@pts
 21331  009680  24F3               	addwf	prodl,w,c
 21332  009682  6ED9               	movwf	fsr2l,c
 21333  009684  0E01               	movlw	high __display_time@pts
 21334  009686  20F4               	addwfc	prodh,w,c
 21335  009688  6EDA               	movwf	fsr2h,c
 21336  00968A  0101               	movlb	1	; () banked
 21337  00968C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21338  00968E  0D01               	mullw	1
 21339  009690  0E90               	movlw	low (_display_content+60)
 21340  009692  24F3               	addwf	prodl,w,c
 21341  009694  6EE1               	movwf	fsr1l,c
 21342  009696  0E03               	movlw	high (_display_content+60)
 21343  009698  20F4               	addwfc	prodh,w,c
 21344  00969A  6EE2               	movwf	fsr1h,c
 21345  00969C  CFDF FFE7          	movff	indf2,indf1
 21346                           
 21347                           ; BSR set to: 1
 21348  0096A0  0101               	movlb	1	; () banked
 21349  0096A2  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21350  0096A4                     l21257:
 21351                           
 21352                           ; BSR set to: 1
 21353  0096A4  0101               	movlb	1	; () banked
 21354  0096A6  51D2               	movf	__display_time@cntr& (0+255),w,b
 21355  0096A8  0D01               	mullw	1
 21356  0096AA  0E00               	movlw	low __display_time@pts
 21357  0096AC  24F3               	addwf	prodl,w,c
 21358  0096AE  6ED9               	movwf	fsr2l,c
 21359  0096B0  0E01               	movlw	high __display_time@pts
 21360  0096B2  20F4               	addwfc	prodh,w,c
 21361  0096B4  6EDA               	movwf	fsr2h,c
 21362  0096B6  50DF               	movf	indf2,w,c
 21363  0096B8  B4D8               	btfsc	status,2,c
 21364  0096BA  D1E6               	goto	l21359
 21365  0096BC  D7DD               	goto	l21253
 21366  0096BE                     l21259:
 21367                           
 21368                           ; BSR set to: 1
 21369                           ;display.c: 223: cntr = 0;
 21370  0096BE  0E00               	movlw	0
 21371  0096C0  0101               	movlb	1	; () banked
 21372  0096C2  6FD2               	movwf	__display_time@cntr& (0+255),b
 21373                           
 21374                           ;display.c: 224: while(setyear[cntr])
 21375  0096C4  D016               	goto	l21265
 21376  0096C6                     l21261:
 21377                           
 21378                           ; BSR set to: 1
 21379                           ;display.c: 225: display_content[0][cntr] = setyear[cntr++];
 21380  0096C6  0101               	movlb	1	; () banked
 21381  0096C8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21382  0096CA  0D01               	mullw	1
 21383  0096CC  0EBA               	movlw	low __display_time@setyear
 21384  0096CE  24F3               	addwf	prodl,w,c
 21385  0096D0  6ED9               	movwf	fsr2l,c
 21386  0096D2  0E01               	movlw	high __display_time@setyear
 21387  0096D4  20F4               	addwfc	prodh,w,c
 21388  0096D6  6EDA               	movwf	fsr2h,c
 21389  0096D8  0101               	movlb	1	; () banked
 21390  0096DA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21391  0096DC  0D01               	mullw	1
 21392  0096DE  0E54               	movlw	low _display_content
 21393  0096E0  24F3               	addwf	prodl,w,c
 21394  0096E2  6EE1               	movwf	fsr1l,c
 21395  0096E4  0E03               	movlw	high _display_content
 21396  0096E6  20F4               	addwfc	prodh,w,c
 21397  0096E8  6EE2               	movwf	fsr1h,c
 21398  0096EA  CFDF FFE7          	movff	indf2,indf1
 21399                           
 21400                           ; BSR set to: 1
 21401  0096EE  0101               	movlb	1	; () banked
 21402  0096F0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21403  0096F2                     l21265:
 21404                           
 21405                           ; BSR set to: 1
 21406  0096F2  0101               	movlb	1	; () banked
 21407  0096F4  51D2               	movf	__display_time@cntr& (0+255),w,b
 21408  0096F6  0D01               	mullw	1
 21409  0096F8  0EBA               	movlw	low __display_time@setyear
 21410  0096FA  24F3               	addwf	prodl,w,c
 21411  0096FC  6ED9               	movwf	fsr2l,c
 21412  0096FE  0E01               	movlw	high __display_time@setyear
 21413  009700  20F4               	addwfc	prodh,w,c
 21414  009702  6EDA               	movwf	fsr2h,c
 21415  009704  50DF               	movf	indf2,w,c
 21416  009706  A4D8               	btfss	status,2,c
 21417  009708  D7DE               	goto	l21261
 21418                           
 21419                           ; BSR set to: 1
 21420                           ;display.c: 226: cntr = 0;
 21421                           
 21422                           ; BSR set to: 1
 21423  00970A  0E00               	movlw	0
 21424  00970C  0101               	movlb	1	; () banked
 21425  00970E  6FD2               	movwf	__display_time@cntr& (0+255),b
 21426                           
 21427                           ;display.c: 227: while(pressmonth[cntr])
 21428  009710  D016               	goto	l21273
 21429  009712                     l21269:
 21430                           
 21431                           ; BSR set to: 1
 21432                           ;display.c: 228: display_content[3][cntr] = pressmonth[cntr++];
 21433  009712  0101               	movlb	1	; () banked
 21434  009714  51D2               	movf	__display_time@cntr& (0+255),w,b
 21435  009716  0D01               	mullw	1
 21436  009718  0E3C               	movlw	low __display_time@pressmonth
 21437  00971A  24F3               	addwf	prodl,w,c
 21438  00971C  6ED9               	movwf	fsr2l,c
 21439  00971E  0E01               	movlw	high __display_time@pressmonth
 21440  009720  20F4               	addwfc	prodh,w,c
 21441  009722  6EDA               	movwf	fsr2h,c
 21442  009724  0101               	movlb	1	; () banked
 21443  009726  51D2               	movf	__display_time@cntr& (0+255),w,b
 21444  009728  0D01               	mullw	1
 21445  00972A  0E90               	movlw	low (_display_content+60)
 21446  00972C  24F3               	addwf	prodl,w,c
 21447  00972E  6EE1               	movwf	fsr1l,c
 21448  009730  0E03               	movlw	high (_display_content+60)
 21449  009732  20F4               	addwfc	prodh,w,c
 21450  009734  6EE2               	movwf	fsr1h,c
 21451  009736  CFDF FFE7          	movff	indf2,indf1
 21452                           
 21453                           ; BSR set to: 1
 21454  00973A  0101               	movlb	1	; () banked
 21455  00973C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21456  00973E                     l21273:
 21457                           
 21458                           ; BSR set to: 1
 21459  00973E  0101               	movlb	1	; () banked
 21460  009740  51D2               	movf	__display_time@cntr& (0+255),w,b
 21461  009742  0D01               	mullw	1
 21462  009744  0E3C               	movlw	low __display_time@pressmonth
 21463  009746  24F3               	addwf	prodl,w,c
 21464  009748  6ED9               	movwf	fsr2l,c
 21465  00974A  0E01               	movlw	high __display_time@pressmonth
 21466  00974C  20F4               	addwfc	prodh,w,c
 21467  00974E  6EDA               	movwf	fsr2h,c
 21468  009750  50DF               	movf	indf2,w,c
 21469  009752  B4D8               	btfsc	status,2,c
 21470  009754  D199               	goto	l21359
 21471  009756  D7DD               	goto	l21269
 21472  009758                     l21275:
 21473                           
 21474                           ; BSR set to: 1
 21475                           ;display.c: 232: cntr = 0;
 21476  009758  0E00               	movlw	0
 21477  00975A  0101               	movlb	1	; () banked
 21478  00975C  6FD2               	movwf	__display_time@cntr& (0+255),b
 21479                           
 21480                           ;display.c: 233: while(setmonth[cntr])
 21481  00975E  D016               	goto	l21281
 21482  009760                     l21277:
 21483                           
 21484                           ; BSR set to: 1
 21485                           ;display.c: 234: display_content[0][cntr] = setmonth[cntr++];
 21486  009760  0101               	movlb	1	; () banked
 21487  009762  51D2               	movf	__display_time@cntr& (0+255),w,b
 21488  009764  0D01               	mullw	1
 21489  009766  0EA6               	movlw	low __display_time@setmonth
 21490  009768  24F3               	addwf	prodl,w,c
 21491  00976A  6ED9               	movwf	fsr2l,c
 21492  00976C  0E01               	movlw	high __display_time@setmonth
 21493  00976E  20F4               	addwfc	prodh,w,c
 21494  009770  6EDA               	movwf	fsr2h,c
 21495  009772  0101               	movlb	1	; () banked
 21496  009774  51D2               	movf	__display_time@cntr& (0+255),w,b
 21497  009776  0D01               	mullw	1
 21498  009778  0E54               	movlw	low _display_content
 21499  00977A  24F3               	addwf	prodl,w,c
 21500  00977C  6EE1               	movwf	fsr1l,c
 21501  00977E  0E03               	movlw	high _display_content
 21502  009780  20F4               	addwfc	prodh,w,c
 21503  009782  6EE2               	movwf	fsr1h,c
 21504  009784  CFDF FFE7          	movff	indf2,indf1
 21505                           
 21506                           ; BSR set to: 1
 21507  009788  0101               	movlb	1	; () banked
 21508  00978A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21509  00978C                     l21281:
 21510                           
 21511                           ; BSR set to: 1
 21512  00978C  0101               	movlb	1	; () banked
 21513  00978E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21514  009790  0D01               	mullw	1
 21515  009792  0EA6               	movlw	low __display_time@setmonth
 21516  009794  24F3               	addwf	prodl,w,c
 21517  009796  6ED9               	movwf	fsr2l,c
 21518  009798  0E01               	movlw	high __display_time@setmonth
 21519  00979A  20F4               	addwfc	prodh,w,c
 21520  00979C  6EDA               	movwf	fsr2h,c
 21521  00979E  50DF               	movf	indf2,w,c
 21522  0097A0  A4D8               	btfss	status,2,c
 21523  0097A2  D7DE               	goto	l21277
 21524                           
 21525                           ; BSR set to: 1
 21526                           ;display.c: 235: cntr = 0;
 21527                           
 21528                           ; BSR set to: 1
 21529  0097A4  0E00               	movlw	0
 21530  0097A6  0101               	movlb	1	; () banked
 21531  0097A8  6FD2               	movwf	__display_time@cntr& (0+255),b
 21532                           
 21533                           ;display.c: 236: while(pressday[cntr])
 21534  0097AA  D016               	goto	l21289
 21535  0097AC                     l21285:
 21536                           
 21537                           ; BSR set to: 1
 21538                           ;display.c: 237: display_content[3][cntr] = pressday[cntr++];
 21539  0097AC  0101               	movlb	1	; () banked
 21540  0097AE  51D2               	movf	__display_time@cntr& (0+255),w,b
 21541  0097B0  0D01               	mullw	1
 21542  0097B2  0E60               	movlw	low __display_time@pressday
 21543  0097B4  24F3               	addwf	prodl,w,c
 21544  0097B6  6ED9               	movwf	fsr2l,c
 21545  0097B8  0E01               	movlw	high __display_time@pressday
 21546  0097BA  20F4               	addwfc	prodh,w,c
 21547  0097BC  6EDA               	movwf	fsr2h,c
 21548  0097BE  0101               	movlb	1	; () banked
 21549  0097C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 21550  0097C2  0D01               	mullw	1
 21551  0097C4  0E90               	movlw	low (_display_content+60)
 21552  0097C6  24F3               	addwf	prodl,w,c
 21553  0097C8  6EE1               	movwf	fsr1l,c
 21554  0097CA  0E03               	movlw	high (_display_content+60)
 21555  0097CC  20F4               	addwfc	prodh,w,c
 21556  0097CE  6EE2               	movwf	fsr1h,c
 21557  0097D0  CFDF FFE7          	movff	indf2,indf1
 21558                           
 21559                           ; BSR set to: 1
 21560  0097D4  0101               	movlb	1	; () banked
 21561  0097D6  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21562  0097D8                     l21289:
 21563                           
 21564                           ; BSR set to: 1
 21565  0097D8  0101               	movlb	1	; () banked
 21566  0097DA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21567  0097DC  0D01               	mullw	1
 21568  0097DE  0E60               	movlw	low __display_time@pressday
 21569  0097E0  24F3               	addwf	prodl,w,c
 21570  0097E2  6ED9               	movwf	fsr2l,c
 21571  0097E4  0E01               	movlw	high __display_time@pressday
 21572  0097E6  20F4               	addwfc	prodh,w,c
 21573  0097E8  6EDA               	movwf	fsr2h,c
 21574  0097EA  50DF               	movf	indf2,w,c
 21575  0097EC  B4D8               	btfsc	status,2,c
 21576  0097EE  D14C               	goto	l21359
 21577  0097F0  D7DD               	goto	l21285
 21578  0097F2                     l21291:
 21579                           
 21580                           ; BSR set to: 1
 21581                           ;display.c: 241: cntr = 0;
 21582  0097F2  0E00               	movlw	0
 21583  0097F4  0101               	movlb	1	; () banked
 21584  0097F6  6FD2               	movwf	__display_time@cntr& (0+255),b
 21585                           
 21586                           ;display.c: 242: while(setday[cntr])
 21587  0097F8  D016               	goto	l21297
 21588  0097FA                     l21293:
 21589                           
 21590                           ; BSR set to: 1
 21591                           ;display.c: 243: display_content[0][cntr] = setday[cntr++];
 21592  0097FA  0101               	movlb	1	; () banked
 21593  0097FC  51D2               	movf	__display_time@cntr& (0+255),w,b
 21594  0097FE  0D01               	mullw	1
 21595  009800  0EC3               	movlw	low __display_time@setday
 21596  009802  24F3               	addwf	prodl,w,c
 21597  009804  6ED9               	movwf	fsr2l,c
 21598  009806  0E01               	movlw	high __display_time@setday
 21599  009808  20F4               	addwfc	prodh,w,c
 21600  00980A  6EDA               	movwf	fsr2h,c
 21601  00980C  0101               	movlb	1	; () banked
 21602  00980E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21603  009810  0D01               	mullw	1
 21604  009812  0E54               	movlw	low _display_content
 21605  009814  24F3               	addwf	prodl,w,c
 21606  009816  6EE1               	movwf	fsr1l,c
 21607  009818  0E03               	movlw	high _display_content
 21608  00981A  20F4               	addwfc	prodh,w,c
 21609  00981C  6EE2               	movwf	fsr1h,c
 21610  00981E  CFDF FFE7          	movff	indf2,indf1
 21611                           
 21612                           ; BSR set to: 1
 21613  009822  0101               	movlb	1	; () banked
 21614  009824  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21615  009826                     l21297:
 21616                           
 21617                           ; BSR set to: 1
 21618  009826  0101               	movlb	1	; () banked
 21619  009828  51D2               	movf	__display_time@cntr& (0+255),w,b
 21620  00982A  0D01               	mullw	1
 21621  00982C  0EC3               	movlw	low __display_time@setday
 21622  00982E  24F3               	addwf	prodl,w,c
 21623  009830  6ED9               	movwf	fsr2l,c
 21624  009832  0E01               	movlw	high __display_time@setday
 21625  009834  20F4               	addwfc	prodh,w,c
 21626  009836  6EDA               	movwf	fsr2h,c
 21627  009838  50DF               	movf	indf2,w,c
 21628  00983A  A4D8               	btfss	status,2,c
 21629  00983C  D7DE               	goto	l21293
 21630                           
 21631                           ; BSR set to: 1
 21632                           ;display.c: 244: cntr = 0;
 21633                           
 21634                           ; BSR set to: 1
 21635  00983E  0E00               	movlw	0
 21636  009840  0101               	movlb	1	; () banked
 21637  009842  6FD2               	movwf	__display_time@cntr& (0+255),b
 21638                           
 21639                           ;display.c: 245: while(presshours[cntr])
 21640  009844  D016               	goto	l21305
 21641  009846                     l21301:
 21642                           
 21643                           ; BSR set to: 1
 21644                           ;display.c: 246: display_content[3][cntr] = presshours[cntr++];
 21645  009846  0101               	movlb	1	; () banked
 21646  009848  51D2               	movf	__display_time@cntr& (0+255),w,b
 21647  00984A  0D01               	mullw	1
 21648  00984C  0E4E               	movlw	low __display_time@presshours
 21649  00984E  24F3               	addwf	prodl,w,c
 21650  009850  6ED9               	movwf	fsr2l,c
 21651  009852  0E01               	movlw	high __display_time@presshours
 21652  009854  20F4               	addwfc	prodh,w,c
 21653  009856  6EDA               	movwf	fsr2h,c
 21654  009858  0101               	movlb	1	; () banked
 21655  00985A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21656  00985C  0D01               	mullw	1
 21657  00985E  0E90               	movlw	low (_display_content+60)
 21658  009860  24F3               	addwf	prodl,w,c
 21659  009862  6EE1               	movwf	fsr1l,c
 21660  009864  0E03               	movlw	high (_display_content+60)
 21661  009866  20F4               	addwfc	prodh,w,c
 21662  009868  6EE2               	movwf	fsr1h,c
 21663  00986A  CFDF FFE7          	movff	indf2,indf1
 21664                           
 21665                           ; BSR set to: 1
 21666  00986E  0101               	movlb	1	; () banked
 21667  009870  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21668  009872                     l21305:
 21669                           
 21670                           ; BSR set to: 1
 21671  009872  0101               	movlb	1	; () banked
 21672  009874  51D2               	movf	__display_time@cntr& (0+255),w,b
 21673  009876  0D01               	mullw	1
 21674  009878  0E4E               	movlw	low __display_time@presshours
 21675  00987A  24F3               	addwf	prodl,w,c
 21676  00987C  6ED9               	movwf	fsr2l,c
 21677  00987E  0E01               	movlw	high __display_time@presshours
 21678  009880  20F4               	addwfc	prodh,w,c
 21679  009882  6EDA               	movwf	fsr2h,c
 21680  009884  50DF               	movf	indf2,w,c
 21681  009886  B4D8               	btfsc	status,2,c
 21682  009888  D0FF               	goto	l21359
 21683  00988A  D7DD               	goto	l21301
 21684  00988C                     l21307:
 21685                           
 21686                           ; BSR set to: 1
 21687                           ;display.c: 250: cntr = 0;
 21688  00988C  0E00               	movlw	0
 21689  00988E  0101               	movlb	1	; () banked
 21690  009890  6FD2               	movwf	__display_time@cntr& (0+255),b
 21691                           
 21692                           ;display.c: 251: while(sethours[cntr])
 21693  009892  D016               	goto	l21313
 21694  009894                     l21309:
 21695                           
 21696                           ; BSR set to: 1
 21697                           ;display.c: 252: display_content[0][cntr] = sethours[cntr++];
 21698  009894  0101               	movlb	1	; () banked
 21699  009896  51D2               	movf	__display_time@cntr& (0+255),w,b
 21700  009898  0D01               	mullw	1
 21701  00989A  0EB0               	movlw	low __display_time@sethours
 21702  00989C  24F3               	addwf	prodl,w,c
 21703  00989E  6ED9               	movwf	fsr2l,c
 21704  0098A0  0E01               	movlw	high __display_time@sethours
 21705  0098A2  20F4               	addwfc	prodh,w,c
 21706  0098A4  6EDA               	movwf	fsr2h,c
 21707  0098A6  0101               	movlb	1	; () banked
 21708  0098A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21709  0098AA  0D01               	mullw	1
 21710  0098AC  0E54               	movlw	low _display_content
 21711  0098AE  24F3               	addwf	prodl,w,c
 21712  0098B0  6EE1               	movwf	fsr1l,c
 21713  0098B2  0E03               	movlw	high _display_content
 21714  0098B4  20F4               	addwfc	prodh,w,c
 21715  0098B6  6EE2               	movwf	fsr1h,c
 21716  0098B8  CFDF FFE7          	movff	indf2,indf1
 21717                           
 21718                           ; BSR set to: 1
 21719  0098BC  0101               	movlb	1	; () banked
 21720  0098BE  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21721  0098C0                     l21313:
 21722                           
 21723                           ; BSR set to: 1
 21724  0098C0  0101               	movlb	1	; () banked
 21725  0098C2  51D2               	movf	__display_time@cntr& (0+255),w,b
 21726  0098C4  0D01               	mullw	1
 21727  0098C6  0EB0               	movlw	low __display_time@sethours
 21728  0098C8  24F3               	addwf	prodl,w,c
 21729  0098CA  6ED9               	movwf	fsr2l,c
 21730  0098CC  0E01               	movlw	high __display_time@sethours
 21731  0098CE  20F4               	addwfc	prodh,w,c
 21732  0098D0  6EDA               	movwf	fsr2h,c
 21733  0098D2  50DF               	movf	indf2,w,c
 21734  0098D4  A4D8               	btfss	status,2,c
 21735  0098D6  D7DE               	goto	l21309
 21736                           
 21737                           ; BSR set to: 1
 21738                           ;display.c: 253: cntr = 0;
 21739                           
 21740                           ; BSR set to: 1
 21741  0098D8  0E00               	movlw	0
 21742  0098DA  0101               	movlb	1	; () banked
 21743  0098DC  6FD2               	movwf	__display_time@cntr& (0+255),b
 21744                           
 21745                           ;display.c: 254: while(pressminutes[cntr])
 21746  0098DE  D016               	goto	l21321
 21747  0098E0                     l21317:
 21748                           
 21749                           ; BSR set to: 1
 21750                           ;display.c: 255: display_content[3][cntr] = pressminutes[cntr++];
 21751  0098E0  0101               	movlb	1	; () banked
 21752  0098E2  51D2               	movf	__display_time@cntr& (0+255),w,b
 21753  0098E4  0D01               	mullw	1
 21754  0098E6  0E14               	movlw	low __display_time@pressminutes
 21755  0098E8  24F3               	addwf	prodl,w,c
 21756  0098EA  6ED9               	movwf	fsr2l,c
 21757  0098EC  0E01               	movlw	high __display_time@pressminutes
 21758  0098EE  20F4               	addwfc	prodh,w,c
 21759  0098F0  6EDA               	movwf	fsr2h,c
 21760  0098F2  0101               	movlb	1	; () banked
 21761  0098F4  51D2               	movf	__display_time@cntr& (0+255),w,b
 21762  0098F6  0D01               	mullw	1
 21763  0098F8  0E90               	movlw	low (_display_content+60)
 21764  0098FA  24F3               	addwf	prodl,w,c
 21765  0098FC  6EE1               	movwf	fsr1l,c
 21766  0098FE  0E03               	movlw	high (_display_content+60)
 21767  009900  20F4               	addwfc	prodh,w,c
 21768  009902  6EE2               	movwf	fsr1h,c
 21769  009904  CFDF FFE7          	movff	indf2,indf1
 21770                           
 21771                           ; BSR set to: 1
 21772  009908  0101               	movlb	1	; () banked
 21773  00990A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21774  00990C                     l21321:
 21775                           
 21776                           ; BSR set to: 1
 21777  00990C  0101               	movlb	1	; () banked
 21778  00990E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21779  009910  0D01               	mullw	1
 21780  009912  0E14               	movlw	low __display_time@pressminutes
 21781  009914  24F3               	addwf	prodl,w,c
 21782  009916  6ED9               	movwf	fsr2l,c
 21783  009918  0E01               	movlw	high __display_time@pressminutes
 21784  00991A  20F4               	addwfc	prodh,w,c
 21785  00991C  6EDA               	movwf	fsr2h,c
 21786  00991E  50DF               	movf	indf2,w,c
 21787  009920  B4D8               	btfsc	status,2,c
 21788  009922  D0B2               	goto	l21359
 21789  009924  D7DD               	goto	l21317
 21790  009926                     l21323:
 21791                           
 21792                           ; BSR set to: 1
 21793                           ;display.c: 259: cntr = 0;
 21794  009926  0E00               	movlw	0
 21795  009928  0101               	movlb	1	; () banked
 21796  00992A  6FD2               	movwf	__display_time@cntr& (0+255),b
 21797                           
 21798                           ;display.c: 260: while(setminutes[cntr])
 21799  00992C  D016               	goto	l21329
 21800  00992E                     l21325:
 21801                           
 21802                           ; BSR set to: 1
 21803                           ;display.c: 261: display_content[0][cntr] = setminutes[cntr++];
 21804  00992E  0101               	movlb	1	; () banked
 21805  009930  51D2               	movf	__display_time@cntr& (0+255),w,b
 21806  009932  0D01               	mullw	1
 21807  009934  0E8E               	movlw	low __display_time@setminutes
 21808  009936  24F3               	addwf	prodl,w,c
 21809  009938  6ED9               	movwf	fsr2l,c
 21810  00993A  0E01               	movlw	high __display_time@setminutes
 21811  00993C  20F4               	addwfc	prodh,w,c
 21812  00993E  6EDA               	movwf	fsr2h,c
 21813  009940  0101               	movlb	1	; () banked
 21814  009942  51D2               	movf	__display_time@cntr& (0+255),w,b
 21815  009944  0D01               	mullw	1
 21816  009946  0E54               	movlw	low _display_content
 21817  009948  24F3               	addwf	prodl,w,c
 21818  00994A  6EE1               	movwf	fsr1l,c
 21819  00994C  0E03               	movlw	high _display_content
 21820  00994E  20F4               	addwfc	prodh,w,c
 21821  009950  6EE2               	movwf	fsr1h,c
 21822  009952  CFDF FFE7          	movff	indf2,indf1
 21823                           
 21824                           ; BSR set to: 1
 21825  009956  0101               	movlb	1	; () banked
 21826  009958  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21827  00995A                     l21329:
 21828                           
 21829                           ; BSR set to: 1
 21830  00995A  0101               	movlb	1	; () banked
 21831  00995C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21832  00995E  0D01               	mullw	1
 21833  009960  0E8E               	movlw	low __display_time@setminutes
 21834  009962  24F3               	addwf	prodl,w,c
 21835  009964  6ED9               	movwf	fsr2l,c
 21836  009966  0E01               	movlw	high __display_time@setminutes
 21837  009968  20F4               	addwfc	prodh,w,c
 21838  00996A  6EDA               	movwf	fsr2h,c
 21839  00996C  50DF               	movf	indf2,w,c
 21840  00996E  A4D8               	btfss	status,2,c
 21841  009970  D7DE               	goto	l21325
 21842                           
 21843                           ; BSR set to: 1
 21844                           ;display.c: 262: cntr = 0;
 21845                           
 21846                           ; BSR set to: 1
 21847  009972  0E00               	movlw	0
 21848  009974  0101               	movlb	1	; () banked
 21849  009976  6FD2               	movwf	__display_time@cntr& (0+255),b
 21850                           
 21851                           ;display.c: 263: while(pressseconds[cntr])
 21852  009978  D016               	goto	l21337
 21853  00997A                     l21333:
 21854                           
 21855                           ; BSR set to: 1
 21856                           ;display.c: 264: display_content[3][cntr] = pressseconds[cntr++];
 21857  00997A  0101               	movlb	1	; () banked
 21858  00997C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21859  00997E  0D01               	mullw	1
 21860  009980  0E28               	movlw	low __display_time@pressseconds
 21861  009982  24F3               	addwf	prodl,w,c
 21862  009984  6ED9               	movwf	fsr2l,c
 21863  009986  0E01               	movlw	high __display_time@pressseconds
 21864  009988  20F4               	addwfc	prodh,w,c
 21865  00998A  6EDA               	movwf	fsr2h,c
 21866  00998C  0101               	movlb	1	; () banked
 21867  00998E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21868  009990  0D01               	mullw	1
 21869  009992  0E90               	movlw	low (_display_content+60)
 21870  009994  24F3               	addwf	prodl,w,c
 21871  009996  6EE1               	movwf	fsr1l,c
 21872  009998  0E03               	movlw	high (_display_content+60)
 21873  00999A  20F4               	addwfc	prodh,w,c
 21874  00999C  6EE2               	movwf	fsr1h,c
 21875  00999E  CFDF FFE7          	movff	indf2,indf1
 21876                           
 21877                           ; BSR set to: 1
 21878  0099A2  0101               	movlb	1	; () banked
 21879  0099A4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21880  0099A6                     l21337:
 21881                           
 21882                           ; BSR set to: 1
 21883  0099A6  0101               	movlb	1	; () banked
 21884  0099A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21885  0099AA  0D01               	mullw	1
 21886  0099AC  0E28               	movlw	low __display_time@pressseconds
 21887  0099AE  24F3               	addwf	prodl,w,c
 21888  0099B0  6ED9               	movwf	fsr2l,c
 21889  0099B2  0E01               	movlw	high __display_time@pressseconds
 21890  0099B4  20F4               	addwfc	prodh,w,c
 21891  0099B6  6EDA               	movwf	fsr2h,c
 21892  0099B8  50DF               	movf	indf2,w,c
 21893  0099BA  B4D8               	btfsc	status,2,c
 21894  0099BC  D065               	goto	l21359
 21895  0099BE  D7DD               	goto	l21333
 21896  0099C0                     l21339:
 21897                           
 21898                           ; BSR set to: 1
 21899                           ;display.c: 268: cntr = 0;
 21900  0099C0  0E00               	movlw	0
 21901  0099C2  0101               	movlb	1	; () banked
 21902  0099C4  6FD2               	movwf	__display_time@cntr& (0+255),b
 21903                           
 21904                           ;display.c: 269: while(setseconds[cntr])
 21905  0099C6  D016               	goto	l21345
 21906  0099C8                     l21341:
 21907                           
 21908                           ; BSR set to: 1
 21909                           ;display.c: 270: display_content[0][cntr] = setseconds[cntr++];
 21910  0099C8  0101               	movlb	1	; () banked
 21911  0099CA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21912  0099CC  0D01               	mullw	1
 21913  0099CE  0E9A               	movlw	low __display_time@setseconds
 21914  0099D0  24F3               	addwf	prodl,w,c
 21915  0099D2  6ED9               	movwf	fsr2l,c
 21916  0099D4  0E01               	movlw	high __display_time@setseconds
 21917  0099D6  20F4               	addwfc	prodh,w,c
 21918  0099D8  6EDA               	movwf	fsr2h,c
 21919  0099DA  0101               	movlb	1	; () banked
 21920  0099DC  51D2               	movf	__display_time@cntr& (0+255),w,b
 21921  0099DE  0D01               	mullw	1
 21922  0099E0  0E54               	movlw	low _display_content
 21923  0099E2  24F3               	addwf	prodl,w,c
 21924  0099E4  6EE1               	movwf	fsr1l,c
 21925  0099E6  0E03               	movlw	high _display_content
 21926  0099E8  20F4               	addwfc	prodh,w,c
 21927  0099EA  6EE2               	movwf	fsr1h,c
 21928  0099EC  CFDF FFE7          	movff	indf2,indf1
 21929                           
 21930                           ; BSR set to: 1
 21931  0099F0  0101               	movlb	1	; () banked
 21932  0099F2  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21933  0099F4                     l21345:
 21934                           
 21935                           ; BSR set to: 1
 21936  0099F4  0101               	movlb	1	; () banked
 21937  0099F6  51D2               	movf	__display_time@cntr& (0+255),w,b
 21938  0099F8  0D01               	mullw	1
 21939  0099FA  0E9A               	movlw	low __display_time@setseconds
 21940  0099FC  24F3               	addwf	prodl,w,c
 21941  0099FE  6ED9               	movwf	fsr2l,c
 21942  009A00  0E01               	movlw	high __display_time@setseconds
 21943  009A02  20F4               	addwfc	prodh,w,c
 21944  009A04  6EDA               	movwf	fsr2h,c
 21945  009A06  50DF               	movf	indf2,w,c
 21946  009A08  A4D8               	btfss	status,2,c
 21947  009A0A  D7DE               	goto	l21341
 21948                           
 21949                           ; BSR set to: 1
 21950                           ;display.c: 271: cntr = 0;
 21951                           
 21952                           ; BSR set to: 1
 21953  009A0C  0E00               	movlw	0
 21954  009A0E  0101               	movlb	1	; () banked
 21955  009A10  6FD2               	movwf	__display_time@cntr& (0+255),b
 21956                           
 21957                           ;display.c: 272: while(presssave[cntr])
 21958  009A12  D016               	goto	l21353
 21959  009A14                     l21349:
 21960                           
 21961                           ; BSR set to: 1
 21962                           ;display.c: 273: display_content[3][cntr] = presssave[cntr++];
 21963  009A14  0101               	movlb	1	; () banked
 21964  009A16  51D2               	movf	__display_time@cntr& (0+255),w,b
 21965  009A18  0D01               	mullw	1
 21966  009A1A  0E70               	movlw	low __display_time@presssave
 21967  009A1C  24F3               	addwf	prodl,w,c
 21968  009A1E  6ED9               	movwf	fsr2l,c
 21969  009A20  0E01               	movlw	high __display_time@presssave
 21970  009A22  20F4               	addwfc	prodh,w,c
 21971  009A24  6EDA               	movwf	fsr2h,c
 21972  009A26  0101               	movlb	1	; () banked
 21973  009A28  51D2               	movf	__display_time@cntr& (0+255),w,b
 21974  009A2A  0D01               	mullw	1
 21975  009A2C  0E90               	movlw	low (_display_content+60)
 21976  009A2E  24F3               	addwf	prodl,w,c
 21977  009A30  6EE1               	movwf	fsr1l,c
 21978  009A32  0E03               	movlw	high (_display_content+60)
 21979  009A34  20F4               	addwfc	prodh,w,c
 21980  009A36  6EE2               	movwf	fsr1h,c
 21981  009A38  CFDF FFE7          	movff	indf2,indf1
 21982                           
 21983                           ; BSR set to: 1
 21984  009A3C  0101               	movlb	1	; () banked
 21985  009A3E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21986  009A40                     l21353:
 21987                           
 21988                           ; BSR set to: 1
 21989  009A40  0101               	movlb	1	; () banked
 21990  009A42  51D2               	movf	__display_time@cntr& (0+255),w,b
 21991  009A44  0D01               	mullw	1
 21992  009A46  0E70               	movlw	low __display_time@presssave
 21993  009A48  24F3               	addwf	prodl,w,c
 21994  009A4A  6ED9               	movwf	fsr2l,c
 21995  009A4C  0E01               	movlw	high __display_time@presssave
 21996  009A4E  20F4               	addwfc	prodh,w,c
 21997  009A50  6EDA               	movwf	fsr2h,c
 21998  009A52  50DF               	movf	indf2,w,c
 21999  009A54  B4D8               	btfsc	status,2,c
 22000  009A56  D018               	goto	l21359
 22001  009A58  D7DD               	goto	l21349
 22002  009A5A                     l21357:
 22003                           
 22004                           ; BSR set to: 1
 22005  009A5A  0101               	movlb	1	; () banked
 22006  009A5C  51CB               	movf	__display_time@mode& (0+255),w,b
 22007                           
 22008                           ; Switch size 1, requested type "space"
 22009                           ; Number of cases is 7, Range of values is 16 to 22
 22010                           ; switch strategies available:
 22011                           ; Name         Instructions Cycles
 22012                           ; simple_byte           22    12 (average)
 22013                           ;	Chosen strategy is simple_byte
 22014  009A5E  0A10               	xorlw	16	; case 16
 22015  009A60  B4D8               	btfsc	status,2,c
 22016  009A62  D5E0               	goto	l21243
 22017  009A64  0A01               	xorlw	1	; case 17
 22018  009A66  B4D8               	btfsc	status,2,c
 22019  009A68  D62A               	goto	l21259
 22020  009A6A  0A03               	xorlw	3	; case 18
 22021  009A6C  B4D8               	btfsc	status,2,c
 22022  009A6E  D674               	goto	l21275
 22023  009A70  0A01               	xorlw	1	; case 19
 22024  009A72  B4D8               	btfsc	status,2,c
 22025  009A74  D6BE               	goto	l21291
 22026  009A76  0A07               	xorlw	7	; case 20
 22027  009A78  B4D8               	btfsc	status,2,c
 22028  009A7A  D708               	goto	l21307
 22029  009A7C  0A01               	xorlw	1	; case 21
 22030  009A7E  B4D8               	btfsc	status,2,c
 22031  009A80  D752               	goto	l21323
 22032  009A82  0A03               	xorlw	3	; case 22
 22033  009A84  B4D8               	btfsc	status,2,c
 22034  009A86  D79C               	goto	l21339
 22035  009A88                     l21359:
 22036                           
 22037                           ; BSR set to: 1
 22038                           ;display.c: 278: display_content[1][0] = '2';
 22039  009A88  0E32               	movlw	50
 22040  009A8A  0103               	movlb	3	; () banked
 22041  009A8C  6F68               	movwf	(_display_content+20)& (0+255),b
 22042                           
 22043                           ;display.c: 279: display_content[1][1] = '0';
 22044  009A8E  0E30               	movlw	48
 22045  009A90  0103               	movlb	3	; () banked
 22046  009A92  6F69               	movwf	(_display_content+21)& (0+255),b
 22047                           
 22048                           ; BSR set to: 3
 22049                           ;display.c: 280: display_content[1][2] = (year>>4) + 48;
 22050  009A94  0101               	movlb	1	; () banked
 22051  009A96  39CC               	swapf	__display_time@year& (0+255),w,b
 22052  009A98  0B0F               	andlw	15
 22053  009A9A  0F30               	addlw	48
 22054  009A9C  0103               	movlb	3	; () banked
 22055  009A9E  6F6A               	movwf	(_display_content+22)& (0+255),b
 22056                           
 22057                           ; BSR set to: 3
 22058                           ;display.c: 281: display_content[1][3] = (year&0x0F) + 48;
 22059  009AA0  0101               	movlb	1	; () banked
 22060  009AA2  51CC               	movf	__display_time@year& (0+255),w,b
 22061  009AA4  0B0F               	andlw	15
 22062  009AA6  0F30               	addlw	48
 22063  009AA8  0103               	movlb	3	; () banked
 22064  009AAA  6F6B               	movwf	(_display_content+23)& (0+255),b
 22065                           
 22066                           ;display.c: 283: display_content[1][4] = '-';
 22067  009AAC  0E2D               	movlw	45
 22068  009AAE  0103               	movlb	3	; () banked
 22069  009AB0  6F6C               	movwf	(_display_content+24)& (0+255),b
 22070                           
 22071                           ; BSR set to: 3
 22072                           ;display.c: 284: display_content[1][5] = (month>>4) + 48;
 22073  009AB2  0101               	movlb	1	; () banked
 22074  009AB4  39CD               	swapf	__display_time@month& (0+255),w,b
 22075  009AB6  0B0F               	andlw	15
 22076  009AB8  0F30               	addlw	48
 22077  009ABA  0103               	movlb	3	; () banked
 22078  009ABC  6F6D               	movwf	(_display_content+25)& (0+255),b
 22079                           
 22080                           ; BSR set to: 3
 22081                           ;display.c: 285: display_content[1][6] = (month&0x0F) + 48;
 22082  009ABE  0101               	movlb	1	; () banked
 22083  009AC0  51CD               	movf	__display_time@month& (0+255),w,b
 22084  009AC2  0B0F               	andlw	15
 22085  009AC4  0F30               	addlw	48
 22086  009AC6  0103               	movlb	3	; () banked
 22087  009AC8  6F6E               	movwf	(_display_content+26)& (0+255),b
 22088                           
 22089                           ;display.c: 287: display_content[1][7] = '-';
 22090  009ACA  0E2D               	movlw	45
 22091  009ACC  0103               	movlb	3	; () banked
 22092  009ACE  6F6F               	movwf	(_display_content+27)& (0+255),b
 22093                           
 22094                           ; BSR set to: 3
 22095                           ;display.c: 288: display_content[1][8] = (day>>4) + 48;
 22096  009AD0  0101               	movlb	1	; () banked
 22097  009AD2  39CE               	swapf	__display_time@day& (0+255),w,b
 22098  009AD4  0B0F               	andlw	15
 22099  009AD6  0F30               	addlw	48
 22100  009AD8  0103               	movlb	3	; () banked
 22101  009ADA  6F70               	movwf	(_display_content+28)& (0+255),b
 22102                           
 22103                           ; BSR set to: 3
 22104                           ;display.c: 289: display_content[1][9] = (day&0x0F) + 48;
 22105  009ADC  0101               	movlb	1	; () banked
 22106  009ADE  51CE               	movf	__display_time@day& (0+255),w,b
 22107  009AE0  0B0F               	andlw	15
 22108  009AE2  0F30               	addlw	48
 22109  009AE4  0103               	movlb	3	; () banked
 22110  009AE6  6F71               	movwf	(_display_content+29)& (0+255),b
 22111                           
 22112                           ; BSR set to: 3
 22113                           ;display.c: 291: display_content[2][0] = (hours>>4) + 48;
 22114  009AE8  0101               	movlb	1	; () banked
 22115  009AEA  39CF               	swapf	__display_time@hours& (0+255),w,b
 22116  009AEC  0B0F               	andlw	15
 22117  009AEE  0F30               	addlw	48
 22118  009AF0  0103               	movlb	3	; () banked
 22119  009AF2  6F7C               	movwf	(_display_content+40)& (0+255),b
 22120                           
 22121                           ; BSR set to: 3
 22122                           ;display.c: 292: display_content[2][1] = (hours&0x0F) + 48;
 22123  009AF4  0101               	movlb	1	; () banked
 22124  009AF6  51CF               	movf	__display_time@hours& (0+255),w,b
 22125  009AF8  0B0F               	andlw	15
 22126  009AFA  0F30               	addlw	48
 22127  009AFC  0103               	movlb	3	; () banked
 22128  009AFE  6F7D               	movwf	(_display_content+41)& (0+255),b
 22129                           
 22130                           ;display.c: 294: display_content[2][2] = ':';
 22131  009B00  0E3A               	movlw	58
 22132  009B02  0103               	movlb	3	; () banked
 22133  009B04  6F7E               	movwf	(_display_content+42)& (0+255),b
 22134                           
 22135                           ; BSR set to: 3
 22136                           ;display.c: 295: display_content[2][3] = (minutes>>4) + 48;
 22137  009B06  0101               	movlb	1	; () banked
 22138  009B08  39D0               	swapf	__display_time@minutes& (0+255),w,b
 22139  009B0A  0B0F               	andlw	15
 22140  009B0C  0F30               	addlw	48
 22141  009B0E  0103               	movlb	3	; () banked
 22142  009B10  6F7F               	movwf	(_display_content+43)& (0+255),b
 22143                           
 22144                           ; BSR set to: 3
 22145                           ;display.c: 296: display_content[2][4] = (minutes&0x0F) + 48;
 22146  009B12  0101               	movlb	1	; () banked
 22147  009B14  51D0               	movf	__display_time@minutes& (0+255),w,b
 22148  009B16  0B0F               	andlw	15
 22149  009B18  0F30               	addlw	48
 22150  009B1A  0103               	movlb	3	; () banked
 22151  009B1C  6F80               	movwf	(_display_content+44)& (0+255),b
 22152                           
 22153                           ;display.c: 298: display_content[2][5] = ':';
 22154  009B1E  0E3A               	movlw	58
 22155  009B20  0103               	movlb	3	; () banked
 22156  009B22  6F81               	movwf	(_display_content+45)& (0+255),b
 22157                           
 22158                           ; BSR set to: 3
 22159                           ;display.c: 299: display_content[2][6] = (seconds>>4) + 48;
 22160  009B24  0101               	movlb	1	; () banked
 22161  009B26  39D1               	swapf	__display_time@seconds& (0+255),w,b
 22162  009B28  0B0F               	andlw	15
 22163  009B2A  0F30               	addlw	48
 22164  009B2C  0103               	movlb	3	; () banked
 22165  009B2E  6F82               	movwf	(_display_content+46)& (0+255),b
 22166                           
 22167                           ; BSR set to: 3
 22168                           ;display.c: 300: display_content[2][7] = (seconds&0x0F) + 48;
 22169  009B30  0101               	movlb	1	; () banked
 22170  009B32  51D1               	movf	__display_time@seconds& (0+255),w,b
 22171  009B34  0B0F               	andlw	15
 22172  009B36  0F30               	addlw	48
 22173  009B38  0103               	movlb	3	; () banked
 22174  009B3A  6F83               	movwf	(_display_content+47)& (0+255),b
 22175                           
 22176                           ; BSR set to: 3
 22177  009B3C  0012               	return		;funcret
 22178  009B3E                     __end_of__display_time:
 22179                           	opt stack 0
 22180                           tblptru	equ	0xFF8
 22181                           tblptrh	equ	0xFF7
 22182                           tblptrl	equ	0xFF6
 22183                           tablat	equ	0xFF5
 22184                           prodh	equ	0xFF4
 22185                           prodl	equ	0xFF3
 22186                           intcon	equ	0xFF2
 22187                           intcon2	equ	0xFF1
 22188                           intcon3	equ	0xFF0
 22189                           postinc0	equ	0xFEE
 22190                           wreg	equ	0xFE8
 22191                           indf1	equ	0xFE7
 22192                           postinc1	equ	0xFE6
 22193                           postdec1	equ	0xFE5
 22194                           plusw1	equ	0xFE3
 22195                           fsr1h	equ	0xFE2
 22196                           fsr1l	equ	0xFE1
 22197                           indf2	equ	0xFDF
 22198                           postinc2	equ	0xFDE
 22199                           postdec2	equ	0xFDD
 22200                           plusw2	equ	0xFDB
 22201                           fsr2h	equ	0xFDA
 22202                           fsr2l	equ	0xFD9
 22203                           status	equ	0xFD8
 22204                           
 22205 ;; *************** function __display_temperature *****************
 22206 ;; Defined at:
 22207 ;;		line 513 in file "display.c"
 22208 ;; Parameters:    Size  Location     Type
 22209 ;;		None
 22210 ;; Auto vars:     Size  Location     Type
 22211 ;;  header         20   48[BANK0 ] const unsigned char [20]
 22212 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 22213 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 22214 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 22215 ;;  cntr            1  103[BANK0 ] unsigned char 
 22216 ;; Return value:  Size  Location     Type
 22217 ;;                  1    wreg      void 
 22218 ;; Registers used:
 22219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22220 ;; Tracked objects:
 22221 ;;		On entry : 0/0
 22222 ;;		On exit  : 0/0
 22223 ;;		Unchanged: 0/0
 22224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22226 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22228 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22229 ;;Total ram usage:       56 bytes
 22230 ;; Hardware stack levels used:    1
 22231 ;; Hardware stack levels required when called:   14
 22232 ;; This function calls:
 22233 ;;		__display_itoa
 22234 ;; This function is called by:
 22235 ;;		_display_prepare
 22236 ;; This function uses a non-reentrant model
 22237 ;;
 22238                           
 22239                           	psect	text101
 22240  00D8A8                     __ptext101:
 22241                           	opt stack 0
 22242  00D8A8                     __display_temperature:
 22243                           	opt stack 15
 22244                           
 22245                           ;display.c: 515: uint8_t cntr;
 22246                           ;display.c: 516: const char header[] = "Temperature Monitor";
 22247                           
 22248                           ; BSR set to: 3
 22249                           ;incstack = 0
 22250  00D8A8  0EDF               	movlw	low __display_temperature@F8773
 22251  00D8AA  6EF6               	movwf	tblptrl,c
 22252  00D8AC                     	if	1	;There is more than 1 active tblptr byte
 22253  00D8AC  0E90               	movlw	high __display_temperature@F8773
 22254  00D8AE  6EF7               	movwf	tblptrh,c
 22255  00D8B0                     	endif
 22256  00D8B0                     	if	1	;There are 3 active tblptr bytes
 22257  00D8B0  0E00               	movlw	low (__display_temperature@F8773 shr (0+16))
 22258  00D8B2  6EF8               	movwf	tblptru,c
 22259  00D8B4                     	endif
 22260  00D8B4  EE20  F090         	lfsr	2,__display_temperature@header
 22261  00D8B8  0E13               	movlw	19
 22262  00D8BA                     u21330:
 22263  00D8BA  0009               	tblrd		*+
 22264  00D8BC  CFF5 FFDE          	movff	tablat,postinc2
 22265  00D8C0  06E8               	decf	wreg,f,c
 22266  00D8C2  E2FB               	bc	u21330
 22267                           
 22268                           ;display.c: 517: const char internal[] = "On-board: ";
 22269  00D8C4  0ECF               	movlw	low __display_temperature@F8775
 22270  00D8C6  6EF6               	movwf	tblptrl,c
 22271  00D8C8                     	if	1	;There is more than 1 active tblptr byte
 22272  00D8C8  0E92               	movlw	high __display_temperature@F8775
 22273  00D8CA  6EF7               	movwf	tblptrh,c
 22274  00D8CC                     	endif
 22275  00D8CC                     	if	1	;There are 3 active tblptr bytes
 22276  00D8CC  0E00               	movlw	low (__display_temperature@F8775 shr (0+16))
 22277  00D8CE  6EF8               	movwf	tblptru,c
 22278  00D8D0                     	endif
 22279  00D8D0  EE20  F0BC         	lfsr	2,__display_temperature@internal
 22280  00D8D4  0E0A               	movlw	10
 22281  00D8D6                     u21340:
 22282  00D8D6  0009               	tblrd		*+
 22283  00D8D8  CFF5 FFDE          	movff	tablat,postinc2
 22284  00D8DC  06E8               	decf	wreg,f,c
 22285  00D8DE  E2FB               	bc	u21340
 22286                           
 22287                           ;display.c: 518: const char external1[] = "External 1:";
 22288  00D8E0  0E9F               	movlw	low __display_temperature@F8777
 22289  00D8E2  6EF6               	movwf	tblptrl,c
 22290  00D8E4                     	if	1	;There is more than 1 active tblptr byte
 22291  00D8E4  0E92               	movlw	high __display_temperature@F8777
 22292  00D8E6  6EF7               	movwf	tblptrh,c
 22293  00D8E8                     	endif
 22294  00D8E8                     	if	1	;There are 3 active tblptr bytes
 22295  00D8E8  0E00               	movlw	low (__display_temperature@F8777 shr (0+16))
 22296  00D8EA  6EF8               	movwf	tblptru,c
 22297  00D8EC                     	endif
 22298  00D8EC  EE20  F0A4         	lfsr	2,__display_temperature@external1
 22299  00D8F0  0E0B               	movlw	11
 22300  00D8F2                     u21350:
 22301  00D8F2  0009               	tblrd		*+
 22302  00D8F4  CFF5 FFDE          	movff	tablat,postinc2
 22303  00D8F8  06E8               	decf	wreg,f,c
 22304  00D8FA  E2FB               	bc	u21350
 22305                           
 22306                           ;display.c: 519: const char external2[] = "External 2:";
 22307  00D8FC  0E93               	movlw	low __display_temperature@F8779
 22308  00D8FE  6EF6               	movwf	tblptrl,c
 22309  00D900                     	if	1	;There is more than 1 active tblptr byte
 22310  00D900  0E92               	movlw	high __display_temperature@F8779
 22311  00D902  6EF7               	movwf	tblptrh,c
 22312  00D904                     	endif
 22313  00D904                     	if	1	;There are 3 active tblptr bytes
 22314  00D904  0E00               	movlw	low (__display_temperature@F8779 shr (0+16))
 22315  00D906  6EF8               	movwf	tblptru,c
 22316  00D908                     	endif
 22317  00D908  EE20  F0B0         	lfsr	2,__display_temperature@external2
 22318  00D90C  0E0B               	movlw	11
 22319  00D90E                     u21360:
 22320  00D90E  0009               	tblrd		*+
 22321  00D910  CFF5 FFDE          	movff	tablat,postinc2
 22322  00D914  06E8               	decf	wreg,f,c
 22323  00D916  E2FB               	bc	u21360
 22324                           
 22325                           ;display.c: 521: cntr = 0;
 22326  00D918  0E00               	movlw	0
 22327  00D91A  0100               	movlb	0	; () banked
 22328  00D91C  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22329                           
 22330                           ;display.c: 522: while(header[cntr])
 22331  00D91E  D016               	goto	l21597
 22332  00D920                     l21593:
 22333                           
 22334                           ; BSR set to: 0
 22335                           ;display.c: 523: display_content[0][cntr] = header[cntr++];
 22336  00D920  0100               	movlb	0	; () banked
 22337  00D922  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22338  00D924  0D01               	mullw	1
 22339  00D926  0E90               	movlw	low __display_temperature@header
 22340  00D928  24F3               	addwf	prodl,w,c
 22341  00D92A  6ED9               	movwf	fsr2l,c
 22342  00D92C  0E00               	movlw	high __display_temperature@header
 22343  00D92E  20F4               	addwfc	prodh,w,c
 22344  00D930  6EDA               	movwf	fsr2h,c
 22345  00D932  0100               	movlb	0	; () banked
 22346  00D934  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22347  00D936  0D01               	mullw	1
 22348  00D938  0E54               	movlw	low _display_content
 22349  00D93A  24F3               	addwf	prodl,w,c
 22350  00D93C  6EE1               	movwf	fsr1l,c
 22351  00D93E  0E03               	movlw	high _display_content
 22352  00D940  20F4               	addwfc	prodh,w,c
 22353  00D942  6EE2               	movwf	fsr1h,c
 22354  00D944  CFDF FFE7          	movff	indf2,indf1
 22355                           
 22356                           ; BSR set to: 0
 22357  00D948  0100               	movlb	0	; () banked
 22358  00D94A  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22359  00D94C                     l21597:
 22360                           
 22361                           ; BSR set to: 0
 22362  00D94C  0100               	movlb	0	; () banked
 22363  00D94E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22364  00D950  0D01               	mullw	1
 22365  00D952  0E90               	movlw	low __display_temperature@header
 22366  00D954  24F3               	addwf	prodl,w,c
 22367  00D956  6ED9               	movwf	fsr2l,c
 22368  00D958  0E00               	movlw	high __display_temperature@header
 22369  00D95A  20F4               	addwfc	prodh,w,c
 22370  00D95C  6EDA               	movwf	fsr2h,c
 22371  00D95E  50DF               	movf	indf2,w,c
 22372  00D960  A4D8               	btfss	status,2,c
 22373  00D962  D7DE               	goto	l21593
 22374                           
 22375                           ; BSR set to: 0
 22376                           ;display.c: 525: cntr = 0;
 22377                           
 22378                           ; BSR set to: 0
 22379  00D964  0E00               	movlw	0
 22380  00D966  0100               	movlb	0	; () banked
 22381  00D968  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22382                           
 22383                           ;display.c: 526: while(internal[cntr])
 22384  00D96A  D016               	goto	l21605
 22385  00D96C                     l21601:
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;display.c: 527: display_content[1][cntr] = internal[cntr++];
 22389  00D96C  0100               	movlb	0	; () banked
 22390  00D96E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22391  00D970  0D01               	mullw	1
 22392  00D972  0EBC               	movlw	low __display_temperature@internal
 22393  00D974  24F3               	addwf	prodl,w,c
 22394  00D976  6ED9               	movwf	fsr2l,c
 22395  00D978  0E00               	movlw	high __display_temperature@internal
 22396  00D97A  20F4               	addwfc	prodh,w,c
 22397  00D97C  6EDA               	movwf	fsr2h,c
 22398  00D97E  0100               	movlb	0	; () banked
 22399  00D980  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22400  00D982  0D01               	mullw	1
 22401  00D984  0E68               	movlw	low (_display_content+20)
 22402  00D986  24F3               	addwf	prodl,w,c
 22403  00D988  6EE1               	movwf	fsr1l,c
 22404  00D98A  0E03               	movlw	high (_display_content+20)
 22405  00D98C  20F4               	addwfc	prodh,w,c
 22406  00D98E  6EE2               	movwf	fsr1h,c
 22407  00D990  CFDF FFE7          	movff	indf2,indf1
 22408                           
 22409                           ; BSR set to: 0
 22410  00D994  0100               	movlb	0	; () banked
 22411  00D996  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22412  00D998                     l21605:
 22413                           
 22414                           ; BSR set to: 0
 22415  00D998  0100               	movlb	0	; () banked
 22416  00D99A  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22417  00D99C  0D01               	mullw	1
 22418  00D99E  0EBC               	movlw	low __display_temperature@internal
 22419  00D9A0  24F3               	addwf	prodl,w,c
 22420  00D9A2  6ED9               	movwf	fsr2l,c
 22421  00D9A4  0E00               	movlw	high __display_temperature@internal
 22422  00D9A6  20F4               	addwfc	prodh,w,c
 22423  00D9A8  6EDA               	movwf	fsr2h,c
 22424  00D9AA  50DF               	movf	indf2,w,c
 22425  00D9AC  A4D8               	btfss	status,2,c
 22426  00D9AE  D7DE               	goto	l21601
 22427                           
 22428                           ; BSR set to: 0
 22429                           ;display.c: 529: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 22430                           
 22431                           ; BSR set to: 0
 22432  00D9B0  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 22433  00D9B4  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 22434  00D9B8  0E02               	movlw	2
 22435  00D9BA  0100               	movlb	0	; () banked
 22436  00D9BC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22437  00D9BE  0E74               	movlw	low (_display_content+32)
 22438  00D9C0  0100               	movlb	0	; () banked
 22439  00D9C2  6F7B               	movwf	__display_itoa@text& (0+255),b
 22440  00D9C4  0E03               	movlw	high (_display_content+32)
 22441  00D9C6  0100               	movlb	0	; () banked
 22442  00D9C8  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22443  00D9CA  ECBE  F063         	call	__display_itoa	;wreg free
 22444                           
 22445                           ;display.c: 531: cntr = 0;
 22446  00D9CE  0E00               	movlw	0
 22447  00D9D0  0100               	movlb	0	; () banked
 22448  00D9D2  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22449                           
 22450                           ;display.c: 532: while(external1[cntr])
 22451  00D9D4  D016               	goto	l21615
 22452  00D9D6                     l21611:
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;display.c: 533: display_content[2][cntr] = external1[cntr++];
 22456  00D9D6  0100               	movlb	0	; () banked
 22457  00D9D8  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22458  00D9DA  0D01               	mullw	1
 22459  00D9DC  0EA4               	movlw	low __display_temperature@external1
 22460  00D9DE  24F3               	addwf	prodl,w,c
 22461  00D9E0  6ED9               	movwf	fsr2l,c
 22462  00D9E2  0E00               	movlw	high __display_temperature@external1
 22463  00D9E4  20F4               	addwfc	prodh,w,c
 22464  00D9E6  6EDA               	movwf	fsr2h,c
 22465  00D9E8  0100               	movlb	0	; () banked
 22466  00D9EA  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22467  00D9EC  0D01               	mullw	1
 22468  00D9EE  0E7C               	movlw	low (_display_content+40)
 22469  00D9F0  24F3               	addwf	prodl,w,c
 22470  00D9F2  6EE1               	movwf	fsr1l,c
 22471  00D9F4  0E03               	movlw	high (_display_content+40)
 22472  00D9F6  20F4               	addwfc	prodh,w,c
 22473  00D9F8  6EE2               	movwf	fsr1h,c
 22474  00D9FA  CFDF FFE7          	movff	indf2,indf1
 22475                           
 22476                           ; BSR set to: 0
 22477  00D9FE  0100               	movlb	0	; () banked
 22478  00DA00  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22479  00DA02                     l21615:
 22480                           
 22481                           ; BSR set to: 0
 22482  00DA02  0100               	movlb	0	; () banked
 22483  00DA04  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22484  00DA06  0D01               	mullw	1
 22485  00DA08  0EA4               	movlw	low __display_temperature@external1
 22486  00DA0A  24F3               	addwf	prodl,w,c
 22487  00DA0C  6ED9               	movwf	fsr2l,c
 22488  00DA0E  0E00               	movlw	high __display_temperature@external1
 22489  00DA10  20F4               	addwfc	prodh,w,c
 22490  00DA12  6EDA               	movwf	fsr2h,c
 22491  00DA14  50DF               	movf	indf2,w,c
 22492  00DA16  A4D8               	btfss	status,2,c
 22493  00DA18  D7DE               	goto	l21611
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;display.c: 535: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 22497                           
 22498                           ; BSR set to: 0
 22499  00DA1A  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 22500  00DA1E  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 22501  00DA22  0E02               	movlw	2
 22502  00DA24  0100               	movlb	0	; () banked
 22503  00DA26  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22504  00DA28  0E88               	movlw	low (_display_content+52)
 22505  00DA2A  0100               	movlb	0	; () banked
 22506  00DA2C  6F7B               	movwf	__display_itoa@text& (0+255),b
 22507  00DA2E  0E03               	movlw	high (_display_content+52)
 22508  00DA30  0100               	movlb	0	; () banked
 22509  00DA32  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22510  00DA34  ECBE  F063         	call	__display_itoa	;wreg free
 22511                           
 22512                           ;display.c: 537: cntr = 0;
 22513  00DA38  0E00               	movlw	0
 22514  00DA3A  0100               	movlb	0	; () banked
 22515  00DA3C  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22516                           
 22517                           ;display.c: 538: while(external2[cntr])
 22518  00DA3E  D016               	goto	l21625
 22519  00DA40                     l21621:
 22520                           
 22521                           ; BSR set to: 0
 22522                           ;display.c: 539: display_content[3][cntr] = external2[cntr++];
 22523  00DA40  0100               	movlb	0	; () banked
 22524  00DA42  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22525  00DA44  0D01               	mullw	1
 22526  00DA46  0EB0               	movlw	low __display_temperature@external2
 22527  00DA48  24F3               	addwf	prodl,w,c
 22528  00DA4A  6ED9               	movwf	fsr2l,c
 22529  00DA4C  0E00               	movlw	high __display_temperature@external2
 22530  00DA4E  20F4               	addwfc	prodh,w,c
 22531  00DA50  6EDA               	movwf	fsr2h,c
 22532  00DA52  0100               	movlb	0	; () banked
 22533  00DA54  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22534  00DA56  0D01               	mullw	1
 22535  00DA58  0E90               	movlw	low (_display_content+60)
 22536  00DA5A  24F3               	addwf	prodl,w,c
 22537  00DA5C  6EE1               	movwf	fsr1l,c
 22538  00DA5E  0E03               	movlw	high (_display_content+60)
 22539  00DA60  20F4               	addwfc	prodh,w,c
 22540  00DA62  6EE2               	movwf	fsr1h,c
 22541  00DA64  CFDF FFE7          	movff	indf2,indf1
 22542                           
 22543                           ; BSR set to: 0
 22544  00DA68  0100               	movlb	0	; () banked
 22545  00DA6A  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22546  00DA6C                     l21625:
 22547                           
 22548                           ; BSR set to: 0
 22549  00DA6C  0100               	movlb	0	; () banked
 22550  00DA6E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22551  00DA70  0D01               	mullw	1
 22552  00DA72  0EB0               	movlw	low __display_temperature@external2
 22553  00DA74  24F3               	addwf	prodl,w,c
 22554  00DA76  6ED9               	movwf	fsr2l,c
 22555  00DA78  0E00               	movlw	high __display_temperature@external2
 22556  00DA7A  20F4               	addwfc	prodh,w,c
 22557  00DA7C  6EDA               	movwf	fsr2h,c
 22558  00DA7E  50DF               	movf	indf2,w,c
 22559  00DA80  A4D8               	btfss	status,2,c
 22560  00DA82  D7DE               	goto	l21621
 22561                           
 22562                           ; BSR set to: 0
 22563                           ;display.c: 541: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 22564                           
 22565                           ; BSR set to: 0
 22566  00DA84  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 22567  00DA88  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 22568  00DA8C  0E02               	movlw	2
 22569  00DA8E  0100               	movlb	0	; () banked
 22570  00DA90  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22571  00DA92  0E9C               	movlw	low (_display_content+72)
 22572  00DA94  0100               	movlb	0	; () banked
 22573  00DA96  6F7B               	movwf	__display_itoa@text& (0+255),b
 22574  00DA98  0E03               	movlw	high (_display_content+72)
 22575  00DA9A  0100               	movlb	0	; () banked
 22576  00DA9C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22577  00DA9E  ECBE  F063         	call	__display_itoa	;wreg free
 22578  00DAA2  0012               	return		;funcret
 22579  00DAA4                     __end_of__display_temperature:
 22580                           	opt stack 0
 22581                           tblptru	equ	0xFF8
 22582                           tblptrh	equ	0xFF7
 22583                           tblptrl	equ	0xFF6
 22584                           tablat	equ	0xFF5
 22585                           prodh	equ	0xFF4
 22586                           prodl	equ	0xFF3
 22587                           intcon	equ	0xFF2
 22588                           intcon2	equ	0xFF1
 22589                           intcon3	equ	0xFF0
 22590                           postinc0	equ	0xFEE
 22591                           wreg	equ	0xFE8
 22592                           indf1	equ	0xFE7
 22593                           postinc1	equ	0xFE6
 22594                           postdec1	equ	0xFE5
 22595                           plusw1	equ	0xFE3
 22596                           fsr1h	equ	0xFE2
 22597                           fsr1l	equ	0xFE1
 22598                           indf2	equ	0xFDF
 22599                           postinc2	equ	0xFDE
 22600                           postdec2	equ	0xFDD
 22601                           plusw2	equ	0xFDB
 22602                           fsr2h	equ	0xFDA
 22603                           fsr2l	equ	0xFD9
 22604                           status	equ	0xFD8
 22605                           
 22606 ;; *************** function __display_outputs *****************
 22607 ;; Defined at:
 22608 ;;		line 336 in file "display.c"
 22609 ;; Parameters:    Size  Location     Type
 22610 ;;  mode            1    wreg     unsigned char 
 22611 ;; Auto vars:     Size  Location     Type
 22612 ;;  mode            1   72[BANK0 ] unsigned char 
 22613 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 22614 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 22615 ;;  low            16   42[BANK0 ] const unsigned char [16]
 22616 ;;  header         14   58[BANK0 ] const unsigned char [14]
 22617 ;;  cntr            1   73[BANK0 ] unsigned char 
 22618 ;; Return value:  Size  Location     Type
 22619 ;;                  1    wreg      void 
 22620 ;; Registers used:
 22621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22622 ;; Tracked objects:
 22623 ;;		On entry : 0/0
 22624 ;;		On exit  : 0/0
 22625 ;;		Unchanged: 0/0
 22626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22628 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22630 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22631 ;;Total ram usage:       74 bytes
 22632 ;; Hardware stack levels used:    1
 22633 ;; Hardware stack levels required when called:   10
 22634 ;; This function calls:
 22635 ;;		Nothing
 22636 ;; This function is called by:
 22637 ;;		_display_prepare
 22638 ;; This function uses a non-reentrant model
 22639 ;;
 22640                           
 22641                           	psect	text102
 22642  00D220                     __ptext102:
 22643                           	opt stack 0
 22644  00D220                     __display_outputs:
 22645                           	opt stack 19
 22646                           
 22647                           ;incstack = 0
 22648                           ;__display_outputs@mode stored from wreg
 22649  00D220  0100               	movlb	0	; () banked
 22650  00D222  6FA8               	movwf	__display_outputs@mode& (0+255),b
 22651                           
 22652                           ;display.c: 338: uint8_t cntr;
 22653                           ;display.c: 339: const char header[] = "Power Outputs";
 22654  00D224  0E69               	movlw	low __display_outputs@F8722
 22655  00D226  6EF6               	movwf	tblptrl,c
 22656  00D228                     	if	1	;There is more than 1 active tblptr byte
 22657  00D228  0E92               	movlw	high __display_outputs@F8722
 22658  00D22A  6EF7               	movwf	tblptrh,c
 22659  00D22C                     	endif
 22660  00D22C                     	if	1	;There are 3 active tblptr bytes
 22661  00D22C  0E00               	movlw	low (__display_outputs@F8722 shr (0+16))
 22662  00D22E  6EF8               	movwf	tblptru,c
 22663  00D230                     	endif
 22664  00D230  EE20  F09A         	lfsr	2,__display_outputs@header
 22665  00D234  0E0D               	movlw	13
 22666  00D236                     u20970:
 22667  00D236  0009               	tblrd		*+
 22668  00D238  CFF5 FFDE          	movff	tablat,postinc2
 22669  00D23C  06E8               	decf	wreg,f,c
 22670  00D23E  E2FB               	bc	u20970
 22671                           
 22672                           ;display.c: 340: const char low[] = "Battery too low";
 22673  00D240  0E0B               	movlw	low __display_outputs@F8724
 22674  00D242  6EF6               	movwf	tblptrl,c
 22675  00D244                     	if	1	;There is more than 1 active tblptr byte
 22676  00D244  0E92               	movlw	high __display_outputs@F8724
 22677  00D246  6EF7               	movwf	tblptrh,c
 22678  00D248                     	endif
 22679  00D248                     	if	1	;There are 3 active tblptr bytes
 22680  00D248  0E00               	movlw	low (__display_outputs@F8724 shr (0+16))
 22681  00D24A  6EF8               	movwf	tblptru,c
 22682  00D24C                     	endif
 22683  00D24C  EE20  F08A         	lfsr	2,__display_outputs@low
 22684  00D250  0E0F               	movlw	15
 22685  00D252                     u20980:
 22686  00D252  0009               	tblrd		*+
 22687  00D254  CFF5 FFDE          	movff	tablat,postinc2
 22688  00D258  06E8               	decf	wreg,f,c
 22689  00D25A  E2FB               	bc	u20980
 22690                           
 22691                           ;display.c: 341: const char line3[] = "  Out1 off  Out2 off";
 22692  00D25C  0ECA               	movlw	low __display_outputs@F8726
 22693  00D25E  6EF6               	movwf	tblptrl,c
 22694  00D260                     	if	1	;There is more than 1 active tblptr byte
 22695  00D260  0E90               	movlw	high __display_outputs@F8726
 22696  00D262  6EF7               	movwf	tblptrh,c
 22697  00D264                     	endif
 22698  00D264                     	if	1	;There are 3 active tblptr bytes
 22699  00D264  0E00               	movlw	low (__display_outputs@F8726 shr (0+16))
 22700  00D266  6EF8               	movwf	tblptru,c
 22701  00D268                     	endif
 22702  00D268  EE20  F060         	lfsr	2,__display_outputs@line3
 22703  00D26C  0E14               	movlw	20
 22704  00D26E                     u20990:
 22705  00D26E  0009               	tblrd		*+
 22706  00D270  CFF5 FFDE          	movff	tablat,postinc2
 22707  00D274  06E8               	decf	wreg,f,c
 22708  00D276  E2FB               	bc	u20990
 22709                           
 22710                           ;display.c: 342: const char line4[] = "  Out3 off  Out4 off";
 22711  00D278  0EB5               	movlw	low __display_outputs@F8728
 22712  00D27A  6EF6               	movwf	tblptrl,c
 22713  00D27C                     	if	1	;There is more than 1 active tblptr byte
 22714  00D27C  0E90               	movlw	high __display_outputs@F8728
 22715  00D27E  6EF7               	movwf	tblptrh,c
 22716  00D280                     	endif
 22717  00D280                     	if	1	;There are 3 active tblptr bytes
 22718  00D280  0E00               	movlw	low (__display_outputs@F8728 shr (0+16))
 22719  00D282  6EF8               	movwf	tblptru,c
 22720  00D284                     	endif
 22721  00D284  EE20  F075         	lfsr	2,__display_outputs@line4
 22722  00D288  0E14               	movlw	20
 22723  00D28A                     u21000:
 22724  00D28A  0009               	tblrd		*+
 22725  00D28C  CFF5 FFDE          	movff	tablat,postinc2
 22726  00D290  06E8               	decf	wreg,f,c
 22727  00D292  E2FB               	bc	u21000
 22728                           
 22729                           ;display.c: 344: cntr = 0;
 22730  00D294  0E00               	movlw	0
 22731  00D296  0100               	movlb	0	; () banked
 22732  00D298  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22733                           
 22734                           ;display.c: 345: while(header[cntr])
 22735  00D29A  D016               	goto	l21431
 22736  00D29C                     l21427:
 22737                           
 22738                           ; BSR set to: 0
 22739                           ;display.c: 346: display_content[0][cntr] = header[cntr++];
 22740  00D29C  0100               	movlb	0	; () banked
 22741  00D29E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22742  00D2A0  0D01               	mullw	1
 22743  00D2A2  0E9A               	movlw	low __display_outputs@header
 22744  00D2A4  24F3               	addwf	prodl,w,c
 22745  00D2A6  6ED9               	movwf	fsr2l,c
 22746  00D2A8  0E00               	movlw	high __display_outputs@header
 22747  00D2AA  20F4               	addwfc	prodh,w,c
 22748  00D2AC  6EDA               	movwf	fsr2h,c
 22749  00D2AE  0100               	movlb	0	; () banked
 22750  00D2B0  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22751  00D2B2  0D01               	mullw	1
 22752  00D2B4  0E54               	movlw	low _display_content
 22753  00D2B6  24F3               	addwf	prodl,w,c
 22754  00D2B8  6EE1               	movwf	fsr1l,c
 22755  00D2BA  0E03               	movlw	high _display_content
 22756  00D2BC  20F4               	addwfc	prodh,w,c
 22757  00D2BE  6EE2               	movwf	fsr1h,c
 22758  00D2C0  CFDF FFE7          	movff	indf2,indf1
 22759                           
 22760                           ; BSR set to: 0
 22761  00D2C4  0100               	movlb	0	; () banked
 22762  00D2C6  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22763  00D2C8                     l21431:
 22764                           
 22765                           ; BSR set to: 0
 22766  00D2C8  0100               	movlb	0	; () banked
 22767  00D2CA  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22768  00D2CC  0D01               	mullw	1
 22769  00D2CE  0E9A               	movlw	low __display_outputs@header
 22770  00D2D0  24F3               	addwf	prodl,w,c
 22771  00D2D2  6ED9               	movwf	fsr2l,c
 22772  00D2D4  0E00               	movlw	high __display_outputs@header
 22773  00D2D6  20F4               	addwfc	prodh,w,c
 22774  00D2D8  6EDA               	movwf	fsr2h,c
 22775  00D2DA  50DF               	movf	indf2,w,c
 22776  00D2DC  A4D8               	btfss	status,2,c
 22777  00D2DE  D7DE               	goto	l21427
 22778                           
 22779                           ; BSR set to: 0
 22780                           ;display.c: 348: if(os.output_voltage<-1)
 22781                           
 22782                           ; BSR set to: 0
 22783  00D2E0  0102               	movlb	2	; () banked
 22784  00D2E2  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 22785  00D2E4  D02D               	goto	l21443
 22786  00D2E6  0102               	movlb	2	; () banked
 22787  00D2E8  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 22788  00D2EA  0EFF               	movlw	255
 22789  00D2EC  0102               	movlb	2	; () banked
 22790  00D2EE  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 22791  00D2F0  B0D8               	btfsc	status,0,c
 22792  00D2F2  D026               	goto	l21443
 22793                           
 22794                           ; BSR set to: 2
 22795                           ;display.c: 349: {
 22796                           ;display.c: 350: cntr = 0;
 22797  00D2F4  0E00               	movlw	0
 22798  00D2F6  0100               	movlb	0	; () banked
 22799  00D2F8  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22800                           
 22801                           ;display.c: 351: while(low[cntr])
 22802  00D2FA  D016               	goto	l21441
 22803  00D2FC                     l21437:
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;display.c: 352: display_content[1][cntr] = low[cntr++];
 22807  00D2FC  0100               	movlb	0	; () banked
 22808  00D2FE  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22809  00D300  0D01               	mullw	1
 22810  00D302  0E8A               	movlw	low __display_outputs@low
 22811  00D304  24F3               	addwf	prodl,w,c
 22812  00D306  6ED9               	movwf	fsr2l,c
 22813  00D308  0E00               	movlw	high __display_outputs@low
 22814  00D30A  20F4               	addwfc	prodh,w,c
 22815  00D30C  6EDA               	movwf	fsr2h,c
 22816  00D30E  0100               	movlb	0	; () banked
 22817  00D310  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22818  00D312  0D01               	mullw	1
 22819  00D314  0E68               	movlw	low (_display_content+20)
 22820  00D316  24F3               	addwf	prodl,w,c
 22821  00D318  6EE1               	movwf	fsr1l,c
 22822  00D31A  0E03               	movlw	high (_display_content+20)
 22823  00D31C  20F4               	addwfc	prodh,w,c
 22824  00D31E  6EE2               	movwf	fsr1h,c
 22825  00D320  CFDF FFE7          	movff	indf2,indf1
 22826                           
 22827                           ; BSR set to: 0
 22828  00D324  0100               	movlb	0	; () banked
 22829  00D326  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22830  00D328                     l21441:
 22831                           
 22832                           ; BSR set to: 0
 22833  00D328  0100               	movlb	0	; () banked
 22834  00D32A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22835  00D32C  0D01               	mullw	1
 22836  00D32E  0E8A               	movlw	low __display_outputs@low
 22837  00D330  24F3               	addwf	prodl,w,c
 22838  00D332  6ED9               	movwf	fsr2l,c
 22839  00D334  0E00               	movlw	high __display_outputs@low
 22840  00D336  20F4               	addwfc	prodh,w,c
 22841  00D338  6EDA               	movwf	fsr2h,c
 22842  00D33A  50DF               	movf	indf2,w,c
 22843  00D33C  A4D8               	btfss	status,2,c
 22844  00D33E  D7DE               	goto	l21437
 22845  00D340                     l21443:
 22846                           
 22847                           ;display.c: 353: }
 22848                           ;display.c: 355: cntr = 0;
 22849  00D340  0E00               	movlw	0
 22850  00D342  0100               	movlb	0	; () banked
 22851  00D344  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22852                           
 22853                           ;display.c: 356: while(line3[cntr])
 22854  00D346  D016               	goto	l21449
 22855  00D348                     l21445:
 22856                           
 22857                           ; BSR set to: 0
 22858                           ;display.c: 357: display_content[2][cntr] = line3[cntr++];
 22859  00D348  0100               	movlb	0	; () banked
 22860  00D34A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22861  00D34C  0D01               	mullw	1
 22862  00D34E  0E60               	movlw	low __display_outputs@line3
 22863  00D350  24F3               	addwf	prodl,w,c
 22864  00D352  6ED9               	movwf	fsr2l,c
 22865  00D354  0E00               	movlw	high __display_outputs@line3
 22866  00D356  20F4               	addwfc	prodh,w,c
 22867  00D358  6EDA               	movwf	fsr2h,c
 22868  00D35A  0100               	movlb	0	; () banked
 22869  00D35C  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22870  00D35E  0D01               	mullw	1
 22871  00D360  0E7C               	movlw	low (_display_content+40)
 22872  00D362  24F3               	addwf	prodl,w,c
 22873  00D364  6EE1               	movwf	fsr1l,c
 22874  00D366  0E03               	movlw	high (_display_content+40)
 22875  00D368  20F4               	addwfc	prodh,w,c
 22876  00D36A  6EE2               	movwf	fsr1h,c
 22877  00D36C  CFDF FFE7          	movff	indf2,indf1
 22878                           
 22879                           ; BSR set to: 0
 22880  00D370  0100               	movlb	0	; () banked
 22881  00D372  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22882  00D374                     l21449:
 22883                           
 22884                           ; BSR set to: 0
 22885  00D374  0100               	movlb	0	; () banked
 22886  00D376  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22887  00D378  0D01               	mullw	1
 22888  00D37A  0E60               	movlw	low __display_outputs@line3
 22889  00D37C  24F3               	addwf	prodl,w,c
 22890  00D37E  6ED9               	movwf	fsr2l,c
 22891  00D380  0E00               	movlw	high __display_outputs@line3
 22892  00D382  20F4               	addwfc	prodh,w,c
 22893  00D384  6EDA               	movwf	fsr2h,c
 22894  00D386  50DF               	movf	indf2,w,c
 22895  00D388  A4D8               	btfss	status,2,c
 22896  00D38A  D7DE               	goto	l21445
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;display.c: 359: cntr = 0;
 22900                           
 22901                           ; BSR set to: 0
 22902  00D38C  0E00               	movlw	0
 22903  00D38E  0100               	movlb	0	; () banked
 22904  00D390  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22905                           
 22906                           ;display.c: 360: while(line4[cntr])
 22907  00D392  D016               	goto	l21457
 22908  00D394                     l21453:
 22909                           
 22910                           ; BSR set to: 0
 22911                           ;display.c: 361: display_content[3][cntr] = line4[cntr++];
 22912  00D394  0100               	movlb	0	; () banked
 22913  00D396  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22914  00D398  0D01               	mullw	1
 22915  00D39A  0E75               	movlw	low __display_outputs@line4
 22916  00D39C  24F3               	addwf	prodl,w,c
 22917  00D39E  6ED9               	movwf	fsr2l,c
 22918  00D3A0  0E00               	movlw	high __display_outputs@line4
 22919  00D3A2  20F4               	addwfc	prodh,w,c
 22920  00D3A4  6EDA               	movwf	fsr2h,c
 22921  00D3A6  0100               	movlb	0	; () banked
 22922  00D3A8  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22923  00D3AA  0D01               	mullw	1
 22924  00D3AC  0E90               	movlw	low (_display_content+60)
 22925  00D3AE  24F3               	addwf	prodl,w,c
 22926  00D3B0  6EE1               	movwf	fsr1l,c
 22927  00D3B2  0E03               	movlw	high (_display_content+60)
 22928  00D3B4  20F4               	addwfc	prodh,w,c
 22929  00D3B6  6EE2               	movwf	fsr1h,c
 22930  00D3B8  CFDF FFE7          	movff	indf2,indf1
 22931                           
 22932                           ; BSR set to: 0
 22933  00D3BC  0100               	movlb	0	; () banked
 22934  00D3BE  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22935  00D3C0                     l21457:
 22936                           
 22937                           ; BSR set to: 0
 22938  00D3C0  0100               	movlb	0	; () banked
 22939  00D3C2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22940  00D3C4  0D01               	mullw	1
 22941  00D3C6  0E75               	movlw	low __display_outputs@line4
 22942  00D3C8  24F3               	addwf	prodl,w,c
 22943  00D3CA  6ED9               	movwf	fsr2l,c
 22944  00D3CC  0E00               	movlw	high __display_outputs@line4
 22945  00D3CE  20F4               	addwfc	prodh,w,c
 22946  00D3D0  6EDA               	movwf	fsr2h,c
 22947  00D3D2  50DF               	movf	indf2,w,c
 22948  00D3D4  A4D8               	btfss	status,2,c
 22949  00D3D6  D7DE               	goto	l21453
 22950                           
 22951                           ; BSR set to: 0
 22952                           ;display.c: 363: if(os.outputs & OUTPUT_1)
 22953  00D3D8  0102               	movlb	2	; () banked
 22954  00D3DA  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 22955  00D3DC  D006               	goto	l21461
 22956                           
 22957                           ; BSR set to: 2
 22958                           ;display.c: 364: {
 22959                           ;display.c: 365: display_content[2][8] = 'n';
 22960  00D3DE  0E6E               	movlw	110
 22961  00D3E0  0103               	movlb	3	; () banked
 22962  00D3E2  6F84               	movwf	(_display_content+48)& (0+255),b
 22963                           
 22964                           ;display.c: 366: display_content[2][9] = ' ';
 22965  00D3E4  0E20               	movlw	32
 22966  00D3E6  0103               	movlb	3	; () banked
 22967  00D3E8  6F85               	movwf	(_display_content+49)& (0+255),b
 22968  00D3EA                     l21461:
 22969                           
 22970                           ;display.c: 367: }
 22971                           ;display.c: 368: if(os.outputs & OUTPUT_2)
 22972  00D3EA  0102               	movlb	2	; () banked
 22973  00D3EC  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 22974  00D3EE  D006               	goto	l21465
 22975                           
 22976                           ; BSR set to: 2
 22977                           ;display.c: 369: {
 22978                           ;display.c: 370: display_content[2][18] = 'n';
 22979  00D3F0  0E6E               	movlw	110
 22980  00D3F2  0103               	movlb	3	; () banked
 22981  00D3F4  6F8E               	movwf	(_display_content+58)& (0+255),b
 22982                           
 22983                           ;display.c: 371: display_content[2][19] = ' ';
 22984  00D3F6  0E20               	movlw	32
 22985  00D3F8  0103               	movlb	3	; () banked
 22986  00D3FA  6F8F               	movwf	(_display_content+59)& (0+255),b
 22987  00D3FC                     l21465:
 22988                           
 22989                           ;display.c: 372: }
 22990                           ;display.c: 373: if(os.outputs & OUTPUT_3)
 22991  00D3FC  0102               	movlb	2	; () banked
 22992  00D3FE  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 22993  00D400  D006               	goto	l21469
 22994                           
 22995                           ; BSR set to: 2
 22996                           ;display.c: 374: {
 22997                           ;display.c: 375: display_content[3][8] = 'n';
 22998  00D402  0E6E               	movlw	110
 22999  00D404  0103               	movlb	3	; () banked
 23000  00D406  6F98               	movwf	(_display_content+68)& (0+255),b
 23001                           
 23002                           ;display.c: 376: display_content[3][9] = ' ';
 23003  00D408  0E20               	movlw	32
 23004  00D40A  0103               	movlb	3	; () banked
 23005  00D40C  6F99               	movwf	(_display_content+69)& (0+255),b
 23006  00D40E                     l21469:
 23007                           
 23008                           ;display.c: 377: }
 23009                           ;display.c: 378: if(os.outputs & OUTPUT_4)
 23010  00D40E  0102               	movlb	2	; () banked
 23011  00D410  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 23012  00D412  D023               	goto	l21483
 23013                           
 23014                           ; BSR set to: 2
 23015                           ;display.c: 379: {
 23016                           ;display.c: 380: display_content[3][18] = 'n';
 23017  00D414  0E6E               	movlw	110
 23018  00D416  0103               	movlb	3	; () banked
 23019  00D418  6FA2               	movwf	(_display_content+78)& (0+255),b
 23020                           
 23021                           ;display.c: 381: display_content[3][19] = ' ';
 23022  00D41A  0E20               	movlw	32
 23023  00D41C  0103               	movlb	3	; () banked
 23024  00D41E  6FA3               	movwf	(_display_content+79)& (0+255),b
 23025                           
 23026                           ; BSR set to: 3
 23027                           ;display.c: 382: }
 23028                           ;display.c: 384: switch(mode)
 23029  00D420  D01C               	goto	l21483
 23030  00D422                     l21473:
 23031                           
 23032                           ;display.c: 387: display_content[2][0] = '-';
 23033  00D422  0E2D               	movlw	45
 23034  00D424  0103               	movlb	3	; () banked
 23035  00D426  6F7C               	movwf	(_display_content+40)& (0+255),b
 23036                           
 23037                           ;display.c: 388: display_content[2][1] = '>';
 23038  00D428  0E3E               	movlw	62
 23039  00D42A  0103               	movlb	3	; () banked
 23040  00D42C  6F7D               	movwf	(_display_content+41)& (0+255),b
 23041                           
 23042                           ;display.c: 389: break;
 23043  00D42E  0012               	return	
 23044  00D430                     l21475:
 23045                           
 23046                           ;display.c: 391: display_content[2][10] = '-';
 23047  00D430  0E2D               	movlw	45
 23048  00D432  0103               	movlb	3	; () banked
 23049  00D434  6F86               	movwf	(_display_content+50)& (0+255),b
 23050                           
 23051                           ;display.c: 392: display_content[2][11] = '>';
 23052  00D436  0E3E               	movlw	62
 23053  00D438  0103               	movlb	3	; () banked
 23054  00D43A  6F87               	movwf	(_display_content+51)& (0+255),b
 23055                           
 23056                           ;display.c: 393: break;
 23057  00D43C  0012               	return	
 23058  00D43E                     l21477:
 23059                           
 23060                           ;display.c: 395: display_content[3][0] = '-';
 23061  00D43E  0E2D               	movlw	45
 23062  00D440  0103               	movlb	3	; () banked
 23063  00D442  6F90               	movwf	(_display_content+60)& (0+255),b
 23064                           
 23065                           ;display.c: 396: display_content[3][1] = '>';
 23066  00D444  0E3E               	movlw	62
 23067  00D446  0103               	movlb	3	; () banked
 23068  00D448  6F91               	movwf	(_display_content+61)& (0+255),b
 23069                           
 23070                           ;display.c: 397: break;
 23071  00D44A  0012               	return	
 23072  00D44C                     l21479:
 23073                           
 23074                           ;display.c: 399: display_content[3][10] = '-';
 23075  00D44C  0E2D               	movlw	45
 23076  00D44E  0103               	movlb	3	; () banked
 23077  00D450  6F9A               	movwf	(_display_content+70)& (0+255),b
 23078                           
 23079                           ;display.c: 400: display_content[3][11] = '>';
 23080  00D452  0E3E               	movlw	62
 23081  00D454  0103               	movlb	3	; () banked
 23082  00D456  6F9B               	movwf	(_display_content+71)& (0+255),b
 23083                           
 23084                           ; BSR set to: 3
 23085                           ;display.c: 402: }
 23086                           
 23087                           ;display.c: 401: break;
 23088  00D458  0012               	return	
 23089  00D45A                     l21483:
 23090  00D45A  0100               	movlb	0	; () banked
 23091  00D45C  51A8               	movf	__display_outputs@mode& (0+255),w,b
 23092                           
 23093                           ; Switch size 1, requested type "space"
 23094                           ; Number of cases is 4, Range of values is 49 to 52
 23095                           ; switch strategies available:
 23096                           ; Name         Instructions Cycles
 23097                           ; simple_byte           13     7 (average)
 23098                           ;	Chosen strategy is simple_byte
 23099  00D45E  0A31               	xorlw	49	; case 49
 23100  00D460  B4D8               	btfsc	status,2,c
 23101  00D462  D7DF               	goto	l21473
 23102  00D464  0A03               	xorlw	3	; case 50
 23103  00D466  B4D8               	btfsc	status,2,c
 23104  00D468  D7E3               	goto	l21475
 23105  00D46A  0A01               	xorlw	1	; case 51
 23106  00D46C  B4D8               	btfsc	status,2,c
 23107  00D46E  D7E7               	goto	l21477
 23108  00D470  0A07               	xorlw	7	; case 52
 23109  00D472  A4D8               	btfss	status,2,c
 23110  00D474  0012               	return	
 23111  00D476  D7EA               	goto	l21479
 23112  00D478                     __end_of__display_outputs:
 23113                           	opt stack 0
 23114                           tblptru	equ	0xFF8
 23115                           tblptrh	equ	0xFF7
 23116                           tblptrl	equ	0xFF6
 23117                           tablat	equ	0xFF5
 23118                           prodh	equ	0xFF4
 23119                           prodl	equ	0xFF3
 23120                           intcon	equ	0xFF2
 23121                           intcon2	equ	0xFF1
 23122                           intcon3	equ	0xFF0
 23123                           postinc0	equ	0xFEE
 23124                           wreg	equ	0xFE8
 23125                           indf1	equ	0xFE7
 23126                           postinc1	equ	0xFE6
 23127                           postdec1	equ	0xFE5
 23128                           plusw1	equ	0xFE3
 23129                           fsr1h	equ	0xFE2
 23130                           fsr1l	equ	0xFE1
 23131                           indf2	equ	0xFDF
 23132                           postinc2	equ	0xFDE
 23133                           postdec2	equ	0xFDD
 23134                           plusw2	equ	0xFDB
 23135                           fsr2h	equ	0xFDA
 23136                           fsr2l	equ	0xFD9
 23137                           status	equ	0xFD8
 23138                           
 23139 ;; *************** function __display_inout *****************
 23140 ;; Defined at:
 23141 ;;		line 141 in file "display.c"
 23142 ;; Parameters:    Size  Location     Type
 23143 ;;		None
 23144 ;; Auto vars:     Size  Location     Type
 23145 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 23146 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 23147 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 23148 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 23149 ;;  cntr            1  101[BANK0 ] unsigned char 
 23150 ;; Return value:  Size  Location     Type
 23151 ;;                  1    wreg      void 
 23152 ;; Registers used:
 23153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23154 ;; Tracked objects:
 23155 ;;		On entry : 0/0
 23156 ;;		On exit  : 0/0
 23157 ;;		Unchanged: 0/0
 23158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23160 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23162 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23163 ;;Total ram usage:       54 bytes
 23164 ;; Hardware stack levels used:    1
 23165 ;; Hardware stack levels required when called:   14
 23166 ;; This function calls:
 23167 ;;		__display_itoa
 23168 ;;		_buck_get_mode
 23169 ;; This function is called by:
 23170 ;;		_display_prepare
 23171 ;; This function uses a non-reentrant model
 23172 ;;
 23173                           
 23174                           	psect	text103
 23175  00D478                     __ptext103:
 23176                           	opt stack 0
 23177  00D478                     __display_inout:
 23178                           	opt stack 15
 23179                           
 23180                           ;display.c: 143: uint8_t cntr;
 23181                           ;display.c: 144: const char line1[] = "Voltage & Current";
 23182                           
 23183                           ;incstack = 0
 23184  00D478  0ED8               	movlw	low __display_inout@F8665
 23185  00D47A  6EF6               	movwf	tblptrl,c
 23186  00D47C                     	if	1	;There is more than 1 active tblptr byte
 23187  00D47C  0E91               	movlw	high __display_inout@F8665
 23188  00D47E  6EF7               	movwf	tblptrh,c
 23189  00D480                     	endif
 23190  00D480                     	if	1	;There are 3 active tblptr bytes
 23191  00D480  0E00               	movlw	low (__display_inout@F8665 shr (0+16))
 23192  00D482  6EF8               	movwf	tblptru,c
 23193  00D484                     	endif
 23194  00D484  EE20  F090         	lfsr	2,__display_inout@line1
 23195  00D488  0E11               	movlw	17
 23196  00D48A                     u20510:
 23197  00D48A  0009               	tblrd		*+
 23198  00D48C  CFF5 FFDE          	movff	tablat,postinc2
 23199  00D490  06E8               	decf	wreg,f,c
 23200  00D492  E2FB               	bc	u20510
 23201                           
 23202                           ;display.c: 145: const char line2[] = "   Input   Output";
 23203  00D494  0EC6               	movlw	low __display_inout@F8667
 23204  00D496  6EF6               	movwf	tblptrl,c
 23205  00D498                     	if	1	;There is more than 1 active tblptr byte
 23206  00D498  0E91               	movlw	high __display_inout@F8667
 23207  00D49A  6EF7               	movwf	tblptrh,c
 23208  00D49C                     	endif
 23209  00D49C                     	if	1	;There are 3 active tblptr bytes
 23210  00D49C  0E00               	movlw	low (__display_inout@F8667 shr (0+16))
 23211  00D49E  6EF8               	movwf	tblptru,c
 23212  00D4A0                     	endif
 23213  00D4A0  EE20  F0A2         	lfsr	2,__display_inout@line2
 23214  00D4A4  0E11               	movlw	17
 23215  00D4A6                     u20520:
 23216  00D4A6  0009               	tblrd		*+
 23217  00D4A8  CFF5 FFDE          	movff	tablat,postinc2
 23218  00D4AC  06E8               	decf	wreg,f,c
 23219  00D4AE  E2FB               	bc	u20520
 23220                           
 23221                           ;display.c: 146: const char line3[] = "V:";
 23222  00D4B0  0E16               	movlw	low __display_inout@F8669
 23223  00D4B2  6EF6               	movwf	tblptrl,c
 23224  00D4B4                     	if	1	;There is more than 1 active tblptr byte
 23225  00D4B4  0E93               	movlw	high __display_inout@F8669
 23226  00D4B6  6EF7               	movwf	tblptrh,c
 23227  00D4B8                     	endif
 23228  00D4B8                     	if	1	;There are 3 active tblptr bytes
 23229  00D4B8  0E00               	movlw	low (__display_inout@F8669 shr (0+16))
 23230  00D4BA  6EF8               	movwf	tblptru,c
 23231  00D4BC                     	endif
 23232  00D4BC  0009               	tblrd		*+
 23233  00D4BE  CFF5 F0C2          	movff	tablat,__display_inout@line3
 23234  00D4C2  0009               	tblrd		*+
 23235  00D4C4  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 23236  00D4C8  000A               	tblrd		*-
 23237  00D4CA  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 23238                           
 23239                           ;display.c: 147: const char line4[] = "A: --      --";
 23240  00D4CE  0E85               	movlw	low __display_inout@F8671
 23241  00D4D0  6EF6               	movwf	tblptrl,c
 23242  00D4D2                     	if	1	;There is more than 1 active tblptr byte
 23243  00D4D2  0E92               	movlw	high __display_inout@F8671
 23244  00D4D4  6EF7               	movwf	tblptrh,c
 23245  00D4D6                     	endif
 23246  00D4D6                     	if	1	;There are 3 active tblptr bytes
 23247  00D4D6  0E00               	movlw	low (__display_inout@F8671 shr (0+16))
 23248  00D4D8  6EF8               	movwf	tblptru,c
 23249  00D4DA                     	endif
 23250  00D4DA  EE20  F0B4         	lfsr	2,__display_inout@line4
 23251  00D4DE  0E0D               	movlw	13
 23252  00D4E0                     u20530:
 23253  00D4E0  0009               	tblrd		*+
 23254  00D4E2  CFF5 FFDE          	movff	tablat,postinc2
 23255  00D4E6  06E8               	decf	wreg,f,c
 23256  00D4E8  E2FB               	bc	u20530
 23257                           
 23258                           ;display.c: 149: cntr = 0;
 23259  00D4EA  0E00               	movlw	0
 23260  00D4EC  0100               	movlb	0	; () banked
 23261  00D4EE  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23262                           
 23263                           ;display.c: 150: while(line1[cntr])
 23264  00D4F0  D016               	goto	l21197
 23265  00D4F2                     l21193:
 23266                           
 23267                           ; BSR set to: 0
 23268                           ;display.c: 151: display_content[0][cntr] = line1[cntr++];
 23269  00D4F2  0100               	movlb	0	; () banked
 23270  00D4F4  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23271  00D4F6  0D01               	mullw	1
 23272  00D4F8  0E90               	movlw	low __display_inout@line1
 23273  00D4FA  24F3               	addwf	prodl,w,c
 23274  00D4FC  6ED9               	movwf	fsr2l,c
 23275  00D4FE  0E00               	movlw	high __display_inout@line1
 23276  00D500  20F4               	addwfc	prodh,w,c
 23277  00D502  6EDA               	movwf	fsr2h,c
 23278  00D504  0100               	movlb	0	; () banked
 23279  00D506  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23280  00D508  0D01               	mullw	1
 23281  00D50A  0E54               	movlw	low _display_content
 23282  00D50C  24F3               	addwf	prodl,w,c
 23283  00D50E  6EE1               	movwf	fsr1l,c
 23284  00D510  0E03               	movlw	high _display_content
 23285  00D512  20F4               	addwfc	prodh,w,c
 23286  00D514  6EE2               	movwf	fsr1h,c
 23287  00D516  CFDF FFE7          	movff	indf2,indf1
 23288                           
 23289                           ; BSR set to: 0
 23290  00D51A  0100               	movlb	0	; () banked
 23291  00D51C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23292  00D51E                     l21197:
 23293                           
 23294                           ; BSR set to: 0
 23295  00D51E  0100               	movlb	0	; () banked
 23296  00D520  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23297  00D522  0D01               	mullw	1
 23298  00D524  0E90               	movlw	low __display_inout@line1
 23299  00D526  24F3               	addwf	prodl,w,c
 23300  00D528  6ED9               	movwf	fsr2l,c
 23301  00D52A  0E00               	movlw	high __display_inout@line1
 23302  00D52C  20F4               	addwfc	prodh,w,c
 23303  00D52E  6EDA               	movwf	fsr2h,c
 23304  00D530  50DF               	movf	indf2,w,c
 23305  00D532  A4D8               	btfss	status,2,c
 23306  00D534  D7DE               	goto	l21193
 23307                           
 23308                           ; BSR set to: 0
 23309                           ;display.c: 153: cntr = 0;
 23310                           
 23311                           ; BSR set to: 0
 23312  00D536  0E00               	movlw	0
 23313  00D538  0100               	movlb	0	; () banked
 23314  00D53A  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23315                           
 23316                           ;display.c: 154: while(line2[cntr])
 23317  00D53C  D016               	goto	l21205
 23318  00D53E                     l21201:
 23319                           
 23320                           ; BSR set to: 0
 23321                           ;display.c: 155: display_content[1][cntr] = line2[cntr++];
 23322  00D53E  0100               	movlb	0	; () banked
 23323  00D540  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23324  00D542  0D01               	mullw	1
 23325  00D544  0EA2               	movlw	low __display_inout@line2
 23326  00D546  24F3               	addwf	prodl,w,c
 23327  00D548  6ED9               	movwf	fsr2l,c
 23328  00D54A  0E00               	movlw	high __display_inout@line2
 23329  00D54C  20F4               	addwfc	prodh,w,c
 23330  00D54E  6EDA               	movwf	fsr2h,c
 23331  00D550  0100               	movlb	0	; () banked
 23332  00D552  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23333  00D554  0D01               	mullw	1
 23334  00D556  0E68               	movlw	low (_display_content+20)
 23335  00D558  24F3               	addwf	prodl,w,c
 23336  00D55A  6EE1               	movwf	fsr1l,c
 23337  00D55C  0E03               	movlw	high (_display_content+20)
 23338  00D55E  20F4               	addwfc	prodh,w,c
 23339  00D560  6EE2               	movwf	fsr1h,c
 23340  00D562  CFDF FFE7          	movff	indf2,indf1
 23341                           
 23342                           ; BSR set to: 0
 23343  00D566  0100               	movlb	0	; () banked
 23344  00D568  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23345  00D56A                     l21205:
 23346                           
 23347                           ; BSR set to: 0
 23348  00D56A  0100               	movlb	0	; () banked
 23349  00D56C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23350  00D56E  0D01               	mullw	1
 23351  00D570  0EA2               	movlw	low __display_inout@line2
 23352  00D572  24F3               	addwf	prodl,w,c
 23353  00D574  6ED9               	movwf	fsr2l,c
 23354  00D576  0E00               	movlw	high __display_inout@line2
 23355  00D578  20F4               	addwfc	prodh,w,c
 23356  00D57A  6EDA               	movwf	fsr2h,c
 23357  00D57C  50DF               	movf	indf2,w,c
 23358  00D57E  A4D8               	btfss	status,2,c
 23359  00D580  D7DE               	goto	l21201
 23360                           
 23361                           ; BSR set to: 0
 23362                           ;display.c: 157: cntr = 0;
 23363                           
 23364                           ; BSR set to: 0
 23365  00D582  0E00               	movlw	0
 23366  00D584  0100               	movlb	0	; () banked
 23367  00D586  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23368                           
 23369                           ;display.c: 158: while(line3[cntr])
 23370  00D588  D016               	goto	l21213
 23371  00D58A                     l21209:
 23372                           
 23373                           ; BSR set to: 0
 23374                           ;display.c: 159: display_content[2][cntr] = line3[cntr++];
 23375  00D58A  0100               	movlb	0	; () banked
 23376  00D58C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23377  00D58E  0D01               	mullw	1
 23378  00D590  0EC2               	movlw	low __display_inout@line3
 23379  00D592  24F3               	addwf	prodl,w,c
 23380  00D594  6ED9               	movwf	fsr2l,c
 23381  00D596  0E00               	movlw	high __display_inout@line3
 23382  00D598  20F4               	addwfc	prodh,w,c
 23383  00D59A  6EDA               	movwf	fsr2h,c
 23384  00D59C  0100               	movlb	0	; () banked
 23385  00D59E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23386  00D5A0  0D01               	mullw	1
 23387  00D5A2  0E7C               	movlw	low (_display_content+40)
 23388  00D5A4  24F3               	addwf	prodl,w,c
 23389  00D5A6  6EE1               	movwf	fsr1l,c
 23390  00D5A8  0E03               	movlw	high (_display_content+40)
 23391  00D5AA  20F4               	addwfc	prodh,w,c
 23392  00D5AC  6EE2               	movwf	fsr1h,c
 23393  00D5AE  CFDF FFE7          	movff	indf2,indf1
 23394                           
 23395                           ; BSR set to: 0
 23396  00D5B2  0100               	movlb	0	; () banked
 23397  00D5B4  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23398  00D5B6                     l21213:
 23399                           
 23400                           ; BSR set to: 0
 23401  00D5B6  0100               	movlb	0	; () banked
 23402  00D5B8  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23403  00D5BA  0D01               	mullw	1
 23404  00D5BC  0EC2               	movlw	low __display_inout@line3
 23405  00D5BE  24F3               	addwf	prodl,w,c
 23406  00D5C0  6ED9               	movwf	fsr2l,c
 23407  00D5C2  0E00               	movlw	high __display_inout@line3
 23408  00D5C4  20F4               	addwfc	prodh,w,c
 23409  00D5C6  6EDA               	movwf	fsr2h,c
 23410  00D5C8  50DF               	movf	indf2,w,c
 23411  00D5CA  A4D8               	btfss	status,2,c
 23412  00D5CC  D7DE               	goto	l21209
 23413                           
 23414                           ; BSR set to: 0
 23415                           ;display.c: 160: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 23416                           
 23417                           ; BSR set to: 0
 23418  00D5CE  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 23419  00D5D2  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 23420  00D5D6  0E03               	movlw	3
 23421  00D5D8  0100               	movlb	0	; () banked
 23422  00D5DA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23423  00D5DC  0E7F               	movlw	low (_display_content+43)
 23424  00D5DE  0100               	movlb	0	; () banked
 23425  00D5E0  6F7B               	movwf	__display_itoa@text& (0+255),b
 23426  00D5E2  0E03               	movlw	high (_display_content+43)
 23427  00D5E4  0100               	movlb	0	; () banked
 23428  00D5E6  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23429  00D5E8  ECBE  F063         	call	__display_itoa	;wreg free
 23430                           
 23431                           ;display.c: 161: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 23432  00D5EC  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 23433  00D5F0  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 23434  00D5F4  0E03               	movlw	3
 23435  00D5F6  0100               	movlb	0	; () banked
 23436  00D5F8  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23437  00D5FA  0E87               	movlw	low (_display_content+51)
 23438  00D5FC  0100               	movlb	0	; () banked
 23439  00D5FE  6F7B               	movwf	__display_itoa@text& (0+255),b
 23440  00D600  0E03               	movlw	high (_display_content+51)
 23441  00D602  0100               	movlb	0	; () banked
 23442  00D604  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23443  00D606  ECBE  F063         	call	__display_itoa	;wreg free
 23444                           
 23445                           ;display.c: 163: cntr = 0;
 23446  00D60A  0E00               	movlw	0
 23447  00D60C  0100               	movlb	0	; () banked
 23448  00D60E  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23449                           
 23450                           ;display.c: 164: while(line4[cntr])
 23451  00D610  D016               	goto	l21223
 23452  00D612                     l21219:
 23453                           
 23454                           ; BSR set to: 0
 23455                           ;display.c: 165: display_content[3][cntr] = line4[cntr++];
 23456  00D612  0100               	movlb	0	; () banked
 23457  00D614  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23458  00D616  0D01               	mullw	1
 23459  00D618  0EB4               	movlw	low __display_inout@line4
 23460  00D61A  24F3               	addwf	prodl,w,c
 23461  00D61C  6ED9               	movwf	fsr2l,c
 23462  00D61E  0E00               	movlw	high __display_inout@line4
 23463  00D620  20F4               	addwfc	prodh,w,c
 23464  00D622  6EDA               	movwf	fsr2h,c
 23465  00D624  0100               	movlb	0	; () banked
 23466  00D626  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23467  00D628  0D01               	mullw	1
 23468  00D62A  0E90               	movlw	low (_display_content+60)
 23469  00D62C  24F3               	addwf	prodl,w,c
 23470  00D62E  6EE1               	movwf	fsr1l,c
 23471  00D630  0E03               	movlw	high (_display_content+60)
 23472  00D632  20F4               	addwfc	prodh,w,c
 23473  00D634  6EE2               	movwf	fsr1h,c
 23474  00D636  CFDF FFE7          	movff	indf2,indf1
 23475                           
 23476                           ; BSR set to: 0
 23477  00D63A  0100               	movlb	0	; () banked
 23478  00D63C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23479  00D63E                     l21223:
 23480                           
 23481                           ; BSR set to: 0
 23482  00D63E  0100               	movlb	0	; () banked
 23483  00D640  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23484  00D642  0D01               	mullw	1
 23485  00D644  0EB4               	movlw	low __display_inout@line4
 23486  00D646  24F3               	addwf	prodl,w,c
 23487  00D648  6ED9               	movwf	fsr2l,c
 23488  00D64A  0E00               	movlw	high __display_inout@line4
 23489  00D64C  20F4               	addwfc	prodh,w,c
 23490  00D64E  6EDA               	movwf	fsr2h,c
 23491  00D650  50DF               	movf	indf2,w,c
 23492  00D652  A4D8               	btfss	status,2,c
 23493  00D654  D7DE               	goto	l21219
 23494                           
 23495                           ;display.c: 167: {
 23496                           ;display.c: 168: _display_itoa(os.input_current, 3, &display_content[3][3]);
 23497                           
 23498                           ; BSR set to: 0
 23499                           
 23500                           ; BSR set to: 0
 23501                           ;display.c: 166: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 23502  00D656  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 23503  00D65A  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 23504  00D65E  0E03               	movlw	3
 23505  00D660  0100               	movlb	0	; () banked
 23506  00D662  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23507  00D664  0E93               	movlw	low (_display_content+63)
 23508  00D666  0100               	movlb	0	; () banked
 23509  00D668  6F7B               	movwf	__display_itoa@text& (0+255),b
 23510  00D66A  0E03               	movlw	high (_display_content+63)
 23511  00D66C  0100               	movlb	0	; () banked
 23512  00D66E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23513  00D670  ECBE  F063         	call	__display_itoa	;wreg free
 23514                           
 23515                           ;display.c: 169: _display_itoa(os.output_current, 3, &display_content[3][11]);
 23516  00D674  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 23517  00D678  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 23518  00D67C  0E03               	movlw	3
 23519  00D67E  0100               	movlb	0	; () banked
 23520  00D680  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23521  00D682  0E9B               	movlw	low (_display_content+71)
 23522  00D684  0100               	movlb	0	; () banked
 23523  00D686  6F7B               	movwf	__display_itoa@text& (0+255),b
 23524  00D688  0E03               	movlw	high (_display_content+71)
 23525  00D68A  0100               	movlb	0	; () banked
 23526  00D68C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23527  00D68E  ECBE  F063         	call	__display_itoa	;wreg free
 23528  00D692  0012               	return	
 23529  00D694                     __end_of__display_inout:
 23530                           	opt stack 0
 23531                           tblptru	equ	0xFF8
 23532                           tblptrh	equ	0xFF7
 23533                           tblptrl	equ	0xFF6
 23534                           tablat	equ	0xFF5
 23535                           prodh	equ	0xFF4
 23536                           prodl	equ	0xFF3
 23537                           intcon	equ	0xFF2
 23538                           intcon2	equ	0xFF1
 23539                           intcon3	equ	0xFF0
 23540                           postinc0	equ	0xFEE
 23541                           wreg	equ	0xFE8
 23542                           indf1	equ	0xFE7
 23543                           postinc1	equ	0xFE6
 23544                           postdec1	equ	0xFE5
 23545                           plusw1	equ	0xFE3
 23546                           fsr1h	equ	0xFE2
 23547                           fsr1l	equ	0xFE1
 23548                           indf2	equ	0xFDF
 23549                           postinc2	equ	0xFDE
 23550                           postdec2	equ	0xFDD
 23551                           plusw2	equ	0xFDB
 23552                           fsr2h	equ	0xFDA
 23553                           fsr2l	equ	0xFD9
 23554                           status	equ	0xFD8
 23555                           
 23556 ;; *************** function __display_efficiency *****************
 23557 ;; Defined at:
 23558 ;;		line 475 in file "display.c"
 23559 ;; Parameters:    Size  Location     Type
 23560 ;;		None
 23561 ;; Auto vars:     Size  Location     Type
 23562 ;;  source         19   69[BANK0 ] const unsigned char [19]
 23563 ;;  header         19   50[BANK0 ] const unsigned char [19]
 23564 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 23565 ;;  battery         4  109[BANK0 ] long 
 23566 ;;  panel           4  105[BANK0 ] long 
 23567 ;;  efficiency      3  102[BANK0 ] float 
 23568 ;;  cntr            1  113[BANK0 ] unsigned char 
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  1    wreg      void 
 23571 ;; Registers used:
 23572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23573 ;; Tracked objects:
 23574 ;;		On entry : 0/0
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23579 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23581 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23582 ;;Total ram usage:       66 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; Hardware stack levels required when called:   14
 23585 ;; This function calls:
 23586 ;;		___aldiv
 23587 ;;		___altoft
 23588 ;;		___fttol
 23589 ;;		___lmul
 23590 ;;		__display_itoa
 23591 ;; This function is called by:
 23592 ;;		_display_prepare
 23593 ;; This function uses a non-reentrant model
 23594 ;;
 23595                           
 23596                           	psect	text104
 23597  00B496                     __ptext104:
 23598                           	opt stack 0
 23599  00B496                     __display_efficiency:
 23600                           	opt stack 15
 23601                           
 23602                           ;display.c: 477: uint8_t cntr;
 23603                           ;display.c: 478: const char header[] = "Charger Efficiency";
 23604                           
 23605                           ;incstack = 0
 23606  00B496  0E6A               	movlw	low __display_efficiency@F8753
 23607  00B498  6EF6               	movwf	tblptrl,c
 23608  00B49A                     	if	1	;There is more than 1 active tblptr byte
 23609  00B49A  0E91               	movlw	high __display_efficiency@F8753
 23610  00B49C  6EF7               	movwf	tblptrh,c
 23611  00B49E                     	endif
 23612  00B49E                     	if	1	;There are 3 active tblptr bytes
 23613  00B49E  0E00               	movlw	low (__display_efficiency@F8753 shr (0+16))
 23614  00B4A0  6EF8               	movwf	tblptru,c
 23615  00B4A2                     	endif
 23616  00B4A2  EE20  F092         	lfsr	2,__display_efficiency@header
 23617  00B4A6  0E12               	movlw	18
 23618  00B4A8                     u21270:
 23619  00B4A8  0009               	tblrd		*+
 23620  00B4AA  CFF5 FFDE          	movff	tablat,postinc2
 23621  00B4AE  06E8               	decf	wreg,f,c
 23622  00B4B0  E2FB               	bc	u21270
 23623                           
 23624                           ;display.c: 479: const char source[] = "Panel:    Battery:";
 23625  00B4B2  0E57               	movlw	low __display_efficiency@F8755
 23626  00B4B4  6EF6               	movwf	tblptrl,c
 23627  00B4B6                     	if	1	;There is more than 1 active tblptr byte
 23628  00B4B6  0E91               	movlw	high __display_efficiency@F8755
 23629  00B4B8  6EF7               	movwf	tblptrh,c
 23630  00B4BA                     	endif
 23631  00B4BA                     	if	1	;There are 3 active tblptr bytes
 23632  00B4BA  0E00               	movlw	low (__display_efficiency@F8755 shr (0+16))
 23633  00B4BC  6EF8               	movwf	tblptru,c
 23634  00B4BE                     	endif
 23635  00B4BE  EE20  F0A5         	lfsr	2,__display_efficiency@source
 23636  00B4C2  0E12               	movlw	18
 23637  00B4C4                     u21280:
 23638  00B4C4  0009               	tblrd		*+
 23639  00B4C6  CFF5 FFDE          	movff	tablat,postinc2
 23640  00B4CA  06E8               	decf	wreg,f,c
 23641  00B4CC  E2FB               	bc	u21280
 23642                           
 23643                           ;display.c: 480: const char footer[] = "E:         L:";
 23644  00B4CE  0E5B               	movlw	low __display_efficiency@F8757
 23645  00B4D0  6EF6               	movwf	tblptrl,c
 23646  00B4D2                     	if	1	;There is more than 1 active tblptr byte
 23647  00B4D2  0E92               	movlw	high __display_efficiency@F8757
 23648  00B4D4  6EF7               	movwf	tblptrh,c
 23649  00B4D6                     	endif
 23650  00B4D6                     	if	1	;There are 3 active tblptr bytes
 23651  00B4D6  0E00               	movlw	low (__display_efficiency@F8757 shr (0+16))
 23652  00B4D8  6EF8               	movwf	tblptru,c
 23653  00B4DA                     	endif
 23654  00B4DA  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 23655  00B4DE  0E0D               	movlw	13
 23656  00B4E0                     u21290:
 23657  00B4E0  0009               	tblrd		*+
 23658  00B4E2  CFF5 FFDE          	movff	tablat,postinc2
 23659  00B4E6  06E8               	decf	wreg,f,c
 23660  00B4E8  E2FB               	bc	u21290
 23661                           
 23662                           ;display.c: 481: int32_t panel;
 23663                           ;display.c: 482: int32_t battery = (int32_t) os.output_voltage * (int32_t) os.output_cur
      +                          rent;
 23664  00B4EA  EE22  F027         	lfsr	2,_os+39	;volatile
 23665  00B4EE  CFDE F060          	movff	postinc2,___lmul@multiplier
 23666  00B4F2  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 23667  00B4F6  0100               	movlb	0	; () banked
 23668  00B4F8  0E00               	movlw	0
 23669  00B4FA  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23670  00B4FC  0EFF               	movlw	-1
 23671  00B4FE  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 23672  00B500  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 23673  00B502  EE22  F032         	lfsr	2,_os+50	;volatile
 23674  00B506  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23675  00B50A  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23676  00B50E  0100               	movlb	0	; () banked
 23677  00B510  0E00               	movlw	0
 23678  00B512  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23679  00B514  0EFF               	movlw	-1
 23680  00B516  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23681  00B518  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23682  00B51A  ECBC  F092         	call	___lmul	;wreg free
 23683  00B51E  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 23684  00B522  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 23685  00B526  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 23686  00B52A  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 23687                           
 23688                           ;display.c: 483: float efficiency;
 23689                           ;display.c: 485: panel = (int32_t) os.input_voltage;
 23690  00B52E  EE22  F012         	lfsr	2,_os+18	;volatile
 23691  00B532  CFDE F0C9          	movff	postinc2,__display_efficiency@panel
 23692  00B536  CFDD F0CA          	movff	postdec2,__display_efficiency@panel+1
 23693  00B53A  0100               	movlb	0	; () banked
 23694  00B53C  0E00               	movlw	0
 23695  00B53E  BFCA               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 23696  00B540  0EFF               	movlw	-1
 23697  00B542  6FCB               	movwf	(__display_efficiency@panel+2)& (0+255),b
 23698  00B544  6FCC               	movwf	(__display_efficiency@panel+3)& (0+255),b
 23699                           
 23700                           ; BSR set to: 0
 23701                           ;display.c: 486: panel *= (int32_t) os.input_current;
 23702  00B546  C0C9  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 23703  00B54A  C0CA  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 23704  00B54E  C0CB  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 23705  00B552  C0CC  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 23706  00B556  EE22  F01D         	lfsr	2,_os+29	;volatile
 23707  00B55A  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23708  00B55E  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23709  00B562  0100               	movlb	0	; () banked
 23710  00B564  0E00               	movlw	0
 23711  00B566  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23712  00B568  0EFF               	movlw	-1
 23713  00B56A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23714  00B56C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23715  00B56E  ECBC  F092         	call	___lmul	;wreg free
 23716  00B572  C060  F0C9         	movff	?___lmul,__display_efficiency@panel
 23717  00B576  C061  F0CA         	movff	?___lmul+1,__display_efficiency@panel+1
 23718  00B57A  C062  F0CB         	movff	?___lmul+2,__display_efficiency@panel+2
 23719  00B57E  C063  F0CC         	movff	?___lmul+3,__display_efficiency@panel+3
 23720                           
 23721                           ;display.c: 487: panel /= 1000;
 23722  00B582  C0C9  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 23723  00B586  C0CA  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 23724  00B58A  C0CB  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 23725  00B58E  C0CC  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 23726  00B592  0EE8               	movlw	232
 23727  00B594  0100               	movlb	0	; () banked
 23728  00B596  6F64               	movwf	___aldiv@divisor& (0+255),b
 23729  00B598  0E03               	movlw	3
 23730  00B59A  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 23731  00B59C  0E00               	movlw	0
 23732  00B59E  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 23733  00B5A0  0E00               	movlw	0
 23734  00B5A2  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 23735  00B5A4  ECEC  F07A         	call	___aldiv	;wreg free
 23736  00B5A8  C060  F0C9         	movff	?___aldiv,__display_efficiency@panel
 23737  00B5AC  C061  F0CA         	movff	?___aldiv+1,__display_efficiency@panel+1
 23738  00B5B0  C062  F0CB         	movff	?___aldiv+2,__display_efficiency@panel+2
 23739  00B5B4  C063  F0CC         	movff	?___aldiv+3,__display_efficiency@panel+3
 23740                           
 23741                           ;display.c: 489: battery = (int32_t) os.output_voltage;
 23742  00B5B8  EE22  F027         	lfsr	2,_os+39	;volatile
 23743  00B5BC  CFDE F0CD          	movff	postinc2,__display_efficiency@battery
 23744  00B5C0  CFDD F0CE          	movff	postdec2,__display_efficiency@battery+1
 23745  00B5C4  0100               	movlb	0	; () banked
 23746  00B5C6  0E00               	movlw	0
 23747  00B5C8  BFCE               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 23748  00B5CA  0EFF               	movlw	-1
 23749  00B5CC  6FCF               	movwf	(__display_efficiency@battery+2)& (0+255),b
 23750  00B5CE  6FD0               	movwf	(__display_efficiency@battery+3)& (0+255),b
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;display.c: 490: battery *= os.output_current;
 23754  00B5D0  C0CD  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 23755  00B5D4  C0CE  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 23756  00B5D8  C0CF  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 23757  00B5DC  C0D0  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 23758  00B5E0  EE22  F032         	lfsr	2,_os+50	;volatile
 23759  00B5E4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23760  00B5E8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23761  00B5EC  0100               	movlb	0	; () banked
 23762  00B5EE  0E00               	movlw	0
 23763  00B5F0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23764  00B5F2  0EFF               	movlw	-1
 23765  00B5F4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23766  00B5F6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23767  00B5F8  ECBC  F092         	call	___lmul	;wreg free
 23768  00B5FC  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 23769  00B600  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 23770  00B604  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 23771  00B608  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 23772                           
 23773                           ;display.c: 491: efficiency = battery / panel;
 23774  00B60C  C0C9  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 23775  00B610  C0CA  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 23776  00B614  C0CB  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 23777  00B618  C0CC  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 23778  00B61C  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 23779  00B620  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 23780  00B624  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 23781  00B628  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 23782  00B62C  ECEC  F07A         	call	___aldiv	;wreg free
 23783  00B630  C060  F06E         	movff	?___aldiv,___altoft@c
 23784  00B634  C061  F06F         	movff	?___aldiv+1,___altoft@c+1
 23785  00B638  C062  F070         	movff	?___aldiv+2,___altoft@c+2
 23786  00B63C  C063  F071         	movff	?___aldiv+3,___altoft@c+3
 23787  00B640  EC30  F08B         	call	___altoft	;wreg free
 23788  00B644  C06E  F0C6         	movff	?___altoft,__display_efficiency@efficiency
 23789  00B648  C06F  F0C7         	movff	?___altoft+1,__display_efficiency@efficiency+1
 23790  00B64C  C070  F0C8         	movff	?___altoft+2,__display_efficiency@efficiency+2
 23791                           
 23792                           ;display.c: 492: battery /= 1000;
 23793  00B650  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 23794  00B654  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 23795  00B658  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 23796  00B65C  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 23797  00B660  0EE8               	movlw	232
 23798  00B662  0100               	movlb	0	; () banked
 23799  00B664  6F64               	movwf	___aldiv@divisor& (0+255),b
 23800  00B666  0E03               	movlw	3
 23801  00B668  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 23802  00B66A  0E00               	movlw	0
 23803  00B66C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 23804  00B66E  0E00               	movlw	0
 23805  00B670  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 23806  00B672  ECEC  F07A         	call	___aldiv	;wreg free
 23807  00B676  C060  F0CD         	movff	?___aldiv,__display_efficiency@battery
 23808  00B67A  C061  F0CE         	movff	?___aldiv+1,__display_efficiency@battery+1
 23809  00B67E  C062  F0CF         	movff	?___aldiv+2,__display_efficiency@battery+2
 23810  00B682  C063  F0D0         	movff	?___aldiv+3,__display_efficiency@battery+3
 23811                           
 23812                           ;display.c: 494: cntr = 0;
 23813  00B686  0E00               	movlw	0
 23814  00B688  0100               	movlb	0	; () banked
 23815  00B68A  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23816                           
 23817                           ;display.c: 495: while(header[cntr])
 23818  00B68C  D016               	goto	l21567
 23819  00B68E                     l21563:
 23820                           
 23821                           ; BSR set to: 0
 23822                           ;display.c: 496: display_content[0][cntr] = header[cntr++];
 23823  00B68E  0100               	movlb	0	; () banked
 23824  00B690  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23825  00B692  0D01               	mullw	1
 23826  00B694  0E92               	movlw	low __display_efficiency@header
 23827  00B696  24F3               	addwf	prodl,w,c
 23828  00B698  6ED9               	movwf	fsr2l,c
 23829  00B69A  0E00               	movlw	high __display_efficiency@header
 23830  00B69C  20F4               	addwfc	prodh,w,c
 23831  00B69E  6EDA               	movwf	fsr2h,c
 23832  00B6A0  0100               	movlb	0	; () banked
 23833  00B6A2  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23834  00B6A4  0D01               	mullw	1
 23835  00B6A6  0E54               	movlw	low _display_content
 23836  00B6A8  24F3               	addwf	prodl,w,c
 23837  00B6AA  6EE1               	movwf	fsr1l,c
 23838  00B6AC  0E03               	movlw	high _display_content
 23839  00B6AE  20F4               	addwfc	prodh,w,c
 23840  00B6B0  6EE2               	movwf	fsr1h,c
 23841  00B6B2  CFDF FFE7          	movff	indf2,indf1
 23842                           
 23843                           ; BSR set to: 0
 23844  00B6B6  0100               	movlb	0	; () banked
 23845  00B6B8  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23846  00B6BA                     l21567:
 23847                           
 23848                           ; BSR set to: 0
 23849  00B6BA  0100               	movlb	0	; () banked
 23850  00B6BC  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23851  00B6BE  0D01               	mullw	1
 23852  00B6C0  0E92               	movlw	low __display_efficiency@header
 23853  00B6C2  24F3               	addwf	prodl,w,c
 23854  00B6C4  6ED9               	movwf	fsr2l,c
 23855  00B6C6  0E00               	movlw	high __display_efficiency@header
 23856  00B6C8  20F4               	addwfc	prodh,w,c
 23857  00B6CA  6EDA               	movwf	fsr2h,c
 23858  00B6CC  50DF               	movf	indf2,w,c
 23859  00B6CE  A4D8               	btfss	status,2,c
 23860  00B6D0  D7DE               	goto	l21563
 23861                           
 23862                           ; BSR set to: 0
 23863                           ;display.c: 498: cntr = 0;
 23864                           
 23865                           ; BSR set to: 0
 23866  00B6D2  0E00               	movlw	0
 23867  00B6D4  0100               	movlb	0	; () banked
 23868  00B6D6  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23869                           
 23870                           ;display.c: 499: while(source[cntr])
 23871  00B6D8  D016               	goto	l21575
 23872  00B6DA                     l21571:
 23873                           
 23874                           ; BSR set to: 0
 23875                           ;display.c: 500: display_content[1][cntr] = source[cntr++];
 23876  00B6DA  0100               	movlb	0	; () banked
 23877  00B6DC  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23878  00B6DE  0D01               	mullw	1
 23879  00B6E0  0EA5               	movlw	low __display_efficiency@source
 23880  00B6E2  24F3               	addwf	prodl,w,c
 23881  00B6E4  6ED9               	movwf	fsr2l,c
 23882  00B6E6  0E00               	movlw	high __display_efficiency@source
 23883  00B6E8  20F4               	addwfc	prodh,w,c
 23884  00B6EA  6EDA               	movwf	fsr2h,c
 23885  00B6EC  0100               	movlb	0	; () banked
 23886  00B6EE  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23887  00B6F0  0D01               	mullw	1
 23888  00B6F2  0E68               	movlw	low (_display_content+20)
 23889  00B6F4  24F3               	addwf	prodl,w,c
 23890  00B6F6  6EE1               	movwf	fsr1l,c
 23891  00B6F8  0E03               	movlw	high (_display_content+20)
 23892  00B6FA  20F4               	addwfc	prodh,w,c
 23893  00B6FC  6EE2               	movwf	fsr1h,c
 23894  00B6FE  CFDF FFE7          	movff	indf2,indf1
 23895                           
 23896                           ; BSR set to: 0
 23897  00B702  0100               	movlb	0	; () banked
 23898  00B704  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23899  00B706                     l21575:
 23900                           
 23901                           ; BSR set to: 0
 23902  00B706  0100               	movlb	0	; () banked
 23903  00B708  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23904  00B70A  0D01               	mullw	1
 23905  00B70C  0EA5               	movlw	low __display_efficiency@source
 23906  00B70E  24F3               	addwf	prodl,w,c
 23907  00B710  6ED9               	movwf	fsr2l,c
 23908  00B712  0E00               	movlw	high __display_efficiency@source
 23909  00B714  20F4               	addwfc	prodh,w,c
 23910  00B716  6EDA               	movwf	fsr2h,c
 23911  00B718  50DF               	movf	indf2,w,c
 23912  00B71A  A4D8               	btfss	status,2,c
 23913  00B71C  D7DE               	goto	l21571
 23914                           
 23915                           ; BSR set to: 0
 23916                           ;display.c: 502: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 23917                           
 23918                           ; BSR set to: 0
 23919  00B71E  C0C9  F078         	movff	__display_efficiency@panel,__display_itoa@value
 23920  00B722  C0CA  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 23921  00B726  0E03               	movlw	3
 23922  00B728  0100               	movlb	0	; () banked
 23923  00B72A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23924  00B72C  0E7C               	movlw	low (_display_content+40)
 23925  00B72E  0100               	movlb	0	; () banked
 23926  00B730  6F7B               	movwf	__display_itoa@text& (0+255),b
 23927  00B732  0E03               	movlw	high (_display_content+40)
 23928  00B734  0100               	movlb	0	; () banked
 23929  00B736  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23930  00B738  ECBE  F063         	call	__display_itoa	;wreg free
 23931                           
 23932                           ;display.c: 503: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 23933  00B73C  C0CD  F078         	movff	__display_efficiency@battery,__display_itoa@value
 23934  00B740  C0CE  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 23935  00B744  0E03               	movlw	3
 23936  00B746  0100               	movlb	0	; () banked
 23937  00B748  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23938  00B74A  0E86               	movlw	low (_display_content+50)
 23939  00B74C  0100               	movlb	0	; () banked
 23940  00B74E  6F7B               	movwf	__display_itoa@text& (0+255),b
 23941  00B750  0E03               	movlw	high (_display_content+50)
 23942  00B752  0100               	movlb	0	; () banked
 23943  00B754  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23944  00B756  ECBE  F063         	call	__display_itoa	;wreg free
 23945                           
 23946                           ;display.c: 505: cntr = 0;
 23947  00B75A  0E00               	movlw	0
 23948  00B75C  0100               	movlb	0	; () banked
 23949  00B75E  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23950                           
 23951                           ;display.c: 506: while(footer[cntr])
 23952  00B760  D016               	goto	l21585
 23953  00B762                     l21581:
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;display.c: 507: display_content[3][cntr] = footer[cntr++];
 23957  00B762  0100               	movlb	0	; () banked
 23958  00B764  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23959  00B766  0D01               	mullw	1
 23960  00B768  0EB8               	movlw	low __display_efficiency@footer
 23961  00B76A  24F3               	addwf	prodl,w,c
 23962  00B76C  6ED9               	movwf	fsr2l,c
 23963  00B76E  0E00               	movlw	high __display_efficiency@footer
 23964  00B770  20F4               	addwfc	prodh,w,c
 23965  00B772  6EDA               	movwf	fsr2h,c
 23966  00B774  0100               	movlb	0	; () banked
 23967  00B776  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23968  00B778  0D01               	mullw	1
 23969  00B77A  0E90               	movlw	low (_display_content+60)
 23970  00B77C  24F3               	addwf	prodl,w,c
 23971  00B77E  6EE1               	movwf	fsr1l,c
 23972  00B780  0E03               	movlw	high (_display_content+60)
 23973  00B782  20F4               	addwfc	prodh,w,c
 23974  00B784  6EE2               	movwf	fsr1h,c
 23975  00B786  CFDF FFE7          	movff	indf2,indf1
 23976                           
 23977                           ; BSR set to: 0
 23978  00B78A  0100               	movlb	0	; () banked
 23979  00B78C  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23980  00B78E                     l21585:
 23981                           
 23982                           ; BSR set to: 0
 23983  00B78E  0100               	movlb	0	; () banked
 23984  00B790  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23985  00B792  0D01               	mullw	1
 23986  00B794  0EB8               	movlw	low __display_efficiency@footer
 23987  00B796  24F3               	addwf	prodl,w,c
 23988  00B798  6ED9               	movwf	fsr2l,c
 23989  00B79A  0E00               	movlw	high __display_efficiency@footer
 23990  00B79C  20F4               	addwfc	prodh,w,c
 23991  00B79E  6EDA               	movwf	fsr2h,c
 23992  00B7A0  50DF               	movf	indf2,w,c
 23993  00B7A2  A4D8               	btfss	status,2,c
 23994  00B7A4  D7DE               	goto	l21581
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;display.c: 509: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 23998                           
 23999                           ; BSR set to: 0
 24000  00B7A6  C0C6  F060         	movff	__display_efficiency@efficiency,___fttol@f1
 24001  00B7AA  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fttol@f1+1
 24002  00B7AE  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fttol@f1+2
 24003  00B7B2  EC27  F076         	call	___fttol	;wreg free
 24004  00B7B6  C060  F078         	movff	?___fttol,__display_itoa@value
 24005  00B7BA  C061  F079         	movff	?___fttol+1,__display_itoa@value+1
 24006  00B7BE  0E01               	movlw	1
 24007  00B7C0  0100               	movlb	0	; () banked
 24008  00B7C2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24009  00B7C4  0E93               	movlw	low (_display_content+63)
 24010  00B7C6  0100               	movlb	0	; () banked
 24011  00B7C8  6F7B               	movwf	__display_itoa@text& (0+255),b
 24012  00B7CA  0E03               	movlw	high (_display_content+63)
 24013  00B7CC  0100               	movlb	0	; () banked
 24014  00B7CE  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24015  00B7D0  ECBE  F063         	call	__display_itoa	;wreg free
 24016                           
 24017                           ;display.c: 510: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 24018  00B7D4  C0CD  F090         	movff	__display_efficiency@battery,??__display_efficiency
 24019  00B7D8  C0CE  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 24020  00B7DC  0100               	movlb	0	; () banked
 24021  00B7DE  1F90               	comf	??__display_efficiency& (0+255),f,b
 24022  00B7E0  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 24023  00B7E2  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 24024  00B7E4  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 24025  00B7E6  0100               	movlb	0	; () banked
 24026  00B7E8  51C9               	movf	__display_efficiency@panel& (0+255),w,b
 24027  00B7EA  0100               	movlb	0	; () banked
 24028  00B7EC  2590               	addwf	??__display_efficiency& (0+255),w,b
 24029  00B7EE  0100               	movlb	0	; () banked
 24030  00B7F0  6F78               	movwf	__display_itoa@value& (0+255),b
 24031  00B7F2  0100               	movlb	0	; () banked
 24032  00B7F4  51CA               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 24033  00B7F6  0100               	movlb	0	; () banked
 24034  00B7F8  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 24035  00B7FA  0100               	movlb	0	; () banked
 24036  00B7FC  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 24037  00B7FE  0E03               	movlw	3
 24038  00B800  0100               	movlb	0	; () banked
 24039  00B802  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24040  00B804  0E9E               	movlw	low (_display_content+74)
 24041  00B806  0100               	movlb	0	; () banked
 24042  00B808  6F7B               	movwf	__display_itoa@text& (0+255),b
 24043  00B80A  0E03               	movlw	high (_display_content+74)
 24044  00B80C  0100               	movlb	0	; () banked
 24045  00B80E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24046  00B810  ECBE  F063         	call	__display_itoa	;wreg free
 24047  00B814  0012               	return		;funcret
 24048  00B816                     __end_of__display_efficiency:
 24049                           	opt stack 0
 24050                           tblptru	equ	0xFF8
 24051                           tblptrh	equ	0xFF7
 24052                           tblptrl	equ	0xFF6
 24053                           tablat	equ	0xFF5
 24054                           prodh	equ	0xFF4
 24055                           prodl	equ	0xFF3
 24056                           intcon	equ	0xFF2
 24057                           intcon2	equ	0xFF1
 24058                           intcon3	equ	0xFF0
 24059                           postinc0	equ	0xFEE
 24060                           wreg	equ	0xFE8
 24061                           indf1	equ	0xFE7
 24062                           postinc1	equ	0xFE6
 24063                           postdec1	equ	0xFE5
 24064                           plusw1	equ	0xFE3
 24065                           fsr1h	equ	0xFE2
 24066                           fsr1l	equ	0xFE1
 24067                           indf2	equ	0xFDF
 24068                           postinc2	equ	0xFDE
 24069                           postdec2	equ	0xFDD
 24070                           plusw2	equ	0xFDB
 24071                           fsr2h	equ	0xFDA
 24072                           fsr2l	equ	0xFD9
 24073                           status	equ	0xFD8
 24074                           
 24075 ;; *************** function ___fttol *****************
 24076 ;; Defined at:
 24077 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
 24078 ;; Parameters:    Size  Location     Type
 24079 ;;  f1              3    0[BANK0 ] float 
 24080 ;; Auto vars:     Size  Location     Type
 24081 ;;  lval            4   10[BANK0 ] unsigned long 
 24082 ;;  exp1            1   14[BANK0 ] unsigned char 
 24083 ;;  sign1           1    9[BANK0 ] unsigned char 
 24084 ;; Return value:  Size  Location     Type
 24085 ;;                  4    0[BANK0 ] long 
 24086 ;; Registers used:
 24087 ;;		wreg, status,2, status,0
 24088 ;; Tracked objects:
 24089 ;;		On entry : 0/0
 24090 ;;		On exit  : 0/0
 24091 ;;		Unchanged: 0/0
 24092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24094 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24095 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24096 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24097 ;;Total ram usage:       15 bytes
 24098 ;; Hardware stack levels used:    1
 24099 ;; Hardware stack levels required when called:   10
 24100 ;; This function calls:
 24101 ;;		Nothing
 24102 ;; This function is called by:
 24103 ;;		__display_efficiency
 24104 ;; This function uses a non-reentrant model
 24105 ;;
 24106                           
 24107                           	psect	text105
 24108  00EC4E                     __ptext105:
 24109                           	opt stack 0
 24110  00EC4E                     ___fttol:
 24111                           	opt stack 18
 24112                           
 24113                           ;incstack = 0
 24114  00EC4E  C062  F064         	movff	___fttol@f1+2,??___fttol
 24115  00EC52  0100               	movlb	0	; () banked
 24116  00EC54  6B65               	clrf	(??___fttol+1)& (0+255),b
 24117  00EC56  6B66               	clrf	(??___fttol+2)& (0+255),b
 24118  00EC58  0100               	movlb	0	; () banked
 24119  00EC5A  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
 24120  00EC5C  0100               	movlb	0	; () banked
 24121  00EC5E  3764               	rlcf	??___fttol& (0+255),f,b
 24122  00EC60  E301               	bnc	u19411
 24123  00EC62  8165               	bsf	(??___fttol+1)& (0+255),0,b
 24124  00EC64                     u19411:
 24125  00EC64  0100               	movlb	0	; () banked
 24126  00EC66  5164               	movf	??___fttol& (0+255),w,b
 24127  00EC68  0100               	movlb	0	; () banked
 24128  00EC6A  6F6E               	movwf	___fttol@exp1& (0+255),b
 24129  00EC6C  0100               	movlb	0	; () banked
 24130  00EC6E  516E               	movf	___fttol@exp1& (0+255),w,b
 24131  00EC70  A4D8               	btfss	status,2,c
 24132  00EC72  D00A               	goto	l20239
 24133                           
 24134                           ; BSR set to: 0
 24135  00EC74  0E00               	movlw	0
 24136  00EC76  0100               	movlb	0	; () banked
 24137  00EC78  6F60               	movwf	?___fttol& (0+255),b
 24138  00EC7A  0E00               	movlw	0
 24139  00EC7C  6F61               	movwf	(?___fttol+1)& (0+255),b
 24140  00EC7E  0E00               	movlw	0
 24141  00EC80  6F62               	movwf	(?___fttol+2)& (0+255),b
 24142  00EC82  0E00               	movlw	0
 24143  00EC84  6F63               	movwf	(?___fttol+3)& (0+255),b
 24144                           
 24145                           ; BSR set to: 0
 24146  00EC86  0012               	return	
 24147  00EC88                     l20239:
 24148                           
 24149                           ; BSR set to: 0
 24150  00EC88  0E17               	movlw	23
 24151  00EC8A  0100               	movlb	0	; () banked
 24152  00EC8C  6F64               	movwf	??___fttol& (0+255),b
 24153  00EC8E  C060  F065         	movff	___fttol@f1,??___fttol+1
 24154  00EC92  C061  F066         	movff	___fttol@f1+1,??___fttol+2
 24155  00EC96  C062  F067         	movff	___fttol@f1+2,??___fttol+3
 24156  00EC9A  0100               	movlb	0	; () banked
 24157  00EC9C  2964               	incf	??___fttol& (0+255),w,b
 24158  00EC9E  0100               	movlb	0	; () banked
 24159  00ECA0  6F68               	movwf	(??___fttol+4)& (0+255),b
 24160  00ECA2  D005               	goto	u19430
 24161  00ECA4                     u19435:
 24162  00ECA4  0100               	movlb	0	; () banked
 24163  00ECA6  90D8               	bcf	status,0,c
 24164  00ECA8  3367               	rrcf	(??___fttol+3)& (0+255),f,b
 24165  00ECAA  3366               	rrcf	(??___fttol+2)& (0+255),f,b
 24166  00ECAC  3365               	rrcf	(??___fttol+1)& (0+255),f,b
 24167  00ECAE                     u19430:
 24168  00ECAE  0100               	movlb	0	; () banked
 24169  00ECB0  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
 24170  00ECB2  D7F8               	goto	u19435
 24171  00ECB4  0100               	movlb	0	; () banked
 24172  00ECB6  5165               	movf	(??___fttol+1)& (0+255),w,b
 24173  00ECB8  0100               	movlb	0	; () banked
 24174  00ECBA  6F69               	movwf	___fttol@sign1& (0+255),b
 24175                           
 24176                           ; BSR set to: 0
 24177  00ECBC  0100               	movlb	0	; () banked
 24178  00ECBE  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
 24179                           
 24180                           ; BSR set to: 0
 24181  00ECC0  0EFF               	movlw	255
 24182  00ECC2  0100               	movlb	0	; () banked
 24183  00ECC4  1760               	andwf	___fttol@f1& (0+255),f,b
 24184  00ECC6  0EFF               	movlw	255
 24185  00ECC8  0100               	movlb	0	; () banked
 24186  00ECCA  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
 24187  00ECCC  0E00               	movlw	0
 24188  00ECCE  0100               	movlb	0	; () banked
 24189  00ECD0  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
 24190                           
 24191                           ; BSR set to: 0
 24192  00ECD2  0100               	movlb	0	; () banked
 24193  00ECD4  5160               	movf	___fttol@f1& (0+255),w,b
 24194  00ECD6  0100               	movlb	0	; () banked
 24195  00ECD8  6F6A               	movwf	___fttol@lval& (0+255),b
 24196  00ECDA  0100               	movlb	0	; () banked
 24197  00ECDC  5161               	movf	(___fttol@f1+1)& (0+255),w,b
 24198  00ECDE  0100               	movlb	0	; () banked
 24199  00ECE0  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
 24200  00ECE2  0100               	movlb	0	; () banked
 24201  00ECE4  5162               	movf	(___fttol@f1+2)& (0+255),w,b
 24202  00ECE6  0100               	movlb	0	; () banked
 24203  00ECE8  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
 24204  00ECEA  0100               	movlb	0	; () banked
 24205  00ECEC  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
 24206                           
 24207                           ; BSR set to: 0
 24208  00ECEE  0E8E               	movlw	142
 24209  00ECF0  0100               	movlb	0	; () banked
 24210  00ECF2  5F6E               	subwf	___fttol@exp1& (0+255),f,b
 24211                           
 24212                           ; BSR set to: 0
 24213  00ECF4  0100               	movlb	0	; () banked
 24214  00ECF6  AF6E               	btfss	___fttol@exp1& (0+255),7,b
 24215  00ECF8  D01A               	goto	l20261
 24216                           
 24217                           ; BSR set to: 0
 24218  00ECFA  0100               	movlb	0	; () banked
 24219  00ECFC  516E               	movf	___fttol@exp1& (0+255),w,b
 24220  00ECFE  0A80               	xorlw	128
 24221  00ED00  0F8F               	addlw	143
 24222  00ED02  B0D8               	btfsc	status,0,c
 24223  00ED04  D00A               	goto	l20257
 24224                           
 24225                           ; BSR set to: 0
 24226  00ED06  0E00               	movlw	0
 24227  00ED08  0100               	movlb	0	; () banked
 24228  00ED0A  6F60               	movwf	?___fttol& (0+255),b
 24229  00ED0C  0E00               	movlw	0
 24230  00ED0E  6F61               	movwf	(?___fttol+1)& (0+255),b
 24231  00ED10  0E00               	movlw	0
 24232  00ED12  6F62               	movwf	(?___fttol+2)& (0+255),b
 24233  00ED14  0E00               	movlw	0
 24234  00ED16  6F63               	movwf	(?___fttol+3)& (0+255),b
 24235                           
 24236                           ; BSR set to: 0
 24237  00ED18  0012               	return	
 24238  00ED1A                     l20257:
 24239                           
 24240                           ; BSR set to: 0
 24241  00ED1A  0100               	movlb	0	; () banked
 24242  00ED1C  90D8               	bcf	status,0,c
 24243  00ED1E  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 24244  00ED20  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 24245  00ED22  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 24246  00ED24  336A               	rrcf	___fttol@lval& (0+255),f,b
 24247                           
 24248                           ; BSR set to: 0
 24249  00ED26  0100               	movlb	0	; () banked
 24250  00ED28  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
 24251  00ED2A  D7F7               	goto	l20257
 24252                           
 24253                           ; BSR set to: 0
 24254  00ED2C  D01B               	goto	l20271
 24255  00ED2E                     l20261:
 24256                           
 24257                           ; BSR set to: 0
 24258  00ED2E  0E17               	movlw	23
 24259  00ED30  0100               	movlb	0	; () banked
 24260  00ED32  656E               	cpfsgt	___fttol@exp1& (0+255),b
 24261  00ED34  D012               	goto	l20269
 24262                           
 24263                           ; BSR set to: 0
 24264  00ED36  0E00               	movlw	0
 24265  00ED38  0100               	movlb	0	; () banked
 24266  00ED3A  6F60               	movwf	?___fttol& (0+255),b
 24267  00ED3C  0E00               	movlw	0
 24268  00ED3E  6F61               	movwf	(?___fttol+1)& (0+255),b
 24269  00ED40  0E00               	movlw	0
 24270  00ED42  6F62               	movwf	(?___fttol+2)& (0+255),b
 24271  00ED44  0E00               	movlw	0
 24272  00ED46  6F63               	movwf	(?___fttol+3)& (0+255),b
 24273                           
 24274                           ; BSR set to: 0
 24275  00ED48  0012               	return	
 24276  00ED4A                     l20267:
 24277                           
 24278                           ; BSR set to: 0
 24279  00ED4A  0100               	movlb	0	; () banked
 24280  00ED4C  90D8               	bcf	status,0,c
 24281  00ED4E  376A               	rlcf	___fttol@lval& (0+255),f,b
 24282  00ED50  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 24283  00ED52  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 24284  00ED54  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 24285  00ED56  0100               	movlb	0	; () banked
 24286  00ED58  076E               	decf	___fttol@exp1& (0+255),f,b
 24287  00ED5A                     l20269:
 24288                           
 24289                           ; BSR set to: 0
 24290  00ED5A  0100               	movlb	0	; () banked
 24291  00ED5C  516E               	movf	___fttol@exp1& (0+255),w,b
 24292  00ED5E  0100               	movlb	0	; () banked
 24293  00ED60  A4D8               	btfss	status,2,c
 24294  00ED62  D7F3               	goto	l20267
 24295  00ED64                     l20271:
 24296                           
 24297                           ; BSR set to: 0
 24298  00ED64  0100               	movlb	0	; () banked
 24299  00ED66  5169               	movf	___fttol@sign1& (0+255),w,b
 24300  00ED68  0100               	movlb	0	; () banked
 24301  00ED6A  B4D8               	btfsc	status,2,c
 24302  00ED6C  D009               	goto	l20275
 24303                           
 24304                           ; BSR set to: 0
 24305  00ED6E  0100               	movlb	0	; () banked
 24306  00ED70  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
 24307  00ED72  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
 24308  00ED74  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
 24309  00ED76  6D6A               	negf	___fttol@lval& (0+255),b
 24310  00ED78  0E00               	movlw	0
 24311  00ED7A  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 24312  00ED7C  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 24313  00ED7E  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 24314  00ED80                     l20275:
 24315                           
 24316                           ; BSR set to: 0
 24317  00ED80  C06A  F060         	movff	___fttol@lval,?___fttol
 24318  00ED84  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
 24319  00ED88  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
 24320  00ED8C  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
 24321  00ED90  0012               	return	
 24322  00ED92                     __end_of___fttol:
 24323                           	opt stack 0
 24324                           tblptru	equ	0xFF8
 24325                           tblptrh	equ	0xFF7
 24326                           tblptrl	equ	0xFF6
 24327                           tablat	equ	0xFF5
 24328                           prodh	equ	0xFF4
 24329                           prodl	equ	0xFF3
 24330                           intcon	equ	0xFF2
 24331                           intcon2	equ	0xFF1
 24332                           intcon3	equ	0xFF0
 24333                           postinc0	equ	0xFEE
 24334                           wreg	equ	0xFE8
 24335                           indf1	equ	0xFE7
 24336                           postinc1	equ	0xFE6
 24337                           postdec1	equ	0xFE5
 24338                           plusw1	equ	0xFE3
 24339                           fsr1h	equ	0xFE2
 24340                           fsr1l	equ	0xFE1
 24341                           indf2	equ	0xFDF
 24342                           postinc2	equ	0xFDE
 24343                           postdec2	equ	0xFDD
 24344                           plusw2	equ	0xFDB
 24345                           fsr2h	equ	0xFDA
 24346                           fsr2l	equ	0xFD9
 24347                           status	equ	0xFD8
 24348                           
 24349 ;; *************** function ___altoft *****************
 24350 ;; Defined at:
 24351 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\altoft.c"
 24352 ;; Parameters:    Size  Location     Type
 24353 ;;  c               4   14[BANK0 ] long 
 24354 ;; Auto vars:     Size  Location     Type
 24355 ;;  sign            1   23[BANK0 ] unsigned char 
 24356 ;;  exp             1   22[BANK0 ] unsigned char 
 24357 ;; Return value:  Size  Location     Type
 24358 ;;                  3   14[BANK0 ] float 
 24359 ;; Registers used:
 24360 ;;		wreg, status,2, status,0, cstack
 24361 ;; Tracked objects:
 24362 ;;		On entry : 0/0
 24363 ;;		On exit  : 0/0
 24364 ;;		Unchanged: 0/0
 24365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24368 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24369 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24370 ;;Total ram usage:       10 bytes
 24371 ;; Hardware stack levels used:    1
 24372 ;; Hardware stack levels required when called:   11
 24373 ;; This function calls:
 24374 ;;		___ftpack
 24375 ;; This function is called by:
 24376 ;;		__display_efficiency
 24377 ;; This function uses a non-reentrant model
 24378 ;;
 24379                           
 24380                           	psect	text106
 24381  011660                     __ptext106:
 24382                           	opt stack 0
 24383  011660                     ___altoft:
 24384                           	opt stack 17
 24385                           
 24386                           ; BSR set to: 0
 24387                           ;incstack = 0
 24388  011660  0E00               	movlw	0
 24389  011662  0100               	movlb	0	; () banked
 24390  011664  6F77               	movwf	___altoft@sign& (0+255),b
 24391  011666  0E8E               	movlw	142
 24392  011668  0100               	movlb	0	; () banked
 24393  01166A  6F76               	movwf	___altoft@exp& (0+255),b
 24394                           
 24395                           ; BSR set to: 0
 24396  01166C  0100               	movlb	0	; () banked
 24397  01166E  AF71               	btfss	(___altoft@c+3)& (0+255),7,b
 24398  011670  D015               	goto	l20227
 24399                           
 24400                           ; BSR set to: 0
 24401  011672  0100               	movlb	0	; () banked
 24402  011674  1F71               	comf	(___altoft@c+3)& (0+255),f,b
 24403  011676  1F70               	comf	(___altoft@c+2)& (0+255),f,b
 24404  011678  1F6F               	comf	(___altoft@c+1)& (0+255),f,b
 24405  01167A  6D6E               	negf	___altoft@c& (0+255),b
 24406  01167C  0E00               	movlw	0
 24407  01167E  236F               	addwfc	(___altoft@c+1)& (0+255),f,b
 24408  011680  2370               	addwfc	(___altoft@c+2)& (0+255),f,b
 24409  011682  2371               	addwfc	(___altoft@c+3)& (0+255),f,b
 24410                           
 24411                           ; BSR set to: 0
 24412  011684  0E01               	movlw	1
 24413  011686  0100               	movlb	0	; () banked
 24414  011688  6F77               	movwf	___altoft@sign& (0+255),b
 24415                           
 24416                           ; BSR set to: 0
 24417  01168A  D008               	goto	l20227
 24418  01168C                     l20225:
 24419                           
 24420                           ; BSR set to: 0
 24421  01168C  0100               	movlb	0	; () banked
 24422  01168E  90D8               	bcf	status,0,c
 24423  011690  3371               	rrcf	(___altoft@c+3)& (0+255),f,b
 24424  011692  3370               	rrcf	(___altoft@c+2)& (0+255),f,b
 24425  011694  336F               	rrcf	(___altoft@c+1)& (0+255),f,b
 24426  011696  336E               	rrcf	___altoft@c& (0+255),f,b
 24427  011698  0100               	movlb	0	; () banked
 24428  01169A  2B76               	incf	___altoft@exp& (0+255),f,b
 24429  01169C                     l20227:
 24430                           
 24431                           ; BSR set to: 0
 24432  01169C  0E00               	movlw	0
 24433  01169E  0100               	movlb	0	; () banked
 24434  0116A0  156E               	andwf	___altoft@c& (0+255),w,b
 24435  0116A2  0100               	movlb	0	; () banked
 24436  0116A4  6F72               	movwf	??___altoft& (0+255),b
 24437  0116A6  0E00               	movlw	0
 24438  0116A8  0100               	movlb	0	; () banked
 24439  0116AA  156F               	andwf	(___altoft@c+1)& (0+255),w,b
 24440  0116AC  0100               	movlb	0	; () banked
 24441  0116AE  6F73               	movwf	(??___altoft+1)& (0+255),b
 24442  0116B0  0E00               	movlw	0
 24443  0116B2  0100               	movlb	0	; () banked
 24444  0116B4  1570               	andwf	(___altoft@c+2)& (0+255),w,b
 24445  0116B6  0100               	movlb	0	; () banked
 24446  0116B8  6F74               	movwf	(??___altoft+2)& (0+255),b
 24447  0116BA  0EFF               	movlw	255
 24448  0116BC  0100               	movlb	0	; () banked
 24449  0116BE  1571               	andwf	(___altoft@c+3)& (0+255),w,b
 24450  0116C0  0100               	movlb	0	; () banked
 24451  0116C2  6F75               	movwf	(??___altoft+3)& (0+255),b
 24452  0116C4  0100               	movlb	0	; () banked
 24453  0116C6  5172               	movf	??___altoft& (0+255),w,b
 24454  0116C8  0100               	movlb	0	; () banked
 24455  0116CA  1173               	iorwf	(??___altoft+1)& (0+255),w,b
 24456  0116CC  0100               	movlb	0	; () banked
 24457  0116CE  1174               	iorwf	(??___altoft+2)& (0+255),w,b
 24458  0116D0  0100               	movlb	0	; () banked
 24459  0116D2  1175               	iorwf	(??___altoft+3)& (0+255),w,b
 24460  0116D4  A4D8               	btfss	status,2,c
 24461  0116D6  D7DA               	goto	l20225
 24462                           
 24463                           ; BSR set to: 0
 24464                           
 24465                           ; BSR set to: 0
 24466  0116D8  C06E  F060         	movff	___altoft@c,___ftpack@arg
 24467  0116DC  C06F  F061         	movff	___altoft@c+1,___ftpack@arg+1
 24468  0116E0  C070  F062         	movff	___altoft@c+2,___ftpack@arg+2
 24469  0116E4  C076  F063         	movff	___altoft@exp,___ftpack@exp
 24470  0116E8  C077  F064         	movff	___altoft@sign,___ftpack@sign
 24471  0116EC  EC05  F07C         	call	___ftpack	;wreg free
 24472  0116F0  C060  F06E         	movff	?___ftpack,?___altoft
 24473  0116F4  C061  F06F         	movff	?___ftpack+1,?___altoft+1
 24474  0116F8  C062  F070         	movff	?___ftpack+2,?___altoft+2
 24475  0116FC  0012               	return	
 24476  0116FE                     __end_of___altoft:
 24477                           	opt stack 0
 24478                           tblptru	equ	0xFF8
 24479                           tblptrh	equ	0xFF7
 24480                           tblptrl	equ	0xFF6
 24481                           tablat	equ	0xFF5
 24482                           prodh	equ	0xFF4
 24483                           prodl	equ	0xFF3
 24484                           intcon	equ	0xFF2
 24485                           intcon2	equ	0xFF1
 24486                           intcon3	equ	0xFF0
 24487                           postinc0	equ	0xFEE
 24488                           wreg	equ	0xFE8
 24489                           indf1	equ	0xFE7
 24490                           postinc1	equ	0xFE6
 24491                           postdec1	equ	0xFE5
 24492                           plusw1	equ	0xFE3
 24493                           fsr1h	equ	0xFE2
 24494                           fsr1l	equ	0xFE1
 24495                           indf2	equ	0xFDF
 24496                           postinc2	equ	0xFDE
 24497                           postdec2	equ	0xFDD
 24498                           plusw2	equ	0xFDB
 24499                           fsr2h	equ	0xFDA
 24500                           fsr2l	equ	0xFD9
 24501                           status	equ	0xFD8
 24502                           
 24503 ;; *************** function ___ftpack *****************
 24504 ;; Defined at:
 24505 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
 24506 ;; Parameters:    Size  Location     Type
 24507 ;;  arg             3    0[BANK0 ] unsigned um
 24508 ;;  exp             1    3[BANK0 ] unsigned char 
 24509 ;;  sign            1    4[BANK0 ] unsigned char 
 24510 ;; Auto vars:     Size  Location     Type
 24511 ;;		None
 24512 ;; Return value:  Size  Location     Type
 24513 ;;                  3    0[BANK0 ] float 
 24514 ;; Registers used:
 24515 ;;		wreg, status,2, status,0
 24516 ;; Tracked objects:
 24517 ;;		On entry : 0/0
 24518 ;;		On exit  : 0/0
 24519 ;;		Unchanged: 0/0
 24520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24521 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24523 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24525 ;;Total ram usage:        8 bytes
 24526 ;; Hardware stack levels used:    1
 24527 ;; Hardware stack levels required when called:   10
 24528 ;; This function calls:
 24529 ;;		Nothing
 24530 ;; This function is called by:
 24531 ;;		___altoft
 24532 ;; This function uses a non-reentrant model
 24533 ;;
 24534                           
 24535                           	psect	text107
 24536  00F80A                     __ptext107:
 24537                           	opt stack 0
 24538  00F80A                     ___ftpack:
 24539                           	opt stack 17
 24540                           
 24541                           ;incstack = 0
 24542  00F80A  0100               	movlb	0	; () banked
 24543  00F80C  5163               	movf	___ftpack@exp& (0+255),w,b
 24544  00F80E  0100               	movlb	0	; () banked
 24545  00F810  B4D8               	btfsc	status,2,c
 24546  00F812  D008               	goto	l19309
 24547                           
 24548                           ; BSR set to: 0
 24549  00F814  0100               	movlb	0	; () banked
 24550  00F816  5160               	movf	___ftpack@arg& (0+255),w,b
 24551  00F818  0100               	movlb	0	; () banked
 24552  00F81A  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 24553  00F81C  0100               	movlb	0	; () banked
 24554  00F81E  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 24555  00F820  A4D8               	btfss	status,2,c
 24556  00F822  D011               	goto	l19315
 24557  00F824                     l19309:
 24558                           
 24559                           ; BSR set to: 0
 24560  00F824  0E00               	movlw	0
 24561  00F826  0100               	movlb	0	; () banked
 24562  00F828  6F60               	movwf	?___ftpack& (0+255),b
 24563  00F82A  0E00               	movlw	0
 24564  00F82C  0100               	movlb	0	; () banked
 24565  00F82E  6F61               	movwf	(?___ftpack+1)& (0+255),b
 24566  00F830  0E00               	movlw	0
 24567  00F832  0100               	movlb	0	; () banked
 24568  00F834  6F62               	movwf	(?___ftpack+2)& (0+255),b
 24569                           
 24570                           ; BSR set to: 0
 24571  00F836  0012               	return	
 24572  00F838                     l19313:
 24573                           
 24574                           ; BSR set to: 0
 24575  00F838  0100               	movlb	0	; () banked
 24576  00F83A  2B63               	incf	___ftpack@exp& (0+255),f,b
 24577  00F83C  0100               	movlb	0	; () banked
 24578  00F83E  90D8               	bcf	status,0,c
 24579  00F840  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 24580  00F842  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 24581  00F844  3360               	rrcf	___ftpack@arg& (0+255),f,b
 24582  00F846                     l19315:
 24583                           
 24584                           ; BSR set to: 0
 24585  00F846  0E00               	movlw	0
 24586  00F848  0100               	movlb	0	; () banked
 24587  00F84A  1560               	andwf	___ftpack@arg& (0+255),w,b
 24588  00F84C  0100               	movlb	0	; () banked
 24589  00F84E  6F65               	movwf	??___ftpack& (0+255),b
 24590  00F850  0E00               	movlw	0
 24591  00F852  0100               	movlb	0	; () banked
 24592  00F854  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 24593  00F856  0100               	movlb	0	; () banked
 24594  00F858  6F66               	movwf	(??___ftpack+1)& (0+255),b
 24595  00F85A  0EFE               	movlw	254
 24596  00F85C  0100               	movlb	0	; () banked
 24597  00F85E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 24598  00F860  0100               	movlb	0	; () banked
 24599  00F862  6F67               	movwf	(??___ftpack+2)& (0+255),b
 24600  00F864  0100               	movlb	0	; () banked
 24601  00F866  5165               	movf	??___ftpack& (0+255),w,b
 24602  00F868  0100               	movlb	0	; () banked
 24603  00F86A  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 24604  00F86C  0100               	movlb	0	; () banked
 24605  00F86E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 24606  00F870  B4D8               	btfsc	status,2,c
 24607  00F872  D011               	goto	l19321
 24608  00F874  D7E1               	goto	l19313
 24609  00F876                     l19317:
 24610                           
 24611                           ; BSR set to: 0
 24612  00F876  0100               	movlb	0	; () banked
 24613  00F878  2B63               	incf	___ftpack@exp& (0+255),f,b
 24614                           
 24615                           ; BSR set to: 0
 24616  00F87A  0E01               	movlw	1
 24617  00F87C  0100               	movlb	0	; () banked
 24618  00F87E  2760               	addwf	___ftpack@arg& (0+255),f,b
 24619  00F880  0E00               	movlw	0
 24620  00F882  0100               	movlb	0	; () banked
 24621  00F884  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 24622  00F886  0E00               	movlw	0
 24623  00F888  0100               	movlb	0	; () banked
 24624  00F88A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 24625  00F88C  0100               	movlb	0	; () banked
 24626  00F88E  90D8               	bcf	status,0,c
 24627  00F890  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 24628  00F892  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 24629  00F894  3360               	rrcf	___ftpack@arg& (0+255),f,b
 24630  00F896                     l19321:
 24631                           
 24632                           ; BSR set to: 0
 24633  00F896  0E00               	movlw	0
 24634  00F898  0100               	movlb	0	; () banked
 24635  00F89A  1560               	andwf	___ftpack@arg& (0+255),w,b
 24636  00F89C  0100               	movlb	0	; () banked
 24637  00F89E  6F65               	movwf	??___ftpack& (0+255),b
 24638  00F8A0  0E00               	movlw	0
 24639  00F8A2  0100               	movlb	0	; () banked
 24640  00F8A4  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 24641  00F8A6  0100               	movlb	0	; () banked
 24642  00F8A8  6F66               	movwf	(??___ftpack+1)& (0+255),b
 24643  00F8AA  0EFF               	movlw	255
 24644  00F8AC  0100               	movlb	0	; () banked
 24645  00F8AE  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 24646  00F8B0  0100               	movlb	0	; () banked
 24647  00F8B2  6F67               	movwf	(??___ftpack+2)& (0+255),b
 24648  00F8B4  0100               	movlb	0	; () banked
 24649  00F8B6  5165               	movf	??___ftpack& (0+255),w,b
 24650  00F8B8  0100               	movlb	0	; () banked
 24651  00F8BA  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 24652  00F8BC  0100               	movlb	0	; () banked
 24653  00F8BE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 24654  00F8C0  B4D8               	btfsc	status,2,c
 24655  00F8C2  D008               	goto	l19325
 24656  00F8C4  D7D8               	goto	l19317
 24657  00F8C6                     l19323:
 24658                           
 24659                           ; BSR set to: 0
 24660  00F8C6  0100               	movlb	0	; () banked
 24661  00F8C8  0763               	decf	___ftpack@exp& (0+255),f,b
 24662  00F8CA  0100               	movlb	0	; () banked
 24663  00F8CC  90D8               	bcf	status,0,c
 24664  00F8CE  3760               	rlcf	___ftpack@arg& (0+255),f,b
 24665  00F8D0  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 24666  00F8D2  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 24667  00F8D4                     l19325:
 24668                           
 24669                           ; BSR set to: 0
 24670  00F8D4  0100               	movlb	0	; () banked
 24671  00F8D6  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 24672  00F8D8  D004               	goto	l3541
 24673                           
 24674                           ; BSR set to: 0
 24675  00F8DA  0E02               	movlw	2
 24676  00F8DC  0100               	movlb	0	; () banked
 24677  00F8DE  6163               	cpfslt	___ftpack@exp& (0+255),b
 24678  00F8E0  D7F2               	goto	l19323
 24679  00F8E2                     l3541:
 24680                           
 24681                           ; BSR set to: 0
 24682  00F8E2  0100               	movlb	0	; () banked
 24683  00F8E4  B163               	btfsc	___ftpack@exp& (0+255),0,b
 24684  00F8E6  D002               	goto	l19331
 24685                           
 24686                           ; BSR set to: 0
 24687  00F8E8  0100               	movlb	0	; () banked
 24688  00F8EA  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 24689  00F8EC                     l19331:
 24690                           
 24691                           ; BSR set to: 0
 24692  00F8EC  0100               	movlb	0	; () banked
 24693  00F8EE  90D8               	bcf	status,0,c
 24694  00F8F0  3363               	rrcf	___ftpack@exp& (0+255),f,b
 24695  00F8F2  0100               	movlb	0	; () banked
 24696  00F8F4  5163               	movf	___ftpack@exp& (0+255),w,b
 24697  00F8F6  0100               	movlb	0	; () banked
 24698  00F8F8  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 24699                           
 24700                           ; BSR set to: 0
 24701  00F8FA  0100               	movlb	0	; () banked
 24702  00F8FC  5164               	movf	___ftpack@sign& (0+255),w,b
 24703  00F8FE  0100               	movlb	0	; () banked
 24704  00F900  B4D8               	btfsc	status,2,c
 24705  00F902  D002               	goto	l19337
 24706                           
 24707                           ; BSR set to: 0
 24708  00F904  0100               	movlb	0	; () banked
 24709  00F906  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 24710  00F908                     l19337:
 24711                           
 24712                           ; BSR set to: 0
 24713  00F908  C060  F060         	movff	___ftpack@arg,?___ftpack
 24714  00F90C  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 24715  00F910  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 24716  00F914  0012               	return	
 24717  00F916                     __end_of___ftpack:
 24718                           	opt stack 0
 24719                           tblptru	equ	0xFF8
 24720                           tblptrh	equ	0xFF7
 24721                           tblptrl	equ	0xFF6
 24722                           tablat	equ	0xFF5
 24723                           prodh	equ	0xFF4
 24724                           prodl	equ	0xFF3
 24725                           intcon	equ	0xFF2
 24726                           intcon2	equ	0xFF1
 24727                           intcon3	equ	0xFF0
 24728                           postinc0	equ	0xFEE
 24729                           wreg	equ	0xFE8
 24730                           indf1	equ	0xFE7
 24731                           postinc1	equ	0xFE6
 24732                           postdec1	equ	0xFE5
 24733                           plusw1	equ	0xFE3
 24734                           fsr1h	equ	0xFE2
 24735                           fsr1l	equ	0xFE1
 24736                           indf2	equ	0xFDF
 24737                           postinc2	equ	0xFDE
 24738                           postdec2	equ	0xFDD
 24739                           plusw2	equ	0xFDB
 24740                           fsr2h	equ	0xFDA
 24741                           fsr2l	equ	0xFD9
 24742                           status	equ	0xFD8
 24743                           
 24744 ;; *************** function ___aldiv *****************
 24745 ;; Defined at:
 24746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
 24747 ;; Parameters:    Size  Location     Type
 24748 ;;  dividend        4    0[BANK0 ] long 
 24749 ;;  divisor         4    4[BANK0 ] long 
 24750 ;; Auto vars:     Size  Location     Type
 24751 ;;  quotient        4   10[BANK0 ] long 
 24752 ;;  sign            1    9[BANK0 ] unsigned char 
 24753 ;;  counter         1    8[BANK0 ] unsigned char 
 24754 ;; Return value:  Size  Location     Type
 24755 ;;                  4    0[BANK0 ] long 
 24756 ;; Registers used:
 24757 ;;		wreg, status,2, status,0
 24758 ;; Tracked objects:
 24759 ;;		On entry : 0/0
 24760 ;;		On exit  : 0/0
 24761 ;;		Unchanged: 0/0
 24762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24763 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24764 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24766 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24767 ;;Total ram usage:       14 bytes
 24768 ;; Hardware stack levels used:    1
 24769 ;; Hardware stack levels required when called:   10
 24770 ;; This function calls:
 24771 ;;		Nothing
 24772 ;; This function is called by:
 24773 ;;		__display_efficiency
 24774 ;;		__get_input_power
 24775 ;;		_log_generate_entry
 24776 ;; This function uses a non-reentrant model
 24777 ;;
 24778                           
 24779                           	psect	text108
 24780  00F5D8                     __ptext108:
 24781                           	opt stack 0
 24782  00F5D8                     ___aldiv:
 24783                           	opt stack 18
 24784                           
 24785                           ; BSR set to: 0
 24786                           ;incstack = 0
 24787  00F5D8  0E00               	movlw	0
 24788  00F5DA  0100               	movlb	0	; () banked
 24789  00F5DC  6F69               	movwf	___aldiv@sign& (0+255),b
 24790                           
 24791                           ; BSR set to: 0
 24792  00F5DE  0100               	movlb	0	; () banked
 24793  00F5E0  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 24794  00F5E2  D00C               	goto	l20181
 24795                           
 24796                           ; BSR set to: 0
 24797  00F5E4  0100               	movlb	0	; () banked
 24798  00F5E6  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 24799  00F5E8  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 24800  00F5EA  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 24801  00F5EC  6D64               	negf	___aldiv@divisor& (0+255),b
 24802  00F5EE  0E00               	movlw	0
 24803  00F5F0  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 24804  00F5F2  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 24805  00F5F4  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 24806                           
 24807                           ; BSR set to: 0
 24808  00F5F6  0E01               	movlw	1
 24809  00F5F8  0100               	movlb	0	; () banked
 24810  00F5FA  6F69               	movwf	___aldiv@sign& (0+255),b
 24811  00F5FC                     l20181:
 24812                           
 24813                           ; BSR set to: 0
 24814  00F5FC  0100               	movlb	0	; () banked
 24815  00F5FE  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 24816  00F600  D00C               	goto	l20187
 24817                           
 24818                           ; BSR set to: 0
 24819  00F602  0100               	movlb	0	; () banked
 24820  00F604  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 24821  00F606  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 24822  00F608  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 24823  00F60A  6D60               	negf	___aldiv@dividend& (0+255),b
 24824  00F60C  0E00               	movlw	0
 24825  00F60E  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 24826  00F610  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 24827  00F612  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 24828                           
 24829                           ; BSR set to: 0
 24830  00F614  0E01               	movlw	1
 24831  00F616  0100               	movlb	0	; () banked
 24832  00F618  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 24833  00F61A                     l20187:
 24834                           
 24835                           ; BSR set to: 0
 24836  00F61A  0E00               	movlw	0
 24837  00F61C  0100               	movlb	0	; () banked
 24838  00F61E  6F6A               	movwf	___aldiv@quotient& (0+255),b
 24839  00F620  0E00               	movlw	0
 24840  00F622  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 24841  00F624  0E00               	movlw	0
 24842  00F626  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 24843  00F628  0E00               	movlw	0
 24844  00F62A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 24845                           
 24846                           ; BSR set to: 0
 24847  00F62C  0100               	movlb	0	; () banked
 24848  00F62E  5164               	movf	___aldiv@divisor& (0+255),w,b
 24849  00F630  0100               	movlb	0	; () banked
 24850  00F632  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 24851  00F634  0100               	movlb	0	; () banked
 24852  00F636  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 24853  00F638  0100               	movlb	0	; () banked
 24854  00F63A  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 24855  00F63C  B4D8               	btfsc	status,2,c
 24856  00F63E  D042               	goto	l20209
 24857                           
 24858                           ; BSR set to: 0
 24859  00F640  0E01               	movlw	1
 24860  00F642  0100               	movlb	0	; () banked
 24861  00F644  6F68               	movwf	___aldiv@counter& (0+255),b
 24862  00F646  D008               	goto	l20195
 24863  00F648                     l20193:
 24864                           
 24865                           ; BSR set to: 0
 24866  00F648  0100               	movlb	0	; () banked
 24867  00F64A  90D8               	bcf	status,0,c
 24868  00F64C  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 24869  00F64E  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 24870  00F650  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 24871  00F652  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 24872  00F654  0100               	movlb	0	; () banked
 24873  00F656  2B68               	incf	___aldiv@counter& (0+255),f,b
 24874  00F658                     l20195:
 24875                           
 24876                           ; BSR set to: 0
 24877  00F658  0100               	movlb	0	; () banked
 24878  00F65A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 24879  00F65C  D7F5               	goto	l20193
 24880  00F65E                     l20197:
 24881                           
 24882                           ; BSR set to: 0
 24883  00F65E  0100               	movlb	0	; () banked
 24884  00F660  90D8               	bcf	status,0,c
 24885  00F662  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 24886  00F664  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 24887  00F666  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 24888  00F668  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 24889                           
 24890                           ; BSR set to: 0
 24891  00F66A  0100               	movlb	0	; () banked
 24892  00F66C  5164               	movf	___aldiv@divisor& (0+255),w,b
 24893  00F66E  0100               	movlb	0	; () banked
 24894  00F670  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 24895  00F672  0100               	movlb	0	; () banked
 24896  00F674  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 24897  00F676  0100               	movlb	0	; () banked
 24898  00F678  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 24899  00F67A  0100               	movlb	0	; () banked
 24900  00F67C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 24901  00F67E  0100               	movlb	0	; () banked
 24902  00F680  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 24903  00F682  0100               	movlb	0	; () banked
 24904  00F684  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 24905  00F686  0100               	movlb	0	; () banked
 24906  00F688  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 24907  00F68A  A0D8               	btfss	status,0,c
 24908  00F68C  D012               	goto	l20205
 24909                           
 24910                           ; BSR set to: 0
 24911  00F68E  0100               	movlb	0	; () banked
 24912  00F690  5164               	movf	___aldiv@divisor& (0+255),w,b
 24913  00F692  0100               	movlb	0	; () banked
 24914  00F694  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 24915  00F696  0100               	movlb	0	; () banked
 24916  00F698  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 24917  00F69A  0100               	movlb	0	; () banked
 24918  00F69C  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 24919  00F69E  0100               	movlb	0	; () banked
 24920  00F6A0  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 24921  00F6A2  0100               	movlb	0	; () banked
 24922  00F6A4  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 24923  00F6A6  0100               	movlb	0	; () banked
 24924  00F6A8  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 24925  00F6AA  0100               	movlb	0	; () banked
 24926  00F6AC  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 24927                           
 24928                           ; BSR set to: 0
 24929  00F6AE  0100               	movlb	0	; () banked
 24930  00F6B0  816A               	bsf	___aldiv@quotient& (0+255),0,b
 24931  00F6B2                     l20205:
 24932                           
 24933                           ; BSR set to: 0
 24934  00F6B2  0100               	movlb	0	; () banked
 24935  00F6B4  90D8               	bcf	status,0,c
 24936  00F6B6  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 24937  00F6B8  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 24938  00F6BA  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 24939  00F6BC  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 24940                           
 24941                           ; BSR set to: 0
 24942  00F6BE  0100               	movlb	0	; () banked
 24943  00F6C0  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 24944  00F6C2  D7CD               	goto	l20197
 24945  00F6C4                     l20209:
 24946                           
 24947                           ; BSR set to: 0
 24948  00F6C4  0100               	movlb	0	; () banked
 24949  00F6C6  5169               	movf	___aldiv@sign& (0+255),w,b
 24950  00F6C8  0100               	movlb	0	; () banked
 24951  00F6CA  B4D8               	btfsc	status,2,c
 24952  00F6CC  D009               	goto	l20213
 24953                           
 24954                           ; BSR set to: 0
 24955  00F6CE  0100               	movlb	0	; () banked
 24956  00F6D0  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 24957  00F6D2  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 24958  00F6D4  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 24959  00F6D6  6D6A               	negf	___aldiv@quotient& (0+255),b
 24960  00F6D8  0E00               	movlw	0
 24961  00F6DA  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 24962  00F6DC  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 24963  00F6DE  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 24964  00F6E0                     l20213:
 24965                           
 24966                           ; BSR set to: 0
 24967  00F6E0  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 24968  00F6E4  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 24969  00F6E8  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 24970  00F6EC  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 24971  00F6F0  0012               	return	
 24972  00F6F2                     __end_of___aldiv:
 24973                           	opt stack 0
 24974                           tblptru	equ	0xFF8
 24975                           tblptrh	equ	0xFF7
 24976                           tblptrl	equ	0xFF6
 24977                           tablat	equ	0xFF5
 24978                           prodh	equ	0xFF4
 24979                           prodl	equ	0xFF3
 24980                           intcon	equ	0xFF2
 24981                           intcon2	equ	0xFF1
 24982                           intcon3	equ	0xFF0
 24983                           postinc0	equ	0xFEE
 24984                           wreg	equ	0xFE8
 24985                           indf1	equ	0xFE7
 24986                           postinc1	equ	0xFE6
 24987                           postdec1	equ	0xFE5
 24988                           plusw1	equ	0xFE3
 24989                           fsr1h	equ	0xFE2
 24990                           fsr1l	equ	0xFE1
 24991                           indf2	equ	0xFDF
 24992                           postinc2	equ	0xFDE
 24993                           postdec2	equ	0xFDD
 24994                           plusw2	equ	0xFDB
 24995                           fsr2h	equ	0xFDA
 24996                           fsr2l	equ	0xFD9
 24997                           status	equ	0xFD8
 24998                           
 24999 ;; *************** function __display_clear *****************
 25000 ;; Defined at:
 25001 ;;		line 28 in file "display.c"
 25002 ;; Parameters:    Size  Location     Type
 25003 ;;		None
 25004 ;; Auto vars:     Size  Location     Type
 25005 ;;  col             1    3[BANK0 ] unsigned char 
 25006 ;;  row             1    2[BANK0 ] unsigned char 
 25007 ;; Return value:  Size  Location     Type
 25008 ;;                  1    wreg      void 
 25009 ;; Registers used:
 25010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25011 ;; Tracked objects:
 25012 ;;		On entry : 0/0
 25013 ;;		On exit  : 0/0
 25014 ;;		Unchanged: 0/0
 25015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25018 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25019 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25020 ;;Total ram usage:        4 bytes
 25021 ;; Hardware stack levels used:    1
 25022 ;; Hardware stack levels required when called:   10
 25023 ;; This function calls:
 25024 ;;		Nothing
 25025 ;; This function is called by:
 25026 ;;		_display_prepare
 25027 ;; This function uses a non-reentrant model
 25028 ;;
 25029                           
 25030                           	psect	text109
 25031  012C42                     __ptext109:
 25032                           	opt stack 0
 25033  012C42                     __display_clear:
 25034                           	opt stack 19
 25035                           
 25036                           ;display.c: 30: uint8_t row;
 25037                           ;display.c: 31: uint8_t col;
 25038                           ;display.c: 32: for(row=0;row<4;++row)
 25039                           
 25040                           ; BSR set to: 0
 25041                           ;incstack = 0
 25042  012C42  0E00               	movlw	0
 25043  012C44  0100               	movlb	0	; () banked
 25044  012C46  6F62               	movwf	__display_clear@row& (0+255),b
 25045  012C48                     l21165:
 25046                           
 25047                           ; BSR set to: 0
 25048  012C48  0E03               	movlw	3
 25049  012C4A  0100               	movlb	0	; () banked
 25050  012C4C  6562               	cpfsgt	__display_clear@row& (0+255),b
 25051  012C4E  D001               	goto	l21169
 25052  012C50  0012               	return	
 25053  012C52                     l21169:
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;display.c: 33: {
 25057                           ;display.c: 34: for(col=0;col<20;++col)
 25058  012C52  0E00               	movlw	0
 25059  012C54  0100               	movlb	0	; () banked
 25060  012C56  6F63               	movwf	__display_clear@col& (0+255),b
 25061  012C58                     l21171:
 25062                           
 25063                           ; BSR set to: 0
 25064  012C58  0E13               	movlw	19
 25065  012C5A  0100               	movlb	0	; () banked
 25066  012C5C  6563               	cpfsgt	__display_clear@col& (0+255),b
 25067  012C5E  D001               	goto	l21175
 25068  012C60  D01F               	goto	l21181
 25069  012C62                     l21175:
 25070                           
 25071                           ; BSR set to: 0
 25072                           ;display.c: 35: {
 25073                           ;display.c: 36: display_content[row][col] = ' ';
 25074  012C62  0100               	movlb	0	; () banked
 25075  012C64  5162               	movf	__display_clear@row& (0+255),w,b
 25076  012C66  0D14               	mullw	20
 25077  012C68  0E54               	movlw	low _display_content
 25078  012C6A  0100               	movlb	0	; () banked
 25079  012C6C  6F60               	movwf	??__display_clear& (0+255),b
 25080  012C6E  0E03               	movlw	high _display_content
 25081  012C70  0100               	movlb	0	; () banked
 25082  012C72  6F61               	movwf	(??__display_clear+1)& (0+255),b
 25083  012C74  50F3               	movf	prodl,w,c
 25084  012C76  0100               	movlb	0	; () banked
 25085  012C78  2760               	addwf	??__display_clear& (0+255),f,b
 25086  012C7A  50F4               	movf	prodh,w,c
 25087  012C7C  0100               	movlb	0	; () banked
 25088  012C7E  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 25089  012C80  0100               	movlb	0	; () banked
 25090  012C82  5163               	movf	__display_clear@col& (0+255),w,b
 25091  012C84  0D01               	mullw	1
 25092  012C86  50F3               	movf	prodl,w,c
 25093  012C88  0100               	movlb	0	; () banked
 25094  012C8A  2560               	addwf	??__display_clear& (0+255),w,b
 25095  012C8C  6ED9               	movwf	fsr2l,c
 25096  012C8E  50F4               	movf	prodh,w,c
 25097  012C90  0100               	movlb	0	; () banked
 25098  012C92  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 25099  012C94  6EDA               	movwf	fsr2h,c
 25100  012C96  0E20               	movlw	32
 25101  012C98  6EDF               	movwf	indf2,c
 25102                           
 25103                           ; BSR set to: 0
 25104  012C9A  0100               	movlb	0	; () banked
 25105  012C9C  2B63               	incf	__display_clear@col& (0+255),f,b
 25106  012C9E  D7DC               	goto	l21171
 25107  012CA0                     l21181:
 25108                           
 25109                           ; BSR set to: 0
 25110  012CA0  0100               	movlb	0	; () banked
 25111  012CA2  2B62               	incf	__display_clear@row& (0+255),f,b
 25112  012CA4  D7D1               	goto	l21165
 25113  012CA6                     __end_of__display_clear:
 25114                           	opt stack 0
 25115                           tblptru	equ	0xFF8
 25116                           tblptrh	equ	0xFF7
 25117                           tblptrl	equ	0xFF6
 25118                           tablat	equ	0xFF5
 25119                           prodh	equ	0xFF4
 25120                           prodl	equ	0xFF3
 25121                           intcon	equ	0xFF2
 25122                           intcon2	equ	0xFF1
 25123                           intcon3	equ	0xFF0
 25124                           postinc0	equ	0xFEE
 25125                           wreg	equ	0xFE8
 25126                           indf1	equ	0xFE7
 25127                           postinc1	equ	0xFE6
 25128                           postdec1	equ	0xFE5
 25129                           plusw1	equ	0xFE3
 25130                           fsr1h	equ	0xFE2
 25131                           fsr1l	equ	0xFE1
 25132                           indf2	equ	0xFDF
 25133                           postinc2	equ	0xFDE
 25134                           postdec2	equ	0xFDD
 25135                           plusw2	equ	0xFDB
 25136                           fsr2h	equ	0xFDA
 25137                           fsr2l	equ	0xFD9
 25138                           status	equ	0xFD8
 25139                           
 25140 ;; *************** function __display_charger *****************
 25141 ;; Defined at:
 25142 ;;		line 405 in file "display.c"
 25143 ;; Parameters:    Size  Location     Type
 25144 ;;		None
 25145 ;; Auto vars:     Size  Location     Type
 25146 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 25147 ;;  header         21   15[BANK1 ] const unsigned char [21]
 25148 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 25149 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 25150 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 25151 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 25152 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 25153 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 25154 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 25155 ;;  cntr            1  142[BANK1 ] unsigned char 
 25156 ;; Return value:  Size  Location     Type
 25157 ;;                  1    wreg      void 
 25158 ;; Registers used:
 25159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25160 ;; Tracked objects:
 25161 ;;		On entry : 0/0
 25162 ;;		On exit  : 0/0
 25163 ;;		Unchanged: 0/0
 25164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25166 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25167 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25168 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25169 ;;Total ram usage:      144 bytes
 25170 ;; Hardware stack levels used:    1
 25171 ;; Hardware stack levels required when called:   14
 25172 ;; This function calls:
 25173 ;;		__display_itoa
 25174 ;;		_buck_get_dutycycle
 25175 ;;		_buck_get_mode
 25176 ;; This function is called by:
 25177 ;;		_display_prepare
 25178 ;; This function uses a non-reentrant model
 25179 ;;
 25180                           
 25181                           	psect	text110
 25182  00BB7E                     __ptext110:
 25183                           	opt stack 0
 25184  00BB7E                     __display_charger:
 25185                           	opt stack 15
 25186                           
 25187                           ;display.c: 407: uint8_t cntr;
 25188                           ;display.c: 408: const char header[] = "MPPT Charger Details";
 25189                           
 25190                           ; BSR set to: 0
 25191                           ;incstack = 0
 25192  00BB7E  0EA0               	movlw	low __display_charger@F8732
 25193  00BB80  6EF6               	movwf	tblptrl,c
 25194  00BB82                     	if	1	;There is more than 1 active tblptr byte
 25195  00BB82  0E90               	movlw	high __display_charger@F8732
 25196  00BB84  6EF7               	movwf	tblptrh,c
 25197  00BB86                     	endif
 25198  00BB86                     	if	1	;There are 3 active tblptr bytes
 25199  00BB86  0E00               	movlw	low (__display_charger@F8732 shr (0+16))
 25200  00BB88  6EF8               	movwf	tblptru,c
 25201  00BB8A                     	endif
 25202  00BB8A  EE21  F00F         	lfsr	2,__display_charger@header
 25203  00BB8E  0E14               	movlw	20
 25204  00BB90                     u21100:
 25205  00BB90  0009               	tblrd		*+
 25206  00BB92  CFF5 FFDE          	movff	tablat,postinc2
 25207  00BB96  06E8               	decf	wreg,f,c
 25208  00BB98  E2FB               	bc	u21100
 25209                           
 25210                           ;display.c: 409: const char supply_on[] = "Charger supply on";
 25211  00BB9A  0E90               	movlw	low __display_charger@F8734
 25212  00BB9C  6EF6               	movwf	tblptrl,c
 25213  00BB9E                     	if	1	;There is more than 1 active tblptr byte
 25214  00BB9E  0E91               	movlw	high __display_charger@F8734
 25215  00BBA0  6EF7               	movwf	tblptrh,c
 25216  00BBA2                     	endif
 25217  00BBA2                     	if	1	;There are 3 active tblptr bytes
 25218  00BBA2  0E00               	movlw	low (__display_charger@F8734 shr (0+16))
 25219  00BBA4  6EF8               	movwf	tblptru,c
 25220  00BBA6                     	endif
 25221  00BBA6  EE21  F060         	lfsr	2,__display_charger@supply_on
 25222  00BBAA  0E11               	movlw	17
 25223  00BBAC                     u21110:
 25224  00BBAC  0009               	tblrd		*+
 25225  00BBAE  CFF5 FFDE          	movff	tablat,postinc2
 25226  00BBB2  06E8               	decf	wreg,f,c
 25227  00BBB4  E2FB               	bc	u21110
 25228                           
 25229                           ;display.c: 410: const char supply_off[] = "Charger supply off";
 25230  00BBB6  0E7D               	movlw	low __display_charger@F8736
 25231  00BBB8  6EF6               	movwf	tblptrl,c
 25232  00BBBA                     	if	1	;There is more than 1 active tblptr byte
 25233  00BBBA  0E91               	movlw	high __display_charger@F8736
 25234  00BBBC  6EF7               	movwf	tblptrh,c
 25235  00BBBE                     	endif
 25236  00BBBE                     	if	1	;There are 3 active tblptr bytes
 25237  00BBBE  0E00               	movlw	low (__display_charger@F8736 shr (0+16))
 25238  00BBC0  6EF8               	movwf	tblptru,c
 25239  00BBC2                     	endif
 25240  00BBC2  EE21  F04D         	lfsr	2,__display_charger@supply_off
 25241  00BBC6  0E12               	movlw	18
 25242  00BBC8                     u21120:
 25243  00BBC8  0009               	tblrd		*+
 25244  00BBCA  CFF5 FFDE          	movff	tablat,postinc2
 25245  00BBCE  06E8               	decf	wreg,f,c
 25246  00BBD0  E2FB               	bc	u21120
 25247                           
 25248                           ;display.c: 411: const char fan_on[] = "Fan on";
 25249  00BBD2  0E0F               	movlw	low __display_charger@F8738
 25250  00BBD4  6EF6               	movwf	tblptrl,c
 25251  00BBD6                     	if	1	;There is more than 1 active tblptr byte
 25252  00BBD6  0E93               	movlw	high __display_charger@F8738
 25253  00BBD8  6EF7               	movwf	tblptrh,c
 25254  00BBDA                     	endif
 25255  00BBDA                     	if	1	;There are 3 active tblptr bytes
 25256  00BBDA  0E00               	movlw	low (__display_charger@F8738 shr (0+16))
 25257  00BBDC  6EF8               	movwf	tblptru,c
 25258  00BBDE                     	endif
 25259  00BBDE  EE21  F008         	lfsr	2,__display_charger@fan_on
 25260  00BBE2  0E06               	movlw	6
 25261  00BBE4                     u21130:
 25262  00BBE4  0009               	tblrd		*+
 25263  00BBE6  CFF5 FFDE          	movff	tablat,postinc2
 25264  00BBEA  06E8               	decf	wreg,f,c
 25265  00BBEC  E2FB               	bc	u21130
 25266                           
 25267                           ;display.c: 412: const char fan_off[] = "Fan off";
 25268  00BBEE  0EF7               	movlw	low __display_charger@F8740
 25269  00BBF0  6EF6               	movwf	tblptrl,c
 25270  00BBF2                     	if	1	;There is more than 1 active tblptr byte
 25271  00BBF2  0E92               	movlw	high __display_charger@F8740
 25272  00BBF4  6EF7               	movwf	tblptrh,c
 25273  00BBF6                     	endif
 25274  00BBF6                     	if	1	;There are 3 active tblptr bytes
 25275  00BBF6  0E00               	movlw	low (__display_charger@F8740 shr (0+16))
 25276  00BBF8  6EF8               	movwf	tblptru,c
 25277  00BBFA                     	endif
 25278  00BBFA  EE21  F000         	lfsr	2,__display_charger@fan_off
 25279  00BBFE  0E07               	movlw	7
 25280  00BC00                     u21140:
 25281  00BC00  0009               	tblrd		*+
 25282  00BC02  CFF5 FFDE          	movff	tablat,postinc2
 25283  00BC06  06E8               	decf	wreg,f,c
 25284  00BC08  E2FB               	bc	u21140
 25285                           
 25286                           ;display.c: 414: const char charger_off[] = "Charger off";
 25287  00BC0A  0EAB               	movlw	low __display_charger@F8742
 25288  00BC0C  6EF6               	movwf	tblptrl,c
 25289  00BC0E                     	if	1	;There is more than 1 active tblptr byte
 25290  00BC0E  0E92               	movlw	high __display_charger@F8742
 25291  00BC10  6EF7               	movwf	tblptrh,c
 25292  00BC12                     	endif
 25293  00BC12                     	if	1	;There are 3 active tblptr bytes
 25294  00BC12  0E00               	movlw	low (__display_charger@F8742 shr (0+16))
 25295  00BC14  6EF8               	movwf	tblptru,c
 25296  00BC16                     	endif
 25297  00BC16  EE21  F082         	lfsr	2,__display_charger@charger_off
 25298  00BC1A  0E0B               	movlw	11
 25299  00BC1C                     u21150:
 25300  00BC1C  0009               	tblrd		*+
 25301  00BC1E  CFF5 FFDE          	movff	tablat,postinc2
 25302  00BC22  06E8               	decf	wreg,f,c
 25303  00BC24  E2FB               	bc	u21150
 25304                           
 25305                           ;display.c: 415: const char charger_startup[] = "Charger Startup";
 25306  00BC26  0EFB               	movlw	low __display_charger@F8744
 25307  00BC28  6EF6               	movwf	tblptrl,c
 25308  00BC2A                     	if	1	;There is more than 1 active tblptr byte
 25309  00BC2A  0E91               	movlw	high __display_charger@F8744
 25310  00BC2C  6EF7               	movwf	tblptrh,c
 25311  00BC2E                     	endif
 25312  00BC2E                     	if	1	;There are 3 active tblptr bytes
 25313  00BC2E  0E00               	movlw	low (__display_charger@F8744 shr (0+16))
 25314  00BC30  6EF8               	movwf	tblptru,c
 25315  00BC32                     	endif
 25316  00BC32  EE21  F072         	lfsr	2,__display_charger@charger_startup
 25317  00BC36  0E0F               	movlw	15
 25318  00BC38                     u21160:
 25319  00BC38  0009               	tblrd		*+
 25320  00BC3A  CFF5 FFDE          	movff	tablat,postinc2
 25321  00BC3E  06E8               	decf	wreg,f,c
 25322  00BC40  E2FB               	bc	u21160
 25323                           
 25324                           ;display.c: 416: const char charger_async[] = "Charger Asynchronous";
 25325  00BC42  0E8B               	movlw	low __display_charger@F8746
 25326  00BC44  6EF6               	movwf	tblptrl,c
 25327  00BC46                     	if	1	;There is more than 1 active tblptr byte
 25328  00BC46  0E90               	movlw	high __display_charger@F8746
 25329  00BC48  6EF7               	movwf	tblptrh,c
 25330  00BC4A                     	endif
 25331  00BC4A                     	if	1	;There are 3 active tblptr bytes
 25332  00BC4A  0E00               	movlw	low (__display_charger@F8746 shr (0+16))
 25333  00BC4C  6EF8               	movwf	tblptru,c
 25334  00BC4E                     	endif
 25335  00BC4E  EE21  F024         	lfsr	2,__display_charger@charger_async
 25336  00BC52  0E14               	movlw	20
 25337  00BC54                     u21170:
 25338  00BC54  0009               	tblrd		*+
 25339  00BC56  CFF5 FFDE          	movff	tablat,postinc2
 25340  00BC5A  06E8               	decf	wreg,f,c
 25341  00BC5C  E2FB               	bc	u21170
 25342                           
 25343                           ;display.c: 417: const char charger_sync[] = "Charger Synchronous";
 25344  00BC5E  0EF3               	movlw	low __display_charger@F8748
 25345  00BC60  6EF6               	movwf	tblptrl,c
 25346  00BC62                     	if	1	;There is more than 1 active tblptr byte
 25347  00BC62  0E90               	movlw	high __display_charger@F8748
 25348  00BC64  6EF7               	movwf	tblptrh,c
 25349  00BC66                     	endif
 25350  00BC66                     	if	1	;There are 3 active tblptr bytes
 25351  00BC66  0E00               	movlw	low (__display_charger@F8748 shr (0+16))
 25352  00BC68  6EF8               	movwf	tblptru,c
 25353  00BC6A                     	endif
 25354  00BC6A  EE21  F039         	lfsr	2,__display_charger@charger_sync
 25355  00BC6E  0E13               	movlw	19
 25356  00BC70                     u21180:
 25357  00BC70  0009               	tblrd		*+
 25358  00BC72  CFF5 FFDE          	movff	tablat,postinc2
 25359  00BC76  06E8               	decf	wreg,f,c
 25360  00BC78  E2FB               	bc	u21180
 25361                           
 25362                           ;display.c: 419: cntr = 0;
 25363  00BC7A  0E00               	movlw	0
 25364  00BC7C  0101               	movlb	1	; () banked
 25365  00BC7E  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25366                           
 25367                           ;display.c: 420: while(header[cntr])
 25368  00BC80  D016               	goto	l21493
 25369  00BC82                     l21489:
 25370                           
 25371                           ; BSR set to: 1
 25372                           ;display.c: 421: display_content[0][cntr] = header[cntr++];
 25373  00BC82  0101               	movlb	1	; () banked
 25374  00BC84  518E               	movf	__display_charger@cntr& (0+255),w,b
 25375  00BC86  0D01               	mullw	1
 25376  00BC88  0E0F               	movlw	low __display_charger@header
 25377  00BC8A  24F3               	addwf	prodl,w,c
 25378  00BC8C  6ED9               	movwf	fsr2l,c
 25379  00BC8E  0E01               	movlw	high __display_charger@header
 25380  00BC90  20F4               	addwfc	prodh,w,c
 25381  00BC92  6EDA               	movwf	fsr2h,c
 25382  00BC94  0101               	movlb	1	; () banked
 25383  00BC96  518E               	movf	__display_charger@cntr& (0+255),w,b
 25384  00BC98  0D01               	mullw	1
 25385  00BC9A  0E54               	movlw	low _display_content
 25386  00BC9C  24F3               	addwf	prodl,w,c
 25387  00BC9E  6EE1               	movwf	fsr1l,c
 25388  00BCA0  0E03               	movlw	high _display_content
 25389  00BCA2  20F4               	addwfc	prodh,w,c
 25390  00BCA4  6EE2               	movwf	fsr1h,c
 25391  00BCA6  CFDF FFE7          	movff	indf2,indf1
 25392                           
 25393                           ; BSR set to: 1
 25394  00BCAA  0101               	movlb	1	; () banked
 25395  00BCAC  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25396  00BCAE                     l21493:
 25397                           
 25398                           ; BSR set to: 1
 25399  00BCAE  0101               	movlb	1	; () banked
 25400  00BCB0  518E               	movf	__display_charger@cntr& (0+255),w,b
 25401  00BCB2  0D01               	mullw	1
 25402  00BCB4  0E0F               	movlw	low __display_charger@header
 25403  00BCB6  24F3               	addwf	prodl,w,c
 25404  00BCB8  6ED9               	movwf	fsr2l,c
 25405  00BCBA  0E01               	movlw	high __display_charger@header
 25406  00BCBC  20F4               	addwfc	prodh,w,c
 25407  00BCBE  6EDA               	movwf	fsr2h,c
 25408  00BCC0  50DF               	movf	indf2,w,c
 25409  00BCC2  A4D8               	btfss	status,2,c
 25410  00BCC4  D7DE               	goto	l21489
 25411                           
 25412                           ; BSR set to: 1
 25413                           ;display.c: 423: cntr = 0;
 25414                           
 25415                           ; BSR set to: 1
 25416  00BCC6  0E00               	movlw	0
 25417  00BCC8  0101               	movlb	1	; () banked
 25418  00BCCA  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25419                           
 25420                           ;display.c: 424: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 25421  00BCCC  D016               	goto	l21503
 25422  00BCCE                     l21499:
 25423                           
 25424                           ;display.c: 427: display_content[1][cntr] = supply_on[cntr++];
 25425  00BCCE  0101               	movlb	1	; () banked
 25426  00BCD0  518E               	movf	__display_charger@cntr& (0+255),w,b
 25427  00BCD2  0D01               	mullw	1
 25428  00BCD4  0E60               	movlw	low __display_charger@supply_on
 25429  00BCD6  24F3               	addwf	prodl,w,c
 25430  00BCD8  6ED9               	movwf	fsr2l,c
 25431  00BCDA  0E01               	movlw	high __display_charger@supply_on
 25432  00BCDC  20F4               	addwfc	prodh,w,c
 25433  00BCDE  6EDA               	movwf	fsr2h,c
 25434  00BCE0  0101               	movlb	1	; () banked
 25435  00BCE2  518E               	movf	__display_charger@cntr& (0+255),w,b
 25436  00BCE4  0D01               	mullw	1
 25437  00BCE6  0E68               	movlw	low (_display_content+20)
 25438  00BCE8  24F3               	addwf	prodl,w,c
 25439  00BCEA  6EE1               	movwf	fsr1l,c
 25440  00BCEC  0E03               	movlw	high (_display_content+20)
 25441  00BCEE  20F4               	addwfc	prodh,w,c
 25442  00BCF0  6EE2               	movwf	fsr1h,c
 25443  00BCF2  CFDF FFE7          	movff	indf2,indf1
 25444                           
 25445                           ; BSR set to: 1
 25446  00BCF6  0101               	movlb	1	; () banked
 25447  00BCF8  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25448  00BCFA                     l21503:
 25449  00BCFA  0101               	movlb	1	; () banked
 25450  00BCFC  518E               	movf	__display_charger@cntr& (0+255),w,b
 25451  00BCFE  0D01               	mullw	1
 25452  00BD00  0E60               	movlw	low __display_charger@supply_on
 25453  00BD02  24F3               	addwf	prodl,w,c
 25454  00BD04  6ED9               	movwf	fsr2l,c
 25455  00BD06  0E01               	movlw	high __display_charger@supply_on
 25456  00BD08  20F4               	addwfc	prodh,w,c
 25457  00BD0A  6EDA               	movwf	fsr2h,c
 25458  00BD0C  50DF               	movf	indf2,w,c
 25459  00BD0E  B4D8               	btfsc	status,2,c
 25460  00BD10  D023               	goto	l21511
 25461  00BD12  D7DD               	goto	l21499
 25462  00BD14                     l21505:
 25463                           
 25464                           ; BSR set to: 1
 25465                           ;display.c: 432: display_content[1][cntr] = supply_off[cntr++];
 25466  00BD14  0101               	movlb	1	; () banked
 25467  00BD16  518E               	movf	__display_charger@cntr& (0+255),w,b
 25468  00BD18  0D01               	mullw	1
 25469  00BD1A  0E4D               	movlw	low __display_charger@supply_off
 25470  00BD1C  24F3               	addwf	prodl,w,c
 25471  00BD1E  6ED9               	movwf	fsr2l,c
 25472  00BD20  0E01               	movlw	high __display_charger@supply_off
 25473  00BD22  20F4               	addwfc	prodh,w,c
 25474  00BD24  6EDA               	movwf	fsr2h,c
 25475  00BD26  0101               	movlb	1	; () banked
 25476  00BD28  518E               	movf	__display_charger@cntr& (0+255),w,b
 25477  00BD2A  0D01               	mullw	1
 25478  00BD2C  0E68               	movlw	low (_display_content+20)
 25479  00BD2E  24F3               	addwf	prodl,w,c
 25480  00BD30  6EE1               	movwf	fsr1l,c
 25481  00BD32  0E03               	movlw	high (_display_content+20)
 25482  00BD34  20F4               	addwfc	prodh,w,c
 25483  00BD36  6EE2               	movwf	fsr1h,c
 25484  00BD38  CFDF FFE7          	movff	indf2,indf1
 25485                           
 25486                           ; BSR set to: 1
 25487  00BD3C  0101               	movlb	1	; () banked
 25488  00BD3E  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25489                           
 25490                           ; BSR set to: 1
 25491  00BD40  0101               	movlb	1	; () banked
 25492  00BD42  518E               	movf	__display_charger@cntr& (0+255),w,b
 25493  00BD44  0D01               	mullw	1
 25494  00BD46  0E4D               	movlw	low __display_charger@supply_off
 25495  00BD48  24F3               	addwf	prodl,w,c
 25496  00BD4A  6ED9               	movwf	fsr2l,c
 25497  00BD4C  0E01               	movlw	high __display_charger@supply_off
 25498  00BD4E  20F4               	addwfc	prodh,w,c
 25499  00BD50  6EDA               	movwf	fsr2h,c
 25500  00BD52  50DF               	movf	indf2,w,c
 25501  00BD54  A4D8               	btfss	status,2,c
 25502  00BD56  D7DE               	goto	l21505
 25503  00BD58                     l21511:
 25504                           
 25505                           ; BSR set to: 1
 25506                           ;display.c: 433: }
 25507                           ;display.c: 435: cntr = 0;
 25508  00BD58  0E00               	movlw	0
 25509  00BD5A  0101               	movlb	1	; () banked
 25510  00BD5C  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25511                           
 25512                           ;display.c: 436: switch(buck_get_mode())
 25513  00BD5E  D08C               	goto	l21539
 25514  00BD60                     l21513:
 25515                           
 25516                           ; BSR set to: 1
 25517                           ;display.c: 440: display_content[2][cntr] = charger_off[cntr++];
 25518  00BD60  0101               	movlb	1	; () banked
 25519  00BD62  518E               	movf	__display_charger@cntr& (0+255),w,b
 25520  00BD64  0D01               	mullw	1
 25521  00BD66  0E82               	movlw	low __display_charger@charger_off
 25522  00BD68  24F3               	addwf	prodl,w,c
 25523  00BD6A  6ED9               	movwf	fsr2l,c
 25524  00BD6C  0E01               	movlw	high __display_charger@charger_off
 25525  00BD6E  20F4               	addwfc	prodh,w,c
 25526  00BD70  6EDA               	movwf	fsr2h,c
 25527  00BD72  0101               	movlb	1	; () banked
 25528  00BD74  518E               	movf	__display_charger@cntr& (0+255),w,b
 25529  00BD76  0D01               	mullw	1
 25530  00BD78  0E7C               	movlw	low (_display_content+40)
 25531  00BD7A  24F3               	addwf	prodl,w,c
 25532  00BD7C  6EE1               	movwf	fsr1l,c
 25533  00BD7E  0E03               	movlw	high (_display_content+40)
 25534  00BD80  20F4               	addwfc	prodh,w,c
 25535  00BD82  6EE2               	movwf	fsr1h,c
 25536  00BD84  CFDF FFE7          	movff	indf2,indf1
 25537                           
 25538                           ; BSR set to: 1
 25539  00BD88  0101               	movlb	1	; () banked
 25540  00BD8A  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25541  00BD8C                     l21517:
 25542  00BD8C  0101               	movlb	1	; () banked
 25543  00BD8E  518E               	movf	__display_charger@cntr& (0+255),w,b
 25544  00BD90  0D01               	mullw	1
 25545  00BD92  0E82               	movlw	low __display_charger@charger_off
 25546  00BD94  24F3               	addwf	prodl,w,c
 25547  00BD96  6ED9               	movwf	fsr2l,c
 25548  00BD98  0E01               	movlw	high __display_charger@charger_off
 25549  00BD9A  20F4               	addwfc	prodh,w,c
 25550  00BD9C  6EDA               	movwf	fsr2h,c
 25551  00BD9E  50DF               	movf	indf2,w,c
 25552  00BDA0  B4D8               	btfsc	status,2,c
 25553  00BDA2  D078               	goto	l21541
 25554  00BDA4  D7DD               	goto	l21513
 25555  00BDA6                     l21519:
 25556                           
 25557                           ; BSR set to: 1
 25558                           ;display.c: 445: display_content[2][cntr] = charger_startup[cntr++];
 25559  00BDA6  0101               	movlb	1	; () banked
 25560  00BDA8  518E               	movf	__display_charger@cntr& (0+255),w,b
 25561  00BDAA  0D01               	mullw	1
 25562  00BDAC  0E72               	movlw	low __display_charger@charger_startup
 25563  00BDAE  24F3               	addwf	prodl,w,c
 25564  00BDB0  6ED9               	movwf	fsr2l,c
 25565  00BDB2  0E01               	movlw	high __display_charger@charger_startup
 25566  00BDB4  20F4               	addwfc	prodh,w,c
 25567  00BDB6  6EDA               	movwf	fsr2h,c
 25568  00BDB8  0101               	movlb	1	; () banked
 25569  00BDBA  518E               	movf	__display_charger@cntr& (0+255),w,b
 25570  00BDBC  0D01               	mullw	1
 25571  00BDBE  0E7C               	movlw	low (_display_content+40)
 25572  00BDC0  24F3               	addwf	prodl,w,c
 25573  00BDC2  6EE1               	movwf	fsr1l,c
 25574  00BDC4  0E03               	movlw	high (_display_content+40)
 25575  00BDC6  20F4               	addwfc	prodh,w,c
 25576  00BDC8  6EE2               	movwf	fsr1h,c
 25577  00BDCA  CFDF FFE7          	movff	indf2,indf1
 25578                           
 25579                           ; BSR set to: 1
 25580  00BDCE  0101               	movlb	1	; () banked
 25581  00BDD0  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25582  00BDD2                     l21523:
 25583  00BDD2  0101               	movlb	1	; () banked
 25584  00BDD4  518E               	movf	__display_charger@cntr& (0+255),w,b
 25585  00BDD6  0D01               	mullw	1
 25586  00BDD8  0E72               	movlw	low __display_charger@charger_startup
 25587  00BDDA  24F3               	addwf	prodl,w,c
 25588  00BDDC  6ED9               	movwf	fsr2l,c
 25589  00BDDE  0E01               	movlw	high __display_charger@charger_startup
 25590  00BDE0  20F4               	addwfc	prodh,w,c
 25591  00BDE2  6EDA               	movwf	fsr2h,c
 25592  00BDE4  50DF               	movf	indf2,w,c
 25593  00BDE6  B4D8               	btfsc	status,2,c
 25594  00BDE8  D055               	goto	l21541
 25595  00BDEA  D7DD               	goto	l21519
 25596  00BDEC                     l21525:
 25597                           
 25598                           ; BSR set to: 1
 25599                           ;display.c: 450: display_content[2][cntr] = charger_async[cntr++];
 25600  00BDEC  0101               	movlb	1	; () banked
 25601  00BDEE  518E               	movf	__display_charger@cntr& (0+255),w,b
 25602  00BDF0  0D01               	mullw	1
 25603  00BDF2  0E24               	movlw	low __display_charger@charger_async
 25604  00BDF4  24F3               	addwf	prodl,w,c
 25605  00BDF6  6ED9               	movwf	fsr2l,c
 25606  00BDF8  0E01               	movlw	high __display_charger@charger_async
 25607  00BDFA  20F4               	addwfc	prodh,w,c
 25608  00BDFC  6EDA               	movwf	fsr2h,c
 25609  00BDFE  0101               	movlb	1	; () banked
 25610  00BE00  518E               	movf	__display_charger@cntr& (0+255),w,b
 25611  00BE02  0D01               	mullw	1
 25612  00BE04  0E7C               	movlw	low (_display_content+40)
 25613  00BE06  24F3               	addwf	prodl,w,c
 25614  00BE08  6EE1               	movwf	fsr1l,c
 25615  00BE0A  0E03               	movlw	high (_display_content+40)
 25616  00BE0C  20F4               	addwfc	prodh,w,c
 25617  00BE0E  6EE2               	movwf	fsr1h,c
 25618  00BE10  CFDF FFE7          	movff	indf2,indf1
 25619                           
 25620                           ; BSR set to: 1
 25621  00BE14  0101               	movlb	1	; () banked
 25622  00BE16  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25623  00BE18                     l21529:
 25624  00BE18  0101               	movlb	1	; () banked
 25625  00BE1A  518E               	movf	__display_charger@cntr& (0+255),w,b
 25626  00BE1C  0D01               	mullw	1
 25627  00BE1E  0E24               	movlw	low __display_charger@charger_async
 25628  00BE20  24F3               	addwf	prodl,w,c
 25629  00BE22  6ED9               	movwf	fsr2l,c
 25630  00BE24  0E01               	movlw	high __display_charger@charger_async
 25631  00BE26  20F4               	addwfc	prodh,w,c
 25632  00BE28  6EDA               	movwf	fsr2h,c
 25633  00BE2A  50DF               	movf	indf2,w,c
 25634  00BE2C  B4D8               	btfsc	status,2,c
 25635  00BE2E  D032               	goto	l21541
 25636  00BE30  D7DD               	goto	l21525
 25637  00BE32                     l21531:
 25638                           
 25639                           ; BSR set to: 1
 25640                           ;display.c: 455: display_content[2][cntr] = charger_sync[cntr++];
 25641  00BE32  0101               	movlb	1	; () banked
 25642  00BE34  518E               	movf	__display_charger@cntr& (0+255),w,b
 25643  00BE36  0D01               	mullw	1
 25644  00BE38  0E39               	movlw	low __display_charger@charger_sync
 25645  00BE3A  24F3               	addwf	prodl,w,c
 25646  00BE3C  6ED9               	movwf	fsr2l,c
 25647  00BE3E  0E01               	movlw	high __display_charger@charger_sync
 25648  00BE40  20F4               	addwfc	prodh,w,c
 25649  00BE42  6EDA               	movwf	fsr2h,c
 25650  00BE44  0101               	movlb	1	; () banked
 25651  00BE46  518E               	movf	__display_charger@cntr& (0+255),w,b
 25652  00BE48  0D01               	mullw	1
 25653  00BE4A  0E7C               	movlw	low (_display_content+40)
 25654  00BE4C  24F3               	addwf	prodl,w,c
 25655  00BE4E  6EE1               	movwf	fsr1l,c
 25656  00BE50  0E03               	movlw	high (_display_content+40)
 25657  00BE52  20F4               	addwfc	prodh,w,c
 25658  00BE54  6EE2               	movwf	fsr1h,c
 25659  00BE56  CFDF FFE7          	movff	indf2,indf1
 25660                           
 25661                           ; BSR set to: 1
 25662  00BE5A  0101               	movlb	1	; () banked
 25663  00BE5C  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25664  00BE5E                     l21535:
 25665  00BE5E  0101               	movlb	1	; () banked
 25666  00BE60  518E               	movf	__display_charger@cntr& (0+255),w,b
 25667  00BE62  0D01               	mullw	1
 25668  00BE64  0E39               	movlw	low __display_charger@charger_sync
 25669  00BE66  24F3               	addwf	prodl,w,c
 25670  00BE68  6ED9               	movwf	fsr2l,c
 25671  00BE6A  0E01               	movlw	high __display_charger@charger_sync
 25672  00BE6C  20F4               	addwfc	prodh,w,c
 25673  00BE6E  6EDA               	movwf	fsr2h,c
 25674  00BE70  50DF               	movf	indf2,w,c
 25675  00BE72  B4D8               	btfsc	status,2,c
 25676  00BE74  D00F               	goto	l21541
 25677  00BE76  D7DD               	goto	l21531
 25678  00BE78                     l21539:
 25679                           
 25680                           ; BSR set to: 1
 25681  00BE78  EC78  F0A1         	call	_buck_get_mode	;wreg free
 25682                           
 25683                           ; Switch size 1, requested type "space"
 25684                           ; Number of cases is 4, Range of values is 0 to 3
 25685                           ; switch strategies available:
 25686                           ; Name         Instructions Cycles
 25687                           ; simple_byte           13     7 (average)
 25688                           ;	Chosen strategy is simple_byte
 25689  00BE7C  0A00               	xorlw	0	; case 0
 25690  00BE7E  B4D8               	btfsc	status,2,c
 25691  00BE80  D785               	goto	l21517
 25692  00BE82  0A01               	xorlw	1	; case 1
 25693  00BE84  B4D8               	btfsc	status,2,c
 25694  00BE86  D7A5               	goto	l21523
 25695  00BE88  0A03               	xorlw	3	; case 2
 25696  00BE8A  B4D8               	btfsc	status,2,c
 25697  00BE8C  D7C5               	goto	l21529
 25698  00BE8E  0A01               	xorlw	1	; case 3
 25699  00BE90  B4D8               	btfsc	status,2,c
 25700  00BE92  D7E5               	goto	l21535
 25701  00BE94                     l21541:
 25702                           
 25703                           ;display.c: 459: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 25704  00BE94  EC73  F0A1         	call	_buck_get_dutycycle	;wreg free
 25705  00BE98  0100               	movlb	0	; () banked
 25706  00BE9A  6F90               	movwf	??__display_charger& (0+255),b
 25707  00BE9C  0100               	movlb	0	; () banked
 25708  00BE9E  5190               	movf	??__display_charger& (0+255),w,b
 25709  00BEA0  0100               	movlb	0	; () banked
 25710  00BEA2  6F78               	movwf	__display_itoa@value& (0+255),b
 25711  00BEA4  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 25712  00BEA6  0E00               	movlw	0
 25713  00BEA8  0100               	movlb	0	; () banked
 25714  00BEAA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 25715  00BEAC  0E90               	movlw	low (_display_content+60)
 25716  00BEAE  0100               	movlb	0	; () banked
 25717  00BEB0  6F7B               	movwf	__display_itoa@text& (0+255),b
 25718  00BEB2  0E03               	movlw	high (_display_content+60)
 25719  00BEB4  0100               	movlb	0	; () banked
 25720  00BEB6  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 25721  00BEB8  ECBE  F063         	call	__display_itoa	;wreg free
 25722  00BEBC  0012               	return		;funcret
 25723  00BEBE                     __end_of__display_charger:
 25724                           	opt stack 0
 25725                           tblptru	equ	0xFF8
 25726                           tblptrh	equ	0xFF7
 25727                           tblptrl	equ	0xFF6
 25728                           tablat	equ	0xFF5
 25729                           prodh	equ	0xFF4
 25730                           prodl	equ	0xFF3
 25731                           intcon	equ	0xFF2
 25732                           intcon2	equ	0xFF1
 25733                           intcon3	equ	0xFF0
 25734                           postinc0	equ	0xFEE
 25735                           wreg	equ	0xFE8
 25736                           indf1	equ	0xFE7
 25737                           postinc1	equ	0xFE6
 25738                           postdec1	equ	0xFE5
 25739                           plusw1	equ	0xFE3
 25740                           fsr1h	equ	0xFE2
 25741                           fsr1l	equ	0xFE1
 25742                           indf2	equ	0xFDF
 25743                           postinc2	equ	0xFDE
 25744                           postdec2	equ	0xFDD
 25745                           plusw2	equ	0xFDB
 25746                           fsr2h	equ	0xFDA
 25747                           fsr2l	equ	0xFD9
 25748                           status	equ	0xFD8
 25749                           
 25750 ;; *************** function __display_itoa *****************
 25751 ;; Defined at:
 25752 ;;		line 41 in file "display.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;  value           2   24[BANK0 ] int 
 25755 ;;  decimals        1   26[BANK0 ] unsigned char 
 25756 ;;  text            2   27[BANK0 ] PTR unsigned char 
 25757 ;;		 -> display_content(80), 
 25758 ;; Auto vars:     Size  Location     Type
 25759 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 25760 ;;  pos             1   47[BANK0 ] unsigned char 
 25761 ;;  missing         1   46[BANK0 ] char 
 25762 ;;  len             1   45[BANK0 ] unsigned char 
 25763 ;; Return value:  Size  Location     Type
 25764 ;;                  1    wreg      void 
 25765 ;; Registers used:
 25766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25767 ;; Tracked objects:
 25768 ;;		On entry : 0/0
 25769 ;;		On exit  : 0/0
 25770 ;;		Unchanged: 0/0
 25771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25772 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25773 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25774 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25775 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25776 ;;Total ram usage:       24 bytes
 25777 ;; Hardware stack levels used:    1
 25778 ;; Hardware stack levels required when called:   13
 25779 ;; This function calls:
 25780 ;;		_itoa
 25781 ;;		_strlen
 25782 ;; This function is called by:
 25783 ;;		__display_inout
 25784 ;;		__display_charger
 25785 ;;		__display_efficiency
 25786 ;;		__display_temperature
 25787 ;; This function uses a non-reentrant model
 25788 ;;
 25789                           
 25790                           	psect	text111
 25791  00C77C                     __ptext111:
 25792                           	opt stack 0
 25793  00C77C                     __display_itoa:
 25794                           	opt stack 15
 25795                           
 25796                           ;display.c: 43: uint8_t pos;
 25797                           ;display.c: 44: uint8_t len;
 25798                           ;display.c: 45: int8_t missing;
 25799                           ;display.c: 46: char tmp[10];
 25800                           ;display.c: 47: itoa(tmp, value, 10);
 25801                           
 25802                           ;incstack = 0
 25803  00C77C  0E83               	movlw	low __display_itoa@tmp
 25804  00C77E  0100               	movlb	0	; () banked
 25805  00C780  6F70               	movwf	itoa@buf& (0+255),b
 25806  00C782  0E00               	movlw	high __display_itoa@tmp
 25807  00C784  0100               	movlb	0	; () banked
 25808  00C786  6F71               	movwf	(itoa@buf+1)& (0+255),b
 25809  00C788  C078  F072         	movff	__display_itoa@value,itoa@val
 25810  00C78C  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 25811  00C790  0E00               	movlw	0
 25812  00C792  0100               	movlb	0	; () banked
 25813  00C794  6F75               	movwf	(itoa@base+1)& (0+255),b
 25814  00C796  0E0A               	movlw	10
 25815  00C798  6F74               	movwf	itoa@base& (0+255),b
 25816  00C79A  EC9F  F09A         	call	_itoa	;wreg free
 25817                           
 25818                           ;display.c: 48: len = strlen(tmp);
 25819  00C79E  0E83               	movlw	low __display_itoa@tmp
 25820  00C7A0  0100               	movlb	0	; () banked
 25821  00C7A2  6F60               	movwf	strlen@s& (0+255),b
 25822  00C7A4  0E00               	movlw	high __display_itoa@tmp
 25823  00C7A6  0100               	movlb	0	; () banked
 25824  00C7A8  6F61               	movwf	(strlen@s+1)& (0+255),b
 25825  00C7AA  EC56  F09A         	call	_strlen	;wreg free
 25826  00C7AE  0100               	movlb	0	; () banked
 25827  00C7B0  5160               	movf	?_strlen& (0+255),w,b
 25828  00C7B2  0100               	movlb	0	; () banked
 25829  00C7B4  6F8D               	movwf	__display_itoa@len& (0+255),b
 25830                           
 25831                           ; BSR set to: 0
 25832                           ;display.c: 50: if(value<0)
 25833  00C7B6  0100               	movlb	0	; () banked
 25834  00C7B8  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 25835  00C7BA  D072               	goto	l19751
 25836                           
 25837                           ; BSR set to: 0
 25838                           ;display.c: 51: {
 25839                           ;display.c: 52: missing = decimals + 2 - len;
 25840  00C7BC  0100               	movlb	0	; () banked
 25841  00C7BE  518D               	movf	__display_itoa@len& (0+255),w,b
 25842  00C7C0  0800               	sublw	0
 25843  00C7C2  0100               	movlb	0	; () banked
 25844  00C7C4  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 25845  00C7C6  0F02               	addlw	2
 25846  00C7C8  0100               	movlb	0	; () banked
 25847  00C7CA  6F8E               	movwf	__display_itoa@missing& (0+255),b
 25848                           
 25849                           ;display.c: 53: if(missing>0)
 25850  00C7CC  0100               	movlb	0	; () banked
 25851  00C7CE  518E               	movf	__display_itoa@missing& (0+255),w,b
 25852  00C7D0  0A80               	xorlw	128
 25853  00C7D2  0F7F               	addlw	-129
 25854  00C7D4  A0D8               	btfss	status,0,c
 25855  00C7D6  D0C2               	goto	l1919
 25856                           
 25857                           ; BSR set to: 0
 25858                           ;display.c: 54: {
 25859                           ;display.c: 55: for(pos=decimals;pos!=0xFF;--pos)
 25860  00C7D8  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 25861  00C7DC                     l19735:
 25862                           
 25863                           ; BSR set to: 0
 25864  00C7DC  0100               	movlb	0	; () banked
 25865  00C7DE  298F               	incf	__display_itoa@pos& (0+255),w,b
 25866  00C7E0  B4D8               	btfsc	status,2,c
 25867  00C7E2  D05A               	goto	l19749
 25868                           
 25869                           ; BSR set to: 0
 25870                           ;display.c: 56: {
 25871                           ;display.c: 57: if(pos>=missing)
 25872                           
 25873                           ; BSR set to: 0
 25874                           
 25875                           ; BSR set to: 0
 25876  00C7E4  0100               	movlb	0	; () banked
 25877  00C7E6  518F               	movf	__display_itoa@pos& (0+255),w,b
 25878  00C7E8  0100               	movlb	0	; () banked
 25879  00C7EA  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 25880  00C7EC  D004               	goto	l19741
 25881  00C7EE  0AFF               	xorlw	255
 25882  00C7F0  258E               	addwf	__display_itoa@missing& (0+255),w,b
 25883  00C7F2  B0D8               	btfsc	status,0,c
 25884  00C7F4  D03A               	goto	l19743
 25885  00C7F6                     l19741:
 25886                           
 25887                           ; BSR set to: 0
 25888                           ;display.c: 58: {
 25889                           ;display.c: 59: tmp[pos+1] = tmp[pos+1-missing];
 25890  00C7F6  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 25891  00C7FA  0100               	movlb	0	; () banked
 25892  00C7FC  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25893  00C7FE  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 25894  00C800  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 25895  00C802  0100               	movlb	0	; () banked
 25896  00C804  1F7D               	comf	??__display_itoa& (0+255),f,b
 25897  00C806  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 25898  00C808  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 25899  00C80A  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 25900  00C80C  0100               	movlb	0	; () banked
 25901  00C80E  518F               	movf	__display_itoa@pos& (0+255),w,b
 25902  00C810  0100               	movlb	0	; () banked
 25903  00C812  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 25904  00C814  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 25905  00C816  0100               	movlb	0	; () banked
 25906  00C818  517D               	movf	??__display_itoa& (0+255),w,b
 25907  00C81A  0100               	movlb	0	; () banked
 25908  00C81C  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25909  00C81E  0100               	movlb	0	; () banked
 25910  00C820  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 25911  00C822  0100               	movlb	0	; () banked
 25912  00C824  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25913  00C826  0E01               	movlw	1
 25914  00C828  0100               	movlb	0	; () banked
 25915  00C82A  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25916  00C82C  0E00               	movlw	0
 25917  00C82E  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25918  00C830  0E83               	movlw	low __display_itoa@tmp
 25919  00C832  0100               	movlb	0	; () banked
 25920  00C834  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 25921  00C836  6ED9               	movwf	fsr2l,c
 25922  00C838  0E00               	movlw	high __display_itoa@tmp
 25923  00C83A  0100               	movlb	0	; () banked
 25924  00C83C  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 25925  00C83E  6EDA               	movwf	fsr2h,c
 25926  00C840  0100               	movlb	0	; () banked
 25927  00C842  518F               	movf	__display_itoa@pos& (0+255),w,b
 25928  00C844  0100               	movlb	0	; () banked
 25929  00C846  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 25930  00C848  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 25931  00C84A  0E01               	movlw	1
 25932  00C84C  0100               	movlb	0	; () banked
 25933  00C84E  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 25934  00C850  0E00               	movlw	0
 25935  00C852  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 25936  00C854  0E83               	movlw	low __display_itoa@tmp
 25937  00C856  0100               	movlb	0	; () banked
 25938  00C858  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 25939  00C85A  6EE1               	movwf	fsr1l,c
 25940  00C85C  0E00               	movlw	high __display_itoa@tmp
 25941  00C85E  0100               	movlb	0	; () banked
 25942  00C860  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 25943  00C862  6EE2               	movwf	fsr1h,c
 25944  00C864  CFDF FFE7          	movff	indf2,indf1
 25945                           
 25946                           ;display.c: 60: }
 25947  00C868  D014               	goto	l19745
 25948  00C86A                     l19743:
 25949                           
 25950                           ; BSR set to: 0
 25951                           ;display.c: 61: else
 25952                           ;display.c: 62: {
 25953                           ;display.c: 63: tmp[pos+1] = '0';
 25954  00C86A  0100               	movlb	0	; () banked
 25955  00C86C  518F               	movf	__display_itoa@pos& (0+255),w,b
 25956  00C86E  0100               	movlb	0	; () banked
 25957  00C870  6F7D               	movwf	??__display_itoa& (0+255),b
 25958  00C872  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25959  00C874  0E01               	movlw	1
 25960  00C876  0100               	movlb	0	; () banked
 25961  00C878  277D               	addwf	??__display_itoa& (0+255),f,b
 25962  00C87A  0E00               	movlw	0
 25963  00C87C  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 25964  00C87E  0E83               	movlw	low __display_itoa@tmp
 25965  00C880  0100               	movlb	0	; () banked
 25966  00C882  257D               	addwf	??__display_itoa& (0+255),w,b
 25967  00C884  6ED9               	movwf	fsr2l,c
 25968  00C886  0E00               	movlw	high __display_itoa@tmp
 25969  00C888  0100               	movlb	0	; () banked
 25970  00C88A  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 25971  00C88C  6EDA               	movwf	fsr2h,c
 25972  00C88E  0E30               	movlw	48
 25973  00C890  6EDF               	movwf	indf2,c
 25974  00C892                     l19745:
 25975                           
 25976                           ; BSR set to: 0
 25977  00C892  0100               	movlb	0	; () banked
 25978  00C894  078F               	decf	__display_itoa@pos& (0+255),f,b
 25979  00C896  D7A2               	goto	l19735
 25980  00C898                     l19749:
 25981                           
 25982                           ; BSR set to: 0
 25983                           ;display.c: 64: }
 25984                           ;display.c: 65: }
 25985                           ;display.c: 66: len = decimals + 2;
 25986  00C898  0100               	movlb	0	; () banked
 25987  00C89A  517A               	movf	__display_itoa@decimals& (0+255),w,b
 25988  00C89C  0F02               	addlw	2
 25989  00C89E  D05C               	goto	L11
 25990  00C8A0                     l19751:
 25991                           
 25992                           ; BSR set to: 0
 25993                           ;display.c: 69: else
 25994                           ;display.c: 70: {
 25995                           ;display.c: 71: missing = decimals + 1 - len;
 25996  00C8A0  0100               	movlb	0	; () banked
 25997  00C8A2  518D               	movf	__display_itoa@len& (0+255),w,b
 25998  00C8A4  0800               	sublw	0
 25999  00C8A6  0100               	movlb	0	; () banked
 26000  00C8A8  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 26001  00C8AA  0100               	movlb	0	; () banked
 26002  00C8AC  6F7D               	movwf	??__display_itoa& (0+255),b
 26003  00C8AE  0100               	movlb	0	; () banked
 26004  00C8B0  297D               	incf	??__display_itoa& (0+255),w,b
 26005  00C8B2  0100               	movlb	0	; () banked
 26006  00C8B4  6F8E               	movwf	__display_itoa@missing& (0+255),b
 26007                           
 26008                           ;display.c: 72: if(missing>0)
 26009  00C8B6  0100               	movlb	0	; () banked
 26010  00C8B8  518E               	movf	__display_itoa@missing& (0+255),w,b
 26011  00C8BA  0A80               	xorlw	128
 26012  00C8BC  0F7F               	addlw	-129
 26013  00C8BE  A0D8               	btfss	status,0,c
 26014  00C8C0  D04D               	goto	l1919
 26015                           
 26016                           ; BSR set to: 0
 26017                           ;display.c: 73: {
 26018                           ;display.c: 74: for(pos=decimals;pos!=0xFF;--pos)
 26019  00C8C2  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 26020  00C8C6                     l19755:
 26021                           
 26022                           ; BSR set to: 0
 26023  00C8C6  0100               	movlb	0	; () banked
 26024  00C8C8  298F               	incf	__display_itoa@pos& (0+255),w,b
 26025  00C8CA  B4D8               	btfsc	status,2,c
 26026  00C8CC  D043               	goto	l19769
 26027                           
 26028                           ; BSR set to: 0
 26029                           ;display.c: 75: {
 26030                           ;display.c: 76: if(pos>=missing)
 26031                           
 26032                           ; BSR set to: 0
 26033                           
 26034                           ; BSR set to: 0
 26035  00C8CE  0100               	movlb	0	; () banked
 26036  00C8D0  518F               	movf	__display_itoa@pos& (0+255),w,b
 26037  00C8D2  0100               	movlb	0	; () banked
 26038  00C8D4  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 26039  00C8D6  D004               	goto	l19761
 26040  00C8D8  0AFF               	xorlw	255
 26041  00C8DA  258E               	addwf	__display_itoa@missing& (0+255),w,b
 26042  00C8DC  B0D8               	btfsc	status,0,c
 26043  00C8DE  D02C               	goto	l19763
 26044  00C8E0                     l19761:
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;display.c: 77: {
 26048                           ;display.c: 78: tmp[pos] = tmp[pos-missing];
 26049  00C8E0  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 26050  00C8E4  0100               	movlb	0	; () banked
 26051  00C8E6  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 26052  00C8E8  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 26053  00C8EA  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 26054  00C8EC  0100               	movlb	0	; () banked
 26055  00C8EE  1F7D               	comf	??__display_itoa& (0+255),f,b
 26056  00C8F0  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 26057  00C8F2  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 26058  00C8F4  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 26059  00C8F6  0100               	movlb	0	; () banked
 26060  00C8F8  518F               	movf	__display_itoa@pos& (0+255),w,b
 26061  00C8FA  0100               	movlb	0	; () banked
 26062  00C8FC  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 26063  00C8FE  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 26064  00C900  0100               	movlb	0	; () banked
 26065  00C902  517D               	movf	??__display_itoa& (0+255),w,b
 26066  00C904  0100               	movlb	0	; () banked
 26067  00C906  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 26068  00C908  0100               	movlb	0	; () banked
 26069  00C90A  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 26070  00C90C  0100               	movlb	0	; () banked
 26071  00C90E  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 26072  00C910  0E83               	movlw	low __display_itoa@tmp
 26073  00C912  0100               	movlb	0	; () banked
 26074  00C914  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 26075  00C916  6ED9               	movwf	fsr2l,c
 26076  00C918  0E00               	movlw	high __display_itoa@tmp
 26077  00C91A  0100               	movlb	0	; () banked
 26078  00C91C  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 26079  00C91E  6EDA               	movwf	fsr2h,c
 26080  00C920  0100               	movlb	0	; () banked
 26081  00C922  518F               	movf	__display_itoa@pos& (0+255),w,b
 26082  00C924  0D01               	mullw	1
 26083  00C926  0E83               	movlw	low __display_itoa@tmp
 26084  00C928  24F3               	addwf	prodl,w,c
 26085  00C92A  6EE1               	movwf	fsr1l,c
 26086  00C92C  0E00               	movlw	high __display_itoa@tmp
 26087  00C92E  20F4               	addwfc	prodh,w,c
 26088  00C930  6EE2               	movwf	fsr1h,c
 26089  00C932  CFDF FFE7          	movff	indf2,indf1
 26090                           
 26091                           ;display.c: 79: }
 26092  00C936  D00B               	goto	l19765
 26093  00C938                     l19763:
 26094                           
 26095                           ; BSR set to: 0
 26096                           ;display.c: 80: else
 26097                           ;display.c: 81: {
 26098                           ;display.c: 82: tmp[pos] = '0';
 26099  00C938  0100               	movlb	0	; () banked
 26100  00C93A  518F               	movf	__display_itoa@pos& (0+255),w,b
 26101  00C93C  0D01               	mullw	1
 26102  00C93E  0E83               	movlw	low __display_itoa@tmp
 26103  00C940  24F3               	addwf	prodl,w,c
 26104  00C942  6ED9               	movwf	fsr2l,c
 26105  00C944  0E00               	movlw	high __display_itoa@tmp
 26106  00C946  20F4               	addwfc	prodh,w,c
 26107  00C948  6EDA               	movwf	fsr2h,c
 26108  00C94A  0E30               	movlw	48
 26109  00C94C  6EDF               	movwf	indf2,c
 26110  00C94E                     l19765:
 26111                           
 26112                           ; BSR set to: 0
 26113  00C94E  0100               	movlb	0	; () banked
 26114  00C950  078F               	decf	__display_itoa@pos& (0+255),f,b
 26115  00C952  D7B9               	goto	l19755
 26116  00C954                     l19769:
 26117                           
 26118                           ; BSR set to: 0
 26119                           ;display.c: 83: }
 26120                           ;display.c: 84: }
 26121                           ;display.c: 85: len = decimals + 1;
 26122  00C954  0100               	movlb	0	; () banked
 26123  00C956  297A               	incf	__display_itoa@decimals& (0+255),w,b
 26124  00C958                     L11:
 26125  00C958  0100               	movlb	0	; () banked
 26126  00C95A  6F8D               	movwf	__display_itoa@len& (0+255),b
 26127  00C95C                     l1919:
 26128                           
 26129                           ; BSR set to: 0
 26130                           ;display.c: 86: }
 26131                           ;display.c: 87: }
 26132                           ;display.c: 89: decimals = len - decimals - 1;
 26133  00C95C  0100               	movlb	0	; () banked
 26134  00C95E  517A               	movf	__display_itoa@decimals& (0+255),w,b
 26135  00C960  0800               	sublw	0
 26136  00C962  0100               	movlb	0	; () banked
 26137  00C964  258D               	addwf	__display_itoa@len& (0+255),w,b
 26138  00C966  0100               	movlb	0	; () banked
 26139  00C968  6F7D               	movwf	??__display_itoa& (0+255),b
 26140  00C96A  0100               	movlb	0	; () banked
 26141  00C96C  057D               	decf	??__display_itoa& (0+255),w,b
 26142  00C96E  0100               	movlb	0	; () banked
 26143  00C970  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 26144                           
 26145                           ; BSR set to: 0
 26146                           ;display.c: 91: for(pos=0;pos<len;++pos)
 26147  00C972  0E00               	movlw	0
 26148  00C974  0100               	movlb	0	; () banked
 26149  00C976  6F8F               	movwf	__display_itoa@pos& (0+255),b
 26150  00C978  D02E               	goto	l19783
 26151  00C97A                     l19773:
 26152                           
 26153                           ; BSR set to: 0
 26154                           ;display.c: 92: {
 26155                           ;display.c: 93: text[pos] = tmp[pos];
 26156  00C97A  0100               	movlb	0	; () banked
 26157  00C97C  518F               	movf	__display_itoa@pos& (0+255),w,b
 26158  00C97E  0D01               	mullw	1
 26159  00C980  0E83               	movlw	low __display_itoa@tmp
 26160  00C982  24F3               	addwf	prodl,w,c
 26161  00C984  6ED9               	movwf	fsr2l,c
 26162  00C986  0E00               	movlw	high __display_itoa@tmp
 26163  00C988  20F4               	addwfc	prodh,w,c
 26164  00C98A  6EDA               	movwf	fsr2h,c
 26165  00C98C  0100               	movlb	0	; () banked
 26166  00C98E  518F               	movf	__display_itoa@pos& (0+255),w,b
 26167  00C990  0D01               	mullw	1
 26168  00C992  50F3               	movf	prodl,w,c
 26169  00C994  0100               	movlb	0	; () banked
 26170  00C996  257B               	addwf	__display_itoa@text& (0+255),w,b
 26171  00C998  6EE1               	movwf	fsr1l,c
 26172  00C99A  50F4               	movf	prodh,w,c
 26173  00C99C  0100               	movlb	0	; () banked
 26174  00C99E  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 26175  00C9A0  6EE2               	movwf	fsr1h,c
 26176  00C9A2  CFDF FFE7          	movff	indf2,indf1
 26177                           
 26178                           ; BSR set to: 0
 26179                           ;display.c: 94: if(pos==decimals)
 26180  00C9A6  0100               	movlb	0	; () banked
 26181  00C9A8  517A               	movf	__display_itoa@decimals& (0+255),w,b
 26182  00C9AA  0100               	movlb	0	; () banked
 26183  00C9AC  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 26184  00C9AE  A4D8               	btfss	status,2,c
 26185  00C9B0  D010               	goto	l19781
 26186                           
 26187                           ; BSR set to: 0
 26188                           ;display.c: 95: {
 26189                           ;display.c: 97: ++pos;
 26190  00C9B2  0100               	movlb	0	; () banked
 26191  00C9B4  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 26192                           
 26193                           ; BSR set to: 0
 26194                           ;display.c: 98: text[pos] = '.';
 26195  00C9B6  0100               	movlb	0	; () banked
 26196  00C9B8  518F               	movf	__display_itoa@pos& (0+255),w,b
 26197  00C9BA  0D01               	mullw	1
 26198  00C9BC  50F3               	movf	prodl,w,c
 26199  00C9BE  0100               	movlb	0	; () banked
 26200  00C9C0  257B               	addwf	__display_itoa@text& (0+255),w,b
 26201  00C9C2  6ED9               	movwf	fsr2l,c
 26202  00C9C4  50F4               	movf	prodh,w,c
 26203  00C9C6  0100               	movlb	0	; () banked
 26204  00C9C8  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 26205  00C9CA  6EDA               	movwf	fsr2h,c
 26206  00C9CC  0E2E               	movlw	46
 26207  00C9CE  6EDF               	movwf	indf2,c
 26208                           
 26209                           ;display.c: 99: break;
 26210  00C9D0  D02A               	goto	l19789
 26211  00C9D2                     l19781:
 26212                           
 26213                           ; BSR set to: 0
 26214  00C9D2  0100               	movlb	0	; () banked
 26215  00C9D4  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 26216  00C9D6                     l19783:
 26217                           
 26218                           ; BSR set to: 0
 26219  00C9D6  0100               	movlb	0	; () banked
 26220  00C9D8  518D               	movf	__display_itoa@len& (0+255),w,b
 26221  00C9DA  0100               	movlb	0	; () banked
 26222  00C9DC  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 26223  00C9DE  B0D8               	btfsc	status,0,c
 26224  00C9E0  D022               	goto	l19789
 26225  00C9E2  D7CB               	goto	l19773
 26226  00C9E4                     l19785:
 26227                           
 26228                           ; BSR set to: 0
 26229                           ;display.c: 103: {
 26230                           ;display.c: 104: text[pos+1] = tmp[pos];
 26231  00C9E4  0100               	movlb	0	; () banked
 26232  00C9E6  518F               	movf	__display_itoa@pos& (0+255),w,b
 26233  00C9E8  0D01               	mullw	1
 26234  00C9EA  0E83               	movlw	low __display_itoa@tmp
 26235  00C9EC  24F3               	addwf	prodl,w,c
 26236  00C9EE  6ED9               	movwf	fsr2l,c
 26237  00C9F0  0E00               	movlw	high __display_itoa@tmp
 26238  00C9F2  20F4               	addwfc	prodh,w,c
 26239  00C9F4  6EDA               	movwf	fsr2h,c
 26240  00C9F6  0100               	movlb	0	; () banked
 26241  00C9F8  518F               	movf	__display_itoa@pos& (0+255),w,b
 26242  00C9FA  0100               	movlb	0	; () banked
 26243  00C9FC  6F7D               	movwf	??__display_itoa& (0+255),b
 26244  00C9FE  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 26245  00CA00  0E01               	movlw	1
 26246  00CA02  0100               	movlb	0	; () banked
 26247  00CA04  277D               	addwf	??__display_itoa& (0+255),f,b
 26248  00CA06  0E00               	movlw	0
 26249  00CA08  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 26250  00CA0A  0100               	movlb	0	; () banked
 26251  00CA0C  517D               	movf	??__display_itoa& (0+255),w,b
 26252  00CA0E  0100               	movlb	0	; () banked
 26253  00CA10  257B               	addwf	__display_itoa@text& (0+255),w,b
 26254  00CA12  6EE1               	movwf	fsr1l,c
 26255  00CA14  0100               	movlb	0	; () banked
 26256  00CA16  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 26257  00CA18  0100               	movlb	0	; () banked
 26258  00CA1A  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 26259  00CA1C  6EE2               	movwf	fsr1h,c
 26260  00CA1E  CFDF FFE7          	movff	indf2,indf1
 26261                           
 26262                           ; BSR set to: 0
 26263  00CA22  0100               	movlb	0	; () banked
 26264  00CA24  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 26265  00CA26                     l19789:
 26266                           
 26267                           ; BSR set to: 0
 26268  00CA26  0100               	movlb	0	; () banked
 26269  00CA28  518D               	movf	__display_itoa@len& (0+255),w,b
 26270  00CA2A  0100               	movlb	0	; () banked
 26271  00CA2C  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 26272  00CA2E  B0D8               	btfsc	status,0,c
 26273  00CA30  0012               	return	
 26274  00CA32  D7D8               	goto	l19785
 26275  00CA34                     __end_of__display_itoa:
 26276                           	opt stack 0
 26277                           tblptru	equ	0xFF8
 26278                           tblptrh	equ	0xFF7
 26279                           tblptrl	equ	0xFF6
 26280                           tablat	equ	0xFF5
 26281                           prodh	equ	0xFF4
 26282                           prodl	equ	0xFF3
 26283                           intcon	equ	0xFF2
 26284                           intcon2	equ	0xFF1
 26285                           intcon3	equ	0xFF0
 26286                           postinc0	equ	0xFEE
 26287                           wreg	equ	0xFE8
 26288                           indf1	equ	0xFE7
 26289                           postinc1	equ	0xFE6
 26290                           postdec1	equ	0xFE5
 26291                           plusw1	equ	0xFE3
 26292                           fsr1h	equ	0xFE2
 26293                           fsr1l	equ	0xFE1
 26294                           indf2	equ	0xFDF
 26295                           postinc2	equ	0xFDE
 26296                           postdec2	equ	0xFDD
 26297                           plusw2	equ	0xFDB
 26298                           fsr2h	equ	0xFDA
 26299                           fsr2l	equ	0xFD9
 26300                           status	equ	0xFD8
 26301                           
 26302 ;; *************** function _strlen *****************
 26303 ;; Defined at:
 26304 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
 26305 ;; Parameters:    Size  Location     Type
 26306 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 26307 ;;		 -> _display_itoa@tmp(10), 
 26308 ;; Auto vars:     Size  Location     Type
 26309 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 26310 ;;		 -> _display_itoa@tmp(10), 
 26311 ;; Return value:  Size  Location     Type
 26312 ;;                  2    0[BANK0 ] unsigned int 
 26313 ;; Registers used:
 26314 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26315 ;; Tracked objects:
 26316 ;;		On entry : 0/0
 26317 ;;		On exit  : 0/0
 26318 ;;		Unchanged: 0/0
 26319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26321 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26322 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26323 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26324 ;;Total ram usage:        6 bytes
 26325 ;; Hardware stack levels used:    1
 26326 ;; Hardware stack levels required when called:   10
 26327 ;; This function calls:
 26328 ;;		Nothing
 26329 ;; This function is called by:
 26330 ;;		__display_itoa
 26331 ;; This function uses a non-reentrant model
 26332 ;;
 26333                           
 26334                           	psect	text112
 26335  0134AC                     __ptext112:
 26336                           	opt stack 0
 26337  0134AC                     _strlen:
 26338                           	opt stack 17
 26339                           
 26340                           ; BSR set to: 0
 26341                           ;incstack = 0
 26342  0134AC  C060  F064         	movff	strlen@s,strlen@cp
 26343  0134B0  C061  F065         	movff	strlen@s+1,strlen@cp+1
 26344  0134B4  D003               	goto	l19125
 26345  0134B6                     l19123:
 26346  0134B6  0100               	movlb	0	; () banked
 26347  0134B8  4B64               	infsnz	strlen@cp& (0+255),f,b
 26348  0134BA  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 26349  0134BC                     l19125:
 26350  0134BC  C064  FFD9         	movff	strlen@cp,fsr2l
 26351  0134C0  C065  FFDA         	movff	strlen@cp+1,fsr2h
 26352  0134C4  50DF               	movf	indf2,w,c
 26353  0134C6  A4D8               	btfss	status,2,c
 26354  0134C8  D7F6               	goto	l19123
 26355  0134CA  C060  F062         	movff	strlen@s,??_strlen
 26356  0134CE  C061  F063         	movff	strlen@s+1,??_strlen+1
 26357  0134D2  0100               	movlb	0	; () banked
 26358  0134D4  1F62               	comf	??_strlen& (0+255),f,b
 26359  0134D6  1F63               	comf	(??_strlen+1)& (0+255),f,b
 26360  0134D8  4B62               	infsnz	??_strlen& (0+255),f,b
 26361  0134DA  2B63               	incf	(??_strlen+1)& (0+255),f,b
 26362  0134DC  0100               	movlb	0	; () banked
 26363  0134DE  5164               	movf	strlen@cp& (0+255),w,b
 26364  0134E0  0100               	movlb	0	; () banked
 26365  0134E2  2562               	addwf	??_strlen& (0+255),w,b
 26366  0134E4  0100               	movlb	0	; () banked
 26367  0134E6  6F60               	movwf	?_strlen& (0+255),b
 26368  0134E8  0100               	movlb	0	; () banked
 26369  0134EA  5165               	movf	(strlen@cp+1)& (0+255),w,b
 26370  0134EC  0100               	movlb	0	; () banked
 26371  0134EE  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 26372  0134F0  0100               	movlb	0	; () banked
 26373  0134F2  6F61               	movwf	(?_strlen+1)& (0+255),b
 26374  0134F4  0012               	return	
 26375  0134F6                     __end_of_strlen:
 26376                           	opt stack 0
 26377                           tblptru	equ	0xFF8
 26378                           tblptrh	equ	0xFF7
 26379                           tblptrl	equ	0xFF6
 26380                           tablat	equ	0xFF5
 26381                           prodh	equ	0xFF4
 26382                           prodl	equ	0xFF3
 26383                           intcon	equ	0xFF2
 26384                           intcon2	equ	0xFF1
 26385                           intcon3	equ	0xFF0
 26386                           postinc0	equ	0xFEE
 26387                           wreg	equ	0xFE8
 26388                           indf1	equ	0xFE7
 26389                           postinc1	equ	0xFE6
 26390                           postdec1	equ	0xFE5
 26391                           plusw1	equ	0xFE3
 26392                           fsr1h	equ	0xFE2
 26393                           fsr1l	equ	0xFE1
 26394                           indf2	equ	0xFDF
 26395                           postinc2	equ	0xFDE
 26396                           postdec2	equ	0xFDD
 26397                           plusw2	equ	0xFDB
 26398                           fsr2h	equ	0xFDA
 26399                           fsr2l	equ	0xFD9
 26400                           status	equ	0xFD8
 26401                           
 26402 ;; *************** function _itoa *****************
 26403 ;; Defined at:
 26404 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 26405 ;; Parameters:    Size  Location     Type
 26406 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 26407 ;;		 -> _display_itoa@tmp(10), 
 26408 ;;  val             2   18[BANK0 ] int 
 26409 ;;  base            2   20[BANK0 ] int 
 26410 ;; Auto vars:     Size  Location     Type
 26411 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 26412 ;;		 -> _display_itoa@tmp(10), 
 26413 ;; Return value:  Size  Location     Type
 26414 ;;                  2   16[BANK0 ] PTR unsigned char 
 26415 ;; Registers used:
 26416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26417 ;; Tracked objects:
 26418 ;;		On entry : 0/0
 26419 ;;		On exit  : 0/0
 26420 ;;		Unchanged: 0/0
 26421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26422 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26425 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26426 ;;Total ram usage:        8 bytes
 26427 ;; Hardware stack levels used:    1
 26428 ;; Hardware stack levels required when called:   12
 26429 ;; This function calls:
 26430 ;;		_utoa
 26431 ;; This function is called by:
 26432 ;;		__display_itoa
 26433 ;; This function uses a non-reentrant model
 26434 ;;
 26435                           
 26436                           	psect	text113
 26437  01353E                     __ptext113:
 26438                           	opt stack 0
 26439  01353E                     _itoa:
 26440                           	opt stack 15
 26441                           
 26442                           ; BSR set to: 0
 26443                           ;incstack = 0
 26444  01353E  C070  F076         	movff	itoa@buf,itoa@cp
 26445  013542  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 26446  013546  0100               	movlb	0	; () banked
 26447  013548  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 26448  01354A  D00E               	goto	l19117
 26449                           
 26450                           ; BSR set to: 0
 26451  01354C  C070  FFD9         	movff	itoa@buf,fsr2l
 26452  013550  C071  FFDA         	movff	itoa@buf+1,fsr2h
 26453  013554  0E2D               	movlw	45
 26454  013556  6EDF               	movwf	indf2,c
 26455                           
 26456                           ; BSR set to: 0
 26457  013558  0100               	movlb	0	; () banked
 26458  01355A  4B70               	infsnz	itoa@buf& (0+255),f,b
 26459  01355C  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 26460                           
 26461                           ; BSR set to: 0
 26462  01355E  0100               	movlb	0	; () banked
 26463  013560  6D72               	negf	itoa@val& (0+255),b
 26464  013562  1F73               	comf	(itoa@val+1)& (0+255),f,b
 26465  013564  B0D8               	btfsc	status,0,c
 26466  013566  2B73               	incf	(itoa@val+1)& (0+255),f,b
 26467  013568                     l19117:
 26468                           
 26469                           ; BSR set to: 0
 26470  013568  C070  F067         	movff	itoa@buf,utoa@buf
 26471  01356C  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 26472  013570  C072  F069         	movff	itoa@val,utoa@val
 26473  013574  C073  F06A         	movff	itoa@val+1,utoa@val+1
 26474  013578  C074  F06B         	movff	itoa@base,utoa@base
 26475  01357C  C075  F06C         	movff	itoa@base+1,utoa@base+1
 26476  013580  ECB4  F087         	call	_utoa	;wreg free
 26477  013584  0012               	return	
 26478  013586                     __end_of_itoa:
 26479                           	opt stack 0
 26480                           tblptru	equ	0xFF8
 26481                           tblptrh	equ	0xFF7
 26482                           tblptrl	equ	0xFF6
 26483                           tablat	equ	0xFF5
 26484                           prodh	equ	0xFF4
 26485                           prodl	equ	0xFF3
 26486                           intcon	equ	0xFF2
 26487                           intcon2	equ	0xFF1
 26488                           intcon3	equ	0xFF0
 26489                           postinc0	equ	0xFEE
 26490                           wreg	equ	0xFE8
 26491                           indf1	equ	0xFE7
 26492                           postinc1	equ	0xFE6
 26493                           postdec1	equ	0xFE5
 26494                           plusw1	equ	0xFE3
 26495                           fsr1h	equ	0xFE2
 26496                           fsr1l	equ	0xFE1
 26497                           indf2	equ	0xFDF
 26498                           postinc2	equ	0xFDE
 26499                           postdec2	equ	0xFDD
 26500                           plusw2	equ	0xFDB
 26501                           fsr2h	equ	0xFDA
 26502                           fsr2l	equ	0xFD9
 26503                           status	equ	0xFD8
 26504                           
 26505 ;; *************** function _utoa *****************
 26506 ;; Defined at:
 26507 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 26508 ;; Parameters:    Size  Location     Type
 26509 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 26510 ;;		 -> _display_itoa@tmp(10), 
 26511 ;;  val             2    9[BANK0 ] unsigned int 
 26512 ;;  base            2   11[BANK0 ] int 
 26513 ;; Auto vars:     Size  Location     Type
 26514 ;;  v               2   13[BANK0 ] unsigned int 
 26515 ;;  c               1   15[BANK0 ] unsigned char 
 26516 ;; Return value:  Size  Location     Type
 26517 ;;                  2    7[BANK0 ] PTR unsigned char 
 26518 ;; Registers used:
 26519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26520 ;; Tracked objects:
 26521 ;;		On entry : 0/0
 26522 ;;		On exit  : 0/0
 26523 ;;		Unchanged: 0/0
 26524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26525 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26526 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26528 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26529 ;;Total ram usage:        9 bytes
 26530 ;; Hardware stack levels used:    1
 26531 ;; Hardware stack levels required when called:   11
 26532 ;; This function calls:
 26533 ;;		___lwdiv
 26534 ;;		___lwmod
 26535 ;; This function is called by:
 26536 ;;		_itoa
 26537 ;; This function uses a non-reentrant model
 26538 ;;
 26539                           
 26540                           	psect	text114
 26541  010F68                     __ptext114:
 26542                           	opt stack 0
 26543  010F68                     _utoa:
 26544                           	opt stack 15
 26545                           
 26546                           ;incstack = 0
 26547  010F68  C069  F06D         	movff	utoa@val,utoa@v
 26548  010F6C  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 26549  010F70                     l18905:
 26550  010F70  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 26551  010F74  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 26552  010F78  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 26553  010F7C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 26554  010F80  EC44  F092         	call	___lwdiv	;wreg free
 26555  010F84  C060  F06D         	movff	?___lwdiv,utoa@v
 26556  010F88  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 26557  010F8C  0100               	movlb	0	; () banked
 26558  010F8E  4B67               	infsnz	utoa@buf& (0+255),f,b
 26559  010F90  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 26560                           
 26561                           ; BSR set to: 0
 26562  010F92  0100               	movlb	0	; () banked
 26563  010F94  516D               	movf	utoa@v& (0+255),w,b
 26564  010F96  0100               	movlb	0	; () banked
 26565  010F98  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 26566  010F9A  A4D8               	btfss	status,2,c
 26567  010F9C  D7E9               	goto	l18905
 26568                           
 26569                           ; BSR set to: 0
 26570                           
 26571                           ; BSR set to: 0
 26572  010F9E  C067  FFD9         	movff	utoa@buf,fsr2l
 26573  010FA2  C068  FFDA         	movff	utoa@buf+1,fsr2h
 26574  010FA6  0E00               	movlw	0
 26575  010FA8  6EDF               	movwf	indf2,c
 26576                           
 26577                           ; BSR set to: 0
 26578  010FAA  0100               	movlb	0	; () banked
 26579  010FAC  0767               	decf	utoa@buf& (0+255),f,b
 26580  010FAE  A0D8               	btfss	status,0,c
 26581  010FB0  0768               	decf	(utoa@buf+1)& (0+255),f,b
 26582  010FB2                     l18915:
 26583                           
 26584                           ; BSR set to: 0
 26585  010FB2  C069  F060         	movff	utoa@val,___lwmod@dividend
 26586  010FB6  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 26587  010FBA  C06B  F062         	movff	utoa@base,___lwmod@divisor
 26588  010FBE  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 26589  010FC2  EC84  F096         	call	___lwmod	;wreg free
 26590  010FC6  0100               	movlb	0	; () banked
 26591  010FC8  5160               	movf	?___lwmod& (0+255),w,b
 26592  010FCA  0100               	movlb	0	; () banked
 26593  010FCC  6F6F               	movwf	utoa@c& (0+255),b
 26594                           
 26595                           ; BSR set to: 0
 26596  010FCE  C069  F060         	movff	utoa@val,___lwdiv@dividend
 26597  010FD2  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 26598  010FD6  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 26599  010FDA  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 26600  010FDE  EC44  F092         	call	___lwdiv	;wreg free
 26601  010FE2  C060  F069         	movff	?___lwdiv,utoa@val
 26602  010FE6  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 26603  010FEA  0E09               	movlw	9
 26604  010FEC  0100               	movlb	0	; () banked
 26605  010FEE  656F               	cpfsgt	utoa@c& (0+255),b
 26606  010FF0  D003               	goto	l3654
 26607                           
 26608                           ; BSR set to: 0
 26609  010FF2  0E07               	movlw	7
 26610  010FF4  0100               	movlb	0	; () banked
 26611  010FF6  276F               	addwf	utoa@c& (0+255),f,b
 26612  010FF8                     l3654:
 26613                           
 26614                           ; BSR set to: 0
 26615  010FF8  0E30               	movlw	48
 26616  010FFA  0100               	movlb	0	; () banked
 26617  010FFC  276F               	addwf	utoa@c& (0+255),f,b
 26618                           
 26619                           ; BSR set to: 0
 26620  010FFE  C067  FFD9         	movff	utoa@buf,fsr2l
 26621  011002  C068  FFDA         	movff	utoa@buf+1,fsr2h
 26622  011006  C06F  FFDF         	movff	utoa@c,indf2
 26623                           
 26624                           ; BSR set to: 0
 26625  01100A  0100               	movlb	0	; () banked
 26626  01100C  0767               	decf	utoa@buf& (0+255),f,b
 26627  01100E  A0D8               	btfss	status,0,c
 26628  011010  0768               	decf	(utoa@buf+1)& (0+255),f,b
 26629                           
 26630                           ; BSR set to: 0
 26631  011012  0100               	movlb	0	; () banked
 26632  011014  5169               	movf	utoa@val& (0+255),w,b
 26633  011016  0100               	movlb	0	; () banked
 26634  011018  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 26635  01101A  A4D8               	btfss	status,2,c
 26636  01101C  D7CA               	goto	l18915
 26637                           
 26638                           ; BSR set to: 0
 26639                           ;	Return value of _utoa is never used
 26640                           
 26641                           ; BSR set to: 0
 26642  01101E  0100               	movlb	0	; () banked
 26643  011020  4B67               	infsnz	utoa@buf& (0+255),f,b
 26644  011022  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 26645  011024  0012               	return	
 26646  011026                     __end_of_utoa:
 26647                           	opt stack 0
 26648                           tblptru	equ	0xFF8
 26649                           tblptrh	equ	0xFF7
 26650                           tblptrl	equ	0xFF6
 26651                           tablat	equ	0xFF5
 26652                           prodh	equ	0xFF4
 26653                           prodl	equ	0xFF3
 26654                           intcon	equ	0xFF2
 26655                           intcon2	equ	0xFF1
 26656                           intcon3	equ	0xFF0
 26657                           postinc0	equ	0xFEE
 26658                           wreg	equ	0xFE8
 26659                           indf1	equ	0xFE7
 26660                           postinc1	equ	0xFE6
 26661                           postdec1	equ	0xFE5
 26662                           plusw1	equ	0xFE3
 26663                           fsr1h	equ	0xFE2
 26664                           fsr1l	equ	0xFE1
 26665                           indf2	equ	0xFDF
 26666                           postinc2	equ	0xFDE
 26667                           postdec2	equ	0xFDD
 26668                           plusw2	equ	0xFDB
 26669                           fsr2h	equ	0xFDA
 26670                           fsr2l	equ	0xFD9
 26671                           status	equ	0xFD8
 26672                           
 26673 ;; *************** function ___lwmod *****************
 26674 ;; Defined at:
 26675 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
 26676 ;; Parameters:    Size  Location     Type
 26677 ;;  dividend        2    0[BANK0 ] unsigned int 
 26678 ;;  divisor         2    2[BANK0 ] unsigned int 
 26679 ;; Auto vars:     Size  Location     Type
 26680 ;;  counter         1    4[BANK0 ] unsigned char 
 26681 ;; Return value:  Size  Location     Type
 26682 ;;                  2    0[BANK0 ] unsigned int 
 26683 ;; Registers used:
 26684 ;;		wreg, status,2, status,0
 26685 ;; Tracked objects:
 26686 ;;		On entry : 0/0
 26687 ;;		On exit  : 0/0
 26688 ;;		Unchanged: 0/0
 26689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26693 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26694 ;;Total ram usage:        5 bytes
 26695 ;; Hardware stack levels used:    1
 26696 ;; Hardware stack levels required when called:   10
 26697 ;; This function calls:
 26698 ;;		Nothing
 26699 ;; This function is called by:
 26700 ;;		_utoa
 26701 ;; This function uses a non-reentrant model
 26702 ;;
 26703                           
 26704                           	psect	text115
 26705  012D08                     __ptext115:
 26706                           	opt stack 0
 26707  012D08                     ___lwmod:
 26708                           	opt stack 15
 26709                           
 26710                           ; BSR set to: 0
 26711                           ;incstack = 0
 26712  012D08  0100               	movlb	0	; () banked
 26713  012D0A  5162               	movf	___lwmod@divisor& (0+255),w,b
 26714  012D0C  0100               	movlb	0	; () banked
 26715  012D0E  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 26716  012D10  B4D8               	btfsc	status,2,c
 26717  012D12  D026               	goto	l3743
 26718                           
 26719                           ; BSR set to: 0
 26720  012D14  0E01               	movlw	1
 26721  012D16  0100               	movlb	0	; () banked
 26722  012D18  6F64               	movwf	___lwmod@counter& (0+255),b
 26723  012D1A  D006               	goto	l18449
 26724  012D1C                     l18447:
 26725                           
 26726                           ; BSR set to: 0
 26727  012D1C  0100               	movlb	0	; () banked
 26728  012D1E  90D8               	bcf	status,0,c
 26729  012D20  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 26730  012D22  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 26731  012D24  0100               	movlb	0	; () banked
 26732  012D26  2B64               	incf	___lwmod@counter& (0+255),f,b
 26733  012D28                     l18449:
 26734                           
 26735                           ; BSR set to: 0
 26736  012D28  0100               	movlb	0	; () banked
 26737  012D2A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 26738  012D2C  D7F7               	goto	l18447
 26739  012D2E                     l18451:
 26740                           
 26741                           ; BSR set to: 0
 26742  012D2E  0100               	movlb	0	; () banked
 26743  012D30  5162               	movf	___lwmod@divisor& (0+255),w,b
 26744  012D32  0100               	movlb	0	; () banked
 26745  012D34  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 26746  012D36  0100               	movlb	0	; () banked
 26747  012D38  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 26748  012D3A  0100               	movlb	0	; () banked
 26749  012D3C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 26750  012D3E  A0D8               	btfss	status,0,c
 26751  012D40  D008               	goto	l18455
 26752                           
 26753                           ; BSR set to: 0
 26754  012D42  0100               	movlb	0	; () banked
 26755  012D44  5162               	movf	___lwmod@divisor& (0+255),w,b
 26756  012D46  0100               	movlb	0	; () banked
 26757  012D48  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 26758  012D4A  0100               	movlb	0	; () banked
 26759  012D4C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 26760  012D4E  0100               	movlb	0	; () banked
 26761  012D50  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 26762  012D52                     l18455:
 26763                           
 26764                           ; BSR set to: 0
 26765  012D52  0100               	movlb	0	; () banked
 26766  012D54  90D8               	bcf	status,0,c
 26767  012D56  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 26768  012D58  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 26769                           
 26770                           ; BSR set to: 0
 26771  012D5A  0100               	movlb	0	; () banked
 26772  012D5C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 26773  012D5E  D7E7               	goto	l18451
 26774  012D60                     l3743:
 26775                           
 26776                           ; BSR set to: 0
 26777  012D60  C060  F060         	movff	___lwmod@dividend,?___lwmod
 26778  012D64  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 26779                           
 26780                           ; BSR set to: 0
 26781  012D68  0012               	return		;funcret
 26782  012D6A                     __end_of___lwmod:
 26783                           	opt stack 0
 26784                           tblptru	equ	0xFF8
 26785                           tblptrh	equ	0xFF7
 26786                           tblptrl	equ	0xFF6
 26787                           tablat	equ	0xFF5
 26788                           prodh	equ	0xFF4
 26789                           prodl	equ	0xFF3
 26790                           intcon	equ	0xFF2
 26791                           intcon2	equ	0xFF1
 26792                           intcon3	equ	0xFF0
 26793                           postinc0	equ	0xFEE
 26794                           wreg	equ	0xFE8
 26795                           indf1	equ	0xFE7
 26796                           postinc1	equ	0xFE6
 26797                           postdec1	equ	0xFE5
 26798                           plusw1	equ	0xFE3
 26799                           fsr1h	equ	0xFE2
 26800                           fsr1l	equ	0xFE1
 26801                           indf2	equ	0xFDF
 26802                           postinc2	equ	0xFDE
 26803                           postdec2	equ	0xFDD
 26804                           plusw2	equ	0xFDB
 26805                           fsr2h	equ	0xFDA
 26806                           fsr2l	equ	0xFD9
 26807                           status	equ	0xFD8
 26808                           
 26809 ;; *************** function ___lwdiv *****************
 26810 ;; Defined at:
 26811 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
 26812 ;; Parameters:    Size  Location     Type
 26813 ;;  dividend        2    0[BANK0 ] unsigned int 
 26814 ;;  divisor         2    2[BANK0 ] unsigned int 
 26815 ;; Auto vars:     Size  Location     Type
 26816 ;;  quotient        2    5[BANK0 ] unsigned int 
 26817 ;;  counter         1    4[BANK0 ] unsigned char 
 26818 ;; Return value:  Size  Location     Type
 26819 ;;                  2    0[BANK0 ] unsigned int 
 26820 ;; Registers used:
 26821 ;;		wreg, status,2, status,0
 26822 ;; Tracked objects:
 26823 ;;		On entry : 0/0
 26824 ;;		On exit  : 0/0
 26825 ;;		Unchanged: 0/0
 26826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26828 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26830 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26831 ;;Total ram usage:        7 bytes
 26832 ;; Hardware stack levels used:    1
 26833 ;; Hardware stack levels required when called:   10
 26834 ;; This function calls:
 26835 ;;		Nothing
 26836 ;; This function is called by:
 26837 ;;		_utoa
 26838 ;; This function uses a non-reentrant model
 26839 ;;
 26840                           
 26841                           	psect	text116
 26842  012488                     __ptext116:
 26843                           	opt stack 0
 26844  012488                     ___lwdiv:
 26845                           	opt stack 15
 26846                           
 26847                           ; BSR set to: 0
 26848                           ;incstack = 0
 26849  012488  0E00               	movlw	0
 26850  01248A  0100               	movlb	0	; () banked
 26851  01248C  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 26852  01248E  0E00               	movlw	0
 26853  012490  6F65               	movwf	___lwdiv@quotient& (0+255),b
 26854                           
 26855                           ; BSR set to: 0
 26856  012492  0100               	movlb	0	; () banked
 26857  012494  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26858  012496  0100               	movlb	0	; () banked
 26859  012498  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 26860  01249A  B4D8               	btfsc	status,2,c
 26861  01249C  D02C               	goto	l3733
 26862                           
 26863                           ; BSR set to: 0
 26864  01249E  0E01               	movlw	1
 26865  0124A0  0100               	movlb	0	; () banked
 26866  0124A2  6F64               	movwf	___lwdiv@counter& (0+255),b
 26867  0124A4  D006               	goto	l18429
 26868  0124A6                     l18427:
 26869                           
 26870                           ; BSR set to: 0
 26871  0124A6  0100               	movlb	0	; () banked
 26872  0124A8  90D8               	bcf	status,0,c
 26873  0124AA  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 26874  0124AC  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 26875  0124AE  0100               	movlb	0	; () banked
 26876  0124B0  2B64               	incf	___lwdiv@counter& (0+255),f,b
 26877  0124B2                     l18429:
 26878                           
 26879                           ; BSR set to: 0
 26880  0124B2  0100               	movlb	0	; () banked
 26881  0124B4  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 26882  0124B6  D7F7               	goto	l18427
 26883  0124B8                     l18431:
 26884                           
 26885                           ; BSR set to: 0
 26886  0124B8  0100               	movlb	0	; () banked
 26887  0124BA  90D8               	bcf	status,0,c
 26888  0124BC  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 26889  0124BE  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 26890                           
 26891                           ; BSR set to: 0
 26892  0124C0  0100               	movlb	0	; () banked
 26893  0124C2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26894  0124C4  0100               	movlb	0	; () banked
 26895  0124C6  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 26896  0124C8  0100               	movlb	0	; () banked
 26897  0124CA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 26898  0124CC  0100               	movlb	0	; () banked
 26899  0124CE  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 26900  0124D0  A0D8               	btfss	status,0,c
 26901  0124D2  D00A               	goto	l18439
 26902                           
 26903                           ; BSR set to: 0
 26904  0124D4  0100               	movlb	0	; () banked
 26905  0124D6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26906  0124D8  0100               	movlb	0	; () banked
 26907  0124DA  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 26908  0124DC  0100               	movlb	0	; () banked
 26909  0124DE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 26910  0124E0  0100               	movlb	0	; () banked
 26911  0124E2  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 26912                           
 26913                           ; BSR set to: 0
 26914  0124E4  0100               	movlb	0	; () banked
 26915  0124E6  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 26916  0124E8                     l18439:
 26917                           
 26918                           ; BSR set to: 0
 26919  0124E8  0100               	movlb	0	; () banked
 26920  0124EA  90D8               	bcf	status,0,c
 26921  0124EC  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 26922  0124EE  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 26923                           
 26924                           ; BSR set to: 0
 26925  0124F0  0100               	movlb	0	; () banked
 26926  0124F2  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 26927  0124F4  D7E1               	goto	l18431
 26928  0124F6                     l3733:
 26929                           
 26930                           ; BSR set to: 0
 26931  0124F6  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 26932  0124FA  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 26933                           
 26934                           ; BSR set to: 0
 26935  0124FE  0012               	return		;funcret
 26936  012500                     __end_of___lwdiv:
 26937                           	opt stack 0
 26938                           tblptru	equ	0xFF8
 26939                           tblptrh	equ	0xFF7
 26940                           tblptrl	equ	0xFF6
 26941                           tablat	equ	0xFF5
 26942                           prodh	equ	0xFF4
 26943                           prodl	equ	0xFF3
 26944                           intcon	equ	0xFF2
 26945                           intcon2	equ	0xFF1
 26946                           intcon3	equ	0xFF0
 26947                           postinc0	equ	0xFEE
 26948                           wreg	equ	0xFE8
 26949                           indf1	equ	0xFE7
 26950                           postinc1	equ	0xFE6
 26951                           postdec1	equ	0xFE5
 26952                           plusw1	equ	0xFE3
 26953                           fsr1h	equ	0xFE2
 26954                           fsr1l	equ	0xFE1
 26955                           indf2	equ	0xFDF
 26956                           postinc2	equ	0xFDE
 26957                           postdec2	equ	0xFDD
 26958                           plusw2	equ	0xFDB
 26959                           fsr2h	equ	0xFDA
 26960                           fsr2l	equ	0xFD9
 26961                           status	equ	0xFD8
 26962                           
 26963 ;; *************** function _buck_operate *****************
 26964 ;; Defined at:
 26965 ;;		line 550 in file "buck.c"
 26966 ;; Parameters:    Size  Location     Type
 26967 ;;		None
 26968 ;; Auto vars:     Size  Location     Type
 26969 ;;		None
 26970 ;; Return value:  Size  Location     Type
 26971 ;;                  1    wreg      void 
 26972 ;; Registers used:
 26973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26974 ;; Tracked objects:
 26975 ;;		On entry : 0/0
 26976 ;;		On exit  : 0/0
 26977 ;;		Unchanged: 0/0
 26978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26983 ;;Total ram usage:        0 bytes
 26984 ;; Hardware stack levels used:    1
 26985 ;; Hardware stack levels required when called:   14
 26986 ;; This function calls:
 26987 ;;		__buck_operate_local
 26988 ;;		__buck_operate_remote
 26989 ;; This function is called by:
 26990 ;;		_main
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994                           	psect	text117
 26995  012EEE                     __ptext117:
 26996                           	opt stack 0
 26997  012EEE                     _buck_operate:
 26998                           	opt stack 16
 26999                           
 27000                           ;buck.c: 553: if(buck_remote_enable)
 27001                           
 27002                           ; BSR set to: 0
 27003                           ;incstack = 0
 27004  012EEE  0101               	movlb	1	; () banked
 27005  012EF0  51F1               	movf	_buck_remote_enable& (0+255),w,b
 27006  012EF2  B4D8               	btfsc	status,2,c
 27007  012EF4  D023               	goto	l22747
 27008                           
 27009                           ; BSR set to: 1
 27010                           ;buck.c: 554: {
 27011                           ;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 27012  012EF6  0E80               	movlw	128
 27013  012EF8  601C               	cpfslt	_buck_status,c
 27014  012EFA  D01D               	goto	l22745
 27015  012EFC  D00E               	goto	l22741
 27016  012EFE                     l22733:
 27017                           
 27018                           ;buck.c: 563: buck_remote_on = 0;
 27019  012EFE  0E00               	movlw	0
 27020  012F00  D001               	goto	L12
 27021  012F02                     l22735:
 27022                           
 27023                           ;buck.c: 567: buck_remote_on = 1;
 27024  012F02  0E01               	movlw	1
 27025  012F04                     L12:
 27026  012F04  0100               	movlb	0	; () banked
 27027  012F06  6FE3               	movwf	_buck_remote_on& (0+255),b
 27028                           
 27029                           ;buck.c: 568: buck_remote_synchronous = 0;
 27030  012F08  0E00               	movlw	0
 27031  012F0A  D004               	goto	L13
 27032  012F0C                     l22737:
 27033                           
 27034                           ;buck.c: 571: buck_remote_on = 1;
 27035  012F0C  0E01               	movlw	1
 27036  012F0E  0100               	movlb	0	; () banked
 27037  012F10  6FE3               	movwf	_buck_remote_on& (0+255),b
 27038                           
 27039                           ;buck.c: 572: buck_remote_synchronous = 1;
 27040  012F12  0E01               	movlw	1
 27041  012F14                     L13:
 27042  012F14  0100               	movlb	0	; () banked
 27043  012F16  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 27044                           
 27045                           ; BSR set to: 0
 27046                           ;buck.c: 574: }
 27047                           
 27048                           ;buck.c: 573: break;
 27049  012F18  D00A               	goto	l2606
 27050  012F1A                     l22741:
 27051  012F1A  501C               	movf	_buck_status,w,c
 27052                           
 27053                           ; Switch size 1, requested type "space"
 27054                           ; Number of cases is 3, Range of values is 0 to 3
 27055                           ; switch strategies available:
 27056                           ; Name         Instructions Cycles
 27057                           ; simple_byte           10     6 (average)
 27058                           ;	Chosen strategy is simple_byte
 27059  012F1C  0A00               	xorlw	0	; case 0
 27060  012F1E  B4D8               	btfsc	status,2,c
 27061  012F20  D7EE               	goto	l22733
 27062  012F22  0A02               	xorlw	2	; case 2
 27063  012F24  B4D8               	btfsc	status,2,c
 27064  012F26  D7ED               	goto	l22735
 27065  012F28  0A01               	xorlw	1	; case 3
 27066  012F2A  B4D8               	btfsc	status,2,c
 27067  012F2C  D7EF               	goto	l22737
 27068  012F2E                     l2606:
 27069                           
 27070                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 27071  012F2E  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 27072                           
 27073                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 27074  012F32  0E80               	movlw	128
 27075  012F34  261C               	addwf	_buck_status,f,c
 27076  012F36                     l22745:
 27077                           
 27078                           ;buck.c: 577: }
 27079                           ;buck.c: 578: _buck_operate_remote();
 27080  012F36  EC17  F07E         	call	__buck_operate_remote	;wreg free
 27081                           
 27082                           ;buck.c: 579: }
 27083  012F3A  0012               	return	
 27084  012F3C                     l22747:
 27085                           
 27086                           ;buck.c: 580: else
 27087                           ;buck.c: 581: {
 27088                           ;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 27089  012F3C  0E7F               	movlw	127
 27090  012F3E  641C               	cpfsgt	_buck_status,c
 27091  012F40  D002               	goto	l22751
 27092                           
 27093                           ;buck.c: 583: {
 27094                           ;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 27095  012F42  0E80               	movlw	128
 27096  012F44  5E1C               	subwf	_buck_status,f,c
 27097  012F46                     l22751:
 27098                           
 27099                           ;buck.c: 587: }
 27100                           ;buck.c: 588: _buck_operate_local();
 27101  012F46  EC9F  F04D         	call	__buck_operate_local	;wreg free
 27102  012F4A  0012               	return	
 27103  012F4C                     __end_of_buck_operate:
 27104                           	opt stack 0
 27105                           tblptru	equ	0xFF8
 27106                           tblptrh	equ	0xFF7
 27107                           tblptrl	equ	0xFF6
 27108                           tablat	equ	0xFF5
 27109                           prodh	equ	0xFF4
 27110                           prodl	equ	0xFF3
 27111                           intcon	equ	0xFF2
 27112                           intcon2	equ	0xFF1
 27113                           intcon3	equ	0xFF0
 27114                           postinc0	equ	0xFEE
 27115                           wreg	equ	0xFE8
 27116                           indf1	equ	0xFE7
 27117                           postinc1	equ	0xFE6
 27118                           postdec1	equ	0xFE5
 27119                           plusw1	equ	0xFE3
 27120                           fsr1h	equ	0xFE2
 27121                           fsr1l	equ	0xFE1
 27122                           indf2	equ	0xFDF
 27123                           postinc2	equ	0xFDE
 27124                           postdec2	equ	0xFDD
 27125                           plusw2	equ	0xFDB
 27126                           fsr2h	equ	0xFDA
 27127                           fsr2l	equ	0xFD9
 27128                           status	equ	0xFD8
 27129                           
 27130 ;; *************** function __buck_operate_remote *****************
 27131 ;; Defined at:
 27132 ;;		line 453 in file "buck.c"
 27133 ;; Parameters:    Size  Location     Type
 27134 ;;		None
 27135 ;; Auto vars:     Size  Location     Type
 27136 ;;		None
 27137 ;; Return value:  Size  Location     Type
 27138 ;;                  1    wreg      void 
 27139 ;; Registers used:
 27140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27141 ;; Tracked objects:
 27142 ;;		On entry : 0/0
 27143 ;;		On exit  : 0/0
 27144 ;;		Unchanged: 0/0
 27145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27150 ;;Total ram usage:        1 bytes
 27151 ;; Hardware stack levels used:    1
 27152 ;; Hardware stack levels required when called:   13
 27153 ;; This function calls:
 27154 ;;		__buck_initial_dutycycle
 27155 ;;		__buck_prepare
 27156 ;;		__buck_set_dutycycle
 27157 ;;		__buck_set_sync_async
 27158 ;;		__buck_start
 27159 ;;		__buck_stop
 27160 ;; This function is called by:
 27161 ;;		_buck_operate
 27162 ;; This function uses a non-reentrant model
 27163 ;;
 27164                           
 27165                           	psect	text118
 27166  00FC2E                     __ptext118:
 27167                           	opt stack 0
 27168  00FC2E                     __buck_operate_remote:
 27169                           	opt stack 16
 27170                           
 27171                           ;buck.c: 455: switch(buck_status)
 27172                           
 27173                           ;incstack = 0
 27174  00FC2E  D074               	goto	l21801
 27175  00FC30                     l21749:
 27176                           
 27177                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 27178  00FC30  0102               	movlb	2	; () banked
 27179  00FC32  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27180  00FC34  0B30               	andlw	48
 27181  00FC36  0A30               	xorlw	48
 27182  00FC38  A4D8               	btfss	status,2,c
 27183  00FC3A  0012               	return	
 27184                           
 27185                           ; BSR set to: 2
 27186                           ;buck.c: 459: {
 27187                           ;buck.c: 460: if(buck_remote_on)
 27188  00FC3C  0100               	movlb	0	; () banked
 27189  00FC3E  51E3               	movf	_buck_remote_on& (0+255),w,b
 27190  00FC40  B4D8               	btfsc	status,2,c
 27191  00FC42  0012               	return	
 27192                           
 27193                           ; BSR set to: 0
 27194                           ;buck.c: 461: {
 27195                           ;buck.c: 464: _buck_prepare();
 27196  00FC44  EC14  F094         	call	__buck_prepare	;wreg free
 27197                           
 27198                           ;buck.c: 465: }
 27199                           ;buck.c: 466: }
 27200                           ;buck.c: 467: break;
 27201  00FC48  0012               	return	
 27202  00FC4A                     l21755:
 27203                           
 27204                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 27205  00FC4A  0102               	movlb	2	; () banked
 27206  00FC4C  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27207  00FC4E  0B30               	andlw	48
 27208  00FC50  0A30               	xorlw	48
 27209  00FC52  A4D8               	btfss	status,2,c
 27210  00FC54  0012               	return	
 27211                           
 27212                           ; BSR set to: 2
 27213                           ;buck.c: 471: {
 27214                           ;buck.c: 473: if(buck_remote_synchronous)
 27215  00FC56  0100               	movlb	0	; () banked
 27216  00FC58  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 27217  00FC5A  B4D8               	btfsc	status,2,c
 27218  00FC5C  D00C               	goto	l21765
 27219                           
 27220                           ; BSR set to: 0
 27221                           ;buck.c: 474: {
 27222                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 27223  00FC5E  EC28  F084         	call	__buck_initial_dutycycle	;wreg free
 27224  00FC62  0100               	movlb	0	; () banked
 27225  00FC64  6F76               	movwf	__buck_operate_remote$8740& (0+255),b
 27226                           
 27227                           ; BSR set to: 0
 27228                           ;buck.c: 474: {
 27229                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 27230  00FC66  C076  F072         	movff	__buck_operate_remote$8740,__buck_start@dutycycle
 27231  00FC6A  0E01               	movlw	1
 27232  00FC6C  ECBC  F083         	call	__buck_start
 27233                           
 27234                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 27235  00FC70  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 27236                           
 27237                           ;buck.c: 478: }
 27238  00FC74  0012               	return	
 27239  00FC76                     l21765:
 27240                           
 27241                           ;buck.c: 479: else
 27242                           ;buck.c: 480: {
 27243                           ;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 27244  00FC76  0E28               	movlw	40
 27245  00FC78  0100               	movlb	0	; () banked
 27246  00FC7A  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 27247  00FC7C  0E00               	movlw	0
 27248  00FC7E  ECBC  F083         	call	__buck_start
 27249                           
 27250                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 27251  00FC82  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 27252                           
 27253                           ;buck.c: 484: }
 27254                           ;buck.c: 485: }
 27255                           ;buck.c: 486: break;
 27256  00FC86  0012               	return	
 27257  00FC88                     l21769:
 27258                           
 27259                           ;buck.c: 490: if(!buck_remote_on)
 27260  00FC88  0100               	movlb	0	; () banked
 27261  00FC8A  51E3               	movf	_buck_remote_on& (0+255),w,b
 27262  00FC8C  A4D8               	btfss	status,2,c
 27263  00FC8E  D003               	goto	l21773
 27264                           
 27265                           ; BSR set to: 0
 27266                           ;buck.c: 491: {
 27267                           ;buck.c: 493: _buck_stop();
 27268  00FC90  ECF5  F09D         	call	__buck_stop	;wreg free
 27269                           
 27270                           ;buck.c: 494: }
 27271  00FC94  0012               	return	
 27272  00FC96                     l21773:
 27273                           
 27274                           ;buck.c: 496: else if(buck_remote_synchronous)
 27275  00FC96  0100               	movlb	0	; () banked
 27276  00FC98  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 27277  00FC9A  B4D8               	btfsc	status,2,c
 27278  00FC9C  D00A               	goto	l21779
 27279                           
 27280                           ; BSR set to: 0
 27281                           ;buck.c: 497: {
 27282                           ;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 27283  00FC9E  EC28  F084         	call	__buck_initial_dutycycle	;wreg free
 27284  00FCA2  0100               	movlb	0	; () banked
 27285  00FCA4  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 27286                           
 27287                           ; BSR set to: 0
 27288                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 27289  00FCA6  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 27290  00FCAA  0E01               	movlw	1
 27291  00FCAC  EC32  F093         	call	__buck_set_sync_async
 27292                           
 27293                           ;buck.c: 502: }
 27294  00FCB0  0012               	return	
 27295  00FCB2                     l21779:
 27296                           
 27297                           ;buck.c: 503: else
 27298                           ;buck.c: 504: {
 27299                           ;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 27300  00FCB2  0100               	movlb	0	; () banked
 27301  00FCB4  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27302  00FCB6  0100               	movlb	0	; () banked
 27303  00FCB8  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 27304  00FCBA  B4D8               	btfsc	status,2,c
 27305  00FCBC  0012               	return	
 27306                           
 27307                           ; BSR set to: 0
 27308                           ;buck.c: 507: {
 27309                           ;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 27310  00FCBE  0100               	movlb	0	; () banked
 27311  00FCC0  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27312  00FCC2  EC8D  F091         	call	__buck_set_dutycycle
 27313                           
 27314                           ;buck.c: 509: }
 27315                           ;buck.c: 510: }
 27316                           ;buck.c: 511: break;
 27317  00FCC6  0012               	return	
 27318  00FCC8                     l21783:
 27319                           
 27320                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 27321  00FCC8  0100               	movlb	0	; () banked
 27322  00FCCA  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27323  00FCCC  EC8D  F091         	call	__buck_set_dutycycle
 27324                           
 27325                           ;buck.c: 515: if(!buck_remote_on)
 27326  00FCD0  0100               	movlb	0	; () banked
 27327  00FCD2  51E3               	movf	_buck_remote_on& (0+255),w,b
 27328  00FCD4  A4D8               	btfss	status,2,c
 27329  00FCD6  D003               	goto	l21789
 27330                           
 27331                           ; BSR set to: 0
 27332                           ;buck.c: 516: {
 27333                           ;buck.c: 518: _buck_stop();
 27334  00FCD8  ECF5  F09D         	call	__buck_stop	;wreg free
 27335                           
 27336                           ;buck.c: 519: }
 27337  00FCDC  0012               	return	
 27338  00FCDE                     l21789:
 27339                           
 27340                           ;buck.c: 521: else if(!buck_remote_synchronous)
 27341  00FCDE  0100               	movlb	0	; () banked
 27342  00FCE0  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 27343  00FCE2  A4D8               	btfss	status,2,c
 27344  00FCE4  D00B               	goto	l21795
 27345                           
 27346                           ; BSR set to: 0
 27347                           ;buck.c: 522: {
 27348                           ;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 27349  00FCE6  EC28  F084         	call	__buck_initial_dutycycle	;wreg free
 27350  00FCEA  0FFB               	addlw	251
 27351  00FCEC  0100               	movlb	0	; () banked
 27352  00FCEE  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 27353                           
 27354                           ; BSR set to: 0
 27355                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 27356  00FCF0  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 27357  00FCF4  0E00               	movlw	0
 27358  00FCF6  EC32  F093         	call	__buck_set_sync_async
 27359                           
 27360                           ;buck.c: 526: }
 27361  00FCFA  0012               	return	
 27362  00FCFC                     l21795:
 27363                           
 27364                           ;buck.c: 527: else
 27365                           ;buck.c: 528: {
 27366                           ;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 27367  00FCFC  0100               	movlb	0	; () banked
 27368  00FCFE  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27369  00FD00  0100               	movlb	0	; () banked
 27370  00FD02  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 27371  00FD04  B4D8               	btfsc	status,2,c
 27372  00FD06  0012               	return	
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;buck.c: 531: {
 27376                           ;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 27377  00FD08  0100               	movlb	0	; () banked
 27378  00FD0A  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27379  00FD0C  EC8D  F091         	call	__buck_set_dutycycle
 27380                           
 27381                           ;buck.c: 533: }
 27382                           ;buck.c: 534: }
 27383                           ;buck.c: 535: break;
 27384  00FD10  0012               	return	
 27385  00FD12                     l21799:
 27386                           
 27387                           ;buck.c: 539: _buck_stop();
 27388  00FD12  ECF5  F09D         	call	__buck_stop	;wreg free
 27389                           
 27390                           ;buck.c: 540: }
 27391  00FD16  0012               	return	
 27392  00FD18                     l21801:
 27393  00FD18  501C               	movf	_buck_status,w,c
 27394                           
 27395                           ; Switch size 1, requested type "space"
 27396                           ; Number of cases is 4, Range of values is 128 to 131
 27397                           ; switch strategies available:
 27398                           ; Name         Instructions Cycles
 27399                           ; simple_byte           13     7 (average)
 27400                           ;	Chosen strategy is simple_byte
 27401  00FD1A  0A80               	xorlw	128	; case 128
 27402  00FD1C  B4D8               	btfsc	status,2,c
 27403  00FD1E  D788               	goto	l21749
 27404  00FD20  0A01               	xorlw	1	; case 129
 27405  00FD22  B4D8               	btfsc	status,2,c
 27406  00FD24  D792               	goto	l21755
 27407  00FD26  0A03               	xorlw	3	; case 130
 27408  00FD28  B4D8               	btfsc	status,2,c
 27409  00FD2A  D7AE               	goto	l21769
 27410  00FD2C  0A01               	xorlw	1	; case 131
 27411  00FD2E  B4D8               	btfsc	status,2,c
 27412  00FD30  D7CB               	goto	l21783
 27413  00FD32  D7EF               	goto	l21799
 27414  00FD34                     __end_of__buck_operate_remote:
 27415                           	opt stack 0
 27416                           tblptru	equ	0xFF8
 27417                           tblptrh	equ	0xFF7
 27418                           tblptrl	equ	0xFF6
 27419                           tablat	equ	0xFF5
 27420                           prodh	equ	0xFF4
 27421                           prodl	equ	0xFF3
 27422                           intcon	equ	0xFF2
 27423                           intcon2	equ	0xFF1
 27424                           intcon3	equ	0xFF0
 27425                           postinc0	equ	0xFEE
 27426                           wreg	equ	0xFE8
 27427                           indf1	equ	0xFE7
 27428                           postinc1	equ	0xFE6
 27429                           postdec1	equ	0xFE5
 27430                           plusw1	equ	0xFE3
 27431                           fsr1h	equ	0xFE2
 27432                           fsr1l	equ	0xFE1
 27433                           indf2	equ	0xFDF
 27434                           postinc2	equ	0xFDE
 27435                           postdec2	equ	0xFDD
 27436                           plusw2	equ	0xFDB
 27437                           fsr2h	equ	0xFDA
 27438                           fsr2l	equ	0xFD9
 27439                           status	equ	0xFD8
 27440                           
 27441 ;; *************** function __buck_prepare *****************
 27442 ;; Defined at:
 27443 ;;		line 125 in file "buck.c"
 27444 ;; Parameters:    Size  Location     Type
 27445 ;;		None
 27446 ;; Auto vars:     Size  Location     Type
 27447 ;;  cntr            1    0[BANK0 ] unsigned char 
 27448 ;; Return value:  Size  Location     Type
 27449 ;;                  1    wreg      void 
 27450 ;; Registers used:
 27451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27452 ;; Tracked objects:
 27453 ;;		On entry : 0/0
 27454 ;;		On exit  : 0/0
 27455 ;;		Unchanged: 0/0
 27456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27460 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27461 ;;Total ram usage:        1 bytes
 27462 ;; Hardware stack levels used:    1
 27463 ;; Hardware stack levels required when called:   10
 27464 ;; This function calls:
 27465 ;;		Nothing
 27466 ;; This function is called by:
 27467 ;;		__buck_operate_remote
 27468 ;; This function uses a non-reentrant model
 27469 ;;
 27470                           
 27471                           	psect	text119
 27472  012828                     __ptext119:
 27473                           	opt stack 0
 27474  012828                     __buck_prepare:
 27475                           	opt stack 18
 27476                           
 27477                           ;buck.c: 127: uint8_t cntr;
 27478                           ;buck.c: 128: LATBbits.LB1 = 1;
 27479                           
 27480                           ;incstack = 0
 27481  012828  828A               	bsf	3978,1,c	;volatile
 27482                           
 27483                           ;buck.c: 129: if(buck_status<0x80)
 27484  01282A  0E80               	movlw	128
 27485  01282C  601C               	cpfslt	_buck_status,c
 27486  01282E  D002               	goto	l19877
 27487                           
 27488                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 27489  012830  0E01               	movlw	1
 27490  012832  D001               	goto	L14
 27491  012834                     l19877:
 27492                           
 27493                           ;buck.c: 131: else
 27494                           ;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 27495  012834  0E81               	movlw	129
 27496  012836                     L14:
 27497  012836  6E1C               	movwf	_buck_status,c
 27498                           
 27499                           ;buck.c: 134: os.input_current = 0;
 27500  012838  0E00               	movlw	0
 27501  01283A  0102               	movlb	2	; () banked
 27502  01283C  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 27503  01283E  0E00               	movlw	0
 27504  012840  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 27505                           
 27506                           ;buck.c: 135: os.output_current = 0;
 27507  012842  0E00               	movlw	0
 27508  012844  0102               	movlb	2	; () banked
 27509  012846  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 27510  012848  0E00               	movlw	0
 27511  01284A  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 27512                           
 27513                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 27514  01284C  0E00               	movlw	0
 27515  01284E  0100               	movlb	0	; () banked
 27516  012850  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 27517  012852                     l19879:
 27518                           
 27519                           ; BSR set to: 0
 27520  012852  0E03               	movlw	3
 27521  012854  0100               	movlb	0	; () banked
 27522  012856  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 27523  012858  D001               	goto	l19883
 27524  01285A  0012               	return	
 27525  01285C                     l19883:
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;buck.c: 137: {
 27529                           ;buck.c: 138: os.input_current_adc[cntr] = 0;
 27530  01285C  0100               	movlb	0	; () banked
 27531  01285E  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 27532  012860  0D02               	mullw	2
 27533  012862  0E14               	movlw	low (_os+20)
 27534  012864  24F3               	addwf	prodl,w,c
 27535  012866  6ED9               	movwf	fsr2l,c
 27536  012868  0E02               	movlw	high (_os+20)
 27537  01286A  20F4               	addwfc	prodh,w,c
 27538  01286C  6EDA               	movwf	fsr2h,c
 27539  01286E  0E00               	movlw	0
 27540  012870  6EDE               	movwf	postinc2,c
 27541  012872  0E00               	movlw	0
 27542  012874  6EDD               	movwf	postdec2,c
 27543                           
 27544                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 27545  012876  0100               	movlb	0	; () banked
 27546  012878  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 27547  01287A  0D02               	mullw	2
 27548  01287C  0E29               	movlw	low (_os+41)
 27549  01287E  24F3               	addwf	prodl,w,c
 27550  012880  6ED9               	movwf	fsr2l,c
 27551  012882  0E02               	movlw	high (_os+41)
 27552  012884  20F4               	addwfc	prodh,w,c
 27553  012886  6EDA               	movwf	fsr2h,c
 27554  012888  0E00               	movlw	0
 27555  01288A  6EDE               	movwf	postinc2,c
 27556  01288C  0E00               	movlw	0
 27557  01288E  6EDD               	movwf	postdec2,c
 27558                           
 27559                           ; BSR set to: 0
 27560  012890  0100               	movlb	0	; () banked
 27561  012892  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 27562  012894  D7DE               	goto	l19879
 27563  012896                     __end_of__buck_prepare:
 27564                           	opt stack 0
 27565                           tblptru	equ	0xFF8
 27566                           tblptrh	equ	0xFF7
 27567                           tblptrl	equ	0xFF6
 27568                           tablat	equ	0xFF5
 27569                           prodh	equ	0xFF4
 27570                           prodl	equ	0xFF3
 27571                           intcon	equ	0xFF2
 27572                           intcon2	equ	0xFF1
 27573                           intcon3	equ	0xFF0
 27574                           postinc0	equ	0xFEE
 27575                           wreg	equ	0xFE8
 27576                           indf1	equ	0xFE7
 27577                           postinc1	equ	0xFE6
 27578                           postdec1	equ	0xFE5
 27579                           plusw1	equ	0xFE3
 27580                           fsr1h	equ	0xFE2
 27581                           fsr1l	equ	0xFE1
 27582                           indf2	equ	0xFDF
 27583                           postinc2	equ	0xFDE
 27584                           postdec2	equ	0xFDD
 27585                           plusw2	equ	0xFDB
 27586                           fsr2h	equ	0xFDA
 27587                           fsr2l	equ	0xFD9
 27588                           status	equ	0xFD8
 27589                           
 27590 ;; *************** function __buck_operate_local *****************
 27591 ;; Defined at:
 27592 ;;		line 308 in file "buck.c"
 27593 ;; Parameters:    Size  Location     Type
 27594 ;;		None
 27595 ;; Auto vars:     Size  Location     Type
 27596 ;;  cntr            1   29[BANK0 ] unsigned char 
 27597 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 27598 ;; Return value:  Size  Location     Type
 27599 ;;                  1    wreg      void 
 27600 ;; Registers used:
 27601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27602 ;; Tracked objects:
 27603 ;;		On entry : 0/0
 27604 ;;		On exit  : 0/0
 27605 ;;		Unchanged: 0/0
 27606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27608 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27609 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27610 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27611 ;;Total ram usage:        8 bytes
 27612 ;; Hardware stack levels used:    1
 27613 ;; Hardware stack levels required when called:   13
 27614 ;; This function calls:
 27615 ;;		___lmul
 27616 ;;		__buck_initial_dutycycle
 27617 ;;		__buck_set_dutycycle
 27618 ;;		__buck_set_sync_async
 27619 ;;		__buck_start
 27620 ;;		__buck_stop
 27621 ;; This function is called by:
 27622 ;;		_buck_operate
 27623 ;; This function uses a non-reentrant model
 27624 ;;
 27625                           
 27626                           	psect	text120
 27627  009B3E                     __ptext120:
 27628                           	opt stack 0
 27629  009B3E                     __buck_operate_local:
 27630                           	opt stack 16
 27631                           
 27632                           ;buck.c: 310: uint8_t cntr;
 27633                           ;buck.c: 311: uint8_t tmp_dutycycle;
 27634                           ;buck.c: 313: switch(buck_status)
 27635                           
 27636                           ; BSR set to: 0
 27637                           ;incstack = 0
 27638  009B3E  D268               	goto	l21745
 27639  009B40                     l21631:
 27640                           
 27641                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 27642  009B40  0102               	movlb	2	; () banked
 27643  009B42  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27644  009B44  0B30               	andlw	48
 27645  009B46  0A30               	xorlw	48
 27646  009B48  A4D8               	btfss	status,2,c
 27647  009B4A  0012               	return	
 27648                           
 27649                           ; BSR set to: 2
 27650                           ;buck.c: 317: {
 27651                           ;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 27652  009B4C  0E0C               	movlw	12
 27653  009B4E  0100               	movlb	0	; () banked
 27654  009B50  6F76               	movwf	??__buck_operate_local& (0+255),b
 27655  009B52  0EFE               	movlw	254
 27656  009B54  0100               	movlb	0	; () banked
 27657  009B56  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 27658  009B58  EE22  F012         	lfsr	2,_os+18	;volatile
 27659  009B5C  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 27660  009B60  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 27661  009B64  0100               	movlb	0	; () banked
 27662  009B66  5176               	movf	??__buck_operate_local& (0+255),w,b
 27663  009B68  0100               	movlb	0	; () banked
 27664  009B6A  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 27665  009B6C  0100               	movlb	0	; () banked
 27666  009B6E  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 27667  009B70  0100               	movlb	0	; () banked
 27668  009B72  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 27669  009B74  0100               	movlb	0	; () banked
 27670  009B76  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 27671  009B78  0102               	movlb	2	; () banked
 27672  009B7A  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 27673  009B7C  0102               	movlb	2	; () banked
 27674  009B7E  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27675  009B80  0A80               	xorlw	128
 27676  009B82  0100               	movlb	0	; () banked
 27677  009B84  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 27678  009B86  0100               	movlb	0	; () banked
 27679  009B88  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 27680  009B8A  0A80               	xorlw	128
 27681  009B8C  0100               	movlb	0	; () banked
 27682  009B8E  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 27683  009B90  B0D8               	btfsc	status,0,c
 27684  009B92  0012               	return	
 27685                           
 27686                           ; BSR set to: 0
 27687                           ;buck.c: 319: {
 27688                           ;buck.c: 320: LATBbits.LB1 = 1;
 27689  009B94  828A               	bsf	3978,1,c	;volatile
 27690                           
 27691                           ; BSR set to: 0
 27692                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 27693  009B96  0E01               	movlw	1
 27694  009B98  6E1C               	movwf	_buck_status,c
 27695                           
 27696                           ;buck.c: 323: os.input_current = 0;
 27697  009B9A  0E00               	movlw	0
 27698  009B9C  0102               	movlb	2	; () banked
 27699  009B9E  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 27700  009BA0  0E00               	movlw	0
 27701  009BA2  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 27702                           
 27703                           ;buck.c: 324: os.output_current = 0;
 27704  009BA4  0E00               	movlw	0
 27705  009BA6  0102               	movlb	2	; () banked
 27706  009BA8  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 27707  009BAA  0E00               	movlw	0
 27708  009BAC  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 27709                           
 27710                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 27711  009BAE  0E00               	movlw	0
 27712  009BB0  0100               	movlb	0	; () banked
 27713  009BB2  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 27714  009BB4                     l21639:
 27715                           
 27716                           ; BSR set to: 0
 27717  009BB4  0E03               	movlw	3
 27718  009BB6  0100               	movlb	0	; () banked
 27719  009BB8  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 27720  009BBA  D001               	goto	l21643
 27721  009BBC  0012               	return	
 27722  009BBE                     l21643:
 27723                           
 27724                           ; BSR set to: 0
 27725                           ;buck.c: 326: {
 27726                           ;buck.c: 327: os.input_current_adc[cntr] = 0;
 27727  009BBE  0100               	movlb	0	; () banked
 27728  009BC0  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27729  009BC2  0D02               	mullw	2
 27730  009BC4  0E14               	movlw	low (_os+20)
 27731  009BC6  24F3               	addwf	prodl,w,c
 27732  009BC8  6ED9               	movwf	fsr2l,c
 27733  009BCA  0E02               	movlw	high (_os+20)
 27734  009BCC  20F4               	addwfc	prodh,w,c
 27735  009BCE  6EDA               	movwf	fsr2h,c
 27736  009BD0  0E00               	movlw	0
 27737  009BD2  6EDE               	movwf	postinc2,c
 27738  009BD4  0E00               	movlw	0
 27739  009BD6  6EDD               	movwf	postdec2,c
 27740                           
 27741                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 27742  009BD8  0100               	movlb	0	; () banked
 27743  009BDA  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27744  009BDC  0D02               	mullw	2
 27745  009BDE  0E29               	movlw	low (_os+41)
 27746  009BE0  24F3               	addwf	prodl,w,c
 27747  009BE2  6ED9               	movwf	fsr2l,c
 27748  009BE4  0E02               	movlw	high (_os+41)
 27749  009BE6  20F4               	addwfc	prodh,w,c
 27750  009BE8  6EDA               	movwf	fsr2h,c
 27751  009BEA  0E00               	movlw	0
 27752  009BEC  6EDE               	movwf	postinc2,c
 27753  009BEE  0E00               	movlw	0
 27754  009BF0  6EDD               	movwf	postdec2,c
 27755                           
 27756                           ; BSR set to: 0
 27757  009BF2  0100               	movlb	0	; () banked
 27758  009BF4  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 27759  009BF6  D7DE               	goto	l21639
 27760  009BF8                     l21649:
 27761                           
 27762                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 27763  009BF8  0102               	movlb	2	; () banked
 27764  009BFA  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27765  009BFC  0B30               	andlw	48
 27766  009BFE  0A30               	xorlw	48
 27767  009C00  A4D8               	btfss	status,2,c
 27768  009C02  0012               	return	
 27769                           
 27770                           ; BSR set to: 2
 27771                           ;buck.c: 336: {
 27772                           ;buck.c: 338: os.input_current_calibration = 0;
 27773  009C04  0E00               	movlw	0
 27774  009C06  0102               	movlb	2	; () banked
 27775  009C08  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 27776                           
 27777                           ;buck.c: 339: os.output_current_calibration = 0;
 27778  009C0A  0E00               	movlw	0
 27779  009C0C  0102               	movlb	2	; () banked
 27780  009C0E  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 27781                           
 27782                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 27783  009C10  0E00               	movlw	0
 27784  009C12  0100               	movlb	0	; () banked
 27785  009C14  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 27786  009C16                     l21653:
 27787                           
 27788                           ; BSR set to: 0
 27789  009C16  0E03               	movlw	3
 27790  009C18  0100               	movlb	0	; () banked
 27791  009C1A  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 27792  009C1C  D001               	goto	l21657
 27793  009C1E  D01B               	goto	l21663
 27794  009C20                     l21657:
 27795                           
 27796                           ; BSR set to: 0
 27797                           ;buck.c: 341: {
 27798                           ;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 27799  009C20  0100               	movlb	0	; () banked
 27800  009C22  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27801  009C24  0D02               	mullw	2
 27802  009C26  0E14               	movlw	low (_os+20)
 27803  009C28  24F3               	addwf	prodl,w,c
 27804  009C2A  6ED9               	movwf	fsr2l,c
 27805  009C2C  0E02               	movlw	high (_os+20)
 27806  009C2E  20F4               	addwfc	prodh,w,c
 27807  009C30  6EDA               	movwf	fsr2h,c
 27808  009C32  50DF               	movf	indf2,w,c
 27809  009C34  0102               	movlb	2	; () banked
 27810  009C36  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 27811                           
 27812                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 27813  009C38  0100               	movlb	0	; () banked
 27814  009C3A  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27815  009C3C  0D02               	mullw	2
 27816  009C3E  0E29               	movlw	low (_os+41)
 27817  009C40  24F3               	addwf	prodl,w,c
 27818  009C42  6ED9               	movwf	fsr2l,c
 27819  009C44  0E02               	movlw	high (_os+41)
 27820  009C46  20F4               	addwfc	prodh,w,c
 27821  009C48  6EDA               	movwf	fsr2h,c
 27822  009C4A  50DF               	movf	indf2,w,c
 27823  009C4C  0102               	movlb	2	; () banked
 27824  009C4E  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 27825                           
 27826                           ; BSR set to: 2
 27827  009C50  0100               	movlb	0	; () banked
 27828  009C52  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 27829  009C54  D7E0               	goto	l21653
 27830  009C56                     l21663:
 27831                           
 27832                           ; BSR set to: 0
 27833                           ;buck.c: 344: }
 27834                           ;buck.c: 346: buck_dutycycle_last_step = 1;
 27835  009C56  0E01               	movlw	1
 27836  009C58  0101               	movlb	1	; () banked
 27837  009C5A  6FF2               	movwf	_buck_dutycycle_last_step& (0+255),b
 27838                           
 27839                           ; BSR set to: 1
 27840                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 27841  009C5C  EC28  F084         	call	__buck_initial_dutycycle	;wreg free
 27842  009C60  0100               	movlb	0	; () banked
 27843  009C62  6F7B               	movwf	__buck_operate_local$8739& (0+255),b
 27844                           
 27845                           ; BSR set to: 0
 27846                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 27847  009C64  C07B  F072         	movff	__buck_operate_local$8739,__buck_start@dutycycle
 27848  009C68  0E00               	movlw	0
 27849  009C6A  ECBC  F083         	call	__buck_start
 27850                           
 27851                           ;buck.c: 349: }
 27852                           ;buck.c: 350: break;
 27853  009C6E  0012               	return	
 27854  009C70                     l2548:
 27855                           
 27856                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 27857  009C70  0102               	movlb	2	; () banked
 27858  009C72  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 27859  009C74  0012               	return	
 27860                           
 27861                           ; BSR set to: 2
 27862                           ;buck.c: 354: {
 27863                           ;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 27864  009C76  0102               	movlb	2	; () banked
 27865  009C78  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27866  009C7A  0102               	movlb	2	; () banked
 27867  009C7C  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 27868  009C7E  0102               	movlb	2	; () banked
 27869  009C80  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 27870  009C82  0A80               	xorlw	128
 27871  009C84  0100               	movlb	0	; () banked
 27872  009C86  6F76               	movwf	??__buck_operate_local& (0+255),b
 27873  009C88  0102               	movlb	2	; () banked
 27874  009C8A  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27875  009C8C  0A80               	xorlw	128
 27876  009C8E  0100               	movlb	0	; () banked
 27877  009C90  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27878  009C92  B0D8               	btfsc	status,0,c
 27879  009C94  D007               	goto	l21675
 27880                           
 27881                           ; BSR set to: 0
 27882                           ;buck.c: 357: {
 27883                           ;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 27884  009C96  0100               	movlb	0	; () banked
 27885  009C98  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27886  009C9A  EC8D  F091         	call	__buck_set_dutycycle
 27887                           
 27888                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 27889  009C9E  0101               	movlb	1	; () banked
 27890  009CA0  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 27891                           
 27892                           ;buck.c: 360: }
 27893  009CA2  0012               	return	
 27894  009CA4                     l21675:
 27895                           
 27896                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 27897  009CA4  0102               	movlb	2	; () banked
 27898  009CA6  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 27899  009CA8  D018               	goto	l21679
 27900  009CAA  0102               	movlb	2	; () banked
 27901  009CAC  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 27902  009CAE  E105               	bnz	u21500
 27903  009CB0  0E05               	movlw	5
 27904  009CB2  0102               	movlb	2	; () banked
 27905  009CB4  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 27906  009CB6  A0D8               	btfss	status,0,c
 27907  009CB8  D010               	goto	l21679
 27908  009CBA                     u21500:
 27909                           
 27910                           ; BSR set to: 2
 27911  009CBA  0102               	movlb	2	; () banked
 27912  009CBC  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27913  009CBE  0102               	movlb	2	; () banked
 27914  009CC0  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27915  009CC2  0102               	movlb	2	; () banked
 27916  009CC4  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27917  009CC6  0A80               	xorlw	128
 27918  009CC8  0100               	movlb	0	; () banked
 27919  009CCA  6F76               	movwf	??__buck_operate_local& (0+255),b
 27920  009CCC  0102               	movlb	2	; () banked
 27921  009CCE  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27922  009CD0  0A80               	xorlw	128
 27923  009CD2  0100               	movlb	0	; () banked
 27924  009CD4  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27925  009CD6  B0D8               	btfsc	status,0,c
 27926  009CD8  D005               	goto	l21683
 27927  009CDA                     l21679:
 27928                           
 27929                           ;buck.c: 363: {
 27930                           ;buck.c: 364: _buck_stop();
 27931  009CDA  ECF5  F09D         	call	__buck_stop	;wreg free
 27932                           
 27933                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 27934  009CDE  0E00               	movlw	0
 27935  009CE0  6E1C               	movwf	_buck_status,c
 27936                           
 27937                           ;buck.c: 366: }
 27938  009CE2  0012               	return	
 27939  009CE4                     l21683:
 27940                           
 27941                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 27942  009CE4  EE22  F027         	lfsr	2,_os+39	;volatile
 27943  009CE8  CFDE F076          	movff	postinc2,??__buck_operate_local
 27944  009CEC  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 27945  009CF0  0100               	movlb	0	; () banked
 27946  009CF2  1F76               	comf	??__buck_operate_local& (0+255),f,b
 27947  009CF4  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 27948  009CF6  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 27949  009CF8  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 27950  009CFA  0102               	movlb	2	; () banked
 27951  009CFC  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 27952  009CFE  0100               	movlb	0	; () banked
 27953  009D00  2776               	addwf	??__buck_operate_local& (0+255),f,b
 27954  009D02  0102               	movlb	2	; () banked
 27955  009D04  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27956  009D06  0100               	movlb	0	; () banked
 27957  009D08  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 27958  009D0A  0100               	movlb	0	; () banked
 27959  009D0C  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 27960  009D0E  D008               	goto	l21685
 27961  009D10  0EE8               	movlw	232
 27962  009D12  0100               	movlb	0	; () banked
 27963  009D14  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 27964  009D16  0E03               	movlw	3
 27965  009D18  0100               	movlb	0	; () banked
 27966  009D1A  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 27967  009D1C  B0D8               	btfsc	status,0,c
 27968  009D1E  D007               	goto	l21689
 27969  009D20                     l21685:
 27970                           
 27971                           ; BSR set to: 0
 27972                           ;buck.c: 369: {
 27973                           ;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 27974  009D20  0100               	movlb	0	; () banked
 27975  009D22  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27976  009D24  EC8D  F091         	call	__buck_set_dutycycle
 27977                           
 27978                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 27979  009D28  0101               	movlb	1	; () banked
 27980  009D2A  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 27981                           
 27982                           ;buck.c: 372: }
 27983  009D2C  0012               	return	
 27984  009D2E                     l21689:
 27985                           
 27986                           ;buck.c: 374: else if (os.input_current>600)
 27987  009D2E  0102               	movlb	2	; () banked
 27988  009D30  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 27989  009D32  D013               	goto	l21695
 27990  009D34  0E59               	movlw	89
 27991  009D36  0102               	movlb	2	; () banked
 27992  009D38  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 27993  009D3A  0E02               	movlw	2
 27994  009D3C  0102               	movlb	2	; () banked
 27995  009D3E  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 27996  009D40  A0D8               	btfss	status,0,c
 27997  009D42  D00B               	goto	l21695
 27998                           
 27999                           ; BSR set to: 2
 28000                           ;buck.c: 375: {
 28001                           ;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 28002  009D44  EC28  F084         	call	__buck_initial_dutycycle	;wreg free
 28003  009D48  0F05               	addlw	5
 28004  009D4A  0100               	movlb	0	; () banked
 28005  009D4C  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 28006                           
 28007                           ; BSR set to: 0
 28008                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 28009  009D4E  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 28010  009D52  0E01               	movlw	1
 28011  009D54  EC32  F093         	call	__buck_set_sync_async
 28012                           
 28013                           ;buck.c: 380: }
 28014  009D58  0012               	return	
 28015  009D5A                     l21695:
 28016                           
 28017                           ;buck.c: 382: else
 28018                           ;buck.c: 383: {
 28019                           ;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000);
 28020  009D5A  0102               	movlb	2	; () banked
 28021  009D5C  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 28022  009D5E  0B30               	andlw	48
 28023  009D60  0100               	movlb	0	; () banked
 28024  009D62  6FE0               	movwf	_idx& (0+255),b
 28025                           
 28026                           ;buck.c: 386: idx >>= 4;
 28027  009D64  0100               	movlb	0	; () banked
 28028  009D66  3BE0               	swapf	_idx& (0+255),f,b
 28029  009D68  0E0F               	movlw	15
 28030  009D6A  17E0               	andwf	_idx& (0+255),f,b
 28031                           
 28032                           ; BSR set to: 0
 28033                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 28034  009D6C  0100               	movlb	0	; () banked
 28035  009D6E  51E0               	movf	_idx& (0+255),w,b
 28036  009D70  0D02               	mullw	2
 28037  009D72  0E0A               	movlw	low (_os+10)
 28038  009D74  24F3               	addwf	prodl,w,c
 28039  009D76  6ED9               	movwf	fsr2l,c
 28040  009D78  0E02               	movlw	high (_os+10)
 28041  009D7A  20F4               	addwfc	prodh,w,c
 28042  009D7C  6EDA               	movwf	fsr2h,c
 28043  009D7E  CFDE F29E          	movff	postinc2,_now
 28044  009D82  CFDD F29F          	movff	postdec2,_now+1
 28045  009D86  0102               	movlb	2	; () banked
 28046  009D88  0E00               	movlw	0
 28047  009D8A  BF9F               	btfsc	(_now+1)& (0+255),7,b
 28048  009D8C  0EFF               	movlw	-1
 28049  009D8E  6FA0               	movwf	(_now+2)& (0+255),b
 28050  009D90  6FA1               	movwf	(_now+3)& (0+255),b
 28051                           
 28052                           ; BSR set to: 2
 28053                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 28054  009D92  C29E  F060         	movff	_now,___lmul@multiplier
 28055  009D96  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 28056  009D9A  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 28057  009D9E  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 28058  009DA2  0100               	movlb	0	; () banked
 28059  009DA4  51E0               	movf	_idx& (0+255),w,b
 28060  009DA6  0D02               	mullw	2
 28061  009DA8  0E14               	movlw	low (_os+20)
 28062  009DAA  24F3               	addwf	prodl,w,c
 28063  009DAC  6ED9               	movwf	fsr2l,c
 28064  009DAE  0E02               	movlw	high (_os+20)
 28065  009DB0  20F4               	addwfc	prodh,w,c
 28066  009DB2  6EDA               	movwf	fsr2h,c
 28067  009DB4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28068  009DB8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28069  009DBC  0100               	movlb	0	; () banked
 28070  009DBE  0E00               	movlw	0
 28071  009DC0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28072  009DC2  0EFF               	movlw	-1
 28073  009DC4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28074  009DC6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28075  009DC8  ECBC  F092         	call	___lmul	;wreg free
 28076  009DCC  C060  F29E         	movff	?___lmul,_now
 28077  009DD0  C061  F29F         	movff	?___lmul+1,_now+1
 28078  009DD4  C062  F2A0         	movff	?___lmul+2,_now+2
 28079  009DD8  C063  F2A1         	movff	?___lmul+3,_now+3
 28080                           
 28081                           ;buck.c: 390: idx += 2;
 28082  009DDC  0E02               	movlw	2
 28083  009DDE  0100               	movlb	0	; () banked
 28084  009DE0  27E0               	addwf	_idx& (0+255),f,b
 28085                           
 28086                           ; BSR set to: 0
 28087                           ;buck.c: 391: idx &= 0b11;
 28088  009DE2  0E03               	movlw	3
 28089  009DE4  0100               	movlb	0	; () banked
 28090  009DE6  17E0               	andwf	_idx& (0+255),f,b
 28091                           
 28092                           ; BSR set to: 0
 28093                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 28094  009DE8  0100               	movlb	0	; () banked
 28095  009DEA  51E0               	movf	_idx& (0+255),w,b
 28096  009DEC  0D02               	mullw	2
 28097  009DEE  0E0A               	movlw	low (_os+10)
 28098  009DF0  24F3               	addwf	prodl,w,c
 28099  009DF2  6ED9               	movwf	fsr2l,c
 28100  009DF4  0E02               	movlw	high (_os+10)
 28101  009DF6  20F4               	addwfc	prodh,w,c
 28102  009DF8  6EDA               	movwf	fsr2h,c
 28103  009DFA  CFDE F2A2          	movff	postinc2,_last
 28104  009DFE  CFDD F2A3          	movff	postdec2,_last+1
 28105  009E02  0102               	movlb	2	; () banked
 28106  009E04  0E00               	movlw	0
 28107  009E06  BFA3               	btfsc	(_last+1)& (0+255),7,b
 28108  009E08  0EFF               	movlw	-1
 28109  009E0A  6FA4               	movwf	(_last+2)& (0+255),b
 28110  009E0C  6FA5               	movwf	(_last+3)& (0+255),b
 28111                           
 28112                           ; BSR set to: 2
 28113                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 28114  009E0E  C2A2  F060         	movff	_last,___lmul@multiplier
 28115  009E12  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 28116  009E16  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 28117  009E1A  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 28118  009E1E  0100               	movlb	0	; () banked
 28119  009E20  51E0               	movf	_idx& (0+255),w,b
 28120  009E22  0D02               	mullw	2
 28121  009E24  0E14               	movlw	low (_os+20)
 28122  009E26  24F3               	addwf	prodl,w,c
 28123  009E28  6ED9               	movwf	fsr2l,c
 28124  009E2A  0E02               	movlw	high (_os+20)
 28125  009E2C  20F4               	addwfc	prodh,w,c
 28126  009E2E  6EDA               	movwf	fsr2h,c
 28127  009E30  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28128  009E34  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28129  009E38  0100               	movlb	0	; () banked
 28130  009E3A  0E00               	movlw	0
 28131  009E3C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28132  009E3E  0EFF               	movlw	-1
 28133  009E40  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28134  009E42  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28135  009E44  ECBC  F092         	call	___lmul	;wreg free
 28136  009E48  C060  F2A2         	movff	?___lmul,_last
 28137  009E4C  C061  F2A3         	movff	?___lmul+1,_last+1
 28138  009E50  C062  F2A4         	movff	?___lmul+2,_last+2
 28139  009E54  C063  F2A5         	movff	?___lmul+3,_last+3
 28140                           
 28141                           ;buck.c: 395: if(os.input_voltage>15185)
 28142  009E58  0102               	movlb	2	; () banked
 28143  009E5A  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 28144  009E5C  D00D               	goto	l21711
 28145  009E5E  0E52               	movlw	82
 28146  009E60  0102               	movlb	2	; () banked
 28147  009E62  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 28148  009E64  0E3B               	movlw	59
 28149  009E66  0102               	movlb	2	; () banked
 28150  009E68  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 28151  009E6A  A0D8               	btfss	status,0,c
 28152  009E6C  D005               	goto	l21711
 28153                           
 28154                           ; BSR set to: 2
 28155                           ;buck.c: 396: {
 28156                           ;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 28157  009E6E  0100               	movlb	0	; () banked
 28158  009E70  29E4               	incf	_buck_dutycycle& (0+255),w,b
 28159  009E72  EC8D  F091         	call	__buck_set_dutycycle
 28160                           
 28161                           ;buck.c: 398: }
 28162  009E76  0012               	return	
 28163  009E78                     l21711:
 28164                           
 28165                           ;buck.c: 399: else
 28166                           ;buck.c: 400: {
 28167                           ;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 28168  009E78  0100               	movlb	0	; () banked
 28169  009E7A  05E4               	decf	_buck_dutycycle& (0+255),w,b
 28170  009E7C  EC8D  F091         	call	__buck_set_dutycycle
 28171                           
 28172                           ;buck.c: 402: }
 28173                           ;buck.c: 403: }
 28174                           ;buck.c: 404: }
 28175                           ;buck.c: 405: break;
 28176  009E80  0012               	return	
 28177  009E82                     l2562:
 28178                           
 28179                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 28180  009E82  0102               	movlb	2	; () banked
 28181  009E84  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 28182  009E86  0012               	return	
 28183                           
 28184                           ; BSR set to: 2
 28185                           ;buck.c: 409: {
 28186                           ;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 28187  009E88  0102               	movlb	2	; () banked
 28188  009E8A  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 28189  009E8C  0102               	movlb	2	; () banked
 28190  009E8E  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 28191  009E90  0102               	movlb	2	; () banked
 28192  009E92  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 28193  009E94  0A80               	xorlw	128
 28194  009E96  0100               	movlb	0	; () banked
 28195  009E98  6F76               	movwf	??__buck_operate_local& (0+255),b
 28196  009E9A  0102               	movlb	2	; () banked
 28197  009E9C  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 28198  009E9E  0A80               	xorlw	128
 28199  009EA0  0100               	movlb	0	; () banked
 28200  009EA2  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 28201  009EA4  B0D8               	btfsc	status,0,c
 28202  009EA6  D007               	goto	l21719
 28203                           
 28204                           ; BSR set to: 0
 28205                           ;buck.c: 412: {
 28206                           ;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 28207  009EA8  0100               	movlb	0	; () banked
 28208  009EAA  05E4               	decf	_buck_dutycycle& (0+255),w,b
 28209  009EAC  EC8D  F091         	call	__buck_set_dutycycle
 28210                           
 28211                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 28212  009EB0  0101               	movlb	1	; () banked
 28213  009EB2  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 28214                           
 28215                           ;buck.c: 415: }
 28216  009EB4  0012               	return	
 28217  009EB6                     l21719:
 28218                           
 28219                           ;buck.c: 417: else if (os.input_current<200)
 28220  009EB6  0102               	movlb	2	; () banked
 28221  009EB8  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 28222  009EBA  D008               	goto	l21721
 28223  009EBC  0102               	movlb	2	; () banked
 28224  009EBE  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 28225  009EC0  E110               	bnz	l21725
 28226  009EC2  0EC8               	movlw	200
 28227  009EC4  0102               	movlb	2	; () banked
 28228  009EC6  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 28229  009EC8  B0D8               	btfsc	status,0,c
 28230  009ECA  D00B               	goto	l21725
 28231  009ECC                     l21721:
 28232                           
 28233                           ; BSR set to: 2
 28234                           ;buck.c: 418: {
 28235                           ;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 28236  009ECC  0100               	movlb	0	; () banked
 28237  009ECE  51E4               	movf	_buck_dutycycle& (0+255),w,b
 28238  009ED0  0FFB               	addlw	251
 28239  009ED2  0100               	movlb	0	; () banked
 28240  009ED4  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 28241                           
 28242                           ; BSR set to: 0
 28243                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 28244  009ED6  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 28245  009EDA  0E00               	movlw	0
 28246  009EDC  EC32  F093         	call	__buck_set_sync_async
 28247                           
 28248                           ;buck.c: 421: }
 28249  009EE0  0012               	return	
 28250  009EE2                     l21725:
 28251                           
 28252                           ;buck.c: 423: else
 28253                           ;buck.c: 424: {
 28254                           ;buck.c: 426: idx = os.timeSlot & 0b00110000;
 28255  009EE2  0102               	movlb	2	; () banked
 28256  009EE4  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 28257  009EE6  0B30               	andlw	48
 28258  009EE8  0100               	movlb	0	; () banked
 28259  009EEA  6FE0               	movwf	_idx& (0+255),b
 28260                           
 28261                           ;buck.c: 427: idx >>= 4;
 28262  009EEC  0100               	movlb	0	; () banked
 28263  009EEE  3BE0               	swapf	_idx& (0+255),f,b
 28264  009EF0  0E0F               	movlw	15
 28265  009EF2  17E0               	andwf	_idx& (0+255),f,b
 28266                           
 28267                           ; BSR set to: 0
 28268                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 28269  009EF4  0100               	movlb	0	; () banked
 28270  009EF6  51E0               	movf	_idx& (0+255),w,b
 28271  009EF8  0D02               	mullw	2
 28272  009EFA  0E0A               	movlw	low (_os+10)
 28273  009EFC  24F3               	addwf	prodl,w,c
 28274  009EFE  6ED9               	movwf	fsr2l,c
 28275  009F00  0E02               	movlw	high (_os+10)
 28276  009F02  20F4               	addwfc	prodh,w,c
 28277  009F04  6EDA               	movwf	fsr2h,c
 28278  009F06  CFDE F29E          	movff	postinc2,_now
 28279  009F0A  CFDD F29F          	movff	postdec2,_now+1
 28280  009F0E  0102               	movlb	2	; () banked
 28281  009F10  0E00               	movlw	0
 28282  009F12  BF9F               	btfsc	(_now+1)& (0+255),7,b
 28283  009F14  0EFF               	movlw	-1
 28284  009F16  6FA0               	movwf	(_now+2)& (0+255),b
 28285  009F18  6FA1               	movwf	(_now+3)& (0+255),b
 28286                           
 28287                           ; BSR set to: 2
 28288                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 28289  009F1A  C29E  F060         	movff	_now,___lmul@multiplier
 28290  009F1E  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 28291  009F22  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 28292  009F26  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 28293  009F2A  0100               	movlb	0	; () banked
 28294  009F2C  51E0               	movf	_idx& (0+255),w,b
 28295  009F2E  0D02               	mullw	2
 28296  009F30  0E14               	movlw	low (_os+20)
 28297  009F32  24F3               	addwf	prodl,w,c
 28298  009F34  6ED9               	movwf	fsr2l,c
 28299  009F36  0E02               	movlw	high (_os+20)
 28300  009F38  20F4               	addwfc	prodh,w,c
 28301  009F3A  6EDA               	movwf	fsr2h,c
 28302  009F3C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28303  009F40  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28304  009F44  0100               	movlb	0	; () banked
 28305  009F46  0E00               	movlw	0
 28306  009F48  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28307  009F4A  0EFF               	movlw	-1
 28308  009F4C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28309  009F4E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28310  009F50  ECBC  F092         	call	___lmul	;wreg free
 28311  009F54  C060  F29E         	movff	?___lmul,_now
 28312  009F58  C061  F29F         	movff	?___lmul+1,_now+1
 28313  009F5C  C062  F2A0         	movff	?___lmul+2,_now+2
 28314  009F60  C063  F2A1         	movff	?___lmul+3,_now+3
 28315                           
 28316                           ;buck.c: 431: idx += 2;
 28317  009F64  0E02               	movlw	2
 28318  009F66  0100               	movlb	0	; () banked
 28319  009F68  27E0               	addwf	_idx& (0+255),f,b
 28320                           
 28321                           ; BSR set to: 0
 28322                           ;buck.c: 432: idx &= 0b11;
 28323  009F6A  0E03               	movlw	3
 28324  009F6C  0100               	movlb	0	; () banked
 28325  009F6E  17E0               	andwf	_idx& (0+255),f,b
 28326                           
 28327                           ; BSR set to: 0
 28328                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 28329  009F70  0100               	movlb	0	; () banked
 28330  009F72  51E0               	movf	_idx& (0+255),w,b
 28331  009F74  0D02               	mullw	2
 28332  009F76  0E0A               	movlw	low (_os+10)
 28333  009F78  24F3               	addwf	prodl,w,c
 28334  009F7A  6ED9               	movwf	fsr2l,c
 28335  009F7C  0E02               	movlw	high (_os+10)
 28336  009F7E  20F4               	addwfc	prodh,w,c
 28337  009F80  6EDA               	movwf	fsr2h,c
 28338  009F82  CFDE F2A2          	movff	postinc2,_last
 28339  009F86  CFDD F2A3          	movff	postdec2,_last+1
 28340  009F8A  0102               	movlb	2	; () banked
 28341  009F8C  0E00               	movlw	0
 28342  009F8E  BFA3               	btfsc	(_last+1)& (0+255),7,b
 28343  009F90  0EFF               	movlw	-1
 28344  009F92  6FA4               	movwf	(_last+2)& (0+255),b
 28345  009F94  6FA5               	movwf	(_last+3)& (0+255),b
 28346                           
 28347                           ; BSR set to: 2
 28348                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 28349  009F96  C2A2  F060         	movff	_last,___lmul@multiplier
 28350  009F9A  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 28351  009F9E  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 28352  009FA2  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 28353  009FA6  0100               	movlb	0	; () banked
 28354  009FA8  51E0               	movf	_idx& (0+255),w,b
 28355  009FAA  0D02               	mullw	2
 28356  009FAC  0E14               	movlw	low (_os+20)
 28357  009FAE  24F3               	addwf	prodl,w,c
 28358  009FB0  6ED9               	movwf	fsr2l,c
 28359  009FB2  0E02               	movlw	high (_os+20)
 28360  009FB4  20F4               	addwfc	prodh,w,c
 28361  009FB6  6EDA               	movwf	fsr2h,c
 28362  009FB8  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28363  009FBC  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28364  009FC0  0100               	movlb	0	; () banked
 28365  009FC2  0E00               	movlw	0
 28366  009FC4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28367  009FC6  0EFF               	movlw	-1
 28368  009FC8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28369  009FCA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28370  009FCC  ECBC  F092         	call	___lmul	;wreg free
 28371  009FD0  C060  F2A2         	movff	?___lmul,_last
 28372  009FD4  C061  F2A3         	movff	?___lmul+1,_last+1
 28373  009FD8  C062  F2A4         	movff	?___lmul+2,_last+2
 28374  009FDC  C063  F2A5         	movff	?___lmul+3,_last+3
 28375                           
 28376                           ;buck.c: 436: if(os.input_voltage>15185)
 28377  009FE0  0102               	movlb	2	; () banked
 28378  009FE2  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 28379  009FE4  D00D               	goto	l21741
 28380  009FE6  0E52               	movlw	82
 28381  009FE8  0102               	movlb	2	; () banked
 28382  009FEA  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 28383  009FEC  0E3B               	movlw	59
 28384  009FEE  0102               	movlb	2	; () banked
 28385  009FF0  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 28386  009FF2  A0D8               	btfss	status,0,c
 28387  009FF4  D005               	goto	l21741
 28388                           
 28389                           ; BSR set to: 2
 28390                           ;buck.c: 437: {
 28391                           ;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 28392  009FF6  0100               	movlb	0	; () banked
 28393  009FF8  29E4               	incf	_buck_dutycycle& (0+255),w,b
 28394  009FFA  EC8D  F091         	call	__buck_set_dutycycle
 28395                           
 28396                           ;buck.c: 439: }
 28397  009FFE  0012               	return	
 28398  00A000                     l21741:
 28399                           
 28400                           ;buck.c: 440: else
 28401                           ;buck.c: 441: {
 28402                           ;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 28403  00A000  0100               	movlb	0	; () banked
 28404  00A002  05E4               	decf	_buck_dutycycle& (0+255),w,b
 28405  00A004  EC8D  F091         	call	__buck_set_dutycycle
 28406                           
 28407                           ;buck.c: 443: }
 28408                           ;buck.c: 444: }
 28409                           ;buck.c: 445: }
 28410                           ;buck.c: 446: break;
 28411  00A008  0012               	return	
 28412  00A00A                     l21743:
 28413                           
 28414                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 28415  00A00A  0E00               	movlw	0
 28416  00A00C  6E1C               	movwf	_buck_status,c
 28417                           
 28418                           ;buck.c: 450: }
 28419  00A00E  0012               	return	
 28420  00A010                     l21745:
 28421  00A010  501C               	movf	_buck_status,w,c
 28422                           
 28423                           ; Switch size 1, requested type "space"
 28424                           ; Number of cases is 4, Range of values is 0 to 3
 28425                           ; switch strategies available:
 28426                           ; Name         Instructions Cycles
 28427                           ; simple_byte           13     7 (average)
 28428                           ;	Chosen strategy is simple_byte
 28429  00A012  0A00               	xorlw	0	; case 0
 28430  00A014  B4D8               	btfsc	status,2,c
 28431  00A016  D594               	goto	l21631
 28432  00A018  0A01               	xorlw	1	; case 1
 28433  00A01A  B4D8               	btfsc	status,2,c
 28434  00A01C  D5ED               	goto	l21649
 28435  00A01E  0A03               	xorlw	3	; case 2
 28436  00A020  B4D8               	btfsc	status,2,c
 28437  00A022  D626               	goto	l2548
 28438  00A024  0A01               	xorlw	1	; case 3
 28439  00A026  B4D8               	btfsc	status,2,c
 28440  00A028  D72C               	goto	l2562
 28441  00A02A  D7EF               	goto	l21743
 28442  00A02C                     __end_of__buck_operate_local:
 28443                           	opt stack 0
 28444                           tblptru	equ	0xFF8
 28445                           tblptrh	equ	0xFF7
 28446                           tblptrl	equ	0xFF6
 28447                           tablat	equ	0xFF5
 28448                           prodh	equ	0xFF4
 28449                           prodl	equ	0xFF3
 28450                           intcon	equ	0xFF2
 28451                           intcon2	equ	0xFF1
 28452                           intcon3	equ	0xFF0
 28453                           postinc0	equ	0xFEE
 28454                           wreg	equ	0xFE8
 28455                           indf1	equ	0xFE7
 28456                           postinc1	equ	0xFE6
 28457                           postdec1	equ	0xFE5
 28458                           plusw1	equ	0xFE3
 28459                           fsr1h	equ	0xFE2
 28460                           fsr1l	equ	0xFE1
 28461                           indf2	equ	0xFDF
 28462                           postinc2	equ	0xFDE
 28463                           postdec2	equ	0xFDD
 28464                           plusw2	equ	0xFDB
 28465                           fsr2h	equ	0xFDA
 28466                           fsr2l	equ	0xFD9
 28467                           status	equ	0xFD8
 28468                           
 28469 ;; *************** function __buck_stop *****************
 28470 ;; Defined at:
 28471 ;;		line 283 in file "buck.c"
 28472 ;; Parameters:    Size  Location     Type
 28473 ;;		None
 28474 ;; Auto vars:     Size  Location     Type
 28475 ;;		None
 28476 ;; Return value:  Size  Location     Type
 28477 ;;                  1    wreg      void 
 28478 ;; Registers used:
 28479 ;;		wreg, status,2, status,0
 28480 ;; Tracked objects:
 28481 ;;		On entry : 0/0
 28482 ;;		On exit  : 0/0
 28483 ;;		Unchanged: 0/0
 28484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28489 ;;Total ram usage:        0 bytes
 28490 ;; Hardware stack levels used:    1
 28491 ;; Hardware stack levels required when called:   10
 28492 ;; This function calls:
 28493 ;;		Nothing
 28494 ;; This function is called by:
 28495 ;;		__buck_operate_local
 28496 ;;		__buck_operate_remote
 28497 ;; This function uses a non-reentrant model
 28498 ;;
 28499                           
 28500                           	psect	text121
 28501  013BEA                     __ptext121:
 28502                           	opt stack 0
 28503  013BEA                     __buck_stop:
 28504                           	opt stack 18
 28505                           
 28506                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 28507                           
 28508                           ;incstack = 0
 28509  013BEA  96CA               	bcf	4042,3,c	;volatile
 28510  013BEC  98CA               	bcf	4042,4,c	;volatile
 28511  013BEE  9ACA               	bcf	4042,5,c	;volatile
 28512  013BF0  9CCA               	bcf	4042,6,c	;volatile
 28513                           
 28514                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 28515  013BF2  929E               	bcf	3998,1,c	;volatile
 28516  013BF4                     l2529:
 28517  013BF4  A29E               	btfss	3998,1,c	;volatile
 28518  013BF6  D7FE               	goto	l2529
 28519                           
 28520                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 28521  013BF8  90BA               	bcf	4026,0,c	;volatile
 28522  013BFA  92BA               	bcf	4026,1,c	;volatile
 28523  013BFC  94BA               	bcf	4026,2,c	;volatile
 28524  013BFE  96BA               	bcf	4026,3,c	;volatile
 28525                           
 28526                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 28527  013C00  94CA               	bcf	4042,2,c	;volatile
 28528                           
 28529                           ;buck.c: 295: LATBbits.LB1 = 0;
 28530  013C02  928A               	bcf	3978,1,c	;volatile
 28531                           
 28532                           ;buck.c: 297: if(buck_status<0x80)
 28533  013C04  0E80               	movlw	128
 28534  013C06  601C               	cpfslt	_buck_status,c
 28535  013C08  D003               	goto	l19941
 28536                           
 28537                           ;buck.c: 298: {
 28538                           ;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 28539  013C0A  0E00               	movlw	0
 28540  013C0C  6E1C               	movwf	_buck_status,c
 28541                           
 28542                           ;buck.c: 300: }
 28543  013C0E  0012               	return	
 28544  013C10                     l19941:
 28545                           
 28546                           ;buck.c: 301: else
 28547                           ;buck.c: 302: {
 28548                           ;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 28549  013C10  0E80               	movlw	128
 28550  013C12  6E1C               	movwf	_buck_status,c
 28551  013C14  0012               	return	
 28552  013C16                     __end_of__buck_stop:
 28553                           	opt stack 0
 28554                           tblptru	equ	0xFF8
 28555                           tblptrh	equ	0xFF7
 28556                           tblptrl	equ	0xFF6
 28557                           tablat	equ	0xFF5
 28558                           prodh	equ	0xFF4
 28559                           prodl	equ	0xFF3
 28560                           intcon	equ	0xFF2
 28561                           intcon2	equ	0xFF1
 28562                           intcon3	equ	0xFF0
 28563                           postinc0	equ	0xFEE
 28564                           wreg	equ	0xFE8
 28565                           indf1	equ	0xFE7
 28566                           postinc1	equ	0xFE6
 28567                           postdec1	equ	0xFE5
 28568                           plusw1	equ	0xFE3
 28569                           fsr1h	equ	0xFE2
 28570                           fsr1l	equ	0xFE1
 28571                           indf2	equ	0xFDF
 28572                           postinc2	equ	0xFDE
 28573                           postdec2	equ	0xFDD
 28574                           plusw2	equ	0xFDB
 28575                           fsr2h	equ	0xFDA
 28576                           fsr2l	equ	0xFD9
 28577                           status	equ	0xFD8
 28578                           
 28579 ;; *************** function __buck_start *****************
 28580 ;; Defined at:
 28581 ;;		line 143 in file "buck.c"
 28582 ;; Parameters:    Size  Location     Type
 28583 ;;  mode            1    wreg     enum E8109
 28584 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 28585 ;; Auto vars:     Size  Location     Type
 28586 ;;  mode            1   19[BANK0 ] enum E8109
 28587 ;;  cntr            1   21[BANK0 ] unsigned char 
 28588 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 28589 ;; Return value:  Size  Location     Type
 28590 ;;                  1    wreg      void 
 28591 ;; Registers used:
 28592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28593 ;; Tracked objects:
 28594 ;;		On entry : 0/0
 28595 ;;		On exit  : 0/0
 28596 ;;		Unchanged: 0/0
 28597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28598 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28601 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28602 ;;Total ram usage:        4 bytes
 28603 ;; Hardware stack levels used:    1
 28604 ;; Hardware stack levels required when called:   12
 28605 ;; This function calls:
 28606 ;;		__buck_initial_dutycycle
 28607 ;;		__buck_set_dutycycle
 28608 ;;		__buck_set_sync_async
 28609 ;; This function is called by:
 28610 ;;		__buck_operate_local
 28611 ;;		__buck_operate_remote
 28612 ;; This function uses a non-reentrant model
 28613 ;;
 28614                           
 28615                           	psect	text122
 28616  010778                     __ptext122:
 28617                           	opt stack 0
 28618  010778                     __buck_start:
 28619                           	opt stack 16
 28620                           
 28621                           ;incstack = 0
 28622                           ;__buck_start@mode stored from wreg
 28623  010778  0100               	movlb	0	; () banked
 28624  01077A  6F73               	movwf	__buck_start@mode& (0+255),b
 28625                           
 28626                           ;buck.c: 145: uint8_t startup_dutycycle;
 28627                           ;buck.c: 146: uint8_t cntr;
 28628                           ;buck.c: 149: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0
      +                          ;
 28629  01077C  0E00               	movlw	0
 28630  01077E  0103               	movlb	3	; () banked
 28631  010780  6F23               	movwf	(_calibrationParameters+35)& (0+255),b
 28632  010782  0E00               	movlw	0
 28633  010784  6F22               	movwf	(_calibrationParameters+34)& (0+255),b
 28634                           
 28635                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 28636  010786  0E00               	movlw	0
 28637  010788  0103               	movlb	3	; () banked
 28638  01078A  6F2F               	movwf	(_calibrationParameters+47)& (0+255),b
 28639  01078C  0E00               	movlw	0
 28640  01078E  6F2E               	movwf	(_calibrationParameters+46)& (0+255),b
 28641                           
 28642                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 28643  010790  0E00               	movlw	0
 28644  010792  0100               	movlb	0	; () banked
 28645  010794  6F75               	movwf	__buck_start@cntr& (0+255),b
 28646  010796                     l19891:
 28647                           
 28648                           ; BSR set to: 0
 28649  010796  0E03               	movlw	3
 28650  010798  0100               	movlb	0	; () banked
 28651  01079A  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 28652  01079C  D001               	goto	l19895
 28653  01079E  D021               	goto	l19901
 28654  0107A0                     l19895:
 28655                           
 28656                           ; BSR set to: 0
 28657                           ;buck.c: 154: {
 28658                           ;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration -= 
      +                          os.input_current_adc[cntr];
 28659  0107A0  0100               	movlb	0	; () banked
 28660  0107A2  5175               	movf	__buck_start@cntr& (0+255),w,b
 28661  0107A4  0D02               	mullw	2
 28662  0107A6  0E14               	movlw	low (_os+20)
 28663  0107A8  24F3               	addwf	prodl,w,c
 28664  0107AA  6ED9               	movwf	fsr2l,c
 28665  0107AC  0E02               	movlw	high (_os+20)
 28666  0107AE  20F4               	addwfc	prodh,w,c
 28667  0107B0  6EDA               	movwf	fsr2h,c
 28668  0107B2  50DE               	movf	postinc2,w,c
 28669  0107B4  0103               	movlb	3	; () banked
 28670  0107B6  5F22               	subwf	(_calibrationParameters+34)& (0+255),f,b
 28671  0107B8  50DD               	movf	postdec2,w,c
 28672  0107BA  0103               	movlb	3	; () banked
 28673  0107BC  5B23               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 28674                           
 28675                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 28676  0107BE  0100               	movlb	0	; () banked
 28677  0107C0  5175               	movf	__buck_start@cntr& (0+255),w,b
 28678  0107C2  0D02               	mullw	2
 28679  0107C4  0E29               	movlw	low (_os+41)
 28680  0107C6  24F3               	addwf	prodl,w,c
 28681  0107C8  6ED9               	movwf	fsr2l,c
 28682  0107CA  0E02               	movlw	high (_os+41)
 28683  0107CC  20F4               	addwfc	prodh,w,c
 28684  0107CE  6EDA               	movwf	fsr2h,c
 28685  0107D0  50DE               	movf	postinc2,w,c
 28686  0107D2  0103               	movlb	3	; () banked
 28687  0107D4  5F2E               	subwf	(_calibrationParameters+46)& (0+255),f,b
 28688  0107D6  50DD               	movf	postdec2,w,c
 28689  0107D8  0103               	movlb	3	; () banked
 28690  0107DA  5B2F               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 28691                           
 28692                           ; BSR set to: 3
 28693  0107DC  0100               	movlb	0	; () banked
 28694  0107DE  2B75               	incf	__buck_start@cntr& (0+255),f,b
 28695  0107E0  D7DA               	goto	l19891
 28696  0107E2                     l19901:
 28697                           
 28698                           ; BSR set to: 0
 28699                           ;buck.c: 159: }
 28700                           ;buck.c: 163: PR2 = 63;
 28701  0107E2  0E3F               	movlw	63
 28702  0107E4  6ECB               	movwf	4043,c	;volatile
 28703                           
 28704                           ;buck.c: 165: TMR2 = 0x00;
 28705  0107E6  0E00               	movlw	0
 28706  0107E8  6ECC               	movwf	4044,c	;volatile
 28707                           
 28708                           ; BSR set to: 0
 28709                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 28710  0107EA  86CA               	bsf	4042,3,c	;volatile
 28711  0107EC  88CA               	bsf	4042,4,c	;volatile
 28712  0107EE  8ACA               	bsf	4042,5,c	;volatile
 28713  0107F0  8CCA               	bsf	4042,6,c	;volatile
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 28717  0107F2  929E               	bcf	3998,1,c	;volatile
 28718                           
 28719                           ; BSR set to: 0
 28720                           ;buck.c: 172: if(buck_status<0x80)
 28721  0107F4  0E80               	movlw	128
 28722  0107F6  601C               	cpfslt	_buck_status,c
 28723  0107F8  D002               	goto	l19911
 28724                           
 28725                           ; BSR set to: 0
 28726                           ;buck.c: 173: {
 28727                           ;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 28728  0107FA  0E03               	movlw	3
 28729  0107FC  D001               	goto	L15
 28730  0107FE                     l19911:
 28731                           
 28732                           ; BSR set to: 0
 28733                           ;buck.c: 176: else
 28734                           ;buck.c: 177: {
 28735                           ;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 28736  0107FE  0E83               	movlw	131
 28737  010800                     L15:
 28738  010800  6E1C               	movwf	_buck_status,c
 28739                           
 28740                           ; BSR set to: 0
 28741                           ;buck.c: 179: }
 28742                           ;buck.c: 182: CCP1CON = 0x00;
 28743  010802  0E00               	movlw	0
 28744  010804  6EBA               	movwf	4026,c	;volatile
 28745                           
 28746                           ; BSR set to: 0
 28747                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 28748  010806  EC28  F084         	call	__buck_initial_dutycycle	;wreg free
 28749  01080A  0100               	movlb	0	; () banked
 28750  01080C  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 28754  01080E  0100               	movlb	0	; () banked
 28755  010810  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 28756  010812  EC8D  F091         	call	__buck_set_dutycycle
 28757                           
 28758                           ;buck.c: 188: INTCONbits.GIE = 0;
 28759  010816  9EF2               	bcf	intcon,7,c	;volatile
 28760                           
 28761                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 28762  010818  84CA               	bsf	4042,2,c	;volatile
 28763                           
 28764                           ;buck.c: 192: CCP1CON |= 0b00001100;
 28765  01081A  0E0C               	movlw	12
 28766  01081C  12BA               	iorwf	4026,f,c	;volatile
 28767                           
 28768                           ;buck.c: 194: CCP1CON |= 0b10000000;
 28769  01081E  8EBA               	bsf	4026,7,c	;volatile
 28770                           
 28771                           ;buck.c: 196: INTCONbits.GIE = 1;
 28772  010820  8EF2               	bsf	intcon,7,c	;volatile
 28773  010822                     l2503:
 28774  010822  A29E               	btfss	3998,1,c	;volatile
 28775  010824  D7FE               	goto	l2503
 28776                           
 28777                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 28778  010826  0100               	movlb	0	; () banked
 28779  010828  0573               	decf	__buck_start@mode& (0+255),w,b
 28780  01082A  A4D8               	btfss	status,2,c
 28781  01082C  D00B               	goto	l19933
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;buck.c: 203: {
 28785                           ;buck.c: 205: if(dutycycle!=startup_dutycycle)
 28786  01082E  0100               	movlb	0	; () banked
 28787  010830  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 28788  010832  0100               	movlb	0	; () banked
 28789  010834  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 28790  010836  B4D8               	btfsc	status,2,c
 28791  010838  0012               	return	
 28792                           
 28793                           ; BSR set to: 0
 28794                           ;buck.c: 206: {
 28795                           ;buck.c: 207: _buck_set_dutycycle(dutycycle);
 28796  01083A  0100               	movlb	0	; () banked
 28797  01083C  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 28798  01083E  EC8D  F091         	call	__buck_set_dutycycle
 28799                           
 28800                           ;buck.c: 208: }
 28801                           ;buck.c: 209: }
 28802  010842  0012               	return	
 28803  010844                     l19933:
 28804                           
 28805                           ;buck.c: 210: else
 28806                           ;buck.c: 211: {
 28807                           ;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, dutycycle);
 28808  010844  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 28809  010848  0E00               	movlw	0
 28810  01084A  EC32  F093         	call	__buck_set_sync_async
 28811  01084E  0012               	return	
 28812  010850                     __end_of__buck_start:
 28813                           	opt stack 0
 28814                           tblptru	equ	0xFF8
 28815                           tblptrh	equ	0xFF7
 28816                           tblptrl	equ	0xFF6
 28817                           tablat	equ	0xFF5
 28818                           prodh	equ	0xFF4
 28819                           prodl	equ	0xFF3
 28820                           intcon	equ	0xFF2
 28821                           intcon2	equ	0xFF1
 28822                           intcon3	equ	0xFF0
 28823                           postinc0	equ	0xFEE
 28824                           wreg	equ	0xFE8
 28825                           indf1	equ	0xFE7
 28826                           postinc1	equ	0xFE6
 28827                           postdec1	equ	0xFE5
 28828                           plusw1	equ	0xFE3
 28829                           fsr1h	equ	0xFE2
 28830                           fsr1l	equ	0xFE1
 28831                           indf2	equ	0xFDF
 28832                           postinc2	equ	0xFDE
 28833                           postdec2	equ	0xFDD
 28834                           plusw2	equ	0xFDB
 28835                           fsr2h	equ	0xFDA
 28836                           fsr2l	equ	0xFD9
 28837                           status	equ	0xFD8
 28838                           
 28839 ;; *************** function __buck_set_sync_async *****************
 28840 ;; Defined at:
 28841 ;;		line 217 in file "buck.c"
 28842 ;; Parameters:    Size  Location     Type
 28843 ;;  mode            1    wreg     enum E8109
 28844 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 28845 ;; Auto vars:     Size  Location     Type
 28846 ;;  mode            1    3[BANK0 ] enum E8109
 28847 ;; Return value:  Size  Location     Type
 28848 ;;                  1    wreg      void 
 28849 ;; Registers used:
 28850 ;;		wreg, status,2, status,0, cstack
 28851 ;; Tracked objects:
 28852 ;;		On entry : 0/0
 28853 ;;		On exit  : 0/0
 28854 ;;		Unchanged: 0/0
 28855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28856 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28859 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28860 ;;Total ram usage:        2 bytes
 28861 ;; Hardware stack levels used:    1
 28862 ;; Hardware stack levels required when called:   11
 28863 ;; This function calls:
 28864 ;;		__buck_set_dutycycle
 28865 ;; This function is called by:
 28866 ;;		__buck_start
 28867 ;;		__buck_operate_local
 28868 ;;		__buck_operate_remote
 28869 ;; This function uses a non-reentrant model
 28870 ;;
 28871                           
 28872                           	psect	text123
 28873  012664                     __ptext123:
 28874                           	opt stack 0
 28875  012664                     __buck_set_sync_async:
 28876                           	opt stack 16
 28877                           
 28878                           ;incstack = 0
 28879                           ;__buck_set_sync_async@mode stored from wreg
 28880  012664  0100               	movlb	0	; () banked
 28881  012666  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 28882                           
 28883                           ;buck.c: 219: switch(mode)
 28884  012668  D02E               	goto	l19215
 28885  01266A                     l2513:
 28886                           
 28887                           ; BSR set to: 0
 28888                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 28889  01266A  96CA               	bcf	4042,3,c	;volatile
 28890  01266C  98CA               	bcf	4042,4,c	;volatile
 28891  01266E  9ACA               	bcf	4042,5,c	;volatile
 28892  012670  9CCA               	bcf	4042,6,c	;volatile
 28893                           
 28894                           ;buck.c: 228: INTCONbits.GIE = 0;
 28895  012672  9EF2               	bcf	intcon,7,c	;volatile
 28896                           
 28897                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 28898  012674  929E               	bcf	3998,1,c	;volatile
 28899  012676                     l2514:
 28900  012676  A29E               	btfss	3998,1,c	;volatile
 28901  012678  D7FE               	goto	l2514
 28902                           
 28903                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 28904  01267A  9EBA               	bcf	4026,7,c	;volatile
 28905                           
 28906                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 28907  01267C  9CBA               	bcf	4026,6,c	;volatile
 28908                           
 28909                           ;buck.c: 237: if(buck_status<0x80)
 28910  01267E  0E80               	movlw	128
 28911  012680  601C               	cpfslt	_buck_status,c
 28912  012682  D002               	goto	l19187
 28913                           
 28914                           ;buck.c: 238: {
 28915                           ;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 28916  012684  0E02               	movlw	2
 28917  012686  D001               	goto	L16
 28918  012688                     l19187:
 28919                           
 28920                           ;buck.c: 241: else
 28921                           ;buck.c: 242: {
 28922                           ;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRONOUS;
 28923  012688  0E82               	movlw	130
 28924  01268A                     L16:
 28925  01268A  6E1C               	movwf	_buck_status,c
 28926                           
 28927                           ;buck.c: 244: }
 28928                           ;buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 28929  01268C  0100               	movlb	0	; () banked
 28930  01268E  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 28931  012690  EC8D  F091         	call	__buck_set_dutycycle
 28932                           
 28933                           ;buck.c: 248: INTCONbits.GIE = 1;
 28934  012694  8EF2               	bsf	intcon,7,c	;volatile
 28935                           
 28936                           ;buck.c: 249: break;
 28937  012696  0012               	return	
 28938  012698                     l19193:
 28939                           
 28940                           ;buck.c: 255: if(buck_status<0x80)
 28941  012698  0E80               	movlw	128
 28942  01269A  601C               	cpfslt	_buck_status,c
 28943  01269C  D002               	goto	l19197
 28944                           
 28945                           ;buck.c: 256: {
 28946                           ;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 28947  01269E  0E03               	movlw	3
 28948  0126A0  D001               	goto	L17
 28949  0126A2                     l19197:
 28950                           
 28951                           ;buck.c: 259: else
 28952                           ;buck.c: 260: {
 28953                           ;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 28954  0126A2  0E83               	movlw	131
 28955  0126A4                     L17:
 28956  0126A4  6E1C               	movwf	_buck_status,c
 28957                           
 28958                           ;buck.c: 262: }
 28959                           ;buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 28960  0126A6  96CA               	bcf	4042,3,c	;volatile
 28961  0126A8  98CA               	bcf	4042,4,c	;volatile
 28962  0126AA  9ACA               	bcf	4042,5,c	;volatile
 28963  0126AC  9CCA               	bcf	4042,6,c	;volatile
 28964                           
 28965                           ;buck.c: 267: INTCONbits.GIE = 0;
 28966  0126AE  9EF2               	bcf	intcon,7,c	;volatile
 28967                           
 28968                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 28969  0126B0  929E               	bcf	3998,1,c	;volatile
 28970  0126B2                     l2523:
 28971  0126B2  A29E               	btfss	3998,1,c	;volatile
 28972  0126B4  D7FE               	goto	l2523
 28973                           
 28974                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 28975  0126B6  0100               	movlb	0	; () banked
 28976  0126B8  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 28977  0126BA  EC8D  F091         	call	__buck_set_dutycycle
 28978                           
 28979                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 28980  0126BE  8EBA               	bsf	4026,7,c	;volatile
 28981                           
 28982                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 28983  0126C0  9CBA               	bcf	4026,6,c	;volatile
 28984                           
 28985                           ;buck.c: 278: INTCONbits.GIE = 1;
 28986  0126C2  8EF2               	bsf	intcon,7,c	;volatile
 28987                           
 28988                           ;buck.c: 280: }
 28989                           
 28990                           ;buck.c: 279: break;
 28991  0126C4  0012               	return	
 28992  0126C6                     l19215:
 28993  0126C6  0100               	movlb	0	; () banked
 28994  0126C8  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 28995                           
 28996                           ; Switch size 1, requested type "space"
 28997                           ; Number of cases is 2, Range of values is 0 to 1
 28998                           ; switch strategies available:
 28999                           ; Name         Instructions Cycles
 29000                           ; simple_byte            7     4 (average)
 29001                           ;	Chosen strategy is simple_byte
 29002  0126CA  0A00               	xorlw	0	; case 0
 29003  0126CC  B4D8               	btfsc	status,2,c
 29004  0126CE  D7CD               	goto	l2513
 29005  0126D0  0A01               	xorlw	1	; case 1
 29006  0126D2  A4D8               	btfss	status,2,c
 29007  0126D4  0012               	return	
 29008  0126D6  D7E0               	goto	l19193
 29009  0126D8                     __end_of__buck_set_sync_async:
 29010                           	opt stack 0
 29011                           tblptru	equ	0xFF8
 29012                           tblptrh	equ	0xFF7
 29013                           tblptrl	equ	0xFF6
 29014                           tablat	equ	0xFF5
 29015                           prodh	equ	0xFF4
 29016                           prodl	equ	0xFF3
 29017                           intcon	equ	0xFF2
 29018                           intcon2	equ	0xFF1
 29019                           intcon3	equ	0xFF0
 29020                           postinc0	equ	0xFEE
 29021                           wreg	equ	0xFE8
 29022                           indf1	equ	0xFE7
 29023                           postinc1	equ	0xFE6
 29024                           postdec1	equ	0xFE5
 29025                           plusw1	equ	0xFE3
 29026                           fsr1h	equ	0xFE2
 29027                           fsr1l	equ	0xFE1
 29028                           indf2	equ	0xFDF
 29029                           postinc2	equ	0xFDE
 29030                           postdec2	equ	0xFDD
 29031                           plusw2	equ	0xFDB
 29032                           fsr2h	equ	0xFDA
 29033                           fsr2l	equ	0xFD9
 29034                           status	equ	0xFD8
 29035                           
 29036 ;; *************** function __buck_set_dutycycle *****************
 29037 ;; Defined at:
 29038 ;;		line 98 in file "buck.c"
 29039 ;; Parameters:    Size  Location     Type
 29040 ;;  dutyCycle       1    wreg     unsigned char 
 29041 ;; Auto vars:     Size  Location     Type
 29042 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 29043 ;; Return value:  Size  Location     Type
 29044 ;;                  1    wreg      void 
 29045 ;; Registers used:
 29046 ;;		wreg, status,2, status,0
 29047 ;; Tracked objects:
 29048 ;;		On entry : 0/0
 29049 ;;		On exit  : 0/0
 29050 ;;		Unchanged: 0/0
 29051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29055 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29056 ;;Total ram usage:        2 bytes
 29057 ;; Hardware stack levels used:    1
 29058 ;; Hardware stack levels required when called:   10
 29059 ;; This function calls:
 29060 ;;		Nothing
 29061 ;; This function is called by:
 29062 ;;		__buck_start
 29063 ;;		__buck_set_sync_async
 29064 ;;		__buck_operate_local
 29065 ;;		__buck_operate_remote
 29066 ;; This function uses a non-reentrant model
 29067 ;;
 29068                           
 29069                           	psect	text124
 29070  01231A                     __ptext124:
 29071                           	opt stack 0
 29072  01231A                     __buck_set_dutycycle:
 29073                           	opt stack 16
 29074                           
 29075                           ;incstack = 0
 29076                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 29077  01231A  0100               	movlb	0	; () banked
 29078  01231C  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29079                           
 29080                           ;buck.c: 101: if(dutyCycle>242)
 29081  01231E  0EF2               	movlw	242
 29082  012320  0100               	movlb	0	; () banked
 29083  012322  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 29084  012324  D003               	goto	l18859
 29085                           
 29086                           ; BSR set to: 0
 29087                           ;buck.c: 102: dutyCycle = 242;
 29088  012326  0EF2               	movlw	242
 29089  012328  0100               	movlb	0	; () banked
 29090  01232A  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29091  01232C                     l18859:
 29092                           
 29093                           ; BSR set to: 0
 29094                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 29095  01232C  0E03               	movlw	3
 29096  01232E  181C               	xorwf	_buck_status,w,c
 29097  012330  B4D8               	btfsc	status,2,c
 29098  012332  D004               	goto	l18863
 29099                           
 29100                           ; BSR set to: 0
 29101  012334  0E83               	movlw	131
 29102  012336  181C               	xorwf	_buck_status,w,c
 29103  012338  A4D8               	btfss	status,2,c
 29104  01233A  D007               	goto	l18867
 29105  01233C                     l18863:
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;buck.c: 104: {
 29109                           ;buck.c: 105: if(dutyCycle<150)
 29110  01233C  0E96               	movlw	150
 29111  01233E  0100               	movlb	0	; () banked
 29112  012340  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 29113  012342  D003               	goto	l18867
 29114                           
 29115                           ; BSR set to: 0
 29116                           ;buck.c: 106: dutyCycle = 150;
 29117  012344  0E96               	movlw	150
 29118  012346  0100               	movlb	0	; () banked
 29119  012348  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29120  01234A                     l18867:
 29121                           
 29122                           ; BSR set to: 0
 29123                           ;buck.c: 107: }
 29124                           ;buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BUCK_STATUS_REMOT
      +                          E_ASYNCHRONOUS)
 29125  01234A  0E02               	movlw	2
 29126  01234C  181C               	xorwf	_buck_status,w,c
 29127  01234E  B4D8               	btfsc	status,2,c
 29128  012350  D004               	goto	l18871
 29129                           
 29130                           ; BSR set to: 0
 29131  012352  0E82               	movlw	130
 29132  012354  181C               	xorwf	_buck_status,w,c
 29133  012356  A4D8               	btfss	status,2,c
 29134  012358  D007               	goto	l18875
 29135  01235A                     l18871:
 29136                           
 29137                           ; BSR set to: 0
 29138                           ;buck.c: 109: {
 29139                           ;buck.c: 110: if(dutyCycle<40)
 29140  01235A  0E28               	movlw	40
 29141  01235C  0100               	movlb	0	; () banked
 29142  01235E  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 29143  012360  D003               	goto	l18875
 29144                           
 29145                           ; BSR set to: 0
 29146                           ;buck.c: 111: dutyCycle = 40;
 29147  012362  0E28               	movlw	40
 29148  012364  0100               	movlb	0	; () banked
 29149  012366  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29150  012368                     l18875:
 29151                           
 29152                           ; BSR set to: 0
 29153                           ;buck.c: 112: }
 29154                           ;buck.c: 114: buck_dutycycle = dutyCycle;
 29155  012368  C061  F0E4         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 29156                           
 29157                           ; BSR set to: 0
 29158                           ;buck.c: 116: INTCONbits.GIE = 0;
 29159  01236C  9EF2               	bcf	intcon,7,c	;volatile
 29160                           
 29161                           ; BSR set to: 0
 29162                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 29163  01236E  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 29164  012372  0E03               	movlw	3
 29165  012374  0100               	movlb	0	; () banked
 29166  012376  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 29167  012378  0100               	movlb	0	; () banked
 29168  01237A  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 29169  01237C  50BA               	movf	4026,w,c	;volatile
 29170  01237E  0100               	movlb	0	; () banked
 29171  012380  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 29172  012382  0BCF               	andlw	-49
 29173  012384  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 29174  012386  6EBA               	movwf	4026,c	;volatile
 29175                           
 29176                           ; BSR set to: 0
 29177                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 29178  012388  0100               	movlb	0	; () banked
 29179  01238A  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 29180  01238C  42E8               	rrncf	wreg,f,c
 29181  01238E  0B3F               	andlw	63
 29182  012390  6EBB               	movwf	4027,c	;volatile
 29183                           
 29184                           ; BSR set to: 0
 29185                           ;buck.c: 122: INTCONbits.GIE = 1;
 29186  012392  8EF2               	bsf	intcon,7,c	;volatile
 29187                           
 29188                           ; BSR set to: 0
 29189  012394  0012               	return		;funcret
 29190  012396                     __end_of__buck_set_dutycycle:
 29191                           	opt stack 0
 29192                           tblptru	equ	0xFF8
 29193                           tblptrh	equ	0xFF7
 29194                           tblptrl	equ	0xFF6
 29195                           tablat	equ	0xFF5
 29196                           prodh	equ	0xFF4
 29197                           prodl	equ	0xFF3
 29198                           intcon	equ	0xFF2
 29199                           intcon2	equ	0xFF1
 29200                           intcon3	equ	0xFF0
 29201                           postinc0	equ	0xFEE
 29202                           wreg	equ	0xFE8
 29203                           indf1	equ	0xFE7
 29204                           postinc1	equ	0xFE6
 29205                           postdec1	equ	0xFE5
 29206                           plusw1	equ	0xFE3
 29207                           fsr1h	equ	0xFE2
 29208                           fsr1l	equ	0xFE1
 29209                           indf2	equ	0xFDF
 29210                           postinc2	equ	0xFDE
 29211                           postdec2	equ	0xFDD
 29212                           plusw2	equ	0xFDB
 29213                           fsr2h	equ	0xFDA
 29214                           fsr2l	equ	0xFD9
 29215                           status	equ	0xFD8
 29216                           
 29217 ;; *************** function __buck_initial_dutycycle *****************
 29218 ;; Defined at:
 29219 ;;		line 81 in file "buck.c"
 29220 ;; Parameters:    Size  Location     Type
 29221 ;;		None
 29222 ;; Auto vars:     Size  Location     Type
 29223 ;;  dc              4   14[BANK0 ] unsigned long 
 29224 ;; Return value:  Size  Location     Type
 29225 ;;                  1    wreg      unsigned char 
 29226 ;; Registers used:
 29227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29228 ;; Tracked objects:
 29229 ;;		On entry : 0/0
 29230 ;;		On exit  : 0/0
 29231 ;;		Unchanged: 0/0
 29232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29234 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29236 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29237 ;;Total ram usage:        5 bytes
 29238 ;; Hardware stack levels used:    1
 29239 ;; Hardware stack levels required when called:   11
 29240 ;; This function calls:
 29241 ;;		___lldiv
 29242 ;; This function is called by:
 29243 ;;		__buck_start
 29244 ;;		__buck_operate_local
 29245 ;;		__buck_operate_remote
 29246 ;; This function uses a non-reentrant model
 29247 ;;
 29248                           
 29249                           	psect	text125
 29250  010850                     __ptext125:
 29251                           	opt stack 0
 29252  010850                     __buck_initial_dutycycle:
 29253                           	opt stack 16
 29254                           
 29255                           ;buck.c: 83: uint32_t dc;
 29256                           ;buck.c: 85: if(os.input_voltage<os.output_voltage)
 29257                           
 29258                           ; BSR set to: 0
 29259                           ;incstack = 0
 29260  010850  0102               	movlb	2	; () banked
 29261  010852  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 29262  010854  0102               	movlb	2	; () banked
 29263  010856  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 29264  010858  0102               	movlb	2	; () banked
 29265  01085A  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 29266  01085C  0A80               	xorlw	128
 29267  01085E  0100               	movlb	0	; () banked
 29268  010860  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 29269  010862  0102               	movlb	2	; () banked
 29270  010864  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 29271  010866  0A80               	xorlw	128
 29272  010868  0100               	movlb	0	; () banked
 29273  01086A  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 29274  01086C  B0D8               	btfsc	status,0,c
 29275  01086E  D002               	goto	l19165
 29276                           
 29277                           ; BSR set to: 0
 29278                           ;buck.c: 86: return 242;
 29279  010870  0EF2               	movlw	242
 29280                           
 29281                           ; BSR set to: 0
 29282  010872  0012               	return	
 29283  010874                     l19165:
 29284                           
 29285                           ; BSR set to: 0
 29286                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 29287  010874  EE22  F027         	lfsr	2,_os+39	;volatile
 29288  010878  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 29289  01087C  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 29290  010880  0100               	movlb	0	; () banked
 29291  010882  0E00               	movlw	0
 29292  010884  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 29293  010886  0EFF               	movlw	-1
 29294  010888  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 29295  01088A  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 29296                           
 29297                           ; BSR set to: 0
 29298                           ;buck.c: 88: dc <<= 8;
 29299  01088C  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 29300  010890  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 29301  010894  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 29302  010898  0100               	movlb	0	; () banked
 29303  01089A  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 29307  01089C  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 29308  0108A0  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 29309  0108A4  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 29310  0108A8  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 29311  0108AC  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 29312  0108B0  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 29313  0108B4  0100               	movlb	0	; () banked
 29314  0108B6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 29315  0108B8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 29316  0108BA  EC71  F088         	call	___lldiv	;wreg free
 29317  0108BE  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 29318  0108C2  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 29319  0108C6  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 29320  0108CA  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 29321                           
 29322                           ;buck.c: 91: if(dc>242)
 29323  0108CE  0100               	movlb	0	; () banked
 29324  0108D0  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 29325  0108D2  0100               	movlb	0	; () banked
 29326  0108D4  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 29327  0108D6  0100               	movlb	0	; () banked
 29328  0108D8  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 29329  0108DA  E105               	bnz	u18150
 29330  0108DC  0EF3               	movlw	243
 29331  0108DE  0100               	movlb	0	; () banked
 29332  0108E0  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 29333  0108E2  A0D8               	btfss	status,0,c
 29334  0108E4  D009               	goto	l19175
 29335  0108E6                     u18150:
 29336                           
 29337                           ; BSR set to: 0
 29338                           ;buck.c: 92: dc = 242;
 29339  0108E6  0EF2               	movlw	242
 29340  0108E8  0100               	movlb	0	; () banked
 29341  0108EA  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 29342  0108EC  0E00               	movlw	0
 29343  0108EE  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 29344  0108F0  0E00               	movlw	0
 29345  0108F2  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 29346  0108F4  0E00               	movlw	0
 29347  0108F6  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 29348  0108F8                     l19175:
 29349                           
 29350                           ; BSR set to: 0
 29351                           ;buck.c: 93: if(dc<150)
 29352  0108F8  0100               	movlb	0	; () banked
 29353  0108FA  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 29354  0108FC  0100               	movlb	0	; () banked
 29355  0108FE  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 29356  010900  0100               	movlb	0	; () banked
 29357  010902  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 29358  010904  E10E               	bnz	l2477
 29359  010906  0E96               	movlw	150
 29360  010908  0100               	movlb	0	; () banked
 29361  01090A  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 29362  01090C  B0D8               	btfsc	status,0,c
 29363  01090E  D009               	goto	l2477
 29364                           
 29365                           ; BSR set to: 0
 29366                           ;buck.c: 94: dc = 150;
 29367  010910  0E96               	movlw	150
 29368  010912  0100               	movlb	0	; () banked
 29369  010914  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 29370  010916  0E00               	movlw	0
 29371  010918  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 29372  01091A  0E00               	movlw	0
 29373  01091C  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 29374  01091E  0E00               	movlw	0
 29375  010920  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 29376  010922                     l2477:
 29377                           
 29378                           ; BSR set to: 0
 29379                           ;buck.c: 95: return (uint8_t) dc;
 29380  010922  0100               	movlb	0	; () banked
 29381  010924  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 29382  010926  0012               	return	
 29383  010928                     __end_of__buck_initial_dutycycle:
 29384                           	opt stack 0
 29385                           tblptru	equ	0xFF8
 29386                           tblptrh	equ	0xFF7
 29387                           tblptrl	equ	0xFF6
 29388                           tablat	equ	0xFF5
 29389                           prodh	equ	0xFF4
 29390                           prodl	equ	0xFF3
 29391                           intcon	equ	0xFF2
 29392                           intcon2	equ	0xFF1
 29393                           intcon3	equ	0xFF0
 29394                           postinc0	equ	0xFEE
 29395                           wreg	equ	0xFE8
 29396                           indf1	equ	0xFE7
 29397                           postinc1	equ	0xFE6
 29398                           postdec1	equ	0xFE5
 29399                           plusw1	equ	0xFE3
 29400                           fsr1h	equ	0xFE2
 29401                           fsr1l	equ	0xFE1
 29402                           indf2	equ	0xFDF
 29403                           postinc2	equ	0xFDE
 29404                           postdec2	equ	0xFDD
 29405                           plusw2	equ	0xFDB
 29406                           fsr2h	equ	0xFDA
 29407                           fsr2l	equ	0xFD9
 29408                           status	equ	0xFD8
 29409                           
 29410 ;; *************** function ___lldiv *****************
 29411 ;; Defined at:
 29412 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 29413 ;; Parameters:    Size  Location     Type
 29414 ;;  dividend        4    0[BANK0 ] unsigned long 
 29415 ;;  divisor         4    4[BANK0 ] unsigned long 
 29416 ;; Auto vars:     Size  Location     Type
 29417 ;;  quotient        4    8[BANK0 ] unsigned long 
 29418 ;;  counter         1   12[BANK0 ] unsigned char 
 29419 ;; Return value:  Size  Location     Type
 29420 ;;                  4    0[BANK0 ] unsigned long 
 29421 ;; Registers used:
 29422 ;;		wreg, status,2, status,0
 29423 ;; Tracked objects:
 29424 ;;		On entry : 0/0
 29425 ;;		On exit  : 0/0
 29426 ;;		Unchanged: 0/0
 29427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29428 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29429 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29431 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29432 ;;Total ram usage:       13 bytes
 29433 ;; Hardware stack levels used:    1
 29434 ;; Hardware stack levels required when called:   10
 29435 ;; This function calls:
 29436 ;;		Nothing
 29437 ;; This function is called by:
 29438 ;;		__buck_initial_dutycycle
 29439 ;;		__get_output_power
 29440 ;;		_log_generate_entry
 29441 ;; This function uses a non-reentrant model
 29442 ;;
 29443                           
 29444                           	psect	text126
 29445  0110E2                     __ptext126:
 29446                           	opt stack 0
 29447  0110E2                     ___lldiv:
 29448                           	opt stack 18
 29449                           
 29450                           ; BSR set to: 0
 29451                           ;incstack = 0
 29452  0110E2  0E00               	movlw	0
 29453  0110E4  0100               	movlb	0	; () banked
 29454  0110E6  6F68               	movwf	___lldiv@quotient& (0+255),b
 29455  0110E8  0E00               	movlw	0
 29456  0110EA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 29457  0110EC  0E00               	movlw	0
 29458  0110EE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 29459  0110F0  0E00               	movlw	0
 29460  0110F2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 29461                           
 29462                           ; BSR set to: 0
 29463  0110F4  0100               	movlb	0	; () banked
 29464  0110F6  5164               	movf	___lldiv@divisor& (0+255),w,b
 29465  0110F8  0100               	movlb	0	; () banked
 29466  0110FA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29467  0110FC  0100               	movlb	0	; () banked
 29468  0110FE  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29469  011100  0100               	movlb	0	; () banked
 29470  011102  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29471  011104  B4D8               	btfsc	status,2,c
 29472  011106  D042               	goto	l3680
 29473                           
 29474                           ; BSR set to: 0
 29475  011108  0E01               	movlw	1
 29476  01110A  0100               	movlb	0	; () banked
 29477  01110C  6F6C               	movwf	___lldiv@counter& (0+255),b
 29478  01110E  D008               	goto	l18941
 29479  011110                     l18939:
 29480                           
 29481                           ; BSR set to: 0
 29482  011110  0100               	movlb	0	; () banked
 29483  011112  90D8               	bcf	status,0,c
 29484  011114  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 29485  011116  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29486  011118  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29487  01111A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29488  01111C  0100               	movlb	0	; () banked
 29489  01111E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 29490  011120                     l18941:
 29491                           
 29492                           ; BSR set to: 0
 29493  011120  0100               	movlb	0	; () banked
 29494  011122  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29495  011124  D7F5               	goto	l18939
 29496  011126                     l18943:
 29497                           
 29498                           ; BSR set to: 0
 29499  011126  0100               	movlb	0	; () banked
 29500  011128  90D8               	bcf	status,0,c
 29501  01112A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 29502  01112C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29503  01112E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29504  011130  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29505                           
 29506                           ; BSR set to: 0
 29507  011132  0100               	movlb	0	; () banked
 29508  011134  5164               	movf	___lldiv@divisor& (0+255),w,b
 29509  011136  0100               	movlb	0	; () banked
 29510  011138  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 29511  01113A  0100               	movlb	0	; () banked
 29512  01113C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29513  01113E  0100               	movlb	0	; () banked
 29514  011140  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29515  011142  0100               	movlb	0	; () banked
 29516  011144  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29517  011146  0100               	movlb	0	; () banked
 29518  011148  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29519  01114A  0100               	movlb	0	; () banked
 29520  01114C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29521  01114E  0100               	movlb	0	; () banked
 29522  011150  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29523  011152  A0D8               	btfss	status,0,c
 29524  011154  D012               	goto	l18951
 29525                           
 29526                           ; BSR set to: 0
 29527  011156  0100               	movlb	0	; () banked
 29528  011158  5164               	movf	___lldiv@divisor& (0+255),w,b
 29529  01115A  0100               	movlb	0	; () banked
 29530  01115C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 29531  01115E  0100               	movlb	0	; () banked
 29532  011160  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29533  011162  0100               	movlb	0	; () banked
 29534  011164  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29535  011166  0100               	movlb	0	; () banked
 29536  011168  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29537  01116A  0100               	movlb	0	; () banked
 29538  01116C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29539  01116E  0100               	movlb	0	; () banked
 29540  011170  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29541  011172  0100               	movlb	0	; () banked
 29542  011174  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29543                           
 29544                           ; BSR set to: 0
 29545  011176  0100               	movlb	0	; () banked
 29546  011178  8168               	bsf	___lldiv@quotient& (0+255),0,b
 29547  01117A                     l18951:
 29548                           
 29549                           ; BSR set to: 0
 29550  01117A  0100               	movlb	0	; () banked
 29551  01117C  90D8               	bcf	status,0,c
 29552  01117E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29553  011180  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29554  011182  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29555  011184  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 29556                           
 29557                           ; BSR set to: 0
 29558  011186  0100               	movlb	0	; () banked
 29559  011188  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 29560  01118A  D7CD               	goto	l18943
 29561  01118C                     l3680:
 29562                           
 29563                           ; BSR set to: 0
 29564  01118C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 29565  011190  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 29566  011194  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 29567  011198  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 29568                           
 29569                           ; BSR set to: 0
 29570  01119C  0012               	return		;funcret
 29571  01119E                     __end_of___lldiv:
 29572                           	opt stack 0
 29573                           tblptru	equ	0xFF8
 29574                           tblptrh	equ	0xFF7
 29575                           tblptrl	equ	0xFF6
 29576                           tablat	equ	0xFF5
 29577                           prodh	equ	0xFF4
 29578                           prodl	equ	0xFF3
 29579                           intcon	equ	0xFF2
 29580                           intcon2	equ	0xFF1
 29581                           intcon3	equ	0xFF0
 29582                           postinc0	equ	0xFEE
 29583                           wreg	equ	0xFE8
 29584                           indf1	equ	0xFE7
 29585                           postinc1	equ	0xFE6
 29586                           postdec1	equ	0xFE5
 29587                           plusw1	equ	0xFE3
 29588                           fsr1h	equ	0xFE2
 29589                           fsr1l	equ	0xFE1
 29590                           indf2	equ	0xFDF
 29591                           postinc2	equ	0xFDE
 29592                           postdec2	equ	0xFDD
 29593                           plusw2	equ	0xFDB
 29594                           fsr2h	equ	0xFDA
 29595                           fsr2l	equ	0xFD9
 29596                           status	equ	0xFD8
 29597                           
 29598 ;; *************** function _adc_read *****************
 29599 ;; Defined at:
 29600 ;;		line 30 in file "adc.c"
 29601 ;; Parameters:    Size  Location     Type
 29602 ;;  channel         1    wreg     enum E8221
 29603 ;; Auto vars:     Size  Location     Type
 29604 ;;  channel         1    2[BANK0 ] enum E8221
 29605 ;;  adc_value       2    3[BANK0 ] unsigned int 
 29606 ;; Return value:  Size  Location     Type
 29607 ;;                  2    0[BANK0 ] unsigned int 
 29608 ;; Registers used:
 29609 ;;		wreg, status,2, status,0
 29610 ;; Tracked objects:
 29611 ;;		On entry : 0/0
 29612 ;;		On exit  : 0/0
 29613 ;;		Unchanged: 0/0
 29614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29616 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29618 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29619 ;;Total ram usage:        5 bytes
 29620 ;; Hardware stack levels used:    1
 29621 ;; Hardware stack levels required when called:   10
 29622 ;; This function calls:
 29623 ;;		Nothing
 29624 ;; This function is called by:
 29625 ;;		_main
 29626 ;; This function uses a non-reentrant model
 29627 ;;
 29628                           
 29629                           	psect	text127
 29630  011C48                     __ptext127:
 29631                           	opt stack 0
 29632  011C48                     _adc_read:
 29633                           	opt stack 20
 29634                           
 29635                           ; BSR set to: 0
 29636                           ;incstack = 0
 29637                           ;adc_read@channel stored from wreg
 29638  011C48  0100               	movlb	0	; () banked
 29639  011C4A  6F62               	movwf	adc_read@channel& (0+255),b
 29640                           
 29641                           ;adc.c: 32: uint16_t adc_value;
 29642                           ;adc.c: 34: switch(channel)
 29643  011C4C  D011               	goto	l22417
 29644  011C4E                     l22409:
 29645                           
 29646                           ;adc.c: 37: ADCON0bits.CHS = 0b1100;
 29647  011C4E  50C2               	movf	4034,w,c	;volatile
 29648  011C50  0BC3               	andlw	-61
 29649  011C52  0930               	iorlw	48
 29650  011C54  D007               	goto	L19
 29651  011C56                     l22411:
 29652                           
 29653                           ;adc.c: 40: ADCON0bits.CHS = 0b0001;
 29654  011C56  50C2               	movf	4034,w,c	;volatile
 29655  011C58  0BC3               	andlw	-61
 29656  011C5A  0904               	iorlw	4
 29657  011C5C  D003               	goto	L19
 29658  011C5E                     l22413:
 29659                           
 29660                           ;adc.c: 43: ADCON0bits.CHS = 0b0010;
 29661  011C5E  50C2               	movf	4034,w,c	;volatile
 29662  011C60  0BC3               	andlw	-61
 29663  011C62  0908               	iorlw	8
 29664  011C64                     L19:
 29665  011C64  6EC2               	movwf	4034,c	;volatile
 29666                           
 29667                           ;adc.c: 44: break;
 29668  011C66  D018               	goto	l22425
 29669  011C68                     l2686:
 29670                           
 29671                           ; BSR set to: 0
 29672                           ;adc.c: 46: return 0xFFFF;
 29673  011C68  0100               	movlb	0	; () banked
 29674  011C6A  6960               	setf	?_adc_read& (0+255),b
 29675  011C6C  6961               	setf	(?_adc_read+1)& (0+255),b
 29676  011C6E  0012               	return	
 29677  011C70                     l22417:
 29678  011C70  0100               	movlb	0	; () banked
 29679  011C72  5162               	movf	adc_read@channel& (0+255),w,b
 29680                           
 29681                           ; Switch size 1, requested type "space"
 29682                           ; Number of cases is 3, Range of values is 0 to 2
 29683                           ; switch strategies available:
 29684                           ; Name         Instructions Cycles
 29685                           ; simple_byte           10     6 (average)
 29686                           ;	Chosen strategy is simple_byte
 29687  011C74  0A00               	xorlw	0	; case 0
 29688  011C76  B4D8               	btfsc	status,2,c
 29689  011C78  D7EA               	goto	l22409
 29690  011C7A  0A01               	xorlw	1	; case 1
 29691  011C7C  B4D8               	btfsc	status,2,c
 29692  011C7E  D7EB               	goto	l22411
 29693  011C80  0A03               	xorlw	3	; case 2
 29694  011C82  B4D8               	btfsc	status,2,c
 29695  011C84  D7EC               	goto	l22413
 29696  011C86  D7F0               	goto	l2686
 29697  011C88                     l22419:
 29698                           
 29699                           ;adc.c: 53: _delay((unsigned long)((15)*(8000000/4000000.0)));
 29700  011C88  0E0A               	movlw	10
 29701  011C8A                     u23257:
 29702  011C8A  2EE8               	decfsz	wreg,f,c
 29703  011C8C  D7FE               	bra	u23257
 29704                           
 29705                           ;adc.c: 54: break;
 29706  011C8E  D00C               	goto	l2690
 29707  011C90                     l22421:
 29708                           
 29709                           ;adc.c: 56: _delay((unsigned long)((90)*(8000000/4000000.0)));
 29710  011C90  0E3C               	movlw	60
 29711  011C92                     u23267:
 29712  011C92  2EE8               	decfsz	wreg,f,c
 29713  011C94  D7FE               	bra	u23267
 29714                           
 29715                           ;adc.c: 58: }
 29716                           
 29717                           ;adc.c: 57: break;
 29718  011C96  D008               	goto	l2690
 29719  011C98                     l22425:
 29720  011C98  0102               	movlb	2	; () banked
 29721  011C9A  5100               	movf	_os& (0+255),w,b	;volatile
 29722                           
 29723                           ; Switch size 1, requested type "space"
 29724                           ; Number of cases is 2, Range of values is 1 to 2
 29725                           ; switch strategies available:
 29726                           ; Name         Instructions Cycles
 29727                           ; simple_byte            7     4 (average)
 29728                           ;	Chosen strategy is simple_byte
 29729  011C9C  0A01               	xorlw	1	; case 1
 29730  011C9E  B4D8               	btfsc	status,2,c
 29731  011CA0  D7F3               	goto	l22419
 29732  011CA2  0A03               	xorlw	3	; case 2
 29733  011CA4  B4D8               	btfsc	status,2,c
 29734  011CA6  D7F4               	goto	l22421
 29735  011CA8                     l2690:
 29736                           
 29737                           ;adc.c: 61: ADCON0bits.GO_NOT_DONE = 1;
 29738  011CA8  82C2               	bsf	4034,1,c	;volatile
 29739  011CAA                     l2692:
 29740  011CAA  B2C2               	btfsc	4034,1,c	;volatile
 29741  011CAC  D7FE               	goto	l2692
 29742                           
 29743                           ;adc.c: 67: adc_value = ADRESH;
 29744  011CAE  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 29745  011CB2  0100               	movlb	0	; () banked
 29746  011CB4  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 29747                           
 29748                           ; BSR set to: 0
 29749                           ;adc.c: 68: adc_value <<= 2;
 29750  011CB6  0100               	movlb	0	; () banked
 29751  011CB8  90D8               	bcf	status,0,c
 29752  011CBA  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 29753  011CBC  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 29754  011CBE  0100               	movlb	0	; () banked
 29755  011CC0  90D8               	bcf	status,0,c
 29756  011CC2  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 29757  011CC4  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 29758                           
 29759                           ; BSR set to: 0
 29760                           ;adc.c: 69: adc_value |= ADRESL;
 29761  011CC6  50C3               	movf	4035,w,c	;volatile
 29762  011CC8  0100               	movlb	0	; () banked
 29763  011CCA  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 29764                           
 29765                           ; BSR set to: 0
 29766                           ;adc.c: 71: return adc_value;
 29767  011CCC  C063  F060         	movff	adc_read@adc_value,?_adc_read
 29768  011CD0  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 29769  011CD4  0012               	return	
 29770  011CD6                     __end_of_adc_read:
 29771                           	opt stack 0
 29772                           tblptru	equ	0xFF8
 29773                           tblptrh	equ	0xFF7
 29774                           tblptrl	equ	0xFF6
 29775                           tablat	equ	0xFF5
 29776                           prodh	equ	0xFF4
 29777                           prodl	equ	0xFF3
 29778                           intcon	equ	0xFF2
 29779                           intcon2	equ	0xFF1
 29780                           intcon3	equ	0xFF0
 29781                           postinc0	equ	0xFEE
 29782                           wreg	equ	0xFE8
 29783                           indf1	equ	0xFE7
 29784                           postinc1	equ	0xFE6
 29785                           postdec1	equ	0xFE5
 29786                           plusw1	equ	0xFE3
 29787                           fsr1h	equ	0xFE2
 29788                           fsr1l	equ	0xFE1
 29789                           indf2	equ	0xFDF
 29790                           postinc2	equ	0xFDE
 29791                           postdec2	equ	0xFDD
 29792                           plusw2	equ	0xFDB
 29793                           fsr2h	equ	0xFDA
 29794                           fsr2l	equ	0xFD9
 29795                           status	equ	0xFD8
 29796                           
 29797 ;; *************** function _adc_calibrate *****************
 29798 ;; Defined at:
 29799 ;;		line 20 in file "adc.c"
 29800 ;; Parameters:    Size  Location     Type
 29801 ;;		None
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;		None
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1    wreg      void 
 29806 ;; Registers used:
 29807 ;;		None
 29808 ;; Tracked objects:
 29809 ;;		On entry : 0/0
 29810 ;;		On exit  : 0/0
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29817 ;;Total ram usage:        0 bytes
 29818 ;; Hardware stack levels used:    1
 29819 ;; Hardware stack levels required when called:   10
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_main
 29824 ;; This function uses a non-reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text128
 29828  014270                     __ptext128:
 29829                           	opt stack 0
 29830  014270                     _adc_calibrate:
 29831                           	opt stack 20
 29832                           
 29833                           ;adc.c: 22: ADCON1bits.ADCAL = 1;
 29834                           
 29835                           ; BSR set to: 0
 29836                           ;incstack = 0
 29837  014270  8CC1               	bsf	4033,6,c	;volatile
 29838                           
 29839                           ;adc.c: 24: ADCON0bits.GO_NOT_DONE = 1;
 29840  014272  82C2               	bsf	4034,1,c	;volatile
 29841  014274                     l2675:
 29842  014274  B2C2               	btfsc	4034,1,c	;volatile
 29843  014276  D7FE               	goto	l2675
 29844                           
 29845                           ;adc.c: 27: ADCON1bits.ADCAL = 0;
 29846  014278  9CC1               	bcf	4033,6,c	;volatile
 29847  01427A  0012               	return		;funcret
 29848  01427C                     __end_of_adc_calibrate:
 29849                           	opt stack 0
 29850                           tblptru	equ	0xFF8
 29851                           tblptrh	equ	0xFF7
 29852                           tblptrl	equ	0xFF6
 29853                           tablat	equ	0xFF5
 29854                           prodh	equ	0xFF4
 29855                           prodl	equ	0xFF3
 29856                           intcon	equ	0xFF2
 29857                           intcon2	equ	0xFF1
 29858                           intcon3	equ	0xFF0
 29859                           postinc0	equ	0xFEE
 29860                           wreg	equ	0xFE8
 29861                           indf1	equ	0xFE7
 29862                           postinc1	equ	0xFE6
 29863                           postdec1	equ	0xFE5
 29864                           plusw1	equ	0xFE3
 29865                           fsr1h	equ	0xFE2
 29866                           fsr1l	equ	0xFE1
 29867                           indf2	equ	0xFDF
 29868                           postinc2	equ	0xFDE
 29869                           postdec2	equ	0xFDD
 29870                           plusw2	equ	0xFDB
 29871                           fsr2h	equ	0xFDA
 29872                           fsr2l	equ	0xFD9
 29873                           status	equ	0xFD8
 29874                           
 29875 ;; *************** function _adc_calculate_temperature *****************
 29876 ;; Defined at:
 29877 ;;		line 74 in file "adc.c"
 29878 ;; Parameters:    Size  Location     Type
 29879 ;;  adc_value       2   12[BANK0 ] unsigned int 
 29880 ;;  calibration     1   14[BANK0 ] enum E8142
 29881 ;; Auto vars:     Size  Location     Type
 29882 ;;  tmp             4   21[BANK0 ] long 
 29883 ;; Return value:  Size  Location     Type
 29884 ;;                  2   12[BANK0 ] int 
 29885 ;; Registers used:
 29886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29887 ;; Tracked objects:
 29888 ;;		On entry : 0/0
 29889 ;;		On exit  : 0/0
 29890 ;;		Unchanged: 0/0
 29891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29892 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29893 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29894 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29895 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29896 ;;Total ram usage:       13 bytes
 29897 ;; Hardware stack levels used:    1
 29898 ;; Hardware stack levels required when called:   11
 29899 ;; This function calls:
 29900 ;;		___lmul
 29901 ;; This function is called by:
 29902 ;;		_main
 29903 ;; This function uses a non-reentrant model
 29904 ;;
 29905                           
 29906                           	psect	text129
 29907  00F4BC                     __ptext129:
 29908                           	opt stack 0
 29909  00F4BC                     _adc_calculate_temperature:
 29910                           	opt stack 19
 29911                           
 29912                           ;adc.c: 76: int32_t tmp = (int32_t) adc_value;
 29913                           
 29914                           ;incstack = 0
 29915  00F4BC  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 29916  00F4C0  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 29917  00F4C4  0100               	movlb	0	; () banked
 29918  00F4C6  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 29919  00F4C8  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 29920                           
 29921                           ; BSR set to: 0
 29922                           ;adc.c: 77: tmp += calibrationParameters[calibration].Offset;
 29923  00F4CA  0100               	movlb	0	; () banked
 29924  00F4CC  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29925  00F4CE  0D0C               	mullw	12
 29926  00F4D0  0E05               	movlw	5
 29927  00F4D2  26F3               	addwf	prodl,f,c
 29928  00F4D4  0E00               	movlw	0
 29929  00F4D6  22F4               	addwfc	prodh,f,c
 29930  00F4D8  0E00               	movlw	low _calibrationParameters
 29931  00F4DA  24F3               	addwf	prodl,w,c
 29932  00F4DC  6ED9               	movwf	fsr2l,c
 29933  00F4DE  0E03               	movlw	high _calibrationParameters
 29934  00F4E0  20F4               	addwfc	prodh,w,c
 29935  00F4E2  6EDA               	movwf	fsr2h,c
 29936  00F4E4  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 29937  00F4E8  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 29938  00F4EC  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 29939  00F4F0  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 29940  00F4F4  0E00               	movlw	0
 29941  00F4F6  0100               	movlb	0	; () banked
 29942  00F4F8  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 29943  00F4FA  0EFF               	movlw	255
 29944  00F4FC  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 29945  00F4FE  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 29946  00F500  0100               	movlb	0	; () banked
 29947  00F502  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 29948  00F504  0100               	movlb	0	; () banked
 29949  00F506  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 29950  00F508  0100               	movlb	0	; () banked
 29951  00F50A  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 29952  00F50C  0100               	movlb	0	; () banked
 29953  00F50E  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 29954  00F510  0100               	movlb	0	; () banked
 29955  00F512  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 29956  00F514  0100               	movlb	0	; () banked
 29957  00F516  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 29958  00F518  0100               	movlb	0	; () banked
 29959  00F51A  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 29960  00F51C  0100               	movlb	0	; () banked
 29961  00F51E  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 29962                           
 29963                           ; BSR set to: 0
 29964                           ;adc.c: 78: tmp *= calibrationParameters[calibration].Multiplier;
 29965  00F520  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 29966  00F524  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 29967  00F528  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 29968  00F52C  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 29969  00F530  0100               	movlb	0	; () banked
 29970  00F532  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29971  00F534  0D0C               	mullw	12
 29972  00F536  0E07               	movlw	7
 29973  00F538  26F3               	addwf	prodl,f,c
 29974  00F53A  0E00               	movlw	0
 29975  00F53C  22F4               	addwfc	prodh,f,c
 29976  00F53E  0E00               	movlw	low _calibrationParameters
 29977  00F540  24F3               	addwf	prodl,w,c
 29978  00F542  6ED9               	movwf	fsr2l,c
 29979  00F544  0E03               	movlw	high _calibrationParameters
 29980  00F546  20F4               	addwfc	prodh,w,c
 29981  00F548  6EDA               	movwf	fsr2h,c
 29982  00F54A  CFDE F064          	movff	postinc2,___lmul@multiplicand
 29983  00F54E  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 29984  00F552  0100               	movlb	0	; () banked
 29985  00F554  0E00               	movlw	0
 29986  00F556  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 29987  00F558  0EFF               	movlw	-1
 29988  00F55A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29989  00F55C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29990  00F55E  ECBC  F092         	call	___lmul	;wreg free
 29991  00F562  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 29992  00F566  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 29993  00F56A  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 29994  00F56E  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 29995                           
 29996                           ;adc.c: 79: tmp >>= calibrationParameters[calibration].Shift - 1;
 29997  00F572  0100               	movlb	0	; () banked
 29998  00F574  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29999  00F576  0D0C               	mullw	12
 30000  00F578  0E09               	movlw	9
 30001  00F57A  26F3               	addwf	prodl,f,c
 30002  00F57C  0E00               	movlw	0
 30003  00F57E  22F4               	addwfc	prodh,f,c
 30004  00F580  0E00               	movlw	low _calibrationParameters
 30005  00F582  24F3               	addwf	prodl,w,c
 30006  00F584  6ED9               	movwf	fsr2l,c
 30007  00F586  0E03               	movlw	high _calibrationParameters
 30008  00F588  20F4               	addwfc	prodh,w,c
 30009  00F58A  6EDA               	movwf	fsr2h,c
 30010  00F58C  50DF               	movf	indf2,w,c
 30011  00F58E  0100               	movlb	0	; () banked
 30012  00F590  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 30013  00F592  0EFF               	movlw	-1
 30014  00F594  0100               	movlb	0	; () banked
 30015  00F596  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 30016  00F598  0100               	movlb	0	; () banked
 30017  00F59A  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 30018  00F59C  0100               	movlb	0	; () banked
 30019  00F59E  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 30020  00F5A0  D006               	goto	u22670
 30021  00F5A2                     u22675:
 30022  00F5A2  0100               	movlb	0	; () banked
 30023  00F5A4  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 30024  00F5A6  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 30025  00F5A8  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 30026  00F5AA  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 30027  00F5AC  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 30028  00F5AE                     u22670:
 30029  00F5AE  0100               	movlb	0	; () banked
 30030  00F5B0  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 30031  00F5B2  D7F7               	goto	u22675
 30032                           
 30033                           ;adc.c: 80: tmp += 1;
 30034  00F5B4  0E01               	movlw	1
 30035  00F5B6  0100               	movlb	0	; () banked
 30036  00F5B8  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 30037  00F5BA  0E00               	movlw	0
 30038  00F5BC  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 30039  00F5BE  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 30040  00F5C0  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 30041                           
 30042                           ; BSR set to: 0
 30043                           ;adc.c: 81: tmp >>= 1;
 30044  00F5C2  0100               	movlb	0	; () banked
 30045  00F5C4  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 30046  00F5C6  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 30047  00F5C8  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 30048  00F5CA  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 30049  00F5CC  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 30050                           
 30051                           ; BSR set to: 0
 30052                           ;adc.c: 82: return (int16_t) tmp;
 30053  00F5CE  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 30054  00F5D2  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 30055  00F5D6  0012               	return	
 30056  00F5D8                     __end_of_adc_calculate_temperature:
 30057                           	opt stack 0
 30058                           tblptru	equ	0xFF8
 30059                           tblptrh	equ	0xFF7
 30060                           tblptrl	equ	0xFF6
 30061                           tablat	equ	0xFF5
 30062                           prodh	equ	0xFF4
 30063                           prodl	equ	0xFF3
 30064                           intcon	equ	0xFF2
 30065                           intcon2	equ	0xFF1
 30066                           intcon3	equ	0xFF0
 30067                           postinc0	equ	0xFEE
 30068                           wreg	equ	0xFE8
 30069                           indf1	equ	0xFE7
 30070                           postinc1	equ	0xFE6
 30071                           postdec1	equ	0xFE5
 30072                           plusw1	equ	0xFE3
 30073                           fsr1h	equ	0xFE2
 30074                           fsr1l	equ	0xFE1
 30075                           indf2	equ	0xFDF
 30076                           postinc2	equ	0xFDE
 30077                           postdec2	equ	0xFDD
 30078                           plusw2	equ	0xFDB
 30079                           fsr2h	equ	0xFDA
 30080                           fsr2l	equ	0xFD9
 30081                           status	equ	0xFD8
 30082                           
 30083 ;; *************** function ___lmul *****************
 30084 ;; Defined at:
 30085 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
 30086 ;; Parameters:    Size  Location     Type
 30087 ;;  multiplier      4    0[BANK0 ] unsigned long 
 30088 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 30089 ;; Auto vars:     Size  Location     Type
 30090 ;;  product         4    8[BANK0 ] unsigned long 
 30091 ;; Return value:  Size  Location     Type
 30092 ;;                  4    0[BANK0 ] unsigned long 
 30093 ;; Registers used:
 30094 ;;		wreg, status,2, status,0
 30095 ;; Tracked objects:
 30096 ;;		On entry : 0/0
 30097 ;;		On exit  : 0/0
 30098 ;;		Unchanged: 0/0
 30099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30100 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30101 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30103 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30104 ;;Total ram usage:       12 bytes
 30105 ;; Hardware stack levels used:    1
 30106 ;; Hardware stack levels required when called:   10
 30107 ;; This function calls:
 30108 ;;		Nothing
 30109 ;; This function is called by:
 30110 ;;		_system_calculate_input_voltage
 30111 ;;		_system_calculate_output_voltage
 30112 ;;		_system_calculate_input_current
 30113 ;;		_system_calculate_output_current
 30114 ;;		__display_efficiency
 30115 ;;		__buck_operate_local
 30116 ;;		_adc_calculate_temperature
 30117 ;;		__get_input_power
 30118 ;;		__get_output_power
 30119 ;; This function uses a non-reentrant model
 30120 ;;
 30121                           
 30122                           	psect	text130
 30123  012578                     __ptext130:
 30124                           	opt stack 0
 30125  012578                     ___lmul:
 30126                           	opt stack 19
 30127                           
 30128                           ; BSR set to: 0
 30129                           ;incstack = 0
 30130  012578  0E00               	movlw	0
 30131  01257A  0100               	movlb	0	; () banked
 30132  01257C  6F68               	movwf	___lmul@product& (0+255),b
 30133  01257E  0E00               	movlw	0
 30134  012580  6F69               	movwf	(___lmul@product+1)& (0+255),b
 30135  012582  0E00               	movlw	0
 30136  012584  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 30137  012586  0E00               	movlw	0
 30138  012588  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 30139  01258A                     l20165:
 30140                           
 30141                           ; BSR set to: 0
 30142  01258A  0100               	movlb	0	; () banked
 30143  01258C  A160               	btfss	___lmul@multiplier& (0+255),0,b
 30144  01258E  D010               	goto	l20169
 30145                           
 30146                           ; BSR set to: 0
 30147  012590  0100               	movlb	0	; () banked
 30148  012592  5164               	movf	___lmul@multiplicand& (0+255),w,b
 30149  012594  0100               	movlb	0	; () banked
 30150  012596  2768               	addwf	___lmul@product& (0+255),f,b
 30151  012598  0100               	movlb	0	; () banked
 30152  01259A  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 30153  01259C  0100               	movlb	0	; () banked
 30154  01259E  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 30155  0125A0  0100               	movlb	0	; () banked
 30156  0125A2  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 30157  0125A4  0100               	movlb	0	; () banked
 30158  0125A6  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 30159  0125A8  0100               	movlb	0	; () banked
 30160  0125AA  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 30161  0125AC  0100               	movlb	0	; () banked
 30162  0125AE  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 30163  0125B0                     l20169:
 30164                           
 30165                           ; BSR set to: 0
 30166  0125B0  0100               	movlb	0	; () banked
 30167  0125B2  90D8               	bcf	status,0,c
 30168  0125B4  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 30169  0125B6  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 30170  0125B8  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 30171  0125BA  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 30172                           
 30173                           ; BSR set to: 0
 30174  0125BC  0100               	movlb	0	; () banked
 30175  0125BE  90D8               	bcf	status,0,c
 30176  0125C0  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 30177  0125C2  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 30178  0125C4  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 30179  0125C6  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 30180  0125C8  0100               	movlb	0	; () banked
 30181  0125CA  5160               	movf	___lmul@multiplier& (0+255),w,b
 30182  0125CC  0100               	movlb	0	; () banked
 30183  0125CE  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 30184  0125D0  0100               	movlb	0	; () banked
 30185  0125D2  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 30186  0125D4  0100               	movlb	0	; () banked
 30187  0125D6  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 30188  0125D8  A4D8               	btfss	status,2,c
 30189  0125DA  D7D7               	goto	l20165
 30190                           
 30191                           ; BSR set to: 0
 30192  0125DC  C068  F060         	movff	___lmul@product,?___lmul
 30193  0125E0  C069  F061         	movff	___lmul@product+1,?___lmul+1
 30194  0125E4  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 30195  0125E8  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 30196                           
 30197                           ; BSR set to: 0
 30198  0125EC  0012               	return		;funcret
 30199  0125EE                     __end_of___lmul:
 30200                           	opt stack 0
 30201                           tblptru	equ	0xFF8
 30202                           tblptrh	equ	0xFF7
 30203                           tblptrl	equ	0xFF6
 30204                           tablat	equ	0xFF5
 30205                           prodh	equ	0xFF4
 30206                           prodl	equ	0xFF3
 30207                           intcon	equ	0xFF2
 30208                           intcon2	equ	0xFF1
 30209                           intcon3	equ	0xFF0
 30210                           postinc0	equ	0xFEE
 30211                           wreg	equ	0xFE8
 30212                           indf1	equ	0xFE7
 30213                           postinc1	equ	0xFE6
 30214                           postdec1	equ	0xFE5
 30215                           plusw1	equ	0xFE3
 30216                           fsr1h	equ	0xFE2
 30217                           fsr1l	equ	0xFE1
 30218                           indf2	equ	0xFDF
 30219                           postinc2	equ	0xFDE
 30220                           postdec2	equ	0xFDD
 30221                           plusw2	equ	0xFDB
 30222                           fsr2h	equ	0xFDA
 30223                           fsr2l	equ	0xFD9
 30224                           status	equ	0xFD8
 30225                           
 30226 ;; *************** function _USBDeviceInit *****************
 30227 ;; Defined at:
 30228 ;;		line 277 in file "usb_device.c"
 30229 ;; Parameters:    Size  Location     Type
 30230 ;;		None
 30231 ;; Auto vars:     Size  Location     Type
 30232 ;;  i               1    8[BANK0 ] unsigned char 
 30233 ;; Return value:  Size  Location     Type
 30234 ;;                  1    wreg      void 
 30235 ;; Registers used:
 30236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30237 ;; Tracked objects:
 30238 ;;		On entry : 0/0
 30239 ;;		On exit  : 0/0
 30240 ;;		Unchanged: 0/0
 30241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30246 ;;Total ram usage:        1 bytes
 30247 ;; Hardware stack levels used:    1
 30248 ;; Hardware stack levels required when called:   11
 30249 ;; This function calls:
 30250 ;;		_memset
 30251 ;; This function is called by:
 30252 ;;		_main
 30253 ;; This function uses a non-reentrant model
 30254 ;;
 30255                           
 30256                           	psect	text131
 30257  00E1A2                     __ptext131:
 30258                           	opt stack 0
 30259  00E1A2                     _USBDeviceInit:
 30260                           	opt stack 19
 30261                           
 30262                           ;usb_device.c: 279: uint8_t i;
 30263                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 30264                           
 30265                           ; BSR set to: 0
 30266                           ;incstack = 0
 30267  00E1A2  98A0               	bcf	4000,4,c	;volatile
 30268                           
 30269                           ;usb_device.c: 285: ;
 30270                           ;usb_device.c: 288: {UEIR = 0;};
 30271  00E1A4  0E00               	movlw	0
 30272  00E1A6  6E63               	movwf	3939,c	;volatile
 30273                           
 30274                           ;usb_device.c: 291: {UIR = 0;};
 30275  00E1A8  0E00               	movlw	0
 30276  00E1AA  6E62               	movwf	3938,c	;volatile
 30277                           
 30278                           ;usb_device.c: 294: UEP0 = 0;
 30279  00E1AC  0E00               	movlw	0
 30280  00E1AE  010F               	movlb	15	; () banked
 30281  00E1B0  6F26               	movwf	38,b	;volatile
 30282                           
 30283                           ; BSR set to: 15
 30284                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 30285  00E1B2  0E27               	movlw	39
 30286  00E1B4  0100               	movlb	0	; () banked
 30287  00E1B6  6F60               	movwf	memset@p1& (0+255),b
 30288  00E1B8  0E0F               	movlw	15
 30289  00E1BA  0100               	movlb	0	; () banked
 30290  00E1BC  6F61               	movwf	(memset@p1+1)& (0+255),b
 30291  00E1BE  0E00               	movlw	0
 30292  00E1C0  0100               	movlb	0	; () banked
 30293  00E1C2  6F63               	movwf	(memset@c+1)& (0+255),b
 30294  00E1C4  0E00               	movlw	0
 30295  00E1C6  6F62               	movwf	memset@c& (0+255),b
 30296  00E1C8  0E00               	movlw	0
 30297  00E1CA  0100               	movlb	0	; () banked
 30298  00E1CC  6F65               	movwf	(memset@n+1)& (0+255),b
 30299  00E1CE  0E02               	movlw	2
 30300  00E1D0  6F64               	movwf	memset@n& (0+255),b
 30301  00E1D2  ECF4  F09C         	call	_memset	;wreg free
 30302                           
 30303                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 30304  00E1D6  0E16               	movlw	22
 30305  00E1D8  010F               	movlb	15	; () banked
 30306  00E1DA  6F39               	movwf	57,b	;volatile
 30307                           
 30308                           ; BSR set to: 15
 30309  00E1DC  0E9F               	movlw	159
 30310  00E1DE  010F               	movlb	15	; () banked
 30311  00E1E0  6F37               	movwf	55,b	;volatile
 30312                           
 30313                           ; BSR set to: 15
 30314  00E1E2  0E7B               	movlw	123
 30315  00E1E4  010F               	movlb	15	; () banked
 30316  00E1E6  6F36               	movwf	54,b	;volatile
 30317                           
 30318                           ; BSR set to: 15
 30319                           ;usb_device.c: 301: ;
 30320                           ;usb_device.c: 304: ;
 30321                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 30322  00E1E8  0E00               	movlw	0
 30323  00E1EA  0100               	movlb	0	; () banked
 30324  00E1EC  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30325  00E1EE                     l22001:
 30326                           
 30327                           ; BSR set to: 0
 30328  00E1EE  0E0B               	movlw	11
 30329  00E1F0  0100               	movlb	0	; () banked
 30330  00E1F2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30331  00E1F4  D001               	goto	l22005
 30332  00E1F6  D010               	goto	l148
 30333  00E1F8                     l22005:
 30334                           
 30335                           ; BSR set to: 0
 30336                           ;usb_device.c: 308: {
 30337                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 30338  00E1F8  0100               	movlb	0	; () banked
 30339  00E1FA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30340  00E1FC  0D04               	mullw	4
 30341  00E1FE  0E00               	movlw	0
 30342  00E200  24F3               	addwf	prodl,w,c
 30343  00E202  6ED9               	movwf	fsr2l,c
 30344  00E204  0E0D               	movlw	13
 30345  00E206  20F4               	addwfc	prodh,w,c
 30346  00E208  6EDA               	movwf	fsr2h,c
 30347  00E20A  6ADE               	clrf	postinc2,c
 30348  00E20C  6ADE               	clrf	postinc2,c
 30349  00E20E  6ADE               	clrf	postinc2,c
 30350  00E210  6ADD               	clrf	postdec2,c
 30351                           
 30352                           ; BSR set to: 0
 30353  00E212  0100               	movlb	0	; () banked
 30354  00E214  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30355  00E216  D7EB               	goto	l22001
 30356  00E218                     l148:
 30357                           
 30358                           ; BSR set to: 0
 30359                           ;usb_device.c: 310: }
 30360                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 30361  00E218  8C65               	bsf	3941,6,c	;volatile
 30362                           
 30363                           ; BSR set to: 0
 30364                           ;usb_device.c: 316: UADDR = 0x00;
 30365  00E21A  0E00               	movlw	0
 30366  00E21C  010F               	movlb	15	; () banked
 30367  00E21E  6F38               	movwf	56,b	;volatile
 30368                           
 30369                           ; BSR set to: 15
 30370                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 30371  00E220  9865               	bcf	3941,4,c	;volatile
 30372                           
 30373                           ; BSR set to: 15
 30374                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 30375  00E222  9C65               	bcf	3941,6,c	;volatile
 30376  00E224                     l22017:
 30377                           
 30378                           ;usb_device.c: 326: {
 30379                           ;usb_device.c: 327: (UIR &= 0xF7);
 30380  00E224  9662               	bcf	3938,3,c	;volatile
 30381                           
 30382                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 30383  00E226  0E00               	movlw	0
 30384  00E228  6E0D               	movwf	_inPipes+3,c	;volatile
 30385                           
 30386                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 30387  00E22A  0E00               	movlw	0
 30388  00E22C  6E04               	movwf	_outPipes+3,c	;volatile
 30389                           
 30390                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 30391  00E22E  0E00               	movlw	0
 30392  00E230  6E06               	movwf	_outPipes+5,c	;volatile
 30393  00E232  0E00               	movlw	0
 30394  00E234  6E05               	movwf	_outPipes+4,c	;volatile
 30395                           
 30396                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 30397  00E236  B662               	btfsc	3938,3,c	;volatile
 30398  00E238  D7F5               	goto	l22017
 30399                           
 30400                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 30401  00E23A  0E01               	movlw	1
 30402  00E23C  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 30403                           
 30404                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 30405  00E23E  0E01               	movlw	1
 30406  00E240  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 30407                           
 30408                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 30409  00E242  0E00               	movlw	0
 30410  00E244  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 30411                           
 30412                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 30413  00E246  0E00               	movlw	0
 30414  00E248  0101               	movlb	1	; () banked
 30415  00E24A  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 30416                           
 30417                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 30418  00E24C  0E00               	movlw	0
 30419  00E24E  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 30420                           
 30421                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 30422  00E250  0E00               	movlw	0
 30423  00E252  0100               	movlb	0	; () banked
 30424  00E254  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30425  00E256                     l22029:
 30426                           
 30427                           ; BSR set to: 0
 30428  00E256  0E02               	movlw	2
 30429  00E258  0100               	movlb	0	; () banked
 30430  00E25A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30431  00E25C  D001               	goto	l22033
 30432  00E25E  D033               	goto	l22039
 30433  00E260                     l22033:
 30434                           
 30435                           ; BSR set to: 0
 30436                           ;usb_device.c: 346: {
 30437                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 30438  00E260  0100               	movlb	0	; () banked
 30439  00E262  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30440  00E264  0D02               	mullw	2
 30441  00E266  0E10               	movlw	low _pBDTEntryIn
 30442  00E268  24F3               	addwf	prodl,w,c
 30443  00E26A  6ED9               	movwf	fsr2l,c
 30444  00E26C  0E00               	movlw	high _pBDTEntryIn
 30445  00E26E  20F4               	addwfc	prodh,w,c
 30446  00E270  6EDA               	movwf	fsr2h,c
 30447  00E272  0E00               	movlw	0
 30448  00E274  6EDE               	movwf	postinc2,c
 30449  00E276  0E00               	movlw	0
 30450  00E278  6EDD               	movwf	postdec2,c
 30451                           
 30452                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 30453  00E27A  0100               	movlb	0	; () banked
 30454  00E27C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30455  00E27E  0D02               	mullw	2
 30456  00E280  0ED3               	movlw	low _pBDTEntryOut
 30457  00E282  24F3               	addwf	prodl,w,c
 30458  00E284  6ED9               	movwf	fsr2l,c
 30459  00E286  0E01               	movlw	high _pBDTEntryOut
 30460  00E288  20F4               	addwfc	prodh,w,c
 30461  00E28A  6EDA               	movwf	fsr2h,c
 30462  00E28C  0E00               	movlw	0
 30463  00E28E  6EDE               	movwf	postinc2,c
 30464  00E290  0E00               	movlw	0
 30465  00E292  6EDD               	movwf	postdec2,c
 30466                           
 30467                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 30468  00E294  0100               	movlb	0	; () banked
 30469  00E296  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30470  00E298  0D01               	mullw	1
 30471  00E29A  0EE4               	movlw	low _ep_data_in
 30472  00E29C  24F3               	addwf	prodl,w,c
 30473  00E29E  6ED9               	movwf	fsr2l,c
 30474  00E2A0  0E01               	movlw	high _ep_data_in
 30475  00E2A2  20F4               	addwfc	prodh,w,c
 30476  00E2A4  6EDA               	movwf	fsr2h,c
 30477  00E2A6  0E00               	movlw	0
 30478  00E2A8  6EDF               	movwf	indf2,c
 30479                           
 30480                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 30481  00E2AA  0100               	movlb	0	; () banked
 30482  00E2AC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30483  00E2AE  0D01               	mullw	1
 30484  00E2B0  0EE1               	movlw	low _ep_data_out
 30485  00E2B2  24F3               	addwf	prodl,w,c
 30486  00E2B4  6ED9               	movwf	fsr2l,c
 30487  00E2B6  0E01               	movlw	high _ep_data_out
 30488  00E2B8  20F4               	addwfc	prodh,w,c
 30489  00E2BA  6EDA               	movwf	fsr2h,c
 30490  00E2BC  0E00               	movlw	0
 30491  00E2BE  6EDF               	movwf	indf2,c
 30492                           
 30493                           ; BSR set to: 0
 30494  00E2C0  0100               	movlb	0	; () banked
 30495  00E2C2  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30496  00E2C4  D7C8               	goto	l22029
 30497  00E2C6                     l22039:
 30498                           
 30499                           ; BSR set to: 0
 30500                           ;usb_device.c: 351: }
 30501                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 30502  00E2C6  0E08               	movlw	8
 30503  00E2C8  6E10               	movwf	_pBDTEntryIn,c
 30504  00E2CA  0E0D               	movlw	13
 30505  00E2CC  6E11               	movwf	_pBDTEntryIn+1,c
 30506                           
 30507                           ; BSR set to: 0
 30508                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 30509  00E2CE  0E16               	movlw	22
 30510  00E2D0  010F               	movlb	15	; () banked
 30511  00E2D2  6F26               	movwf	38,b	;volatile
 30512                           
 30513                           ; BSR set to: 15
 30514                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 30515  00E2D4  0E0D               	movlw	13
 30516  00E2D6  010D               	movlb	13	; () banked
 30517  00E2D8  6F03               	movwf	3,b	;volatile
 30518  00E2DA  0E30               	movlw	48
 30519  00E2DC  6F02               	movwf	2,b	;volatile
 30520                           
 30521                           ; BSR set to: 13
 30522                           ;usb_device.c: 359: BDT[0].CNT = 8;
 30523  00E2DE  0E08               	movlw	8
 30524  00E2E0  010D               	movlb	13	; () banked
 30525  00E2E2  6F01               	movwf	1,b	;volatile
 30526                           
 30527                           ; BSR set to: 13
 30528                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 30529  00E2E4  0E04               	movlw	4
 30530  00E2E6  010D               	movlb	13	; () banked
 30531  00E2E8  6F00               	movwf	0,b	;volatile
 30532                           
 30533                           ; BSR set to: 13
 30534                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 30535  00E2EA  010D               	movlb	13	; () banked
 30536  00E2EC  8F00               	bsf	0,7,b	;volatile
 30537                           
 30538                           ; BSR set to: 13
 30539                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 30540  00E2EE  0E00               	movlw	0
 30541  00E2F0  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 30542                           
 30543                           ; BSR set to: 13
 30544                           ;usb_device.c: 366: USB1msTickCount = 0;
 30545  00E2F2  0E00               	movlw	0
 30546  00E2F4  0101               	movlb	1	; () banked
 30547  00E2F6  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 30548  00E2F8  0E00               	movlw	0
 30549  00E2FA  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 30550  00E2FC  0E00               	movlw	0
 30551  00E2FE  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 30552  00E300  0E00               	movlw	0
 30553  00E302  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 30554                           
 30555                           ; BSR set to: 1
 30556                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 30557  00E304  0E00               	movlw	0
 30558  00E306  0101               	movlb	1	; () banked
 30559  00E308  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 30560                           
 30561                           ; BSR set to: 1
 30562                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 30563  00E30A  0E00               	movlw	0
 30564  00E30C  6E2B               	movwf	_USBDeviceState,c	;volatile
 30565                           
 30566                           ; BSR set to: 1
 30567  00E30E  0012               	return		;funcret
 30568  00E310                     __end_of_USBDeviceInit:
 30569                           	opt stack 0
 30570                           tblptru	equ	0xFF8
 30571                           tblptrh	equ	0xFF7
 30572                           tblptrl	equ	0xFF6
 30573                           tablat	equ	0xFF5
 30574                           prodh	equ	0xFF4
 30575                           prodl	equ	0xFF3
 30576                           intcon	equ	0xFF2
 30577                           intcon2	equ	0xFF1
 30578                           intcon3	equ	0xFF0
 30579                           postinc0	equ	0xFEE
 30580                           wreg	equ	0xFE8
 30581                           indf1	equ	0xFE7
 30582                           postinc1	equ	0xFE6
 30583                           postdec1	equ	0xFE5
 30584                           plusw1	equ	0xFE3
 30585                           fsr1h	equ	0xFE2
 30586                           fsr1l	equ	0xFE1
 30587                           indf2	equ	0xFDF
 30588                           postinc2	equ	0xFDE
 30589                           postdec2	equ	0xFDD
 30590                           plusw2	equ	0xFDB
 30591                           fsr2h	equ	0xFDA
 30592                           fsr2l	equ	0xFD9
 30593                           status	equ	0xFD8
 30594                           
 30595 ;; *************** function _memset *****************
 30596 ;; Defined at:
 30597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 30598 ;; Parameters:    Size  Location     Type
 30599 ;;  p1              2    0[BANK0 ] PTR void 
 30600 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30601 ;;  c               2    2[BANK0 ] int 
 30602 ;;  n               2    4[BANK0 ] unsigned int 
 30603 ;; Auto vars:     Size  Location     Type
 30604 ;;  p               2    6[BANK0 ] PTR unsigned char 
 30605 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30606 ;; Return value:  Size  Location     Type
 30607 ;;                  2    0[BANK0 ] PTR void 
 30608 ;; Registers used:
 30609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30610 ;; Tracked objects:
 30611 ;;		On entry : 0/0
 30612 ;;		On exit  : 0/0
 30613 ;;		Unchanged: 0/0
 30614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30615 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30618 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30619 ;;Total ram usage:        8 bytes
 30620 ;; Hardware stack levels used:    1
 30621 ;; Hardware stack levels required when called:   10
 30622 ;; This function calls:
 30623 ;;		Nothing
 30624 ;; This function is called by:
 30625 ;;		_USBDeviceInit
 30626 ;; This function uses a non-reentrant model
 30627 ;;
 30628                           
 30629                           	psect	text132
 30630  0139E8                     __ptext132:
 30631                           	opt stack 0
 30632  0139E8                     _memset:
 30633                           	opt stack 19
 30634                           
 30635                           ; BSR set to: 1
 30636                           ;incstack = 0
 30637  0139E8  C060  F066         	movff	memset@p1,memset@p
 30638  0139EC  C061  F067         	movff	memset@p1+1,memset@p+1
 30639  0139F0  D009               	goto	l20285
 30640  0139F2                     l20281:
 30641  0139F2  C066  FFD9         	movff	memset@p,fsr2l
 30642  0139F6  C067  FFDA         	movff	memset@p+1,fsr2h
 30643  0139FA  C062  FFDF         	movff	memset@c,indf2
 30644  0139FE  0100               	movlb	0	; () banked
 30645  013A00  4B66               	infsnz	memset@p& (0+255),f,b
 30646  013A02  2B67               	incf	(memset@p+1)& (0+255),f,b
 30647  013A04                     l20285:
 30648  013A04  0100               	movlb	0	; () banked
 30649  013A06  0764               	decf	memset@n& (0+255),f,b
 30650  013A08  A0D8               	btfss	status,0,c
 30651  013A0A  0765               	decf	(memset@n+1)& (0+255),f,b
 30652  013A0C  0100               	movlb	0	; () banked
 30653  013A0E  2964               	incf	memset@n& (0+255),w,b
 30654  013A10  E1F0               	bnz	l20281
 30655  013A12  0100               	movlb	0	; () banked
 30656  013A14  2965               	incf	(memset@n+1)& (0+255),w,b
 30657  013A16  B4D8               	btfsc	status,2,c
 30658  013A18  0012               	return	
 30659  013A1A  D7EB               	goto	l20281
 30660  013A1C                     __end_of_memset:
 30661                           	opt stack 0
 30662                           tblptru	equ	0xFF8
 30663                           tblptrh	equ	0xFF7
 30664                           tblptrl	equ	0xFF6
 30665                           tablat	equ	0xFF5
 30666                           prodh	equ	0xFF4
 30667                           prodl	equ	0xFF3
 30668                           intcon	equ	0xFF2
 30669                           intcon2	equ	0xFF1
 30670                           intcon3	equ	0xFF0
 30671                           postinc0	equ	0xFEE
 30672                           wreg	equ	0xFE8
 30673                           indf1	equ	0xFE7
 30674                           postinc1	equ	0xFE6
 30675                           postdec1	equ	0xFE5
 30676                           plusw1	equ	0xFE3
 30677                           fsr1h	equ	0xFE2
 30678                           fsr1l	equ	0xFE1
 30679                           indf2	equ	0xFDF
 30680                           postinc2	equ	0xFDE
 30681                           postdec2	equ	0xFDD
 30682                           plusw2	equ	0xFDB
 30683                           fsr2h	equ	0xFDA
 30684                           fsr2l	equ	0xFD9
 30685                           status	equ	0xFD8
 30686                           
 30687 ;; *************** function _USBDeviceAttach *****************
 30688 ;; Defined at:
 30689 ;;		line 1354 in file "usb_device.c"
 30690 ;; Parameters:    Size  Location     Type
 30691 ;;		None
 30692 ;; Auto vars:     Size  Location     Type
 30693 ;;		None
 30694 ;; Return value:  Size  Location     Type
 30695 ;;                  1    wreg      void 
 30696 ;; Registers used:
 30697 ;;		wreg, status,2
 30698 ;; Tracked objects:
 30699 ;;		On entry : 0/0
 30700 ;;		On exit  : 0/0
 30701 ;;		Unchanged: 0/0
 30702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30707 ;;Total ram usage:        0 bytes
 30708 ;; Hardware stack levels used:    1
 30709 ;; Hardware stack levels required when called:   10
 30710 ;; This function calls:
 30711 ;;		Nothing
 30712 ;; This function is called by:
 30713 ;;		_main
 30714 ;; This function uses a non-reentrant model
 30715 ;;
 30716                           
 30717                           	psect	text133
 30718  013802                     __ptext133:
 30719                           	opt stack 0
 30720  013802                     _USBDeviceAttach:
 30721                           	opt stack 20
 30722                           
 30723                           ;usb_device.c: 1358: {
 30724                           ;usb_device.c: 1359: if(1 == 1)
 30725                           
 30726                           ; BSR set to: 0
 30727                           ;incstack = 0
 30728  013802  502B               	movf	_USBDeviceState,w,c	;volatile
 30729  013804  A4D8               	btfss	status,2,c
 30730  013806  0012               	return	
 30731                           
 30732                           ;usb_device.c: 1360: {
 30733                           ;usb_device.c: 1362: UCON = 0;
 30734  013808  0E00               	movlw	0
 30735  01380A  6E65               	movwf	3941,c	;volatile
 30736                           
 30737                           ;usb_device.c: 1365: UIE = 0;
 30738  01380C  0E00               	movlw	0
 30739  01380E  010F               	movlb	15	; () banked
 30740  013810  6F36               	movwf	54,b	;volatile
 30741                           
 30742                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 30743  013812  0E16               	movlw	22
 30744  013814  010F               	movlb	15	; () banked
 30745  013816  6F39               	movwf	57,b	;volatile
 30746  013818  0E9F               	movlw	159
 30747  01381A  010F               	movlb	15	; () banked
 30748  01381C  6F37               	movwf	55,b	;volatile
 30749  01381E  0E7B               	movlw	123
 30750  013820  010F               	movlb	15	; () banked
 30751  013822  6F36               	movwf	54,b	;volatile
 30752                           
 30753                           ; BSR set to: 15
 30754                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 30755  013824  8ED0               	bsf	4048,7,c	;volatile
 30756                           
 30757                           ; BSR set to: 15
 30758  013826  88A2               	bsf	4002,4,c	;volatile
 30759                           
 30760                           ; BSR set to: 15
 30761  013828  88A0               	bsf	4000,4,c	;volatile
 30762                           
 30763                           ; BSR set to: 15
 30764  01382A  8EF2               	bsf	intcon,7,c	;volatile
 30765                           
 30766                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 30767  01382C  D001               	goto	l208
 30768  01382E                     l209:
 30769  01382E  8665               	bsf	3941,3,c	;volatile
 30770  013830                     l208:
 30771  013830  A665               	btfss	3941,3,c	;volatile
 30772  013832  D7FD               	goto	l209
 30773                           
 30774                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 30775  013834  0E01               	movlw	1
 30776  013836  6E2B               	movwf	_USBDeviceState,c	;volatile
 30777  013838  0012               	return	
 30778  01383A                     __end_of_USBDeviceAttach:
 30779                           	opt stack 0
 30780                           tblptru	equ	0xFF8
 30781                           tblptrh	equ	0xFF7
 30782                           tblptrl	equ	0xFF6
 30783                           tablat	equ	0xFF5
 30784                           prodh	equ	0xFF4
 30785                           prodl	equ	0xFF3
 30786                           intcon	equ	0xFF2
 30787                           intcon2	equ	0xFF1
 30788                           intcon3	equ	0xFF0
 30789                           postinc0	equ	0xFEE
 30790                           wreg	equ	0xFE8
 30791                           indf1	equ	0xFE7
 30792                           postinc1	equ	0xFE6
 30793                           postdec1	equ	0xFE5
 30794                           plusw1	equ	0xFE3
 30795                           fsr1h	equ	0xFE2
 30796                           fsr1l	equ	0xFE1
 30797                           indf2	equ	0xFDF
 30798                           postinc2	equ	0xFDE
 30799                           postdec2	equ	0xFDD
 30800                           plusw2	equ	0xFDB
 30801                           fsr2h	equ	0xFDA
 30802                           fsr2l	equ	0xFD9
 30803                           status	equ	0xFD8
 30804                           
 30805 ;; *************** function _SYSTEM_Initialize *****************
 30806 ;; Defined at:
 30807 ;;		line 78 in file "system.c"
 30808 ;; Parameters:    Size  Location     Type
 30809 ;;  state           1    wreg     enum E8228
 30810 ;; Auto vars:     Size  Location     Type
 30811 ;;  state           1    0[BANK0 ] enum E8228
 30812 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 30813 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 30814 ;; Return value:  Size  Location     Type
 30815 ;;                  1    wreg      void 
 30816 ;; Registers used:
 30817 ;;		wreg, status,2, status,0
 30818 ;; Tracked objects:
 30819 ;;		On entry : 0/0
 30820 ;;		On exit  : 0/0
 30821 ;;		Unchanged: 0/0
 30822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30824 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30826 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30827 ;;Total ram usage:        5 bytes
 30828 ;; Hardware stack levels used:    1
 30829 ;; Hardware stack levels required when called:   10
 30830 ;; This function calls:
 30831 ;;		Nothing
 30832 ;; This function is called by:
 30833 ;;		_main
 30834 ;; This function uses a non-reentrant model
 30835 ;;
 30836                           
 30837                           	psect	text134
 30838  012A42                     __ptext134:
 30839                           	opt stack 0
 30840  012A42                     _SYSTEM_Initialize:
 30841                           	opt stack 20
 30842                           
 30843                           ;incstack = 0
 30844                           ;SYSTEM_Initialize@state stored from wreg
 30845  012A42  0100               	movlb	0	; () banked
 30846  012A44  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 30847                           
 30848                           ;system.c: 80: switch(state)
 30849  012A46  D025               	goto	l22189
 30850  012A48                     l22177:
 30851                           
 30852                           ;system.c: 89: {
 30853                           ;system.c: 90: unsigned int pll_startup_counter = 600;
 30854  012A48  0E02               	movlw	2
 30855  012A4A  0100               	movlb	0	; () banked
 30856  012A4C  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 30857  012A4E  0E58               	movlw	88
 30858  012A50  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 30859                           
 30860                           ; BSR set to: 0
 30861                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 30862  012A52  8C9B               	bsf	3995,6,c	;volatile
 30863  012A54                     l22181:
 30864                           
 30865                           ; BSR set to: 0
 30866  012A54  0100               	movlb	0	; () banked
 30867  012A56  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 30868  012A58  A0D8               	btfss	status,0,c
 30869  012A5A  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 30870  012A5C  0100               	movlb	0	; () banked
 30871  012A5E  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 30872  012A60  E1F9               	bnz	l22181
 30873  012A62  0100               	movlb	0	; () banked
 30874  012A64  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 30875  012A66  B4D8               	btfsc	status,2,c
 30876  012A68  0012               	return	
 30877  012A6A  D7F4               	goto	l22181
 30878  012A6C                     l22183:
 30879                           
 30880                           ; BSR set to: 0
 30881                           ;system.c: 117: OSCCON = 0x70;
 30882  012A6C  0E70               	movlw	112
 30883  012A6E  6ED3               	movwf	4051,c	;volatile
 30884                           
 30885                           ;system.c: 123: {
 30886                           ;system.c: 124: unsigned int pll_startup_counter = 800;
 30887  012A70  0E03               	movlw	3
 30888  012A72  0100               	movlb	0	; () banked
 30889  012A74  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),b
 30890  012A76  0E20               	movlw	32
 30891  012A78  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),b
 30892  012A7A                     l22185:
 30893                           
 30894                           ; BSR set to: 0
 30895  012A7A  0100               	movlb	0	; () banked
 30896  012A7C  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),f,b
 30897  012A7E  A0D8               	btfss	status,0,c
 30898  012A80  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),f,b
 30899  012A82  0100               	movlb	0	; () banked
 30900  012A84  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),w,b
 30901  012A86  E1F9               	bnz	l22185
 30902  012A88  0100               	movlb	0	; () banked
 30903  012A8A  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),w,b
 30904  012A8C  B4D8               	btfsc	status,2,c
 30905  012A8E  0012               	return	
 30906  012A90  D7F4               	goto	l22185
 30907  012A92                     l22189:
 30908  012A92  0100               	movlb	0	; () banked
 30909  012A94  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 30910                           
 30911                           ; Switch size 1, requested type "space"
 30912                           ; Number of cases is 3, Range of values is 0 to 2
 30913                           ; switch strategies available:
 30914                           ; Name         Instructions Cycles
 30915                           ; simple_byte           10     6 (average)
 30916                           ;	Chosen strategy is simple_byte
 30917  012A96  0A00               	xorlw	0	; case 0
 30918  012A98  B4D8               	btfsc	status,2,c
 30919  012A9A  D7D6               	goto	l22177
 30920  012A9C  0A01               	xorlw	1	; case 1
 30921  012A9E  B4D8               	btfsc	status,2,c
 30922  012AA0  0012               	return	
 30923  012AA2  0A03               	xorlw	3	; case 2
 30924  012AA4  A4D8               	btfss	status,2,c
 30925  012AA6  0012               	return	
 30926  012AA8  D7E1               	goto	l22183
 30927  012AAA                     __end_of_SYSTEM_Initialize:
 30928                           	opt stack 0
 30929                           tblptru	equ	0xFF8
 30930                           tblptrh	equ	0xFF7
 30931                           tblptrl	equ	0xFF6
 30932                           tablat	equ	0xFF5
 30933                           prodh	equ	0xFF4
 30934                           prodl	equ	0xFF3
 30935                           intcon	equ	0xFF2
 30936                           intcon2	equ	0xFF1
 30937                           intcon3	equ	0xFF0
 30938                           postinc0	equ	0xFEE
 30939                           wreg	equ	0xFE8
 30940                           indf1	equ	0xFE7
 30941                           postinc1	equ	0xFE6
 30942                           postdec1	equ	0xFE5
 30943                           plusw1	equ	0xFE3
 30944                           fsr1h	equ	0xFE2
 30945                           fsr1l	equ	0xFE1
 30946                           indf2	equ	0xFDF
 30947                           postinc2	equ	0xFDE
 30948                           postdec2	equ	0xFDD
 30949                           plusw2	equ	0xFDB
 30950                           fsr2h	equ	0xFDA
 30951                           fsr2l	equ	0xFD9
 30952                           status	equ	0xFD8
 30953                           
 30954 ;; *************** function _APP_DeviceMSDTasks *****************
 30955 ;; Defined at:
 30956 ;;		line 110 in file "app_device_msd.c"
 30957 ;; Parameters:    Size  Location     Type
 30958 ;;		None
 30959 ;; Auto vars:     Size  Location     Type
 30960 ;;		None
 30961 ;; Return value:  Size  Location     Type
 30962 ;;                  1    wreg      void 
 30963 ;; Registers used:
 30964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30965 ;; Tracked objects:
 30966 ;;		On entry : 0/0
 30967 ;;		On exit  : 0/0
 30968 ;;		Unchanged: 0/0
 30969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30974 ;;Total ram usage:        0 bytes
 30975 ;; Hardware stack levels used:    1
 30976 ;; Hardware stack levels required when called:   21
 30977 ;; This function calls:
 30978 ;;		_MSDTasks
 30979 ;; This function is called by:
 30980 ;;		_main
 30981 ;; This function uses a non-reentrant model
 30982 ;;
 30983                           
 30984                           	psect	text135
 30985  014224                     __ptext135:
 30986                           	opt stack 0
 30987  014224                     _APP_DeviceMSDTasks:
 30988                           	opt stack 9
 30989                           
 30990                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 30991                           
 30992                           ; BSR set to: 0
 30993                           ;incstack = 0
 30994  014224  0E20               	movlw	32
 30995  014226  602B               	cpfslt	_USBDeviceState,c	;volatile
 30996  014228  D001               	goto	l1233
 30997  01422A  0012               	return	
 30998  01422C                     l1233:
 30999                           
 31000                           ;app_device_msd.c: 118: }
 31001                           ;app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 31002  01422C  B265               	btfsc	3941,1,c	;volatile
 31003  01422E  0012               	return	
 31004                           
 31005                           ;app_device_msd.c: 127: }
 31006                           ;app_device_msd.c: 129: MSDTasks();
 31007                           
 31008                           ;app_device_msd.c: 125: {
 31009                           ;app_device_msd.c: 126: return;
 31010  014230  EC1A  F065         	call	_MSDTasks	;wreg free
 31011  014234  0012               	return		;funcret
 31012  014236                     __end_of_APP_DeviceMSDTasks:
 31013                           	opt stack 0
 31014                           tblptru	equ	0xFF8
 31015                           tblptrh	equ	0xFF7
 31016                           tblptrl	equ	0xFF6
 31017                           tablat	equ	0xFF5
 31018                           prodh	equ	0xFF4
 31019                           prodl	equ	0xFF3
 31020                           intcon	equ	0xFF2
 31021                           intcon2	equ	0xFF1
 31022                           intcon3	equ	0xFF0
 31023                           postinc0	equ	0xFEE
 31024                           wreg	equ	0xFE8
 31025                           indf1	equ	0xFE7
 31026                           postinc1	equ	0xFE6
 31027                           postdec1	equ	0xFE5
 31028                           plusw1	equ	0xFE3
 31029                           fsr1h	equ	0xFE2
 31030                           fsr1l	equ	0xFE1
 31031                           indf2	equ	0xFDF
 31032                           postinc2	equ	0xFDE
 31033                           postdec2	equ	0xFDD
 31034                           plusw2	equ	0xFDB
 31035                           fsr2h	equ	0xFDA
 31036                           fsr2l	equ	0xFD9
 31037                           status	equ	0xFD8
 31038                           
 31039 ;; *************** function _MSDTasks *****************
 31040 ;; Defined at:
 31041 ;;		line 335 in file "usb_device_msd.c"
 31042 ;; Parameters:    Size  Location     Type
 31043 ;;		None
 31044 ;; Auto vars:     Size  Location     Type
 31045 ;;  i               1   81[BANK0 ] unsigned char 
 31046 ;; Return value:  Size  Location     Type
 31047 ;;                  1    wreg      unsigned char 
 31048 ;; Registers used:
 31049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31050 ;; Tracked objects:
 31051 ;;		On entry : 0/0
 31052 ;;		On exit  : 0/0
 31053 ;;		Unchanged: 0/0
 31054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31056 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31058 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31059 ;;Total ram usage:        6 bytes
 31060 ;; Hardware stack levels used:    1
 31061 ;; Hardware stack levels required when called:   20
 31062 ;; This function calls:
 31063 ;;		_MSDProcessCommand
 31064 ;;		_USBStallEndpoint
 31065 ;;		_USBTransferOnePacket
 31066 ;; This function is called by:
 31067 ;;		_APP_DeviceMSDTasks
 31068 ;; This function uses a non-reentrant model
 31069 ;;
 31070                           
 31071                           	psect	text136
 31072  00CA34                     __ptext136:
 31073                           	opt stack 0
 31074  00CA34                     _MSDTasks:
 31075                           	opt stack 9
 31076                           
 31077                           ;usb_device_msd.c: 337: uint8_t i;
 31078                           ;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURED_STATE)
 31079                           
 31080                           ;incstack = 0
 31081  00CA34  0E20               	movlw	32
 31082  00CA36  182B               	xorwf	_USBDeviceState,w,c	;volatile
 31083  00CA38  A4D8               	btfss	status,2,c
 31084  00CA3A  0012               	return	
 31085                           
 31086                           ;usb_device_msd.c: 345: }
 31087                           ;usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 31088                           
 31089                           ;usb_device_msd.c: 343: {
 31090                           ;usb_device_msd.c: 344: return 0x00;
 31091                           ;	Return value of _MSDTasks is never used
 31092  00CA3C  98A0               	bcf	4000,4,c	;volatile
 31093                           
 31094                           ;usb_device_msd.c: 357: switch(MSD_State)
 31095  00CA3E  D143               	goto	l20437
 31096  00CA40                     l20339:
 31097                           
 31098                           ;usb_device_msd.c: 360: {
 31099                           ;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 31100  00CA40  0100               	movlb	0	; () banked
 31101  00CA42  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31102  00CA44  0100               	movlb	0	; () banked
 31103  00CA46  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31104  00CA48  B4D8               	btfsc	status,2,c
 31105  00CA4A  D007               	goto	l20343
 31106                           
 31107                           ; BSR set to: 0
 31108  00CA4C  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31109  00CA50  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31110  00CA54  0100               	movlb	0	; () banked
 31111  00CA56  BEDF               	btfsc	indf2,7,c
 31112  00CA58  D145               	goto	l590
 31113  00CA5A                     l20343:
 31114                           
 31115                           ; BSR set to: 0
 31116                           ;usb_device_msd.c: 363: {
 31117                           ;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 31118  00CA5A  0E00               	movlw	0
 31119  00CA5C  0100               	movlb	0	; () banked
 31120  00CA5E  6FB1               	movwf	MSDTasks@i& (0+255),b
 31121  00CA60                     l20345:
 31122                           
 31123                           ; BSR set to: 0
 31124  00CA60  0E1E               	movlw	30
 31125  00CA62  0100               	movlb	0	; () banked
 31126  00CA64  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 31127  00CA66  D001               	goto	l20349
 31128  00CA68  D017               	goto	l20355
 31129  00CA6A                     l20349:
 31130                           
 31131                           ; BSR set to: 0
 31132                           ;usb_device_msd.c: 372: {
 31133                           ;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) = *((uint8_t*)&msd_cbw.dC
      +                          BWSignature + i);
 31134  00CA6A  0100               	movlb	0	; () banked
 31135  00CA6C  51B1               	movf	MSDTasks@i& (0+255),w,b
 31136  00CA6E  0D01               	mullw	1
 31137  00CA70  0E40               	movlw	64
 31138  00CA72  24F3               	addwf	prodl,w,c
 31139  00CA74  6ED9               	movwf	fsr2l,c
 31140  00CA76  0E0D               	movlw	13
 31141  00CA78  20F4               	addwfc	prodh,w,c
 31142  00CA7A  6EDA               	movwf	fsr2h,c
 31143  00CA7C  0100               	movlb	0	; () banked
 31144  00CA7E  51B1               	movf	MSDTasks@i& (0+255),w,b
 31145  00CA80  0D01               	mullw	1
 31146  00CA82  0E41               	movlw	low _gblCBW
 31147  00CA84  24F3               	addwf	prodl,w,c
 31148  00CA86  6EE1               	movwf	fsr1l,c
 31149  00CA88  0E02               	movlw	high _gblCBW
 31150  00CA8A  20F4               	addwfc	prodh,w,c
 31151  00CA8C  6EE2               	movwf	fsr1h,c
 31152  00CA8E  CFDF FFE7          	movff	indf2,indf1
 31153                           
 31154                           ; BSR set to: 0
 31155  00CA92  0100               	movlb	0	; () banked
 31156  00CA94  2BB1               	incf	MSDTasks@i& (0+255),f,b
 31157  00CA96  D7E4               	goto	l20345
 31158  00CA98                     l20355:
 31159                           
 31160                           ; BSR set to: 0
 31161                           ;usb_device_msd.c: 374: }
 31162                           ;usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHandle)->CNT) == 0x1f) && (g
      +                          blCBW.dCBWSignature == (uint32_t)0x43425355))
 31163  00CA98  0100               	movlb	0	; () banked
 31164  00CA9A  EE20 F001          	lfsr	2,1
 31165  00CA9E  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31166  00CAA0  26D9               	addwf	fsr2l,f,c
 31167  00CAA2  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31168  00CAA4  22DA               	addwfc	fsr2h,f,c
 31169  00CAA6  0E1F               	movlw	31
 31170  00CAA8  18DE               	xorwf	postinc2,w,c
 31171  00CAAA  A4D8               	btfss	status,2,c
 31172  00CAAC  D085               	goto	l20395
 31173                           
 31174                           ; BSR set to: 0
 31175  00CAAE  0E55               	movlw	85
 31176  00CAB0  0102               	movlb	2	; () banked
 31177  00CAB2  1941               	xorwf	_gblCBW& (0+255),w,b
 31178  00CAB4  E10C               	bnz	u19601
 31179  00CAB6  0E53               	movlw	83
 31180  00CAB8  0102               	movlb	2	; () banked
 31181  00CABA  1942               	xorwf	(_gblCBW+1)& (0+255),w,b
 31182  00CABC  E17D               	bnz	l20395
 31183  00CABE  0E42               	movlw	66
 31184  00CAC0  0102               	movlb	2	; () banked
 31185  00CAC2  1943               	xorwf	(_gblCBW+2)& (0+255),w,b
 31186  00CAC4  E179               	bnz	l20395
 31187  00CAC6  0E43               	movlw	67
 31188  00CAC8  0102               	movlb	2	; () banked
 31189  00CACA  1944               	xorwf	(_gblCBW+3)& (0+255),w,b
 31190  00CACC  A4D8               	btfss	status,2,c
 31191  00CACE                     u19601:
 31192  00CACE  D074               	goto	l20395
 31193                           
 31194                           ; BSR set to: 2
 31195                           ;usb_device_msd.c: 378: {
 31196                           ;usb_device_msd.c: 381: MSDCBWValid = 1;
 31197  00CAD0  0E01               	movlw	1
 31198  00CAD2  0101               	movlb	1	; () banked
 31199  00CAD4  6FF5               	movwf	_MSDCBWValid& (0+255),b
 31200                           
 31201                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u)
 31202                           ;usb_device_msd.c: 385: &&(gblCBW.bCBWCBLength <= 0x10)
 31203                           ;usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01)
 31204                           ;usb_device_msd.c: 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 31205  00CAD6  0102               	movlb	2	; () banked
 31206  00CAD8  514E               	movf	(_gblCBW+13)& (0+255),w,b
 31207  00CADA  A4D8               	btfss	status,2,c
 31208  00CADC  D060               	goto	l20393
 31209                           
 31210                           ; BSR set to: 2
 31211  00CADE  0E11               	movlw	17
 31212  00CAE0  0102               	movlb	2	; () banked
 31213  00CAE2  614F               	cpfslt	(_gblCBW+14)& (0+255),b
 31214  00CAE4  D05C               	goto	l20393
 31215                           
 31216                           ; BSR set to: 2
 31217  00CAE6  0102               	movlb	2	; () banked
 31218  00CAE8  514F               	movf	(_gblCBW+14)& (0+255),w,b
 31219  00CAEA  B4D8               	btfsc	status,2,c
 31220  00CAEC  D058               	goto	l20393
 31221                           
 31222                           ; BSR set to: 2
 31223  00CAEE  C24D  F0AC         	movff	_gblCBW+12,??_MSDTasks
 31224  00CAF2  0E3F               	movlw	63
 31225  00CAF4  0100               	movlb	0	; () banked
 31226  00CAF6  17AC               	andwf	??_MSDTasks& (0+255),f,b
 31227  00CAF8  A4D8               	btfss	status,2,c
 31228  00CAFA  D051               	goto	l20393
 31229                           
 31230                           ; BSR set to: 0
 31231                           ;usb_device_msd.c: 388: {
 31232                           ;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x53425355;
 31233  00CAFC  0E55               	movlw	85
 31234  00CAFE  010D               	movlb	13	; () banked
 31235  00CB00  6F80               	movwf	128,b	;volatile
 31236  00CB02  0E53               	movlw	83
 31237  00CB04  6F81               	movwf	129,b	;volatile
 31238  00CB06  0E42               	movlw	66
 31239  00CB08  6F82               	movwf	130,b	;volatile
 31240  00CB0A  0E53               	movlw	83
 31241  00CB0C  6F83               	movwf	131,b	;volatile
 31242                           
 31243                           ; BSR set to: 13
 31244                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 31245  00CB0E  C245  FD84         	movff	_gblCBW+4,3460	;volatile
 31246  00CB12  C246  FD85         	movff	_gblCBW+5,3461	;volatile
 31247  00CB16  C247  FD86         	movff	_gblCBW+6,3462	;volatile
 31248  00CB1A  C248  FD87         	movff	_gblCBW+7,3463	;volatile
 31249                           
 31250                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 31251  00CB1E  0E00               	movlw	0
 31252  00CB20  010D               	movlb	13	; () banked
 31253  00CB22  6F88               	movwf	136,b	;volatile
 31254  00CB24  0E00               	movlw	0
 31255  00CB26  6F89               	movwf	137,b	;volatile
 31256  00CB28  0E00               	movlw	0
 31257  00CB2A  6F8A               	movwf	138,b	;volatile
 31258  00CB2C  0E00               	movlw	0
 31259  00CB2E  6F8B               	movwf	139,b	;volatile
 31260                           
 31261                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 31262  00CB30  0E00               	movlw	0
 31263  00CB32  010D               	movlb	13	; () banked
 31264  00CB34  6F8C               	movwf	140,b	;volatile
 31265                           
 31266                           ; BSR set to: 13
 31267                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 31268  00CB36  0100               	movlb	0	; () banked
 31269  00CB38  69E6               	setf	_MSDCommandState& (0+255),b
 31270                           
 31271                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 31272  00CB3A  0E00               	movlw	0
 31273  00CB3C  0101               	movlb	1	; () banked
 31274  00CB3E  6FF9               	movwf	_MSDReadState& (0+255),b
 31275                           
 31276                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 31277  00CB40  0E00               	movlw	0
 31278  00CB42  6E1F               	movwf	_MSDWriteState,c
 31279                           
 31280                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 31281  00CB44  0E00               	movlw	0
 31282  00CB46  0101               	movlb	1	; () banked
 31283  00CB48  6FF8               	movwf	_MSDRetryAttempt& (0+255),b
 31284                           
 31285                           ; BSR set to: 1
 31286                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 31287  00CB4A  0E03               	movlw	3
 31288  00CB4C  0102               	movlb	2	; () banked
 31289  00CB4E  1950               	xorwf	(_gblCBW+15)& (0+255),w,b
 31290  00CB50  B4D8               	btfsc	status,2,c
 31291  00CB52  D00B               	goto	l20379
 31292                           
 31293                           ; BSR set to: 2
 31294                           ;usb_device_msd.c: 421: {
 31295                           ;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 31296  00CB54  0102               	movlb	2	; () banked
 31297  00CB56  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 31298  00CB58  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 31299  00CB5A  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 31300  00CB5C  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 31301                           
 31302                           ; BSR set to: 2
 31303                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 31304  00CB5E  0E00               	movlw	0
 31305  00CB60  0102               	movlb	2	; () banked
 31306  00CB62  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31307                           
 31308                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 31309  00CB64  0E00               	movlw	0
 31310  00CB66  0102               	movlb	2	; () banked
 31311  00CB68  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31312  00CB6A                     l20379:
 31313                           
 31314                           ; BSR set to: 2
 31315                           ;usb_device_msd.c: 425: }
 31316                           ;usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 31317  00CB6A  0102               	movlb	2	; () banked
 31318  00CB6C  AF4D               	btfss	(_gblCBW+12)& (0+255),7,b
 31319  00CB6E  D002               	goto	l20383
 31320                           
 31321                           ; BSR set to: 2
 31322                           ;usb_device_msd.c: 432: {
 31323                           ;usb_device_msd.c: 433: MSD_State = 0x01;
 31324  00CB70  0E01               	movlw	1
 31325  00CB72  D001               	goto	L20
 31326  00CB74                     l20383:
 31327                           
 31328                           ;usb_device_msd.c: 435: else
 31329                           ;usb_device_msd.c: 436: {
 31330                           ;usb_device_msd.c: 437: MSD_State = 0x02;
 31331  00CB74  0E02               	movlw	2
 31332  00CB76                     L20:
 31333  00CB76  0100               	movlb	0	; () banked
 31334  00CB78  6FE7               	movwf	_MSD_State& (0+255),b
 31335                           
 31336                           ; BSR set to: 0
 31337                           ;usb_device_msd.c: 438: }
 31338                           ;usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 31339                           
 31340                           ; BSR set to: 0
 31341  00CB7A  0102               	movlb	2	; () banked
 31342  00CB7C  5149               	movf	(_gblCBW+8)& (0+255),w,b
 31343  00CB7E  0102               	movlb	2	; () banked
 31344  00CB80  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 31345  00CB82  0102               	movlb	2	; () banked
 31346  00CB84  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 31347  00CB86  0102               	movlb	2	; () banked
 31348  00CB88  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 31349  00CB8A  B4D8               	btfsc	status,2,c
 31350  00CB8C  D002               	goto	l20389
 31351                           
 31352                           ; BSR set to: 2
 31353                           ;usb_device_msd.c: 443: {
 31354                           ;usb_device_msd.c: 444: MSDHostNoData = 0;
 31355  00CB8E  0E00               	movlw	0
 31356  00CB90  D001               	goto	L21
 31357  00CB92                     l20389:
 31358                           
 31359                           ;usb_device_msd.c: 446: else
 31360                           ;usb_device_msd.c: 447: {
 31361                           ;usb_device_msd.c: 448: MSDHostNoData = 1;
 31362  00CB92  0E01               	movlw	1
 31363  00CB94                     L21:
 31364  00CB94  0100               	movlb	0	; () banked
 31365  00CB96  6FE5               	movwf	_MSDHostNoData& (0+255),b
 31366                           
 31367                           ; BSR set to: 0
 31368                           ;usb_device_msd.c: 449: }
 31369                           ;usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 31370                           
 31371                           ; BSR set to: 0
 31372  00CB98  C250  F0E6         	movff	_gblCBW+15,_MSDCommandState
 31373                           
 31374                           ;usb_device_msd.c: 454: }
 31375  00CB9C  D0A3               	goto	l590
 31376  00CB9E                     l20393:
 31377                           
 31378                           ;usb_device_msd.c: 455: else
 31379                           ;usb_device_msd.c: 456: {
 31380                           ;usb_device_msd.c: 460: USBStallEndpoint(2u, 1);
 31381  00CB9E  0E01               	movlw	1
 31382  00CBA0  0100               	movlb	0	; () banked
 31383  00CBA2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31384  00CBA4  0E02               	movlw	2
 31385  00CBA6  ECC9  F076         	call	_USBStallEndpoint
 31386                           
 31387                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 31388  00CBAA  0E00               	movlw	0
 31389  00CBAC  0100               	movlb	0	; () banked
 31390  00CBAE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31391  00CBB0  0E02               	movlw	2
 31392  00CBB2  ECC9  F076         	call	_USBStallEndpoint
 31393                           
 31394                           ;usb_device_msd.c: 462: }
 31395                           ;usb_device_msd.c: 463: }
 31396  00CBB6  D096               	goto	l590
 31397  00CBB8                     l20395:
 31398                           
 31399                           ;usb_device_msd.c: 464: else
 31400                           ;usb_device_msd.c: 465: {
 31401                           ;usb_device_msd.c: 469: USBStallEndpoint(2u, 1);
 31402  00CBB8  0E01               	movlw	1
 31403  00CBBA  0100               	movlb	0	; () banked
 31404  00CBBC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31405  00CBBE  0E02               	movlw	2
 31406  00CBC0  ECC9  F076         	call	_USBStallEndpoint
 31407                           
 31408                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 31409  00CBC4  0E00               	movlw	0
 31410  00CBC6  0100               	movlb	0	; () banked
 31411  00CBC8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31412  00CBCA  0E02               	movlw	2
 31413  00CBCC  ECC9  F076         	call	_USBStallEndpoint
 31414                           
 31415                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 31416  00CBD0  0E00               	movlw	0
 31417  00CBD2  0101               	movlb	1	; () banked
 31418  00CBD4  6FF5               	movwf	_MSDCBWValid& (0+255),b
 31419                           
 31420                           ; BSR set to: 1
 31421                           ;usb_device_msd.c: 474: }
 31422                           ;usb_device_msd.c: 475: }
 31423                           ;usb_device_msd.c: 476: break;
 31424                           
 31425                           ; BSR set to: 1
 31426  00CBD6  D086               	goto	l590
 31427  00CBD8                     l20399:
 31428                           
 31429                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 31430  00CBD8  EC88  F071         	call	_MSDProcessCommand	;wreg free
 31431  00CBDC  0AFF               	xorlw	255
 31432  00CBDE  A4D8               	btfss	status,2,c
 31433  00CBE0  D081               	goto	l590
 31434  00CBE2  D016               	goto	l595
 31435  00CBE4                     l20403:
 31436                           
 31437                           ; BSR set to: 0
 31438                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 31439  00CBE4  EC88  F071         	call	_MSDProcessCommand	;wreg free
 31440  00CBE8  0AFF               	xorlw	255
 31441  00CBEA  A4D8               	btfss	status,2,c
 31442  00CBEC  D07B               	goto	l590
 31443                           
 31444                           ;usb_device_msd.c: 487: {
 31445                           ;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_csw.dCSWDataResidue!=0))
 31446  00CBEE  010D               	movlb	13	; () banked
 31447  00CBF0  518C               	movf	140,w,b	;volatile
 31448  00CBF2  A4D8               	btfss	status,2,c
 31449  00CBF4  D00D               	goto	l595
 31450                           
 31451                           ; BSR set to: 13
 31452  00CBF6  010D               	movlb	13	; () banked
 31453  00CBF8  5188               	movf	136,w,b	;volatile
 31454  00CBFA  010D               	movlb	13	; () banked
 31455  00CBFC  1189               	iorwf	137,w,b	;volatile
 31456  00CBFE  010D               	movlb	13	; () banked
 31457  00CC00  118A               	iorwf	138,w,b	;volatile
 31458  00CC02  010D               	movlb	13	; () banked
 31459  00CC04  118B               	iorwf	139,w,b	;volatile
 31460  00CC06  B4D8               	btfsc	status,2,c
 31461  00CC08  D003               	goto	l595
 31462                           
 31463                           ; BSR set to: 13
 31464                           ;usb_device_msd.c: 490: {
 31465                           ;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 31466  00CC0A  0E02               	movlw	2
 31467  00CC0C  010D               	movlb	13	; () banked
 31468  00CC0E  6F8C               	movwf	140,b	;volatile
 31469  00CC10                     l595:
 31470                           
 31471                           ; BSR set to: 13
 31472                           ;usb_device_msd.c: 492: }
 31473                           ;usb_device_msd.c: 493: MSD_State = 0x03;
 31474  00CC10  0E03               	movlw	3
 31475  00CC12  D049               	goto	L22
 31476  00CC14                     l20411:
 31477                           
 31478                           ; BSR set to: 0
 31479  00CC14  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2694
 31480  00CC18  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2694+1
 31481                           
 31482                           ; BSR set to: 0
 31483                           
 31484                           ; BSR set to: 0
 31485                           
 31486                           ; BSR set to: 0
 31487  00CC1C  0100               	movlb	0	; () banked
 31488  00CC1E  51AD               	movf	_MSDTasks$2694& (0+255),w,b
 31489  00CC20  0100               	movlb	0	; () banked
 31490  00CC22  11AE               	iorwf	(_MSDTasks$2694+1)& (0+255),w,b
 31491  00CC24  B4D8               	btfsc	status,2,c
 31492  00CC26  D00B               	goto	l20423
 31493                           
 31494                           ; BSR set to: 0
 31495  00CC28  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2695
 31496  00CC2C  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2695+1
 31497                           
 31498                           ; BSR set to: 0
 31499                           
 31500                           ; BSR set to: 0
 31501                           
 31502                           ; BSR set to: 0
 31503                           
 31504                           ; BSR set to: 0
 31505  00CC30  C0AF  FFD9         	movff	_MSDTasks$2695,fsr2l
 31506  00CC34  C0B0  FFDA         	movff	_MSDTasks$2695+1,fsr2h
 31507  00CC38  0100               	movlb	0	; () banked
 31508  00CC3A  BEDF               	btfsc	indf2,7,c
 31509  00CC3C  D053               	goto	l590
 31510  00CC3E                     l20423:
 31511                           
 31512                           ; BSR set to: 0
 31513                           ;usb_device_msd.c: 502: }
 31514                           ;usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_csw,0x
      +                          0d);
 31515  00CC3E  0E01               	movlw	1
 31516  00CC40  0100               	movlb	0	; () banked
 31517  00CC42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31518  00CC44  0E80               	movlw	128
 31519  00CC46  0100               	movlb	0	; () banked
 31520  00CC48  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31521  00CC4A  0E0D               	movlw	13
 31522  00CC4C  0100               	movlb	0	; () banked
 31523  00CC4E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31524  00CC50  0E0D               	movlw	13
 31525  00CC52  0100               	movlb	0	; () banked
 31526  00CC54  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31527  00CC56  0E02               	movlw	2
 31528  00CC58  EC6B  F077         	call	_USBTransferOnePacket
 31529  00CC5C  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31530  00CC60  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31531                           
 31532                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 31533  00CC64  0100               	movlb	0	; () banked
 31534  00CC66  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31535  00CC68  0100               	movlb	0	; () banked
 31536  00CC6A  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31537  00CC6C  B4D8               	btfsc	status,2,c
 31538  00CC6E  D007               	goto	l20429
 31539                           
 31540                           ; BSR set to: 0
 31541  00CC70  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31542  00CC74  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31543  00CC78  0100               	movlb	0	; () banked
 31544  00CC7A  BEDF               	btfsc	indf2,7,c
 31545  00CC7C  D013               	goto	l20431
 31546  00CC7E                     l20429:
 31547                           
 31548                           ; BSR set to: 0
 31549                           ;usb_device_msd.c: 509: {
 31550                           ;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 31551  00CC7E  0E00               	movlw	0
 31552  00CC80  0100               	movlb	0	; () banked
 31553  00CC82  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31554  00CC84  0E40               	movlw	64
 31555  00CC86  0100               	movlb	0	; () banked
 31556  00CC88  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31557  00CC8A  0E0D               	movlw	13
 31558  00CC8C  0100               	movlb	0	; () banked
 31559  00CC8E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31560  00CC90  0E40               	movlw	64
 31561  00CC92  0100               	movlb	0	; () banked
 31562  00CC94  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31563  00CC96  0E02               	movlw	2
 31564  00CC98  EC6B  F077         	call	_USBTransferOnePacket
 31565  00CC9C  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31566  00CCA0  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31567  00CCA4                     l20431:
 31568                           
 31569                           ;usb_device_msd.c: 511: }
 31570                           ;usb_device_msd.c: 512: MSD_State=0x00;
 31571  00CCA4  0E00               	movlw	0
 31572  00CCA6                     L22:
 31573  00CCA6  0100               	movlb	0	; () banked
 31574  00CCA8  6FE7               	movwf	_MSD_State& (0+255),b
 31575                           
 31576                           ;usb_device_msd.c: 513: break;
 31577  00CCAA  D01C               	goto	l590
 31578  00CCAC                     l20433:
 31579                           
 31580                           ; BSR set to: 0
 31581                           ;usb_device_msd.c: 518: MSD_State=0x00;
 31582  00CCAC  0E00               	movlw	0
 31583  00CCAE  0100               	movlb	0	; () banked
 31584  00CCB0  6FE7               	movwf	_MSD_State& (0+255),b
 31585                           
 31586                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 31587  00CCB2  0E02               	movlw	2
 31588  00CCB4  010D               	movlb	13	; () banked
 31589  00CCB6  6F8C               	movwf	140,b	;volatile
 31590                           
 31591                           ; BSR set to: 13
 31592                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 31593  00CCB8  0E00               	movlw	0
 31594  00CCBA  0100               	movlb	0	; () banked
 31595  00CCBC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31596  00CCBE  0E02               	movlw	2
 31597  00CCC0  ECC9  F076         	call	_USBStallEndpoint
 31598                           
 31599                           ;usb_device_msd.c: 521: }
 31600  00CCC4  D00F               	goto	l590
 31601  00CCC6                     l20437:
 31602  00CCC6  0100               	movlb	0	; () banked
 31603  00CCC8  51E7               	movf	_MSD_State& (0+255),w,b
 31604                           
 31605                           ; Switch size 1, requested type "space"
 31606                           ; Number of cases is 4, Range of values is 0 to 3
 31607                           ; switch strategies available:
 31608                           ; Name         Instructions Cycles
 31609                           ; simple_byte           13     7 (average)
 31610                           ;	Chosen strategy is simple_byte
 31611  00CCCA  0A00               	xorlw	0	; case 0
 31612  00CCCC  B4D8               	btfsc	status,2,c
 31613  00CCCE  D6B8               	goto	l20339
 31614  00CCD0  0A01               	xorlw	1	; case 1
 31615  00CCD2  B4D8               	btfsc	status,2,c
 31616  00CCD4  D781               	goto	l20399
 31617  00CCD6  0A03               	xorlw	3	; case 2
 31618  00CCD8  B4D8               	btfsc	status,2,c
 31619  00CCDA  D784               	goto	l20403
 31620  00CCDC  0A01               	xorlw	1	; case 3
 31621  00CCDE  B4D8               	btfsc	status,2,c
 31622  00CCE0  D799               	goto	l20411
 31623  00CCE2  D7E4               	goto	l20433
 31624  00CCE4                     l590:
 31625                           
 31626                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 31627  00CCE4  88A0               	bsf	4000,4,c	;volatile
 31628                           
 31629                           ;usb_device_msd.c: 526: return MSD_State;
 31630                           ;	Return value of _MSDTasks is never used
 31631  00CCE6  0012               	return		;funcret
 31632  00CCE8                     __end_of_MSDTasks:
 31633                           	opt stack 0
 31634                           tblptru	equ	0xFF8
 31635                           tblptrh	equ	0xFF7
 31636                           tblptrl	equ	0xFF6
 31637                           tablat	equ	0xFF5
 31638                           prodh	equ	0xFF4
 31639                           prodl	equ	0xFF3
 31640                           intcon	equ	0xFF2
 31641                           intcon2	equ	0xFF1
 31642                           intcon3	equ	0xFF0
 31643                           postinc0	equ	0xFEE
 31644                           wreg	equ	0xFE8
 31645                           indf1	equ	0xFE7
 31646                           postinc1	equ	0xFE6
 31647                           postdec1	equ	0xFE5
 31648                           plusw1	equ	0xFE3
 31649                           fsr1h	equ	0xFE2
 31650                           fsr1l	equ	0xFE1
 31651                           indf2	equ	0xFDF
 31652                           postinc2	equ	0xFDE
 31653                           postdec2	equ	0xFDD
 31654                           plusw2	equ	0xFDB
 31655                           fsr2h	equ	0xFDA
 31656                           fsr2l	equ	0xFD9
 31657                           status	equ	0xFD8
 31658                           
 31659 ;; *************** function _MSDProcessCommand *****************
 31660 ;; Defined at:
 31661 ;;		line 553 in file "usb_device_msd.c"
 31662 ;; Parameters:    Size  Location     Type
 31663 ;;		None
 31664 ;; Auto vars:     Size  Location     Type
 31665 ;;		None
 31666 ;; Return value:  Size  Location     Type
 31667 ;;                  1    wreg      unsigned char 
 31668 ;; Registers used:
 31669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31670 ;; Tracked objects:
 31671 ;;		On entry : 0/0
 31672 ;;		On exit  : 0/0
 31673 ;;		Unchanged: 0/0
 31674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31677 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31678 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31679 ;;Total ram usage:        5 bytes
 31680 ;; Hardware stack levels used:    1
 31681 ;; Hardware stack levels required when called:   19
 31682 ;; This function calls:
 31683 ;;		_ExternalFlash_MediaDetect
 31684 ;;		_ExternalFlash_MediaInitialize
 31685 ;;		_MSDProcessCommandMediaAbsent
 31686 ;;		_MSDProcessCommandMediaPresent
 31687 ;; This function is called by:
 31688 ;;		_MSDTasks
 31689 ;; This function uses a non-reentrant model
 31690 ;;
 31691                           
 31692                           	psect	text137
 31693  00E310                     __ptext137:
 31694                           	opt stack 0
 31695  00E310                     _MSDProcessCommand:
 31696                           	opt stack 9
 31697                           
 31698                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 31699                           
 31700                           ;incstack = 0
 31701  00E310  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 31702  00E314  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 31703  00E318  EE22  F0C4         	lfsr	2,_LUN+9
 31704  00E31C  D801               	call	u18488
 31705  00E31E  D00A               	goto	u18489
 31706  00E320                     u18488:
 31707  00E320  0005               	push	
 31708  00E322  6EFA               	movwf	pclath,c
 31709  00E324  50DE               	movf	postinc2,w,c
 31710  00E326  6EFD               	movwf	tosl,c
 31711  00E328  50DE               	movf	postinc2,w,c
 31712  00E32A  6EFE               	movwf	tosh,c
 31713  00E32C  50DE               	movf	postinc2,w,c
 31714  00E32E  6EFF               	movwf	tosu,c
 31715  00E330  50FA               	movf	pclath,w,c
 31716  00E332  0012               	return		;indir
 31717  00E334                     u18489:
 31718  00E334  0900               	iorlw	0
 31719  00E336  B4D8               	btfsc	status,2,c
 31720  00E338  D00C               	goto	l19415
 31721  00E33A  0102               	movlb	2	; () banked
 31722  00E33C  514E               	movf	(_gblCBW+13)& (0+255),w,b
 31723  00E33E  0D01               	mullw	1
 31724  00E340  0EF6               	movlw	low _SoftDetach
 31725  00E342  24F3               	addwf	prodl,w,c
 31726  00E344  6ED9               	movwf	fsr2l,c
 31727  00E346  0E01               	movlw	high _SoftDetach
 31728  00E348  20F4               	addwfc	prodh,w,c
 31729  00E34A  6EDA               	movwf	fsr2h,c
 31730  00E34C  04DE               	decf	postinc2,w,c
 31731  00E34E  A4D8               	btfss	status,2,c
 31732  00E350  D025               	goto	l19419
 31733  00E352                     l19415:
 31734                           
 31735                           ;usb_device_msd.c: 558: {
 31736                           ;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCBW.bCBWLUN);
 31737  00E352  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31738  00E356  0E01               	movlw	1
 31739  00E358  0100               	movlb	0	; () banked
 31740  00E35A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31741  00E35C  0E00               	movlw	0
 31742  00E35E  0100               	movlb	0	; () banked
 31743  00E360  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31744  00E362  0100               	movlb	0	; () banked
 31745  00E364  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31746  00E366  D004               	goto	u18514
 31747  00E368                     u18515:
 31748  00E368  90D8               	bcf	status,0,c
 31749  00E36A  0100               	movlb	0	; () banked
 31750  00E36C  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31751  00E36E  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31752  00E370                     u18514:
 31753  00E370  0100               	movlb	0	; () banked
 31754  00E372  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31755  00E374  D7F9               	goto	u18515
 31756  00E376  0100               	movlb	0	; () banked
 31757  00E378  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 31758  00E37A  0100               	movlb	0	; () banked
 31759  00E37C  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 31760  00E37E  0100               	movlb	0	; () banked
 31761  00E380  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 31762  00E382  0100               	movlb	0	; () banked
 31763  00E384  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 31764  00E386  0100               	movlb	0	; () banked
 31765  00E388  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 31766  00E38A  0102               	movlb	2	; () banked
 31767  00E38C  17B2               	andwf	_gblMediaPresent& (0+255),f,b
 31768  00E38E  0100               	movlb	0	; () banked
 31769  00E390  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 31770  00E392  0102               	movlb	2	; () banked
 31771  00E394  17B3               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 31772                           
 31773                           ; BSR set to: 2
 31774                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 31775  00E396  EC89  F095         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31776                           
 31777                           ;usb_device_msd.c: 563: }
 31778  00E39A  D067               	goto	l19439
 31779  00E39C                     l19419:
 31780                           
 31781                           ;usb_device_msd.c: 564: else
 31782                           ;usb_device_msd.c: 565: {
 31783                           ;usb_device_msd.c: 567: if((gblMediaPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 31784  00E39C  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31785  00E3A0  0E01               	movlw	1
 31786  00E3A2  0100               	movlb	0	; () banked
 31787  00E3A4  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31788  00E3A6  0E00               	movlw	0
 31789  00E3A8  0100               	movlb	0	; () banked
 31790  00E3AA  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31791  00E3AC  0100               	movlb	0	; () banked
 31792  00E3AE  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31793  00E3B0  D004               	goto	u18524
 31794  00E3B2                     u18525:
 31795  00E3B2  90D8               	bcf	status,0,c
 31796  00E3B4  0100               	movlb	0	; () banked
 31797  00E3B6  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31798  00E3B8  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31799  00E3BA                     u18524:
 31800  00E3BA  0100               	movlb	0	; () banked
 31801  00E3BC  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31802  00E3BE  D7F9               	goto	u18525
 31803  00E3C0  0102               	movlb	2	; () banked
 31804  00E3C2  51B2               	movf	_gblMediaPresent& (0+255),w,b
 31805  00E3C4  0100               	movlb	0	; () banked
 31806  00E3C6  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 31807  00E3C8  0102               	movlb	2	; () banked
 31808  00E3CA  51B3               	movf	(_gblMediaPresent+1)& (0+255),w,b
 31809  00E3CC  0100               	movlb	0	; () banked
 31810  00E3CE  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 31811  00E3D0  0100               	movlb	0	; () banked
 31812  00E3D2  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31813  00E3D4  0100               	movlb	0	; () banked
 31814  00E3D6  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 31815  00E3D8  A4D8               	btfss	status,2,c
 31816  00E3DA  D045               	goto	l19437
 31817                           
 31818                           ; BSR set to: 0
 31819                           ;usb_device_msd.c: 568: {
 31820                           ;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 31821  00E3DC  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 31822  00E3E0  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 31823  00E3E4  D801               	call	u18548
 31824  00E3E6  D00B               	goto	u18549
 31825  00E3E8                     u18548:
 31826  00E3E8  0005               	push	
 31827  00E3EA  6EFA               	movwf	pclath,c
 31828  00E3EC  0102               	movlb	2	; () banked
 31829  00E3EE  51BB               	movf	_LUN& (0+255),w,b
 31830  00E3F0  6EFD               	movwf	tosl,c
 31831  00E3F2  51BC               	movf	(_LUN+1)& (0+255),w,b
 31832  00E3F4  6EFE               	movwf	tosh,c
 31833  00E3F6  51BD               	movf	(_LUN+2)& (0+255),w,b
 31834  00E3F8  6EFF               	movwf	tosu,c
 31835  00E3FA  50FA               	movf	pclath,w,c
 31836  00E3FC  0012               	return		;indir
 31837  00E3FE                     u18549:
 31838  00E3FE  0100               	movlb	0	; () banked
 31839  00E400  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 31840  00E402  0100               	movlb	0	; () banked
 31841  00E404  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 31842  00E406  B4D8               	btfsc	status,2,c
 31843  00E408  D02B               	goto	l19435
 31844                           
 31845                           ; BSR set to: 0
 31846                           ;usb_device_msd.c: 571: {
 31847                           ;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 31848  00E40A  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31849  00E40E  0E01               	movlw	1
 31850  00E410  0100               	movlb	0	; () banked
 31851  00E412  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31852  00E414  0E00               	movlw	0
 31853  00E416  0100               	movlb	0	; () banked
 31854  00E418  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31855  00E41A  0100               	movlb	0	; () banked
 31856  00E41C  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31857  00E41E  D004               	goto	u18564
 31858  00E420                     u18565:
 31859  00E420  90D8               	bcf	status,0,c
 31860  00E422  0100               	movlb	0	; () banked
 31861  00E424  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31862  00E426  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31863  00E428                     u18564:
 31864  00E428  0100               	movlb	0	; () banked
 31865  00E42A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31866  00E42C  D7F9               	goto	u18565
 31867  00E42E  0100               	movlb	0	; () banked
 31868  00E430  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31869  00E432  0102               	movlb	2	; () banked
 31870  00E434  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 31871  00E436  0100               	movlb	0	; () banked
 31872  00E438  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 31873  00E43A  0102               	movlb	2	; () banked
 31874  00E43C  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 31875                           
 31876                           ; BSR set to: 2
 31877                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 31878  00E43E  0102               	movlb	2	; () banked
 31879  00E440  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31880  00E442  0BF0               	andlw	-16
 31881  00E444  0906               	iorlw	6
 31882  00E446  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31883                           
 31884                           ; BSR set to: 2
 31885                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 31886  00E448  0E28               	movlw	40
 31887  00E44A  0102               	movlb	2	; () banked
 31888  00E44C  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31889                           
 31890                           ; BSR set to: 2
 31891                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 31892  00E44E  0E00               	movlw	0
 31893  00E450  0102               	movlb	2	; () banked
 31894  00E452  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31895                           
 31896                           ; BSR set to: 2
 31897                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 31898  00E454  0E01               	movlw	1
 31899  00E456  010D               	movlb	13	; () banked
 31900  00E458  6F8C               	movwf	140,b	;volatile
 31901                           
 31902                           ; BSR set to: 13
 31903                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 31904  00E45A  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 31905                           
 31906                           ;usb_device_msd.c: 589: }
 31907  00E45E  D005               	goto	l19439
 31908  00E460                     l19435:
 31909                           
 31910                           ;usb_device_msd.c: 590: else
 31911                           ;usb_device_msd.c: 591: {
 31912                           ;usb_device_msd.c: 593: MSDProcessCommandMediaAbsent();
 31913  00E460  EC89  F095         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31914                           
 31915                           ;usb_device_msd.c: 594: }
 31916                           ;usb_device_msd.c: 595: }
 31917  00E464  D002               	goto	l19439
 31918  00E466                     l19437:
 31919                           
 31920                           ;usb_device_msd.c: 596: else
 31921                           ;usb_device_msd.c: 597: {
 31922                           ;usb_device_msd.c: 600: MSDProcessCommandMediaPresent();
 31923  00E466  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 31924  00E46A                     l19439:
 31925                           
 31926                           ;usb_device_msd.c: 601: }
 31927                           ;usb_device_msd.c: 602: }
 31928                           ;usb_device_msd.c: 604: return MSDCommandState;
 31929  00E46A  0100               	movlb	0	; () banked
 31930  00E46C  51E6               	movf	_MSDCommandState& (0+255),w,b
 31931  00E46E  0012               	return	
 31932  00E470                     __end_of_MSDProcessCommand:
 31933                           	opt stack 0
 31934                           tosu	equ	0xFFF
 31935                           tosh	equ	0xFFE
 31936                           tosl	equ	0xFFD
 31937                           pclath	equ	0xFFA
 31938                           tblptru	equ	0xFF8
 31939                           tblptrh	equ	0xFF7
 31940                           tblptrl	equ	0xFF6
 31941                           tablat	equ	0xFF5
 31942                           prodh	equ	0xFF4
 31943                           prodl	equ	0xFF3
 31944                           intcon	equ	0xFF2
 31945                           intcon2	equ	0xFF1
 31946                           intcon3	equ	0xFF0
 31947                           postinc0	equ	0xFEE
 31948                           wreg	equ	0xFE8
 31949                           indf1	equ	0xFE7
 31950                           postinc1	equ	0xFE6
 31951                           postdec1	equ	0xFE5
 31952                           plusw1	equ	0xFE3
 31953                           fsr1h	equ	0xFE2
 31954                           fsr1l	equ	0xFE1
 31955                           indf2	equ	0xFDF
 31956                           postinc2	equ	0xFDE
 31957                           postdec2	equ	0xFDD
 31958                           plusw2	equ	0xFDB
 31959                           fsr2h	equ	0xFDA
 31960                           fsr2l	equ	0xFD9
 31961                           status	equ	0xFD8
 31962                           
 31963 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 31964 ;; Defined at:
 31965 ;;		line 635 in file "usb_device_msd.c"
 31966 ;; Parameters:    Size  Location     Type
 31967 ;;		None
 31968 ;; Auto vars:     Size  Location     Type
 31969 ;;		None
 31970 ;; Return value:  Size  Location     Type
 31971 ;;                  1    wreg      void 
 31972 ;; Registers used:
 31973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31974 ;; Tracked objects:
 31975 ;;		On entry : 0/0
 31976 ;;		On exit  : 0/0
 31977 ;;		Unchanged: 0/0
 31978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31983 ;;Total ram usage:        0 bytes
 31984 ;; Hardware stack levels used:    1
 31985 ;; Hardware stack levels required when called:   18
 31986 ;; This function calls:
 31987 ;;		_MSDErrorHandler
 31988 ;;		_MSDProcessCommandMediaPresent
 31989 ;;		_ResetSenseData
 31990 ;; This function is called by:
 31991 ;;		_MSDProcessCommand
 31992 ;; This function uses a non-reentrant model
 31993 ;;
 31994                           
 31995                           	psect	text138
 31996  012B12                     __ptext138:
 31997                           	opt stack 0
 31998  012B12                     _MSDProcessCommandMediaAbsent:
 31999                           	opt stack 9
 32000                           
 32001                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 32002                           
 32003                           ; BSR set to: 0
 32004                           ;incstack = 0
 32005  012B12  D020               	goto	l19017
 32006  012B14                     l18995:
 32007                           
 32008                           ;usb_device_msd.c: 646: ResetSenseData();
 32009  012B14  ECC0  F08F         	call	_ResetSenseData	;wreg free
 32010                           
 32011                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 32012  012B18  0102               	movlb	2	; () banked
 32013  012B1A  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32014  012B1C  0BF0               	andlw	-16
 32015  012B1E  0902               	iorlw	2
 32016  012B20  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32017                           
 32018                           ; BSR set to: 2
 32019                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 32020  012B22  0E3A               	movlw	58
 32021  012B24  0102               	movlb	2	; () banked
 32022  012B26  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32023                           
 32024                           ; BSR set to: 2
 32025                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 32026  012B28  0E00               	movlw	0
 32027  012B2A  0102               	movlb	2	; () banked
 32028  012B2C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32029                           
 32030                           ; BSR set to: 2
 32031                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 32032  012B2E  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 32033                           
 32034                           ;usb_device_msd.c: 655: break;
 32035  012B32  0012               	return	
 32036  012B34                     l19005:
 32037                           
 32038                           ;usb_device_msd.c: 658: case 0x00:
 32039                           ;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 32040  012B34  0E01               	movlw	1
 32041  012B36  010D               	movlb	13	; () banked
 32042  012B38  6F8C               	movwf	140,b	;volatile
 32043                           
 32044                           ; BSR set to: 13
 32045                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 32046  012B3A  0100               	movlb	0	; () banked
 32047  012B3C  69E6               	setf	_MSDCommandState& (0+255),b
 32048                           
 32049                           ;usb_device_msd.c: 665: break;
 32050  012B3E  0012               	return	
 32051  012B40                     l19009:
 32052                           
 32053                           ; BSR set to: 0
 32054                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 32055  012B40  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 32056                           
 32057                           ;usb_device_msd.c: 671: break;
 32058  012B44  0012               	return	
 32059  012B46                     l19011:
 32060                           
 32061                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 32062  012B46  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 32063                           
 32064                           ;usb_device_msd.c: 677: break;
 32065  012B4A  0012               	return	
 32066  012B4C                     l19013:
 32067                           
 32068                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 32069  012B4C  0E7F               	movlw	127
 32070  012B4E  EC05  F078         	call	_MSDErrorHandler
 32071                           
 32072                           ;usb_device_msd.c: 685: }
 32073                           
 32074                           ;usb_device_msd.c: 684: break;
 32075  012B52  0012               	return	
 32076  012B54                     l19017:
 32077  012B54  0100               	movlb	0	; () banked
 32078  012B56  51E6               	movf	_MSDCommandState& (0+255),w,b
 32079                           
 32080                           ; Switch size 1, requested type "space"
 32081                           ; Number of cases is 5, Range of values is 0 to 253
 32082                           ; switch strategies available:
 32083                           ; Name         Instructions Cycles
 32084                           ; simple_byte           16     9 (average)
 32085                           ;	Chosen strategy is simple_byte
 32086  012B58  0A00               	xorlw	0	; case 0
 32087  012B5A  B4D8               	btfsc	status,2,c
 32088  012B5C  D7EB               	goto	l19005
 32089  012B5E  0A03               	xorlw	3	; case 3
 32090  012B60  B4D8               	btfsc	status,2,c
 32091  012B62  D7D8               	goto	l18995
 32092  012B64  0A11               	xorlw	17	; case 18
 32093  012B66  B4D8               	btfsc	status,2,c
 32094  012B68  D7EB               	goto	l19009
 32095  012B6A  0A0C               	xorlw	12	; case 30
 32096  012B6C  B4D8               	btfsc	status,2,c
 32097  012B6E  D7E2               	goto	l19005
 32098  012B70  0AE3               	xorlw	227	; case 253
 32099  012B72  B4D8               	btfsc	status,2,c
 32100  012B74  D7E8               	goto	l19011
 32101  012B76  D7EA               	goto	l19013
 32102  012B78                     __end_of_MSDProcessCommandMediaAbsent:
 32103                           	opt stack 0
 32104                           tosu	equ	0xFFF
 32105                           tosh	equ	0xFFE
 32106                           tosl	equ	0xFFD
 32107                           pclath	equ	0xFFA
 32108                           tblptru	equ	0xFF8
 32109                           tblptrh	equ	0xFF7
 32110                           tblptrl	equ	0xFF6
 32111                           tablat	equ	0xFF5
 32112                           prodh	equ	0xFF4
 32113                           prodl	equ	0xFF3
 32114                           intcon	equ	0xFF2
 32115                           intcon2	equ	0xFF1
 32116                           intcon3	equ	0xFF0
 32117                           postinc0	equ	0xFEE
 32118                           wreg	equ	0xFE8
 32119                           indf1	equ	0xFE7
 32120                           postinc1	equ	0xFE6
 32121                           postdec1	equ	0xFE5
 32122                           plusw1	equ	0xFE3
 32123                           fsr1h	equ	0xFE2
 32124                           fsr1l	equ	0xFE1
 32125                           indf2	equ	0xFDF
 32126                           postinc2	equ	0xFDE
 32127                           postdec2	equ	0xFDD
 32128                           plusw2	equ	0xFDB
 32129                           fsr2h	equ	0xFDA
 32130                           fsr2l	equ	0xFD9
 32131                           status	equ	0xFD8
 32132                           
 32133 ;; *************** function _MSDProcessCommandMediaPresent *****************
 32134 ;; Defined at:
 32135 ;;		line 712 in file "usb_device_msd.c"
 32136 ;; Parameters:    Size  Location     Type
 32137 ;;		None
 32138 ;; Auto vars:     Size  Location     Type
 32139 ;;  capacity        4   66[BANK0 ] struct .
 32140 ;;  sectorSize      4   62[BANK0 ] struct .
 32141 ;;  i               1   70[BANK0 ] unsigned char 
 32142 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 32143 ;; Return value:  Size  Location     Type
 32144 ;;                  1    wreg      void 
 32145 ;; Registers used:
 32146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32147 ;; Tracked objects:
 32148 ;;		On entry : 0/0
 32149 ;;		On exit  : 0/0
 32150 ;;		Unchanged: 0/0
 32151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32153 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32155 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32156 ;;Total ram usage:       14 bytes
 32157 ;; Hardware stack levels used:    1
 32158 ;; Hardware stack levels required when called:   17
 32159 ;; This function calls:
 32160 ;;		_ExternalFlash_CapacityRead
 32161 ;;		_ExternalFlash_SectorSizeRead
 32162 ;;		_ExternalFlash_WriteProtectStateGet
 32163 ;;		_MSDCheckForErrorCases
 32164 ;;		_MSDComputeDeviceInAndResidue
 32165 ;;		_MSDErrorHandler
 32166 ;;		_MSDReadHandler
 32167 ;;		_MSDWriteHandler
 32168 ;;		_ResetSenseData
 32169 ;;		_USBTransferOnePacket
 32170 ;;		_memcpy
 32171 ;; This function is called by:
 32172 ;;		_MSDProcessCommand
 32173 ;;		_MSDProcessCommandMediaAbsent
 32174 ;; This function uses a non-reentrant model
 32175 ;;
 32176                           
 32177                           	psect	text139
 32178  00A470                     __ptext139:
 32179                           	opt stack 0
 32180  00A470                     _MSDProcessCommandMediaPresent:
 32181                           	opt stack 10
 32182                           
 32183                           ;usb_device_msd.c: 714: uint8_t i;
 32184                           ;usb_device_msd.c: 715: uint8_t NumBytesInPacket;
 32185                           ;usb_device_msd.c: 718: switch(MSDCommandState)
 32186                           
 32187                           ;incstack = 0
 32188  00A470  D1F5               	goto	l18729
 32189  00A472                     l18583:
 32190                           
 32191                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 32192  00A472  EC4A  F06B         	call	_MSDReadHandler	;wreg free
 32193  00A476  0900               	iorlw	0
 32194  00A478  A4D8               	btfss	status,2,c
 32195  00A47A  0012               	return	
 32196                           
 32197                           ;usb_device_msd.c: 726: {
 32198                           ;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 32199  00A47C  0100               	movlb	0	; () banked
 32200  00A47E  69E6               	setf	_MSDCommandState& (0+255),b
 32201                           
 32202                           ; BSR set to: 0
 32203                           ;usb_device_msd.c: 728: }
 32204                           ;usb_device_msd.c: 729: break;
 32205  00A480  0012               	return	
 32206  00A482                     l18587:
 32207                           
 32208                           ; BSR set to: 0
 32209                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 32210  00A482  EC5F  F05F         	call	_MSDWriteHandler	;wreg free
 32211  00A486  0900               	iorlw	0
 32212  00A488  A4D8               	btfss	status,2,c
 32213  00A48A  0012               	return	
 32214                           
 32215                           ;usb_device_msd.c: 737: {
 32216                           ;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 32217  00A48C  0100               	movlb	0	; () banked
 32218  00A48E  69E6               	setf	_MSDCommandState& (0+255),b
 32219                           
 32220                           ; BSR set to: 0
 32221                           ;usb_device_msd.c: 739: }
 32222                           ;usb_device_msd.c: 740: break;
 32223  00A490  0012               	return	
 32224  00A492                     l18591:
 32225                           
 32226                           ; BSR set to: 0
 32227                           ;usb_device_msd.c: 743: {
 32228                           ;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 32229  00A492  0100               	movlb	0	; () banked
 32230  00A494  05E5               	decf	_MSDHostNoData& (0+255),w,b
 32231  00A496  A4D8               	btfss	status,2,c
 32232  00A498  D003               	goto	l641
 32233                           
 32234                           ; BSR set to: 0
 32235                           ;usb_device_msd.c: 749: {
 32236                           ;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 32237  00A49A  0100               	movlb	0	; () banked
 32238  00A49C  69E6               	setf	_MSDCommandState& (0+255),b
 32239                           
 32240                           ;usb_device_msd.c: 751: break;
 32241  00A49E  0012               	return	
 32242  00A4A0                     l641:
 32243                           
 32244                           ; BSR set to: 0
 32245                           ;usb_device_msd.c: 752: }
 32246                           ;usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3];
 32247  00A4A0  C253  F0DA         	movff	_gblCBW+18,_TransferLength+1
 32248                           
 32249                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 32250  00A4A4  C254  F0D9         	movff	_gblCBW+19,_TransferLength
 32251                           
 32252                           ; BSR set to: 0
 32253                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 32254  00A4A8  C0D9  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 32255  00A4AC  C0DA  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 32256  00A4B0  0100               	movlb	0	; () banked
 32257  00A4B2  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32258  00A4B4  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32259  00A4B6  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 32260  00A4BA  0900               	iorlw	0
 32261  00A4BC  A4D8               	btfss	status,2,c
 32262  00A4BE  0012               	return	
 32263                           
 32264                           ;usb_device_msd.c: 762: }
 32265                           ;usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(InquiryResponse));
 32266                           
 32267                           ;usb_device_msd.c: 760: {
 32268                           ;usb_device_msd.c: 761: break;
 32269  00A4C0  0E00               	movlw	0
 32270  00A4C2  0100               	movlb	0	; () banked
 32271  00A4C4  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32272  00A4C6  0E24               	movlw	36
 32273  00A4C8  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32274  00A4CA  ECFF  F084         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32275                           
 32276                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 32277  00A4CE  0E00               	movlw	0
 32278  00A4D0  0100               	movlb	0	; () banked
 32279  00A4D2  6F60               	movwf	memcpy@d1& (0+255),b
 32280  00A4D4  0E06               	movlw	6
 32281  00A4D6  0100               	movlb	0	; () banked
 32282  00A4D8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32283  00A4DA  0EBD               	movlw	low _inq_resp
 32284  00A4DC  0100               	movlb	0	; () banked
 32285  00A4DE  6F62               	movwf	memcpy@s1& (0+255),b
 32286  00A4E0  0E93               	movlw	high _inq_resp
 32287  00A4E2  0100               	movlb	0	; () banked
 32288  00A4E4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32289  00A4E6  0E00               	movlw	0
 32290  00A4E8  0100               	movlb	0	; () banked
 32291  00A4EA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32292  00A4EC  0E24               	movlw	36
 32293  00A4EE  6F64               	movwf	memcpy@n& (0+255),b
 32294  00A4F0  EC55  F095         	call	_memcpy	;wreg free
 32295                           
 32296                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 32297  00A4F4  0EFD               	movlw	253
 32298  00A4F6  0100               	movlb	0	; () banked
 32299  00A4F8  6FE6               	movwf	_MSDCommandState& (0+255),b
 32300                           
 32301                           ;usb_device_msd.c: 773: break;
 32302  00A4FA  0012               	return	
 32303  00A4FC                     l18605:
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;usb_device_msd.c: 776: {
 32307                           ;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;
 32308                           ;usb_device_msd.c: 780: USB_MSD_CAPACITY capacity;
 32309                           ;usb_device_msd.c: 783: capacity.Val = LUN[0].ReadCapacity(LUN[0].mediaParameters);
 32310  00A4FC  C2D0  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 32311  00A500  C2D1  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 32312  00A504  EE22  F0BE         	lfsr	2,_LUN+3
 32313  00A508  D801               	call	u17608
 32314  00A50A  D00A               	goto	u17609
 32315  00A50C                     u17608:
 32316  00A50C  0005               	push	
 32317  00A50E  6EFA               	movwf	pclath,c
 32318  00A510  50DE               	movf	postinc2,w,c
 32319  00A512  6EFD               	movwf	tosl,c
 32320  00A514  50DE               	movf	postinc2,w,c
 32321  00A516  6EFE               	movwf	tosh,c
 32322  00A518  50DE               	movf	postinc2,w,c
 32323  00A51A  6EFF               	movwf	tosu,c
 32324  00A51C  50FA               	movf	pclath,w,c
 32325  00A51E  0012               	return		;indir
 32326  00A520                     u17609:
 32327  00A520  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 32328  00A524  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 32329  00A528  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 32330  00A52C  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 32331                           
 32332                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 32333  00A530  C2D0  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 32334  00A534  C2D1  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 32335  00A538  EE22  F0C1         	lfsr	2,_LUN+6
 32336  00A53C  D801               	call	u17618
 32337  00A53E  D00A               	goto	u17619
 32338  00A540                     u17618:
 32339  00A540  0005               	push	
 32340  00A542  6EFA               	movwf	pclath,c
 32341  00A544  50DE               	movf	postinc2,w,c
 32342  00A546  6EFD               	movwf	tosl,c
 32343  00A548  50DE               	movf	postinc2,w,c
 32344  00A54A  6EFE               	movwf	tosh,c
 32345  00A54C  50DE               	movf	postinc2,w,c
 32346  00A54E  6EFF               	movwf	tosu,c
 32347  00A550  50FA               	movf	pclath,w,c
 32348  00A552  0012               	return		;indir
 32349  00A554                     u17619:
 32350  00A554  0100               	movlb	0	; () banked
 32351  00A556  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 32352  00A55A  0100               	movlb	0	; () banked
 32353  00A55C  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 32354  00A560  0100               	movlb	0	; () banked
 32355  00A562  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 32356  00A564  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 32357                           
 32358                           ; BSR set to: 0
 32359                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 32360  00A566  EE26 F000          	lfsr	2,1536
 32361  00A56A  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 32362                           
 32363                           ; BSR set to: 0
 32364                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 32365  00A56E  EE26 F001          	lfsr	2,1537	;volatile
 32366  00A572  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 32367                           
 32368                           ; BSR set to: 0
 32369                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 32370  00A576  EE26 F002          	lfsr	2,1538	;volatile
 32371  00A57A  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 32372                           
 32373                           ; BSR set to: 0
 32374                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 32375  00A57E  EE26 F003          	lfsr	2,1539	;volatile
 32376  00A582  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 32377                           
 32378                           ; BSR set to: 0
 32379                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 32380  00A586  EE26 F004          	lfsr	2,1540	;volatile
 32381  00A58A  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 32382                           
 32383                           ; BSR set to: 0
 32384                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 32385  00A58E  EE26 F005          	lfsr	2,1541	;volatile
 32386  00A592  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 32387                           
 32388                           ; BSR set to: 0
 32389                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 32390  00A596  EE26 F006          	lfsr	2,1542	;volatile
 32391  00A59A  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 32392                           
 32393                           ; BSR set to: 0
 32394                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 32395  00A59E  EE26 F007          	lfsr	2,1543	;volatile
 32396  00A5A2  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 32397                           
 32398                           ; BSR set to: 0
 32399                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 32400  00A5A6  0E00               	movlw	0
 32401  00A5A8  0100               	movlb	0	; () banked
 32402  00A5AA  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32403  00A5AC  0E08               	movlw	8
 32404  00A5AE  6FD9               	movwf	_TransferLength& (0+255),b
 32405                           
 32406                           ; BSR set to: 0
 32407                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 32408  00A5B0  0E00               	movlw	0
 32409  00A5B2  0100               	movlb	0	; () banked
 32410  00A5B4  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32411  00A5B6  0E08               	movlw	8
 32412  00A5B8  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32413  00A5BA  ECFF  F084         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32414                           
 32415                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 32416  00A5BE  0EFD               	movlw	253
 32417  00A5C0  0100               	movlb	0	; () banked
 32418  00A5C2  6FE6               	movwf	_MSDCommandState& (0+255),b
 32419                           
 32420                           ;usb_device_msd.c: 802: break;
 32421  00A5C4  0012               	return	
 32422  00A5C6                     l18629:
 32423                           
 32424                           ; BSR set to: 0
 32425                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32426  00A5C6  0100               	movlb	0	; () banked
 32427  00A5C8  05E5               	decf	_MSDHostNoData& (0+255),w,b
 32428  00A5CA  A4D8               	btfss	status,2,c
 32429  00A5CC  D003               	goto	l18633
 32430                           
 32431                           ; BSR set to: 0
 32432                           ;usb_device_msd.c: 812: {
 32433                           ;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32434  00A5CE  0100               	movlb	0	; () banked
 32435  00A5D0  69E6               	setf	_MSDCommandState& (0+255),b
 32436                           
 32437                           ;usb_device_msd.c: 814: break;
 32438  00A5D2  0012               	return	
 32439  00A5D4                     l18633:
 32440                           
 32441                           ; BSR set to: 0
 32442                           ;usb_device_msd.c: 815: }
 32443                           ;usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSenseResponse);
 32444  00A5D4  0E00               	movlw	0
 32445  00A5D6  0100               	movlb	0	; () banked
 32446  00A5D8  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32447  00A5DA  0E12               	movlw	18
 32448  00A5DC  6FD9               	movwf	_TransferLength& (0+255),b
 32449                           
 32450                           ; BSR set to: 0
 32451                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 32452  00A5DE  0E00               	movlw	0
 32453  00A5E0  0100               	movlb	0	; () banked
 32454  00A5E2  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32455  00A5E4  0E12               	movlw	18
 32456  00A5E6  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32457  00A5E8  ECFF  F084         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32458                           
 32459                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 32460  00A5EC  0E00               	movlw	0
 32461  00A5EE  0100               	movlb	0	; () banked
 32462  00A5F0  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32463  00A5F2                     l18639:
 32464                           
 32465                           ; BSR set to: 0
 32466  00A5F2  0E11               	movlw	17
 32467  00A5F4  0100               	movlb	0	; () banked
 32468  00A5F6  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 32469  00A5F8  D001               	goto	l18643
 32470  00A5FA  D017               	goto	l18649
 32471  00A5FC                     l18643:
 32472                           
 32473                           ; BSR set to: 0
 32474                           ;usb_device_msd.c: 823: {
 32475                           ;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 32476  00A5FC  0100               	movlb	0	; () banked
 32477  00A5FE  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32478  00A600  0D01               	mullw	1
 32479  00A602  0E60               	movlw	low _gblSenseData
 32480  00A604  24F3               	addwf	prodl,w,c
 32481  00A606  6ED9               	movwf	fsr2l,c
 32482  00A608  0E02               	movlw	high _gblSenseData
 32483  00A60A  20F4               	addwfc	prodh,w,c
 32484  00A60C  6EDA               	movwf	fsr2h,c
 32485  00A60E  0100               	movlb	0	; () banked
 32486  00A610  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32487  00A612  0D01               	mullw	1
 32488  00A614  0E00               	movlw	0
 32489  00A616  24F3               	addwf	prodl,w,c
 32490  00A618  6EE1               	movwf	fsr1l,c
 32491  00A61A  0E06               	movlw	6
 32492  00A61C  20F4               	addwfc	prodh,w,c
 32493  00A61E  6EE2               	movwf	fsr1h,c
 32494  00A620  CFDF FFE7          	movff	indf2,indf1
 32495                           
 32496                           ; BSR set to: 0
 32497  00A624  0100               	movlb	0	; () banked
 32498  00A626  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32499  00A628  D7E4               	goto	l18639
 32500  00A62A                     l18649:
 32501                           
 32502                           ; BSR set to: 0
 32503                           ;usb_device_msd.c: 825: }
 32504                           ;usb_device_msd.c: 826: MSDCommandState = 0xFD;
 32505  00A62A  0EFD               	movlw	253
 32506  00A62C  0100               	movlb	0	; () banked
 32507  00A62E  6FE6               	movwf	_MSDCommandState& (0+255),b
 32508                           
 32509                           ;usb_device_msd.c: 827: break;
 32510  00A630  0012               	return	
 32511  00A632                     l648:
 32512                           
 32513                           ; BSR set to: 0
 32514                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 32515  00A632  0E03               	movlw	3
 32516  00A634  CFE8 F600          	movff	wreg,1536
 32517                           
 32518                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 32519  00A638  0E00               	movlw	0
 32520  00A63A  CFE8 F601          	movff	wreg,1537	;volatile
 32521                           
 32522                           ; BSR set to: 0
 32523                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 32524  00A63E  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32525  00A642  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32526  00A646  EE22  F0CA         	lfsr	2,_LUN+15
 32527  00A64A  D801               	call	u17658
 32528  00A64C  D00A               	goto	u17659
 32529  00A64E                     u17658:
 32530  00A64E  0005               	push	
 32531  00A650  6EFA               	movwf	pclath,c
 32532  00A652  50DE               	movf	postinc2,w,c
 32533  00A654  6EFD               	movwf	tosl,c
 32534  00A656  50DE               	movf	postinc2,w,c
 32535  00A658  6EFE               	movwf	tosh,c
 32536  00A65A  50DE               	movf	postinc2,w,c
 32537  00A65C  6EFF               	movwf	tosu,c
 32538  00A65E  50FA               	movf	pclath,w,c
 32539  00A660  0012               	return		;indir
 32540  00A662                     u17659:
 32541  00A662  0900               	iorlw	0
 32542  00A664  A4D8               	btfss	status,2,c
 32543  00A666  D005               	goto	l18655
 32544  00A668  0E00               	movlw	0
 32545  00A66A  0100               	movlb	0	; () banked
 32546  00A66C  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 32547  00A66E  0E00               	movlw	0
 32548  00A670  D004               	goto	L23
 32549  00A672                     l18655:
 32550  00A672  0E00               	movlw	0
 32551  00A674  0100               	movlb	0	; () banked
 32552  00A676  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 32553  00A678  0E80               	movlw	128
 32554  00A67A                     L23:
 32555  00A67A  6F9B               	movwf	_MSDProcessCommandMediaPresent$2712& (0+255),b
 32556                           
 32557                           ; BSR set to: 0
 32558                           
 32559                           ; BSR set to: 0
 32560  00A67C  EE26 F002          	lfsr	2,1538	;volatile
 32561  00A680  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2712,indf2
 32562                           
 32563                           ; BSR set to: 0
 32564                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 32565  00A684  0E00               	movlw	0
 32566  00A686  CFE8 F603          	movff	wreg,1539	;volatile
 32567                           
 32568                           ; BSR set to: 0
 32569                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 32570  00A68A  0E00               	movlw	0
 32571  00A68C  0100               	movlb	0	; () banked
 32572  00A68E  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32573  00A690  0E04               	movlw	4
 32574  00A692  6FD9               	movwf	_TransferLength& (0+255),b
 32575                           
 32576                           ; BSR set to: 0
 32577                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 32578  00A694  0E00               	movlw	0
 32579  00A696  0100               	movlb	0	; () banked
 32580  00A698  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32581  00A69A  0E04               	movlw	4
 32582  00A69C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32583  00A69E  ECFF  F084         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32584                           
 32585                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 32586  00A6A2  0EFD               	movlw	253
 32587  00A6A4  0100               	movlb	0	; () banked
 32588  00A6A6  6FE6               	movwf	_MSDCommandState& (0+255),b
 32589                           
 32590                           ;usb_device_msd.c: 839: break;
 32591  00A6A8  0012               	return	
 32592  00A6AA                     l18667:
 32593                           
 32594                           ; BSR set to: 0
 32595                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 32596  00A6AA  0102               	movlb	2	; () banked
 32597  00A6AC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32598  00A6AE  0BF0               	andlw	-16
 32599  00A6B0  0905               	iorlw	5
 32600  00A6B2  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32601                           
 32602                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 32603  00A6B4  0E20               	movlw	32
 32604  00A6B6  0102               	movlb	2	; () banked
 32605  00A6B8  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32606                           
 32607                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 32608  00A6BA  0E00               	movlw	0
 32609  00A6BC  0102               	movlb	2	; () banked
 32610  00A6BE  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32611                           
 32612                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 32613  00A6C0  0E01               	movlw	1
 32614  00A6C2  010D               	movlb	13	; () banked
 32615  00A6C4  6F8C               	movwf	140,b	;volatile
 32616                           
 32617                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 32618  00A6C6  0E00               	movlw	0
 32619  00A6C8  010D               	movlb	13	; () banked
 32620  00A6CA  6F88               	movwf	136,b	;volatile
 32621  00A6CC  0E00               	movlw	0
 32622  00A6CE  6F89               	movwf	137,b	;volatile
 32623  00A6D0  0E00               	movlw	0
 32624  00A6D2  6F8A               	movwf	138,b	;volatile
 32625  00A6D4  0E00               	movlw	0
 32626  00A6D6  6F8B               	movwf	139,b	;volatile
 32627                           
 32628                           ; BSR set to: 13
 32629                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 32630  00A6D8  0100               	movlb	0	; () banked
 32631  00A6DA  69E6               	setf	_MSDCommandState& (0+255),b
 32632                           
 32633                           ;usb_device_msd.c: 848: break;
 32634  00A6DC  0012               	return	
 32635  00A6DE                     l18671:
 32636                           
 32637                           ; BSR set to: 0
 32638                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 32639  00A6DE  0E00               	movlw	0
 32640  00A6E0  0100               	movlb	0	; () banked
 32641  00A6E2  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 32642  00A6E4  0E00               	movlw	0
 32643  00A6E6  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 32644  00A6E8  0E00               	movlw	0
 32645  00A6EA  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32646  00A6EC  0E00               	movlw	0
 32647  00A6EE  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32648  00A6F0  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 32649  00A6F4  0900               	iorlw	0
 32650  00A6F6  A4D8               	btfss	status,2,c
 32651  00A6F8  0012               	return	
 32652                           
 32653                           ;usb_device_msd.c: 861: }
 32654                           ;usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (msd_csw.bCSWStatus==0x01)
      +                          )
 32655                           
 32656                           ;usb_device_msd.c: 859: {
 32657                           ;usb_device_msd.c: 860: break;
 32658  00A6FA  0102               	movlb	2	; () banked
 32659  00A6FC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32660  00A6FE  0B0F               	andlw	15
 32661  00A700  0A06               	xorlw	6
 32662  00A702  A4D8               	btfss	status,2,c
 32663  00A704  D007               	goto	l18681
 32664                           
 32665                           ; BSR set to: 2
 32666  00A706  010D               	movlb	13	; () banked
 32667  00A708  058C               	decf	140,w,b	;volatile
 32668  00A70A  A4D8               	btfss	status,2,c
 32669  00A70C  D003               	goto	l18681
 32670                           
 32671                           ; BSR set to: 13
 32672                           ;usb_device_msd.c: 868: {
 32673                           ;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 32674  00A70E  0100               	movlb	0	; () banked
 32675  00A710  69E6               	setf	_MSDCommandState& (0+255),b
 32676                           
 32677                           ;usb_device_msd.c: 870: }
 32678  00A712  0012               	return	
 32679  00A714                     l18681:
 32680                           
 32681                           ;usb_device_msd.c: 871: else
 32682                           ;usb_device_msd.c: 872: {
 32683                           ;usb_device_msd.c: 873: ResetSenseData();
 32684  00A714  ECC0  F08F         	call	_ResetSenseData	;wreg free
 32685                           
 32686                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 32687  00A718  0E00               	movlw	0
 32688  00A71A  010D               	movlb	13	; () banked
 32689  00A71C  6F88               	movwf	136,b	;volatile
 32690  00A71E  0E00               	movlw	0
 32691  00A720  6F89               	movwf	137,b	;volatile
 32692  00A722  0E00               	movlw	0
 32693  00A724  6F8A               	movwf	138,b	;volatile
 32694  00A726  0E00               	movlw	0
 32695  00A728  6F8B               	movwf	139,b	;volatile
 32696                           
 32697                           ; BSR set to: 13
 32698                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 32699  00A72A  0100               	movlb	0	; () banked
 32700  00A72C  69E6               	setf	_MSDCommandState& (0+255),b
 32701                           
 32702                           ; BSR set to: 0
 32703                           ;usb_device_msd.c: 876: }
 32704                           ;usb_device_msd.c: 877: break;
 32705  00A72E  0012               	return	
 32706  00A730                     l18687:
 32707                           
 32708                           ; BSR set to: 0
 32709                           ;usb_device_msd.c: 882: case 0x1b:
 32710                           ;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 32711  00A730  0E00               	movlw	0
 32712  00A732  010D               	movlb	13	; () banked
 32713  00A734  6F88               	movwf	136,b	;volatile
 32714  00A736  0E00               	movlw	0
 32715  00A738  6F89               	movwf	137,b	;volatile
 32716  00A73A  0E00               	movlw	0
 32717  00A73C  6F8A               	movwf	138,b	;volatile
 32718  00A73E  0E00               	movlw	0
 32719  00A740  6F8B               	movwf	139,b	;volatile
 32720                           
 32721                           ; BSR set to: 13
 32722                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 32723  00A742  0100               	movlb	0	; () banked
 32724  00A744  69E6               	setf	_MSDCommandState& (0+255),b
 32725                           
 32726                           ;usb_device_msd.c: 885: break;
 32727  00A746  0012               	return	
 32728  00A748                     l18691:
 32729                           
 32730                           ; BSR set to: 0
 32731                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 32732  00A748  0100               	movlb	0	; () banked
 32733  00A74A  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 32734  00A74C  0100               	movlb	0	; () banked
 32735  00A74E  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32736  00A750  B4D8               	btfsc	status,2,c
 32737  00A752  D007               	goto	l18695
 32738                           
 32739                           ; BSR set to: 0
 32740  00A754  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 32741  00A758  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32742  00A75C  0100               	movlb	0	; () banked
 32743  00A75E  BEDF               	btfsc	indf2,7,c
 32744  00A760  0012               	return	
 32745  00A762                     l18695:
 32746                           
 32747                           ; BSR set to: 0
 32748                           ;usb_device_msd.c: 893: {
 32749                           ;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u)
 32750  00A762  0102               	movlb	2	; () banked
 32751  00A764  514C               	movf	(_gblCBW+11)& (0+255),w,b
 32752  00A766  0102               	movlb	2	; () banked
 32753  00A768  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 32754  00A76A  0102               	movlb	2	; () banked
 32755  00A76C  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 32756  00A76E  E105               	bnz	u17720
 32757  00A770  0E40               	movlw	64
 32758  00A772  0102               	movlb	2	; () banked
 32759  00A774  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 32760  00A776  A0D8               	btfss	status,0,c
 32761  00A778  D00B               	goto	l664
 32762  00A77A                     u17720:
 32763                           
 32764                           ; BSR set to: 2
 32765                           ;usb_device_msd.c: 897: {
 32766                           ;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 32767  00A77A  0E40               	movlw	64
 32768  00A77C  0100               	movlb	0	; () banked
 32769  00A77E  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 32770                           
 32771                           ; BSR set to: 0
 32772                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 32773  00A780  0E40               	movlw	64
 32774  00A782  0102               	movlb	2	; () banked
 32775  00A784  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 32776  00A786  0E00               	movlw	0
 32777  00A788  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 32778  00A78A  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 32779  00A78C  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 32780                           
 32781                           ;usb_device_msd.c: 900: }
 32782  00A78E  D00B               	goto	l18703
 32783  00A790                     l664:
 32784                           
 32785                           ; BSR set to: 2
 32786                           ;usb_device_msd.c: 901: else
 32787                           ;usb_device_msd.c: 902: {
 32788                           ;usb_device_msd.c: 905: NumBytesInPacket = gblCBW.dCBWDataTransferLength;
 32789  00A790  C249  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 32790                           
 32791                           ; BSR set to: 2
 32792                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 32793  00A794  0E00               	movlw	0
 32794  00A796  0102               	movlb	2	; () banked
 32795  00A798  6F49               	movwf	(_gblCBW+8)& (0+255),b
 32796  00A79A  0E00               	movlw	0
 32797  00A79C  6F4A               	movwf	(_gblCBW+9)& (0+255),b
 32798  00A79E  0E00               	movlw	0
 32799  00A7A0  6F4B               	movwf	(_gblCBW+10)& (0+255),b
 32800  00A7A2  0E00               	movlw	0
 32801  00A7A4  6F4C               	movwf	(_gblCBW+11)& (0+255),b
 32802  00A7A6                     l18703:
 32803                           
 32804                           ; BSR set to: 2
 32805                           ;usb_device_msd.c: 907: }
 32806                           ;usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPacket)
 32807  00A7A6  0100               	movlb	0	; () banked
 32808  00A7A8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32809  00A7AA  0100               	movlb	0	; () banked
 32810  00A7AC  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 32811  00A7AE  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 32812  00A7B0  0100               	movlb	0	; () banked
 32813  00A7B2  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 32814  00A7B4  0100               	movlb	0	; () banked
 32815  00A7B6  5DD9               	subwf	_TransferLength& (0+255),w,b
 32816  00A7B8  0100               	movlb	0	; () banked
 32817  00A7BA  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 32818  00A7BC  0100               	movlb	0	; () banked
 32819  00A7BE  59DA               	subwfb	(_TransferLength+1)& (0+255),w,b
 32820  00A7C0  A0D8               	btfss	status,0,c
 32821  00A7C2  D007               	goto	l18707
 32822                           
 32823                           ; BSR set to: 0
 32824                           ;usb_device_msd.c: 915: {
 32825                           ;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 32826  00A7C4  0100               	movlb	0	; () banked
 32827  00A7C6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32828  00A7C8  0100               	movlb	0	; () banked
 32829  00A7CA  5FD9               	subwf	_TransferLength& (0+255),f,b
 32830  00A7CC  0E00               	movlw	0
 32831  00A7CE  5BDA               	subwfb	(_TransferLength+1)& (0+255),f,b
 32832                           
 32833                           ;usb_device_msd.c: 918: }
 32834  00A7D0  D022               	goto	l18719
 32835  00A7D2                     l18707:
 32836                           
 32837                           ; BSR set to: 0
 32838                           ;usb_device_msd.c: 919: else
 32839                           ;usb_device_msd.c: 920: {
 32840                           ;usb_device_msd.c: 927: for(i = 0; i < NumBytesInPacket; i++)
 32841  00A7D2  0E00               	movlw	0
 32842  00A7D4  0100               	movlb	0	; () banked
 32843  00A7D6  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32844  00A7D8  D018               	goto	l18717
 32845  00A7DA                     l18709:
 32846                           
 32847                           ; BSR set to: 0
 32848                           ;usb_device_msd.c: 928: {
 32849                           ;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 32850  00A7DA  0100               	movlb	0	; () banked
 32851  00A7DC  51D9               	movf	_TransferLength& (0+255),w,b
 32852  00A7DE  0100               	movlb	0	; () banked
 32853  00A7E0  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 32854  00A7E2  B4D8               	btfsc	status,2,c
 32855  00A7E4  D005               	goto	l18713
 32856                           
 32857                           ; BSR set to: 0
 32858                           ;usb_device_msd.c: 930: {
 32859                           ;usb_device_msd.c: 931: TransferLength.Val--;
 32860  00A7E6  0100               	movlb	0	; () banked
 32861  00A7E8  07D9               	decf	_TransferLength& (0+255),f,b
 32862  00A7EA  A0D8               	btfss	status,0,c
 32863  00A7EC  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 32864                           
 32865                           ;usb_device_msd.c: 932: }
 32866  00A7EE  D00B               	goto	l18715
 32867  00A7F0                     l18713:
 32868                           
 32869                           ; BSR set to: 0
 32870                           ;usb_device_msd.c: 933: else
 32871                           ;usb_device_msd.c: 934: {
 32872                           ;usb_device_msd.c: 935: msd_buffer[i] = 0x00;
 32873  00A7F0  0100               	movlb	0	; () banked
 32874  00A7F2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32875  00A7F4  0D01               	mullw	1
 32876  00A7F6  0E00               	movlw	0
 32877  00A7F8  24F3               	addwf	prodl,w,c
 32878  00A7FA  6ED9               	movwf	fsr2l,c
 32879  00A7FC  0E06               	movlw	6
 32880  00A7FE  20F4               	addwfc	prodh,w,c
 32881  00A800  6EDA               	movwf	fsr2h,c
 32882  00A802  0E00               	movlw	0
 32883  00A804  6EDF               	movwf	indf2,c
 32884  00A806                     l18715:
 32885                           
 32886                           ; BSR set to: 0
 32887  00A806  0100               	movlb	0	; () banked
 32888  00A808  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32889  00A80A                     l18717:
 32890                           
 32891                           ; BSR set to: 0
 32892  00A80A  0100               	movlb	0	; () banked
 32893  00A80C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32894  00A80E  0100               	movlb	0	; () banked
 32895  00A810  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32896  00A812  A0D8               	btfss	status,0,c
 32897  00A814  D7E2               	goto	l18709
 32898  00A816                     l18719:
 32899                           
 32900                           ; BSR set to: 0
 32901                           ;usb_device_msd.c: 936: }
 32902                           ;usb_device_msd.c: 937: }
 32903                           ;usb_device_msd.c: 938: }
 32904                           ;usb_device_msd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer
      +                          [0],NumBytesInPacket);
 32905  00A816  0E01               	movlw	1
 32906  00A818  0100               	movlb	0	; () banked
 32907  00A81A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32908  00A81C  0E00               	movlw	0
 32909  00A81E  0100               	movlb	0	; () banked
 32910  00A820  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32911  00A822  0E06               	movlw	6
 32912  00A824  0100               	movlb	0	; () banked
 32913  00A826  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32914  00A828  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 32915  00A82C  0E02               	movlw	2
 32916  00A82E  EC6B  F077         	call	_USBTransferOnePacket
 32917  00A832  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32918  00A836  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32919                           
 32920                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 32921  00A83A  0102               	movlb	2	; () banked
 32922  00A83C  5149               	movf	(_gblCBW+8)& (0+255),w,b
 32923  00A83E  0102               	movlb	2	; () banked
 32924  00A840  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 32925  00A842  0102               	movlb	2	; () banked
 32926  00A844  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 32927  00A846  0102               	movlb	2	; () banked
 32928  00A848  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 32929  00A84A  A4D8               	btfss	status,2,c
 32930  00A84C  0012               	return	
 32931                           
 32932                           ; BSR set to: 2
 32933                           ;usb_device_msd.c: 945: {
 32934                           ;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 32935  00A84E  0100               	movlb	0	; () banked
 32936  00A850  69E6               	setf	_MSDCommandState& (0+255),b
 32937                           
 32938                           ; BSR set to: 0
 32939                           ;usb_device_msd.c: 950: }
 32940                           ;usb_device_msd.c: 951: }
 32941                           ;usb_device_msd.c: 952: break;
 32942                           
 32943                           ; BSR set to: 0
 32944                           
 32945                           ;usb_device_msd.c: 949: break;
 32946  00A852  0012               	return	
 32947  00A854                     l18725:
 32948                           
 32949                           ; BSR set to: 0
 32950                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 32951  00A854  0E7F               	movlw	127
 32952  00A856  EC05  F078         	call	_MSDErrorHandler
 32953                           
 32954                           ;usb_device_msd.c: 960: }
 32955                           
 32956                           ;usb_device_msd.c: 959: break;
 32957  00A85A  0012               	return	
 32958  00A85C                     l18729:
 32959  00A85C  0100               	movlb	0	; () banked
 32960  00A85E  51E6               	movf	_MSDCommandState& (0+255),w,b
 32961                           
 32962                           ; Switch size 1, requested type "space"
 32963                           ; Number of cases is 12, Range of values is 0 to 254
 32964                           ; switch strategies available:
 32965                           ; Name         Instructions Cycles
 32966                           ; simple_byte           37    19 (average)
 32967                           ;	Chosen strategy is simple_byte
 32968  00A860  0A00               	xorlw	0	; case 0
 32969  00A862  B4D8               	btfsc	status,2,c
 32970  00A864  D73C               	goto	l18671
 32971  00A866  0A03               	xorlw	3	; case 3
 32972  00A868  B4D8               	btfsc	status,2,c
 32973  00A86A  D6AD               	goto	l18629
 32974  00A86C  0A11               	xorlw	17	; case 18
 32975  00A86E  B4D8               	btfsc	status,2,c
 32976  00A870  D610               	goto	l18591
 32977  00A872  0A08               	xorlw	8	; case 26
 32978  00A874  B4D8               	btfsc	status,2,c
 32979  00A876  D6DD               	goto	l648
 32980  00A878  0A01               	xorlw	1	; case 27
 32981  00A87A  B4D8               	btfsc	status,2,c
 32982  00A87C  D759               	goto	l18687
 32983  00A87E  0A05               	xorlw	5	; case 30
 32984  00A880  B4D8               	btfsc	status,2,c
 32985  00A882  D713               	goto	l18667
 32986  00A884  0A3B               	xorlw	59	; case 37
 32987  00A886  B4D8               	btfsc	status,2,c
 32988  00A888  D639               	goto	l18605
 32989  00A88A  0A0D               	xorlw	13	; case 40
 32990  00A88C  B4D8               	btfsc	status,2,c
 32991  00A88E  D5F1               	goto	l18583
 32992  00A890  0A02               	xorlw	2	; case 42
 32993  00A892  B4D8               	btfsc	status,2,c
 32994  00A894  D5F6               	goto	l18587
 32995  00A896  0A05               	xorlw	5	; case 47
 32996  00A898  B4D8               	btfsc	status,2,c
 32997  00A89A  D74A               	goto	l18687
 32998  00A89C  0AD2               	xorlw	210	; case 253
 32999  00A89E  B4D8               	btfsc	status,2,c
 33000  00A8A0  D753               	goto	l18691
 33001  00A8A2  0A03               	xorlw	3	; case 254
 33002  00A8A4  D7D7               	goto	l18725
 33003  00A8A6                     __end_of_MSDProcessCommandMediaPresent:
 33004                           	opt stack 0
 33005                           tosu	equ	0xFFF
 33006                           tosh	equ	0xFFE
 33007                           tosl	equ	0xFFD
 33008                           pclath	equ	0xFFA
 33009                           tblptru	equ	0xFF8
 33010                           tblptrh	equ	0xFF7
 33011                           tblptrl	equ	0xFF6
 33012                           tablat	equ	0xFF5
 33013                           prodh	equ	0xFF4
 33014                           prodl	equ	0xFF3
 33015                           intcon	equ	0xFF2
 33016                           intcon2	equ	0xFF1
 33017                           intcon3	equ	0xFF0
 33018                           postinc0	equ	0xFEE
 33019                           wreg	equ	0xFE8
 33020                           indf1	equ	0xFE7
 33021                           postinc1	equ	0xFE6
 33022                           postdec1	equ	0xFE5
 33023                           plusw1	equ	0xFE3
 33024                           fsr1h	equ	0xFE2
 33025                           fsr1l	equ	0xFE1
 33026                           indf2	equ	0xFDF
 33027                           postinc2	equ	0xFDE
 33028                           postdec2	equ	0xFDD
 33029                           plusw2	equ	0xFDB
 33030                           fsr2h	equ	0xFDA
 33031                           fsr2l	equ	0xFD9
 33032                           status	equ	0xFD8
 33033                           
 33034 ;; *************** function _MSDWriteHandler *****************
 33035 ;; Defined at:
 33036 ;;		line 1188 in file "usb_device_msd.c"
 33037 ;; Parameters:    Size  Location     Type
 33038 ;;		None
 33039 ;; Auto vars:     Size  Location     Type
 33040 ;;		None
 33041 ;; Return value:  Size  Location     Type
 33042 ;;                  1    wreg      unsigned char 
 33043 ;; Registers used:
 33044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33045 ;; Tracked objects:
 33046 ;;		On entry : 0/0
 33047 ;;		On exit  : 0/0
 33048 ;;		Unchanged: 0/0
 33049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33052 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33053 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33054 ;;Total ram usage:        5 bytes
 33055 ;; Hardware stack levels used:    1
 33056 ;; Hardware stack levels required when called:   16
 33057 ;; This function calls:
 33058 ;;		_ExternalFlash_SectorWrite
 33059 ;;		_ExternalFlash_WriteProtectStateGet
 33060 ;;		_MSDCheckForErrorCases
 33061 ;;		_USBStallEndpoint
 33062 ;;		_USBTransferOnePacket
 33063 ;; This function is called by:
 33064 ;;		_MSDProcessCommandMediaPresent
 33065 ;; This function uses a non-reentrant model
 33066 ;;
 33067                           
 33068                           	psect	text140
 33069  00BEBE                     __ptext140:
 33070                           	opt stack 0
 33071  00BEBE                     _MSDWriteHandler:
 33072                           	opt stack 10
 33073                           
 33074                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 33075                           
 33076                           ;incstack = 0
 33077  00BEBE  D17D               	goto	l18277
 33078  00BEC0                     l705:
 33079                           
 33080                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 33081  00BEC0  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 33082                           
 33083                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 33084  00BEC4  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 33085                           
 33086                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 33087  00BEC8  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 33088                           
 33089                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 33090  00BECC  C255  F1D9         	movff	_gblCBW+20,_LBA
 33091                           
 33092                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 33093  00BED0  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 33094                           
 33095                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 33096  00BED4  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 33097                           
 33098                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33099  00BED8  0100               	movlb	0	; () banked
 33100  00BEDA  51D9               	movf	_TransferLength& (0+255),w,b
 33101  00BEDC  0100               	movlb	0	; () banked
 33102  00BEDE  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33103  00BEE0  0100               	movlb	0	; () banked
 33104  00BEE2  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 33105  00BEE4  0100               	movlb	0	; () banked
 33106  00BEE6  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 33107  00BEE8  0100               	movlb	0	; () banked
 33108  00BEEA  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33109  00BEEC  0100               	movlb	0	; () banked
 33110  00BEEE  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33111  00BEF0  0E09               	movlw	9
 33112  00BEF2                     u16975:
 33113  00BEF2  90D8               	bcf	status,0,c
 33114  00BEF4  0100               	movlb	0	; () banked
 33115  00BEF6  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 33116  00BEF8  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 33117  00BEFA  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 33118  00BEFC  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 33119  00BEFE  2EE8               	decfsz	wreg,f,c
 33120  00BF00  D7F8               	goto	u16975
 33121  00BF02  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 33122  00BF06  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33123  00BF0A  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33124  00BF0E  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33125  00BF12  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 33126  00BF16  0900               	iorlw	0
 33127  00BF18  A4D8               	btfss	status,2,c
 33128  00BF1A  D160               	goto	l18279
 33129                           
 33130                           ;usb_device_msd.c: 1208: }
 33131                           ;usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 33132                           
 33133                           ;usb_device_msd.c: 1204: {
 33134                           ;usb_device_msd.c: 1207: break;
 33135  00BF1C  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33136  00BF20  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33137  00BF24  EE22  F0CA         	lfsr	2,_LUN+15
 33138  00BF28  D801               	call	u16998
 33139  00BF2A  D00A               	goto	u16999
 33140  00BF2C                     u16998:
 33141  00BF2C  0005               	push	
 33142  00BF2E  6EFA               	movwf	pclath,c
 33143  00BF30  50DE               	movf	postinc2,w,c
 33144  00BF32  6EFD               	movwf	tosl,c
 33145  00BF34  50DE               	movf	postinc2,w,c
 33146  00BF36  6EFE               	movwf	tosh,c
 33147  00BF38  50DE               	movf	postinc2,w,c
 33148  00BF3A  6EFF               	movwf	tosu,c
 33149  00BF3C  50FA               	movf	pclath,w,c
 33150  00BF3E  0012               	return		;indir
 33151  00BF40                     u16999:
 33152  00BF40  0900               	iorlw	0
 33153  00BF42  B4D8               	btfsc	status,2,c
 33154  00BF44  D018               	goto	l18213
 33155                           
 33156                           ;usb_device_msd.c: 1213: {
 33157                           ;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 33158  00BF46  0E01               	movlw	1
 33159  00BF48  010D               	movlb	13	; () banked
 33160  00BF4A  6F8C               	movwf	140,b	;volatile
 33161                           
 33162                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 33163  00BF4C  0102               	movlb	2	; () banked
 33164  00BF4E  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33165  00BF50  0BF0               	andlw	-16
 33166  00BF52  0907               	iorlw	7
 33167  00BF54  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33168                           
 33169                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 33170  00BF56  0E27               	movlw	39
 33171  00BF58  0102               	movlb	2	; () banked
 33172  00BF5A  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33173                           
 33174                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 33175  00BF5C  0E00               	movlw	0
 33176  00BF5E  0102               	movlb	2	; () banked
 33177  00BF60  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33178                           
 33179                           ; BSR set to: 2
 33180                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 33181  00BF62  0E00               	movlw	0
 33182  00BF64  0100               	movlb	0	; () banked
 33183  00BF66  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33184  00BF68  0E02               	movlw	2
 33185  00BF6A  ECC9  F076         	call	_USBStallEndpoint
 33186                           
 33187                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 33188  00BF6E  0E00               	movlw	0
 33189  00BF70  6E1F               	movwf	_MSDWriteState,c
 33190                           
 33191                           ;usb_device_msd.c: 1228: return MSDWriteState;
 33192  00BF72  501F               	movf	_MSDWriteState,w,c
 33193  00BF74  0012               	return	
 33194  00BF76                     l18213:
 33195                           
 33196                           ;usb_device_msd.c: 1229: }
 33197                           ;usb_device_msd.c: 1231: MSD_State = 0x01;
 33198  00BF76  0E01               	movlw	1
 33199  00BF78  0100               	movlb	0	; () banked
 33200  00BF7A  6FE7               	movwf	_MSD_State& (0+255),b
 33201  00BF7C                     l18215:
 33202                           
 33203                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 33204  00BF7C  0100               	movlb	0	; () banked
 33205  00BF7E  51D9               	movf	_TransferLength& (0+255),w,b
 33206  00BF80  0100               	movlb	0	; () banked
 33207  00BF82  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 33208  00BF84  B4D8               	btfsc	status,2,c
 33209  00BF86  D116               	goto	l18273
 33210                           
 33211                           ; BSR set to: 0
 33212                           ;usb_device_msd.c: 1239: }
 33213                           ;usb_device_msd.c: 1241: MSDWriteState = 0x03;
 33214                           
 33215                           ; BSR set to: 0
 33216                           
 33217                           ;usb_device_msd.c: 1238: break;
 33218                           
 33219                           ; BSR set to: 0
 33220                           ;usb_device_msd.c: 1236: {
 33221                           ;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 33222  00BF88  0E03               	movlw	3
 33223  00BF8A  6E1F               	movwf	_MSDWriteState,c
 33224                           
 33225                           ; BSR set to: 0
 33226                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 33227  00BF8C  0E00               	movlw	0
 33228  00BF8E  0101               	movlb	1	; () banked
 33229  00BF90  6FEB               	movwf	_ptrNextData& (0+255),b
 33230  00BF92  0E06               	movlw	6
 33231  00BF94  0101               	movlb	1	; () banked
 33232  00BF96  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 33233                           
 33234                           ; BSR set to: 1
 33235                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 33236  00BF98  0E00               	movlw	0
 33237  00BF9A  010D               	movlb	13	; () banked
 33238  00BF9C  6F88               	movwf	136,b	;volatile
 33239  00BF9E  0E02               	movlw	2
 33240  00BFA0  6F89               	movwf	137,b	;volatile
 33241  00BFA2  0E00               	movlw	0
 33242  00BFA4  6F8A               	movwf	138,b	;volatile
 33243  00BFA6  0E00               	movlw	0
 33244  00BFA8  6F8B               	movwf	139,b	;volatile
 33245  00BFAA                     l712:
 33246                           
 33247                           ;usb_device_msd.c: 1248: {
 33248                           ;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 33249  00BFAA  010D               	movlb	13	; () banked
 33250  00BFAC  5188               	movf	136,w,b	;volatile
 33251  00BFAE  010D               	movlb	13	; () banked
 33252  00BFB0  1189               	iorwf	137,w,b	;volatile
 33253  00BFB2  010D               	movlb	13	; () banked
 33254  00BFB4  118A               	iorwf	138,w,b	;volatile
 33255  00BFB6  010D               	movlb	13	; () banked
 33256  00BFB8  118B               	iorwf	139,w,b	;volatile
 33257  00BFBA  B4D8               	btfsc	status,2,c
 33258  00BFBC  D021               	goto	l18235
 33259                           
 33260                           ; BSR set to: 13
 33261                           ;usb_device_msd.c: 1251: {
 33262                           ;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33263  00BFBE  0100               	movlb	0	; () banked
 33264  00BFC0  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33265  00BFC2  0100               	movlb	0	; () banked
 33266  00BFC4  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33267  00BFC6  B4D8               	btfsc	status,2,c
 33268  00BFC8  D007               	goto	l18231
 33269                           
 33270                           ; BSR set to: 0
 33271  00BFCA  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33272  00BFCE  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33273  00BFD2  0100               	movlb	0	; () banked
 33274  00BFD4  BEDF               	btfsc	indf2,7,c
 33275  00BFD6  D102               	goto	l18279
 33276  00BFD8                     l18231:
 33277                           
 33278                           ; BSR set to: 0
 33279                           ;usb_device_msd.c: 1255: }
 33280                           ;usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacket(2u,0,ptrNextData,64u);
 33281  00BFD8  0E00               	movlw	0
 33282  00BFDA  0100               	movlb	0	; () banked
 33283  00BFDC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33284  00BFDE  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33285  00BFE2  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33286  00BFE6  0E40               	movlw	64
 33287  00BFE8  0100               	movlb	0	; () banked
 33288  00BFEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33289  00BFEC  0E02               	movlw	2
 33290  00BFEE  EC6B  F077         	call	_USBTransferOnePacket
 33291  00BFF2  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 33292  00BFF6  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 33293                           
 33294                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 33295  00BFFA  0E04               	movlw	4
 33296  00BFFC  6E1F               	movwf	_MSDWriteState,c
 33297                           
 33298                           ;usb_device_msd.c: 1260: }
 33299  00BFFE  D025               	goto	l18239
 33300  00C000                     l18235:
 33301                           
 33302                           ;usb_device_msd.c: 1261: else
 33303                           ;usb_device_msd.c: 1262: {
 33304                           ;usb_device_msd.c: 1266: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 33305  00C000  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33306  00C004  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33307  00C008  EE22  F0CA         	lfsr	2,_LUN+15
 33308  00C00C  D801               	call	u17058
 33309  00C00E  D00A               	goto	u17059
 33310  00C010                     u17058:
 33311  00C010  0005               	push	
 33312  00C012  6EFA               	movwf	pclath,c
 33313  00C014  50DE               	movf	postinc2,w,c
 33314  00C016  6EFD               	movwf	tosl,c
 33315  00C018  50DE               	movf	postinc2,w,c
 33316  00C01A  6EFE               	movwf	tosh,c
 33317  00C01C  50DE               	movf	postinc2,w,c
 33318  00C01E  6EFF               	movwf	tosu,c
 33319  00C020  50FA               	movf	pclath,w,c
 33320  00C022  0012               	return		;indir
 33321  00C024                     u17059:
 33322  00C024  0900               	iorlw	0
 33323  00C026  B4D8               	btfsc	status,2,c
 33324  00C028  D00E               	goto	l716
 33325                           
 33326                           ;usb_device_msd.c: 1267: {
 33327                           ;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 33328  00C02A  0E01               	movlw	1
 33329  00C02C  010D               	movlb	13	; () banked
 33330  00C02E  6F8C               	movwf	140,b	;volatile
 33331                           
 33332                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 33333  00C030  0102               	movlb	2	; () banked
 33334  00C032  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33335  00C034  0BF0               	andlw	-16
 33336  00C036  0902               	iorlw	2
 33337  00C038  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33338                           
 33339                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 33340  00C03A  0E27               	movlw	39
 33341  00C03C  0102               	movlb	2	; () banked
 33342  00C03E  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33343                           
 33344                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 33345  00C040  0E00               	movlw	0
 33346  00C042  0102               	movlb	2	; () banked
 33347  00C044  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33348  00C046                     l716:
 33349                           
 33350                           ;usb_device_msd.c: 1277: }
 33351                           ;usb_device_msd.c: 1279: MSDWriteState = 0x02;
 33352  00C046  0E02               	movlw	2
 33353  00C048  D0B6               	goto	L27
 33354  00C04A                     l18239:
 33355                           
 33356                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33357  00C04A  0100               	movlb	0	; () banked
 33358  00C04C  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33359  00C04E  0100               	movlb	0	; () banked
 33360  00C050  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33361  00C052  B4D8               	btfsc	status,2,c
 33362  00C054  D007               	goto	l18245
 33363                           
 33364                           ; BSR set to: 0
 33365  00C056  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33366  00C05A  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33367  00C05E  0100               	movlb	0	; () banked
 33368  00C060  BEDF               	btfsc	indf2,7,c
 33369  00C062  D0BC               	goto	l18279
 33370  00C064                     l18245:
 33371                           
 33372                           ; BSR set to: 0
 33373                           ;usb_device_msd.c: 1288: }
 33374                           ;usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((volatile BDT_ENTRY*)USBMSDOut
      +                          Handle)->CNT);
 33375  00C064  0100               	movlb	0	; () banked
 33376  00C066  EE20 F001          	lfsr	2,1
 33377  00C06A  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33378  00C06C  26D9               	addwf	fsr2l,f,c
 33379  00C06E  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33380  00C070  22DA               	addwfc	fsr2h,f,c
 33381  00C072  50DF               	movf	indf2,w,c
 33382  00C074  0100               	movlb	0	; () banked
 33383  00C076  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33384  00C078  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33385  00C07C  0100               	movlb	0	; () banked
 33386  00C07E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33387  00C080  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33388  00C082  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33389  00C084  0100               	movlb	0	; () banked
 33390  00C086  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33391  00C088  0102               	movlb	2	; () banked
 33392  00C08A  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 33393  00C08C  0100               	movlb	0	; () banked
 33394  00C08E  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33395  00C090  0102               	movlb	2	; () banked
 33396  00C092  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 33397  00C094  0100               	movlb	0	; () banked
 33398  00C096  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33399  00C098  0102               	movlb	2	; () banked
 33400  00C09A  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 33401  00C09C  0100               	movlb	0	; () banked
 33402  00C09E  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33403  00C0A0  0102               	movlb	2	; () banked
 33404  00C0A2  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 33405                           
 33406                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 33407  00C0A4  0100               	movlb	0	; () banked
 33408  00C0A6  EE20 F001          	lfsr	2,1
 33409  00C0AA  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33410  00C0AC  26D9               	addwf	fsr2l,f,c
 33411  00C0AE  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33412  00C0B0  22DA               	addwfc	fsr2h,f,c
 33413  00C0B2  50DF               	movf	indf2,w,c
 33414  00C0B4  0100               	movlb	0	; () banked
 33415  00C0B6  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33416  00C0B8  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33417  00C0BC  0100               	movlb	0	; () banked
 33418  00C0BE  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33419  00C0C0  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33420  00C0C2  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33421  00C0C4  0100               	movlb	0	; () banked
 33422  00C0C6  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33423  00C0C8  010D               	movlb	13	; () banked
 33424  00C0CA  5F88               	subwf	136,f,b	;volatile
 33425  00C0CC  0100               	movlb	0	; () banked
 33426  00C0CE  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33427  00C0D0  010D               	movlb	13	; () banked
 33428  00C0D2  5B89               	subwfb	137,f,b	;volatile
 33429  00C0D4  0100               	movlb	0	; () banked
 33430  00C0D6  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33431  00C0D8  010D               	movlb	13	; () banked
 33432  00C0DA  5B8A               	subwfb	138,f,b	;volatile
 33433  00C0DC  0100               	movlb	0	; () banked
 33434  00C0DE  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33435  00C0E0  010D               	movlb	13	; () banked
 33436  00C0E2  5B8B               	subwfb	139,f,b	;volatile
 33437                           
 33438                           ; BSR set to: 13
 33439                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33440  00C0E4  0E40               	movlw	64
 33441  00C0E6  0101               	movlb	1	; () banked
 33442  00C0E8  27EB               	addwf	_ptrNextData& (0+255),f,b
 33443  00C0EA  0E00               	movlw	0
 33444  00C0EC  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33445                           
 33446                           ; BSR set to: 1
 33447                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33448  00C0EE  0E03               	movlw	3
 33449  00C0F0  D062               	goto	L27
 33450  00C0F2                     l18251:
 33451                           
 33452                           ;usb_device_msd.c: 1298: {
 33453                           ;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33454  00C0F2  010D               	movlb	13	; () banked
 33455  00C0F4  518C               	movf	140,w,b	;volatile
 33456  00C0F6  A4D8               	btfss	status,2,c
 33457  00C0F8  D047               	goto	l18263
 33458                           
 33459                           ; BSR set to: 13
 33460                           ;usb_device_msd.c: 1306: {
 33461                           ;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaParameters, LBA.Val, (uint8_t
      +                          *)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33462  00C0FA  C2D0  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33463  00C0FE  C2D1  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33464  00C102  C1D9  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33465  00C106  C1DA  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33466  00C10A  C1DB  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33467  00C10E  C1DC  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33468  00C112  0E00               	movlw	0
 33469  00C114  0100               	movlb	0	; () banked
 33470  00C116  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33471  00C118  0E06               	movlw	6
 33472  00C11A  0100               	movlb	0	; () banked
 33473  00C11C  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33474  00C11E  0101               	movlb	1	; () banked
 33475  00C120  51D9               	movf	_LBA& (0+255),w,b
 33476  00C122  0101               	movlb	1	; () banked
 33477  00C124  11DA               	iorwf	(_LBA+1)& (0+255),w,b
 33478  00C126  0101               	movlb	1	; () banked
 33479  00C128  11DB               	iorwf	(_LBA+2)& (0+255),w,b
 33480  00C12A  0101               	movlb	1	; () banked
 33481  00C12C  11DC               	iorwf	(_LBA+3)& (0+255),w,b
 33482  00C12E  A4D8               	btfss	status,2,c
 33483  00C130  D002               	goto	u17100
 33484  00C132  0E01               	movlw	1
 33485  00C134  D001               	goto	u17110
 33486  00C136                     u17100:
 33487  00C136  0E00               	movlw	0
 33488  00C138                     u17110:
 33489  00C138  0100               	movlb	0	; () banked
 33490  00C13A  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 33491  00C13C  EE22  F0CD         	lfsr	2,_LUN+18
 33492  00C140  D801               	call	u17128
 33493  00C142  D00A               	goto	u17129
 33494  00C144                     u17128:
 33495  00C144  0005               	push	
 33496  00C146  6EFA               	movwf	pclath,c
 33497  00C148  50DE               	movf	postinc2,w,c
 33498  00C14A  6EFD               	movwf	tosl,c
 33499  00C14C  50DE               	movf	postinc2,w,c
 33500  00C14E  6EFE               	movwf	tosh,c
 33501  00C150  50DE               	movf	postinc2,w,c
 33502  00C152  6EFF               	movwf	tosu,c
 33503  00C154  50FA               	movf	pclath,w,c
 33504  00C156  0012               	return		;indir
 33505  00C158                     u17129:
 33506  00C158  06E8               	decf	wreg,f,c
 33507  00C15A  B4D8               	btfsc	status,2,c
 33508  00C15C  D015               	goto	l18263
 33509                           
 33510                           ;usb_device_msd.c: 1308: {
 33511                           ;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 33512  00C15E  0E64               	movlw	100
 33513  00C160  0101               	movlb	1	; () banked
 33514  00C162  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 33515  00C164  D003               	goto	l18261
 33516                           
 33517                           ; BSR set to: 1
 33518                           ;usb_device_msd.c: 1312: {
 33519                           ;usb_device_msd.c: 1313: MSDRetryAttempt++;
 33520  00C166  0101               	movlb	1	; () banked
 33521  00C168  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 33522                           
 33523                           ;usb_device_msd.c: 1314: break;
 33524  00C16A  D038               	goto	l18279
 33525  00C16C                     l18261:
 33526                           
 33527                           ; BSR set to: 1
 33528                           ;usb_device_msd.c: 1316: else
 33529                           ;usb_device_msd.c: 1317: {
 33530                           ;usb_device_msd.c: 1320: msd_csw.bCSWStatus = 0x01;
 33531  00C16C  0E01               	movlw	1
 33532  00C16E  010D               	movlb	13	; () banked
 33533  00C170  6F8C               	movwf	140,b	;volatile
 33534                           
 33535                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 33536  00C172  0102               	movlb	2	; () banked
 33537  00C174  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33538  00C176  0BF0               	andlw	-16
 33539  00C178  0903               	iorlw	3
 33540  00C17A  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33541                           
 33542                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 33543  00C17C  0E00               	movlw	0
 33544  00C17E  0102               	movlb	2	; () banked
 33545  00C180  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33546                           
 33547                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 33548  00C182  0E00               	movlw	0
 33549  00C184  0102               	movlb	2	; () banked
 33550  00C186  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33551  00C188                     l18263:
 33552                           
 33553                           ;usb_device_msd.c: 1326: }
 33554                           ;usb_device_msd.c: 1327: }
 33555                           ;usb_device_msd.c: 1328: }
 33556                           ;usb_device_msd.c: 1332: LBA.Val++;
 33557  00C188  0E01               	movlw	1
 33558  00C18A  0101               	movlb	1	; () banked
 33559  00C18C  27D9               	addwf	_LBA& (0+255),f,b
 33560  00C18E  0E00               	movlw	0
 33561  00C190  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 33562  00C192  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 33563  00C194  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 33564                           
 33565                           ; BSR set to: 1
 33566                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 33567  00C196  0100               	movlb	0	; () banked
 33568  00C198  07D9               	decf	_TransferLength& (0+255),f,b
 33569  00C19A  A0D8               	btfss	status,0,c
 33570  00C19C  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 33571                           
 33572                           ; BSR set to: 0
 33573                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 33574  00C19E  0E01               	movlw	1
 33575  00C1A0  D00A               	goto	L27
 33576  00C1A2                     l18269:
 33577                           
 33578                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 33579  00C1A2  0E02               	movlw	2
 33580  00C1A4  010D               	movlb	13	; () banked
 33581  00C1A6  6F8C               	movwf	140,b	;volatile
 33582                           
 33583                           ; BSR set to: 13
 33584                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 33585  00C1A8  0E00               	movlw	0
 33586  00C1AA  0100               	movlb	0	; () banked
 33587  00C1AC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33588  00C1AE  0E02               	movlw	2
 33589  00C1B0  ECC9  F076         	call	_USBStallEndpoint
 33590  00C1B4                     l18273:
 33591                           
 33592                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 33593  00C1B4  0E00               	movlw	0
 33594  00C1B6                     L27:
 33595  00C1B6  6E1F               	movwf	_MSDWriteState,c
 33596                           
 33597                           ;usb_device_msd.c: 1345: }
 33598                           
 33599                           ;usb_device_msd.c: 1344: break;
 33600  00C1B8  D011               	goto	l18279
 33601  00C1BA                     l18277:
 33602  00C1BA  501F               	movf	_MSDWriteState,w,c
 33603                           
 33604                           ; Switch size 1, requested type "space"
 33605                           ; Number of cases is 5, Range of values is 0 to 4
 33606                           ; switch strategies available:
 33607                           ; Name         Instructions Cycles
 33608                           ; simple_byte           16     9 (average)
 33609                           ;	Chosen strategy is simple_byte
 33610  00C1BC  0A00               	xorlw	0	; case 0
 33611  00C1BE  B4D8               	btfsc	status,2,c
 33612  00C1C0  D67F               	goto	l705
 33613  00C1C2  0A01               	xorlw	1	; case 1
 33614  00C1C4  B4D8               	btfsc	status,2,c
 33615  00C1C6  D6DA               	goto	l18215
 33616  00C1C8  0A03               	xorlw	3	; case 2
 33617  00C1CA  B4D8               	btfsc	status,2,c
 33618  00C1CC  D792               	goto	l18251
 33619  00C1CE  0A01               	xorlw	1	; case 3
 33620  00C1D0  B4D8               	btfsc	status,2,c
 33621  00C1D2  D6EB               	goto	l712
 33622  00C1D4  0A07               	xorlw	7	; case 4
 33623  00C1D6  B4D8               	btfsc	status,2,c
 33624  00C1D8  D738               	goto	l18239
 33625  00C1DA  D7E3               	goto	l18269
 33626  00C1DC                     l18279:
 33627                           
 33628                           ;usb_device_msd.c: 1347: return MSDWriteState;
 33629  00C1DC  501F               	movf	_MSDWriteState,w,c
 33630  00C1DE  0012               	return	
 33631  00C1E0                     __end_of_MSDWriteHandler:
 33632                           	opt stack 0
 33633                           tosu	equ	0xFFF
 33634                           tosh	equ	0xFFE
 33635                           tosl	equ	0xFFD
 33636                           pclath	equ	0xFFA
 33637                           tblptru	equ	0xFF8
 33638                           tblptrh	equ	0xFF7
 33639                           tblptrl	equ	0xFF6
 33640                           tablat	equ	0xFF5
 33641                           prodh	equ	0xFF4
 33642                           prodl	equ	0xFF3
 33643                           intcon	equ	0xFF2
 33644                           intcon2	equ	0xFF1
 33645                           intcon3	equ	0xFF0
 33646                           postinc0	equ	0xFEE
 33647                           wreg	equ	0xFE8
 33648                           indf1	equ	0xFE7
 33649                           postinc1	equ	0xFE6
 33650                           postdec1	equ	0xFE5
 33651                           plusw1	equ	0xFE3
 33652                           fsr1h	equ	0xFE2
 33653                           fsr1l	equ	0xFE1
 33654                           indf2	equ	0xFDF
 33655                           postinc2	equ	0xFDE
 33656                           postdec2	equ	0xFDD
 33657                           plusw2	equ	0xFDB
 33658                           fsr2h	equ	0xFDA
 33659                           fsr2l	equ	0xFD9
 33660                           status	equ	0xFD8
 33661                           
 33662 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 33663 ;; Defined at:
 33664 ;;		line 34 in file "external_flash.c"
 33665 ;; Parameters:    Size  Location     Type
 33666 ;;  config          2    0[BANK0 ] PTR void 
 33667 ;;		 -> NULL(0), 
 33668 ;; Auto vars:     Size  Location     Type
 33669 ;;		None
 33670 ;; Return value:  Size  Location     Type
 33671 ;;                  1    wreg      unsigned char 
 33672 ;; Registers used:
 33673 ;;		wreg
 33674 ;; Tracked objects:
 33675 ;;		On entry : 0/0
 33676 ;;		On exit  : 0/0
 33677 ;;		Unchanged: 0/0
 33678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33683 ;;Total ram usage:        2 bytes
 33684 ;; Hardware stack levels used:    1
 33685 ;; Hardware stack levels required when called:   10
 33686 ;; This function calls:
 33687 ;;		Nothing
 33688 ;; This function is called by:
 33689 ;;		_MSDWriteHandler
 33690 ;;		_MSDProcessCommandMediaPresent
 33691 ;; This function uses a non-reentrant model
 33692 ;;
 33693                           
 33694                           	psect	text141
 33695  0142EC                     __ptext141:
 33696                           	opt stack 0
 33697  0142EC                     _ExternalFlash_WriteProtectStateGet:
 33698                           	opt stack 15
 33699                           
 33700                           ;external_flash.c: 37: return 0;
 33701                           
 33702                           ;incstack = 0
 33703  0142EC  0E00               	movlw	0
 33704  0142EE  0012               	return	
 33705  0142F0                     __end_of_ExternalFlash_WriteProtectStateGet:
 33706                           	opt stack 0
 33707                           tosu	equ	0xFFF
 33708                           tosh	equ	0xFFE
 33709                           tosl	equ	0xFFD
 33710                           pclath	equ	0xFFA
 33711                           tblptru	equ	0xFF8
 33712                           tblptrh	equ	0xFF7
 33713                           tblptrl	equ	0xFF6
 33714                           tablat	equ	0xFF5
 33715                           prodh	equ	0xFF4
 33716                           prodl	equ	0xFF3
 33717                           intcon	equ	0xFF2
 33718                           intcon2	equ	0xFF1
 33719                           intcon3	equ	0xFF0
 33720                           postinc0	equ	0xFEE
 33721                           wreg	equ	0xFE8
 33722                           indf1	equ	0xFE7
 33723                           postinc1	equ	0xFE6
 33724                           postdec1	equ	0xFE5
 33725                           plusw1	equ	0xFE3
 33726                           fsr1h	equ	0xFE2
 33727                           fsr1l	equ	0xFE1
 33728                           indf2	equ	0xFDF
 33729                           postinc2	equ	0xFDE
 33730                           postdec2	equ	0xFDD
 33731                           plusw2	equ	0xFDB
 33732                           fsr2h	equ	0xFDA
 33733                           fsr2l	equ	0xFD9
 33734                           status	equ	0xFD8
 33735                           
 33736 ;; *************** function _ExternalFlash_SectorWrite *****************
 33737 ;; Defined at:
 33738 ;;		line 104 in file "external_flash.c"
 33739 ;; Parameters:    Size  Location     Type
 33740 ;;  config          2   36[BANK0 ] PTR void 
 33741 ;;		 -> NULL(0), 
 33742 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 33743 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 33744 ;;		 -> msd_buffer(512), 
 33745 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 33746 ;; Auto vars:     Size  Location     Type
 33747 ;;  page            2   45[BANK0 ] unsigned int 
 33748 ;; Return value:  Size  Location     Type
 33749 ;;                  1    wreg      unsigned char 
 33750 ;; Registers used:
 33751 ;;		wreg, status,2, status,0, cstack
 33752 ;; Tracked objects:
 33753 ;;		On entry : 0/0
 33754 ;;		On exit  : 0/0
 33755 ;;		Unchanged: 0/0
 33756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33757 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33760 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33761 ;;Total ram usage:       11 bytes
 33762 ;; Hardware stack levels used:    1
 33763 ;; Hardware stack levels required when called:   15
 33764 ;; This function calls:
 33765 ;;		_flash_page_write
 33766 ;; This function is called by:
 33767 ;;		_MSDWriteHandler
 33768 ;; This function uses a non-reentrant model
 33769 ;;
 33770                           
 33771                           	psect	text142
 33772  01383A                     __ptext142:
 33773                           	opt stack 0
 33774  01383A                     _ExternalFlash_SectorWrite:
 33775                           	opt stack 10
 33776                           
 33777                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 33778                           
 33779                           ;incstack = 0
 33780  01383A  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 33781  01383E  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 33782                           
 33783                           ;external_flash.c: 110: if(sector_addr >= 4096)
 33784  013842  0100               	movlb	0	; () banked
 33785  013844  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 33786  013846  0100               	movlb	0	; () banked
 33787  013848  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 33788  01384A  E105               	bnz	u16830
 33789  01384C  0E10               	movlw	16
 33790  01384E  0100               	movlb	0	; () banked
 33791  013850  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 33792  013852  A0D8               	btfss	status,0,c
 33793  013854  D002               	goto	l18071
 33794  013856                     u16830:
 33795                           
 33796                           ; BSR set to: 0
 33797                           ;external_flash.c: 111: {
 33798                           ;external_flash.c: 112: return 0;
 33799  013856  0E00               	movlw	0
 33800                           
 33801                           ; BSR set to: 0
 33802  013858  0012               	return	
 33803  01385A                     l18071:
 33804                           
 33805                           ; BSR set to: 0
 33806                           ;external_flash.c: 113: }
 33807                           ;external_flash.c: 141: flash_page_write(page, buffer);
 33808  01385A  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 33809  01385E  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 33810  013862  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 33811  013866  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 33812  01386A  ECB9  F098         	call	_flash_page_write	;wreg free
 33813                           
 33814                           ;external_flash.c: 143: return 1;
 33815  01386E  0E01               	movlw	1
 33816  013870  0012               	return	
 33817  013872                     __end_of_ExternalFlash_SectorWrite:
 33818                           	opt stack 0
 33819                           tosu	equ	0xFFF
 33820                           tosh	equ	0xFFE
 33821                           tosl	equ	0xFFD
 33822                           pclath	equ	0xFFA
 33823                           tblptru	equ	0xFF8
 33824                           tblptrh	equ	0xFF7
 33825                           tblptrl	equ	0xFF6
 33826                           tablat	equ	0xFF5
 33827                           prodh	equ	0xFF4
 33828                           prodl	equ	0xFF3
 33829                           intcon	equ	0xFF2
 33830                           intcon2	equ	0xFF1
 33831                           intcon3	equ	0xFF0
 33832                           postinc0	equ	0xFEE
 33833                           wreg	equ	0xFE8
 33834                           indf1	equ	0xFE7
 33835                           postinc1	equ	0xFE6
 33836                           postdec1	equ	0xFE5
 33837                           plusw1	equ	0xFE3
 33838                           fsr1h	equ	0xFE2
 33839                           fsr1l	equ	0xFE1
 33840                           indf2	equ	0xFDF
 33841                           postinc2	equ	0xFDE
 33842                           postdec2	equ	0xFDD
 33843                           plusw2	equ	0xFDB
 33844                           fsr2h	equ	0xFDA
 33845                           fsr2l	equ	0xFD9
 33846                           status	equ	0xFD8
 33847                           
 33848 ;; *************** function _flash_page_write *****************
 33849 ;; Defined at:
 33850 ;;		line 546 in file "flash.c"
 33851 ;; Parameters:    Size  Location     Type
 33852 ;;  page            2   31[BANK0 ] unsigned int 
 33853 ;;  data            2   33[BANK0 ] PTR unsigned char 
 33854 ;;		 -> buffer(512), msd_buffer(512), 
 33855 ;; Auto vars:     Size  Location     Type
 33856 ;;  match           1   35[BANK0 ] enum E8335
 33857 ;; Return value:  Size  Location     Type
 33858 ;;                  1    wreg      void 
 33859 ;; Registers used:
 33860 ;;		wreg, status,2, status,0, cstack
 33861 ;; Tracked objects:
 33862 ;;		On entry : 0/0
 33863 ;;		On exit  : 0/0
 33864 ;;		Unchanged: 0/0
 33865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33866 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33869 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33870 ;;Total ram usage:        5 bytes
 33871 ;; Hardware stack levels used:    1
 33872 ;; Hardware stack levels required when called:   14
 33873 ;; This function calls:
 33874 ;;		__flash_compare_page_to_buffer
 33875 ;;		__flash_write_page_from_buffer
 33876 ;;		__flash_write_to_buffer
 33877 ;; This function is called by:
 33878 ;;		_ExternalFlash_SectorWrite
 33879 ;;		_fat_format
 33880 ;; This function uses a non-reentrant model
 33881 ;;
 33882                           
 33883                           	psect	text143
 33884  013172                     __ptext143:
 33885                           	opt stack 0
 33886  013172                     _flash_page_write:
 33887                           	opt stack 10
 33888                           
 33889                           ;flash.c: 548: flashMatchResult_t match;
 33890                           ;flash.c: 551: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 33891                           
 33892                           ;incstack = 0
 33893  013172  0E00               	movlw	0
 33894  013174  0100               	movlb	0	; () banked
 33895  013176  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 33896  013178  0E00               	movlw	0
 33897  01317A  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 33898  01317C  C081  F075         	movff	flash_page_write@data,__flash_write_to_buffer@data
 33899  013180  C082  F076         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 33900  013184  0E02               	movlw	2
 33901  013186  0100               	movlb	0	; () banked
 33902  013188  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 33903  01318A  0E00               	movlw	0
 33904  01318C  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 33905  01318E  0E00               	movlw	0
 33906  013190  0100               	movlb	0	; () banked
 33907  013192  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 33908  013194  ECBC  F095         	call	__flash_write_to_buffer	;wreg free
 33909                           
 33910                           ;flash.c: 554: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 33911  013198  C07F  F073         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 33912  01319C  C080  F074         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 33913  0131A0  0E00               	movlw	0
 33914  0131A2  0100               	movlb	0	; () banked
 33915  0131A4  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 33916  0131A6  ECCE  F08B         	call	__flash_compare_page_to_buffer	;wreg free
 33917  0131AA  0100               	movlb	0	; () banked
 33918  0131AC  6F83               	movwf	flash_page_write@match& (0+255),b
 33919                           
 33920                           ; BSR set to: 0
 33921                           ;flash.c: 557: if(match==DATA_DOES_NOT_MATCH)
 33922  0131AE  0100               	movlb	0	; () banked
 33923  0131B0  0583               	decf	flash_page_write@match& (0+255),w,b
 33924  0131B2  A4D8               	btfss	status,2,c
 33925  0131B4  0012               	return	
 33926                           
 33927                           ; BSR set to: 0
 33928                           ;flash.c: 558: {
 33929                           ;flash.c: 559: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 33930  0131B6  C07F  F073         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 33931  0131BA  C080  F074         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 33932  0131BE  0E00               	movlw	0
 33933  0131C0  0100               	movlb	0	; () banked
 33934  0131C2  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 33935  0131C4  EC80  F092         	call	__flash_write_page_from_buffer	;wreg free
 33936  0131C8  0012               	return	
 33937  0131CA                     __end_of_flash_page_write:
 33938                           	opt stack 0
 33939                           tosu	equ	0xFFF
 33940                           tosh	equ	0xFFE
 33941                           tosl	equ	0xFFD
 33942                           pclath	equ	0xFFA
 33943                           tblptru	equ	0xFF8
 33944                           tblptrh	equ	0xFF7
 33945                           tblptrl	equ	0xFF6
 33946                           tablat	equ	0xFF5
 33947                           prodh	equ	0xFF4
 33948                           prodl	equ	0xFF3
 33949                           intcon	equ	0xFF2
 33950                           intcon2	equ	0xFF1
 33951                           intcon3	equ	0xFF0
 33952                           postinc0	equ	0xFEE
 33953                           wreg	equ	0xFE8
 33954                           indf1	equ	0xFE7
 33955                           postinc1	equ	0xFE6
 33956                           postdec1	equ	0xFE5
 33957                           plusw1	equ	0xFE3
 33958                           fsr1h	equ	0xFE2
 33959                           fsr1l	equ	0xFE1
 33960                           indf2	equ	0xFDF
 33961                           postinc2	equ	0xFDE
 33962                           postdec2	equ	0xFDD
 33963                           plusw2	equ	0xFDB
 33964                           fsr2h	equ	0xFDA
 33965                           fsr2l	equ	0xFD9
 33966                           status	equ	0xFD8
 33967                           
 33968 ;; *************** function __flash_write_to_buffer *****************
 33969 ;; Defined at:
 33970 ;;		line 397 in file "flash.c"
 33971 ;; Parameters:    Size  Location     Type
 33972 ;;  start           2   19[BANK0 ] unsigned int 
 33973 ;;  data            2   21[BANK0 ] PTR unsigned char 
 33974 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 33975 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 33976 ;;		 -> msd_buffer(512), 
 33977 ;;  data_length     2   23[BANK0 ] unsigned int 
 33978 ;;  buffer          1   25[BANK0 ] enum E8331
 33979 ;; Auto vars:     Size  Location     Type
 33980 ;;  command         4   26[BANK0 ] unsigned char [4]
 33981 ;; Return value:  Size  Location     Type
 33982 ;;                  1    wreg      void 
 33983 ;; Registers used:
 33984 ;;		wreg, status,2, status,0, cstack
 33985 ;; Tracked objects:
 33986 ;;		On entry : 0/0
 33987 ;;		On exit  : 0/0
 33988 ;;		Unchanged: 0/0
 33989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33990 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33991 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33993 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33994 ;;Total ram usage:       11 bytes
 33995 ;; Hardware stack levels used:    1
 33996 ;; Hardware stack levels required when called:   13
 33997 ;; This function calls:
 33998 ;;		__flash_spi_tx_tx
 33999 ;;		_flash_is_busy
 34000 ;; This function is called by:
 34001 ;;		_flash_page_write
 34002 ;;		_flash_partial_write
 34003 ;; This function uses a non-reentrant model
 34004 ;;
 34005                           
 34006                           	psect	text144
 34007  012B78                     __ptext144:
 34008                           	opt stack 0
 34009  012B78                     __flash_write_to_buffer:
 34010                           	opt stack 13
 34011  012B78                     l17777:
 34012  012B78  EC7E  F09F         	call	_flash_is_busy	;wreg free
 34013  012B7C  0900               	iorlw	0
 34014  012B7E  A4D8               	btfss	status,2,c
 34015  012B80  D7FB               	goto	l17777
 34016                           
 34017                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 34018  012B82  0100               	movlb	0	; () banked
 34019  012B84  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 34020  012B86  0100               	movlb	0	; () banked
 34021  012B88  A4D8               	btfss	status,2,c
 34022  012B8A  D003               	goto	l17783
 34023                           
 34024                           ; BSR set to: 0
 34025                           ;flash.c: 406: command[0] = 0x84;
 34026  012B8C  0E84               	movlw	132
 34027  012B8E  0100               	movlb	0	; () banked
 34028  012B90  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34029  012B92                     l17783:
 34030                           
 34031                           ; BSR set to: 0
 34032                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 34033  012B92  0100               	movlb	0	; () banked
 34034  012B94  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 34035  012B96  A4D8               	btfss	status,2,c
 34036  012B98  D003               	goto	l2823
 34037                           
 34038                           ; BSR set to: 0
 34039                           ;flash.c: 408: command[0] = 0x87;
 34040  012B9A  0E87               	movlw	135
 34041  012B9C  0100               	movlb	0	; () banked
 34042  012B9E  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34043  012BA0                     l2823:
 34044                           
 34045                           ; BSR set to: 0
 34046                           ;flash.c: 410: command[1] = 0x00;
 34047  012BA0  0E00               	movlw	0
 34048  012BA2  0100               	movlb	0	; () banked
 34049  012BA4  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 34050                           
 34051                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 34052  012BA6  0100               	movlb	0	; () banked
 34053  012BA8  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 34054  012BAA  0100               	movlb	0	; () banked
 34055  012BAC  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 34056                           
 34057                           ; BSR set to: 0
 34058                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 34059  012BAE  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 34060                           
 34061                           ; BSR set to: 0
 34062                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 34063  012BB2  0E7A               	movlw	low __flash_write_to_buffer@command
 34064  012BB4  0100               	movlb	0	; () banked
 34065  012BB6  6F60               	movwf	__flash_spi_tx_tx@command& (0+255),b
 34066  012BB8  0E00               	movlw	high __flash_write_to_buffer@command
 34067  012BBA  0100               	movlb	0	; () banked
 34068  012BBC  6F61               	movwf	(__flash_spi_tx_tx@command+1)& (0+255),b
 34069  012BBE  0E00               	movlw	0
 34070  012BC0  0100               	movlb	0	; () banked
 34071  012BC2  6F63               	movwf	(__flash_spi_tx_tx@command_length+1)& (0+255),b
 34072  012BC4  0E04               	movlw	4
 34073  012BC6  6F62               	movwf	__flash_spi_tx_tx@command_length& (0+255),b
 34074  012BC8  C075  F064         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 34075  012BCC  C076  F065         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 34076  012BD0  C077  F066         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 34077  012BD4  C078  F067         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 34078  012BD8  EC89  F089         	call	__flash_spi_tx_tx	;wreg free
 34079  012BDC  0012               	return		;funcret
 34080  012BDE                     __end_of__flash_write_to_buffer:
 34081                           	opt stack 0
 34082                           tosu	equ	0xFFF
 34083                           tosh	equ	0xFFE
 34084                           tosl	equ	0xFFD
 34085                           pclath	equ	0xFFA
 34086                           tblptru	equ	0xFF8
 34087                           tblptrh	equ	0xFF7
 34088                           tblptrl	equ	0xFF6
 34089                           tablat	equ	0xFF5
 34090                           prodh	equ	0xFF4
 34091                           prodl	equ	0xFF3
 34092                           intcon	equ	0xFF2
 34093                           intcon2	equ	0xFF1
 34094                           intcon3	equ	0xFF0
 34095                           postinc0	equ	0xFEE
 34096                           wreg	equ	0xFE8
 34097                           indf1	equ	0xFE7
 34098                           postinc1	equ	0xFE6
 34099                           postdec1	equ	0xFE5
 34100                           plusw1	equ	0xFE3
 34101                           fsr1h	equ	0xFE2
 34102                           fsr1l	equ	0xFE1
 34103                           indf2	equ	0xFDF
 34104                           postinc2	equ	0xFDE
 34105                           postdec2	equ	0xFDD
 34106                           plusw2	equ	0xFDB
 34107                           fsr2h	equ	0xFDA
 34108                           fsr2l	equ	0xFD9
 34109                           status	equ	0xFD8
 34110                           
 34111 ;; *************** function __flash_spi_tx_tx *****************
 34112 ;; Defined at:
 34113 ;;		line 141 in file "flash.c"
 34114 ;; Parameters:    Size  Location     Type
 34115 ;;  command         2    0[BANK0 ] PTR unsigned char 
 34116 ;;		 -> _flash_write_to_buffer@command(4), 
 34117 ;;  command_leng    2    2[BANK0 ] unsigned int 
 34118 ;;  data            2    4[BANK0 ] PTR unsigned char 
 34119 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 34120 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 34121 ;;		 -> msd_buffer(512), 
 34122 ;;  data_length     2    6[BANK0 ] unsigned int 
 34123 ;; Auto vars:     Size  Location     Type
 34124 ;;		None
 34125 ;; Return value:  Size  Location     Type
 34126 ;;                  1    wreg      void 
 34127 ;; Registers used:
 34128 ;;		wreg, status,2, status,0
 34129 ;; Tracked objects:
 34130 ;;		On entry : 0/0
 34131 ;;		On exit  : 0/0
 34132 ;;		Unchanged: 0/0
 34133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34136 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34137 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34138 ;;Total ram usage:       12 bytes
 34139 ;; Hardware stack levels used:    1
 34140 ;; Hardware stack levels required when called:   10
 34141 ;; This function calls:
 34142 ;;		Nothing
 34143 ;; This function is called by:
 34144 ;;		__flash_write_to_buffer
 34145 ;; This function uses a non-reentrant model
 34146 ;;
 34147                           
 34148                           	psect	text145
 34149  011312                     __ptext145:
 34150                           	opt stack 0
 34151  011312                     __flash_spi_tx_tx:
 34152                           	opt stack 15
 34153                           
 34154                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 34155                           
 34156                           ;incstack = 0
 34157  011312  9E88               	bcf	3976,7,c	;volatile
 34158                           
 34159                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 34160  011314  9C88               	bcf	3976,6,c	;volatile
 34161                           
 34162                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 34163  011316  8A88               	bsf	3976,5,c	;volatile
 34164                           
 34165                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 34166  011318  9888               	bcf	3976,4,c	;volatile
 34167                           
 34168                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 34169  01131A  9688               	bcf	3976,3,c	;volatile
 34170                           
 34171                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 34172  01131C  8488               	bsf	3976,2,c	;volatile
 34173                           
 34174                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 34175  01131E  9288               	bcf	3976,1,c	;volatile
 34176                           
 34177                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 34178  011320  9886               	bcf	3974,4,c	;volatile
 34179  011322  9A86               	bcf	3974,5,c	;volatile
 34180  011324  9C86               	bcf	3974,6,c	;volatile
 34181  011326  9E86               	bcf	3974,7,c	;volatile
 34182                           
 34183                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 34184  011328  9086               	bcf	3974,0,c	;volatile
 34185  01132A  9286               	bcf	3974,1,c	;volatile
 34186  01132C  9486               	bcf	3974,2,c	;volatile
 34187  01132E  9686               	bcf	3974,3,c	;volatile
 34188                           
 34189                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34190  011330  0100               	movlb	0	; () banked
 34191  011332  5161               	movf	(__flash_spi_tx_tx@command+1)& (0+255),w,b
 34192  011334  6E6A               	movwf	3946,c	;volatile
 34193                           
 34194                           ; BSR set to: 0
 34195                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34196  011336  C060  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 34197                           
 34198                           ; BSR set to: 0
 34199                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34200  01133A  0EFF               	movlw	255
 34201  01133C  0100               	movlb	0	; () banked
 34202  01133E  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 34203  011340  0EFF               	movlw	255
 34204  011342  0100               	movlb	0	; () banked
 34205  011344  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 34206  011346  C062  F06A         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 34207  01134A  C063  F06B         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 34208  01134E  0100               	movlb	0	; () banked
 34209  011350  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 34210  011352  0100               	movlb	0	; () banked
 34211  011354  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 34212  011356  0100               	movlb	0	; () banked
 34213  011358  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 34214  01135A  0100               	movlb	0	; () banked
 34215  01135C  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 34216  01135E  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 34217  011362  0100               	movlb	0	; () banked
 34218  011364  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 34219  011366  0100               	movlb	0	; () banked
 34220  011368  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 34221  01136A  6E66               	movwf	3942,c	;volatile
 34222                           
 34223                           ; BSR set to: 0
 34224                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34225  01136C  0100               	movlb	0	; () banked
 34226  01136E  0562               	decf	__flash_spi_tx_tx@command_length& (0+255),w,b
 34227  011370  6E67               	movwf	3943,c	;volatile
 34228                           
 34229                           ; BSR set to: 0
 34230                           ;flash.c: 169: LATDbits.LD7 = 0;
 34231  011372  9E8C               	bcf	3980,7,c	;volatile
 34232                           
 34233                           ; BSR set to: 0
 34234                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 34235  011374  8088               	bsf	3976,0,c	;volatile
 34236  011376                     l2756:
 34237  011376  B088               	btfsc	3976,0,c	;volatile
 34238  011378  D7FE               	goto	l2756
 34239                           
 34240                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34241  01137A  0100               	movlb	0	; () banked
 34242  01137C  5165               	movf	(__flash_spi_tx_tx@data+1)& (0+255),w,b
 34243  01137E  6E6A               	movwf	3946,c	;volatile
 34244                           
 34245                           ; BSR set to: 0
 34246                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34247  011380  C064  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 34248                           
 34249                           ; BSR set to: 0
 34250                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34251  011384  0EFF               	movlw	255
 34252  011386  0100               	movlb	0	; () banked
 34253  011388  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 34254  01138A  0EFF               	movlw	255
 34255  01138C  0100               	movlb	0	; () banked
 34256  01138E  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 34257  011390  C066  F06A         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 34258  011394  C067  F06B         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 34259  011398  0100               	movlb	0	; () banked
 34260  01139A  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 34261  01139C  0100               	movlb	0	; () banked
 34262  01139E  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 34263  0113A0  0100               	movlb	0	; () banked
 34264  0113A2  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 34265  0113A4  0100               	movlb	0	; () banked
 34266  0113A6  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 34267  0113A8  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 34268  0113AC  0100               	movlb	0	; () banked
 34269  0113AE  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 34270  0113B0  0100               	movlb	0	; () banked
 34271  0113B2  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 34272  0113B4  6E66               	movwf	3942,c	;volatile
 34273                           
 34274                           ; BSR set to: 0
 34275                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34276  0113B6  0100               	movlb	0	; () banked
 34277  0113B8  0566               	decf	__flash_spi_tx_tx@data_length& (0+255),w,b
 34278  0113BA  6E67               	movwf	3943,c	;volatile
 34279                           
 34280                           ; BSR set to: 0
 34281                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 34282  0113BC  8088               	bsf	3976,0,c	;volatile
 34283  0113BE                     l2759:
 34284  0113BE  B088               	btfsc	3976,0,c	;volatile
 34285  0113C0  D7FE               	goto	l2759
 34286                           
 34287                           ;flash.c: 188: LATDbits.LD7 = 1;
 34288  0113C2  8E8C               	bsf	3980,7,c	;volatile
 34289  0113C4  0012               	return		;funcret
 34290  0113C6                     __end_of__flash_spi_tx_tx:
 34291                           	opt stack 0
 34292                           tosu	equ	0xFFF
 34293                           tosh	equ	0xFFE
 34294                           tosl	equ	0xFFD
 34295                           pclath	equ	0xFFA
 34296                           tblptru	equ	0xFF8
 34297                           tblptrh	equ	0xFF7
 34298                           tblptrl	equ	0xFF6
 34299                           tablat	equ	0xFF5
 34300                           prodh	equ	0xFF4
 34301                           prodl	equ	0xFF3
 34302                           intcon	equ	0xFF2
 34303                           intcon2	equ	0xFF1
 34304                           intcon3	equ	0xFF0
 34305                           postinc0	equ	0xFEE
 34306                           wreg	equ	0xFE8
 34307                           indf1	equ	0xFE7
 34308                           postinc1	equ	0xFE6
 34309                           postdec1	equ	0xFE5
 34310                           plusw1	equ	0xFE3
 34311                           fsr1h	equ	0xFE2
 34312                           fsr1l	equ	0xFE1
 34313                           indf2	equ	0xFDF
 34314                           postinc2	equ	0xFDE
 34315                           postdec2	equ	0xFDD
 34316                           plusw2	equ	0xFDB
 34317                           fsr2h	equ	0xFDA
 34318                           fsr2l	equ	0xFD9
 34319                           status	equ	0xFD8
 34320                           
 34321 ;; *************** function __flash_write_page_from_buffer *****************
 34322 ;; Defined at:
 34323 ;;		line 419 in file "flash.c"
 34324 ;; Parameters:    Size  Location     Type
 34325 ;;  page            2   19[BANK0 ] unsigned int 
 34326 ;;  buffer          1   21[BANK0 ] enum E8331
 34327 ;; Auto vars:     Size  Location     Type
 34328 ;;  command         4   25[BANK0 ] unsigned char [4]
 34329 ;; Return value:  Size  Location     Type
 34330 ;;                  1    wreg      void 
 34331 ;; Registers used:
 34332 ;;		wreg, status,2, status,0, cstack
 34333 ;; Tracked objects:
 34334 ;;		On entry : 0/0
 34335 ;;		On exit  : 0/0
 34336 ;;		Unchanged: 0/0
 34337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34338 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34339 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34340 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34341 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34342 ;;Total ram usage:       10 bytes
 34343 ;; Hardware stack levels used:    1
 34344 ;; Hardware stack levels required when called:   13
 34345 ;; This function calls:
 34346 ;;		__flash_spi_tx
 34347 ;;		_flash_is_busy
 34348 ;; This function is called by:
 34349 ;;		_flash_page_write
 34350 ;;		_flash_partial_write
 34351 ;; This function uses a non-reentrant model
 34352 ;;
 34353                           
 34354                           	psect	text146
 34355  012500                     __ptext146:
 34356                           	opt stack 0
 34357  012500                     __flash_write_page_from_buffer:
 34358                           	opt stack 13
 34359  012500                     l17793:
 34360  012500  EC7E  F09F         	call	_flash_is_busy	;wreg free
 34361  012504  0900               	iorlw	0
 34362  012506  A4D8               	btfss	status,2,c
 34363  012508  D7FB               	goto	l17793
 34364                           
 34365                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 34366  01250A  0100               	movlb	0	; () banked
 34367  01250C  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34368  01250E  0100               	movlb	0	; () banked
 34369  012510  A4D8               	btfss	status,2,c
 34370  012512  D003               	goto	l17799
 34371                           
 34372                           ; BSR set to: 0
 34373                           ;flash.c: 428: command[0] = 0x83;
 34374  012514  0E83               	movlw	131
 34375  012516  0100               	movlb	0	; () banked
 34376  012518  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34377  01251A                     l17799:
 34378                           
 34379                           ; BSR set to: 0
 34380                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 34381  01251A  0100               	movlb	0	; () banked
 34382  01251C  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34383  01251E  A4D8               	btfss	status,2,c
 34384  012520  D003               	goto	l17803
 34385                           
 34386                           ; BSR set to: 0
 34387                           ;flash.c: 430: command[0] = 0x86;
 34388  012522  0E86               	movlw	134
 34389  012524  0100               	movlb	0	; () banked
 34390  012526  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34391  012528                     l17803:
 34392                           
 34393                           ; BSR set to: 0
 34394                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34395  012528  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34396  01252C  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34397  012530  0E07               	movlw	7
 34398  012532  0100               	movlb	0	; () banked
 34399  012534  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 34400  012536                     u16435:
 34401  012536  0100               	movlb	0	; () banked
 34402  012538  90D8               	bcf	status,0,c
 34403  01253A  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 34404  01253C  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 34405  01253E  0100               	movlb	0	; () banked
 34406  012540  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 34407  012542  D7F9               	goto	u16435
 34408  012544  0100               	movlb	0	; () banked
 34409  012546  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 34410  012548  0100               	movlb	0	; () banked
 34411  01254A  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 34412                           
 34413                           ; BSR set to: 0
 34414                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 34415  01254C  0100               	movlb	0	; () banked
 34416  01254E  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34417  012550  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34418  012552  0100               	movlb	0	; () banked
 34419  012554  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34420                           
 34421                           ;flash.c: 434: command[3] = 0x00;
 34422  012556  0E00               	movlw	0
 34423  012558  0100               	movlb	0	; () banked
 34424  01255A  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34425                           
 34426                           ; BSR set to: 0
 34427                           ;flash.c: 437: _flash_spi_tx(command, 4);
 34428  01255C  0E79               	movlw	low __flash_write_page_from_buffer@command
 34429  01255E  0100               	movlb	0	; () banked
 34430  012560  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34431  012562  0E00               	movlw	high __flash_write_page_from_buffer@command
 34432  012564  0100               	movlb	0	; () banked
 34433  012566  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34434  012568  0E00               	movlw	0
 34435  01256A  0100               	movlb	0	; () banked
 34436  01256C  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34437  01256E  0E04               	movlw	4
 34438  012570  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34439  012572  ECB7  F094         	call	__flash_spi_tx	;wreg free
 34440  012576  0012               	return		;funcret
 34441  012578                     __end_of__flash_write_page_from_buffer:
 34442                           	opt stack 0
 34443                           tosu	equ	0xFFF
 34444                           tosh	equ	0xFFE
 34445                           tosl	equ	0xFFD
 34446                           pclath	equ	0xFFA
 34447                           tblptru	equ	0xFF8
 34448                           tblptrh	equ	0xFF7
 34449                           tblptrl	equ	0xFF6
 34450                           tablat	equ	0xFF5
 34451                           prodh	equ	0xFF4
 34452                           prodl	equ	0xFF3
 34453                           intcon	equ	0xFF2
 34454                           intcon2	equ	0xFF1
 34455                           intcon3	equ	0xFF0
 34456                           postinc0	equ	0xFEE
 34457                           wreg	equ	0xFE8
 34458                           indf1	equ	0xFE7
 34459                           postinc1	equ	0xFE6
 34460                           postdec1	equ	0xFE5
 34461                           plusw1	equ	0xFE3
 34462                           fsr1h	equ	0xFE2
 34463                           fsr1l	equ	0xFE1
 34464                           indf2	equ	0xFDF
 34465                           postinc2	equ	0xFDE
 34466                           postdec2	equ	0xFDD
 34467                           plusw2	equ	0xFDB
 34468                           fsr2h	equ	0xFDA
 34469                           fsr2l	equ	0xFD9
 34470                           status	equ	0xFD8
 34471                           
 34472 ;; *************** function __flash_compare_page_to_buffer *****************
 34473 ;; Defined at:
 34474 ;;		line 337 in file "flash.c"
 34475 ;; Parameters:    Size  Location     Type
 34476 ;;  page            2   19[BANK0 ] unsigned int 
 34477 ;;  buffer          1   21[BANK0 ] enum E8331
 34478 ;; Auto vars:     Size  Location     Type
 34479 ;;  command         4   27[BANK0 ] unsigned char [4]
 34480 ;;  status          2   25[BANK0 ] unsigned int 
 34481 ;; Return value:  Size  Location     Type
 34482 ;;                  1    wreg      enum E8335
 34483 ;; Registers used:
 34484 ;;		wreg, status,2, status,0, cstack
 34485 ;; Tracked objects:
 34486 ;;		On entry : 0/0
 34487 ;;		On exit  : 0/0
 34488 ;;		Unchanged: 0/0
 34489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34490 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34491 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34492 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34493 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34494 ;;Total ram usage:       12 bytes
 34495 ;; Hardware stack levels used:    1
 34496 ;; Hardware stack levels required when called:   13
 34497 ;; This function calls:
 34498 ;;		__flash_get_status
 34499 ;;		__flash_spi_tx
 34500 ;;		_flash_is_busy
 34501 ;; This function is called by:
 34502 ;;		_flash_page_write
 34503 ;;		_flash_partial_write
 34504 ;; This function uses a non-reentrant model
 34505 ;;
 34506                           
 34507                           	psect	text147
 34508  01179C                     __ptext147:
 34509                           	opt stack 0
 34510  01179C                     __flash_compare_page_to_buffer:
 34511                           	opt stack 13
 34512  01179C                     l17743:
 34513  01179C  EC7E  F09F         	call	_flash_is_busy	;wreg free
 34514  0117A0  0900               	iorlw	0
 34515  0117A2  A4D8               	btfss	status,2,c
 34516  0117A4  D7FB               	goto	l17743
 34517                           
 34518                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 34519  0117A6  0100               	movlb	0	; () banked
 34520  0117A8  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34521  0117AA  0100               	movlb	0	; () banked
 34522  0117AC  A4D8               	btfss	status,2,c
 34523  0117AE  D003               	goto	l17749
 34524                           
 34525                           ; BSR set to: 0
 34526                           ;flash.c: 347: command[0] = 0x60;
 34527  0117B0  0E60               	movlw	96
 34528  0117B2  0100               	movlb	0	; () banked
 34529  0117B4  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34530  0117B6                     l17749:
 34531                           
 34532                           ; BSR set to: 0
 34533                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 34534  0117B6  0100               	movlb	0	; () banked
 34535  0117B8  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34536  0117BA  A4D8               	btfss	status,2,c
 34537  0117BC  D003               	goto	l17753
 34538                           
 34539                           ; BSR set to: 0
 34540                           ;flash.c: 349: command[0] = 0x60;
 34541  0117BE  0E60               	movlw	96
 34542  0117C0  0100               	movlb	0	; () banked
 34543  0117C2  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34544  0117C4                     l17753:
 34545                           
 34546                           ; BSR set to: 0
 34547                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34548  0117C4  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34549  0117C8  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34550  0117CC  0E07               	movlw	7
 34551  0117CE  0100               	movlb	0	; () banked
 34552  0117D0  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 34553  0117D2                     u16345:
 34554  0117D2  0100               	movlb	0	; () banked
 34555  0117D4  90D8               	bcf	status,0,c
 34556  0117D6  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 34557  0117D8  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 34558  0117DA  0100               	movlb	0	; () banked
 34559  0117DC  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 34560  0117DE  D7F9               	goto	u16345
 34561  0117E0  0100               	movlb	0	; () banked
 34562  0117E2  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 34563  0117E4  0100               	movlb	0	; () banked
 34564  0117E6  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 34565                           
 34566                           ; BSR set to: 0
 34567                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 34568  0117E8  0100               	movlb	0	; () banked
 34569  0117EA  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34570  0117EC  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34571  0117EE  0100               	movlb	0	; () banked
 34572  0117F0  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 34573                           
 34574                           ;flash.c: 353: command[3] = 0x00;
 34575  0117F2  0E00               	movlw	0
 34576  0117F4  0100               	movlb	0	; () banked
 34577  0117F6  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 34578                           
 34579                           ; BSR set to: 0
 34580                           ;flash.c: 356: _flash_spi_tx(command, 4);
 34581  0117F8  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 34582  0117FA  0100               	movlb	0	; () banked
 34583  0117FC  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34584  0117FE  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34585  011800  0100               	movlb	0	; () banked
 34586  011802  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34587  011804  0E00               	movlw	0
 34588  011806  0100               	movlb	0	; () banked
 34589  011808  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34590  01180A  0E04               	movlw	4
 34591  01180C  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34592  01180E  ECB7  F094         	call	__flash_spi_tx	;wreg free
 34593  011812                     l17759:
 34594  011812  EC7E  F09F         	call	_flash_is_busy	;wreg free
 34595  011816  0900               	iorlw	0
 34596  011818  A4D8               	btfss	status,2,c
 34597  01181A  D7FB               	goto	l17759
 34598                           
 34599                           ;flash.c: 362: status = _flash_get_status();
 34600  01181C  EC29  F09B         	call	__flash_get_status	;wreg free
 34601  011820  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34602  011824  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34603                           
 34604                           ;flash.c: 365: if(status & 0b0000000001000000)
 34605  011828  0100               	movlb	0	; () banked
 34606  01182A  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 34607  01182C  D002               	goto	l17771
 34608                           
 34609                           ; BSR set to: 0
 34610                           ;flash.c: 366: {
 34611                           ;flash.c: 368: return DATA_DOES_NOT_MATCH;
 34612  01182E  0E01               	movlw	1
 34613                           
 34614                           ; BSR set to: 0
 34615                           ;flash.c: 369: }
 34616                           
 34617                           ; BSR set to: 0
 34618  011830  0012               	return	
 34619  011832                     l17771:
 34620                           
 34621                           ; BSR set to: 0
 34622                           ;flash.c: 370: else
 34623                           ;flash.c: 371: {
 34624                           ;flash.c: 373: return DATA_DOES_MATCH;
 34625  011832  0E00               	movlw	0
 34626                           
 34627                           ; BSR set to: 0
 34628  011834  0012               	return	
 34629  011836                     __end_of__flash_compare_page_to_buffer:
 34630                           	opt stack 0
 34631                           tosu	equ	0xFFF
 34632                           tosh	equ	0xFFE
 34633                           tosl	equ	0xFFD
 34634                           pclath	equ	0xFFA
 34635                           tblptru	equ	0xFF8
 34636                           tblptrh	equ	0xFF7
 34637                           tblptrl	equ	0xFF6
 34638                           tablat	equ	0xFF5
 34639                           prodh	equ	0xFF4
 34640                           prodl	equ	0xFF3
 34641                           intcon	equ	0xFF2
 34642                           intcon2	equ	0xFF1
 34643                           intcon3	equ	0xFF0
 34644                           postinc0	equ	0xFEE
 34645                           wreg	equ	0xFE8
 34646                           indf1	equ	0xFE7
 34647                           postinc1	equ	0xFE6
 34648                           postdec1	equ	0xFE5
 34649                           plusw1	equ	0xFE3
 34650                           fsr1h	equ	0xFE2
 34651                           fsr1l	equ	0xFE1
 34652                           indf2	equ	0xFDF
 34653                           postinc2	equ	0xFDE
 34654                           postdec2	equ	0xFDD
 34655                           plusw2	equ	0xFDB
 34656                           fsr2h	equ	0xFDA
 34657                           fsr2l	equ	0xFD9
 34658                           status	equ	0xFD8
 34659                           
 34660 ;; *************** function _MSDReadHandler *****************
 34661 ;; Defined at:
 34662 ;;		line 1038 in file "usb_device_msd.c"
 34663 ;; Parameters:    Size  Location     Type
 34664 ;;		None
 34665 ;; Auto vars:     Size  Location     Type
 34666 ;;		None
 34667 ;; Return value:  Size  Location     Type
 34668 ;;                  1    wreg      unsigned char 
 34669 ;; Registers used:
 34670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34671 ;; Tracked objects:
 34672 ;;		On entry : 0/0
 34673 ;;		On exit  : 0/0
 34674 ;;		Unchanged: 0/0
 34675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34678 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34679 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34680 ;;Total ram usage:        4 bytes
 34681 ;; Hardware stack levels used:    1
 34682 ;; Hardware stack levels required when called:   16
 34683 ;; This function calls:
 34684 ;;		_ExternalFlash_SectorRead
 34685 ;;		_MSDCheckForErrorCases
 34686 ;;		_USBStallEndpoint
 34687 ;;		_USBTransferOnePacket
 34688 ;; This function is called by:
 34689 ;;		_MSDProcessCommandMediaPresent
 34690 ;; This function uses a non-reentrant model
 34691 ;;
 34692                           
 34693                           	psect	text148
 34694  00D694                     __ptext148:
 34695                           	opt stack 0
 34696  00D694                     _MSDReadHandler:
 34697                           	opt stack 10
 34698                           
 34699                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 34700                           
 34701                           ; BSR set to: 0
 34702                           ;incstack = 0
 34703  00D694  D0F4               	goto	l18189
 34704  00D696                     l686:
 34705                           
 34706                           ; BSR set to: 1
 34707                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 34708  00D696  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 34709                           
 34710                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 34711  00D69A  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 34712                           
 34713                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 34714  00D69E  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 34715                           
 34716                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 34717  00D6A2  C255  F1D9         	movff	_gblCBW+20,_LBA
 34718                           
 34719                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 34720  00D6A6  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 34721                           
 34722                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 34723  00D6AA  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 34724                           
 34725                           ; BSR set to: 1
 34726                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 34727  00D6AE  0100               	movlb	0	; () banked
 34728  00D6B0  51D9               	movf	_TransferLength& (0+255),w,b
 34729  00D6B2  0100               	movlb	0	; () banked
 34730  00D6B4  6F95               	movwf	??_MSDReadHandler& (0+255),b
 34731  00D6B6  0100               	movlb	0	; () banked
 34732  00D6B8  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 34733  00D6BA  0100               	movlb	0	; () banked
 34734  00D6BC  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 34735  00D6BE  0100               	movlb	0	; () banked
 34736  00D6C0  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 34737  00D6C2  0100               	movlb	0	; () banked
 34738  00D6C4  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 34739  00D6C6  0E09               	movlw	9
 34740  00D6C8                     u16865:
 34741  00D6C8  90D8               	bcf	status,0,c
 34742  00D6CA  0100               	movlb	0	; () banked
 34743  00D6CC  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 34744  00D6CE  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 34745  00D6D0  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 34746  00D6D2  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 34747  00D6D4  2EE8               	decfsz	wreg,f,c
 34748  00D6D6  D7F8               	goto	u16865
 34749  00D6D8  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 34750  00D6DC  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 34751  00D6E0  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 34752  00D6E4  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 34753  00D6E8  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 34754  00D6EC  0900               	iorlw	0
 34755  00D6EE  A4D8               	btfss	status,2,c
 34756  00D6F0  D0D8               	goto	l18191
 34757                           
 34758                           ;usb_device_msd.c: 1058: }
 34759                           ;usb_device_msd.c: 1060: MSDReadState = 0x01;
 34760                           
 34761                           ;usb_device_msd.c: 1056: {
 34762                           ;usb_device_msd.c: 1057: break;
 34763  00D6F2  0E01               	movlw	1
 34764  00D6F4  0101               	movlb	1	; () banked
 34765  00D6F6  6FF9               	movwf	_MSDReadState& (0+255),b
 34766  00D6F8                     l18125:
 34767                           
 34768                           ; BSR set to: 1
 34769                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 34770  00D6F8  0100               	movlb	0	; () banked
 34771  00D6FA  51D9               	movf	_TransferLength& (0+255),w,b
 34772  00D6FC  0100               	movlb	0	; () banked
 34773  00D6FE  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 34774  00D700  B4D8               	btfsc	status,2,c
 34775  00D702  D0B9               	goto	l18185
 34776                           
 34777                           ;usb_device_msd.c: 1068: }
 34778                           ;usb_device_msd.c: 1070: TransferLength.Val--;
 34779                           
 34780                           ; BSR set to: 1
 34781                           
 34782                           ;usb_device_msd.c: 1067: break;
 34783                           
 34784                           ; BSR set to: 0
 34785                           ;usb_device_msd.c: 1065: {
 34786                           ;usb_device_msd.c: 1066: MSDReadState = 0x00;
 34787  00D704  0100               	movlb	0	; () banked
 34788  00D706  07D9               	decf	_TransferLength& (0+255),f,b
 34789  00D708  A0D8               	btfss	status,0,c
 34790  00D70A  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 34791                           
 34792                           ; BSR set to: 0
 34793                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 34794  00D70C  0E02               	movlw	2
 34795  00D70E  0101               	movlb	1	; () banked
 34796  00D710  6FF9               	movwf	_MSDReadState& (0+255),b
 34797  00D712                     l18133:
 34798                           
 34799                           ; BSR set to: 1
 34800                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 34801  00D712  0100               	movlb	0	; () banked
 34802  00D714  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 34803  00D716  0100               	movlb	0	; () banked
 34804  00D718  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34805  00D71A  B4D8               	btfsc	status,2,c
 34806  00D71C  D007               	goto	l18139
 34807                           
 34808                           ; BSR set to: 0
 34809  00D71E  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 34810  00D722  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34811  00D726  0100               	movlb	0	; () banked
 34812  00D728  BEDF               	btfsc	indf2,7,c
 34813  00D72A  D0BB               	goto	l18191
 34814  00D72C                     l18139:
 34815                           
 34816                           ; BSR set to: 0
 34817                           ;usb_device_msd.c: 1079: }
 34818                           ;usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaParameters, LBA.Val, (uint8_t*
      +                          )&msd_buffer[0]) != 1)
 34819  00D72C  C2D0  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 34820  00D730  C2D1  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 34821  00D734  C1D9  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 34822  00D738  C1DA  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 34823  00D73C  C1DB  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 34824  00D740  C1DC  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 34825  00D744  0E00               	movlw	0
 34826  00D746  0100               	movlb	0	; () banked
 34827  00D748  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 34828  00D74A  0E06               	movlw	6
 34829  00D74C  0100               	movlb	0	; () banked
 34830  00D74E  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 34831  00D750  EE22  F0C7         	lfsr	2,_LUN+12
 34832  00D754  D801               	call	u16918
 34833  00D756  D00A               	goto	u16919
 34834  00D758                     u16918:
 34835  00D758  0005               	push	
 34836  00D75A  6EFA               	movwf	pclath,c
 34837  00D75C  50DE               	movf	postinc2,w,c
 34838  00D75E  6EFD               	movwf	tosl,c
 34839  00D760  50DE               	movf	postinc2,w,c
 34840  00D762  6EFE               	movwf	tosh,c
 34841  00D764  50DE               	movf	postinc2,w,c
 34842  00D766  6EFF               	movwf	tosu,c
 34843  00D768  50FA               	movf	pclath,w,c
 34844  00D76A  0012               	return		;indir
 34845  00D76C                     u16919:
 34846  00D76C  06E8               	decf	wreg,f,c
 34847  00D76E  B4D8               	btfsc	status,2,c
 34848  00D770  D01C               	goto	l18153
 34849                           
 34850                           ;usb_device_msd.c: 1084: {
 34851                           ;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 34852  00D772  0E64               	movlw	100
 34853  00D774  0101               	movlb	1	; () banked
 34854  00D776  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 34855  00D778  D003               	goto	l18147
 34856                           
 34857                           ; BSR set to: 1
 34858                           ;usb_device_msd.c: 1086: {
 34859                           ;usb_device_msd.c: 1087: MSDRetryAttempt++;
 34860  00D77A  0101               	movlb	1	; () banked
 34861  00D77C  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 34862                           
 34863                           ;usb_device_msd.c: 1088: break;
 34864  00D77E  D091               	goto	l18191
 34865  00D780                     l18147:
 34866                           
 34867                           ; BSR set to: 1
 34868                           ;usb_device_msd.c: 1090: else
 34869                           ;usb_device_msd.c: 1091: {
 34870                           ;usb_device_msd.c: 1100: msd_csw.bCSWStatus=0x02;
 34871  00D780  0E02               	movlw	2
 34872  00D782  010D               	movlb	13	; () banked
 34873  00D784  6F8C               	movwf	140,b	;volatile
 34874                           
 34875                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 34876  00D786  0102               	movlb	2	; () banked
 34877  00D788  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 34878  00D78A  0BF0               	andlw	-16
 34879  00D78C  0903               	iorlw	3
 34880  00D78E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 34881                           
 34882                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 34883  00D790  0E00               	movlw	0
 34884  00D792  0102               	movlb	2	; () banked
 34885  00D794  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34886                           
 34887                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 34888  00D796  0E00               	movlw	0
 34889  00D798  0102               	movlb	2	; () banked
 34890  00D79A  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34891                           
 34892                           ; BSR set to: 2
 34893                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 34894  00D79C  0E01               	movlw	1
 34895  00D79E  0100               	movlb	0	; () banked
 34896  00D7A0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34897  00D7A2  0E02               	movlw	2
 34898  00D7A4  ECC9  F076         	call	_USBStallEndpoint
 34899  00D7A8  D066               	goto	l18185
 34900  00D7AA                     l18153:
 34901                           
 34902                           ;usb_device_msd.c: 1110: }
 34903                           ;usb_device_msd.c: 1111: }
 34904                           ;usb_device_msd.c: 1113: LBA.Val++;
 34905  00D7AA  0E01               	movlw	1
 34906  00D7AC  0101               	movlb	1	; () banked
 34907  00D7AE  27D9               	addwf	_LBA& (0+255),f,b
 34908  00D7B0  0E00               	movlw	0
 34909  00D7B2  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 34910  00D7B4  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 34911  00D7B6  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 34912                           
 34913                           ; BSR set to: 1
 34914                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 34915  00D7B8  0E00               	movlw	0
 34916  00D7BA  010D               	movlb	13	; () banked
 34917  00D7BC  6F88               	movwf	136,b	;volatile
 34918  00D7BE  0E02               	movlw	2
 34919  00D7C0  6F89               	movwf	137,b	;volatile
 34920  00D7C2  0E00               	movlw	0
 34921  00D7C4  6F8A               	movwf	138,b	;volatile
 34922  00D7C6  0E00               	movlw	0
 34923  00D7C8  6F8B               	movwf	139,b	;volatile
 34924                           
 34925                           ; BSR set to: 13
 34926                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 34927  00D7CA  0E00               	movlw	0
 34928  00D7CC  0101               	movlb	1	; () banked
 34929  00D7CE  6FEB               	movwf	_ptrNextData& (0+255),b
 34930  00D7D0  0E06               	movlw	6
 34931  00D7D2  0101               	movlb	1	; () banked
 34932  00D7D4  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 34933                           
 34934                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 34935  00D7D6  0E03               	movlw	3
 34936  00D7D8  0101               	movlb	1	; () banked
 34937  00D7DA  6FF9               	movwf	_MSDReadState& (0+255),b
 34938  00D7DC                     l18159:
 34939                           
 34940                           ; BSR set to: 1
 34941                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 34942  00D7DC  010D               	movlb	13	; () banked
 34943  00D7DE  5188               	movf	136,w,b	;volatile
 34944  00D7E0  010D               	movlb	13	; () banked
 34945  00D7E2  1189               	iorwf	137,w,b	;volatile
 34946  00D7E4  010D               	movlb	13	; () banked
 34947  00D7E6  118A               	iorwf	138,w,b	;volatile
 34948  00D7E8  010D               	movlb	13	; () banked
 34949  00D7EA  118B               	iorwf	139,w,b	;volatile
 34950  00D7EC  A4D8               	btfss	status,2,c
 34951  00D7EE  D002               	goto	l18163
 34952                           
 34953                           ; BSR set to: 13
 34954                           ;usb_device_msd.c: 1124: {
 34955                           ;usb_device_msd.c: 1125: MSDReadState = 0x01;
 34956  00D7F0  0E01               	movlw	1
 34957  00D7F2  D042               	goto	L29
 34958  00D7F4                     l18163:
 34959                           
 34960                           ;usb_device_msd.c: 1127: }
 34961                           ;usb_device_msd.c: 1129: MSDReadState = 0x04;
 34962  00D7F4  0E04               	movlw	4
 34963  00D7F6  0101               	movlb	1	; () banked
 34964  00D7F8  6FF9               	movwf	_MSDReadState& (0+255),b
 34965  00D7FA                     l18165:
 34966                           
 34967                           ; BSR set to: 1
 34968                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 34969  00D7FA  0100               	movlb	0	; () banked
 34970  00D7FC  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 34971  00D7FE  0100               	movlb	0	; () banked
 34972  00D800  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34973  00D802  B4D8               	btfsc	status,2,c
 34974  00D804  D007               	goto	l18171
 34975                           
 34976                           ; BSR set to: 0
 34977  00D806  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 34978  00D80A  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34979  00D80E  0100               	movlb	0	; () banked
 34980  00D810  BEDF               	btfsc	indf2,7,c
 34981  00D812  D047               	goto	l18191
 34982  00D814                     l18171:
 34983                           
 34984                           ; BSR set to: 0
 34985                           ;usb_device_msd.c: 1139: }
 34986                           ;usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket(2u,1,ptrNextData,64u);
 34987  00D814  0E01               	movlw	1
 34988  00D816  0100               	movlb	0	; () banked
 34989  00D818  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34990  00D81A  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 34991  00D81E  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 34992  00D822  0E40               	movlw	64
 34993  00D824  0100               	movlb	0	; () banked
 34994  00D826  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34995  00D828  0E02               	movlw	2
 34996  00D82A  EC6B  F077         	call	_USBTransferOnePacket
 34997  00D82E  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34998  00D832  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34999                           
 35000                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 35001  00D836  0E03               	movlw	3
 35002  00D838  0101               	movlb	1	; () banked
 35003  00D83A  6FF9               	movwf	_MSDReadState& (0+255),b
 35004                           
 35005                           ; BSR set to: 1
 35006                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 35007  00D83C  0E40               	movlw	64
 35008  00D83E  0102               	movlb	2	; () banked
 35009  00D840  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 35010  00D842  0E00               	movlw	0
 35011  00D844  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 35012  00D846  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 35013  00D848  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 35014                           
 35015                           ; BSR set to: 2
 35016                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 35017  00D84A  0E40               	movlw	64
 35018  00D84C  010D               	movlb	13	; () banked
 35019  00D84E  5F88               	subwf	136,f,b	;volatile
 35020  00D850  0E00               	movlw	0
 35021  00D852  5B89               	subwfb	137,f,b	;volatile
 35022  00D854  5B8A               	subwfb	138,f,b	;volatile
 35023  00D856  5B8B               	subwfb	139,f,b	;volatile
 35024                           
 35025                           ; BSR set to: 13
 35026                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 35027  00D858  0E40               	movlw	64
 35028  00D85A  0101               	movlb	1	; () banked
 35029  00D85C  27EB               	addwf	_ptrNextData& (0+255),f,b
 35030  00D85E  0E00               	movlw	0
 35031  00D860  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35032                           
 35033                           ;usb_device_msd.c: 1149: break;
 35034  00D862  D01F               	goto	l18191
 35035  00D864                     l18181:
 35036                           
 35037                           ; BSR set to: 1
 35038                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 35039  00D864  0E02               	movlw	2
 35040  00D866  010D               	movlb	13	; () banked
 35041  00D868  6F8C               	movwf	140,b	;volatile
 35042                           
 35043                           ; BSR set to: 13
 35044                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 35045  00D86A  0E01               	movlw	1
 35046  00D86C  0100               	movlb	0	; () banked
 35047  00D86E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35048  00D870  0E02               	movlw	2
 35049  00D872  ECC9  F076         	call	_USBStallEndpoint
 35050  00D876                     l18185:
 35051                           
 35052                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 35053  00D876  0E00               	movlw	0
 35054  00D878                     L29:
 35055  00D878  0101               	movlb	1	; () banked
 35056  00D87A  6FF9               	movwf	_MSDReadState& (0+255),b
 35057                           
 35058                           ; BSR set to: 1
 35059                           ;usb_device_msd.c: 1159: }
 35060                           
 35061                           ;usb_device_msd.c: 1158: break;
 35062  00D87C  D012               	goto	l18191
 35063  00D87E                     l18189:
 35064  00D87E  0101               	movlb	1	; () banked
 35065  00D880  51F9               	movf	_MSDReadState& (0+255),w,b
 35066                           
 35067                           ; Switch size 1, requested type "space"
 35068                           ; Number of cases is 5, Range of values is 0 to 4
 35069                           ; switch strategies available:
 35070                           ; Name         Instructions Cycles
 35071                           ; simple_byte           16     9 (average)
 35072                           ;	Chosen strategy is simple_byte
 35073  00D882  0A00               	xorlw	0	; case 0
 35074  00D884  B4D8               	btfsc	status,2,c
 35075  00D886  D707               	goto	l686
 35076  00D888  0A01               	xorlw	1	; case 1
 35077  00D88A  B4D8               	btfsc	status,2,c
 35078  00D88C  D735               	goto	l18125
 35079  00D88E  0A03               	xorlw	3	; case 2
 35080  00D890  B4D8               	btfsc	status,2,c
 35081  00D892  D73F               	goto	l18133
 35082  00D894  0A01               	xorlw	1	; case 3
 35083  00D896  B4D8               	btfsc	status,2,c
 35084  00D898  D7A1               	goto	l18159
 35085  00D89A  0A07               	xorlw	7	; case 4
 35086  00D89C  B4D8               	btfsc	status,2,c
 35087  00D89E  D7AD               	goto	l18165
 35088  00D8A0  D7E1               	goto	l18181
 35089  00D8A2                     l18191:
 35090                           
 35091                           ;usb_device_msd.c: 1161: return MSDReadState;
 35092  00D8A2  0101               	movlb	1	; () banked
 35093  00D8A4  51F9               	movf	_MSDReadState& (0+255),w,b
 35094  00D8A6  0012               	return	
 35095  00D8A8                     __end_of_MSDReadHandler:
 35096                           	opt stack 0
 35097                           tosu	equ	0xFFF
 35098                           tosh	equ	0xFFE
 35099                           tosl	equ	0xFFD
 35100                           pclath	equ	0xFFA
 35101                           tblptru	equ	0xFF8
 35102                           tblptrh	equ	0xFF7
 35103                           tblptrl	equ	0xFF6
 35104                           tablat	equ	0xFF5
 35105                           prodh	equ	0xFF4
 35106                           prodl	equ	0xFF3
 35107                           intcon	equ	0xFF2
 35108                           intcon2	equ	0xFF1
 35109                           intcon3	equ	0xFF0
 35110                           postinc0	equ	0xFEE
 35111                           wreg	equ	0xFE8
 35112                           indf1	equ	0xFE7
 35113                           postinc1	equ	0xFE6
 35114                           postdec1	equ	0xFE5
 35115                           plusw1	equ	0xFE3
 35116                           fsr1h	equ	0xFE2
 35117                           fsr1l	equ	0xFE1
 35118                           indf2	equ	0xFDF
 35119                           postinc2	equ	0xFDE
 35120                           postdec2	equ	0xFDD
 35121                           plusw2	equ	0xFDB
 35122                           fsr2h	equ	0xFDA
 35123                           fsr2l	equ	0xFD9
 35124                           status	equ	0xFD8
 35125                           
 35126 ;; *************** function _MSDCheckForErrorCases *****************
 35127 ;; Defined at:
 35128 ;;		line 1434 in file "usb_device_msd.c"
 35129 ;; Parameters:    Size  Location     Type
 35130 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 35131 ;; Auto vars:     Size  Location     Type
 35132 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 35133 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 35134 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 35135 ;; Return value:  Size  Location     Type
 35136 ;;                  1    wreg      unsigned char 
 35137 ;; Registers used:
 35138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35139 ;; Tracked objects:
 35140 ;;		On entry : 0/0
 35141 ;;		On exit  : 0/0
 35142 ;;		Unchanged: 0/0
 35143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35144 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35145 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35147 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35148 ;;Total ram usage:        7 bytes
 35149 ;; Hardware stack levels used:    1
 35150 ;; Hardware stack levels required when called:   12
 35151 ;; This function calls:
 35152 ;;		_MSDErrorHandler
 35153 ;; This function is called by:
 35154 ;;		_MSDProcessCommandMediaPresent
 35155 ;;		_MSDReadHandler
 35156 ;;		_MSDWriteHandler
 35157 ;; This function uses a non-reentrant model
 35158 ;;
 35159                           
 35160                           	psect	text149
 35161  00F26E                     __ptext149:
 35162                           	opt stack 0
 35163  00F26E                     _MSDCheckForErrorCases:
 35164                           	opt stack 13
 35165                           
 35166                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;
 35167                           ;usb_device_msd.c: 1437: bool HostMoreDataThanDevice;
 35168                           ;usb_device_msd.c: 1438: bool DeviceNoData;
 35169                           ;usb_device_msd.c: 1441: if(DeviceBytes == 0)
 35170                           
 35171                           ; BSR set to: 1
 35172                           ;incstack = 0
 35173  00F26E  0100               	movlb	0	; () banked
 35174  00F270  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35175  00F272  0100               	movlb	0	; () banked
 35176  00F274  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35177  00F276  0100               	movlb	0	; () banked
 35178  00F278  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35179  00F27A  0100               	movlb	0	; () banked
 35180  00F27C  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35181  00F27E  A4D8               	btfss	status,2,c
 35182  00F280  D002               	goto	l17957
 35183                           
 35184                           ; BSR set to: 0
 35185                           ;usb_device_msd.c: 1442: {
 35186                           ;usb_device_msd.c: 1443: DeviceNoData = 1;
 35187  00F282  0E01               	movlw	1
 35188  00F284  D001               	goto	L30
 35189  00F286                     l17957:
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;usb_device_msd.c: 1445: else
 35193                           ;usb_device_msd.c: 1446: {
 35194                           ;usb_device_msd.c: 1447: DeviceNoData = 0;
 35195  00F286  0E00               	movlw	0
 35196  00F288                     L30:
 35197  00F288  0100               	movlb	0	; () banked
 35198  00F28A  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 35199                           
 35200                           ; BSR set to: 0
 35201                           ;usb_device_msd.c: 1448: }
 35202                           ;usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoData == 1))
 35203                           
 35204                           ; BSR set to: 0
 35205  00F28C  0100               	movlb	0	; () banked
 35206  00F28E  05E5               	decf	_MSDHostNoData& (0+255),w,b
 35207  00F290  A4D8               	btfss	status,2,c
 35208  00F292  D006               	goto	l17967
 35209                           
 35210                           ; BSR set to: 0
 35211  00F294  0100               	movlb	0	; () banked
 35212  00F296  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35213  00F298  A4D8               	btfss	status,2,c
 35214  00F29A  D002               	goto	l17967
 35215                           
 35216                           ; BSR set to: 0
 35217                           ;usb_device_msd.c: 1454: {
 35218                           ;usb_device_msd.c: 1455: return 0x00;
 35219  00F29C  0E00               	movlw	0
 35220                           
 35221                           ; BSR set to: 0
 35222  00F29E  0012               	return	
 35223  00F2A0                     l17967:
 35224                           
 35225                           ; BSR set to: 0
 35226                           ;usb_device_msd.c: 1456: }
 35227                           ;usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == DeviceBytes)
 35228  00F2A0  0100               	movlb	0	; () banked
 35229  00F2A2  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35230  00F2A4  0102               	movlb	2	; () banked
 35231  00F2A6  1949               	xorwf	(_gblCBW+8)& (0+255),w,b
 35232  00F2A8  E122               	bnz	l17983
 35233  00F2AA  0100               	movlb	0	; () banked
 35234  00F2AC  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35235  00F2AE  0102               	movlb	2	; () banked
 35236  00F2B0  194A               	xorwf	(_gblCBW+9)& (0+255),w,b
 35237  00F2B2  E11D               	bnz	l17983
 35238  00F2B4  0100               	movlb	0	; () banked
 35239  00F2B6  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35240  00F2B8  0102               	movlb	2	; () banked
 35241  00F2BA  194B               	xorwf	(_gblCBW+10)& (0+255),w,b
 35242  00F2BC  E118               	bnz	l17983
 35243  00F2BE  0100               	movlb	0	; () banked
 35244  00F2C0  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35245  00F2C2  0102               	movlb	2	; () banked
 35246  00F2C4  194C               	xorwf	(_gblCBW+11)& (0+255),w,b
 35247  00F2C6  A4D8               	btfss	status,2,c
 35248  00F2C8  D012               	goto	l17983
 35249                           
 35250                           ; BSR set to: 2
 35251                           ;usb_device_msd.c: 1460: {
 35252                           ;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 35253  00F2CA  0100               	movlb	0	; () banked
 35254  00F2CC  05E7               	decf	_MSD_State& (0+255),w,b
 35255  00F2CE  A4D8               	btfss	status,2,c
 35256  00F2D0  D007               	goto	l17977
 35257                           
 35258                           ; BSR set to: 0
 35259                           ;usb_device_msd.c: 1463: {
 35260                           ;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 35261  00F2D2  0E2A               	movlw	42
 35262  00F2D4  0100               	movlb	0	; () banked
 35263  00F2D6  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35264  00F2D8  B4D8               	btfsc	status,2,c
 35265  00F2DA  D009               	goto	l17983
 35266                           
 35267                           ; BSR set to: 0
 35268                           ;usb_device_msd.c: 1466: {
 35269                           ;usb_device_msd.c: 1467: return 0x00;
 35270  00F2DC  0E00               	movlw	0
 35271                           
 35272                           ; BSR set to: 0
 35273  00F2DE  0012               	return	
 35274  00F2E0                     l17977:
 35275                           
 35276                           ; BSR set to: 0
 35277                           ;usb_device_msd.c: 1470: else
 35278                           ;usb_device_msd.c: 1471: {
 35279                           ;usb_device_msd.c: 1474: if(MSDCommandState == 0x2a)
 35280  00F2E0  0E2A               	movlw	42
 35281  00F2E2  0100               	movlb	0	; () banked
 35282  00F2E4  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35283  00F2E6  A4D8               	btfss	status,2,c
 35284  00F2E8  D002               	goto	l17983
 35285                           
 35286                           ; BSR set to: 0
 35287                           ;usb_device_msd.c: 1475: {
 35288                           ;usb_device_msd.c: 1476: return 0x00;
 35289  00F2EA  0E00               	movlw	0
 35290                           
 35291                           ; BSR set to: 0
 35292  00F2EC  0012               	return	
 35293  00F2EE                     l17983:
 35294                           
 35295                           ;usb_device_msd.c: 1477: }
 35296                           ;usb_device_msd.c: 1478: }
 35297                           ;usb_device_msd.c: 1479: }
 35298                           ;usb_device_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 35299  00F2EE  0102               	movlb	2	; () banked
 35300  00F2F0  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35301  00F2F2  0100               	movlb	0	; () banked
 35302  00F2F4  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35303  00F2F6  0102               	movlb	2	; () banked
 35304  00F2F8  514A               	movf	(_gblCBW+9)& (0+255),w,b
 35305  00F2FA  0100               	movlb	0	; () banked
 35306  00F2FC  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35307  00F2FE  0102               	movlb	2	; () banked
 35308  00F300  514B               	movf	(_gblCBW+10)& (0+255),w,b
 35309  00F302  0100               	movlb	0	; () banked
 35310  00F304  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35311  00F306  0102               	movlb	2	; () banked
 35312  00F308  514C               	movf	(_gblCBW+11)& (0+255),w,b
 35313  00F30A  0100               	movlb	0	; () banked
 35314  00F30C  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35315  00F30E  B0D8               	btfsc	status,0,c
 35316  00F310  D002               	goto	l17987
 35317                           
 35318                           ; BSR set to: 0
 35319                           ;usb_device_msd.c: 1486: {
 35320                           ;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 35321  00F312  0E01               	movlw	1
 35322  00F314  D001               	goto	L31
 35323  00F316                     l17987:
 35324                           
 35325                           ; BSR set to: 0
 35326                           ;usb_device_msd.c: 1489: else
 35327                           ;usb_device_msd.c: 1490: {
 35328                           ;usb_device_msd.c: 1491: HostMoreDataThanDevice = 0;
 35329  00F316  0E00               	movlw	0
 35330  00F318                     L31:
 35331  00F318  0100               	movlb	0	; () banked
 35332  00F31A  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 35333                           
 35334                           ; BSR set to: 0
 35335                           ;usb_device_msd.c: 1492: }
 35336                           ;usb_device_msd.c: 1495: if(MSD_State == 0x02)
 35337                           
 35338                           ; BSR set to: 0
 35339  00F31C  0E02               	movlw	2
 35340  00F31E  0100               	movlb	0	; () banked
 35341  00F320  19E7               	xorwf	_MSD_State& (0+255),w,b
 35342  00F322  A4D8               	btfss	status,2,c
 35343  00F324  D01E               	goto	l18011
 35344                           
 35345                           ; BSR set to: 0
 35346                           ;usb_device_msd.c: 1496: {
 35347                           ;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (DeviceNoData == 0))
 35348  00F326  0E2A               	movlw	42
 35349  00F328  0100               	movlb	0	; () banked
 35350  00F32A  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35351  00F32C  B4D8               	btfsc	status,2,c
 35352  00F32E  D007               	goto	l17997
 35353                           
 35354                           ; BSR set to: 0
 35355  00F330  0100               	movlb	0	; () banked
 35356  00F332  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35357  00F334  0100               	movlb	0	; () banked
 35358  00F336  A4D8               	btfss	status,2,c
 35359  00F338  D002               	goto	l17997
 35360  00F33A                     l17995:
 35361                           
 35362                           ; BSR set to: 0
 35363                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 35364  00F33A  0E05               	movlw	5
 35365  00F33C  D009               	goto	L33
 35366  00F33E                     l17997:
 35367                           
 35368                           ; BSR set to: 0
 35369                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 35370  00F33E  0100               	movlb	0	; () banked
 35371  00F340  05E5               	decf	_MSDHostNoData& (0+255),w,b
 35372  00F342  B4D8               	btfsc	status,2,c
 35373  00F344  D017               	goto	l18017
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 35377                           
 35378                           ; BSR set to: 0
 35379                           
 35380                           ; BSR set to: 0
 35381                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 35382  00F346  0100               	movlb	0	; () banked
 35383  00F348  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35384  00F34A  A4D8               	btfss	status,2,c
 35385  00F34C  D004               	goto	l18005
 35386  00F34E  D007               	goto	l18007
 35387  00F350                     L33:
 35388  00F350  0100               	movlb	0	; () banked
 35389  00F352  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 35390  00F354  D01D               	goto	l18029
 35391  00F356                     l18005:
 35392                           
 35393                           ; BSR set to: 0
 35394                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 35395  00F356  0100               	movlb	0	; () banked
 35396  00F358  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35397  00F35A  A4D8               	btfss	status,2,c
 35398  00F35C  D7EE               	goto	l17995
 35399  00F35E                     l18007:
 35400                           
 35401                           ; BSR set to: 0
 35402                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 35403  00F35E  0E04               	movlw	4
 35404  00F360  D7F7               	goto	L33
 35405  00F362                     l18011:
 35406                           
 35407                           ; BSR set to: 0
 35408                           ;usb_device_msd.c: 1513: else
 35409                           ;usb_device_msd.c: 1514: {
 35410                           ;usb_device_msd.c: 1516: if(MSDCommandState == 0x2a)
 35411  00F362  0E2A               	movlw	42
 35412  00F364  0100               	movlb	0	; () banked
 35413  00F366  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35414  00F368  B4D8               	btfsc	status,2,c
 35415  00F36A  D010               	goto	l18027
 35416                           
 35417                           ; BSR set to: 0
 35418                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35419                           
 35420                           ; BSR set to: 0
 35421                           
 35422                           ; BSR set to: 0
 35423                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35424  00F36C  0100               	movlb	0	; () banked
 35425  00F36E  05E5               	decf	_MSDHostNoData& (0+255),w,b
 35426  00F370  A4D8               	btfss	status,2,c
 35427  00F372  D002               	goto	l18019
 35428  00F374                     l18017:
 35429                           
 35430                           ; BSR set to: 0
 35431                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35432  00F374  0E01               	movlw	1
 35433  00F376  D7EC               	goto	L33
 35434  00F378                     l18019:
 35435                           
 35436                           ; BSR set to: 0
 35437                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35438  00F378  0100               	movlb	0	; () banked
 35439  00F37A  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35440  00F37C  B4D8               	btfsc	status,2,c
 35441  00F37E  D004               	goto	l18025
 35442                           
 35443                           ; BSR set to: 0
 35444                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35445                           
 35446                           ; BSR set to: 0
 35447                           
 35448                           ; BSR set to: 0
 35449                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35450  00F380  0100               	movlb	0	; () banked
 35451  00F382  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35452  00F384  A4D8               	btfss	status,2,c
 35453  00F386  D002               	goto	l18027
 35454  00F388                     l18025:
 35455                           
 35456                           ; BSR set to: 0
 35457                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35458  00F388  0E02               	movlw	2
 35459  00F38A  D7E2               	goto	L33
 35460  00F38C                     l18027:
 35461                           
 35462                           ; BSR set to: 0
 35463                           ;usb_device_msd.c: 1528: else
 35464                           ;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35465  00F38C  0E03               	movlw	3
 35466  00F38E  D7E0               	goto	L33
 35467  00F390                     l18029:
 35468                           
 35469                           ; BSR set to: 0
 35470                           ;usb_device_msd.c: 1530: }
 35471                           ;usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35472  00F390  0100               	movlb	0	; () banked
 35473  00F392  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35474  00F394  EC05  F078         	call	_MSDErrorHandler
 35475                           
 35476                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35477  00F398  0100               	movlb	0	; () banked
 35478  00F39A  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35479  00F39C  0012               	return	
 35480  00F39E                     __end_of_MSDCheckForErrorCases:
 35481                           	opt stack 0
 35482                           tosu	equ	0xFFF
 35483                           tosh	equ	0xFFE
 35484                           tosl	equ	0xFFD
 35485                           pclath	equ	0xFFA
 35486                           tblptru	equ	0xFF8
 35487                           tblptrh	equ	0xFF7
 35488                           tblptrl	equ	0xFF6
 35489                           tablat	equ	0xFF5
 35490                           prodh	equ	0xFF4
 35491                           prodl	equ	0xFF3
 35492                           intcon	equ	0xFF2
 35493                           intcon2	equ	0xFF1
 35494                           intcon3	equ	0xFF0
 35495                           postinc0	equ	0xFEE
 35496                           wreg	equ	0xFE8
 35497                           indf1	equ	0xFE7
 35498                           postinc1	equ	0xFE6
 35499                           postdec1	equ	0xFE5
 35500                           plusw1	equ	0xFE3
 35501                           fsr1h	equ	0xFE2
 35502                           fsr1l	equ	0xFE1
 35503                           indf2	equ	0xFDF
 35504                           postinc2	equ	0xFDE
 35505                           postdec2	equ	0xFDD
 35506                           plusw2	equ	0xFDB
 35507                           fsr2h	equ	0xFDA
 35508                           fsr2l	equ	0xFD9
 35509                           status	equ	0xFD8
 35510                           
 35511 ;; *************** function _MSDErrorHandler *****************
 35512 ;; Defined at:
 35513 ;;		line 1577 in file "usb_device_msd.c"
 35514 ;; Parameters:    Size  Location     Type
 35515 ;;  ErrorCase       1    wreg     unsigned char 
 35516 ;; Auto vars:     Size  Location     Type
 35517 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35518 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35519 ;; Return value:  Size  Location     Type
 35520 ;;                  1    wreg      void 
 35521 ;; Registers used:
 35522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35523 ;; Tracked objects:
 35524 ;;		On entry : 0/0
 35525 ;;		On exit  : 0/0
 35526 ;;		Unchanged: 0/0
 35527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35531 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35532 ;;Total ram usage:        2 bytes
 35533 ;; Hardware stack levels used:    1
 35534 ;; Hardware stack levels required when called:   11
 35535 ;; This function calls:
 35536 ;;		_ResetSenseData
 35537 ;;		_USBStallEndpoint
 35538 ;; This function is called by:
 35539 ;;		_MSDProcessCommandMediaAbsent
 35540 ;;		_MSDProcessCommandMediaPresent
 35541 ;;		_MSDCheckForErrorCases
 35542 ;; This function uses a non-reentrant model
 35543 ;;
 35544                           
 35545                           	psect	text150
 35546  00F00A                     __ptext150:
 35547                           	opt stack 0
 35548  00F00A                     _MSDErrorHandler:
 35549                           	opt stack 13
 35550                           
 35551                           ; BSR set to: 0
 35552                           ;incstack = 0
 35553                           ;MSDErrorHandler@ErrorCase stored from wreg
 35554  00F00A  0100               	movlb	0	; () banked
 35555  00F00C  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35556                           
 35557                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;
 35558                           ;usb_device_msd.c: 1583: if((((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          InHandle & 0x80) != 0x00))) || (((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)US
      +                          BMSDOutHandle & 0x80) != 0x00))))
 35559  00F00E  0100               	movlb	0	; () banked
 35560  00F010  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 35561  00F012  0100               	movlb	0	; () banked
 35562  00F014  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35563  00F016  B4D8               	btfsc	status,2,c
 35564  00F018  D007               	goto	l17873
 35565                           
 35566                           ; BSR set to: 0
 35567  00F01A  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 35568  00F01E  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35569  00F022  0100               	movlb	0	; () banked
 35570  00F024  BEDF               	btfsc	indf2,7,c
 35571  00F026  0012               	return	
 35572  00F028                     l17873:
 35573                           
 35574                           ; BSR set to: 0
 35575  00F028  0100               	movlb	0	; () banked
 35576  00F02A  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 35577  00F02C  0100               	movlb	0	; () banked
 35578  00F02E  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35579  00F030  B4D8               	btfsc	status,2,c
 35580  00F032  D007               	goto	l761
 35581                           
 35582                           ; BSR set to: 0
 35583  00F034  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35584  00F038  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35585  00F03C  0100               	movlb	0	; () banked
 35586  00F03E  BEDF               	btfsc	indf2,7,c
 35587  00F040  0012               	return	
 35588  00F042                     l761:
 35589                           
 35590                           ; BSR set to: 0
 35591                           ;usb_device_msd.c: 1586: }
 35592                           ;usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 35593  00F042  C0E7  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 35594                           
 35595                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 35596  00F046  0100               	movlb	0	; () banked
 35597  00F048  69E6               	setf	_MSDCommandState& (0+255),b
 35598                           
 35599                           ; BSR set to: 0
 35600                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 35601  00F04A  0E00               	movlw	0
 35602  00F04C  0101               	movlb	1	; () banked
 35603  00F04E  6FF9               	movwf	_MSDReadState& (0+255),b
 35604                           
 35605                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 35606  00F050  0E00               	movlw	0
 35607  00F052  6E1F               	movwf	_MSDWriteState,c
 35608                           
 35609                           ; BSR set to: 1
 35610                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 35611  00F054  C249  FD88         	movff	_gblCBW+8,3464	;volatile
 35612  00F058  C24A  FD89         	movff	_gblCBW+9,3465	;volatile
 35613  00F05C  C24B  FD8A         	movff	_gblCBW+10,3466	;volatile
 35614  00F060  C24C  FD8B         	movff	_gblCBW+11,3467	;volatile
 35615                           
 35616                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 35617  00F064  0E01               	movlw	1
 35618  00F066  010D               	movlb	13	; () banked
 35619  00F068  6F8C               	movwf	140,b	;volatile
 35620                           
 35621                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 35622  00F06A  0E03               	movlw	3
 35623  00F06C  0100               	movlb	0	; () banked
 35624  00F06E  6FE7               	movwf	_MSD_State& (0+255),b
 35625                           
 35626                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 35627  00F070  D050               	goto	l17913
 35628  00F072                     l17881:
 35629                           
 35630                           ; BSR set to: 0
 35631                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 35632  00F072  0E02               	movlw	2
 35633  00F074  010D               	movlb	13	; () banked
 35634  00F076  6F8C               	movwf	140,b	;volatile
 35635                           
 35636                           ;usb_device_msd.c: 1607: break;
 35637  00F078  0012               	return	
 35638  00F07A                     l17883:
 35639                           
 35640                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 35641  00F07A  0E01               	movlw	1
 35642  00F07C  0100               	movlb	0	; () banked
 35643  00F07E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35644  00F080  0E02               	movlw	2
 35645  00F082  ECC9  F076         	call	_USBStallEndpoint
 35646                           
 35647                           ;usb_device_msd.c: 1611: break;
 35648  00F086  0012               	return	
 35649  00F088                     l17885:
 35650                           
 35651                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 35652  00F088  0E02               	movlw	2
 35653  00F08A  010D               	movlb	13	; () banked
 35654  00F08C  6F8C               	movwf	140,b	;volatile
 35655                           
 35656                           ; BSR set to: 13
 35657                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 35658  00F08E  0E01               	movlw	1
 35659  00F090  0100               	movlb	0	; () banked
 35660  00F092  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35661  00F094  0E02               	movlw	2
 35662  00F096  ECC9  F076         	call	_USBStallEndpoint
 35663                           
 35664                           ;usb_device_msd.c: 1616: break;
 35665  00F09A  0012               	return	
 35666  00F09C                     l17889:
 35667                           
 35668                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 35669  00F09C  0E00               	movlw	0
 35670  00F09E  0100               	movlb	0	; () banked
 35671  00F0A0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35672  00F0A2  0E02               	movlw	2
 35673  00F0A4  ECC9  F076         	call	_USBStallEndpoint
 35674                           
 35675                           ;usb_device_msd.c: 1620: break;
 35676  00F0A8  0012               	return	
 35677  00F0AA                     l17891:
 35678                           
 35679                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 35680  00F0AA  0E02               	movlw	2
 35681  00F0AC  010D               	movlb	13	; () banked
 35682  00F0AE  6F8C               	movwf	140,b	;volatile
 35683                           
 35684                           ; BSR set to: 13
 35685                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 35686  00F0B0  0E00               	movlw	0
 35687  00F0B2  0100               	movlb	0	; () banked
 35688  00F0B4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35689  00F0B6  0E02               	movlw	2
 35690  00F0B8  ECC9  F076         	call	_USBStallEndpoint
 35691                           
 35692                           ;usb_device_msd.c: 1625: break;
 35693  00F0BC  0012               	return	
 35694  00F0BE                     l17895:
 35695                           
 35696                           ;usb_device_msd.c: 1628: ResetSenseData();
 35697  00F0BE  ECC0  F08F         	call	_ResetSenseData	;wreg free
 35698                           
 35699                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 35700  00F0C2  0102               	movlb	2	; () banked
 35701  00F0C4  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 35702  00F0C6  0BF0               	andlw	-16
 35703  00F0C8  0905               	iorlw	5
 35704  00F0CA  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 35705                           
 35706                           ; BSR set to: 2
 35707                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 35708  00F0CC  0E20               	movlw	32
 35709  00F0CE  0102               	movlb	2	; () banked
 35710  00F0D0  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 35711                           
 35712                           ; BSR set to: 2
 35713                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 35714  00F0D2  0E00               	movlw	0
 35715  00F0D4  0102               	movlb	2	; () banked
 35716  00F0D6  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 35717                           
 35718                           ; BSR set to: 2
 35719                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 35720  00F0D8  0E02               	movlw	2
 35721  00F0DA  0100               	movlb	0	; () banked
 35722  00F0DC  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 35723  00F0DE  A4D8               	btfss	status,2,c
 35724  00F0E0  D011               	goto	l17909
 35725                           
 35726                           ; BSR set to: 0
 35727  00F0E2  0102               	movlb	2	; () banked
 35728  00F0E4  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35729  00F0E6  0102               	movlb	2	; () banked
 35730  00F0E8  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 35731  00F0EA  0102               	movlb	2	; () banked
 35732  00F0EC  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 35733  00F0EE  0102               	movlb	2	; () banked
 35734  00F0F0  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 35735  00F0F2  B4D8               	btfsc	status,2,c
 35736  00F0F4  D007               	goto	l17909
 35737                           
 35738                           ; BSR set to: 2
 35739                           ;usb_device_msd.c: 1634: {
 35740                           ;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 35741  00F0F6  0E00               	movlw	0
 35742  00F0F8  0100               	movlb	0	; () banked
 35743  00F0FA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35744  00F0FC  0E02               	movlw	2
 35745  00F0FE  ECC9  F076         	call	_USBStallEndpoint
 35746                           
 35747                           ;usb_device_msd.c: 1636: }
 35748  00F102  0012               	return	
 35749  00F104                     l17909:
 35750                           
 35751                           ;usb_device_msd.c: 1637: else
 35752                           ;usb_device_msd.c: 1638: {
 35753                           ;usb_device_msd.c: 1639: USBStallEndpoint(2u, 1);
 35754  00F104  0E01               	movlw	1
 35755  00F106  0100               	movlb	0	; () banked
 35756  00F108  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35757  00F10A  0E02               	movlw	2
 35758  00F10C  ECC9  F076         	call	_USBStallEndpoint
 35759                           
 35760                           ;usb_device_msd.c: 1644: }
 35761                           
 35762                           ;usb_device_msd.c: 1643: break;
 35763                           
 35764                           ;usb_device_msd.c: 1642: default:
 35765                           
 35766                           ;usb_device_msd.c: 1640: }
 35767                           ;usb_device_msd.c: 1641: break;
 35768  00F110  0012               	return	
 35769  00F112                     l17913:
 35770  00F112  0100               	movlb	0	; () banked
 35771  00F114  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 35772                           
 35773                           ; Switch size 1, requested type "space"
 35774                           ; Number of cases is 6, Range of values is 1 to 127
 35775                           ; switch strategies available:
 35776                           ; Name         Instructions Cycles
 35777                           ; simple_byte           19    10 (average)
 35778                           ;	Chosen strategy is simple_byte
 35779  00F116  0A01               	xorlw	1	; case 1
 35780  00F118  B4D8               	btfsc	status,2,c
 35781  00F11A  D7AB               	goto	l17881
 35782  00F11C  0A03               	xorlw	3	; case 2
 35783  00F11E  B4D8               	btfsc	status,2,c
 35784  00F120  D7AC               	goto	l17883
 35785  00F122  0A01               	xorlw	1	; case 3
 35786  00F124  B4D8               	btfsc	status,2,c
 35787  00F126  D7B0               	goto	l17885
 35788  00F128  0A07               	xorlw	7	; case 4
 35789  00F12A  B4D8               	btfsc	status,2,c
 35790  00F12C  D7B7               	goto	l17889
 35791  00F12E  0A01               	xorlw	1	; case 5
 35792  00F130  B4D8               	btfsc	status,2,c
 35793  00F132  D7BB               	goto	l17891
 35794  00F134  0A7A               	xorlw	122	; case 127
 35795  00F136  A4D8               	btfss	status,2,c
 35796  00F138  0012               	return	
 35797  00F13A  D7C1               	goto	l17895
 35798  00F13C                     __end_of_MSDErrorHandler:
 35799                           	opt stack 0
 35800                           tosu	equ	0xFFF
 35801                           tosh	equ	0xFFE
 35802                           tosl	equ	0xFFD
 35803                           pclath	equ	0xFFA
 35804                           tblptru	equ	0xFF8
 35805                           tblptrh	equ	0xFF7
 35806                           tblptrl	equ	0xFF6
 35807                           tablat	equ	0xFF5
 35808                           prodh	equ	0xFF4
 35809                           prodl	equ	0xFF3
 35810                           intcon	equ	0xFF2
 35811                           intcon2	equ	0xFF1
 35812                           intcon3	equ	0xFF0
 35813                           postinc0	equ	0xFEE
 35814                           wreg	equ	0xFE8
 35815                           indf1	equ	0xFE7
 35816                           postinc1	equ	0xFE6
 35817                           postdec1	equ	0xFE5
 35818                           plusw1	equ	0xFE3
 35819                           fsr1h	equ	0xFE2
 35820                           fsr1l	equ	0xFE1
 35821                           indf2	equ	0xFDF
 35822                           postinc2	equ	0xFDE
 35823                           postdec2	equ	0xFDD
 35824                           plusw2	equ	0xFDB
 35825                           fsr2h	equ	0xFDA
 35826                           fsr2l	equ	0xFD9
 35827                           status	equ	0xFD8
 35828                           
 35829 ;; *************** function _USBStallEndpoint *****************
 35830 ;; Defined at:
 35831 ;;		line 1073 in file "usb_device.c"
 35832 ;; Parameters:    Size  Location     Type
 35833 ;;  ep              1    wreg     unsigned char 
 35834 ;;  dir             1    0[BANK0 ] unsigned char 
 35835 ;; Auto vars:     Size  Location     Type
 35836 ;;  ep              1    5[BANK0 ] unsigned char 
 35837 ;;  p               2    6[BANK0 ] PTR struct __BDT
 35838 ;;		 -> BDT(48), 
 35839 ;; Return value:  Size  Location     Type
 35840 ;;                  1    wreg      void 
 35841 ;; Registers used:
 35842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35843 ;; Tracked objects:
 35844 ;;		On entry : 0/0
 35845 ;;		On exit  : 0/0
 35846 ;;		Unchanged: 0/0
 35847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35848 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35849 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35850 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35851 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35852 ;;Total ram usage:        8 bytes
 35853 ;; Hardware stack levels used:    1
 35854 ;; Hardware stack levels required when called:   10
 35855 ;; This function calls:
 35856 ;;		Nothing
 35857 ;; This function is called by:
 35858 ;;		_MSDTasks
 35859 ;;		_MSDReadHandler
 35860 ;;		_MSDWriteHandler
 35861 ;;		_MSDErrorHandler
 35862 ;; This function uses a non-reentrant model
 35863 ;;
 35864                           
 35865                           	psect	text151
 35866  00ED92                     __ptext151:
 35867                           	opt stack 0
 35868  00ED92                     _USBStallEndpoint:
 35869                           	opt stack 18
 35870                           
 35871                           ;incstack = 0
 35872                           ;USBStallEndpoint@ep stored from wreg
 35873  00ED92  0100               	movlb	0	; () banked
 35874  00ED94  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 35875                           
 35876                           ;usb_device.c: 1075: BDT_ENTRY *p;
 35877                           ;usb_device.c: 1077: if(ep == 0)
 35878  00ED96  0100               	movlb	0	; () banked
 35879  00ED98  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35880  00ED9A  0100               	movlb	0	; () banked
 35881  00ED9C  A4D8               	btfss	status,2,c
 35882  00ED9E  D02B               	goto	l17717
 35883                           
 35884                           ; BSR set to: 0
 35885                           ;usb_device.c: 1078: {
 35886                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 35887  00EDA0  EE20 F001          	lfsr	2,1
 35888  00EDA4  5018               	movf	_pBDTEntryEP0OutNext,w,c
 35889  00EDA6  26D9               	addwf	fsr2l,f,c
 35890  00EDA8  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 35891  00EDAA  22DA               	addwfc	fsr2h,f,c
 35892  00EDAC  0E08               	movlw	8
 35893  00EDAE  6EDF               	movwf	indf2,c
 35894                           
 35895                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35896  00EDB0  EE20 F002          	lfsr	2,2
 35897  00EDB4  5018               	movf	_pBDTEntryEP0OutNext,w,c
 35898  00EDB6  26D9               	addwf	fsr2l,f,c
 35899  00EDB8  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 35900  00EDBA  22DA               	addwfc	fsr2h,f,c
 35901  00EDBC  0E30               	movlw	48
 35902  00EDBE  6EDE               	movwf	postinc2,c
 35903  00EDC0  0E0D               	movlw	13
 35904  00EDC2  6EDD               	movwf	postdec2,c
 35905                           
 35906                           ; BSR set to: 0
 35907                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 35908  00EDC4  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35909  00EDC8  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35910  00EDCC  0E0C               	movlw	12
 35911  00EDCE  6EDF               	movwf	indf2,c
 35912                           
 35913                           ; BSR set to: 0
 35914                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35915  00EDD0  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35916  00EDD4  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35917  00EDD8  0E00               	movlw	0
 35918  00EDDA  8EDB               	bsf	plusw2,7,c
 35919                           
 35920                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 35921  00EDDC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35922  00EDE0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35923  00EDE4  0E04               	movlw	4
 35924  00EDE6  6EDF               	movwf	indf2,c
 35925                           
 35926                           ; BSR set to: 0
 35927                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35928  00EDE8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35929  00EDEC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35930  00EDF0  0E00               	movlw	0
 35931  00EDF2  8EDB               	bsf	plusw2,7,c
 35932                           
 35933                           ;usb_device.c: 1089: }
 35934  00EDF4  0012               	return	
 35935  00EDF6                     l17717:
 35936                           
 35937                           ; BSR set to: 0
 35938                           ;usb_device.c: 1090: else
 35939                           ;usb_device.c: 1091: {
 35940                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 35941  00EDF6  0100               	movlb	0	; () banked
 35942  00EDF8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35943  00EDFA  0100               	movlb	0	; () banked
 35944  00EDFC  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 35945  00EDFE  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 35946  00EE00  90D8               	bcf	status,0,c
 35947  00EE02  0100               	movlb	0	; () banked
 35948  00EE04  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35949  00EE06  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35950  00EE08  0100               	movlb	0	; () banked
 35951  00EE0A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35952  00EE0C  0100               	movlb	0	; () banked
 35953  00EE0E  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 35954  00EE10  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 35955  00EE12  0100               	movlb	0	; () banked
 35956  00EE14  90D8               	bcf	status,0,c
 35957  00EE16  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35958  00EE18  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35959  00EE1A  0100               	movlb	0	; () banked
 35960  00EE1C  90D8               	bcf	status,0,c
 35961  00EE1E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35962  00EE20  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35963  00EE22  0100               	movlb	0	; () banked
 35964  00EE24  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 35965  00EE26  0100               	movlb	0	; () banked
 35966  00EE28  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 35967  00EE2A  0100               	movlb	0	; () banked
 35968  00EE2C  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 35969  00EE2E  0100               	movlb	0	; () banked
 35970  00EE30  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 35971  00EE32  0100               	movlb	0	; () banked
 35972  00EE34  90D8               	bcf	status,0,c
 35973  00EE36  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35974  00EE38  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35975  00EE3A  0100               	movlb	0	; () banked
 35976  00EE3C  90D8               	bcf	status,0,c
 35977  00EE3E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35978  00EE40  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35979  00EE42  0E00               	movlw	0
 35980  00EE44  0100               	movlb	0	; () banked
 35981  00EE46  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 35982  00EE48  0100               	movlb	0	; () banked
 35983  00EE4A  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35984  00EE4C  0E0D               	movlw	13
 35985  00EE4E  0100               	movlb	0	; () banked
 35986  00EE50  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 35987  00EE52  0100               	movlb	0	; () banked
 35988  00EE54  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 35989                           
 35990                           ; BSR set to: 0
 35991                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 35992  00EE56  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35993  00EE5A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35994  00EE5E  0E00               	movlw	0
 35995  00EE60  84DB               	bsf	plusw2,2,c
 35996                           
 35997                           ; BSR set to: 0
 35998                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 35999  00EE62  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36000  00EE66  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36001  00EE6A  0E00               	movlw	0
 36002  00EE6C  8EDB               	bsf	plusw2,7,c
 36003                           
 36004                           ; BSR set to: 0
 36005                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 36006  00EE6E  0100               	movlb	0	; () banked
 36007  00EE70  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36008  00EE72  0D04               	mullw	4
 36009  00EE74  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 36010  00EE78  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 36011  00EE7C  0100               	movlb	0	; () banked
 36012  00EE7E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36013  00EE80  0D02               	mullw	2
 36014  00EE82  50F3               	movf	prodl,w,c
 36015  00EE84  0100               	movlb	0	; () banked
 36016  00EE86  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36017  00EE88  50F4               	movf	prodh,w,c
 36018  00EE8A  0100               	movlb	0	; () banked
 36019  00EE8C  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36020  00EE8E  0100               	movlb	0	; () banked
 36021  00EE90  90D8               	bcf	status,0,c
 36022  00EE92  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36023  00EE94  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36024  00EE96  0100               	movlb	0	; () banked
 36025  00EE98  90D8               	bcf	status,0,c
 36026  00EE9A  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36027  00EE9C  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36028  00EE9E  0E04               	movlw	4
 36029  00EEA0  0100               	movlb	0	; () banked
 36030  00EEA2  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36031  00EEA4  0E00               	movlw	0
 36032  00EEA6  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36033  00EEA8  0E00               	movlw	0
 36034  00EEAA  0100               	movlb	0	; () banked
 36035  00EEAC  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 36036  00EEAE  0100               	movlb	0	; () banked
 36037  00EEB0  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36038  00EEB2  0E0D               	movlw	13
 36039  00EEB4  0100               	movlb	0	; () banked
 36040  00EEB6  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 36041  00EEB8  0100               	movlb	0	; () banked
 36042  00EEBA  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36043                           
 36044                           ; BSR set to: 0
 36045                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 36046  00EEBC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36047  00EEC0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36048  00EEC4  0E00               	movlw	0
 36049  00EEC6  84DB               	bsf	plusw2,2,c
 36050                           
 36051                           ; BSR set to: 0
 36052                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 36053  00EEC8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36054  00EECC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36055  00EED0  0E00               	movlw	0
 36056  00EED2  8EDB               	bsf	plusw2,7,c
 36057  00EED4  0012               	return	
 36058  00EED6                     __end_of_USBStallEndpoint:
 36059                           	opt stack 0
 36060                           tosu	equ	0xFFF
 36061                           tosh	equ	0xFFE
 36062                           tosl	equ	0xFFD
 36063                           pclath	equ	0xFFA
 36064                           tblptru	equ	0xFF8
 36065                           tblptrh	equ	0xFF7
 36066                           tblptrl	equ	0xFF6
 36067                           tablat	equ	0xFF5
 36068                           prodh	equ	0xFF4
 36069                           prodl	equ	0xFF3
 36070                           intcon	equ	0xFF2
 36071                           intcon2	equ	0xFF1
 36072                           intcon3	equ	0xFF0
 36073                           postinc0	equ	0xFEE
 36074                           wreg	equ	0xFE8
 36075                           indf1	equ	0xFE7
 36076                           postinc1	equ	0xFE6
 36077                           postdec1	equ	0xFE5
 36078                           plusw1	equ	0xFE3
 36079                           fsr1h	equ	0xFE2
 36080                           fsr1l	equ	0xFE1
 36081                           indf2	equ	0xFDF
 36082                           postinc2	equ	0xFDE
 36083                           postdec2	equ	0xFDD
 36084                           plusw2	equ	0xFDB
 36085                           fsr2h	equ	0xFDA
 36086                           fsr2l	equ	0xFD9
 36087                           status	equ	0xFD8
 36088                           
 36089 ;; *************** function _ResetSenseData *****************
 36090 ;; Defined at:
 36091 ;;		line 1373 in file "usb_device_msd.c"
 36092 ;; Parameters:    Size  Location     Type
 36093 ;;		None
 36094 ;; Auto vars:     Size  Location     Type
 36095 ;;		None
 36096 ;; Return value:  Size  Location     Type
 36097 ;;                  1    wreg      void 
 36098 ;; Registers used:
 36099 ;;		wreg, status,2
 36100 ;; Tracked objects:
 36101 ;;		On entry : 0/0
 36102 ;;		On exit  : 0/0
 36103 ;;		Unchanged: 0/0
 36104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36109 ;;Total ram usage:        0 bytes
 36110 ;; Hardware stack levels used:    1
 36111 ;; Hardware stack levels required when called:   10
 36112 ;; This function calls:
 36113 ;;		Nothing
 36114 ;; This function is called by:
 36115 ;;		_MSDProcessCommandMediaAbsent
 36116 ;;		_MSDProcessCommandMediaPresent
 36117 ;;		_MSDErrorHandler
 36118 ;; This function uses a non-reentrant model
 36119 ;;
 36120                           
 36121                           	psect	text152
 36122  011F80                     __ptext152:
 36123                           	opt stack 0
 36124  011F80                     _ResetSenseData:
 36125                           	opt stack 16
 36126                           
 36127                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 36128                           
 36129                           ; BSR set to: 0
 36130                           ;incstack = 0
 36131  011F80  0102               	movlb	2	; () banked
 36132  011F82  9160               	bcf	_gblSenseData& (0+255),0,b
 36133  011F84  9360               	bcf	_gblSenseData& (0+255),1,b
 36134  011F86  9560               	bcf	_gblSenseData& (0+255),2,b
 36135  011F88  9760               	bcf	_gblSenseData& (0+255),3,b
 36136  011F8A  8960               	bsf	_gblSenseData& (0+255),4,b
 36137  011F8C  8B60               	bsf	_gblSenseData& (0+255),5,b
 36138  011F8E  8D60               	bsf	_gblSenseData& (0+255),6,b
 36139                           
 36140                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 36141  011F90  0102               	movlb	2	; () banked
 36142  011F92  9F60               	bcf	_gblSenseData& (0+255),7,b
 36143                           
 36144                           ; BSR set to: 2
 36145                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 36146  011F94  0E00               	movlw	0
 36147  011F96  0102               	movlb	2	; () banked
 36148  011F98  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 36149                           
 36150                           ; BSR set to: 2
 36151                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 36152  011F9A  0102               	movlb	2	; () banked
 36153  011F9C  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 36154  011F9E  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 36155  011FA0  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 36156  011FA2  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 36157                           
 36158                           ; BSR set to: 2
 36159                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 36160  011FA4  0102               	movlb	2	; () banked
 36161  011FA6  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 36162                           
 36163                           ; BSR set to: 2
 36164                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 36165  011FA8  0102               	movlb	2	; () banked
 36166  011FAA  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 36167                           
 36168                           ; BSR set to: 2
 36169                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 36170  011FAC  0102               	movlb	2	; () banked
 36171  011FAE  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 36172                           
 36173                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 36174  011FB0  0E00               	movlw	0
 36175  011FB2  0102               	movlb	2	; () banked
 36176  011FB4  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 36177                           
 36178                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 36179  011FB6  0E00               	movlw	0
 36180  011FB8  0102               	movlb	2	; () banked
 36181  011FBA  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 36182                           
 36183                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 36184  011FBC  0E00               	movlw	0
 36185  011FBE  0102               	movlb	2	; () banked
 36186  011FC0  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 36187                           
 36188                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 36189  011FC2  0E00               	movlw	0
 36190  011FC4  0102               	movlb	2	; () banked
 36191  011FC6  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 36192                           
 36193                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 36194  011FC8  0E0A               	movlw	10
 36195  011FCA  0102               	movlb	2	; () banked
 36196  011FCC  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 36197                           
 36198                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 36199  011FCE  0E00               	movlw	0
 36200  011FD0  0102               	movlb	2	; () banked
 36201  011FD2  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 36202  011FD4  0E00               	movlw	0
 36203  011FD6  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 36204  011FD8  0E00               	movlw	0
 36205  011FDA  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 36206  011FDC  0E00               	movlw	0
 36207  011FDE  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 36208                           
 36209                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 36210  011FE0  0E00               	movlw	0
 36211  011FE2  0102               	movlb	2	; () banked
 36212  011FE4  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 36213                           
 36214                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 36215  011FE6  0E00               	movlw	0
 36216  011FE8  0102               	movlb	2	; () banked
 36217  011FEA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 36218                           
 36219                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 36220  011FEC  0E00               	movlw	0
 36221  011FEE  0102               	movlb	2	; () banked
 36222  011FF0  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 36223                           
 36224                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 36225  011FF2  0E00               	movlw	0
 36226  011FF4  0102               	movlb	2	; () banked
 36227  011FF6  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 36228                           
 36229                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 36230  011FF8  0E00               	movlw	0
 36231  011FFA  0102               	movlb	2	; () banked
 36232  011FFC  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 36233                           
 36234                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 36235  011FFE  0E00               	movlw	0
 36236  012000  0102               	movlb	2	; () banked
 36237  012002  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 36238                           
 36239                           ; BSR set to: 2
 36240  012004  0012               	return		;funcret
 36241  012006                     __end_of_ResetSenseData:
 36242                           	opt stack 0
 36243                           tosu	equ	0xFFF
 36244                           tosh	equ	0xFFE
 36245                           tosl	equ	0xFFD
 36246                           pclath	equ	0xFFA
 36247                           tblptru	equ	0xFF8
 36248                           tblptrh	equ	0xFF7
 36249                           tblptrl	equ	0xFF6
 36250                           tablat	equ	0xFF5
 36251                           prodh	equ	0xFF4
 36252                           prodl	equ	0xFF3
 36253                           intcon	equ	0xFF2
 36254                           intcon2	equ	0xFF1
 36255                           intcon3	equ	0xFF0
 36256                           postinc0	equ	0xFEE
 36257                           wreg	equ	0xFE8
 36258                           indf1	equ	0xFE7
 36259                           postinc1	equ	0xFE6
 36260                           postdec1	equ	0xFE5
 36261                           plusw1	equ	0xFE3
 36262                           fsr1h	equ	0xFE2
 36263                           fsr1l	equ	0xFE1
 36264                           indf2	equ	0xFDF
 36265                           postinc2	equ	0xFDE
 36266                           postdec2	equ	0xFDD
 36267                           plusw2	equ	0xFDB
 36268                           fsr2h	equ	0xFDA
 36269                           fsr2l	equ	0xFD9
 36270                           status	equ	0xFD8
 36271                           
 36272 ;; *************** function _ExternalFlash_SectorRead *****************
 36273 ;; Defined at:
 36274 ;;		line 64 in file "external_flash.c"
 36275 ;; Parameters:    Size  Location     Type
 36276 ;;  config          2   43[BANK0 ] PTR void 
 36277 ;;		 -> NULL(0), 
 36278 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 36279 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 36280 ;;		 -> msd_buffer(512), 
 36281 ;; Auto vars:     Size  Location     Type
 36282 ;;  page            2   51[BANK0 ] unsigned int 
 36283 ;; Return value:  Size  Location     Type
 36284 ;;                  1    wreg      unsigned char 
 36285 ;; Registers used:
 36286 ;;		wreg, status,2, status,0, cstack
 36287 ;; Tracked objects:
 36288 ;;		On entry : 0/0
 36289 ;;		On exit  : 0/0
 36290 ;;		Unchanged: 0/0
 36291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36292 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36295 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36296 ;;Total ram usage:       10 bytes
 36297 ;; Hardware stack levels used:    1
 36298 ;; Hardware stack levels required when called:   15
 36299 ;; This function calls:
 36300 ;;		_flash_page_read
 36301 ;; This function is called by:
 36302 ;;		_MSDReadHandler
 36303 ;; This function uses a non-reentrant model
 36304 ;;
 36305                           
 36306                           	psect	text153
 36307  013872                     __ptext153:
 36308                           	opt stack 0
 36309  013872                     _ExternalFlash_SectorRead:
 36310                           	opt stack 10
 36311                           
 36312                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 36313                           
 36314                           ; BSR set to: 2
 36315                           ;incstack = 0
 36316  013872  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 36317  013876  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 36318                           
 36319                           ;external_flash.c: 70: if(sector_addr >= 4096)
 36320  01387A  0100               	movlb	0	; () banked
 36321  01387C  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 36322  01387E  0100               	movlb	0	; () banked
 36323  013880  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 36324  013882  E105               	bnz	u16820
 36325  013884  0E10               	movlw	16
 36326  013886  0100               	movlb	0	; () banked
 36327  013888  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 36328  01388A  A0D8               	btfss	status,0,c
 36329  01388C  D002               	goto	l18057
 36330  01388E                     u16820:
 36331                           
 36332                           ; BSR set to: 0
 36333                           ;external_flash.c: 71: {
 36334                           ;external_flash.c: 72: return 0;
 36335  01388E  0E00               	movlw	0
 36336                           
 36337                           ; BSR set to: 0
 36338  013890  0012               	return	
 36339  013892                     l18057:
 36340                           
 36341                           ; BSR set to: 0
 36342                           ;external_flash.c: 73: }
 36343                           ;external_flash.c: 76: flash_page_read(page, buffer);
 36344  013892  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 36345  013896  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 36346  01389A  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 36347  01389E  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 36348  0138A2  ECF3  F09E         	call	_flash_page_read	;wreg free
 36349                           
 36350                           ;external_flash.c: 78: return 1;
 36351  0138A6  0E01               	movlw	1
 36352  0138A8  0012               	return	
 36353  0138AA                     __end_of_ExternalFlash_SectorRead:
 36354                           	opt stack 0
 36355                           tosu	equ	0xFFF
 36356                           tosh	equ	0xFFE
 36357                           tosl	equ	0xFFD
 36358                           pclath	equ	0xFFA
 36359                           tblptru	equ	0xFF8
 36360                           tblptrh	equ	0xFF7
 36361                           tblptrl	equ	0xFF6
 36362                           tablat	equ	0xFF5
 36363                           prodh	equ	0xFF4
 36364                           prodl	equ	0xFF3
 36365                           intcon	equ	0xFF2
 36366                           intcon2	equ	0xFF1
 36367                           intcon3	equ	0xFF0
 36368                           postinc0	equ	0xFEE
 36369                           wreg	equ	0xFE8
 36370                           indf1	equ	0xFE7
 36371                           postinc1	equ	0xFE6
 36372                           postdec1	equ	0xFE5
 36373                           plusw1	equ	0xFE3
 36374                           fsr1h	equ	0xFE2
 36375                           fsr1l	equ	0xFE1
 36376                           indf2	equ	0xFDF
 36377                           postinc2	equ	0xFDE
 36378                           postdec2	equ	0xFDD
 36379                           plusw2	equ	0xFDB
 36380                           fsr2h	equ	0xFDA
 36381                           fsr2l	equ	0xFD9
 36382                           status	equ	0xFD8
 36383                           
 36384 ;; *************** function _flash_page_read *****************
 36385 ;; Defined at:
 36386 ;;		line 538 in file "flash.c"
 36387 ;; Parameters:    Size  Location     Type
 36388 ;;  page            2   39[BANK0 ] unsigned int 
 36389 ;;  data            2   41[BANK0 ] PTR unsigned char 
 36390 ;;		 -> msd_buffer(512), 
 36391 ;; Auto vars:     Size  Location     Type
 36392 ;;		None
 36393 ;; Return value:  Size  Location     Type
 36394 ;;                  1    wreg      void 
 36395 ;; Registers used:
 36396 ;;		wreg, status,2, status,0, cstack
 36397 ;; Tracked objects:
 36398 ;;		On entry : 0/0
 36399 ;;		On exit  : 0/0
 36400 ;;		Unchanged: 0/0
 36401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36405 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36406 ;;Total ram usage:        4 bytes
 36407 ;; Hardware stack levels used:    1
 36408 ;; Hardware stack levels required when called:   14
 36409 ;; This function calls:
 36410 ;;		_flash_partial_read
 36411 ;; This function is called by:
 36412 ;;		_ExternalFlash_SectorRead
 36413 ;; This function uses a non-reentrant model
 36414 ;;
 36415                           
 36416                           	psect	text154
 36417  013DE6                     __ptext154:
 36418                           	opt stack 0
 36419  013DE6                     _flash_page_read:
 36420                           	opt stack 10
 36421                           
 36422                           ;flash.c: 541: flash_partial_read(page, 0, 512, data);
 36423                           
 36424                           ;incstack = 0
 36425  013DE6  C087  F073         	movff	flash_page_read@page,flash_partial_read@page
 36426  013DEA  C088  F074         	movff	flash_page_read@page+1,flash_partial_read@page+1
 36427  013DEE  0E00               	movlw	0
 36428  013DF0  0100               	movlb	0	; () banked
 36429  013DF2  6F76               	movwf	(flash_partial_read@start+1)& (0+255),b
 36430  013DF4  0E00               	movlw	0
 36431  013DF6  6F75               	movwf	flash_partial_read@start& (0+255),b
 36432  013DF8  0E02               	movlw	2
 36433  013DFA  0100               	movlb	0	; () banked
 36434  013DFC  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 36435  013DFE  0E00               	movlw	0
 36436  013E00  6F77               	movwf	flash_partial_read@length& (0+255),b
 36437  013E02  C089  F079         	movff	flash_page_read@data,flash_partial_read@data
 36438  013E06  C08A  F07A         	movff	flash_page_read@data+1,flash_partial_read@data+1
 36439  013E0A  EC8E  F08A         	call	_flash_partial_read	;wreg free
 36440  013E0E  0012               	return		;funcret
 36441  013E10                     __end_of_flash_page_read:
 36442                           	opt stack 0
 36443                           tosu	equ	0xFFF
 36444                           tosh	equ	0xFFE
 36445                           tosl	equ	0xFFD
 36446                           pclath	equ	0xFFA
 36447                           tblptru	equ	0xFF8
 36448                           tblptrh	equ	0xFF7
 36449                           tblptrl	equ	0xFF6
 36450                           tablat	equ	0xFF5
 36451                           prodh	equ	0xFF4
 36452                           prodl	equ	0xFF3
 36453                           intcon	equ	0xFF2
 36454                           intcon2	equ	0xFF1
 36455                           intcon3	equ	0xFF0
 36456                           postinc0	equ	0xFEE
 36457                           wreg	equ	0xFE8
 36458                           indf1	equ	0xFE7
 36459                           postinc1	equ	0xFE6
 36460                           postdec1	equ	0xFE5
 36461                           plusw1	equ	0xFE3
 36462                           fsr1h	equ	0xFE2
 36463                           fsr1l	equ	0xFE1
 36464                           indf2	equ	0xFDF
 36465                           postinc2	equ	0xFDE
 36466                           postdec2	equ	0xFDD
 36467                           plusw2	equ	0xFDB
 36468                           fsr2h	equ	0xFDA
 36469                           fsr2l	equ	0xFD9
 36470                           status	equ	0xFD8
 36471                           
 36472 ;; *************** function _flash_partial_read *****************
 36473 ;; Defined at:
 36474 ;;		line 564 in file "flash.c"
 36475 ;; Parameters:    Size  Location     Type
 36476 ;;  page            2   19[BANK0 ] unsigned int 
 36477 ;;  start           2   21[BANK0 ] unsigned int 
 36478 ;;  length          2   23[BANK0 ] unsigned int 
 36479 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36480 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 36481 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 36482 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512),
      + 
 36483 ;; Auto vars:     Size  Location     Type
 36484 ;;  command         4   31[BANK0 ] unsigned char [4]
 36485 ;;  address         4   35[BANK0 ] unsigned long 
 36486 ;; Return value:  Size  Location     Type
 36487 ;;                  1    wreg      void 
 36488 ;; Registers used:
 36489 ;;		wreg, status,2, status,0, cstack
 36490 ;; Tracked objects:
 36491 ;;		On entry : 0/0
 36492 ;;		On exit  : 0/0
 36493 ;;		Unchanged: 0/0
 36494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36495 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36496 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36498 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36499 ;;Total ram usage:       20 bytes
 36500 ;; Hardware stack levels used:    1
 36501 ;; Hardware stack levels required when called:   13
 36502 ;; This function calls:
 36503 ;;		__flash_spi_tx_rx
 36504 ;;		_flash_is_busy
 36505 ;; This function is called by:
 36506 ;;		_flash_page_read
 36507 ;;		__root_is_available
 36508 ;;		__get_empty_cluster
 36509 ;;		_fat_get_empty_clusters
 36510 ;;		__read_fat
 36511 ;;		__read_root
 36512 ;;		_fat_find_file
 36513 ;;		__get_first_cluster
 36514 ;;		__get_file_size
 36515 ;;		_fat_get_file_size
 36516 ;;		_fat_read_from_file
 36517 ;; This function uses a non-reentrant model
 36518 ;;
 36519                           
 36520                           	psect	text155
 36521  01151C                     __ptext155:
 36522                           	opt stack 0
 36523  01151C                     _flash_partial_read:
 36524                           	opt stack 15
 36525  01151C                     l17811:
 36526  01151C  EC7E  F09F         	call	_flash_is_busy	;wreg free
 36527  011520  0900               	iorlw	0
 36528  011522  A4D8               	btfss	status,2,c
 36529  011524  D7FB               	goto	l17811
 36530                           
 36531                           ;flash.c: 573: address = page;
 36532  011526  C073  F083         	movff	flash_partial_read@page,flash_partial_read@address
 36533  01152A  C074  F084         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 36534  01152E  0100               	movlb	0	; () banked
 36535  011530  6B85               	clrf	(flash_partial_read@address+2)& (0+255),b
 36536  011532  6B86               	clrf	(flash_partial_read@address+3)& (0+255),b
 36537                           
 36538                           ; BSR set to: 0
 36539                           ;flash.c: 574: address <<= 9;
 36540  011534  0100               	movlb	0	; () banked
 36541  011536  0E09               	movlw	9
 36542  011538                     u16455:
 36543  011538  90D8               	bcf	status,0,c
 36544  01153A  3783               	rlcf	flash_partial_read@address& (0+255),f,b
 36545  01153C  3784               	rlcf	(flash_partial_read@address+1)& (0+255),f,b
 36546  01153E  3785               	rlcf	(flash_partial_read@address+2)& (0+255),f,b
 36547  011540  3786               	rlcf	(flash_partial_read@address+3)& (0+255),f,b
 36548  011542  2EE8               	decfsz	wreg,f,c
 36549  011544  D7F9               	goto	u16455
 36550                           
 36551                           ; BSR set to: 0
 36552                           ;flash.c: 575: address |= start;
 36553  011546  0100               	movlb	0	; () banked
 36554  011548  5175               	movf	flash_partial_read@start& (0+255),w,b
 36555  01154A  0100               	movlb	0	; () banked
 36556  01154C  6F7B               	movwf	??_flash_partial_read& (0+255),b
 36557  01154E  0100               	movlb	0	; () banked
 36558  011550  5176               	movf	(flash_partial_read@start+1)& (0+255),w,b
 36559  011552  0100               	movlb	0	; () banked
 36560  011554  6F7C               	movwf	(??_flash_partial_read+1)& (0+255),b
 36561  011556  0100               	movlb	0	; () banked
 36562  011558  6B7D               	clrf	(??_flash_partial_read+2)& (0+255),b
 36563  01155A  0100               	movlb	0	; () banked
 36564  01155C  6B7E               	clrf	(??_flash_partial_read+3)& (0+255),b
 36565  01155E  0100               	movlb	0	; () banked
 36566  011560  517B               	movf	??_flash_partial_read& (0+255),w,b
 36567  011562  0100               	movlb	0	; () banked
 36568  011564  1383               	iorwf	flash_partial_read@address& (0+255),f,b
 36569  011566  0100               	movlb	0	; () banked
 36570  011568  517C               	movf	(??_flash_partial_read+1)& (0+255),w,b
 36571  01156A  0100               	movlb	0	; () banked
 36572  01156C  1384               	iorwf	(flash_partial_read@address+1)& (0+255),f,b
 36573  01156E  0100               	movlb	0	; () banked
 36574  011570  517D               	movf	(??_flash_partial_read+2)& (0+255),w,b
 36575  011572  0100               	movlb	0	; () banked
 36576  011574  1385               	iorwf	(flash_partial_read@address+2)& (0+255),f,b
 36577  011576  0100               	movlb	0	; () banked
 36578  011578  517E               	movf	(??_flash_partial_read+3)& (0+255),w,b
 36579  01157A  0100               	movlb	0	; () banked
 36580  01157C  1386               	iorwf	(flash_partial_read@address+3)& (0+255),f,b
 36581                           
 36582                           ; BSR set to: 0
 36583                           ;flash.c: 578: command[0] = 0x03;
 36584  01157E  0E03               	movlw	3
 36585  011580  0100               	movlb	0	; () banked
 36586  011582  6F7F               	movwf	flash_partial_read@command& (0+255),b
 36587                           
 36588                           ; BSR set to: 0
 36589                           ;flash.c: 579: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36590  011584  C085  F080         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 36591                           
 36592                           ; BSR set to: 0
 36593                           ;flash.c: 580: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36594  011588  0100               	movlb	0	; () banked
 36595  01158A  5184               	movf	(flash_partial_read@address+1)& (0+255),w,b
 36596  01158C  0100               	movlb	0	; () banked
 36597  01158E  6F81               	movwf	(flash_partial_read@command+2)& (0+255),b
 36598                           
 36599                           ; BSR set to: 0
 36600                           ;flash.c: 581: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36601  011590  C083  F082         	movff	flash_partial_read@address,flash_partial_read@command+3
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;flash.c: 584: _flash_spi_tx_rx(command, 4, data, length);
 36605  011594  0E7F               	movlw	low flash_partial_read@command
 36606  011596  0100               	movlb	0	; () banked
 36607  011598  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 36608  01159A  0E00               	movlw	high flash_partial_read@command
 36609  01159C  0100               	movlb	0	; () banked
 36610  01159E  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 36611  0115A0  0E00               	movlw	0
 36612  0115A2  0100               	movlb	0	; () banked
 36613  0115A4  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 36614  0115A6  0E04               	movlw	4
 36615  0115A8  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 36616  0115AA  C079  F064         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 36617  0115AE  C07A  F065         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 36618  0115B2  C077  F066         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 36619  0115B6  C078  F067         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 36620  0115BA  ECCF  F088         	call	__flash_spi_tx_rx	;wreg free
 36621  0115BE  0012               	return		;funcret
 36622  0115C0                     __end_of_flash_partial_read:
 36623                           	opt stack 0
 36624                           tosu	equ	0xFFF
 36625                           tosh	equ	0xFFE
 36626                           tosl	equ	0xFFD
 36627                           pclath	equ	0xFFA
 36628                           tblptru	equ	0xFF8
 36629                           tblptrh	equ	0xFF7
 36630                           tblptrl	equ	0xFF6
 36631                           tablat	equ	0xFF5
 36632                           prodh	equ	0xFF4
 36633                           prodl	equ	0xFF3
 36634                           intcon	equ	0xFF2
 36635                           intcon2	equ	0xFF1
 36636                           intcon3	equ	0xFF0
 36637                           postinc0	equ	0xFEE
 36638                           wreg	equ	0xFE8
 36639                           indf1	equ	0xFE7
 36640                           postinc1	equ	0xFE6
 36641                           postdec1	equ	0xFE5
 36642                           plusw1	equ	0xFE3
 36643                           fsr1h	equ	0xFE2
 36644                           fsr1l	equ	0xFE1
 36645                           indf2	equ	0xFDF
 36646                           postinc2	equ	0xFDE
 36647                           postdec2	equ	0xFDD
 36648                           plusw2	equ	0xFDB
 36649                           fsr2h	equ	0xFDA
 36650                           fsr2l	equ	0xFD9
 36651                           status	equ	0xFD8
 36652                           
 36653 ;; *************** function _flash_is_busy *****************
 36654 ;; Defined at:
 36655 ;;		line 475 in file "flash.c"
 36656 ;; Parameters:    Size  Location     Type
 36657 ;;		None
 36658 ;; Auto vars:     Size  Location     Type
 36659 ;;  status          2   17[BANK0 ] unsigned int 
 36660 ;; Return value:  Size  Location     Type
 36661 ;;                  1    wreg      unsigned char 
 36662 ;; Registers used:
 36663 ;;		wreg, status,2, status,0, cstack
 36664 ;; Tracked objects:
 36665 ;;		On entry : 0/0
 36666 ;;		On exit  : 0/0
 36667 ;;		Unchanged: 0/0
 36668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36672 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36673 ;;Total ram usage:        2 bytes
 36674 ;; Hardware stack levels used:    1
 36675 ;; Hardware stack levels required when called:   12
 36676 ;; This function calls:
 36677 ;;		__flash_get_status
 36678 ;;		__flash_wakeup
 36679 ;; This function is called by:
 36680 ;;		__flash_set_page_size
 36681 ;;		__flash_copy_page_to_buffer
 36682 ;;		__flash_compare_page_to_buffer
 36683 ;;		__flash_write_to_buffer
 36684 ;;		__flash_write_page_from_buffer
 36685 ;;		_flash_partial_read
 36686 ;;		_flash_partial_write
 36687 ;;		__flash_erase_page
 36688 ;;		_flash_set_power_state
 36689 ;; This function uses a non-reentrant model
 36690 ;;
 36691                           
 36692                           	psect	text156
 36693  013EFC                     __ptext156:
 36694                           	opt stack 0
 36695  013EFC                     _flash_is_busy:
 36696                           	opt stack 15
 36697                           
 36698                           ;flash.c: 478: if(power_state!=FLASH_POWER_STATE_NORMAL)
 36699                           
 36700                           ;incstack = 0
 36701  013EFC  0100               	movlb	0	; () banked
 36702  013EFE  51DF               	movf	_power_state& (0+255),w,b
 36703  013F00  A4D8               	btfss	status,2,c
 36704                           
 36705                           ; BSR set to: 0
 36706                           ;flash.c: 479: {
 36707                           ;flash.c: 480: _flash_wakeup();
 36708  013F02  ECA6  F097         	call	__flash_wakeup	;wreg free
 36709                           
 36710                           ;flash.c: 481: }
 36711                           ;flash.c: 484: uint16_t status = _flash_get_status();
 36712  013F06  EC29  F09B         	call	__flash_get_status	;wreg free
 36713  013F0A  C06C  F071         	movff	?__flash_get_status,flash_is_busy@status
 36714  013F0E  C06D  F072         	movff	?__flash_get_status+1,flash_is_busy@status+1
 36715                           
 36716                           ;flash.c: 485: if(status & 0b0000000010000000)
 36717  013F12  0100               	movlb	0	; () banked
 36718  013F14  AF71               	btfss	flash_is_busy@status& (0+255),7,b
 36719  013F16  D002               	goto	l17703
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;flash.c: 486: {
 36723                           ;flash.c: 488: return 0;
 36724  013F18  0E00               	movlw	0
 36725                           
 36726                           ; BSR set to: 0
 36727                           ;flash.c: 489: }
 36728                           
 36729                           ; BSR set to: 0
 36730  013F1A  0012               	return	
 36731  013F1C                     l17703:
 36732                           
 36733                           ; BSR set to: 0
 36734                           ;flash.c: 490: else
 36735                           ;flash.c: 491: {
 36736                           ;flash.c: 493: return 1;
 36737  013F1C  0E01               	movlw	1
 36738                           
 36739                           ; BSR set to: 0
 36740  013F1E  0012               	return	
 36741  013F20                     __end_of_flash_is_busy:
 36742                           	opt stack 0
 36743                           tosu	equ	0xFFF
 36744                           tosh	equ	0xFFE
 36745                           tosl	equ	0xFFD
 36746                           pclath	equ	0xFFA
 36747                           tblptru	equ	0xFF8
 36748                           tblptrh	equ	0xFF7
 36749                           tblptrl	equ	0xFF6
 36750                           tablat	equ	0xFF5
 36751                           prodh	equ	0xFF4
 36752                           prodl	equ	0xFF3
 36753                           intcon	equ	0xFF2
 36754                           intcon2	equ	0xFF1
 36755                           intcon3	equ	0xFF0
 36756                           postinc0	equ	0xFEE
 36757                           wreg	equ	0xFE8
 36758                           indf1	equ	0xFE7
 36759                           postinc1	equ	0xFE6
 36760                           postdec1	equ	0xFE5
 36761                           plusw1	equ	0xFE3
 36762                           fsr1h	equ	0xFE2
 36763                           fsr1l	equ	0xFE1
 36764                           indf2	equ	0xFDF
 36765                           postinc2	equ	0xFDE
 36766                           postdec2	equ	0xFDD
 36767                           plusw2	equ	0xFDB
 36768                           fsr2h	equ	0xFDA
 36769                           fsr2l	equ	0xFD9
 36770                           status	equ	0xFD8
 36771                           
 36772 ;; *************** function __flash_wakeup *****************
 36773 ;; Defined at:
 36774 ;;		line 289 in file "flash.c"
 36775 ;; Parameters:    Size  Location     Type
 36776 ;;		None
 36777 ;; Auto vars:     Size  Location     Type
 36778 ;;  command         1    8[BANK0 ] unsigned char 
 36779 ;; Return value:  Size  Location     Type
 36780 ;;                  1    wreg      void 
 36781 ;; Registers used:
 36782 ;;		wreg, status,2, status,0, cstack
 36783 ;; Tracked objects:
 36784 ;;		On entry : 0/0
 36785 ;;		On exit  : 0/0
 36786 ;;		Unchanged: 0/0
 36787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36792 ;;Total ram usage:        1 bytes
 36793 ;; Hardware stack levels used:    1
 36794 ;; Hardware stack levels required when called:   11
 36795 ;; This function calls:
 36796 ;;		__flash_spi_tx
 36797 ;; This function is called by:
 36798 ;;		_flash_is_busy
 36799 ;;		_flash_set_power_state
 36800 ;; This function uses a non-reentrant model
 36801 ;;
 36802                           
 36803                           	psect	text157
 36804  012F4C                     __ptext157:
 36805                           	opt stack 0
 36806  012F4C                     __flash_wakeup:
 36807                           	opt stack 15
 36808                           
 36809                           ;flash.c: 291: uint8_t command;
 36810                           ;flash.c: 293: switch(power_state)
 36811                           
 36812                           ; BSR set to: 0
 36813                           ;incstack = 0
 36814  012F4C  D025               	goto	l17665
 36815  012F4E                     l17649:
 36816                           
 36817                           ;flash.c: 296: command = 0xAB;
 36818  012F4E  0EAB               	movlw	171
 36819  012F50  0100               	movlb	0	; () banked
 36820  012F52  6F68               	movwf	__flash_wakeup@command& (0+255),b
 36821                           
 36822                           ; BSR set to: 0
 36823                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 36824  012F54  0E68               	movlw	low __flash_wakeup@command
 36825  012F56  0100               	movlb	0	; () banked
 36826  012F58  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 36827  012F5A  0E00               	movlw	high __flash_wakeup@command
 36828  012F5C  0100               	movlb	0	; () banked
 36829  012F5E  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 36830  012F60  0E00               	movlw	0
 36831  012F62  0100               	movlb	0	; () banked
 36832  012F64  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 36833  012F66  0E01               	movlw	1
 36834  012F68  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 36835  012F6A  ECB7  F094         	call	__flash_spi_tx	;wreg free
 36836                           
 36837                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 36838  012F6E  0E17               	movlw	23
 36839  012F70                     u23277:
 36840  012F70  2EE8               	decfsz	wreg,f,c
 36841  012F72  D7FE               	bra	u23277
 36842  012F74  F000               	nop	
 36843                           
 36844                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 36845  012F76  0E00               	movlw	0
 36846  012F78  0100               	movlb	0	; () banked
 36847  012F7A  6FDF               	movwf	_power_state& (0+255),b
 36848                           
 36849                           ;flash.c: 300: break;
 36850  012F7C  0012               	return	
 36851  012F7E                     l2788:
 36852                           
 36853                           ; BSR set to: 0
 36854                           ;flash.c: 305: LATDbits.LD7 = 0;
 36855  012F7E  9E8C               	bcf	3980,7,c	;volatile
 36856                           
 36857                           ; BSR set to: 0
 36858                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 36859  012F80  0E0D               	movlw	13
 36860  012F82                     u23287:
 36861  012F82  2EE8               	decfsz	wreg,f,c
 36862  012F84  D7FE               	bra	u23287
 36863  012F86  F000               	nop	
 36864                           
 36865                           ;flash.c: 307: LATDbits.LD7 = 1;
 36866  012F88  8E8C               	bsf	3980,7,c	;volatile
 36867                           
 36868                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 36869  012F8A  0E50               	movlw	80
 36870  012F8C                     u23297:
 36871  012F8C  2EE8               	decfsz	wreg,f,c
 36872  012F8E  D7FE               	bra	u23297
 36873                           
 36874                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 36875  012F90  0E00               	movlw	0
 36876  012F92  0100               	movlb	0	; () banked
 36877  012F94  6FDF               	movwf	_power_state& (0+255),b
 36878                           
 36879                           ; BSR set to: 0
 36880                           ;flash.c: 311: }
 36881                           
 36882                           ;flash.c: 310: break;
 36883  012F96  0012               	return	
 36884  012F98                     l17665:
 36885  012F98  0100               	movlb	0	; () banked
 36886  012F9A  51DF               	movf	_power_state& (0+255),w,b
 36887                           
 36888                           ; Switch size 1, requested type "space"
 36889                           ; Number of cases is 2, Range of values is 1 to 2
 36890                           ; switch strategies available:
 36891                           ; Name         Instructions Cycles
 36892                           ; simple_byte            7     4 (average)
 36893                           ;	Chosen strategy is simple_byte
 36894  012F9C  0A01               	xorlw	1	; case 1
 36895  012F9E  B4D8               	btfsc	status,2,c
 36896  012FA0  D7D6               	goto	l17649
 36897  012FA2  0A03               	xorlw	3	; case 2
 36898  012FA4  A4D8               	btfss	status,2,c
 36899  012FA6  0012               	return	
 36900  012FA8  D7EA               	goto	l2788
 36901  012FAA                     __end_of__flash_wakeup:
 36902                           	opt stack 0
 36903                           tosu	equ	0xFFF
 36904                           tosh	equ	0xFFE
 36905                           tosl	equ	0xFFD
 36906                           pclath	equ	0xFFA
 36907                           tblptru	equ	0xFF8
 36908                           tblptrh	equ	0xFF7
 36909                           tblptrl	equ	0xFF6
 36910                           tablat	equ	0xFF5
 36911                           prodh	equ	0xFF4
 36912                           prodl	equ	0xFF3
 36913                           intcon	equ	0xFF2
 36914                           intcon2	equ	0xFF1
 36915                           intcon3	equ	0xFF0
 36916                           postinc0	equ	0xFEE
 36917                           wreg	equ	0xFE8
 36918                           indf1	equ	0xFE7
 36919                           postinc1	equ	0xFE6
 36920                           postdec1	equ	0xFE5
 36921                           plusw1	equ	0xFE3
 36922                           fsr1h	equ	0xFE2
 36923                           fsr1l	equ	0xFE1
 36924                           indf2	equ	0xFDF
 36925                           postinc2	equ	0xFDE
 36926                           postdec2	equ	0xFDD
 36927                           plusw2	equ	0xFDB
 36928                           fsr2h	equ	0xFDA
 36929                           fsr2l	equ	0xFD9
 36930                           status	equ	0xFD8
 36931                           
 36932 ;; *************** function __flash_spi_tx *****************
 36933 ;; Defined at:
 36934 ;;		line 103 in file "flash.c"
 36935 ;; Parameters:    Size  Location     Type
 36936 ;;  data            2    0[BANK0 ] PTR unsigned char 
 36937 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 36938 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 36939 ;;  length          2    2[BANK0 ] unsigned int 
 36940 ;; Auto vars:     Size  Location     Type
 36941 ;;		None
 36942 ;; Return value:  Size  Location     Type
 36943 ;;                  1    wreg      void 
 36944 ;; Registers used:
 36945 ;;		wreg, status,2, status,0
 36946 ;; Tracked objects:
 36947 ;;		On entry : 0/0
 36948 ;;		On exit  : 0/0
 36949 ;;		Unchanged: 0/0
 36950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36951 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36954 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36955 ;;Total ram usage:        8 bytes
 36956 ;; Hardware stack levels used:    1
 36957 ;; Hardware stack levels required when called:   10
 36958 ;; This function calls:
 36959 ;;		Nothing
 36960 ;; This function is called by:
 36961 ;;		__flash_set_page_size
 36962 ;;		__flash_wakeup
 36963 ;;		__flash_copy_page_to_buffer
 36964 ;;		__flash_compare_page_to_buffer
 36965 ;;		__flash_write_page_from_buffer
 36966 ;;		__flash_erase_page
 36967 ;;		_flash_set_power_state
 36968 ;; This function uses a non-reentrant model
 36969 ;;
 36970                           
 36971                           	psect	text158
 36972  01296E                     __ptext158:
 36973                           	opt stack 0
 36974  01296E                     __flash_spi_tx:
 36975                           	opt stack 15
 36976                           
 36977                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 36978                           
 36979                           ; BSR set to: 0
 36980                           ;incstack = 0
 36981  01296E  9E88               	bcf	3976,7,c	;volatile
 36982                           
 36983                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 36984  012970  9C88               	bcf	3976,6,c	;volatile
 36985                           
 36986                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 36987  012972  8A88               	bsf	3976,5,c	;volatile
 36988                           
 36989                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 36990  012974  9888               	bcf	3976,4,c	;volatile
 36991                           
 36992                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 36993  012976  9688               	bcf	3976,3,c	;volatile
 36994                           
 36995                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 36996  012978  8488               	bsf	3976,2,c	;volatile
 36997                           
 36998                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 36999  01297A  9288               	bcf	3976,1,c	;volatile
 37000                           
 37001                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 37002  01297C  9886               	bcf	3974,4,c	;volatile
 37003  01297E  9A86               	bcf	3974,5,c	;volatile
 37004  012980  9C86               	bcf	3974,6,c	;volatile
 37005  012982  9E86               	bcf	3974,7,c	;volatile
 37006                           
 37007                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 37008  012984  9086               	bcf	3974,0,c	;volatile
 37009  012986  9286               	bcf	3974,1,c	;volatile
 37010  012988  9486               	bcf	3974,2,c	;volatile
 37011  01298A  9686               	bcf	3974,3,c	;volatile
 37012                           
 37013                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37014  01298C  0100               	movlb	0	; () banked
 37015  01298E  5161               	movf	(__flash_spi_tx@data+1)& (0+255),w,b
 37016  012990  6E6A               	movwf	3946,c	;volatile
 37017                           
 37018                           ; BSR set to: 0
 37019                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37020  012992  C060  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 37021                           
 37022                           ; BSR set to: 0
 37023                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37024  012996  0EFF               	movlw	255
 37025  012998  0100               	movlb	0	; () banked
 37026  01299A  6F64               	movwf	??__flash_spi_tx& (0+255),b
 37027  01299C  0EFF               	movlw	255
 37028  01299E  0100               	movlb	0	; () banked
 37029  0129A0  6F65               	movwf	(??__flash_spi_tx+1)& (0+255),b
 37030  0129A2  C062  F066         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 37031  0129A6  C063  F067         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 37032  0129AA  0100               	movlb	0	; () banked
 37033  0129AC  5164               	movf	??__flash_spi_tx& (0+255),w,b
 37034  0129AE  0100               	movlb	0	; () banked
 37035  0129B0  2766               	addwf	(??__flash_spi_tx+2)& (0+255),f,b
 37036  0129B2  0100               	movlb	0	; () banked
 37037  0129B4  5165               	movf	(??__flash_spi_tx+1)& (0+255),w,b
 37038  0129B6  0100               	movlb	0	; () banked
 37039  0129B8  2367               	addwfc	(??__flash_spi_tx+3)& (0+255),f,b
 37040  0129BA  C067  F066         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 37041  0129BE  0100               	movlb	0	; () banked
 37042  0129C0  6B67               	clrf	(??__flash_spi_tx+3)& (0+255),b
 37043  0129C2  0100               	movlb	0	; () banked
 37044  0129C4  5166               	movf	(??__flash_spi_tx+2)& (0+255),w,b
 37045  0129C6  6E66               	movwf	3942,c	;volatile
 37046                           
 37047                           ; BSR set to: 0
 37048                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37049  0129C8  0100               	movlb	0	; () banked
 37050  0129CA  0562               	decf	__flash_spi_tx@length& (0+255),w,b
 37051  0129CC  6E67               	movwf	3943,c	;volatile
 37052                           
 37053                           ; BSR set to: 0
 37054                           ;flash.c: 131: LATDbits.LD7 = 0;
 37055  0129CE  9E8C               	bcf	3980,7,c	;volatile
 37056                           
 37057                           ; BSR set to: 0
 37058                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 37059  0129D0  8088               	bsf	3976,0,c	;volatile
 37060  0129D2                     l2750:
 37061  0129D2  B088               	btfsc	3976,0,c	;volatile
 37062  0129D4  D7FE               	goto	l2750
 37063                           
 37064                           ;flash.c: 134: LATDbits.LD7 = 1;
 37065  0129D6  8E8C               	bsf	3980,7,c	;volatile
 37066  0129D8  0012               	return		;funcret
 37067  0129DA                     __end_of__flash_spi_tx:
 37068                           	opt stack 0
 37069                           tosu	equ	0xFFF
 37070                           tosh	equ	0xFFE
 37071                           tosl	equ	0xFFD
 37072                           pclath	equ	0xFFA
 37073                           tblptru	equ	0xFF8
 37074                           tblptrh	equ	0xFF7
 37075                           tblptrl	equ	0xFF6
 37076                           tablat	equ	0xFF5
 37077                           prodh	equ	0xFF4
 37078                           prodl	equ	0xFF3
 37079                           intcon	equ	0xFF2
 37080                           intcon2	equ	0xFF1
 37081                           intcon3	equ	0xFF0
 37082                           postinc0	equ	0xFEE
 37083                           wreg	equ	0xFE8
 37084                           indf1	equ	0xFE7
 37085                           postinc1	equ	0xFE6
 37086                           postdec1	equ	0xFE5
 37087                           plusw1	equ	0xFE3
 37088                           fsr1h	equ	0xFE2
 37089                           fsr1l	equ	0xFE1
 37090                           indf2	equ	0xFDF
 37091                           postinc2	equ	0xFDE
 37092                           postdec2	equ	0xFDD
 37093                           plusw2	equ	0xFDB
 37094                           fsr2h	equ	0xFDA
 37095                           fsr2l	equ	0xFD9
 37096                           status	equ	0xFD8
 37097                           
 37098 ;; *************** function __flash_get_status *****************
 37099 ;; Defined at:
 37100 ;;		line 278 in file "flash.c"
 37101 ;; Parameters:    Size  Location     Type
 37102 ;;		None
 37103 ;; Auto vars:     Size  Location     Type
 37104 ;;  status          2   15[BANK0 ] unsigned int 
 37105 ;;  command         1   14[BANK0 ] unsigned char 
 37106 ;; Return value:  Size  Location     Type
 37107 ;;                  2   12[BANK0 ] unsigned int 
 37108 ;; Registers used:
 37109 ;;		wreg, status,2, status,0, cstack
 37110 ;; Tracked objects:
 37111 ;;		On entry : 0/0
 37112 ;;		On exit  : 0/0
 37113 ;;		Unchanged: 0/0
 37114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37116 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37118 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37119 ;;Total ram usage:        5 bytes
 37120 ;; Hardware stack levels used:    1
 37121 ;; Hardware stack levels required when called:   11
 37122 ;; This function calls:
 37123 ;;		__flash_spi_tx_rx
 37124 ;; This function is called by:
 37125 ;;		__flash_compare_page_to_buffer
 37126 ;;		_flash_is_busy
 37127 ;; This function uses a non-reentrant model
 37128 ;;
 37129                           
 37130                           	psect	text159
 37131  013652                     __ptext159:
 37132                           	opt stack 0
 37133  013652                     __flash_get_status:
 37134                           	opt stack 15
 37135                           
 37136                           ;flash.c: 282: uint8_t command = 0xD7;
 37137                           
 37138                           ;incstack = 0
 37139  013652  0ED7               	movlw	215
 37140  013654  0100               	movlb	0	; () banked
 37141  013656  6F6E               	movwf	__flash_get_status@command& (0+255),b
 37142                           
 37143                           ; BSR set to: 0
 37144                           ;flash.c: 283: uint16_t status;
 37145                           ;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &status, 2);
 37146  013658  0E6E               	movlw	low __flash_get_status@command
 37147  01365A  0100               	movlb	0	; () banked
 37148  01365C  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 37149  01365E  0E00               	movlw	high __flash_get_status@command
 37150  013660  0100               	movlb	0	; () banked
 37151  013662  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 37152  013664  0E00               	movlw	0
 37153  013666  0100               	movlb	0	; () banked
 37154  013668  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 37155  01366A  0E01               	movlw	1
 37156  01366C  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 37157  01366E  0E6F               	movlw	low __flash_get_status@status
 37158  013670  0100               	movlb	0	; () banked
 37159  013672  6F64               	movwf	__flash_spi_tx_rx@data& (0+255),b
 37160  013674  0E00               	movlw	high __flash_get_status@status
 37161  013676  0100               	movlb	0	; () banked
 37162  013678  6F65               	movwf	(__flash_spi_tx_rx@data+1)& (0+255),b
 37163  01367A  0E00               	movlw	0
 37164  01367C  0100               	movlb	0	; () banked
 37165  01367E  6F67               	movwf	(__flash_spi_tx_rx@data_length+1)& (0+255),b
 37166  013680  0E02               	movlw	2
 37167  013682  6F66               	movwf	__flash_spi_tx_rx@data_length& (0+255),b
 37168  013684  ECCF  F088         	call	__flash_spi_tx_rx	;wreg free
 37169                           
 37170                           ;flash.c: 285: return status;
 37171  013688  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 37172  01368C  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37173  013690  0012               	return	
 37174  013692                     __end_of__flash_get_status:
 37175                           	opt stack 0
 37176                           tosu	equ	0xFFF
 37177                           tosh	equ	0xFFE
 37178                           tosl	equ	0xFFD
 37179                           pclath	equ	0xFFA
 37180                           tblptru	equ	0xFF8
 37181                           tblptrh	equ	0xFF7
 37182                           tblptrl	equ	0xFF6
 37183                           tablat	equ	0xFF5
 37184                           prodh	equ	0xFF4
 37185                           prodl	equ	0xFF3
 37186                           intcon	equ	0xFF2
 37187                           intcon2	equ	0xFF1
 37188                           intcon3	equ	0xFF0
 37189                           postinc0	equ	0xFEE
 37190                           wreg	equ	0xFE8
 37191                           indf1	equ	0xFE7
 37192                           postinc1	equ	0xFE6
 37193                           postdec1	equ	0xFE5
 37194                           plusw1	equ	0xFE3
 37195                           fsr1h	equ	0xFE2
 37196                           fsr1l	equ	0xFE1
 37197                           indf2	equ	0xFDF
 37198                           postinc2	equ	0xFDE
 37199                           postdec2	equ	0xFDD
 37200                           plusw2	equ	0xFDB
 37201                           fsr2h	equ	0xFDA
 37202                           fsr2l	equ	0xFD9
 37203                           status	equ	0xFD8
 37204                           
 37205 ;; *************** function __flash_spi_tx_rx *****************
 37206 ;; Defined at:
 37207 ;;		line 194 in file "flash.c"
 37208 ;; Parameters:    Size  Location     Type
 37209 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37210 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 37211 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37212 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37213 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 37214 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 37215 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_statu
      +s@status(2), 
 37216 ;;		 -> msd_buffer(512), 
 37217 ;;  data_length     2    6[BANK0 ] unsigned int 
 37218 ;; Auto vars:     Size  Location     Type
 37219 ;;		None
 37220 ;; Return value:  Size  Location     Type
 37221 ;;                  1    wreg      void 
 37222 ;; Registers used:
 37223 ;;		wreg, status,2, status,0
 37224 ;; Tracked objects:
 37225 ;;		On entry : 0/0
 37226 ;;		On exit  : 0/0
 37227 ;;		Unchanged: 0/0
 37228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37229 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37232 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37233 ;;Total ram usage:       12 bytes
 37234 ;; Hardware stack levels used:    1
 37235 ;; Hardware stack levels required when called:   10
 37236 ;; This function calls:
 37237 ;;		Nothing
 37238 ;; This function is called by:
 37239 ;;		__flash_get_status
 37240 ;;		_flash_partial_read
 37241 ;; This function uses a non-reentrant model
 37242 ;;
 37243                           
 37244                           	psect	text160
 37245  01119E                     __ptext160:
 37246                           	opt stack 0
 37247  01119E                     __flash_spi_tx_rx:
 37248                           	opt stack 15
 37249                           
 37250                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 37251                           
 37252                           ;incstack = 0
 37253  01119E  9E88               	bcf	3976,7,c	;volatile
 37254                           
 37255                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 37256  0111A0  9C88               	bcf	3976,6,c	;volatile
 37257                           
 37258                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 37259  0111A2  8A88               	bsf	3976,5,c	;volatile
 37260                           
 37261                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 37262  0111A4  9888               	bcf	3976,4,c	;volatile
 37263                           
 37264                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 37265  0111A6  9688               	bcf	3976,3,c	;volatile
 37266                           
 37267                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 37268  0111A8  8488               	bsf	3976,2,c	;volatile
 37269                           
 37270                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 37271  0111AA  9288               	bcf	3976,1,c	;volatile
 37272                           
 37273                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 37274  0111AC  9886               	bcf	3974,4,c	;volatile
 37275  0111AE  9A86               	bcf	3974,5,c	;volatile
 37276  0111B0  9C86               	bcf	3974,6,c	;volatile
 37277  0111B2  9E86               	bcf	3974,7,c	;volatile
 37278                           
 37279                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 37280  0111B4  9086               	bcf	3974,0,c	;volatile
 37281  0111B6  9286               	bcf	3974,1,c	;volatile
 37282  0111B8  9486               	bcf	3974,2,c	;volatile
 37283  0111BA  9686               	bcf	3974,3,c	;volatile
 37284                           
 37285                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37286  0111BC  0100               	movlb	0	; () banked
 37287  0111BE  5161               	movf	(__flash_spi_tx_rx@command+1)& (0+255),w,b
 37288  0111C0  6E6A               	movwf	3946,c	;volatile
 37289                           
 37290                           ; BSR set to: 0
 37291                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37292  0111C2  C060  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 37293                           
 37294                           ; BSR set to: 0
 37295                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37296  0111C6  0EFF               	movlw	255
 37297  0111C8  0100               	movlb	0	; () banked
 37298  0111CA  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 37299  0111CC  0EFF               	movlw	255
 37300  0111CE  0100               	movlb	0	; () banked
 37301  0111D0  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 37302  0111D2  C062  F06A         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 37303  0111D6  C063  F06B         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 37304  0111DA  0100               	movlb	0	; () banked
 37305  0111DC  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 37306  0111DE  0100               	movlb	0	; () banked
 37307  0111E0  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 37308  0111E2  0100               	movlb	0	; () banked
 37309  0111E4  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 37310  0111E6  0100               	movlb	0	; () banked
 37311  0111E8  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 37312  0111EA  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 37313  0111EE  0100               	movlb	0	; () banked
 37314  0111F0  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 37315  0111F2  0100               	movlb	0	; () banked
 37316  0111F4  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 37317  0111F6  6E66               	movwf	3942,c	;volatile
 37318                           
 37319                           ; BSR set to: 0
 37320                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37321  0111F8  0100               	movlb	0	; () banked
 37322  0111FA  0562               	decf	__flash_spi_tx_rx@command_length& (0+255),w,b
 37323  0111FC  6E67               	movwf	3943,c	;volatile
 37324                           
 37325                           ; BSR set to: 0
 37326                           ;flash.c: 222: LATDbits.LD7 = 0;
 37327  0111FE  9E8C               	bcf	3980,7,c	;volatile
 37328                           
 37329                           ; BSR set to: 0
 37330                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 37331  011200  8088               	bsf	3976,0,c	;volatile
 37332  011202                     l2765:
 37333  011202  B088               	btfsc	3976,0,c	;volatile
 37334  011204  D7FE               	goto	l2765
 37335                           
 37336                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 37337  011206  9A88               	bcf	3976,5,c	;volatile
 37338                           
 37339                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 37340  011208  8888               	bsf	3976,4,c	;volatile
 37341                           
 37342                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 37343  01120A  9688               	bcf	3976,3,c	;volatile
 37344                           
 37345                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 37346  01120C  9488               	bcf	3976,2,c	;volatile
 37347                           
 37348                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37349  01120E  0100               	movlb	0	; () banked
 37350  011210  5165               	movf	(__flash_spi_tx_rx@data+1)& (0+255),w,b
 37351  011212  6E68               	movwf	3944,c	;volatile
 37352                           
 37353                           ; BSR set to: 0
 37354                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37355  011214  C064  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 37356                           
 37357                           ; BSR set to: 0
 37358                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37359  011218  0EFF               	movlw	255
 37360  01121A  0100               	movlb	0	; () banked
 37361  01121C  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 37362  01121E  0EFF               	movlw	255
 37363  011220  0100               	movlb	0	; () banked
 37364  011222  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 37365  011224  C066  F06A         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 37366  011228  C067  F06B         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 37367  01122C  0100               	movlb	0	; () banked
 37368  01122E  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 37369  011230  0100               	movlb	0	; () banked
 37370  011232  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 37371  011234  0100               	movlb	0	; () banked
 37372  011236  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 37373  011238  0100               	movlb	0	; () banked
 37374  01123A  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 37375  01123C  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 37376  011240  0100               	movlb	0	; () banked
 37377  011242  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 37378  011244  0100               	movlb	0	; () banked
 37379  011246  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 37380  011248  6E66               	movwf	3942,c	;volatile
 37381                           
 37382                           ; BSR set to: 0
 37383                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37384  01124A  0100               	movlb	0	; () banked
 37385  01124C  0566               	decf	__flash_spi_tx_rx@data_length& (0+255),w,b
 37386  01124E  6E67               	movwf	3943,c	;volatile
 37387                           
 37388                           ; BSR set to: 0
 37389                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 37390  011250  8088               	bsf	3976,0,c	;volatile
 37391  011252                     l2768:
 37392  011252  B088               	btfsc	3976,0,c	;volatile
 37393  011254  D7FE               	goto	l2768
 37394                           
 37395                           ;flash.c: 249: LATDbits.LD7 = 1;
 37396  011256  8E8C               	bsf	3980,7,c	;volatile
 37397  011258  0012               	return		;funcret
 37398  01125A                     __end_of__flash_spi_tx_rx:
 37399                           	opt stack 0
 37400                           tosu	equ	0xFFF
 37401                           tosh	equ	0xFFE
 37402                           tosl	equ	0xFFD
 37403                           pclath	equ	0xFFA
 37404                           tblptru	equ	0xFF8
 37405                           tblptrh	equ	0xFF7
 37406                           tblptrl	equ	0xFF6
 37407                           tablat	equ	0xFF5
 37408                           prodh	equ	0xFF4
 37409                           prodl	equ	0xFF3
 37410                           intcon	equ	0xFF2
 37411                           intcon2	equ	0xFF1
 37412                           intcon3	equ	0xFF0
 37413                           postinc0	equ	0xFEE
 37414                           wreg	equ	0xFE8
 37415                           indf1	equ	0xFE7
 37416                           postinc1	equ	0xFE6
 37417                           postdec1	equ	0xFE5
 37418                           plusw1	equ	0xFE3
 37419                           fsr1h	equ	0xFE2
 37420                           fsr1l	equ	0xFE1
 37421                           indf2	equ	0xFDF
 37422                           postinc2	equ	0xFDE
 37423                           postdec2	equ	0xFDD
 37424                           plusw2	equ	0xFDB
 37425                           fsr2h	equ	0xFDA
 37426                           fsr2l	equ	0xFD9
 37427                           status	equ	0xFD8
 37428                           
 37429 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37430 ;; Defined at:
 37431 ;;		line 993 in file "usb_device_msd.c"
 37432 ;; Parameters:    Size  Location     Type
 37433 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37434 ;; Auto vars:     Size  Location     Type
 37435 ;;		None
 37436 ;; Return value:  Size  Location     Type
 37437 ;;                  1    wreg      void 
 37438 ;; Registers used:
 37439 ;;		wreg, status,2, status,0
 37440 ;; Tracked objects:
 37441 ;;		On entry : 0/0
 37442 ;;		On exit  : 0/0
 37443 ;;		Unchanged: 0/0
 37444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37447 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37448 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37449 ;;Total ram usage:        6 bytes
 37450 ;; Hardware stack levels used:    1
 37451 ;; Hardware stack levels required when called:   10
 37452 ;; This function calls:
 37453 ;;		Nothing
 37454 ;; This function is called by:
 37455 ;;		_MSDProcessCommandMediaPresent
 37456 ;; This function uses a non-reentrant model
 37457 ;;
 37458                           
 37459                           	psect	text161
 37460  0109FE                     __ptext161:
 37461                           	opt stack 0
 37462  0109FE                     _MSDComputeDeviceInAndResidue:
 37463                           	opt stack 16
 37464                           
 37465                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37466                           
 37467                           ;incstack = 0
 37468  0109FE  0100               	movlb	0	; () banked
 37469  010A00  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37470  010A02  0100               	movlb	0	; () banked
 37471  010A04  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37472  010A06  0100               	movlb	0	; () banked
 37473  010A08  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37474  010A0A  0100               	movlb	0	; () banked
 37475  010A0C  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37476  010A0E  0100               	movlb	0	; () banked
 37477  010A10  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37478  010A12  0100               	movlb	0	; () banked
 37479  010A14  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37480  010A16  0100               	movlb	0	; () banked
 37481  010A18  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37482  010A1A  0102               	movlb	2	; () banked
 37483  010A1C  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 37484  010A1E  0100               	movlb	0	; () banked
 37485  010A20  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37486  010A22  0102               	movlb	2	; () banked
 37487  010A24  594A               	subwfb	(_gblCBW+9)& (0+255),w,b
 37488  010A26  0100               	movlb	0	; () banked
 37489  010A28  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37490  010A2A  0102               	movlb	2	; () banked
 37491  010A2C  594B               	subwfb	(_gblCBW+10)& (0+255),w,b
 37492  010A2E  0100               	movlb	0	; () banked
 37493  010A30  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37494  010A32  0102               	movlb	2	; () banked
 37495  010A34  594C               	subwfb	(_gblCBW+11)& (0+255),w,b
 37496  010A36  B0D8               	btfsc	status,0,c
 37497  010A38  D00E               	goto	l18289
 37498                           
 37499                           ; BSR set to: 2
 37500                           ;usb_device_msd.c: 997: {
 37501                           ;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37502  010A3A  0E00               	movlw	0
 37503  010A3C  010D               	movlb	13	; () banked
 37504  010A3E  6F88               	movwf	136,b	;volatile
 37505  010A40  0E00               	movlw	0
 37506  010A42  6F89               	movwf	137,b	;volatile
 37507  010A44  0E00               	movlw	0
 37508  010A46  6F8A               	movwf	138,b	;volatile
 37509  010A48  0E00               	movlw	0
 37510  010A4A  6F8B               	movwf	139,b	;volatile
 37511                           
 37512                           ; BSR set to: 13
 37513                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37514  010A4C  C249  F0D9         	movff	_gblCBW+8,_TransferLength
 37515  010A50  C24A  F0DA         	movff	_gblCBW+9,_TransferLength+1
 37516                           
 37517                           ;usb_device_msd.c: 1002: }
 37518  010A54  0012               	return	
 37519  010A56                     l18289:
 37520                           
 37521                           ;usb_device_msd.c: 1003: else
 37522                           ;usb_device_msd.c: 1004: {
 37523                           ;usb_device_msd.c: 1006: if(DiExpected < TransferLength.Val)
 37524  010A56  0100               	movlb	0	; () banked
 37525  010A58  51D9               	movf	_TransferLength& (0+255),w,b
 37526  010A5A  0100               	movlb	0	; () banked
 37527  010A5C  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37528  010A5E  0100               	movlb	0	; () banked
 37529  010A60  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 37530  010A62  0100               	movlb	0	; () banked
 37531  010A64  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37532  010A66  B0D8               	btfsc	status,0,c
 37533  010A68  D004               	goto	l18293
 37534                           
 37535                           ; BSR set to: 0
 37536                           ;usb_device_msd.c: 1007: {
 37537                           ;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37538  010A6A  C060  F0D9         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37539  010A6E  C061  F0DA         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37540  010A72                     l18293:
 37541                           
 37542                           ; BSR set to: 0
 37543                           ;usb_device_msd.c: 1009: }
 37544                           ;usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength - Trans
      +                          ferLength.Val;
 37545  010A72  0100               	movlb	0	; () banked
 37546  010A74  51D9               	movf	_TransferLength& (0+255),w,b
 37547  010A76  0100               	movlb	0	; () banked
 37548  010A78  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37549  010A7A  0100               	movlb	0	; () banked
 37550  010A7C  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 37551  010A7E  0100               	movlb	0	; () banked
 37552  010A80  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37553  010A82  0100               	movlb	0	; () banked
 37554  010A84  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37555  010A86  0100               	movlb	0	; () banked
 37556  010A88  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37557  010A8A  0100               	movlb	0	; () banked
 37558  010A8C  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37559  010A8E  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37560  010A90  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37561  010A92  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37562  010A94  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37563  010A96  0E00               	movlw	0
 37564  010A98  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37565  010A9A  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37566  010A9C  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37567  010A9E  0102               	movlb	2	; () banked
 37568  010AA0  5149               	movf	(_gblCBW+8)& (0+255),w,b
 37569  010AA2  0100               	movlb	0	; () banked
 37570  010AA4  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37571  010AA6  010D               	movlb	13	; () banked
 37572  010AA8  6F88               	movwf	136,b	;volatile
 37573  010AAA  0102               	movlb	2	; () banked
 37574  010AAC  514A               	movf	(_gblCBW+9)& (0+255),w,b
 37575  010AAE  0100               	movlb	0	; () banked
 37576  010AB0  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37577  010AB2  010D               	movlb	13	; () banked
 37578  010AB4  6F89               	movwf	137,b	;volatile
 37579  010AB6  0102               	movlb	2	; () banked
 37580  010AB8  514B               	movf	(_gblCBW+10)& (0+255),w,b
 37581  010ABA  0100               	movlb	0	; () banked
 37582  010ABC  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37583  010ABE  010D               	movlb	13	; () banked
 37584  010AC0  6F8A               	movwf	138,b	;volatile
 37585  010AC2  0102               	movlb	2	; () banked
 37586  010AC4  514C               	movf	(_gblCBW+11)& (0+255),w,b
 37587  010AC6  0100               	movlb	0	; () banked
 37588  010AC8  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37589  010ACA  010D               	movlb	13	; () banked
 37590  010ACC  6F8B               	movwf	139,b	;volatile
 37591  010ACE  0012               	return	
 37592  010AD0                     __end_of_MSDComputeDeviceInAndResidue:
 37593                           	opt stack 0
 37594                           tosu	equ	0xFFF
 37595                           tosh	equ	0xFFE
 37596                           tosl	equ	0xFFD
 37597                           pclath	equ	0xFFA
 37598                           tblptru	equ	0xFF8
 37599                           tblptrh	equ	0xFF7
 37600                           tblptrl	equ	0xFF6
 37601                           tablat	equ	0xFF5
 37602                           prodh	equ	0xFF4
 37603                           prodl	equ	0xFF3
 37604                           intcon	equ	0xFF2
 37605                           intcon2	equ	0xFF1
 37606                           intcon3	equ	0xFF0
 37607                           postinc0	equ	0xFEE
 37608                           wreg	equ	0xFE8
 37609                           indf1	equ	0xFE7
 37610                           postinc1	equ	0xFE6
 37611                           postdec1	equ	0xFE5
 37612                           plusw1	equ	0xFE3
 37613                           fsr1h	equ	0xFE2
 37614                           fsr1l	equ	0xFE1
 37615                           indf2	equ	0xFDF
 37616                           postinc2	equ	0xFDE
 37617                           postdec2	equ	0xFDD
 37618                           plusw2	equ	0xFDB
 37619                           fsr2h	equ	0xFDA
 37620                           fsr2l	equ	0xFD9
 37621                           status	equ	0xFD8
 37622                           
 37623 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37624 ;; Defined at:
 37625 ;;		line 18 in file "external_flash.c"
 37626 ;; Parameters:    Size  Location     Type
 37627 ;;  config          2    0[BANK0 ] PTR void 
 37628 ;;		 -> NULL(0), 
 37629 ;; Auto vars:     Size  Location     Type
 37630 ;;		None
 37631 ;; Return value:  Size  Location     Type
 37632 ;;                  2    0[BANK0 ] unsigned int 
 37633 ;; Registers used:
 37634 ;;		wreg, status,2
 37635 ;; Tracked objects:
 37636 ;;		On entry : 0/0
 37637 ;;		On exit  : 0/0
 37638 ;;		Unchanged: 0/0
 37639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37644 ;;Total ram usage:        2 bytes
 37645 ;; Hardware stack levels used:    1
 37646 ;; Hardware stack levels required when called:   10
 37647 ;; This function calls:
 37648 ;;		Nothing
 37649 ;; This function is called by:
 37650 ;;		_MSDProcessCommandMediaPresent
 37651 ;; This function uses a non-reentrant model
 37652 ;;
 37653                           
 37654                           	psect	text162
 37655  01427C                     __ptext162:
 37656                           	opt stack 0
 37657  01427C                     _ExternalFlash_SectorSizeRead:
 37658                           	opt stack 16
 37659                           
 37660                           ;external_flash.c: 21: return 512;
 37661                           
 37662                           ; BSR set to: 13
 37663                           ;incstack = 0
 37664  01427C  0E02               	movlw	2
 37665  01427E  0100               	movlb	0	; () banked
 37666  014280  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37667  014282  0E00               	movlw	0
 37668  014284  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37669  014286  0012               	return	
 37670  014288                     __end_of_ExternalFlash_SectorSizeRead:
 37671                           	opt stack 0
 37672                           tosu	equ	0xFFF
 37673                           tosh	equ	0xFFE
 37674                           tosl	equ	0xFFD
 37675                           pclath	equ	0xFFA
 37676                           tblptru	equ	0xFF8
 37677                           tblptrh	equ	0xFF7
 37678                           tblptrl	equ	0xFF6
 37679                           tablat	equ	0xFF5
 37680                           prodh	equ	0xFF4
 37681                           prodl	equ	0xFF3
 37682                           intcon	equ	0xFF2
 37683                           intcon2	equ	0xFF1
 37684                           intcon3	equ	0xFF0
 37685                           postinc0	equ	0xFEE
 37686                           wreg	equ	0xFE8
 37687                           indf1	equ	0xFE7
 37688                           postinc1	equ	0xFE6
 37689                           postdec1	equ	0xFE5
 37690                           plusw1	equ	0xFE3
 37691                           fsr1h	equ	0xFE2
 37692                           fsr1l	equ	0xFE1
 37693                           indf2	equ	0xFDF
 37694                           postinc2	equ	0xFDE
 37695                           postdec2	equ	0xFDD
 37696                           plusw2	equ	0xFDB
 37697                           fsr2h	equ	0xFDA
 37698                           fsr2l	equ	0xFD9
 37699                           status	equ	0xFD8
 37700                           
 37701 ;; *************** function _ExternalFlash_CapacityRead *****************
 37702 ;; Defined at:
 37703 ;;		line 24 in file "external_flash.c"
 37704 ;; Parameters:    Size  Location     Type
 37705 ;;  config          2    0[BANK0 ] PTR void 
 37706 ;;		 -> NULL(0), 
 37707 ;; Auto vars:     Size  Location     Type
 37708 ;;		None
 37709 ;; Return value:  Size  Location     Type
 37710 ;;                  4    0[BANK0 ] unsigned long 
 37711 ;; Registers used:
 37712 ;;		wreg, status,2
 37713 ;; Tracked objects:
 37714 ;;		On entry : 0/0
 37715 ;;		On exit  : 0/0
 37716 ;;		Unchanged: 0/0
 37717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37721 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37722 ;;Total ram usage:        4 bytes
 37723 ;; Hardware stack levels used:    1
 37724 ;; Hardware stack levels required when called:   10
 37725 ;; This function calls:
 37726 ;;		Nothing
 37727 ;; This function is called by:
 37728 ;;		_MSDProcessCommandMediaPresent
 37729 ;; This function uses a non-reentrant model
 37730 ;;
 37731                           
 37732                           	psect	text163
 37733  01412C                     __ptext163:
 37734                           	opt stack 0
 37735  01412C                     _ExternalFlash_CapacityRead:
 37736                           	opt stack 16
 37737                           
 37738                           ;external_flash.c: 26: return ((uint32_t) 8196 - 1);
 37739                           
 37740                           ; BSR set to: 0
 37741                           ;incstack = 0
 37742  01412C  0E03               	movlw	3
 37743  01412E  0100               	movlb	0	; () banked
 37744  014130  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 37745  014132  0E20               	movlw	32
 37746  014134  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 37747  014136  0E00               	movlw	0
 37748  014138  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 37749  01413A  0E00               	movlw	0
 37750  01413C  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 37751  01413E  0012               	return	
 37752  014140                     __end_of_ExternalFlash_CapacityRead:
 37753                           	opt stack 0
 37754                           tosu	equ	0xFFF
 37755                           tosh	equ	0xFFE
 37756                           tosl	equ	0xFFD
 37757                           pclath	equ	0xFFA
 37758                           tblptru	equ	0xFF8
 37759                           tblptrh	equ	0xFF7
 37760                           tblptrl	equ	0xFF6
 37761                           tablat	equ	0xFF5
 37762                           prodh	equ	0xFF4
 37763                           prodl	equ	0xFF3
 37764                           intcon	equ	0xFF2
 37765                           intcon2	equ	0xFF1
 37766                           intcon3	equ	0xFF0
 37767                           postinc0	equ	0xFEE
 37768                           wreg	equ	0xFE8
 37769                           indf1	equ	0xFE7
 37770                           postinc1	equ	0xFE6
 37771                           postdec1	equ	0xFE5
 37772                           plusw1	equ	0xFE3
 37773                           fsr1h	equ	0xFE2
 37774                           fsr1l	equ	0xFE1
 37775                           indf2	equ	0xFDF
 37776                           postinc2	equ	0xFDE
 37777                           postdec2	equ	0xFDD
 37778                           plusw2	equ	0xFDB
 37779                           fsr2h	equ	0xFDA
 37780                           fsr2l	equ	0xFD9
 37781                           status	equ	0xFD8
 37782                           
 37783 ;; *************** function _ExternalFlash_MediaInitialize *****************
 37784 ;; Defined at:
 37785 ;;		line 10 in file "external_flash.c"
 37786 ;; Parameters:    Size  Location     Type
 37787 ;;  config          2    0[BANK0 ] PTR void 
 37788 ;;		 -> NULL(0), 
 37789 ;; Auto vars:     Size  Location     Type
 37790 ;;		None
 37791 ;; Return value:  Size  Location     Type
 37792 ;;                  2    0[BANK0 ] PTR struct .
 37793 ;; Registers used:
 37794 ;;		wreg, status,2, status,0
 37795 ;; Tracked objects:
 37796 ;;		On entry : 0/0
 37797 ;;		On exit  : 0/0
 37798 ;;		Unchanged: 0/0
 37799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37803 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37804 ;;Total ram usage:        2 bytes
 37805 ;; Hardware stack levels used:    1
 37806 ;; Hardware stack levels required when called:   10
 37807 ;; This function calls:
 37808 ;;		Nothing
 37809 ;; This function is called by:
 37810 ;;		_USBMSDInit
 37811 ;;		_MSDProcessCommand
 37812 ;; This function uses a non-reentrant model
 37813 ;;
 37814                           
 37815                           	psect	text164
 37816  013E62                     __ptext164:
 37817                           	opt stack 0
 37818  013E62                     _ExternalFlash_MediaInitialize:
 37819                           	opt stack 0
 37820                           
 37821                           ; BSR set to: 0
 37822                           ;Skip over the trampoline to the duplicate function for level 2
 37823  013E62  B25B               	btfsc	btemp,1,c
 37824  013E64  EFCD  F09F         	goto	i2_ExternalFlash_MediaInitialize
 37825  013E68                     _ExternalFlash_MediaInitialize$intlevel0:
 37826                           	opt stack 17
 37827                           
 37828                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 37829                           
 37830                           ;incstack = 0
 37831  013E68  0102               	movlb	2	; () banked
 37832  013E6A  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 37833                           
 37834                           ; BSR set to: 2
 37835                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 37836  013E6C  0E02               	movlw	2
 37837  013E6E  0102               	movlb	2	; () banked
 37838  013E70  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 37839  013E72  0E00               	movlw	0
 37840  013E74  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 37841                           
 37842                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 37843  013E76  0E00               	movlw	0
 37844  013E78  0102               	movlb	2	; () banked
 37845  013E7A  6FB6               	movwf	_mediaInformation& (0+255),b
 37846                           
 37847                           ; BSR set to: 2
 37848                           ;external_flash.c: 15: return &mediaInformation;
 37849  013E7C  0EB6               	movlw	low _mediaInformation
 37850  013E7E  0100               	movlb	0	; () banked
 37851  013E80  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 37852  013E82  0E02               	movlw	high _mediaInformation
 37853  013E84  0100               	movlb	0	; () banked
 37854  013E86  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 37855  013E88  0012               	return	
 37856  013E8A                     __end_of_ExternalFlash_MediaInitialize:
 37857                           	opt stack 0
 37858                           tosu	equ	0xFFF
 37859                           tosh	equ	0xFFE
 37860                           tosl	equ	0xFFD
 37861                           pclath	equ	0xFFA
 37862                           tblptru	equ	0xFF8
 37863                           tblptrh	equ	0xFF7
 37864                           tblptrl	equ	0xFF6
 37865                           tablat	equ	0xFF5
 37866                           prodh	equ	0xFF4
 37867                           prodl	equ	0xFF3
 37868                           intcon	equ	0xFF2
 37869                           intcon2	equ	0xFF1
 37870                           intcon3	equ	0xFF0
 37871                           postinc0	equ	0xFEE
 37872                           wreg	equ	0xFE8
 37873                           indf1	equ	0xFE7
 37874                           postinc1	equ	0xFE6
 37875                           postdec1	equ	0xFE5
 37876                           plusw1	equ	0xFE3
 37877                           fsr1h	equ	0xFE2
 37878                           fsr1l	equ	0xFE1
 37879                           indf2	equ	0xFDF
 37880                           postinc2	equ	0xFDE
 37881                           postdec2	equ	0xFDD
 37882                           plusw2	equ	0xFDB
 37883                           fsr2h	equ	0xFDA
 37884                           fsr2l	equ	0xFD9
 37885                           status	equ	0xFD8
 37886                           
 37887 ;; *************** function _ExternalFlash_MediaDetect *****************
 37888 ;; Defined at:
 37889 ;;		line 29 in file "external_flash.c"
 37890 ;; Parameters:    Size  Location     Type
 37891 ;;  config          2    0[BANK0 ] PTR void 
 37892 ;;		 -> NULL(0), 
 37893 ;; Auto vars:     Size  Location     Type
 37894 ;;		None
 37895 ;; Return value:  Size  Location     Type
 37896 ;;                  1    wreg      unsigned char 
 37897 ;; Registers used:
 37898 ;;		wreg
 37899 ;; Tracked objects:
 37900 ;;		On entry : 0/0
 37901 ;;		On exit  : 0/0
 37902 ;;		Unchanged: 0/0
 37903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37907 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37908 ;;Total ram usage:        2 bytes
 37909 ;; Hardware stack levels used:    1
 37910 ;; Hardware stack levels required when called:   10
 37911 ;; This function calls:
 37912 ;;		Nothing
 37913 ;; This function is called by:
 37914 ;;		_USBMSDInit
 37915 ;;		_MSDProcessCommand
 37916 ;; This function uses a non-reentrant model
 37917 ;;
 37918                           
 37919                           	psect	text165
 37920  0142B0                     __ptext165:
 37921                           	opt stack 0
 37922  0142B0                     _ExternalFlash_MediaDetect:
 37923                           	opt stack 0
 37924                           
 37925                           ; BSR set to: 0
 37926                           ;Skip over the trampoline to the duplicate function for level 2
 37927  0142B0  B25B               	btfsc	btemp,1,c
 37928  0142B2  EF7A  F0A1         	goto	i2_ExternalFlash_MediaDetect
 37929  0142B6                     _ExternalFlash_MediaDetect$intlevel0:
 37930                           	opt stack 17
 37931                           
 37932                           ;external_flash.c: 31: return 1;
 37933                           
 37934                           ;incstack = 0
 37935  0142B6  0E01               	movlw	1
 37936  0142B8  0012               	return	
 37937  0142BA                     __end_of_ExternalFlash_MediaDetect:
 37938                           	opt stack 0
 37939                           tosu	equ	0xFFF
 37940                           tosh	equ	0xFFE
 37941                           tosl	equ	0xFFD
 37942                           pclath	equ	0xFFA
 37943                           tblptru	equ	0xFF8
 37944                           tblptrh	equ	0xFF7
 37945                           tblptrl	equ	0xFF6
 37946                           tablat	equ	0xFF5
 37947                           prodh	equ	0xFF4
 37948                           prodl	equ	0xFF3
 37949                           intcon	equ	0xFF2
 37950                           intcon2	equ	0xFF1
 37951                           intcon3	equ	0xFF0
 37952                           postinc0	equ	0xFEE
 37953                           wreg	equ	0xFE8
 37954                           indf1	equ	0xFE7
 37955                           postinc1	equ	0xFE6
 37956                           postdec1	equ	0xFE5
 37957                           plusw1	equ	0xFE3
 37958                           fsr1h	equ	0xFE2
 37959                           fsr1l	equ	0xFE1
 37960                           indf2	equ	0xFDF
 37961                           postinc2	equ	0xFDE
 37962                           postdec2	equ	0xFDD
 37963                           plusw2	equ	0xFDB
 37964                           fsr2h	equ	0xFDA
 37965                           fsr2l	equ	0xFD9
 37966                           status	equ	0xFD8
 37967                           
 37968 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 37969 ;; Defined at:
 37970 ;;		line 108 in file "app_device_custom_hid.c"
 37971 ;; Parameters:    Size  Location     Type
 37972 ;;		None
 37973 ;; Auto vars:     Size  Location     Type
 37974 ;;  return_value    2   52[BANK0 ] unsigned int 
 37975 ;;  idx             1   54[BANK0 ] unsigned char 
 37976 ;; Return value:  Size  Location     Type
 37977 ;;                  1    wreg      void 
 37978 ;; Registers used:
 37979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37980 ;; Tracked objects:
 37981 ;;		On entry : 0/0
 37982 ;;		On exit  : 0/0
 37983 ;;		Unchanged: 0/0
 37984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37986 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37987 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37988 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37989 ;;Total ram usage:       11 bytes
 37990 ;; Hardware stack levels used:    1
 37991 ;; Hardware stack levels required when called:   15
 37992 ;; This function calls:
 37993 ;;		_USBTransferOnePacket
 37994 ;;		__fill_buffer_get_calibration1
 37995 ;;		__fill_buffer_get_calibration2
 37996 ;;		__fill_buffer_get_display1
 37997 ;;		__fill_buffer_get_display2
 37998 ;;		__fill_buffer_get_status
 37999 ;;		__parse_command_calibration
 38000 ;;		__parse_command_long
 38001 ;;		__parse_command_short
 38002 ;; This function is called by:
 38003 ;;		_main
 38004 ;; This function uses a non-reentrant model
 38005 ;;
 38006                           
 38007                           	psect	text166
 38008  00ACBA                     __ptext166:
 38009                           	opt stack 0
 38010  00ACBA                     _APP_DeviceCustomHIDTasks:
 38011                           	opt stack 15
 38012                           
 38013                           ;app_device_custom_hid.c: 110: uint8_t idx;
 38014                           ;app_device_custom_hid.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 38015                           
 38016                           ;incstack = 0
 38017  00ACBA  0E20               	movlw	32
 38018  00ACBC  602B               	cpfslt	_USBDeviceState,c	;volatile
 38019  00ACBE  D001               	goto	l1070
 38020  00ACC0  0012               	return	
 38021  00ACC2                     l1070:
 38022                           
 38023                           ;app_device_custom_hid.c: 118: }
 38024                           ;app_device_custom_hid.c: 124: if( UCONbits.SUSPND== 1 )
 38025  00ACC2  B265               	btfsc	3941,1,c	;volatile
 38026  00ACC4  0012               	return	
 38027                           
 38028                           ;app_device_custom_hid.c: 127: }
 38029                           ;app_device_custom_hid.c: 130: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
 38030                           
 38031                           ;app_device_custom_hid.c: 125: {
 38032                           ;app_device_custom_hid.c: 126: return;
 38033  00ACC6  0101               	movlb	1	; () banked
 38034  00ACC8  51E9               	movf	_USBOutHandle& (0+255),w,b
 38035  00ACCA  0101               	movlb	1	; () banked
 38036  00ACCC  11EA               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 38037  00ACCE  B4D8               	btfsc	status,2,c
 38038  00ACD0  D10C               	goto	l22525
 38039                           
 38040                           ; BSR set to: 1
 38041  00ACD2  C1E9  FFD9         	movff	_USBOutHandle,fsr2l
 38042  00ACD6  C1EA  FFDA         	movff	_USBOutHandle+1,fsr2h
 38043  00ACDA  0101               	movlb	1	; () banked
 38044  00ACDC  BEDF               	btfsc	indf2,7,c
 38045  00ACDE  0012               	return	
 38046  00ACE0  D104               	goto	l22525
 38047  00ACE2                     l22457:
 38048                           
 38049                           ;app_device_custom_hid.c: 140: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38050  00ACE2  0100               	movlb	0	; () banked
 38051  00ACE4  51D7               	movf	_USBInHandle& (0+255),w,b
 38052  00ACE6  0100               	movlb	0	; () banked
 38053  00ACE8  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38054  00ACEA  B4D8               	btfsc	status,2,c
 38055  00ACEC  D007               	goto	l22461
 38056                           
 38057                           ; BSR set to: 0
 38058  00ACEE  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38059  00ACF2  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38060  00ACF6  0100               	movlb	0	; () banked
 38061  00ACF8  BEDF               	btfsc	indf2,7,c
 38062  00ACFA  D111               	goto	l22527
 38063  00ACFC                     l22461:
 38064                           
 38065                           ; BSR set to: 0
 38066                           ;app_device_custom_hid.c: 141: {
 38067                           ;app_device_custom_hid.c: 143: _fill_buffer_get_status();
 38068  00ACFC  EC74  F066         	call	__fill_buffer_get_status	;wreg free
 38069                           
 38070                           ;app_device_custom_hid.c: 145: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38071  00AD00  0E01               	movlw	1
 38072  00AD02  0100               	movlb	0	; () banked
 38073  00AD04  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38074  00AD06  0EA4               	movlw	low _ToSendDataBuffer
 38075  00AD08  0100               	movlb	0	; () banked
 38076  00AD0A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38077  00AD0C  0E03               	movlw	high _ToSendDataBuffer
 38078  00AD0E  0100               	movlb	0	; () banked
 38079  00AD10  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38080  00AD12  0E40               	movlw	64
 38081  00AD14  0100               	movlb	0	; () banked
 38082  00AD16  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38083  00AD18  0E01               	movlw	1
 38084  00AD1A  EC6B  F077         	call	_USBTransferOnePacket
 38085  00AD1E  D0E0               	goto	L40
 38086  00AD20                     l22465:
 38087                           
 38088                           ;app_device_custom_hid.c: 151: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38089  00AD20  0100               	movlb	0	; () banked
 38090  00AD22  51D7               	movf	_USBInHandle& (0+255),w,b
 38091  00AD24  0100               	movlb	0	; () banked
 38092  00AD26  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38093  00AD28  B4D8               	btfsc	status,2,c
 38094  00AD2A  D007               	goto	l22469
 38095                           
 38096                           ; BSR set to: 0
 38097  00AD2C  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38098  00AD30  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38099  00AD34  0100               	movlb	0	; () banked
 38100  00AD36  BEDF               	btfsc	indf2,7,c
 38101  00AD38  D0F2               	goto	l22527
 38102  00AD3A                     l22469:
 38103                           
 38104                           ; BSR set to: 0
 38105                           ;app_device_custom_hid.c: 152: {
 38106                           ;app_device_custom_hid.c: 154: _fill_buffer_get_display1();
 38107  00AD3A  EC17  F097         	call	__fill_buffer_get_display1	;wreg free
 38108                           
 38109                           ;app_device_custom_hid.c: 156: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38110  00AD3E  0E01               	movlw	1
 38111  00AD40  0100               	movlb	0	; () banked
 38112  00AD42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38113  00AD44  0EA4               	movlw	low _ToSendDataBuffer
 38114  00AD46  0100               	movlb	0	; () banked
 38115  00AD48  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38116  00AD4A  0E03               	movlw	high _ToSendDataBuffer
 38117  00AD4C  0100               	movlb	0	; () banked
 38118  00AD4E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38119  00AD50  0E40               	movlw	64
 38120  00AD52  0100               	movlb	0	; () banked
 38121  00AD54  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38122  00AD56  0E01               	movlw	1
 38123  00AD58  EC6B  F077         	call	_USBTransferOnePacket
 38124  00AD5C  D0C1               	goto	L40
 38125  00AD5E                     l22471:
 38126                           
 38127                           ;app_device_custom_hid.c: 162: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38128  00AD5E  0100               	movlb	0	; () banked
 38129  00AD60  51D7               	movf	_USBInHandle& (0+255),w,b
 38130  00AD62  0100               	movlb	0	; () banked
 38131  00AD64  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38132  00AD66  B4D8               	btfsc	status,2,c
 38133  00AD68  D007               	goto	l22475
 38134                           
 38135                           ; BSR set to: 0
 38136  00AD6A  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38137  00AD6E  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38138  00AD72  0100               	movlb	0	; () banked
 38139  00AD74  BEDF               	btfsc	indf2,7,c
 38140  00AD76  D0D3               	goto	l22527
 38141  00AD78                     l22475:
 38142                           
 38143                           ; BSR set to: 0
 38144                           ;app_device_custom_hid.c: 163: {
 38145                           ;app_device_custom_hid.c: 165: _fill_buffer_get_display2();
 38146  00AD78  ECE6  F096         	call	__fill_buffer_get_display2	;wreg free
 38147                           
 38148                           ;app_device_custom_hid.c: 167: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38149  00AD7C  0E01               	movlw	1
 38150  00AD7E  0100               	movlb	0	; () banked
 38151  00AD80  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38152  00AD82  0EA4               	movlw	low _ToSendDataBuffer
 38153  00AD84  0100               	movlb	0	; () banked
 38154  00AD86  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38155  00AD88  0E03               	movlw	high _ToSendDataBuffer
 38156  00AD8A  0100               	movlb	0	; () banked
 38157  00AD8C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38158  00AD8E  0E40               	movlw	64
 38159  00AD90  0100               	movlb	0	; () banked
 38160  00AD92  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38161  00AD94  0E01               	movlw	1
 38162  00AD96  EC6B  F077         	call	_USBTransferOnePacket
 38163  00AD9A  D0A2               	goto	L40
 38164  00AD9C                     l22477:
 38165                           
 38166                           ;app_device_custom_hid.c: 173: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38167  00AD9C  0100               	movlb	0	; () banked
 38168  00AD9E  51D7               	movf	_USBInHandle& (0+255),w,b
 38169  00ADA0  0100               	movlb	0	; () banked
 38170  00ADA2  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38171  00ADA4  B4D8               	btfsc	status,2,c
 38172  00ADA6  D007               	goto	l22481
 38173                           
 38174                           ; BSR set to: 0
 38175  00ADA8  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38176  00ADAC  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38177  00ADB0  0100               	movlb	0	; () banked
 38178  00ADB2  BEDF               	btfsc	indf2,7,c
 38179  00ADB4  D0B4               	goto	l22527
 38180  00ADB6                     l22481:
 38181                           
 38182                           ; BSR set to: 0
 38183                           ;app_device_custom_hid.c: 174: {
 38184                           ;app_device_custom_hid.c: 176: _fill_buffer_get_calibration1();
 38185  00ADB6  ECE0  F08A         	call	__fill_buffer_get_calibration1	;wreg free
 38186                           
 38187                           ;app_device_custom_hid.c: 178: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38188  00ADBA  0E01               	movlw	1
 38189  00ADBC  0100               	movlb	0	; () banked
 38190  00ADBE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38191  00ADC0  0EA4               	movlw	low _ToSendDataBuffer
 38192  00ADC2  0100               	movlb	0	; () banked
 38193  00ADC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38194  00ADC6  0E03               	movlw	high _ToSendDataBuffer
 38195  00ADC8  0100               	movlb	0	; () banked
 38196  00ADCA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38197  00ADCC  0E40               	movlw	64
 38198  00ADCE  0100               	movlb	0	; () banked
 38199  00ADD0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38200  00ADD2  0E01               	movlw	1
 38201  00ADD4  EC6B  F077         	call	_USBTransferOnePacket
 38202  00ADD8  D083               	goto	L40
 38203  00ADDA                     l22485:
 38204                           
 38205                           ;app_device_custom_hid.c: 184: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38206  00ADDA  0100               	movlb	0	; () banked
 38207  00ADDC  51D7               	movf	_USBInHandle& (0+255),w,b
 38208  00ADDE  0100               	movlb	0	; () banked
 38209  00ADE0  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38210  00ADE2  B4D8               	btfsc	status,2,c
 38211  00ADE4  D007               	goto	l22489
 38212                           
 38213                           ; BSR set to: 0
 38214  00ADE6  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38215  00ADEA  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38216  00ADEE  0100               	movlb	0	; () banked
 38217  00ADF0  BEDF               	btfsc	indf2,7,c
 38218  00ADF2  D095               	goto	l22527
 38219  00ADF4                     l22489:
 38220                           
 38221                           ; BSR set to: 0
 38222                           ;app_device_custom_hid.c: 185: {
 38223                           ;app_device_custom_hid.c: 187: _fill_buffer_get_calibration2();
 38224  00ADF4  ECCB  F091         	call	__fill_buffer_get_calibration2	;wreg free
 38225                           
 38226                           ;app_device_custom_hid.c: 189: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38227  00ADF8  0E01               	movlw	1
 38228  00ADFA  0100               	movlb	0	; () banked
 38229  00ADFC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38230  00ADFE  0EA4               	movlw	low _ToSendDataBuffer
 38231  00AE00  0100               	movlb	0	; () banked
 38232  00AE02  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38233  00AE04  0E03               	movlw	high _ToSendDataBuffer
 38234  00AE06  0100               	movlb	0	; () banked
 38235  00AE08  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38236  00AE0A  0E40               	movlw	64
 38237  00AE0C  0100               	movlb	0	; () banked
 38238  00AE0E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38239  00AE10  0E01               	movlw	1
 38240  00AE12  EC6B  F077         	call	_USBTransferOnePacket
 38241  00AE16  D064               	goto	L40
 38242  00AE18                     l22493:
 38243                           
 38244                           ;app_device_custom_hid.c: 195: LATDbits.LD1 ^= 1;
 38245  00AE18  728C               	btg	3980,1,c	;volatile
 38246                           
 38247                           ;app_device_custom_hid.c: 196: break;
 38248  00AE1A  D081               	goto	l22527
 38249  00AE1C                     l22495:
 38250                           
 38251                           ;app_device_custom_hid.c: 200: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38252  00AE1C  0100               	movlb	0	; () banked
 38253  00AE1E  51D7               	movf	_USBInHandle& (0+255),w,b
 38254  00AE20  0100               	movlb	0	; () banked
 38255  00AE22  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38256  00AE24  B4D8               	btfsc	status,2,c
 38257  00AE26  D007               	goto	l22499
 38258                           
 38259                           ; BSR set to: 0
 38260  00AE28  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38261  00AE2C  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38262  00AE30  0100               	movlb	0	; () banked
 38263  00AE32  BEDF               	btfsc	indf2,7,c
 38264  00AE34  D074               	goto	l22527
 38265  00AE36                     l22499:
 38266                           
 38267                           ; BSR set to: 0
 38268                           ;app_device_custom_hid.c: 201: {
 38269                           ;app_device_custom_hid.c: 203: ToSendDataBuffer[0] = COMMAND_GET_BUTTON_STATUS;
 38270  00AE36  0E81               	movlw	129
 38271  00AE38  0103               	movlb	3	; () banked
 38272  00AE3A  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 38273                           
 38274                           ; BSR set to: 3
 38275                           ;app_device_custom_hid.c: 204: if(PORTAbits.RA0)
 38276  00AE3C  A080               	btfss	3968,0,c	;volatile
 38277  00AE3E  D002               	goto	l22505
 38278                           
 38279                           ; BSR set to: 3
 38280                           ;app_device_custom_hid.c: 205: {
 38281                           ;app_device_custom_hid.c: 207: ToSendDataBuffer[1] = 0x01;
 38282  00AE40  0E01               	movlw	1
 38283  00AE42  D001               	goto	L39
 38284  00AE44                     l22505:
 38285                           
 38286                           ; BSR set to: 3
 38287                           ;app_device_custom_hid.c: 209: else
 38288                           ;app_device_custom_hid.c: 210: {
 38289                           ;app_device_custom_hid.c: 212: ToSendDataBuffer[1] = 0x00;
 38290  00AE44  0E00               	movlw	0
 38291  00AE46                     L39:
 38292  00AE46  0103               	movlb	3	; () banked
 38293  00AE48  6FA5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 38294                           
 38295                           ; BSR set to: 3
 38296                           ;app_device_custom_hid.c: 213: }
 38297                           ;app_device_custom_hid.c: 215: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38298                           
 38299                           ; BSR set to: 3
 38300  00AE4A  0E01               	movlw	1
 38301  00AE4C  0100               	movlb	0	; () banked
 38302  00AE4E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38303  00AE50  0EA4               	movlw	low _ToSendDataBuffer
 38304  00AE52  0100               	movlb	0	; () banked
 38305  00AE54  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38306  00AE56  0E03               	movlw	high _ToSendDataBuffer
 38307  00AE58  0100               	movlb	0	; () banked
 38308  00AE5A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38309  00AE5C  0E40               	movlw	64
 38310  00AE5E  0100               	movlb	0	; () banked
 38311  00AE60  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38312  00AE62  0E01               	movlw	1
 38313  00AE64  EC6B  F077         	call	_USBTransferOnePacket
 38314  00AE68  D03B               	goto	L40
 38315  00AE6A                     l22509:
 38316                           
 38317                           ;app_device_custom_hid.c: 220: {
 38318                           ;app_device_custom_hid.c: 221: uint16_t return_value;
 38319                           ;app_device_custom_hid.c: 223: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38320  00AE6A  0100               	movlb	0	; () banked
 38321  00AE6C  51D7               	movf	_USBInHandle& (0+255),w,b
 38322  00AE6E  0100               	movlb	0	; () banked
 38323  00AE70  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38324  00AE72  B4D8               	btfsc	status,2,c
 38325  00AE74  D007               	goto	l22513
 38326                           
 38327                           ; BSR set to: 0
 38328  00AE76  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38329  00AE7A  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38330  00AE7E  0100               	movlb	0	; () banked
 38331  00AE80  BEDF               	btfsc	indf2,7,c
 38332  00AE82  D04D               	goto	l22527
 38333  00AE84                     l22513:
 38334                           
 38335                           ; BSR set to: 0
 38336                           ;app_device_custom_hid.c: 224: {
 38337                           ;app_device_custom_hid.c: 226: ToSendDataBuffer[0] = COMMAND_READ_POTENTIOMETER;
 38338  00AE84  0E37               	movlw	55
 38339  00AE86  0103               	movlb	3	; () banked
 38340  00AE88  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 38341                           
 38342                           ; BSR set to: 3
 38343                           ;app_device_custom_hid.c: 228: return_value = os.temperature_onboard >> 3;
 38344  00AE8A  EE22  F036         	lfsr	2,_os+54	;volatile
 38345  00AE8E  CFDE F08C          	movff	postinc2,??_APP_DeviceCustomHIDTasks
 38346  00AE92  CFDD F08D          	movff	postdec2,??_APP_DeviceCustomHIDTasks+1
 38347  00AE96  0100               	movlb	0	; () banked
 38348  00AE98  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38349  00AE9A  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38350  00AE9C  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38351  00AE9E  0100               	movlb	0	; () banked
 38352  00AEA0  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38353  00AEA2  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38354  00AEA4  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38355  00AEA6  0100               	movlb	0	; () banked
 38356  00AEA8  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38357  00AEAA  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38358  00AEAC  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38359  00AEAE  C08C  F094         	movff	??_APP_DeviceCustomHIDTasks,APP_DeviceCustomHIDTasks@return_value
 38360  00AEB2  C08D  F095         	movff	??_APP_DeviceCustomHIDTasks+1,APP_DeviceCustomHIDTasks@return_value+1
 38361                           
 38362                           ; BSR set to: 0
 38363                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[1] = (uint8_t) return_value;
 38364  00AEB6  C094  F3A5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 38365                           
 38366                           ; BSR set to: 0
 38367                           ;app_device_custom_hid.c: 230: ToSendDataBuffer[2] = return_value >> 8;
 38368  00AEBA  0100               	movlb	0	; () banked
 38369  00AEBC  5195               	movf	(APP_DeviceCustomHIDTasks@return_value+1)& (0+255),w,b
 38370  00AEBE  0103               	movlb	3	; () banked
 38371  00AEC0  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 38372                           
 38373                           ; BSR set to: 3
 38374                           ;app_device_custom_hid.c: 232: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38375  00AEC2  0E01               	movlw	1
 38376  00AEC4  0100               	movlb	0	; () banked
 38377  00AEC6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38378  00AEC8  0EA4               	movlw	low _ToSendDataBuffer
 38379  00AECA  0100               	movlb	0	; () banked
 38380  00AECC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38381  00AECE  0E03               	movlw	high _ToSendDataBuffer
 38382  00AED0  0100               	movlb	0	; () banked
 38383  00AED2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38384  00AED4  0E40               	movlw	64
 38385  00AED6  0100               	movlb	0	; () banked
 38386  00AED8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38387  00AEDA  0E01               	movlw	1
 38388  00AEDC  EC6B  F077         	call	_USBTransferOnePacket
 38389  00AEE0                     L40:
 38390  00AEE0  C060  F0D7         	movff	?_USBTransferOnePacket,_USBInHandle
 38391  00AEE4  C061  F0D8         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 38392                           
 38393                           ;app_device_custom_hid.c: 236: }
 38394                           
 38395                           ;app_device_custom_hid.c: 233: }
 38396                           ;app_device_custom_hid.c: 234: }
 38397                           ;app_device_custom_hid.c: 235: break;
 38398  00AEE8  D01A               	goto	l22527
 38399  00AEEA                     l22525:
 38400  00AEEA  0104               	movlb	4	; () banked
 38401  00AEEC  5178               	movf	_ReceivedDataBuffer& (0+255),w,b
 38402                           
 38403                           ; Switch size 1, requested type "space"
 38404                           ; Number of cases is 8, Range of values is 16 to 129
 38405                           ; switch strategies available:
 38406                           ; Name         Instructions Cycles
 38407                           ; simple_byte           25    13 (average)
 38408                           ;	Chosen strategy is simple_byte
 38409  00AEEE  0A10               	xorlw	16	; case 16
 38410  00AEF0  B4D8               	btfsc	status,2,c
 38411  00AEF2  D6F7               	goto	l22457
 38412  00AEF4  0A01               	xorlw	1	; case 17
 38413  00AEF6  B4D8               	btfsc	status,2,c
 38414  00AEF8  D713               	goto	l22465
 38415  00AEFA  0A03               	xorlw	3	; case 18
 38416  00AEFC  B4D8               	btfsc	status,2,c
 38417  00AEFE  D72F               	goto	l22471
 38418  00AF00  0A01               	xorlw	1	; case 19
 38419  00AF02  B4D8               	btfsc	status,2,c
 38420  00AF04  D74B               	goto	l22477
 38421  00AF06  0A07               	xorlw	7	; case 20
 38422  00AF08  B4D8               	btfsc	status,2,c
 38423  00AF0A  D767               	goto	l22485
 38424  00AF0C  0A23               	xorlw	35	; case 55
 38425  00AF0E  B4D8               	btfsc	status,2,c
 38426  00AF10  D7AC               	goto	l22509
 38427  00AF12  0AB7               	xorlw	183	; case 128
 38428  00AF14  B4D8               	btfsc	status,2,c
 38429  00AF16  D780               	goto	l22493
 38430  00AF18  0A01               	xorlw	1	; case 129
 38431  00AF1A  B4D8               	btfsc	status,2,c
 38432  00AF1C  D77F               	goto	l22495
 38433  00AF1E                     l22527:
 38434                           
 38435                           ;app_device_custom_hid.c: 239: idx = 1;
 38436  00AF1E  0E01               	movlw	1
 38437  00AF20  D097               	goto	L41
 38438  00AF22                     l22529:
 38439                           
 38440                           ; BSR set to: 0
 38441                           ;app_device_custom_hid.c: 245: _parse_command_short(ReceivedDataBuffer[idx]);
 38442  00AF22  0100               	movlb	0	; () banked
 38443  00AF24  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38444  00AF26  0D01               	mullw	1
 38445  00AF28  0E78               	movlw	low _ReceivedDataBuffer
 38446  00AF2A  24F3               	addwf	prodl,w,c
 38447  00AF2C  6ED9               	movwf	fsr2l,c
 38448  00AF2E  0E04               	movlw	high _ReceivedDataBuffer
 38449  00AF30  20F4               	addwfc	prodh,w,c
 38450  00AF32  6EDA               	movwf	fsr2h,c
 38451  00AF34  50DF               	movf	indf2,w,c
 38452  00AF36  EC02  F082         	call	__parse_command_short
 38453                           
 38454                           ;app_device_custom_hid.c: 246: ++idx;
 38455  00AF3A  0100               	movlb	0	; () banked
 38456  00AF3C  2B96               	incf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 38457                           
 38458                           ;app_device_custom_hid.c: 247: break;
 38459  00AF3E  D0AA               	goto	l22545
 38460  00AF40                     l22533:
 38461                           
 38462                           ; BSR set to: 0
 38463                           ;app_device_custom_hid.c: 249: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 38464  00AF40  0100               	movlb	0	; () banked
 38465  00AF42  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38466  00AF44  0100               	movlb	0	; () banked
 38467  00AF46  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38468  00AF48  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38469  00AF4A  0E01               	movlw	1
 38470  00AF4C  0100               	movlb	0	; () banked
 38471  00AF4E  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38472  00AF50  0E00               	movlw	0
 38473  00AF52  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38474  00AF54  0E78               	movlw	low _ReceivedDataBuffer
 38475  00AF56  0100               	movlb	0	; () banked
 38476  00AF58  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38477  00AF5A  6ED9               	movwf	fsr2l,c
 38478  00AF5C  0E04               	movlw	high _ReceivedDataBuffer
 38479  00AF5E  0100               	movlb	0	; () banked
 38480  00AF60  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38481  00AF62  6EDA               	movwf	fsr2h,c
 38482  00AF64  50DF               	movf	indf2,w,c
 38483  00AF66  0100               	movlb	0	; () banked
 38484  00AF68  6F63               	movwf	__parse_command_long@data& (0+255),b
 38485  00AF6A  0100               	movlb	0	; () banked
 38486  00AF6C  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38487  00AF6E  0D01               	mullw	1
 38488  00AF70  0E78               	movlw	low _ReceivedDataBuffer
 38489  00AF72  24F3               	addwf	prodl,w,c
 38490  00AF74  6ED9               	movwf	fsr2l,c
 38491  00AF76  0E04               	movlw	high _ReceivedDataBuffer
 38492  00AF78  20F4               	addwfc	prodh,w,c
 38493  00AF7A  6EDA               	movwf	fsr2h,c
 38494  00AF7C  50DF               	movf	indf2,w,c
 38495  00AF7E  EC8C  F081         	call	__parse_command_long
 38496                           
 38497                           ;app_device_custom_hid.c: 250: idx += 2;
 38498  00AF82  0E02               	movlw	2
 38499  00AF84  D061               	goto	L42
 38500  00AF86                     l22537:
 38501                           
 38502                           ; BSR set to: 0
 38503                           ;app_device_custom_hid.c: 253: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 38504  00AF86  0100               	movlb	0	; () banked
 38505  00AF88  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38506  00AF8A  0100               	movlb	0	; () banked
 38507  00AF8C  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38508  00AF8E  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38509  00AF90  0E01               	movlw	1
 38510  00AF92  0100               	movlb	0	; () banked
 38511  00AF94  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38512  00AF96  0E00               	movlw	0
 38513  00AF98  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38514  00AF9A  0E78               	movlw	low _ReceivedDataBuffer
 38515  00AF9C  0100               	movlb	0	; () banked
 38516  00AF9E  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38517  00AFA0  6ED9               	movwf	fsr2l,c
 38518  00AFA2  0E04               	movlw	high _ReceivedDataBuffer
 38519  00AFA4  0100               	movlb	0	; () banked
 38520  00AFA6  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38521  00AFA8  6EDA               	movwf	fsr2h,c
 38522  00AFAA  50DF               	movf	indf2,w,c
 38523  00AFAC  0100               	movlb	0	; () banked
 38524  00AFAE  6F63               	movwf	__parse_command_calibration@item& (0+255),b
 38525  00AFB0  0100               	movlb	0	; () banked
 38526  00AFB2  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38527  00AFB4  0100               	movlb	0	; () banked
 38528  00AFB6  6F8E               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 38529  00AFB8  6B8F               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 38530  00AFBA  0E02               	movlw	2
 38531  00AFBC  0100               	movlb	0	; () banked
 38532  00AFBE  278E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),f,b
 38533  00AFC0  0E00               	movlw	0
 38534  00AFC2  238F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),f,b
 38535  00AFC4  0E78               	movlw	low _ReceivedDataBuffer
 38536  00AFC6  0100               	movlb	0	; () banked
 38537  00AFC8  258E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),w,b
 38538  00AFCA  6ED9               	movwf	fsr2l,c
 38539  00AFCC  0E04               	movlw	high _ReceivedDataBuffer
 38540  00AFCE  0100               	movlb	0	; () banked
 38541  00AFD0  218F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),w,b
 38542  00AFD2  6EDA               	movwf	fsr2h,c
 38543  00AFD4  50DF               	movf	indf2,w,c
 38544  00AFD6  0100               	movlb	0	; () banked
 38545  00AFD8  6F64               	movwf	__parse_command_calibration@dat1& (0+255),b
 38546  00AFDA  0100               	movlb	0	; () banked
 38547  00AFDC  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38548  00AFDE  0100               	movlb	0	; () banked
 38549  00AFE0  6F90               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),b
 38550  00AFE2  6B91               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),b
 38551  00AFE4  0E03               	movlw	3
 38552  00AFE6  0100               	movlb	0	; () banked
 38553  00AFE8  2790               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),f,b
 38554  00AFEA  0E00               	movlw	0
 38555  00AFEC  2391               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),f,b
 38556  00AFEE  0E78               	movlw	low _ReceivedDataBuffer
 38557  00AFF0  0100               	movlb	0	; () banked
 38558  00AFF2  2590               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),w,b
 38559  00AFF4  6ED9               	movwf	fsr2l,c
 38560  00AFF6  0E04               	movlw	high _ReceivedDataBuffer
 38561  00AFF8  0100               	movlb	0	; () banked
 38562  00AFFA  2191               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),w,b
 38563  00AFFC  6EDA               	movwf	fsr2h,c
 38564  00AFFE  50DF               	movf	indf2,w,c
 38565  00B000  0100               	movlb	0	; () banked
 38566  00B002  6F65               	movwf	__parse_command_calibration@dat2& (0+255),b
 38567  00B004  0100               	movlb	0	; () banked
 38568  00B006  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38569  00B008  0100               	movlb	0	; () banked
 38570  00B00A  6F92               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),b
 38571  00B00C  6B93               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),b
 38572  00B00E  0E04               	movlw	4
 38573  00B010  0100               	movlb	0	; () banked
 38574  00B012  2792               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),f,b
 38575  00B014  0E00               	movlw	0
 38576  00B016  2393               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),f,b
 38577  00B018  0E78               	movlw	low _ReceivedDataBuffer
 38578  00B01A  0100               	movlb	0	; () banked
 38579  00B01C  2592               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),w,b
 38580  00B01E  6ED9               	movwf	fsr2l,c
 38581  00B020  0E04               	movlw	high _ReceivedDataBuffer
 38582  00B022  0100               	movlb	0	; () banked
 38583  00B024  2193               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),w,b
 38584  00B026  6EDA               	movwf	fsr2h,c
 38585  00B028  50DF               	movf	indf2,w,c
 38586  00B02A  0100               	movlb	0	; () banked
 38587  00B02C  6F66               	movwf	__parse_command_calibration@dat3& (0+255),b
 38588  00B02E  0100               	movlb	0	; () banked
 38589  00B030  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38590  00B032  0D01               	mullw	1
 38591  00B034  0E78               	movlw	low _ReceivedDataBuffer
 38592  00B036  24F3               	addwf	prodl,w,c
 38593  00B038  6ED9               	movwf	fsr2l,c
 38594  00B03A  0E04               	movlw	high _ReceivedDataBuffer
 38595  00B03C  20F4               	addwfc	prodh,w,c
 38596  00B03E  6EDA               	movwf	fsr2h,c
 38597  00B040  50DF               	movf	indf2,w,c
 38598  00B042  ECDF  F074         	call	__parse_command_calibration
 38599                           
 38600                           ;app_device_custom_hid.c: 254: idx += 5;
 38601  00B046  0E05               	movlw	5
 38602  00B048                     L42:
 38603  00B048  0100               	movlb	0	; () banked
 38604  00B04A  2796               	addwf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 38605                           
 38606                           ;app_device_custom_hid.c: 255: break;
 38607  00B04C  D023               	goto	l22545
 38608  00B04E                     l22541:
 38609                           
 38610                           ; BSR set to: 0
 38611                           ;app_device_custom_hid.c: 257: idx = 65;
 38612  00B04E  0E41               	movlw	65
 38613  00B050                     L41:
 38614  00B050  0100               	movlb	0	; () banked
 38615  00B052  6F96               	movwf	APP_DeviceCustomHIDTasks@idx& (0+255),b
 38616                           
 38617                           ;app_device_custom_hid.c: 258: }
 38618  00B054  D01F               	goto	l22545
 38619  00B056                     l22543:
 38620                           
 38621                           ; BSR set to: 0
 38622  00B056  0100               	movlb	0	; () banked
 38623  00B058  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38624  00B05A  0D01               	mullw	1
 38625  00B05C  0E78               	movlw	low _ReceivedDataBuffer
 38626  00B05E  24F3               	addwf	prodl,w,c
 38627  00B060  6ED9               	movwf	fsr2l,c
 38628  00B062  0E04               	movlw	high _ReceivedDataBuffer
 38629  00B064  20F4               	addwfc	prodh,w,c
 38630  00B066  6EDA               	movwf	fsr2h,c
 38631  00B068  50DF               	movf	indf2,w,c
 38632  00B06A  0BF0               	andlw	240
 38633  00B06C  0100               	movlb	0	; () banked
 38634  00B06E  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38635  00B070  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38636                           
 38637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38638                           ; Switch size 1, requested type "space"
 38639                           ; Number of cases is 1, Range of values is 0 to 0
 38640                           ; switch strategies available:
 38641                           ; Name         Instructions Cycles
 38642                           ; simple_byte            4     3 (average)
 38643                           ;	Chosen strategy is simple_byte
 38644  00B072  0100               	movlb	0	; () banked
 38645  00B074  518D               	movf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38646  00B076  0A00               	xorlw	0	; case 0
 38647  00B078  A4D8               	btfss	status,2,c
 38648  00B07A  D7E9               	goto	l22541
 38649                           
 38650                           ; BSR set to: 0
 38651                           ; Switch size 1, requested type "space"
 38652                           ; Number of cases is 3, Range of values is 48 to 96
 38653                           ; switch strategies available:
 38654                           ; Name         Instructions Cycles
 38655                           ; simple_byte           10     6 (average)
 38656                           ;	Chosen strategy is simple_byte
 38657  00B07C  0100               	movlb	0	; () banked
 38658  00B07E  518C               	movf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38659  00B080  0A30               	xorlw	48	; case 48
 38660  00B082  B4D8               	btfsc	status,2,c
 38661  00B084  D74E               	goto	l22529
 38662  00B086  0A70               	xorlw	112	; case 64
 38663  00B088  B4D8               	btfsc	status,2,c
 38664  00B08A  D75A               	goto	l22533
 38665  00B08C  0A20               	xorlw	32	; case 96
 38666  00B08E  B4D8               	btfsc	status,2,c
 38667  00B090  D77A               	goto	l22537
 38668  00B092  D7DD               	goto	l22541
 38669  00B094                     l22545:
 38670                           
 38671                           ; BSR set to: 0
 38672  00B094  0E3D               	movlw	61
 38673  00B096  0100               	movlb	0	; () banked
 38674  00B098  6596               	cpfsgt	APP_DeviceCustomHIDTasks@idx& (0+255),b
 38675  00B09A  D7DD               	goto	l22543
 38676                           
 38677                           ; BSR set to: 0
 38678                           ;app_device_custom_hid.c: 259: }
 38679                           ;app_device_custom_hid.c: 263: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38680                           
 38681                           ; BSR set to: 0
 38682  00B09C  0E00               	movlw	0
 38683  00B09E  0100               	movlb	0	; () banked
 38684  00B0A0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38685  00B0A2  0E78               	movlw	low _ReceivedDataBuffer
 38686  00B0A4  0100               	movlb	0	; () banked
 38687  00B0A6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38688  00B0A8  0E04               	movlw	high _ReceivedDataBuffer
 38689  00B0AA  0100               	movlb	0	; () banked
 38690  00B0AC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38691  00B0AE  0E40               	movlw	64
 38692  00B0B0  0100               	movlb	0	; () banked
 38693  00B0B2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38694  00B0B4  0E01               	movlw	1
 38695  00B0B6  EC6B  F077         	call	_USBTransferOnePacket
 38696  00B0BA  C060  F1E9         	movff	?_USBTransferOnePacket,_USBOutHandle
 38697  00B0BE  C061  F1EA         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38698  00B0C2  0012               	return	
 38699  00B0C4                     __end_of_APP_DeviceCustomHIDTasks:
 38700                           	opt stack 0
 38701                           tosu	equ	0xFFF
 38702                           tosh	equ	0xFFE
 38703                           tosl	equ	0xFFD
 38704                           pclath	equ	0xFFA
 38705                           tblptru	equ	0xFF8
 38706                           tblptrh	equ	0xFF7
 38707                           tblptrl	equ	0xFF6
 38708                           tablat	equ	0xFF5
 38709                           prodh	equ	0xFF4
 38710                           prodl	equ	0xFF3
 38711                           intcon	equ	0xFF2
 38712                           intcon2	equ	0xFF1
 38713                           intcon3	equ	0xFF0
 38714                           postinc0	equ	0xFEE
 38715                           wreg	equ	0xFE8
 38716                           indf1	equ	0xFE7
 38717                           postinc1	equ	0xFE6
 38718                           postdec1	equ	0xFE5
 38719                           plusw1	equ	0xFE3
 38720                           fsr1h	equ	0xFE2
 38721                           fsr1l	equ	0xFE1
 38722                           indf2	equ	0xFDF
 38723                           postinc2	equ	0xFDE
 38724                           postdec2	equ	0xFDD
 38725                           plusw2	equ	0xFDB
 38726                           fsr2h	equ	0xFDA
 38727                           fsr2l	equ	0xFD9
 38728                           status	equ	0xFD8
 38729                           
 38730 ;; *************** function __parse_command_short *****************
 38731 ;; Defined at:
 38732 ;;		line 398 in file "app_device_custom_hid.c"
 38733 ;; Parameters:    Size  Location     Type
 38734 ;;  cmd             1    wreg     unsigned char 
 38735 ;; Auto vars:     Size  Location     Type
 38736 ;;  cmd             1   43[BANK0 ] unsigned char 
 38737 ;; Return value:  Size  Location     Type
 38738 ;;                  1    wreg      void 
 38739 ;; Registers used:
 38740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38741 ;; Tracked objects:
 38742 ;;		On entry : 0/0
 38743 ;;		On exit  : 0/0
 38744 ;;		Unchanged: 0/0
 38745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38749 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38750 ;;Total ram usage:        1 bytes
 38751 ;; Hardware stack levels used:    1
 38752 ;; Hardware stack levels required when called:   14
 38753 ;; This function calls:
 38754 ;;		_rtcc_write_eeprom
 38755 ;;		_system_output_off
 38756 ;;		_system_output_on
 38757 ;; This function is called by:
 38758 ;;		_APP_DeviceCustomHIDTasks
 38759 ;; This function uses a non-reentrant model
 38760 ;;
 38761                           
 38762                           	psect	text167
 38763  010404                     __ptext167:
 38764                           	opt stack 0
 38765  010404                     __parse_command_short:
 38766                           	opt stack 15
 38767                           
 38768                           ;incstack = 0
 38769                           ;__parse_command_short@cmd stored from wreg
 38770  010404  0100               	movlb	0	; () banked
 38771  010406  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 38772                           
 38773                           ;app_device_custom_hid.c: 400: switch(cmd)
 38774  010408  D03C               	goto	l20617
 38775  01040A                     l20583:
 38776                           
 38777                           ;app_device_custom_hid.c: 403: system_output_off(OUTPUT_1);
 38778  01040A  0E01               	movlw	1
 38779  01040C  ECE5  F098         	call	_system_output_off
 38780                           
 38781                           ;app_device_custom_hid.c: 404: break;
 38782  010410  0012               	return	
 38783  010412                     l20585:
 38784                           
 38785                           ;app_device_custom_hid.c: 406: system_output_on(OUTPUT_1);
 38786  010412  0E01               	movlw	1
 38787  010414  EC0A  F09A         	call	_system_output_on
 38788                           
 38789                           ;app_device_custom_hid.c: 407: break;
 38790  010418  0012               	return	
 38791  01041A                     l20587:
 38792                           
 38793                           ;app_device_custom_hid.c: 409: system_output_off(OUTPUT_2);
 38794  01041A  0E02               	movlw	2
 38795  01041C  ECE5  F098         	call	_system_output_off
 38796                           
 38797                           ;app_device_custom_hid.c: 410: break;
 38798  010420  0012               	return	
 38799  010422                     l20589:
 38800                           
 38801                           ;app_device_custom_hid.c: 412: system_output_on(OUTPUT_2);
 38802  010422  0E02               	movlw	2
 38803  010424  EC0A  F09A         	call	_system_output_on
 38804                           
 38805                           ;app_device_custom_hid.c: 413: break;
 38806  010428  0012               	return	
 38807  01042A                     l20591:
 38808                           
 38809                           ;app_device_custom_hid.c: 415: system_output_off(OUTPUT_3);
 38810  01042A  0E04               	movlw	4
 38811  01042C  ECE5  F098         	call	_system_output_off
 38812                           
 38813                           ;app_device_custom_hid.c: 416: break;
 38814  010430  0012               	return	
 38815  010432                     l20593:
 38816                           
 38817                           ;app_device_custom_hid.c: 418: system_output_on(OUTPUT_3);
 38818  010432  0E04               	movlw	4
 38819  010434  EC0A  F09A         	call	_system_output_on
 38820                           
 38821                           ;app_device_custom_hid.c: 419: break;
 38822  010438  0012               	return	
 38823  01043A                     l20595:
 38824                           
 38825                           ;app_device_custom_hid.c: 421: system_output_off(OUTPUT_4);
 38826  01043A  0E08               	movlw	8
 38827  01043C  ECE5  F098         	call	_system_output_off
 38828                           
 38829                           ;app_device_custom_hid.c: 422: break;
 38830  010440  0012               	return	
 38831  010442                     l20597:
 38832                           
 38833                           ;app_device_custom_hid.c: 424: system_output_on(OUTPUT_4);
 38834  010442  0E08               	movlw	8
 38835  010444  EC0A  F09A         	call	_system_output_on
 38836                           
 38837                           ;app_device_custom_hid.c: 425: break;
 38838  010448  0012               	return	
 38839  01044A                     l20599:
 38840                           
 38841                           ;app_device_custom_hid.c: 427: system_output_off(OUTPUT_USB);
 38842  01044A  0E10               	movlw	16
 38843  01044C  ECE5  F098         	call	_system_output_off
 38844                           
 38845                           ;app_device_custom_hid.c: 428: break;
 38846  010450  0012               	return	
 38847  010452                     l20601:
 38848                           
 38849                           ;app_device_custom_hid.c: 430: system_output_on(OUTPUT_USB);
 38850  010452  0E10               	movlw	16
 38851  010454  EC0A  F09A         	call	_system_output_on
 38852                           
 38853                           ;app_device_custom_hid.c: 431: break;
 38854  010458  0012               	return	
 38855  01045A                     l20603:
 38856                           
 38857                           ;app_device_custom_hid.c: 433: system_output_off(OUTPUT_FAN);
 38858  01045A  0E20               	movlw	32
 38859  01045C  ECE5  F098         	call	_system_output_off
 38860                           
 38861                           ;app_device_custom_hid.c: 434: break;
 38862  010460  0012               	return	
 38863  010462                     l20605:
 38864                           
 38865                           ;app_device_custom_hid.c: 436: system_output_on(OUTPUT_FAN);
 38866  010462  0E20               	movlw	32
 38867  010464  EC0A  F09A         	call	_system_output_on
 38868                           
 38869                           ;app_device_custom_hid.c: 437: break;
 38870  010468  0012               	return	
 38871  01046A                     l20607:
 38872                           
 38873                           ;app_device_custom_hid.c: 439: --os.encoderCount;
 38874  01046A  0102               	movlb	2	; () banked
 38875  01046C  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 38876                           
 38877                           ;app_device_custom_hid.c: 440: break;
 38878  01046E  0012               	return	
 38879  010470                     l20609:
 38880                           
 38881                           ;app_device_custom_hid.c: 442: ++os.encoderCount;
 38882  010470  0102               	movlb	2	; () banked
 38883  010472  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 38884                           
 38885                           ;app_device_custom_hid.c: 443: break;
 38886  010474  0012               	return	
 38887  010476                     l20611:
 38888                           
 38889                           ;app_device_custom_hid.c: 445: ++os.buttonCount;
 38890  010476  0102               	movlb	2	; () banked
 38891  010478  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 38892                           
 38893                           ;app_device_custom_hid.c: 446: break;
 38894  01047A  0012               	return	
 38895  01047C                     l20613:
 38896                           
 38897                           ;app_device_custom_hid.c: 448: rtcc_write_eeprom();
 38898  01047C  ECBA  F099         	call	_rtcc_write_eeprom	;wreg free
 38899                           
 38900                           ;app_device_custom_hid.c: 450: }
 38901                           
 38902                           ;app_device_custom_hid.c: 449: break;
 38903  010480  0012               	return	
 38904  010482                     l20617:
 38905  010482  0100               	movlb	0	; () banked
 38906  010484  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 38907                           
 38908                           ; Switch size 1, requested type "space"
 38909                           ; Number of cases is 16, Range of values is 48 to 63
 38910                           ; switch strategies available:
 38911                           ; Name         Instructions Cycles
 38912                           ; simple_byte           49    25 (average)
 38913                           ;	Chosen strategy is simple_byte
 38914  010486  0A30               	xorlw	48	; case 48
 38915  010488  B4D8               	btfsc	status,2,c
 38916  01048A  D7BF               	goto	l20583
 38917  01048C  0A01               	xorlw	1	; case 49
 38918  01048E  B4D8               	btfsc	status,2,c
 38919  010490  D7C0               	goto	l20585
 38920  010492  0A03               	xorlw	3	; case 50
 38921  010494  B4D8               	btfsc	status,2,c
 38922  010496  D7C1               	goto	l20587
 38923  010498  0A01               	xorlw	1	; case 51
 38924  01049A  B4D8               	btfsc	status,2,c
 38925  01049C  D7C2               	goto	l20589
 38926  01049E  0A07               	xorlw	7	; case 52
 38927  0104A0  B4D8               	btfsc	status,2,c
 38928  0104A2  D7C3               	goto	l20591
 38929  0104A4  0A01               	xorlw	1	; case 53
 38930  0104A6  B4D8               	btfsc	status,2,c
 38931  0104A8  D7C4               	goto	l20593
 38932  0104AA  0A03               	xorlw	3	; case 54
 38933  0104AC  B4D8               	btfsc	status,2,c
 38934  0104AE  D7C5               	goto	l20595
 38935  0104B0  0A01               	xorlw	1	; case 55
 38936  0104B2  B4D8               	btfsc	status,2,c
 38937  0104B4  D7C6               	goto	l20597
 38938  0104B6  0A0F               	xorlw	15	; case 56
 38939  0104B8  B4D8               	btfsc	status,2,c
 38940  0104BA  D7C7               	goto	l20599
 38941  0104BC  0A01               	xorlw	1	; case 57
 38942  0104BE  B4D8               	btfsc	status,2,c
 38943  0104C0  D7C8               	goto	l20601
 38944  0104C2  0A03               	xorlw	3	; case 58
 38945  0104C4  B4D8               	btfsc	status,2,c
 38946  0104C6  D7C9               	goto	l20603
 38947  0104C8  0A01               	xorlw	1	; case 59
 38948  0104CA  B4D8               	btfsc	status,2,c
 38949  0104CC  D7CA               	goto	l20605
 38950  0104CE  0A07               	xorlw	7	; case 60
 38951  0104D0  B4D8               	btfsc	status,2,c
 38952  0104D2  D7CB               	goto	l20607
 38953  0104D4  0A01               	xorlw	1	; case 61
 38954  0104D6  B4D8               	btfsc	status,2,c
 38955  0104D8  D7CB               	goto	l20609
 38956  0104DA  0A03               	xorlw	3	; case 62
 38957  0104DC  B4D8               	btfsc	status,2,c
 38958  0104DE  D7CB               	goto	l20611
 38959  0104E0  0A01               	xorlw	1	; case 63
 38960  0104E2  A4D8               	btfss	status,2,c
 38961  0104E4  0012               	return	
 38962  0104E6  D7CA               	goto	l20613
 38963  0104E8                     __end_of__parse_command_short:
 38964                           	opt stack 0
 38965                           tosu	equ	0xFFF
 38966                           tosh	equ	0xFFE
 38967                           tosl	equ	0xFFD
 38968                           pclath	equ	0xFFA
 38969                           tblptru	equ	0xFF8
 38970                           tblptrh	equ	0xFF7
 38971                           tblptrl	equ	0xFF6
 38972                           tablat	equ	0xFF5
 38973                           prodh	equ	0xFF4
 38974                           prodl	equ	0xFF3
 38975                           intcon	equ	0xFF2
 38976                           intcon2	equ	0xFF1
 38977                           intcon3	equ	0xFF0
 38978                           postinc0	equ	0xFEE
 38979                           wreg	equ	0xFE8
 38980                           indf1	equ	0xFE7
 38981                           postinc1	equ	0xFE6
 38982                           postdec1	equ	0xFE5
 38983                           plusw1	equ	0xFE3
 38984                           fsr1h	equ	0xFE2
 38985                           fsr1l	equ	0xFE1
 38986                           indf2	equ	0xFDF
 38987                           postinc2	equ	0xFDE
 38988                           postdec2	equ	0xFDD
 38989                           plusw2	equ	0xFDB
 38990                           fsr2h	equ	0xFDA
 38991                           fsr2l	equ	0xFD9
 38992                           status	equ	0xFD8
 38993                           
 38994 ;; *************** function _system_output_on *****************
 38995 ;; Defined at:
 38996 ;;		line 507 in file "os.c"
 38997 ;; Parameters:    Size  Location     Type
 38998 ;;  output          1    wreg     enum E8129
 38999 ;; Auto vars:     Size  Location     Type
 39000 ;;  output          1    0[BANK0 ] enum E8129
 39001 ;; Return value:  Size  Location     Type
 39002 ;;                  1    wreg      void 
 39003 ;; Registers used:
 39004 ;;		wreg, status,2, status,0
 39005 ;; Tracked objects:
 39006 ;;		On entry : 0/0
 39007 ;;		On exit  : 0/0
 39008 ;;		Unchanged: 0/0
 39009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39013 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39014 ;;Total ram usage:        1 bytes
 39015 ;; Hardware stack levels used:    1
 39016 ;; Hardware stack levels required when called:   10
 39017 ;; This function calls:
 39018 ;;		Nothing
 39019 ;; This function is called by:
 39020 ;;		__parse_command_short
 39021 ;;		_system_output_toggle
 39022 ;;		__ui_encoder
 39023 ;; This function uses a non-reentrant model
 39024 ;;
 39025                           
 39026                           	psect	text168
 39027  013414                     __ptext168:
 39028                           	opt stack 0
 39029  013414                     _system_output_on:
 39030                           	opt stack 17
 39031                           
 39032                           ;incstack = 0
 39033                           ;system_output_on@output stored from wreg
 39034  013414  0100               	movlb	0	; () banked
 39035  013416  6F60               	movwf	system_output_on@output& (0+255),b
 39036                           
 39037                           ;os.c: 510: os.outputs |= output;
 39038  013418  0100               	movlb	0	; () banked
 39039  01341A  5160               	movf	system_output_on@output& (0+255),w,b
 39040  01341C  0102               	movlb	2	; () banked
 39041  01341E  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 39042                           
 39043                           ;os.c: 513: switch(output)
 39044  013420  D00E               	goto	l19033
 39045  013422                     l1407:
 39046                           
 39047                           ; BSR set to: 0
 39048                           ;os.c: 516: LATCbits.LC7 = 1;
 39049  013422  8E8B               	bsf	3979,7,c	;volatile
 39050                           
 39051                           ;os.c: 517: LATEbits.LE2 = 0;
 39052  013424  948D               	bcf	3981,2,c	;volatile
 39053                           
 39054                           ;os.c: 518: break;
 39055  013426  0012               	return	
 39056  013428                     l1409:
 39057                           
 39058                           ; BSR set to: 0
 39059                           ;os.c: 520: LATCbits.LC7 = 1;
 39060  013428  8E8B               	bsf	3979,7,c	;volatile
 39061                           
 39062                           ;os.c: 521: LATEbits.LE1 = 0;
 39063  01342A  928D               	bcf	3981,1,c	;volatile
 39064                           
 39065                           ;os.c: 522: break;
 39066  01342C  0012               	return	
 39067  01342E                     l1410:
 39068                           
 39069                           ; BSR set to: 0
 39070                           ;os.c: 524: LATCbits.LC7 = 1;
 39071  01342E  8E8B               	bsf	3979,7,c	;volatile
 39072                           
 39073                           ;os.c: 525: LATEbits.LE0 = 0;
 39074  013430  908D               	bcf	3981,0,c	;volatile
 39075                           
 39076                           ;os.c: 526: break;
 39077  013432  0012               	return	
 39078  013434                     l1411:
 39079                           
 39080                           ; BSR set to: 0
 39081                           ;os.c: 528: LATCbits.LC7 = 1;
 39082  013434  8E8B               	bsf	3979,7,c	;volatile
 39083                           
 39084                           ;os.c: 529: LATAbits.LA5 = 0;
 39085  013436  9A89               	bcf	3977,5,c	;volatile
 39086                           
 39087                           ;os.c: 530: break;
 39088  013438  0012               	return	
 39089  01343A                     l1412:
 39090                           
 39091                           ; BSR set to: 0
 39092                           ;os.c: 532: LATDbits.LD3 = 1;
 39093  01343A  868C               	bsf	3980,3,c	;volatile
 39094                           
 39095                           ; BSR set to: 0
 39096                           ;os.c: 534: }
 39097                           
 39098                           ;os.c: 533: break;
 39099  01343C  0012               	return	
 39100  01343E                     l19033:
 39101  01343E  0100               	movlb	0	; () banked
 39102  013440  5160               	movf	system_output_on@output& (0+255),w,b
 39103                           
 39104                           ; Switch size 1, requested type "space"
 39105                           ; Number of cases is 5, Range of values is 1 to 16
 39106                           ; switch strategies available:
 39107                           ; Name         Instructions Cycles
 39108                           ; simple_byte           16     9 (average)
 39109                           ;	Chosen strategy is simple_byte
 39110  013442  0A01               	xorlw	1	; case 1
 39111  013444  B4D8               	btfsc	status,2,c
 39112  013446  D7ED               	goto	l1407
 39113  013448  0A03               	xorlw	3	; case 2
 39114  01344A  B4D8               	btfsc	status,2,c
 39115  01344C  D7ED               	goto	l1409
 39116  01344E  0A06               	xorlw	6	; case 4
 39117  013450  B4D8               	btfsc	status,2,c
 39118  013452  D7ED               	goto	l1410
 39119  013454  0A0C               	xorlw	12	; case 8
 39120  013456  B4D8               	btfsc	status,2,c
 39121  013458  D7ED               	goto	l1411
 39122  01345A  0A18               	xorlw	24	; case 16
 39123  01345C  A4D8               	btfss	status,2,c
 39124  01345E  0012               	return	
 39125  013460  D7EC               	goto	l1412
 39126  013462                     __end_of_system_output_on:
 39127                           	opt stack 0
 39128                           tosu	equ	0xFFF
 39129                           tosh	equ	0xFFE
 39130                           tosl	equ	0xFFD
 39131                           pclath	equ	0xFFA
 39132                           tblptru	equ	0xFF8
 39133                           tblptrh	equ	0xFF7
 39134                           tblptrl	equ	0xFF6
 39135                           tablat	equ	0xFF5
 39136                           prodh	equ	0xFF4
 39137                           prodl	equ	0xFF3
 39138                           intcon	equ	0xFF2
 39139                           intcon2	equ	0xFF1
 39140                           intcon3	equ	0xFF0
 39141                           postinc0	equ	0xFEE
 39142                           wreg	equ	0xFE8
 39143                           indf1	equ	0xFE7
 39144                           postinc1	equ	0xFE6
 39145                           postdec1	equ	0xFE5
 39146                           plusw1	equ	0xFE3
 39147                           fsr1h	equ	0xFE2
 39148                           fsr1l	equ	0xFE1
 39149                           indf2	equ	0xFDF
 39150                           postinc2	equ	0xFDE
 39151                           postdec2	equ	0xFDD
 39152                           plusw2	equ	0xFDB
 39153                           fsr2h	equ	0xFDA
 39154                           fsr2l	equ	0xFD9
 39155                           status	equ	0xFD8
 39156                           
 39157 ;; *************** function _system_output_off *****************
 39158 ;; Defined at:
 39159 ;;		line 537 in file "os.c"
 39160 ;; Parameters:    Size  Location     Type
 39161 ;;  output          1    wreg     enum E8129
 39162 ;; Auto vars:     Size  Location     Type
 39163 ;;  output          1    1[BANK0 ] enum E8129
 39164 ;; Return value:  Size  Location     Type
 39165 ;;                  1    wreg      void 
 39166 ;; Registers used:
 39167 ;;		wreg, status,2, status,0
 39168 ;; Tracked objects:
 39169 ;;		On entry : 0/0
 39170 ;;		On exit  : 0/0
 39171 ;;		Unchanged: 0/0
 39172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39177 ;;Total ram usage:        2 bytes
 39178 ;; Hardware stack levels used:    1
 39179 ;; Hardware stack levels required when called:   10
 39180 ;; This function calls:
 39181 ;;		Nothing
 39182 ;; This function is called by:
 39183 ;;		_main
 39184 ;;		__parse_command_short
 39185 ;;		_system_output_toggle
 39186 ;;		__ui_encoder
 39187 ;; This function uses a non-reentrant model
 39188 ;;
 39189                           
 39190                           	psect	text169
 39191  0131CA                     __ptext169:
 39192                           	opt stack 0
 39193  0131CA                     _system_output_off:
 39194                           	opt stack 17
 39195                           
 39196                           ; BSR set to: 0
 39197                           ;incstack = 0
 39198                           ;system_output_off@output stored from wreg
 39199  0131CA  0100               	movlb	0	; () banked
 39200  0131CC  6F61               	movwf	system_output_off@output& (0+255),b
 39201                           
 39202                           ;os.c: 540: os.outputs &= (~output);
 39203  0131CE  0100               	movlb	0	; () banked
 39204  0131D0  5161               	movf	system_output_off@output& (0+255),w,b
 39205  0131D2  0AFF               	xorlw	255
 39206  0131D4  0102               	movlb	2	; () banked
 39207  0131D6  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 39208                           
 39209                           ;os.c: 543: switch(output)
 39210  0131D8  D00A               	goto	l19023
 39211  0131DA                     l1417:
 39212                           
 39213                           ; BSR set to: 0
 39214                           ;os.c: 546: LATEbits.LE2 = 1;
 39215  0131DA  848D               	bsf	3981,2,c	;volatile
 39216                           
 39217                           ;os.c: 547: break;
 39218  0131DC  D019               	goto	l19025
 39219  0131DE                     l1419:
 39220                           
 39221                           ; BSR set to: 0
 39222                           ;os.c: 549: LATEbits.LE1 = 1;
 39223  0131DE  828D               	bsf	3981,1,c	;volatile
 39224                           
 39225                           ;os.c: 550: break;
 39226  0131E0  D017               	goto	l19025
 39227  0131E2                     l1420:
 39228                           
 39229                           ; BSR set to: 0
 39230                           ;os.c: 552: LATEbits.LE0 = 1;
 39231  0131E2  808D               	bsf	3981,0,c	;volatile
 39232                           
 39233                           ;os.c: 553: break;
 39234  0131E4  D015               	goto	l19025
 39235  0131E6                     l1421:
 39236                           
 39237                           ; BSR set to: 0
 39238                           ;os.c: 555: LATAbits.LA5 = 1;
 39239  0131E6  8A89               	bsf	3977,5,c	;volatile
 39240                           
 39241                           ;os.c: 556: break;
 39242  0131E8  D013               	goto	l19025
 39243  0131EA                     l1422:
 39244                           
 39245                           ; BSR set to: 0
 39246                           ;os.c: 558: LATDbits.LD3 = 0;
 39247  0131EA  968C               	bcf	3980,3,c	;volatile
 39248                           
 39249                           ; BSR set to: 0
 39250                           ;os.c: 560: }
 39251                           
 39252                           ;os.c: 559: break;
 39253  0131EC  D011               	goto	l19025
 39254  0131EE                     l19023:
 39255  0131EE  0100               	movlb	0	; () banked
 39256  0131F0  5161               	movf	system_output_off@output& (0+255),w,b
 39257                           
 39258                           ; Switch size 1, requested type "space"
 39259                           ; Number of cases is 5, Range of values is 1 to 16
 39260                           ; switch strategies available:
 39261                           ; Name         Instructions Cycles
 39262                           ; simple_byte           16     9 (average)
 39263                           ;	Chosen strategy is simple_byte
 39264  0131F2  0A01               	xorlw	1	; case 1
 39265  0131F4  B4D8               	btfsc	status,2,c
 39266  0131F6  D7F1               	goto	l1417
 39267  0131F8  0A03               	xorlw	3	; case 2
 39268  0131FA  B4D8               	btfsc	status,2,c
 39269  0131FC  D7F0               	goto	l1419
 39270  0131FE  0A06               	xorlw	6	; case 4
 39271  013200  B4D8               	btfsc	status,2,c
 39272  013202  D7EF               	goto	l1420
 39273  013204  0A0C               	xorlw	12	; case 8
 39274  013206  B4D8               	btfsc	status,2,c
 39275  013208  D7EE               	goto	l1421
 39276  01320A  0A18               	xorlw	24	; case 16
 39277  01320C  B4D8               	btfsc	status,2,c
 39278  01320E  D7ED               	goto	l1422
 39279  013210                     l19025:
 39280                           
 39281                           ; BSR set to: 0
 39282                           ;os.c: 563: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 39283  013210  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 39284  013214  0E0F               	movlw	15
 39285  013216  0100               	movlb	0	; () banked
 39286  013218  1760               	andwf	??_system_output_off& (0+255),f,b
 39287  01321A  A4D8               	btfss	status,2,c
 39288  01321C  0012               	return	
 39289                           
 39290                           ; BSR set to: 0
 39291                           ;os.c: 564: {
 39292                           ;os.c: 565: LATCbits.LC7 = 0;
 39293  01321E  9E8B               	bcf	3979,7,c	;volatile
 39294  013220  0012               	return	
 39295  013222                     __end_of_system_output_off:
 39296                           	opt stack 0
 39297                           tosu	equ	0xFFF
 39298                           tosh	equ	0xFFE
 39299                           tosl	equ	0xFFD
 39300                           pclath	equ	0xFFA
 39301                           tblptru	equ	0xFF8
 39302                           tblptrh	equ	0xFF7
 39303                           tblptrl	equ	0xFF6
 39304                           tablat	equ	0xFF5
 39305                           prodh	equ	0xFF4
 39306                           prodl	equ	0xFF3
 39307                           intcon	equ	0xFF2
 39308                           intcon2	equ	0xFF1
 39309                           intcon3	equ	0xFF0
 39310                           postinc0	equ	0xFEE
 39311                           wreg	equ	0xFE8
 39312                           indf1	equ	0xFE7
 39313                           postinc1	equ	0xFE6
 39314                           postdec1	equ	0xFE5
 39315                           plusw1	equ	0xFE3
 39316                           fsr1h	equ	0xFE2
 39317                           fsr1l	equ	0xFE1
 39318                           indf2	equ	0xFDF
 39319                           postinc2	equ	0xFDE
 39320                           postdec2	equ	0xFDD
 39321                           plusw2	equ	0xFDB
 39322                           fsr2h	equ	0xFDA
 39323                           fsr2l	equ	0xFD9
 39324                           status	equ	0xFD8
 39325                           
 39326 ;; *************** function _rtcc_write_eeprom *****************
 39327 ;; Defined at:
 39328 ;;		line 436 in file "rtcc.c"
 39329 ;; Parameters:    Size  Location     Type
 39330 ;;		None
 39331 ;; Auto vars:     Size  Location     Type
 39332 ;;  date            6   37[BANK0 ] unsigned char [6]
 39333 ;; Return value:  Size  Location     Type
 39334 ;;                  1    wreg      void 
 39335 ;; Registers used:
 39336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39337 ;; Tracked objects:
 39338 ;;		On entry : 0/0
 39339 ;;		On exit  : 0/0
 39340 ;;		Unchanged: 0/0
 39341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39343 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39345 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39346 ;;Total ram usage:        6 bytes
 39347 ;; Hardware stack levels used:    1
 39348 ;; Hardware stack levels required when called:   13
 39349 ;; This function calls:
 39350 ;;		_i2c_eeprom_write
 39351 ;;		_rtcc_get_day
 39352 ;;		_rtcc_get_hours
 39353 ;;		_rtcc_get_minutes
 39354 ;;		_rtcc_get_month
 39355 ;;		_rtcc_get_seconds
 39356 ;;		_rtcc_get_year
 39357 ;; This function is called by:
 39358 ;;		__parse_command_short
 39359 ;;		__ui_encoder
 39360 ;;		_rtcc_read_eeprom
 39361 ;; This function uses a non-reentrant model
 39362 ;;
 39363                           
 39364                           	psect	text170
 39365  013374                     __ptext170:
 39366                           	opt stack 0
 39367  013374                     _rtcc_write_eeprom:
 39368                           	opt stack 15
 39369                           
 39370                           ;rtcc.c: 438: uint8_t date[6];
 39371                           ;rtcc.c: 439: date[0] = rtcc_get_year();
 39372                           
 39373                           ; BSR set to: 0
 39374                           ;incstack = 0
 39375  013374  ECA0  F0A0         	call	_rtcc_get_year	;wreg free
 39376  013378  0100               	movlb	0	; () banked
 39377  01337A  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 39378                           
 39379                           ;rtcc.c: 440: date[1] = rtcc_get_month();
 39380  01337C  ECB4  F0A0         	call	_rtcc_get_month	;wreg free
 39381  013380  0100               	movlb	0	; () banked
 39382  013382  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 39383                           
 39384                           ;rtcc.c: 441: date[2] = rtcc_get_day();
 39385  013384  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
 39386  013388  0100               	movlb	0	; () banked
 39387  01338A  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 39388                           
 39389                           ;rtcc.c: 442: date[3] = rtcc_get_hours();
 39390  01338C  ECC8  F0A0         	call	_rtcc_get_hours	;wreg free
 39391  013390  0100               	movlb	0	; () banked
 39392  013392  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 39393                           
 39394                           ;rtcc.c: 443: date[4] = rtcc_get_minutes();
 39395  013394  ECBE  F0A0         	call	_rtcc_get_minutes	;wreg free
 39396  013398  0100               	movlb	0	; () banked
 39397  01339A  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 39398                           
 39399                           ;rtcc.c: 444: date[5] = rtcc_get_seconds();
 39400  01339C  ECAA  F0A0         	call	_rtcc_get_seconds	;wreg free
 39401  0133A0  0100               	movlb	0	; () banked
 39402  0133A2  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 39403                           
 39404                           ; BSR set to: 0
 39405                           ;rtcc.c: 446: i2c_eeprom_write(0x040, &date[0], 6);
 39406  0133A4  0E00               	movlw	0
 39407  0133A6  0100               	movlb	0	; () banked
 39408  0133A8  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 39409  0133AA  0E40               	movlw	64
 39410  0133AC  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 39411  0133AE  0E85               	movlw	low rtcc_write_eeprom@date
 39412  0133B0  0100               	movlb	0	; () banked
 39413  0133B2  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 39414  0133B4  0E00               	movlw	high rtcc_write_eeprom@date
 39415  0133B6  0100               	movlb	0	; () banked
 39416  0133B8  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 39417  0133BA  0E06               	movlw	6
 39418  0133BC  0100               	movlb	0	; () banked
 39419  0133BE  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 39420  0133C0  ECE3  F089         	call	_i2c_eeprom_write	;wreg free
 39421  0133C4  0012               	return		;funcret
 39422  0133C6                     __end_of_rtcc_write_eeprom:
 39423                           	opt stack 0
 39424                           tosu	equ	0xFFF
 39425                           tosh	equ	0xFFE
 39426                           tosl	equ	0xFFD
 39427                           pclath	equ	0xFFA
 39428                           tblptru	equ	0xFF8
 39429                           tblptrh	equ	0xFF7
 39430                           tblptrl	equ	0xFF6
 39431                           tablat	equ	0xFF5
 39432                           prodh	equ	0xFF4
 39433                           prodl	equ	0xFF3
 39434                           intcon	equ	0xFF2
 39435                           intcon2	equ	0xFF1
 39436                           intcon3	equ	0xFF0
 39437                           postinc0	equ	0xFEE
 39438                           wreg	equ	0xFE8
 39439                           indf1	equ	0xFE7
 39440                           postinc1	equ	0xFE6
 39441                           postdec1	equ	0xFE5
 39442                           plusw1	equ	0xFE3
 39443                           fsr1h	equ	0xFE2
 39444                           fsr1l	equ	0xFE1
 39445                           indf2	equ	0xFDF
 39446                           postinc2	equ	0xFDE
 39447                           postdec2	equ	0xFDD
 39448                           plusw2	equ	0xFDB
 39449                           fsr2h	equ	0xFDA
 39450                           fsr2l	equ	0xFD9
 39451                           status	equ	0xFD8
 39452                           
 39453 ;; *************** function _i2c_eeprom_write *****************
 39454 ;; Defined at:
 39455 ;;		line 542 in file "i2c.c"
 39456 ;; Parameters:    Size  Location     Type
 39457 ;;  address         2   10[BANK0 ] unsigned int 
 39458 ;;  data            2   12[BANK0 ] PTR unsigned char 
 39459 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 39460 ;;  length          1   14[BANK0 ] unsigned char 
 39461 ;; Auto vars:     Size  Location     Type
 39462 ;;  dat            17   18[BANK0 ] unsigned char [17]
 39463 ;;  cntr            1   36[BANK0 ] unsigned char 
 39464 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 39465 ;; Return value:  Size  Location     Type
 39466 ;;                  1    wreg      void 
 39467 ;; Registers used:
 39468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39469 ;; Tracked objects:
 39470 ;;		On entry : 0/0
 39471 ;;		On exit  : 0/0
 39472 ;;		Unchanged: 0/0
 39473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39474 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39475 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39476 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39477 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39478 ;;Total ram usage:       27 bytes
 39479 ;; Hardware stack levels used:    1
 39480 ;; Hardware stack levels required when called:   12
 39481 ;; This function calls:
 39482 ;;		__i2c_write
 39483 ;;		_i2c_set_frequency
 39484 ;; This function is called by:
 39485 ;;		__write_calibration
 39486 ;;		_rtcc_write_eeprom
 39487 ;; This function uses a non-reentrant model
 39488 ;;
 39489                           
 39490                           	psect	text171
 39491  0113C6                     __ptext171:
 39492                           	opt stack 0
 39493  0113C6                     _i2c_eeprom_write:
 39494                           	opt stack 15
 39495                           
 39496                           ;i2c.c: 544: uint8_t cntr;
 39497                           ;i2c.c: 545: uint8_t slave_address;
 39498                           ;i2c.c: 546: uint8_t dat[17];
 39499                           ;i2c.c: 548: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 39500                           
 39501                           ;incstack = 0
 39502  0113C6  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 39503  0113CA  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 39504  0113CE  0E07               	movlw	7
 39505  0113D0  0100               	movlb	0	; () banked
 39506  0113D2  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 39507  0113D4                     u17785:
 39508  0113D4  0100               	movlb	0	; () banked
 39509  0113D6  90D8               	bcf	status,0,c
 39510  0113D8  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 39511  0113DA  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 39512  0113DC  0100               	movlb	0	; () banked
 39513  0113DE  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 39514  0113E0  D7F9               	goto	u17785
 39515  0113E2  0100               	movlb	0	; () banked
 39516  0113E4  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 39517  0113E6  0B0E               	andlw	14
 39518  0113E8  09A0               	iorlw	160
 39519  0113EA  0100               	movlb	0	; () banked
 39520  0113EC  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 39521                           
 39522                           ; BSR set to: 0
 39523                           ;i2c.c: 549: dat[0] = address & 0xFF;
 39524  0113EE  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 39525                           
 39526                           ;i2c.c: 551: length &= 0b00001111;
 39527  0113F2  0E0F               	movlw	15
 39528  0113F4  0100               	movlb	0	; () banked
 39529  0113F6  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 39530                           
 39531                           ; BSR set to: 0
 39532                           ;i2c.c: 552: for(cntr=0; cntr<length; ++cntr)
 39533  0113F8  0E00               	movlw	0
 39534  0113FA  0100               	movlb	0	; () banked
 39535  0113FC  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 39536  0113FE  D021               	goto	l18775
 39537  011400                     l18771:
 39538                           
 39539                           ; BSR set to: 0
 39540                           ;i2c.c: 553: {
 39541                           ;i2c.c: 554: dat[cntr+1] = data[cntr];
 39542  011400  0100               	movlb	0	; () banked
 39543  011402  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 39544  011404  0D01               	mullw	1
 39545  011406  50F3               	movf	prodl,w,c
 39546  011408  0100               	movlb	0	; () banked
 39547  01140A  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 39548  01140C  6ED9               	movwf	fsr2l,c
 39549  01140E  50F4               	movf	prodh,w,c
 39550  011410  0100               	movlb	0	; () banked
 39551  011412  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 39552  011414  6EDA               	movwf	fsr2h,c
 39553  011416  0100               	movlb	0	; () banked
 39554  011418  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 39555  01141A  0100               	movlb	0	; () banked
 39556  01141C  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 39557  01141E  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 39558  011420  0E01               	movlw	1
 39559  011422  0100               	movlb	0	; () banked
 39560  011424  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 39561  011426  0E00               	movlw	0
 39562  011428  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 39563  01142A  0E72               	movlw	low i2c_eeprom_write@dat
 39564  01142C  0100               	movlb	0	; () banked
 39565  01142E  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 39566  011430  6EE1               	movwf	fsr1l,c
 39567  011432  0E00               	movlw	high i2c_eeprom_write@dat
 39568  011434  0100               	movlb	0	; () banked
 39569  011436  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 39570  011438  6EE2               	movwf	fsr1h,c
 39571  01143A  CFDF FFE7          	movff	indf2,indf1
 39572                           
 39573                           ; BSR set to: 0
 39574  01143E  0100               	movlb	0	; () banked
 39575  011440  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 39576  011442                     l18775:
 39577                           
 39578                           ; BSR set to: 0
 39579  011442  0100               	movlb	0	; () banked
 39580  011444  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 39581  011446  0100               	movlb	0	; () banked
 39582  011448  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 39583  01144A  A0D8               	btfss	status,0,c
 39584  01144C  D7D9               	goto	l18771
 39585                           
 39586                           ; BSR set to: 0
 39587                           ;i2c.c: 555: }
 39588                           ;i2c.c: 558: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 39589                           
 39590                           ; BSR set to: 0
 39591  01144E  0E02               	movlw	2
 39592  011450  ECDC  F093         	call	_i2c_set_frequency
 39593                           
 39594                           ;i2c.c: 560: _i2c_write(slave_address, &dat[0], length+1);
 39595  011454  0E72               	movlw	low i2c_eeprom_write@dat
 39596  011456  0100               	movlb	0	; () banked
 39597  011458  6F65               	movwf	__i2c_write@data& (0+255),b
 39598  01145A  0E00               	movlw	high i2c_eeprom_write@dat
 39599  01145C  0100               	movlb	0	; () banked
 39600  01145E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 39601  011460  0100               	movlb	0	; () banked
 39602  011462  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 39603  011464  0100               	movlb	0	; () banked
 39604  011466  6F67               	movwf	__i2c_write@length& (0+255),b
 39605  011468  0100               	movlb	0	; () banked
 39606  01146A  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 39607  01146C  EC8C  F098         	call	__i2c_write
 39608  011470  0012               	return		;funcret
 39609  011472                     __end_of_i2c_eeprom_write:
 39610                           	opt stack 0
 39611                           tosu	equ	0xFFF
 39612                           tosh	equ	0xFFE
 39613                           tosl	equ	0xFFD
 39614                           pclath	equ	0xFFA
 39615                           tblptru	equ	0xFF8
 39616                           tblptrh	equ	0xFF7
 39617                           tblptrl	equ	0xFF6
 39618                           tablat	equ	0xFF5
 39619                           prodh	equ	0xFF4
 39620                           prodl	equ	0xFF3
 39621                           intcon	equ	0xFF2
 39622                           intcon2	equ	0xFF1
 39623                           intcon3	equ	0xFF0
 39624                           postinc0	equ	0xFEE
 39625                           wreg	equ	0xFE8
 39626                           indf1	equ	0xFE7
 39627                           postinc1	equ	0xFE6
 39628                           postdec1	equ	0xFE5
 39629                           plusw1	equ	0xFE3
 39630                           fsr1h	equ	0xFE2
 39631                           fsr1l	equ	0xFE1
 39632                           indf2	equ	0xFDF
 39633                           postinc2	equ	0xFDE
 39634                           postdec2	equ	0xFDD
 39635                           plusw2	equ	0xFDB
 39636                           fsr2h	equ	0xFDA
 39637                           fsr2l	equ	0xFD9
 39638                           status	equ	0xFD8
 39639                           
 39640 ;; *************** function _i2c_set_frequency *****************
 39641 ;; Defined at:
 39642 ;;		line 107 in file "i2c.c"
 39643 ;; Parameters:    Size  Location     Type
 39644 ;;  frequency       1    wreg     enum E8213
 39645 ;; Auto vars:     Size  Location     Type
 39646 ;;  frequency       1    0[BANK0 ] enum E8213
 39647 ;; Return value:  Size  Location     Type
 39648 ;;                  1    wreg      void 
 39649 ;; Registers used:
 39650 ;;		wreg, status,2, status,0
 39651 ;; Tracked objects:
 39652 ;;		On entry : 0/0
 39653 ;;		On exit  : 0/0
 39654 ;;		Unchanged: 0/0
 39655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39659 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39660 ;;Total ram usage:        1 bytes
 39661 ;; Hardware stack levels used:    1
 39662 ;; Hardware stack levels required when called:   10
 39663 ;; This function calls:
 39664 ;;		Nothing
 39665 ;; This function is called by:
 39666 ;;		_i2c_init
 39667 ;;		_i2c_display_send_init_sequence
 39668 ;;		__ic2_display_set_address
 39669 ;;		_i2c_display_cursor
 39670 ;;		_i2c_display_write_fixed
 39671 ;;		_i2c_digipot_reset_on
 39672 ;;		_i2c_digipot_reset_off
 39673 ;;		_i2c_digipot_backlight
 39674 ;;		_i2c_adc_start
 39675 ;;		_i2c_adc_read
 39676 ;;		_i2c_eeprom_write
 39677 ;;		_i2c_eeprom_read
 39678 ;;		_i2c_display_init
 39679 ;;		_i2c_display_write
 39680 ;;		_i2c_digipot_set_defaults
 39681 ;;		_i2c_eeprom_writeByte
 39682 ;;		_i2c_eeprom_readByte
 39683 ;; This function uses a non-reentrant model
 39684 ;;
 39685                           
 39686                           	psect	text172
 39687  0127B8                     __ptext172:
 39688                           	opt stack 0
 39689  0127B8                     _i2c_set_frequency:
 39690                           	opt stack 18
 39691                           
 39692                           ;incstack = 0
 39693                           ;i2c_set_frequency@frequency stored from wreg
 39694  0127B8  0100               	movlb	0	; () banked
 39695  0127BA  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 39696                           
 39697                           ;i2c.c: 109: switch(os.clockFrequency)
 39698  0127BC  D027               	goto	l18367
 39699  0127BE                     l18343:
 39700                           
 39701                           ;i2c.c: 112: SSP1ADD = 0;
 39702  0127BE  0E00               	movlw	0
 39703  0127C0  D017               	goto	L48
 39704  0127C2                     l18345:
 39705                           
 39706                           ;i2c.c: 118: SSP1ADD = 19;
 39707  0127C2  0E13               	movlw	19
 39708  0127C4  D015               	goto	L48
 39709  0127C6                     l18347:
 39710                           
 39711                           ;i2c.c: 121: SSP1ADD = 9;
 39712  0127C6  0E09               	movlw	9
 39713  0127C8  D013               	goto	L48
 39714  0127CA                     l18349:
 39715                           
 39716                           ;i2c.c: 124: SSP1ADD = 4;
 39717  0127CA  0E04               	movlw	4
 39718  0127CC  D011               	goto	L48
 39719  0127CE                     l18353:
 39720  0127CE  0100               	movlb	0	; () banked
 39721  0127D0  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 39722                           
 39723                           ; Switch size 1, requested type "space"
 39724                           ; Number of cases is 3, Range of values is 0 to 2
 39725                           ; switch strategies available:
 39726                           ; Name         Instructions Cycles
 39727                           ; simple_byte           10     6 (average)
 39728                           ;	Chosen strategy is simple_byte
 39729  0127D2  0A00               	xorlw	0	; case 0
 39730  0127D4  B4D8               	btfsc	status,2,c
 39731  0127D6  D7F5               	goto	l18345
 39732  0127D8  0A01               	xorlw	1	; case 1
 39733  0127DA  B4D8               	btfsc	status,2,c
 39734  0127DC  D7F4               	goto	l18347
 39735  0127DE  0A03               	xorlw	3	; case 2
 39736  0127E0  B4D8               	btfsc	status,2,c
 39737  0127E2  D7F3               	goto	l18349
 39738                           
 39739                           ; BSR set to: 0
 39740                           ;i2c.c: 127: break;
 39741  0127E4  D01E               	goto	l1535
 39742  0127E6                     l18355:
 39743                           
 39744                           ; BSR set to: 0
 39745                           ;i2c.c: 132: SSP1ADD = 119;
 39746  0127E6  0E77               	movlw	119
 39747  0127E8  D003               	goto	L48
 39748  0127EA                     l18357:
 39749                           
 39750                           ; BSR set to: 0
 39751                           ;i2c.c: 135: SSP1ADD = 59;
 39752  0127EA  0E3B               	movlw	59
 39753  0127EC  D001               	goto	L48
 39754  0127EE                     l18359:
 39755                           
 39756                           ; BSR set to: 0
 39757                           ;i2c.c: 138: SSP1ADD = 29;
 39758  0127EE  0E1D               	movlw	29
 39759  0127F0                     L48:
 39760  0127F0  6EC8               	movwf	4040,c	;volatile
 39761                           
 39762                           ; BSR set to: 0
 39763                           ;i2c.c: 140: }
 39764                           
 39765                           ;i2c.c: 139: break;
 39766  0127F2  D017               	goto	l1535
 39767  0127F4                     l18363:
 39768  0127F4  0100               	movlb	0	; () banked
 39769  0127F6  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 39770                           
 39771                           ; Switch size 1, requested type "space"
 39772                           ; Number of cases is 3, Range of values is 0 to 2
 39773                           ; switch strategies available:
 39774                           ; Name         Instructions Cycles
 39775                           ; simple_byte           10     6 (average)
 39776                           ;	Chosen strategy is simple_byte
 39777  0127F8  0A00               	xorlw	0	; case 0
 39778  0127FA  B4D8               	btfsc	status,2,c
 39779  0127FC  D7F4               	goto	l18355
 39780  0127FE  0A01               	xorlw	1	; case 1
 39781  012800  B4D8               	btfsc	status,2,c
 39782  012802  D7F3               	goto	l18357
 39783  012804  0A03               	xorlw	3	; case 2
 39784  012806  B4D8               	btfsc	status,2,c
 39785  012808  D7F2               	goto	l18359
 39786                           
 39787                           ; BSR set to: 0
 39788                           ;i2c.c: 142: }
 39789                           
 39790                           ; BSR set to: 0
 39791                           ;i2c.c: 141: break;
 39792  01280A  D00B               	goto	l1535
 39793  01280C                     l18367:
 39794  01280C  0102               	movlb	2	; () banked
 39795  01280E  5100               	movf	_os& (0+255),w,b	;volatile
 39796                           
 39797                           ; Switch size 1, requested type "space"
 39798                           ; Number of cases is 3, Range of values is 0 to 2
 39799                           ; switch strategies available:
 39800                           ; Name         Instructions Cycles
 39801                           ; simple_byte           10     6 (average)
 39802                           ;	Chosen strategy is simple_byte
 39803  012810  0A00               	xorlw	0	; case 0
 39804  012812  B4D8               	btfsc	status,2,c
 39805  012814  D7D4               	goto	l18343
 39806  012816  0A01               	xorlw	1	; case 1
 39807  012818  B4D8               	btfsc	status,2,c
 39808  01281A  D7D9               	goto	l18353
 39809  01281C  0A03               	xorlw	3	; case 2
 39810  01281E  B4D8               	btfsc	status,2,c
 39811  012820  D7E9               	goto	l18363
 39812  012822                     l1535:
 39813                           
 39814                           ;i2c.c: 144: i2c_frequency = frequency;
 39815  012822  C060  F1F4         	movff	i2c_set_frequency@frequency,_i2c_frequency
 39816  012826  0012               	return		;funcret
 39817  012828                     __end_of_i2c_set_frequency:
 39818                           	opt stack 0
 39819                           tosu	equ	0xFFF
 39820                           tosh	equ	0xFFE
 39821                           tosl	equ	0xFFD
 39822                           pclath	equ	0xFFA
 39823                           tblptru	equ	0xFF8
 39824                           tblptrh	equ	0xFF7
 39825                           tblptrl	equ	0xFF6
 39826                           tablat	equ	0xFF5
 39827                           prodh	equ	0xFF4
 39828                           prodl	equ	0xFF3
 39829                           intcon	equ	0xFF2
 39830                           intcon2	equ	0xFF1
 39831                           intcon3	equ	0xFF0
 39832                           postinc0	equ	0xFEE
 39833                           wreg	equ	0xFE8
 39834                           indf1	equ	0xFE7
 39835                           postinc1	equ	0xFE6
 39836                           postdec1	equ	0xFE5
 39837                           plusw1	equ	0xFE3
 39838                           fsr1h	equ	0xFE2
 39839                           fsr1l	equ	0xFE1
 39840                           indf2	equ	0xFDF
 39841                           postinc2	equ	0xFDE
 39842                           postdec2	equ	0xFDD
 39843                           plusw2	equ	0xFDB
 39844                           fsr2h	equ	0xFDA
 39845                           fsr2l	equ	0xFD9
 39846                           status	equ	0xFD8
 39847                           
 39848 ;; *************** function __i2c_write *****************
 39849 ;; Defined at:
 39850 ;;		line 148 in file "i2c.c"
 39851 ;; Parameters:    Size  Location     Type
 39852 ;;  slave_addres    1    wreg     unsigned char 
 39853 ;;  data            2    5[BANK0 ] PTR unsigned char 
 39854 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 39855 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 39856 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 39857 ;;  length          1    7[BANK0 ] unsigned char 
 39858 ;; Auto vars:     Size  Location     Type
 39859 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 39860 ;;  cntr            1    9[BANK0 ] unsigned char 
 39861 ;; Return value:  Size  Location     Type
 39862 ;;                  1    wreg      void 
 39863 ;; Registers used:
 39864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39865 ;; Tracked objects:
 39866 ;;		On entry : 0/0
 39867 ;;		On exit  : 0/0
 39868 ;;		Unchanged: 0/0
 39869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39870 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39871 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39873 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39874 ;;Total ram usage:        5 bytes
 39875 ;; Hardware stack levels used:    1
 39876 ;; Hardware stack levels required when called:   11
 39877 ;; This function calls:
 39878 ;;		__i2c_send
 39879 ;;		__i2c_start
 39880 ;;		__i2c_stop
 39881 ;;		__i2c_wait_idle
 39882 ;; This function is called by:
 39883 ;;		_i2c_display_send_init_sequence
 39884 ;;		__ic2_display_set_address
 39885 ;;		_i2c_digipot_reset_on
 39886 ;;		_i2c_digipot_reset_off
 39887 ;;		_i2c_digipot_backlight
 39888 ;;		_i2c_adc_start
 39889 ;;		_i2c_eeprom_write
 39890 ;;		_i2c_eeprom_read
 39891 ;;		_i2c_display_init
 39892 ;;		_i2c_digipot_set_defaults
 39893 ;;		_i2c_eeprom_writeByte
 39894 ;;		_i2c_eeprom_readByte
 39895 ;; This function uses a non-reentrant model
 39896 ;;
 39897                           
 39898                           	psect	text173
 39899  013118                     __ptext173:
 39900                           	opt stack 0
 39901  013118                     __i2c_write:
 39902                           	opt stack 17
 39903                           
 39904                           ;incstack = 0
 39905                           ;__i2c_write@slave_address stored from wreg
 39906  013118  0100               	movlb	0	; () banked
 39907  01311A  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 39908                           
 39909                           ;i2c.c: 150: uint8_t cntr;
 39910                           ;i2c.c: 152: _i2c_wait_idle();
 39911  01311C  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 39912                           
 39913                           ;i2c.c: 153: _i2c_start();
 39914  013120  EC66  F0A1         	call	__i2c_start	;wreg free
 39915                           
 39916                           ;i2c.c: 154: _i2c_wait_idle();
 39917  013124  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 39918                           
 39919                           ;i2c.c: 155: _i2c_send(slave_address);
 39920  013128  0100               	movlb	0	; () banked
 39921  01312A  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 39922  01312C  EC5D  F0A1         	call	__i2c_send
 39923                           
 39924                           ;i2c.c: 156: _i2c_wait_idle();
 39925  013130  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 39926                           
 39927                           ;i2c.c: 158: for(cntr=0; cntr<length; ++cntr)
 39928  013134  0E00               	movlw	0
 39929  013136  0100               	movlb	0	; () banked
 39930  013138  6F69               	movwf	__i2c_write@cntr& (0+255),b
 39931  01313A  D012               	goto	l18387
 39932  01313C                     l18381:
 39933                           
 39934                           ; BSR set to: 0
 39935                           ;i2c.c: 159: {
 39936                           ;i2c.c: 160: _i2c_send(data[cntr]);
 39937  01313C  0100               	movlb	0	; () banked
 39938  01313E  5169               	movf	__i2c_write@cntr& (0+255),w,b
 39939  013140  0D01               	mullw	1
 39940  013142  50F3               	movf	prodl,w,c
 39941  013144  0100               	movlb	0	; () banked
 39942  013146  2565               	addwf	__i2c_write@data& (0+255),w,b
 39943  013148  6ED9               	movwf	fsr2l,c
 39944  01314A  50F4               	movf	prodh,w,c
 39945  01314C  0100               	movlb	0	; () banked
 39946  01314E  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 39947  013150  6EDA               	movwf	fsr2h,c
 39948  013152  50DF               	movf	indf2,w,c
 39949  013154  EC5D  F0A1         	call	__i2c_send
 39950                           
 39951                           ;i2c.c: 161: _i2c_wait_idle();
 39952  013158  ECF7  F092         	call	__i2c_wait_idle	;wreg free
 39953  01315C  0100               	movlb	0	; () banked
 39954  01315E  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 39955  013160                     l18387:
 39956                           
 39957                           ; BSR set to: 0
 39958  013160  0100               	movlb	0	; () banked
 39959  013162  5167               	movf	__i2c_write@length& (0+255),w,b
 39960  013164  0100               	movlb	0	; () banked
 39961  013166  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 39962  013168  A0D8               	btfss	status,0,c
 39963  01316A  D7E8               	goto	l18381
 39964                           
 39965                           ; BSR set to: 0
 39966                           ;i2c.c: 162: }
 39967                           ;i2c.c: 164: _i2c_stop();
 39968                           
 39969                           ; BSR set to: 0
 39970  01316C  EC62  F0A1         	call	__i2c_stop	;wreg free
 39971  013170  0012               	return		;funcret
 39972  013172                     __end_of__i2c_write:
 39973                           	opt stack 0
 39974                           tosu	equ	0xFFF
 39975                           tosh	equ	0xFFE
 39976                           tosl	equ	0xFFD
 39977                           pclath	equ	0xFFA
 39978                           tblptru	equ	0xFF8
 39979                           tblptrh	equ	0xFF7
 39980                           tblptrl	equ	0xFF6
 39981                           tablat	equ	0xFF5
 39982                           prodh	equ	0xFF4
 39983                           prodl	equ	0xFF3
 39984                           intcon	equ	0xFF2
 39985                           intcon2	equ	0xFF1
 39986                           intcon3	equ	0xFF0
 39987                           postinc0	equ	0xFEE
 39988                           wreg	equ	0xFE8
 39989                           indf1	equ	0xFE7
 39990                           postinc1	equ	0xFE6
 39991                           postdec1	equ	0xFE5
 39992                           plusw1	equ	0xFE3
 39993                           fsr1h	equ	0xFE2
 39994                           fsr1l	equ	0xFE1
 39995                           indf2	equ	0xFDF
 39996                           postinc2	equ	0xFDE
 39997                           postdec2	equ	0xFDD
 39998                           plusw2	equ	0xFDB
 39999                           fsr2h	equ	0xFDA
 40000                           fsr2l	equ	0xFD9
 40001                           status	equ	0xFD8
 40002                           
 40003 ;; *************** function __i2c_wait_idle *****************
 40004 ;; Defined at:
 40005 ;;		line 45 in file "i2c.c"
 40006 ;; Parameters:    Size  Location     Type
 40007 ;;		None
 40008 ;; Auto vars:     Size  Location     Type
 40009 ;;		None
 40010 ;; Return value:  Size  Location     Type
 40011 ;;                  1    wreg      void 
 40012 ;; Registers used:
 40013 ;;		wreg, status,2, status,0
 40014 ;; Tracked objects:
 40015 ;;		On entry : 0/0
 40016 ;;		On exit  : 0/0
 40017 ;;		Unchanged: 0/0
 40018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40021 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40022 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40023 ;;Total ram usage:        5 bytes
 40024 ;; Hardware stack levels used:    1
 40025 ;; Hardware stack levels required when called:   10
 40026 ;; This function calls:
 40027 ;;		Nothing
 40028 ;; This function is called by:
 40029 ;;		__i2c_write
 40030 ;;		__i2c_read
 40031 ;;		_i2c_display_write_fixed
 40032 ;;		_i2c_adc_read
 40033 ;;		_i2c_display_write
 40034 ;; This function uses a non-reentrant model
 40035 ;;
 40036                           
 40037                           	psect	text174
 40038  0125EE                     __ptext174:
 40039                           	opt stack 0
 40040  0125EE                     __i2c_wait_idle:
 40041                           	opt stack 17
 40042  0125EE                     l11703:
 40043  0125EE  A4C7               	btfss	4039,2,c	;volatile
 40044  0125F0  D004               	goto	u8950
 40045  0125F2  0100               	movlb	0	; () banked
 40046  0125F4  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 40047  0125F6  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 40048  0125F8  D002               	goto	u8958
 40049  0125FA                     u8950:
 40050  0125FA  0100               	movlb	0	; () banked
 40051  0125FC  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 40052  0125FE                     u8958:
 40053  0125FE  A0C5               	btfss	4037,0,c	;volatile
 40054  012600  D004               	goto	u8960
 40055  012602  0100               	movlb	0	; () banked
 40056  012604  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 40057  012606  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 40058  012608  D002               	goto	u8968
 40059  01260A                     u8960:
 40060  01260A  0100               	movlb	0	; () banked
 40061  01260C  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 40062  01260E                     u8968:
 40063  01260E  A2C5               	btfss	4037,1,c	;volatile
 40064  012610  D004               	goto	u8970
 40065  012612  0100               	movlb	0	; () banked
 40066  012614  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 40067  012616  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 40068  012618  D002               	goto	u8978
 40069  01261A                     u8970:
 40070  01261A  0100               	movlb	0	; () banked
 40071  01261C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 40072  01261E                     u8978:
 40073  01261E  A4C5               	btfss	4037,2,c	;volatile
 40074  012620  D004               	goto	u8980
 40075  012622  0100               	movlb	0	; () banked
 40076  012624  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 40077  012626  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 40078  012628  D002               	goto	u8988
 40079  01262A                     u8980:
 40080  01262A  0100               	movlb	0	; () banked
 40081  01262C  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 40082  01262E                     u8988:
 40083  01262E  A6C5               	btfss	4037,3,c	;volatile
 40084  012630  D004               	goto	u8990
 40085  012632  0100               	movlb	0	; () banked
 40086  012634  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 40087  012636  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 40088  012638  D002               	goto	u8998
 40089  01263A                     u8990:
 40090  01263A  0100               	movlb	0	; () banked
 40091  01263C  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 40092  01263E                     u8998:
 40093  01263E  A8C5               	btfss	4037,4,c	;volatile
 40094  012640  D002               	goto	u9000
 40095  012642  0E01               	movlw	1
 40096  012644  D001               	goto	u9006
 40097  012646                     u9000:
 40098  012646  0E00               	movlw	0
 40099  012648                     u9006:
 40100  012648  0100               	movlb	0	; () banked
 40101  01264A  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 40102  01264C  0100               	movlb	0	; () banked
 40103  01264E  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 40104  012650  0100               	movlb	0	; () banked
 40105  012652  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 40106  012654  0100               	movlb	0	; () banked
 40107  012656  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 40108  012658  0100               	movlb	0	; () banked
 40109  01265A  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 40110  01265C  0900               	iorlw	0
 40111  01265E  B4D8               	btfsc	status,2,c
 40112  012660  0012               	return	
 40113  012662  D7C5               	goto	l11703
 40114  012664                     __end_of__i2c_wait_idle:
 40115                           	opt stack 0
 40116                           tosu	equ	0xFFF
 40117                           tosh	equ	0xFFE
 40118                           tosl	equ	0xFFD
 40119                           pclath	equ	0xFFA
 40120                           tblptru	equ	0xFF8
 40121                           tblptrh	equ	0xFF7
 40122                           tblptrl	equ	0xFF6
 40123                           tablat	equ	0xFF5
 40124                           prodh	equ	0xFF4
 40125                           prodl	equ	0xFF3
 40126                           intcon	equ	0xFF2
 40127                           intcon2	equ	0xFF1
 40128                           intcon3	equ	0xFF0
 40129                           postinc0	equ	0xFEE
 40130                           wreg	equ	0xFE8
 40131                           indf1	equ	0xFE7
 40132                           postinc1	equ	0xFE6
 40133                           postdec1	equ	0xFE5
 40134                           plusw1	equ	0xFE3
 40135                           fsr1h	equ	0xFE2
 40136                           fsr1l	equ	0xFE1
 40137                           indf2	equ	0xFDF
 40138                           postinc2	equ	0xFDE
 40139                           postdec2	equ	0xFDD
 40140                           plusw2	equ	0xFDB
 40141                           fsr2h	equ	0xFDA
 40142                           fsr2l	equ	0xFD9
 40143                           status	equ	0xFD8
 40144                           
 40145 ;; *************** function __i2c_stop *****************
 40146 ;; Defined at:
 40147 ;;		line 72 in file "i2c.c"
 40148 ;; Parameters:    Size  Location     Type
 40149 ;;		None
 40150 ;; Auto vars:     Size  Location     Type
 40151 ;;		None
 40152 ;; Return value:  Size  Location     Type
 40153 ;;                  1    wreg      void 
 40154 ;; Registers used:
 40155 ;;		None
 40156 ;; Tracked objects:
 40157 ;;		On entry : 0/0
 40158 ;;		On exit  : 0/0
 40159 ;;		Unchanged: 0/0
 40160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40165 ;;Total ram usage:        0 bytes
 40166 ;; Hardware stack levels used:    1
 40167 ;; Hardware stack levels required when called:   10
 40168 ;; This function calls:
 40169 ;;		Nothing
 40170 ;; This function is called by:
 40171 ;;		__i2c_write
 40172 ;;		__i2c_read
 40173 ;;		_i2c_display_write_fixed
 40174 ;;		_i2c_adc_read
 40175 ;;		_i2c_display_write
 40176 ;; This function uses a non-reentrant model
 40177 ;;
 40178                           
 40179                           	psect	text175
 40180  0142C4                     __ptext175:
 40181                           	opt stack 0
 40182  0142C4                     __i2c_stop:
 40183                           	opt stack 17
 40184                           
 40185                           ;i2c.c: 74: SSP1CON2bits.PEN = 1;
 40186                           
 40187                           ; BSR set to: 0
 40188                           ;incstack = 0
 40189  0142C4  84C5               	bsf	4037,2,c	;volatile
 40190  0142C6                     l1509:
 40191  0142C6  A4C5               	btfss	4037,2,c	;volatile
 40192  0142C8  0012               	return	
 40193  0142CA  D7FD               	goto	l1509
 40194  0142CC                     __end_of__i2c_stop:
 40195                           	opt stack 0
 40196                           tosu	equ	0xFFF
 40197                           tosh	equ	0xFFE
 40198                           tosl	equ	0xFFD
 40199                           pclath	equ	0xFFA
 40200                           tblptru	equ	0xFF8
 40201                           tblptrh	equ	0xFF7
 40202                           tblptrl	equ	0xFF6
 40203                           tablat	equ	0xFF5
 40204                           prodh	equ	0xFF4
 40205                           prodl	equ	0xFF3
 40206                           intcon	equ	0xFF2
 40207                           intcon2	equ	0xFF1
 40208                           intcon3	equ	0xFF0
 40209                           postinc0	equ	0xFEE
 40210                           wreg	equ	0xFE8
 40211                           indf1	equ	0xFE7
 40212                           postinc1	equ	0xFE6
 40213                           postdec1	equ	0xFE5
 40214                           plusw1	equ	0xFE3
 40215                           fsr1h	equ	0xFE2
 40216                           fsr1l	equ	0xFE1
 40217                           indf2	equ	0xFDF
 40218                           postinc2	equ	0xFDE
 40219                           postdec2	equ	0xFDD
 40220                           plusw2	equ	0xFDB
 40221                           fsr2h	equ	0xFDA
 40222                           fsr2l	equ	0xFD9
 40223                           status	equ	0xFD8
 40224                           
 40225 ;; *************** function __i2c_start *****************
 40226 ;; Defined at:
 40227 ;;		line 51 in file "i2c.c"
 40228 ;; Parameters:    Size  Location     Type
 40229 ;;		None
 40230 ;; Auto vars:     Size  Location     Type
 40231 ;;		None
 40232 ;; Return value:  Size  Location     Type
 40233 ;;                  1    wreg      void 
 40234 ;; Registers used:
 40235 ;;		None
 40236 ;; Tracked objects:
 40237 ;;		On entry : 0/0
 40238 ;;		On exit  : 0/0
 40239 ;;		Unchanged: 0/0
 40240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40245 ;;Total ram usage:        0 bytes
 40246 ;; Hardware stack levels used:    1
 40247 ;; Hardware stack levels required when called:   10
 40248 ;; This function calls:
 40249 ;;		Nothing
 40250 ;; This function is called by:
 40251 ;;		__i2c_write
 40252 ;;		__i2c_read
 40253 ;;		_i2c_display_write_fixed
 40254 ;;		_i2c_adc_read
 40255 ;;		_i2c_display_write
 40256 ;; This function uses a non-reentrant model
 40257 ;;
 40258                           
 40259                           	psect	text176
 40260  0142CC                     __ptext176:
 40261                           	opt stack 0
 40262  0142CC                     __i2c_start:
 40263                           	opt stack 17
 40264                           
 40265                           ;i2c.c: 53: SSP1CON2bits.SEN=1;
 40266                           
 40267                           ;incstack = 0
 40268  0142CC  80C5               	bsf	4037,0,c	;volatile
 40269  0142CE                     l1494:
 40270  0142CE  A0C5               	btfss	4037,0,c	;volatile
 40271  0142D0  0012               	return	
 40272  0142D2  D7FD               	goto	l1494
 40273  0142D4                     __end_of__i2c_start:
 40274                           	opt stack 0
 40275                           tosu	equ	0xFFF
 40276                           tosh	equ	0xFFE
 40277                           tosl	equ	0xFFD
 40278                           pclath	equ	0xFFA
 40279                           tblptru	equ	0xFF8
 40280                           tblptrh	equ	0xFF7
 40281                           tblptrl	equ	0xFF6
 40282                           tablat	equ	0xFF5
 40283                           prodh	equ	0xFF4
 40284                           prodl	equ	0xFF3
 40285                           intcon	equ	0xFF2
 40286                           intcon2	equ	0xFF1
 40287                           intcon3	equ	0xFF0
 40288                           postinc0	equ	0xFEE
 40289                           wreg	equ	0xFE8
 40290                           indf1	equ	0xFE7
 40291                           postinc1	equ	0xFE6
 40292                           postdec1	equ	0xFE5
 40293                           plusw1	equ	0xFE3
 40294                           fsr1h	equ	0xFE2
 40295                           fsr1l	equ	0xFE1
 40296                           indf2	equ	0xFDF
 40297                           postinc2	equ	0xFDE
 40298                           postdec2	equ	0xFDD
 40299                           plusw2	equ	0xFDB
 40300                           fsr2h	equ	0xFDA
 40301                           fsr2l	equ	0xFD9
 40302                           status	equ	0xFD8
 40303                           
 40304 ;; *************** function __i2c_send *****************
 40305 ;; Defined at:
 40306 ;;		line 58 in file "i2c.c"
 40307 ;; Parameters:    Size  Location     Type
 40308 ;;  dat             1    wreg     unsigned char 
 40309 ;; Auto vars:     Size  Location     Type
 40310 ;;  dat             1    0[BANK0 ] unsigned char 
 40311 ;; Return value:  Size  Location     Type
 40312 ;;                  1    wreg      void 
 40313 ;; Registers used:
 40314 ;;		wreg
 40315 ;; Tracked objects:
 40316 ;;		On entry : 0/0
 40317 ;;		On exit  : 0/0
 40318 ;;		Unchanged: 0/0
 40319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40324 ;;Total ram usage:        1 bytes
 40325 ;; Hardware stack levels used:    1
 40326 ;; Hardware stack levels required when called:   10
 40327 ;; This function calls:
 40328 ;;		Nothing
 40329 ;; This function is called by:
 40330 ;;		__i2c_write
 40331 ;;		__i2c_read
 40332 ;;		_i2c_display_write_fixed
 40333 ;;		_i2c_adc_read
 40334 ;;		_i2c_display_write
 40335 ;; This function uses a non-reentrant model
 40336 ;;
 40337                           
 40338                           	psect	text177
 40339  0142BA                     __ptext177:
 40340                           	opt stack 0
 40341  0142BA                     __i2c_send:
 40342                           	opt stack 17
 40343                           
 40344                           ;incstack = 0
 40345                           ;__i2c_send@dat stored from wreg
 40346  0142BA  0100               	movlb	0	; () banked
 40347  0142BC  6F60               	movwf	__i2c_send@dat& (0+255),b
 40348                           
 40349                           ;i2c.c: 60: SSP1BUF = dat;
 40350  0142BE  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 40351  0142C2  0012               	return		;funcret
 40352  0142C4                     __end_of__i2c_send:
 40353                           	opt stack 0
 40354                           tosu	equ	0xFFF
 40355                           tosh	equ	0xFFE
 40356                           tosl	equ	0xFFD
 40357                           pclath	equ	0xFFA
 40358                           tblptru	equ	0xFF8
 40359                           tblptrh	equ	0xFF7
 40360                           tblptrl	equ	0xFF6
 40361                           tablat	equ	0xFF5
 40362                           prodh	equ	0xFF4
 40363                           prodl	equ	0xFF3
 40364                           intcon	equ	0xFF2
 40365                           intcon2	equ	0xFF1
 40366                           intcon3	equ	0xFF0
 40367                           postinc0	equ	0xFEE
 40368                           wreg	equ	0xFE8
 40369                           indf1	equ	0xFE7
 40370                           postinc1	equ	0xFE6
 40371                           postdec1	equ	0xFE5
 40372                           plusw1	equ	0xFE3
 40373                           fsr1h	equ	0xFE2
 40374                           fsr1l	equ	0xFE1
 40375                           indf2	equ	0xFDF
 40376                           postinc2	equ	0xFDE
 40377                           postdec2	equ	0xFDD
 40378                           plusw2	equ	0xFDB
 40379                           fsr2h	equ	0xFDA
 40380                           fsr2l	equ	0xFD9
 40381                           status	equ	0xFD8
 40382                           
 40383 ;; *************** function __parse_command_long *****************
 40384 ;; Defined at:
 40385 ;;		line 453 in file "app_device_custom_hid.c"
 40386 ;; Parameters:    Size  Location     Type
 40387 ;;  cmd             1    wreg     unsigned char 
 40388 ;;  data            1    3[BANK0 ] unsigned char 
 40389 ;; Auto vars:     Size  Location     Type
 40390 ;;  cmd             1    4[BANK0 ] unsigned char 
 40391 ;; Return value:  Size  Location     Type
 40392 ;;                  1    wreg      void 
 40393 ;; Registers used:
 40394 ;;		wreg, status,2, status,0, cstack
 40395 ;; Tracked objects:
 40396 ;;		On entry : 0/0
 40397 ;;		On exit  : 0/0
 40398 ;;		Unchanged: 0/0
 40399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40400 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40404 ;;Total ram usage:        2 bytes
 40405 ;; Hardware stack levels used:    1
 40406 ;; Hardware stack levels required when called:   12
 40407 ;; This function calls:
 40408 ;;		_buck_remote_change_dutycycle
 40409 ;;		_buck_remote_set_dutycycle
 40410 ;;		_buck_remote_set_enable
 40411 ;;		_buck_remote_set_on
 40412 ;;		_buck_remote_set_synchronous
 40413 ;;		_rtcc_set_day
 40414 ;;		_rtcc_set_hours
 40415 ;;		_rtcc_set_minutes
 40416 ;;		_rtcc_set_month
 40417 ;;		_rtcc_set_seconds
 40418 ;;		_rtcc_set_year
 40419 ;; This function is called by:
 40420 ;;		_APP_DeviceCustomHIDTasks
 40421 ;; This function uses a non-reentrant model
 40422 ;;
 40423                           
 40424                           	psect	text178
 40425  010318                     __ptext178:
 40426                           	opt stack 0
 40427  010318                     __parse_command_long:
 40428                           	opt stack 17
 40429                           
 40430                           ;incstack = 0
 40431                           ;__parse_command_long@cmd stored from wreg
 40432  010318  0100               	movlb	0	; () banked
 40433  01031A  6F64               	movwf	__parse_command_long@cmd& (0+255),b
 40434                           
 40435                           ;app_device_custom_hid.c: 455: switch(cmd)
 40436  01031C  D043               	goto	l20653
 40437  01031E                     l20621:
 40438                           
 40439                           ;app_device_custom_hid.c: 458: rtcc_set_year(data);
 40440  01031E  0100               	movlb	0	; () banked
 40441  010320  5163               	movf	__parse_command_long@data& (0+255),w,b
 40442  010322  EC05  F0A0         	call	_rtcc_set_year
 40443                           
 40444                           ;app_device_custom_hid.c: 459: break;
 40445  010326  0012               	return	
 40446  010328                     l20623:
 40447                           
 40448                           ;app_device_custom_hid.c: 461: rtcc_set_month(data);
 40449  010328  0100               	movlb	0	; () banked
 40450  01032A  5163               	movf	__parse_command_long@data& (0+255),w,b
 40451  01032C  EC1F  F0A0         	call	_rtcc_set_month
 40452                           
 40453                           ;app_device_custom_hid.c: 462: break;
 40454  010330  0012               	return	
 40455  010332                     l20625:
 40456                           
 40457                           ;app_device_custom_hid.c: 464: rtcc_set_day(data);
 40458  010332  0100               	movlb	0	; () banked
 40459  010334  5163               	movf	__parse_command_long@data& (0+255),w,b
 40460  010336  EC46  F0A0         	call	_rtcc_set_day
 40461                           
 40462                           ;app_device_custom_hid.c: 465: break;
 40463  01033A  0012               	return	
 40464  01033C                     l20627:
 40465                           
 40466                           ;app_device_custom_hid.c: 467: rtcc_set_hours(data);
 40467  01033C  0100               	movlb	0	; () banked
 40468  01033E  5163               	movf	__parse_command_long@data& (0+255),w,b
 40469  010340  EC39  F0A0         	call	_rtcc_set_hours
 40470                           
 40471                           ;app_device_custom_hid.c: 468: break;
 40472  010344  0012               	return	
 40473  010346                     l20629:
 40474                           
 40475                           ;app_device_custom_hid.c: 470: rtcc_set_minutes(data);
 40476  010346  0100               	movlb	0	; () banked
 40477  010348  5163               	movf	__parse_command_long@data& (0+255),w,b
 40478  01034A  EC2C  F0A0         	call	_rtcc_set_minutes
 40479                           
 40480                           ;app_device_custom_hid.c: 471: break;
 40481  01034E  0012               	return	
 40482  010350                     l20631:
 40483                           
 40484                           ;app_device_custom_hid.c: 473: rtcc_set_seconds(data);
 40485  010350  0100               	movlb	0	; () banked
 40486  010352  5163               	movf	__parse_command_long@data& (0+255),w,b
 40487  010354  EC12  F0A0         	call	_rtcc_set_seconds
 40488                           
 40489                           ;app_device_custom_hid.c: 474: break;
 40490  010358  0012               	return	
 40491  01035A                     l20633:
 40492                           
 40493                           ;app_device_custom_hid.c: 476: buck_remote_set_enable(1);
 40494  01035A  0E01               	movlw	1
 40495  01035C  ECBE  F09F         	call	_buck_remote_set_enable
 40496                           
 40497                           ;app_device_custom_hid.c: 477: break;
 40498  010360  0012               	return	
 40499  010362                     l20635:
 40500                           
 40501                           ;app_device_custom_hid.c: 479: buck_remote_set_enable(0);
 40502  010362  0E00               	movlw	0
 40503  010364  ECBE  F09F         	call	_buck_remote_set_enable
 40504                           
 40505                           ;app_device_custom_hid.c: 480: break;
 40506  010368  0012               	return	
 40507  01036A                     l20637:
 40508                           
 40509                           ;app_device_custom_hid.c: 482: buck_remote_set_on(1);
 40510  01036A  0E01               	movlw	1
 40511  01036C  ECAF  F09F         	call	_buck_remote_set_on
 40512                           
 40513                           ;app_device_custom_hid.c: 483: break;
 40514  010370  0012               	return	
 40515  010372                     l20639:
 40516                           
 40517                           ;app_device_custom_hid.c: 485: buck_remote_set_on(0);
 40518  010372  0E00               	movlw	0
 40519  010374  ECAF  F09F         	call	_buck_remote_set_on
 40520                           
 40521                           ;app_device_custom_hid.c: 486: break;
 40522  010378  0012               	return	
 40523  01037A                     l20641:
 40524                           
 40525                           ;app_device_custom_hid.c: 488: buck_remote_set_synchronous(0);
 40526  01037A  0E00               	movlw	0
 40527  01037C  ECA0  F09F         	call	_buck_remote_set_synchronous
 40528                           
 40529                           ;app_device_custom_hid.c: 489: break;
 40530  010380  0012               	return	
 40531  010382                     l20643:
 40532                           
 40533                           ;app_device_custom_hid.c: 491: buck_remote_set_synchronous(1);
 40534  010382  0E01               	movlw	1
 40535  010384  ECA0  F09F         	call	_buck_remote_set_synchronous
 40536                           
 40537                           ;app_device_custom_hid.c: 492: break;
 40538  010388  0012               	return	
 40539  01038A                     l20645:
 40540                           
 40541                           ;app_device_custom_hid.c: 494: buck_remote_change_dutycycle(-1);
 40542  01038A  0EFF               	movlw	255
 40543  01038C  ECB5  F096         	call	_buck_remote_change_dutycycle
 40544                           
 40545                           ;app_device_custom_hid.c: 495: break;
 40546  010390  0012               	return	
 40547  010392                     l20647:
 40548                           
 40549                           ;app_device_custom_hid.c: 497: buck_remote_change_dutycycle(1);
 40550  010392  0E01               	movlw	1
 40551  010394  ECB5  F096         	call	_buck_remote_change_dutycycle
 40552                           
 40553                           ;app_device_custom_hid.c: 498: break;
 40554  010398  0012               	return	
 40555  01039A                     l20649:
 40556                           
 40557                           ;app_device_custom_hid.c: 500: buck_remote_set_dutycycle(data);
 40558  01039A  0100               	movlb	0	; () banked
 40559  01039C  5163               	movf	__parse_command_long@data& (0+255),w,b
 40560  01039E  EC08  F09F         	call	_buck_remote_set_dutycycle
 40561                           
 40562                           ;app_device_custom_hid.c: 502: }
 40563                           
 40564                           ;app_device_custom_hid.c: 501: break;
 40565  0103A2  0012               	return	
 40566  0103A4                     l20653:
 40567  0103A4  0100               	movlb	0	; () banked
 40568  0103A6  5164               	movf	__parse_command_long@cmd& (0+255),w,b
 40569                           
 40570                           ; Switch size 1, requested type "space"
 40571                           ; Number of cases is 15, Range of values is 64 to 78
 40572                           ; switch strategies available:
 40573                           ; Name         Instructions Cycles
 40574                           ; simple_byte           46    24 (average)
 40575                           ;	Chosen strategy is simple_byte
 40576  0103A8  0A40               	xorlw	64	; case 64
 40577  0103AA  B4D8               	btfsc	status,2,c
 40578  0103AC  D7B8               	goto	l20621
 40579  0103AE  0A01               	xorlw	1	; case 65
 40580  0103B0  B4D8               	btfsc	status,2,c
 40581  0103B2  D7BA               	goto	l20623
 40582  0103B4  0A03               	xorlw	3	; case 66
 40583  0103B6  B4D8               	btfsc	status,2,c
 40584  0103B8  D7BC               	goto	l20625
 40585  0103BA  0A01               	xorlw	1	; case 67
 40586  0103BC  B4D8               	btfsc	status,2,c
 40587  0103BE  D7BE               	goto	l20627
 40588  0103C0  0A07               	xorlw	7	; case 68
 40589  0103C2  B4D8               	btfsc	status,2,c
 40590  0103C4  D7C0               	goto	l20629
 40591  0103C6  0A01               	xorlw	1	; case 69
 40592  0103C8  B4D8               	btfsc	status,2,c
 40593  0103CA  D7C2               	goto	l20631
 40594  0103CC  0A03               	xorlw	3	; case 70
 40595  0103CE  B4D8               	btfsc	status,2,c
 40596  0103D0  D7C4               	goto	l20633
 40597  0103D2  0A01               	xorlw	1	; case 71
 40598  0103D4  B4D8               	btfsc	status,2,c
 40599  0103D6  D7C5               	goto	l20635
 40600  0103D8  0A0F               	xorlw	15	; case 72
 40601  0103DA  B4D8               	btfsc	status,2,c
 40602  0103DC  D7C6               	goto	l20637
 40603  0103DE  0A01               	xorlw	1	; case 73
 40604  0103E0  B4D8               	btfsc	status,2,c
 40605  0103E2  D7C7               	goto	l20639
 40606  0103E4  0A03               	xorlw	3	; case 74
 40607  0103E6  B4D8               	btfsc	status,2,c
 40608  0103E8  D7C8               	goto	l20641
 40609  0103EA  0A01               	xorlw	1	; case 75
 40610  0103EC  B4D8               	btfsc	status,2,c
 40611  0103EE  D7C9               	goto	l20643
 40612  0103F0  0A07               	xorlw	7	; case 76
 40613  0103F2  B4D8               	btfsc	status,2,c
 40614  0103F4  D7CA               	goto	l20645
 40615  0103F6  0A01               	xorlw	1	; case 77
 40616  0103F8  B4D8               	btfsc	status,2,c
 40617  0103FA  D7CB               	goto	l20647
 40618  0103FC  0A03               	xorlw	3	; case 78
 40619  0103FE  A4D8               	btfss	status,2,c
 40620  010400  0012               	return	
 40621  010402  D7CB               	goto	l20649
 40622  010404                     __end_of__parse_command_long:
 40623                           	opt stack 0
 40624                           tosu	equ	0xFFF
 40625                           tosh	equ	0xFFE
 40626                           tosl	equ	0xFFD
 40627                           pclath	equ	0xFFA
 40628                           tblptru	equ	0xFF8
 40629                           tblptrh	equ	0xFF7
 40630                           tblptrl	equ	0xFF6
 40631                           tablat	equ	0xFF5
 40632                           prodh	equ	0xFF4
 40633                           prodl	equ	0xFF3
 40634                           intcon	equ	0xFF2
 40635                           intcon2	equ	0xFF1
 40636                           intcon3	equ	0xFF0
 40637                           postinc0	equ	0xFEE
 40638                           wreg	equ	0xFE8
 40639                           indf1	equ	0xFE7
 40640                           postinc1	equ	0xFE6
 40641                           postdec1	equ	0xFE5
 40642                           plusw1	equ	0xFE3
 40643                           fsr1h	equ	0xFE2
 40644                           fsr1l	equ	0xFE1
 40645                           indf2	equ	0xFDF
 40646                           postinc2	equ	0xFDE
 40647                           postdec2	equ	0xFDD
 40648                           plusw2	equ	0xFDB
 40649                           fsr2h	equ	0xFDA
 40650                           fsr2l	equ	0xFD9
 40651                           status	equ	0xFD8
 40652                           
 40653 ;; *************** function _rtcc_set_year *****************
 40654 ;; Defined at:
 40655 ;;		line 141 in file "rtcc.c"
 40656 ;; Parameters:    Size  Location     Type
 40657 ;;  year            1    wreg     unsigned char 
 40658 ;; Auto vars:     Size  Location     Type
 40659 ;;  year            1    0[BANK0 ] unsigned char 
 40660 ;; Return value:  Size  Location     Type
 40661 ;;                  1    wreg      void 
 40662 ;; Registers used:
 40663 ;;		wreg, status,2, cstack
 40664 ;; Tracked objects:
 40665 ;;		On entry : 0/0
 40666 ;;		On exit  : 0/0
 40667 ;;		Unchanged: 0/0
 40668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40672 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40673 ;;Total ram usage:        1 bytes
 40674 ;; Hardware stack levels used:    1
 40675 ;; Hardware stack levels required when called:   11
 40676 ;; This function calls:
 40677 ;;		__rtcc_write_disable
 40678 ;;		__rtcc_write_enable
 40679 ;; This function is called by:
 40680 ;;		__parse_command_long
 40681 ;;		_rtcc_increment_year
 40682 ;;		_rtcc_decrement_year
 40683 ;;		_rtcc_read_eeprom
 40684 ;; This function uses a non-reentrant model
 40685 ;;
 40686                           
 40687                           	psect	text179
 40688  01400A                     __ptext179:
 40689                           	opt stack 0
 40690  01400A                     _rtcc_set_year:
 40691                           	opt stack 16
 40692                           
 40693                           ;incstack = 0
 40694                           ;rtcc_set_year@year stored from wreg
 40695  01400A  0100               	movlb	0	; () banked
 40696  01400C  6F60               	movwf	rtcc_set_year@year& (0+255),b
 40697                           
 40698                           ;rtcc.c: 143: _rtcc_write_enable();
 40699  01400E  EC76  F0A0         	call	__rtcc_write_enable	;wreg free
 40700                           
 40701                           ;rtcc.c: 144: RTCCFGbits.RTCPTR1 = 1;
 40702  014012  010F               	movlb	15	; () banked
 40703  014014  833F               	bsf	63,1,b	;volatile
 40704                           
 40705                           ; BSR set to: 15
 40706                           ;rtcc.c: 145: RTCCFGbits.RTCPTR0 = 1;
 40707  014016  010F               	movlb	15	; () banked
 40708  014018  813F               	bsf	63,0,b	;volatile
 40709                           
 40710                           ; BSR set to: 15
 40711                           ;rtcc.c: 146: RTCVALL = year;
 40712  01401A  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 40713                           
 40714                           ;rtcc.c: 147: _rtcc_write_disable();
 40715  01401E  EC81  F0A0         	call	__rtcc_write_disable	;wreg free
 40716  014022  0012               	return		;funcret
 40717  014024                     __end_of_rtcc_set_year:
 40718                           	opt stack 0
 40719                           tosu	equ	0xFFF
 40720                           tosh	equ	0xFFE
 40721                           tosl	equ	0xFFD
 40722                           pclath	equ	0xFFA
 40723                           tblptru	equ	0xFF8
 40724                           tblptrh	equ	0xFF7
 40725                           tblptrl	equ	0xFF6
 40726                           tablat	equ	0xFF5
 40727                           prodh	equ	0xFF4
 40728                           prodl	equ	0xFF3
 40729                           intcon	equ	0xFF2
 40730                           intcon2	equ	0xFF1
 40731                           intcon3	equ	0xFF0
 40732                           postinc0	equ	0xFEE
 40733                           wreg	equ	0xFE8
 40734                           indf1	equ	0xFE7
 40735                           postinc1	equ	0xFE6
 40736                           postdec1	equ	0xFE5
 40737                           plusw1	equ	0xFE3
 40738                           fsr1h	equ	0xFE2
 40739                           fsr1l	equ	0xFE1
 40740                           indf2	equ	0xFDF
 40741                           postinc2	equ	0xFDE
 40742                           postdec2	equ	0xFDD
 40743                           plusw2	equ	0xFDB
 40744                           fsr2h	equ	0xFDA
 40745                           fsr2l	equ	0xFD9
 40746                           status	equ	0xFD8
 40747                           
 40748 ;; *************** function _rtcc_set_seconds *****************
 40749 ;; Defined at:
 40750 ;;		line 331 in file "rtcc.c"
 40751 ;; Parameters:    Size  Location     Type
 40752 ;;  seconds         1    wreg     unsigned char 
 40753 ;; Auto vars:     Size  Location     Type
 40754 ;;  seconds         1    0[BANK0 ] unsigned char 
 40755 ;; Return value:  Size  Location     Type
 40756 ;;                  1    wreg      void 
 40757 ;; Registers used:
 40758 ;;		wreg, status,2, cstack
 40759 ;; Tracked objects:
 40760 ;;		On entry : 0/0
 40761 ;;		On exit  : 0/0
 40762 ;;		Unchanged: 0/0
 40763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40768 ;;Total ram usage:        1 bytes
 40769 ;; Hardware stack levels used:    1
 40770 ;; Hardware stack levels required when called:   11
 40771 ;; This function calls:
 40772 ;;		__rtcc_write_disable
 40773 ;;		__rtcc_write_enable
 40774 ;; This function is called by:
 40775 ;;		__parse_command_long
 40776 ;;		_rtcc_increment_seconds
 40777 ;;		_rtcc_decrement_seconds
 40778 ;;		_rtcc_read_eeprom
 40779 ;; This function uses a non-reentrant model
 40780 ;;
 40781                           
 40782                           	psect	text180
 40783  014024                     __ptext180:
 40784                           	opt stack 0
 40785  014024                     _rtcc_set_seconds:
 40786                           	opt stack 16
 40787                           
 40788                           ;incstack = 0
 40789                           ;rtcc_set_seconds@seconds stored from wreg
 40790  014024  0100               	movlb	0	; () banked
 40791  014026  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 40792                           
 40793                           ;rtcc.c: 333: _rtcc_write_enable();
 40794  014028  EC76  F0A0         	call	__rtcc_write_enable	;wreg free
 40795                           
 40796                           ;rtcc.c: 334: RTCCFGbits.RTCPTR1 = 0;
 40797  01402C  010F               	movlb	15	; () banked
 40798  01402E  933F               	bcf	63,1,b	;volatile
 40799                           
 40800                           ; BSR set to: 15
 40801                           ;rtcc.c: 335: RTCCFGbits.RTCPTR0 = 0;
 40802  014030  010F               	movlb	15	; () banked
 40803  014032  913F               	bcf	63,0,b	;volatile
 40804                           
 40805                           ; BSR set to: 15
 40806                           ;rtcc.c: 336: RTCVALL = seconds;
 40807  014034  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 40808                           
 40809                           ;rtcc.c: 337: _rtcc_write_disable();
 40810  014038  EC81  F0A0         	call	__rtcc_write_disable	;wreg free
 40811  01403C  0012               	return		;funcret
 40812  01403E                     __end_of_rtcc_set_seconds:
 40813                           	opt stack 0
 40814                           tosu	equ	0xFFF
 40815                           tosh	equ	0xFFE
 40816                           tosl	equ	0xFFD
 40817                           pclath	equ	0xFFA
 40818                           tblptru	equ	0xFF8
 40819                           tblptrh	equ	0xFF7
 40820                           tblptrl	equ	0xFF6
 40821                           tablat	equ	0xFF5
 40822                           prodh	equ	0xFF4
 40823                           prodl	equ	0xFF3
 40824                           intcon	equ	0xFF2
 40825                           intcon2	equ	0xFF1
 40826                           intcon3	equ	0xFF0
 40827                           postinc0	equ	0xFEE
 40828                           wreg	equ	0xFE8
 40829                           indf1	equ	0xFE7
 40830                           postinc1	equ	0xFE6
 40831                           postdec1	equ	0xFE5
 40832                           plusw1	equ	0xFE3
 40833                           fsr1h	equ	0xFE2
 40834                           fsr1l	equ	0xFE1
 40835                           indf2	equ	0xFDF
 40836                           postinc2	equ	0xFDE
 40837                           postdec2	equ	0xFDD
 40838                           plusw2	equ	0xFDB
 40839                           fsr2h	equ	0xFDA
 40840                           fsr2l	equ	0xFD9
 40841                           status	equ	0xFD8
 40842                           
 40843 ;; *************** function _rtcc_set_month *****************
 40844 ;; Defined at:
 40845 ;;		line 179 in file "rtcc.c"
 40846 ;; Parameters:    Size  Location     Type
 40847 ;;  month           1    wreg     unsigned char 
 40848 ;; Auto vars:     Size  Location     Type
 40849 ;;  month           1    0[BANK0 ] unsigned char 
 40850 ;; Return value:  Size  Location     Type
 40851 ;;                  1    wreg      void 
 40852 ;; Registers used:
 40853 ;;		wreg, status,2, cstack
 40854 ;; Tracked objects:
 40855 ;;		On entry : 0/0
 40856 ;;		On exit  : 0/0
 40857 ;;		Unchanged: 0/0
 40858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40862 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40863 ;;Total ram usage:        1 bytes
 40864 ;; Hardware stack levels used:    1
 40865 ;; Hardware stack levels required when called:   11
 40866 ;; This function calls:
 40867 ;;		__rtcc_write_disable
 40868 ;;		__rtcc_write_enable
 40869 ;; This function is called by:
 40870 ;;		__parse_command_long
 40871 ;;		_rtcc_increment_month
 40872 ;;		_rtcc_decrement_month
 40873 ;;		_rtcc_read_eeprom
 40874 ;; This function uses a non-reentrant model
 40875 ;;
 40876                           
 40877                           	psect	text181
 40878  01403E                     __ptext181:
 40879                           	opt stack 0
 40880  01403E                     _rtcc_set_month:
 40881                           	opt stack 16
 40882                           
 40883                           ;incstack = 0
 40884                           ;rtcc_set_month@month stored from wreg
 40885  01403E  0100               	movlb	0	; () banked
 40886  014040  6F60               	movwf	rtcc_set_month@month& (0+255),b
 40887                           
 40888                           ;rtcc.c: 181: _rtcc_write_enable();
 40889  014042  EC76  F0A0         	call	__rtcc_write_enable	;wreg free
 40890                           
 40891                           ;rtcc.c: 182: RTCCFGbits.RTCPTR1 = 1;
 40892  014046  010F               	movlb	15	; () banked
 40893  014048  833F               	bsf	63,1,b	;volatile
 40894                           
 40895                           ; BSR set to: 15
 40896                           ;rtcc.c: 183: RTCCFGbits.RTCPTR0 = 0;
 40897  01404A  010F               	movlb	15	; () banked
 40898  01404C  913F               	bcf	63,0,b	;volatile
 40899                           
 40900                           ; BSR set to: 15
 40901                           ;rtcc.c: 184: RTCVALH = month;
 40902  01404E  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 40903                           
 40904                           ;rtcc.c: 185: _rtcc_write_disable();
 40905  014052  EC81  F0A0         	call	__rtcc_write_disable	;wreg free
 40906  014056  0012               	return		;funcret
 40907  014058                     __end_of_rtcc_set_month:
 40908                           	opt stack 0
 40909                           tosu	equ	0xFFF
 40910                           tosh	equ	0xFFE
 40911                           tosl	equ	0xFFD
 40912                           pclath	equ	0xFFA
 40913                           tblptru	equ	0xFF8
 40914                           tblptrh	equ	0xFF7
 40915                           tblptrl	equ	0xFF6
 40916                           tablat	equ	0xFF5
 40917                           prodh	equ	0xFF4
 40918                           prodl	equ	0xFF3
 40919                           intcon	equ	0xFF2
 40920                           intcon2	equ	0xFF1
 40921                           intcon3	equ	0xFF0
 40922                           postinc0	equ	0xFEE
 40923                           wreg	equ	0xFE8
 40924                           indf1	equ	0xFE7
 40925                           postinc1	equ	0xFE6
 40926                           postdec1	equ	0xFE5
 40927                           plusw1	equ	0xFE3
 40928                           fsr1h	equ	0xFE2
 40929                           fsr1l	equ	0xFE1
 40930                           indf2	equ	0xFDF
 40931                           postinc2	equ	0xFDE
 40932                           postdec2	equ	0xFDD
 40933                           plusw2	equ	0xFDB
 40934                           fsr2h	equ	0xFDA
 40935                           fsr2l	equ	0xFD9
 40936                           status	equ	0xFD8
 40937                           
 40938 ;; *************** function _rtcc_set_minutes *****************
 40939 ;; Defined at:
 40940 ;;		line 293 in file "rtcc.c"
 40941 ;; Parameters:    Size  Location     Type
 40942 ;;  minutes         1    wreg     unsigned char 
 40943 ;; Auto vars:     Size  Location     Type
 40944 ;;  minutes         1    0[BANK0 ] unsigned char 
 40945 ;; Return value:  Size  Location     Type
 40946 ;;                  1    wreg      void 
 40947 ;; Registers used:
 40948 ;;		wreg, status,2, cstack
 40949 ;; Tracked objects:
 40950 ;;		On entry : 0/0
 40951 ;;		On exit  : 0/0
 40952 ;;		Unchanged: 0/0
 40953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40958 ;;Total ram usage:        1 bytes
 40959 ;; Hardware stack levels used:    1
 40960 ;; Hardware stack levels required when called:   11
 40961 ;; This function calls:
 40962 ;;		__rtcc_write_disable
 40963 ;;		__rtcc_write_enable
 40964 ;; This function is called by:
 40965 ;;		__parse_command_long
 40966 ;;		_rtcc_increment_minutes
 40967 ;;		_rtcc_decrement_minutes
 40968 ;;		_rtcc_read_eeprom
 40969 ;; This function uses a non-reentrant model
 40970 ;;
 40971                           
 40972                           	psect	text182
 40973  014058                     __ptext182:
 40974                           	opt stack 0
 40975  014058                     _rtcc_set_minutes:
 40976                           	opt stack 16
 40977                           
 40978                           ;incstack = 0
 40979                           ;rtcc_set_minutes@minutes stored from wreg
 40980  014058  0100               	movlb	0	; () banked
 40981  01405A  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 40982                           
 40983                           ;rtcc.c: 295: _rtcc_write_enable();
 40984  01405C  EC76  F0A0         	call	__rtcc_write_enable	;wreg free
 40985                           
 40986                           ;rtcc.c: 296: RTCCFGbits.RTCPTR1 = 0;
 40987  014060  010F               	movlb	15	; () banked
 40988  014062  933F               	bcf	63,1,b	;volatile
 40989                           
 40990                           ; BSR set to: 15
 40991                           ;rtcc.c: 297: RTCCFGbits.RTCPTR0 = 0;
 40992  014064  010F               	movlb	15	; () banked
 40993  014066  913F               	bcf	63,0,b	;volatile
 40994                           
 40995                           ; BSR set to: 15
 40996                           ;rtcc.c: 298: RTCVALH = minutes;
 40997  014068  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 40998                           
 40999                           ;rtcc.c: 299: _rtcc_write_disable();
 41000  01406C  EC81  F0A0         	call	__rtcc_write_disable	;wreg free
 41001  014070  0012               	return		;funcret
 41002  014072                     __end_of_rtcc_set_minutes:
 41003                           	opt stack 0
 41004                           tosu	equ	0xFFF
 41005                           tosh	equ	0xFFE
 41006                           tosl	equ	0xFFD
 41007                           pclath	equ	0xFFA
 41008                           tblptru	equ	0xFF8
 41009                           tblptrh	equ	0xFF7
 41010                           tblptrl	equ	0xFF6
 41011                           tablat	equ	0xFF5
 41012                           prodh	equ	0xFF4
 41013                           prodl	equ	0xFF3
 41014                           intcon	equ	0xFF2
 41015                           intcon2	equ	0xFF1
 41016                           intcon3	equ	0xFF0
 41017                           postinc0	equ	0xFEE
 41018                           wreg	equ	0xFE8
 41019                           indf1	equ	0xFE7
 41020                           postinc1	equ	0xFE6
 41021                           postdec1	equ	0xFE5
 41022                           plusw1	equ	0xFE3
 41023                           fsr1h	equ	0xFE2
 41024                           fsr1l	equ	0xFE1
 41025                           indf2	equ	0xFDF
 41026                           postinc2	equ	0xFDE
 41027                           postdec2	equ	0xFDD
 41028                           plusw2	equ	0xFDB
 41029                           fsr2h	equ	0xFDA
 41030                           fsr2l	equ	0xFD9
 41031                           status	equ	0xFD8
 41032                           
 41033 ;; *************** function _rtcc_set_hours *****************
 41034 ;; Defined at:
 41035 ;;		line 255 in file "rtcc.c"
 41036 ;; Parameters:    Size  Location     Type
 41037 ;;  hours           1    wreg     unsigned char 
 41038 ;; Auto vars:     Size  Location     Type
 41039 ;;  hours           1    0[BANK0 ] unsigned char 
 41040 ;; Return value:  Size  Location     Type
 41041 ;;                  1    wreg      void 
 41042 ;; Registers used:
 41043 ;;		wreg, status,2, cstack
 41044 ;; Tracked objects:
 41045 ;;		On entry : 0/0
 41046 ;;		On exit  : 0/0
 41047 ;;		Unchanged: 0/0
 41048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41053 ;;Total ram usage:        1 bytes
 41054 ;; Hardware stack levels used:    1
 41055 ;; Hardware stack levels required when called:   11
 41056 ;; This function calls:
 41057 ;;		__rtcc_write_disable
 41058 ;;		__rtcc_write_enable
 41059 ;; This function is called by:
 41060 ;;		__parse_command_long
 41061 ;;		_rtcc_increment_hours
 41062 ;;		_rtcc_decrement_hours
 41063 ;;		_rtcc_read_eeprom
 41064 ;; This function uses a non-reentrant model
 41065 ;;
 41066                           
 41067                           	psect	text183
 41068  014072                     __ptext183:
 41069                           	opt stack 0
 41070  014072                     _rtcc_set_hours:
 41071                           	opt stack 16
 41072                           
 41073                           ;incstack = 0
 41074                           ;rtcc_set_hours@hours stored from wreg
 41075  014072  0100               	movlb	0	; () banked
 41076  014074  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 41077                           
 41078                           ;rtcc.c: 257: _rtcc_write_enable();
 41079  014076  EC76  F0A0         	call	__rtcc_write_enable	;wreg free
 41080                           
 41081                           ;rtcc.c: 258: RTCCFGbits.RTCPTR1 = 0;
 41082  01407A  010F               	movlb	15	; () banked
 41083  01407C  933F               	bcf	63,1,b	;volatile
 41084                           
 41085                           ; BSR set to: 15
 41086                           ;rtcc.c: 259: RTCCFGbits.RTCPTR0 = 1;
 41087  01407E  010F               	movlb	15	; () banked
 41088  014080  813F               	bsf	63,0,b	;volatile
 41089                           
 41090                           ; BSR set to: 15
 41091                           ;rtcc.c: 260: RTCVALL = hours;
 41092  014082  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 41093                           
 41094                           ;rtcc.c: 261: _rtcc_write_disable();
 41095  014086  EC81  F0A0         	call	__rtcc_write_disable	;wreg free
 41096  01408A  0012               	return		;funcret
 41097  01408C                     __end_of_rtcc_set_hours:
 41098                           	opt stack 0
 41099                           tosu	equ	0xFFF
 41100                           tosh	equ	0xFFE
 41101                           tosl	equ	0xFFD
 41102                           pclath	equ	0xFFA
 41103                           tblptru	equ	0xFF8
 41104                           tblptrh	equ	0xFF7
 41105                           tblptrl	equ	0xFF6
 41106                           tablat	equ	0xFF5
 41107                           prodh	equ	0xFF4
 41108                           prodl	equ	0xFF3
 41109                           intcon	equ	0xFF2
 41110                           intcon2	equ	0xFF1
 41111                           intcon3	equ	0xFF0
 41112                           postinc0	equ	0xFEE
 41113                           wreg	equ	0xFE8
 41114                           indf1	equ	0xFE7
 41115                           postinc1	equ	0xFE6
 41116                           postdec1	equ	0xFE5
 41117                           plusw1	equ	0xFE3
 41118                           fsr1h	equ	0xFE2
 41119                           fsr1l	equ	0xFE1
 41120                           indf2	equ	0xFDF
 41121                           postinc2	equ	0xFDE
 41122                           postdec2	equ	0xFDD
 41123                           plusw2	equ	0xFDB
 41124                           fsr2h	equ	0xFDA
 41125                           fsr2l	equ	0xFD9
 41126                           status	equ	0xFD8
 41127                           
 41128 ;; *************** function _rtcc_set_day *****************
 41129 ;; Defined at:
 41130 ;;		line 217 in file "rtcc.c"
 41131 ;; Parameters:    Size  Location     Type
 41132 ;;  day             1    wreg     unsigned char 
 41133 ;; Auto vars:     Size  Location     Type
 41134 ;;  day             1    0[BANK0 ] unsigned char 
 41135 ;; Return value:  Size  Location     Type
 41136 ;;                  1    wreg      void 
 41137 ;; Registers used:
 41138 ;;		wreg, status,2, cstack
 41139 ;; Tracked objects:
 41140 ;;		On entry : 0/0
 41141 ;;		On exit  : 0/0
 41142 ;;		Unchanged: 0/0
 41143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41147 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41148 ;;Total ram usage:        1 bytes
 41149 ;; Hardware stack levels used:    1
 41150 ;; Hardware stack levels required when called:   11
 41151 ;; This function calls:
 41152 ;;		__rtcc_write_disable
 41153 ;;		__rtcc_write_enable
 41154 ;; This function is called by:
 41155 ;;		__parse_command_long
 41156 ;;		_rtcc_correct_day
 41157 ;;		_rtcc_increment_day
 41158 ;;		_rtcc_decrement_day
 41159 ;;		_rtcc_read_eeprom
 41160 ;; This function uses a non-reentrant model
 41161 ;;
 41162                           
 41163                           	psect	text184
 41164  01408C                     __ptext184:
 41165                           	opt stack 0
 41166  01408C                     _rtcc_set_day:
 41167                           	opt stack 16
 41168                           
 41169                           ;incstack = 0
 41170                           ;rtcc_set_day@day stored from wreg
 41171  01408C  0100               	movlb	0	; () banked
 41172  01408E  6F60               	movwf	rtcc_set_day@day& (0+255),b
 41173                           
 41174                           ;rtcc.c: 219: _rtcc_write_enable();
 41175  014090  EC76  F0A0         	call	__rtcc_write_enable	;wreg free
 41176                           
 41177                           ;rtcc.c: 220: RTCCFGbits.RTCPTR1 = 1;
 41178  014094  010F               	movlb	15	; () banked
 41179  014096  833F               	bsf	63,1,b	;volatile
 41180                           
 41181                           ; BSR set to: 15
 41182                           ;rtcc.c: 221: RTCCFGbits.RTCPTR0 = 0;
 41183  014098  010F               	movlb	15	; () banked
 41184  01409A  913F               	bcf	63,0,b	;volatile
 41185                           
 41186                           ; BSR set to: 15
 41187                           ;rtcc.c: 222: RTCVALL = day;
 41188  01409C  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 41189                           
 41190                           ;rtcc.c: 223: _rtcc_write_disable();
 41191  0140A0  EC81  F0A0         	call	__rtcc_write_disable	;wreg free
 41192  0140A4  0012               	return		;funcret
 41193  0140A6                     __end_of_rtcc_set_day:
 41194                           	opt stack 0
 41195                           tosu	equ	0xFFF
 41196                           tosh	equ	0xFFE
 41197                           tosl	equ	0xFFD
 41198                           pclath	equ	0xFFA
 41199                           tblptru	equ	0xFF8
 41200                           tblptrh	equ	0xFF7
 41201                           tblptrl	equ	0xFF6
 41202                           tablat	equ	0xFF5
 41203                           prodh	equ	0xFF4
 41204                           prodl	equ	0xFF3
 41205                           intcon	equ	0xFF2
 41206                           intcon2	equ	0xFF1
 41207                           intcon3	equ	0xFF0
 41208                           postinc0	equ	0xFEE
 41209                           wreg	equ	0xFE8
 41210                           indf1	equ	0xFE7
 41211                           postinc1	equ	0xFE6
 41212                           postdec1	equ	0xFE5
 41213                           plusw1	equ	0xFE3
 41214                           fsr1h	equ	0xFE2
 41215                           fsr1l	equ	0xFE1
 41216                           indf2	equ	0xFDF
 41217                           postinc2	equ	0xFDE
 41218                           postdec2	equ	0xFDD
 41219                           plusw2	equ	0xFDB
 41220                           fsr2h	equ	0xFDA
 41221                           fsr2l	equ	0xFD9
 41222                           status	equ	0xFD8
 41223                           
 41224 ;; *************** function __rtcc_write_enable *****************
 41225 ;; Defined at:
 41226 ;;		line 14 in file "rtcc.c"
 41227 ;; Parameters:    Size  Location     Type
 41228 ;;		None
 41229 ;; Auto vars:     Size  Location     Type
 41230 ;;		None
 41231 ;; Return value:  Size  Location     Type
 41232 ;;                  1    wreg      void 
 41233 ;; Registers used:
 41234 ;;		wreg, status,2
 41235 ;; Tracked objects:
 41236 ;;		On entry : 0/0
 41237 ;;		On exit  : 0/0
 41238 ;;		Unchanged: 0/0
 41239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41244 ;;Total ram usage:        0 bytes
 41245 ;; Hardware stack levels used:    1
 41246 ;; Hardware stack levels required when called:   10
 41247 ;; This function calls:
 41248 ;;		Nothing
 41249 ;; This function is called by:
 41250 ;;		_rtcc_set_year
 41251 ;;		_rtcc_set_month
 41252 ;;		_rtcc_set_day
 41253 ;;		_rtcc_set_hours
 41254 ;;		_rtcc_set_minutes
 41255 ;;		_rtcc_set_seconds
 41256 ;; This function uses a non-reentrant model
 41257 ;;
 41258                           
 41259                           	psect	text185
 41260  0140EC                     __ptext185:
 41261                           	opt stack 0
 41262  0140EC                     __rtcc_write_enable:
 41263                           	opt stack 16
 41264                           
 41265                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 41266                           
 41267                           ;incstack = 0
 41268  0140EC  D006               	goto	l18403
 41269  0140EE                     l18399:
 41270                           
 41271                           ;rtcc.c: 17: {
 41272                           ;rtcc.c: 18: EECON2 = 0x55;
 41273  0140EE  0E55               	movlw	85
 41274  0140F0  6EA7               	movwf	4007,c	;volatile
 41275                           
 41276                           ;rtcc.c: 19: EECON2 = 0xAA;
 41277  0140F2  0EAA               	movlw	170
 41278  0140F4  6EA7               	movwf	4007,c	;volatile
 41279                           
 41280                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 41281  0140F6  010F               	movlb	15	; () banked
 41282  0140F8  8B3F               	bsf	63,5,b	;volatile
 41283  0140FA                     l18403:
 41284  0140FA  010F               	movlb	15	; () banked
 41285  0140FC  BB3F               	btfsc	63,5,b	;volatile
 41286  0140FE  0012               	return	
 41287  014100  D7F6               	goto	l18399
 41288  014102                     __end_of__rtcc_write_enable:
 41289                           	opt stack 0
 41290                           tosu	equ	0xFFF
 41291                           tosh	equ	0xFFE
 41292                           tosl	equ	0xFFD
 41293                           pclath	equ	0xFFA
 41294                           tblptru	equ	0xFF8
 41295                           tblptrh	equ	0xFF7
 41296                           tblptrl	equ	0xFF6
 41297                           tablat	equ	0xFF5
 41298                           prodh	equ	0xFF4
 41299                           prodl	equ	0xFF3
 41300                           intcon	equ	0xFF2
 41301                           intcon2	equ	0xFF1
 41302                           intcon3	equ	0xFF0
 41303                           postinc0	equ	0xFEE
 41304                           wreg	equ	0xFE8
 41305                           indf1	equ	0xFE7
 41306                           postinc1	equ	0xFE6
 41307                           postdec1	equ	0xFE5
 41308                           plusw1	equ	0xFE3
 41309                           fsr1h	equ	0xFE2
 41310                           fsr1l	equ	0xFE1
 41311                           indf2	equ	0xFDF
 41312                           postinc2	equ	0xFDE
 41313                           postdec2	equ	0xFDD
 41314                           plusw2	equ	0xFDB
 41315                           fsr2h	equ	0xFDA
 41316                           fsr2l	equ	0xFD9
 41317                           status	equ	0xFD8
 41318                           
 41319 ;; *************** function __rtcc_write_disable *****************
 41320 ;; Defined at:
 41321 ;;		line 24 in file "rtcc.c"
 41322 ;; Parameters:    Size  Location     Type
 41323 ;;		None
 41324 ;; Auto vars:     Size  Location     Type
 41325 ;;		None
 41326 ;; Return value:  Size  Location     Type
 41327 ;;                  1    wreg      void 
 41328 ;; Registers used:
 41329 ;;		wreg, status,2
 41330 ;; Tracked objects:
 41331 ;;		On entry : 0/0
 41332 ;;		On exit  : 0/0
 41333 ;;		Unchanged: 0/0
 41334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41339 ;;Total ram usage:        0 bytes
 41340 ;; Hardware stack levels used:    1
 41341 ;; Hardware stack levels required when called:   10
 41342 ;; This function calls:
 41343 ;;		Nothing
 41344 ;; This function is called by:
 41345 ;;		_rtcc_set_year
 41346 ;;		_rtcc_set_month
 41347 ;;		_rtcc_set_day
 41348 ;;		_rtcc_set_hours
 41349 ;;		_rtcc_set_minutes
 41350 ;;		_rtcc_set_seconds
 41351 ;; This function uses a non-reentrant model
 41352 ;;
 41353                           
 41354                           	psect	text186
 41355  014102                     __ptext186:
 41356                           	opt stack 0
 41357  014102                     __rtcc_write_disable:
 41358                           	opt stack 16
 41359                           
 41360                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 41361                           
 41362                           ; BSR set to: 15
 41363                           ;incstack = 0
 41364  014102  D006               	goto	l18411
 41365  014104                     l18407:
 41366                           
 41367                           ;rtcc.c: 27: {
 41368                           ;rtcc.c: 28: EECON2 = 0x55;
 41369  014104  0E55               	movlw	85
 41370  014106  6EA7               	movwf	4007,c	;volatile
 41371                           
 41372                           ;rtcc.c: 29: EECON2 = 0xAA;
 41373  014108  0EAA               	movlw	170
 41374  01410A  6EA7               	movwf	4007,c	;volatile
 41375                           
 41376                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 41377  01410C  010F               	movlb	15	; () banked
 41378  01410E  9B3F               	bcf	63,5,b	;volatile
 41379  014110                     l18411:
 41380  014110  010F               	movlb	15	; () banked
 41381  014112  AB3F               	btfss	63,5,b	;volatile
 41382  014114  0012               	return	
 41383  014116  D7F6               	goto	l18407
 41384  014118                     __end_of__rtcc_write_disable:
 41385                           	opt stack 0
 41386                           tosu	equ	0xFFF
 41387                           tosh	equ	0xFFE
 41388                           tosl	equ	0xFFD
 41389                           pclath	equ	0xFFA
 41390                           tblptru	equ	0xFF8
 41391                           tblptrh	equ	0xFF7
 41392                           tblptrl	equ	0xFF6
 41393                           tablat	equ	0xFF5
 41394                           prodh	equ	0xFF4
 41395                           prodl	equ	0xFF3
 41396                           intcon	equ	0xFF2
 41397                           intcon2	equ	0xFF1
 41398                           intcon3	equ	0xFF0
 41399                           postinc0	equ	0xFEE
 41400                           wreg	equ	0xFE8
 41401                           indf1	equ	0xFE7
 41402                           postinc1	equ	0xFE6
 41403                           postdec1	equ	0xFE5
 41404                           plusw1	equ	0xFE3
 41405                           fsr1h	equ	0xFE2
 41406                           fsr1l	equ	0xFE1
 41407                           indf2	equ	0xFDF
 41408                           postinc2	equ	0xFDE
 41409                           postdec2	equ	0xFDD
 41410                           plusw2	equ	0xFDB
 41411                           fsr2h	equ	0xFDA
 41412                           fsr2l	equ	0xFD9
 41413                           status	equ	0xFD8
 41414                           
 41415 ;; *************** function _buck_remote_set_synchronous *****************
 41416 ;; Defined at:
 41417 ;;		line 621 in file "buck.c"
 41418 ;; Parameters:    Size  Location     Type
 41419 ;;  synchronous     1    wreg     unsigned char 
 41420 ;; Auto vars:     Size  Location     Type
 41421 ;;  synchronous     1    0[BANK0 ] unsigned char 
 41422 ;; Return value:  Size  Location     Type
 41423 ;;                  1    wreg      void 
 41424 ;; Registers used:
 41425 ;;		wreg, status,2
 41426 ;; Tracked objects:
 41427 ;;		On entry : 0/0
 41428 ;;		On exit  : 0/0
 41429 ;;		Unchanged: 0/0
 41430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41432 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41434 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41435 ;;Total ram usage:        1 bytes
 41436 ;; Hardware stack levels used:    1
 41437 ;; Hardware stack levels required when called:   10
 41438 ;; This function calls:
 41439 ;;		Nothing
 41440 ;; This function is called by:
 41441 ;;		__parse_command_long
 41442 ;; This function uses a non-reentrant model
 41443 ;;
 41444                           
 41445                           	psect	text187
 41446  013F40                     __ptext187:
 41447                           	opt stack 0
 41448  013F40                     _buck_remote_set_synchronous:
 41449                           	opt stack 18
 41450                           
 41451                           ; BSR set to: 15
 41452                           ;incstack = 0
 41453                           ;buck_remote_set_synchronous@synchronous stored from wreg
 41454  013F40  0100               	movlb	0	; () banked
 41455  013F42  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 41456                           
 41457                           ;buck.c: 623: if(synchronous)
 41458  013F44  0100               	movlb	0	; () banked
 41459  013F46  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 41460  013F48  0100               	movlb	0	; () banked
 41461  013F4A  B4D8               	btfsc	status,2,c
 41462  013F4C  D004               	goto	l19495
 41463                           
 41464                           ; BSR set to: 0
 41465                           ;buck.c: 624: buck_remote_synchronous = 1;
 41466  013F4E  0E01               	movlw	1
 41467  013F50  0100               	movlb	0	; () banked
 41468  013F52  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 41469  013F54  0012               	return	
 41470  013F56                     l19495:
 41471                           
 41472                           ; BSR set to: 0
 41473                           ;buck.c: 625: else
 41474                           ;buck.c: 626: buck_remote_synchronous = 0;
 41475  013F56  0E00               	movlw	0
 41476  013F58  0100               	movlb	0	; () banked
 41477  013F5A  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 41478  013F5C  0012               	return	
 41479  013F5E                     __end_of_buck_remote_set_synchronous:
 41480                           	opt stack 0
 41481                           tosu	equ	0xFFF
 41482                           tosh	equ	0xFFE
 41483                           tosl	equ	0xFFD
 41484                           pclath	equ	0xFFA
 41485                           tblptru	equ	0xFF8
 41486                           tblptrh	equ	0xFF7
 41487                           tblptrl	equ	0xFF6
 41488                           tablat	equ	0xFF5
 41489                           prodh	equ	0xFF4
 41490                           prodl	equ	0xFF3
 41491                           intcon	equ	0xFF2
 41492                           intcon2	equ	0xFF1
 41493                           intcon3	equ	0xFF0
 41494                           postinc0	equ	0xFEE
 41495                           wreg	equ	0xFE8
 41496                           indf1	equ	0xFE7
 41497                           postinc1	equ	0xFE6
 41498                           postdec1	equ	0xFE5
 41499                           plusw1	equ	0xFE3
 41500                           fsr1h	equ	0xFE2
 41501                           fsr1l	equ	0xFE1
 41502                           indf2	equ	0xFDF
 41503                           postinc2	equ	0xFDE
 41504                           postdec2	equ	0xFDD
 41505                           plusw2	equ	0xFDB
 41506                           fsr2h	equ	0xFDA
 41507                           fsr2l	equ	0xFD9
 41508                           status	equ	0xFD8
 41509                           
 41510 ;; *************** function _buck_remote_set_on *****************
 41511 ;; Defined at:
 41512 ;;		line 613 in file "buck.c"
 41513 ;; Parameters:    Size  Location     Type
 41514 ;;  on              1    wreg     unsigned char 
 41515 ;; Auto vars:     Size  Location     Type
 41516 ;;  on              1    0[BANK0 ] unsigned char 
 41517 ;; Return value:  Size  Location     Type
 41518 ;;                  1    wreg      void 
 41519 ;; Registers used:
 41520 ;;		wreg, status,2
 41521 ;; Tracked objects:
 41522 ;;		On entry : 0/0
 41523 ;;		On exit  : 0/0
 41524 ;;		Unchanged: 0/0
 41525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41529 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41530 ;;Total ram usage:        1 bytes
 41531 ;; Hardware stack levels used:    1
 41532 ;; Hardware stack levels required when called:   10
 41533 ;; This function calls:
 41534 ;;		Nothing
 41535 ;; This function is called by:
 41536 ;;		__parse_command_long
 41537 ;; This function uses a non-reentrant model
 41538 ;;
 41539                           
 41540                           	psect	text188
 41541  013F5E                     __ptext188:
 41542                           	opt stack 0
 41543  013F5E                     _buck_remote_set_on:
 41544                           	opt stack 18
 41545                           
 41546                           ; BSR set to: 0
 41547                           ;incstack = 0
 41548                           ;buck_remote_set_on@on stored from wreg
 41549  013F5E  0100               	movlb	0	; () banked
 41550  013F60  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 41551                           
 41552                           ;buck.c: 615: if(on)
 41553  013F62  0100               	movlb	0	; () banked
 41554  013F64  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 41555  013F66  0100               	movlb	0	; () banked
 41556  013F68  B4D8               	btfsc	status,2,c
 41557  013F6A  D004               	goto	l19489
 41558                           
 41559                           ; BSR set to: 0
 41560                           ;buck.c: 616: buck_remote_on = 1;
 41561  013F6C  0E01               	movlw	1
 41562  013F6E  0100               	movlb	0	; () banked
 41563  013F70  6FE3               	movwf	_buck_remote_on& (0+255),b
 41564  013F72  0012               	return	
 41565  013F74                     l19489:
 41566                           
 41567                           ; BSR set to: 0
 41568                           ;buck.c: 617: else
 41569                           ;buck.c: 618: buck_remote_on = 0;
 41570  013F74  0E00               	movlw	0
 41571  013F76  0100               	movlb	0	; () banked
 41572  013F78  6FE3               	movwf	_buck_remote_on& (0+255),b
 41573  013F7A  0012               	return	
 41574  013F7C                     __end_of_buck_remote_set_on:
 41575                           	opt stack 0
 41576                           tosu	equ	0xFFF
 41577                           tosh	equ	0xFFE
 41578                           tosl	equ	0xFFD
 41579                           pclath	equ	0xFFA
 41580                           tblptru	equ	0xFF8
 41581                           tblptrh	equ	0xFF7
 41582                           tblptrl	equ	0xFF6
 41583                           tablat	equ	0xFF5
 41584                           prodh	equ	0xFF4
 41585                           prodl	equ	0xFF3
 41586                           intcon	equ	0xFF2
 41587                           intcon2	equ	0xFF1
 41588                           intcon3	equ	0xFF0
 41589                           postinc0	equ	0xFEE
 41590                           wreg	equ	0xFE8
 41591                           indf1	equ	0xFE7
 41592                           postinc1	equ	0xFE6
 41593                           postdec1	equ	0xFE5
 41594                           plusw1	equ	0xFE3
 41595                           fsr1h	equ	0xFE2
 41596                           fsr1l	equ	0xFE1
 41597                           indf2	equ	0xFDF
 41598                           postinc2	equ	0xFDE
 41599                           postdec2	equ	0xFDD
 41600                           plusw2	equ	0xFDB
 41601                           fsr2h	equ	0xFDA
 41602                           fsr2l	equ	0xFD9
 41603                           status	equ	0xFD8
 41604                           
 41605 ;; *************** function _buck_remote_set_enable *****************
 41606 ;; Defined at:
 41607 ;;		line 605 in file "buck.c"
 41608 ;; Parameters:    Size  Location     Type
 41609 ;;  remote          1    wreg     unsigned char 
 41610 ;; Auto vars:     Size  Location     Type
 41611 ;;  remote          1    0[BANK0 ] unsigned char 
 41612 ;; Return value:  Size  Location     Type
 41613 ;;                  1    wreg      void 
 41614 ;; Registers used:
 41615 ;;		wreg, status,2
 41616 ;; Tracked objects:
 41617 ;;		On entry : 0/0
 41618 ;;		On exit  : 0/0
 41619 ;;		Unchanged: 0/0
 41620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41624 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41625 ;;Total ram usage:        1 bytes
 41626 ;; Hardware stack levels used:    1
 41627 ;; Hardware stack levels required when called:   10
 41628 ;; This function calls:
 41629 ;;		Nothing
 41630 ;; This function is called by:
 41631 ;;		__parse_command_long
 41632 ;; This function uses a non-reentrant model
 41633 ;;
 41634                           
 41635                           	psect	text189
 41636  013F7C                     __ptext189:
 41637                           	opt stack 0
 41638  013F7C                     _buck_remote_set_enable:
 41639                           	opt stack 18
 41640                           
 41641                           ; BSR set to: 0
 41642                           ;incstack = 0
 41643                           ;buck_remote_set_enable@remote stored from wreg
 41644  013F7C  0100               	movlb	0	; () banked
 41645  013F7E  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 41646                           
 41647                           ;buck.c: 607: if(remote)
 41648  013F80  0100               	movlb	0	; () banked
 41649  013F82  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 41650  013F84  0100               	movlb	0	; () banked
 41651  013F86  B4D8               	btfsc	status,2,c
 41652  013F88  D004               	goto	l19483
 41653                           
 41654                           ; BSR set to: 0
 41655                           ;buck.c: 608: buck_remote_enable = 1;
 41656  013F8A  0E01               	movlw	1
 41657  013F8C  0101               	movlb	1	; () banked
 41658  013F8E  6FF1               	movwf	_buck_remote_enable& (0+255),b
 41659  013F90  0012               	return	
 41660  013F92                     l19483:
 41661                           
 41662                           ;buck.c: 609: else
 41663                           ;buck.c: 610: buck_remote_enable = 0;
 41664  013F92  0E00               	movlw	0
 41665  013F94  0101               	movlb	1	; () banked
 41666  013F96  6FF1               	movwf	_buck_remote_enable& (0+255),b
 41667  013F98  0012               	return	
 41668  013F9A                     __end_of_buck_remote_set_enable:
 41669                           	opt stack 0
 41670                           tosu	equ	0xFFF
 41671                           tosh	equ	0xFFE
 41672                           tosl	equ	0xFFD
 41673                           pclath	equ	0xFFA
 41674                           tblptru	equ	0xFF8
 41675                           tblptrh	equ	0xFF7
 41676                           tblptrl	equ	0xFF6
 41677                           tablat	equ	0xFF5
 41678                           prodh	equ	0xFF4
 41679                           prodl	equ	0xFF3
 41680                           intcon	equ	0xFF2
 41681                           intcon2	equ	0xFF1
 41682                           intcon3	equ	0xFF0
 41683                           postinc0	equ	0xFEE
 41684                           wreg	equ	0xFE8
 41685                           indf1	equ	0xFE7
 41686                           postinc1	equ	0xFE6
 41687                           postdec1	equ	0xFE5
 41688                           plusw1	equ	0xFE3
 41689                           fsr1h	equ	0xFE2
 41690                           fsr1l	equ	0xFE1
 41691                           indf2	equ	0xFDF
 41692                           postinc2	equ	0xFDE
 41693                           postdec2	equ	0xFDD
 41694                           plusw2	equ	0xFDB
 41695                           fsr2h	equ	0xFDA
 41696                           fsr2l	equ	0xFD9
 41697                           status	equ	0xFD8
 41698                           
 41699 ;; *************** function _buck_remote_set_dutycycle *****************
 41700 ;; Defined at:
 41701 ;;		line 629 in file "buck.c"
 41702 ;; Parameters:    Size  Location     Type
 41703 ;;  dutycycle       1    wreg     unsigned char 
 41704 ;; Auto vars:     Size  Location     Type
 41705 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 41706 ;; Return value:  Size  Location     Type
 41707 ;;                  1    wreg      void 
 41708 ;; Registers used:
 41709 ;;		wreg, status,2, status,0
 41710 ;; Tracked objects:
 41711 ;;		On entry : 0/0
 41712 ;;		On exit  : 0/0
 41713 ;;		Unchanged: 0/0
 41714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41718 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41719 ;;Total ram usage:        1 bytes
 41720 ;; Hardware stack levels used:    1
 41721 ;; Hardware stack levels required when called:   10
 41722 ;; This function calls:
 41723 ;;		Nothing
 41724 ;; This function is called by:
 41725 ;;		__parse_command_long
 41726 ;; This function uses a non-reentrant model
 41727 ;;
 41728                           
 41729                           	psect	text190
 41730  013E10                     __ptext190:
 41731                           	opt stack 0
 41732  013E10                     _buck_remote_set_dutycycle:
 41733                           	opt stack 18
 41734                           
 41735                           ; BSR set to: 1
 41736                           ;incstack = 0
 41737                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 41738  013E10  0100               	movlb	0	; () banked
 41739  013E12  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41740                           
 41741                           ;buck.c: 631: if(dutycycle>242)
 41742  013E14  0EF2               	movlw	242
 41743  013E16  0100               	movlb	0	; () banked
 41744  013E18  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41745  013E1A  D004               	goto	l19509
 41746                           
 41747                           ; BSR set to: 0
 41748                           ;buck.c: 632: buck_remote_dutycycle = 242;
 41749  013E1C  0EF2               	movlw	242
 41750  013E1E  0100               	movlb	0	; () banked
 41751  013E20  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41752  013E22  0012               	return	
 41753  013E24                     l19509:
 41754                           
 41755                           ; BSR set to: 0
 41756                           ;buck.c: 633: else if(dutycycle<40)
 41757  013E24  0E28               	movlw	40
 41758  013E26  0100               	movlb	0	; () banked
 41759  013E28  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41760  013E2A  D004               	goto	l2637
 41761                           
 41762                           ; BSR set to: 0
 41763                           ;buck.c: 634: buck_remote_dutycycle = 40;
 41764  013E2C  0E28               	movlw	40
 41765  013E2E  0100               	movlb	0	; () banked
 41766  013E30  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41767  013E32  0012               	return	
 41768  013E34                     l2637:
 41769                           
 41770                           ; BSR set to: 0
 41771                           ;buck.c: 635: else
 41772                           ;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 41773  013E34  C060  F0E1         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 41774                           
 41775                           ; BSR set to: 0
 41776  013E38  0012               	return	
 41777  013E3A                     __end_of_buck_remote_set_dutycycle:
 41778                           	opt stack 0
 41779                           tosu	equ	0xFFF
 41780                           tosh	equ	0xFFE
 41781                           tosl	equ	0xFFD
 41782                           pclath	equ	0xFFA
 41783                           tblptru	equ	0xFF8
 41784                           tblptrh	equ	0xFF7
 41785                           tblptrl	equ	0xFF6
 41786                           tablat	equ	0xFF5
 41787                           prodh	equ	0xFF4
 41788                           prodl	equ	0xFF3
 41789                           intcon	equ	0xFF2
 41790                           intcon2	equ	0xFF1
 41791                           intcon3	equ	0xFF0
 41792                           postinc0	equ	0xFEE
 41793                           wreg	equ	0xFE8
 41794                           indf1	equ	0xFE7
 41795                           postinc1	equ	0xFE6
 41796                           postdec1	equ	0xFE5
 41797                           plusw1	equ	0xFE3
 41798                           fsr1h	equ	0xFE2
 41799                           fsr1l	equ	0xFE1
 41800                           indf2	equ	0xFDF
 41801                           postinc2	equ	0xFDE
 41802                           postdec2	equ	0xFDD
 41803                           plusw2	equ	0xFDB
 41804                           fsr2h	equ	0xFDA
 41805                           fsr2l	equ	0xFD9
 41806                           status	equ	0xFD8
 41807                           
 41808 ;; *************** function _buck_remote_change_dutycycle *****************
 41809 ;; Defined at:
 41810 ;;		line 639 in file "buck.c"
 41811 ;; Parameters:    Size  Location     Type
 41812 ;;  change          1    wreg     char 
 41813 ;; Auto vars:     Size  Location     Type
 41814 ;;  change          1    0[BANK0 ] char 
 41815 ;;  new_dutycycl    2    1[BANK0 ] int 
 41816 ;; Return value:  Size  Location     Type
 41817 ;;                  1    wreg      void 
 41818 ;; Registers used:
 41819 ;;		wreg, status,2, status,0
 41820 ;; Tracked objects:
 41821 ;;		On entry : 0/0
 41822 ;;		On exit  : 0/0
 41823 ;;		Unchanged: 0/0
 41824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41826 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41828 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41829 ;;Total ram usage:        3 bytes
 41830 ;; Hardware stack levels used:    1
 41831 ;; Hardware stack levels required when called:   10
 41832 ;; This function calls:
 41833 ;;		Nothing
 41834 ;; This function is called by:
 41835 ;;		__parse_command_long
 41836 ;; This function uses a non-reentrant model
 41837 ;;
 41838                           
 41839                           	psect	text191
 41840  012D6A                     __ptext191:
 41841                           	opt stack 0
 41842  012D6A                     _buck_remote_change_dutycycle:
 41843                           	opt stack 18
 41844                           
 41845                           ; BSR set to: 0
 41846                           ;incstack = 0
 41847                           ;buck_remote_change_dutycycle@change stored from wreg
 41848  012D6A  0100               	movlb	0	; () banked
 41849  012D6C  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 41850                           
 41851                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 41852  012D6E  0100               	movlb	0	; () banked
 41853  012D70  51E4               	movf	_buck_dutycycle& (0+255),w,b
 41854  012D72  0100               	movlb	0	; () banked
 41855  012D74  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 41856  012D76  0100               	movlb	0	; () banked
 41857  012D78  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 41858  012D7A  6AE8               	clrf	wreg,c
 41859  012D7C  B0D8               	btfsc	status,0,c
 41860  012D7E  2AE8               	incf	wreg,f,c
 41861  012D80  0100               	movlb	0	; () banked
 41862  012D82  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 41863  012D84  06E8               	decf	wreg,f,c
 41864  012D86  0100               	movlb	0	; () banked
 41865  012D88  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 41866                           
 41867                           ;buck.c: 642: if(new_dutycycle>242)
 41868  012D8A  0100               	movlb	0	; () banked
 41869  012D8C  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 41870  012D8E  D00C               	goto	l19501
 41871  012D90  0100               	movlb	0	; () banked
 41872  012D92  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 41873  012D94  E105               	bnz	u18630
 41874  012D96  0EF3               	movlw	243
 41875  012D98  0100               	movlb	0	; () banked
 41876  012D9A  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 41877  012D9C  A0D8               	btfss	status,0,c
 41878  012D9E  D004               	goto	l19501
 41879  012DA0                     u18630:
 41880                           
 41881                           ; BSR set to: 0
 41882                           ;buck.c: 643: buck_remote_dutycycle = 242;
 41883  012DA0  0EF2               	movlw	242
 41884  012DA2  0100               	movlb	0	; () banked
 41885  012DA4  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41886  012DA6  0012               	return	
 41887  012DA8                     l19501:
 41888                           
 41889                           ; BSR set to: 0
 41890                           ;buck.c: 644: else if(new_dutycycle<40)
 41891  012DA8  0100               	movlb	0	; () banked
 41892  012DAA  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 41893  012DAC  D008               	goto	l19503
 41894  012DAE  0100               	movlb	0	; () banked
 41895  012DB0  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 41896  012DB2  E109               	bnz	l2644
 41897  012DB4  0E28               	movlw	40
 41898  012DB6  0100               	movlb	0	; () banked
 41899  012DB8  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 41900  012DBA  B0D8               	btfsc	status,0,c
 41901  012DBC  D004               	goto	l2644
 41902  012DBE                     l19503:
 41903                           
 41904                           ; BSR set to: 0
 41905                           ;buck.c: 645: buck_remote_dutycycle = 40;
 41906  012DBE  0E28               	movlw	40
 41907  012DC0  0100               	movlb	0	; () banked
 41908  012DC2  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41909  012DC4  0012               	return	
 41910  012DC6                     l2644:
 41911                           
 41912                           ; BSR set to: 0
 41913                           ;buck.c: 646: else
 41914                           ;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 41915  012DC6  C061  F0E1         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 41916                           
 41917                           ; BSR set to: 0
 41918  012DCA  0012               	return	
 41919  012DCC                     __end_of_buck_remote_change_dutycycle:
 41920                           	opt stack 0
 41921                           tosu	equ	0xFFF
 41922                           tosh	equ	0xFFE
 41923                           tosl	equ	0xFFD
 41924                           pclath	equ	0xFFA
 41925                           tblptru	equ	0xFF8
 41926                           tblptrh	equ	0xFF7
 41927                           tblptrl	equ	0xFF6
 41928                           tablat	equ	0xFF5
 41929                           prodh	equ	0xFF4
 41930                           prodl	equ	0xFF3
 41931                           intcon	equ	0xFF2
 41932                           intcon2	equ	0xFF1
 41933                           intcon3	equ	0xFF0
 41934                           postinc0	equ	0xFEE
 41935                           wreg	equ	0xFE8
 41936                           indf1	equ	0xFE7
 41937                           postinc1	equ	0xFE6
 41938                           postdec1	equ	0xFE5
 41939                           plusw1	equ	0xFE3
 41940                           fsr1h	equ	0xFE2
 41941                           fsr1l	equ	0xFE1
 41942                           indf2	equ	0xFDF
 41943                           postinc2	equ	0xFDE
 41944                           postdec2	equ	0xFDD
 41945                           plusw2	equ	0xFDB
 41946                           fsr2h	equ	0xFDA
 41947                           fsr2l	equ	0xFD9
 41948                           status	equ	0xFD8
 41949                           
 41950 ;; *************** function __parse_command_calibration *****************
 41951 ;; Defined at:
 41952 ;;		line 505 in file "app_device_custom_hid.c"
 41953 ;; Parameters:    Size  Location     Type
 41954 ;;  cmd             1    wreg     unsigned char 
 41955 ;;  item            1    3[BANK0 ] unsigned char 
 41956 ;;  dat1            1    4[BANK0 ] unsigned char 
 41957 ;;  dat2            1    5[BANK0 ] unsigned char 
 41958 ;;  dat3            1    6[BANK0 ] unsigned char 
 41959 ;; Auto vars:     Size  Location     Type
 41960 ;;  cmd             1    0[COMRAM] unsigned char 
 41961 ;;  parameter       2    9[BANK0 ] int 
 41962 ;; Return value:  Size  Location     Type
 41963 ;;                  1    wreg      void 
 41964 ;; Registers used:
 41965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41966 ;; Tracked objects:
 41967 ;;		On entry : 0/0
 41968 ;;		On exit  : 0/0
 41969 ;;		Unchanged: 0/0
 41970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41973 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41974 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41975 ;;Total ram usage:        8 bytes
 41976 ;; Hardware stack levels used:    1
 41977 ;; Hardware stack levels required when called:   11
 41978 ;; This function calls:
 41979 ;;		_schedule_eeprom_write_task
 41980 ;; This function is called by:
 41981 ;;		_APP_DeviceCustomHIDTasks
 41982 ;; This function uses a non-reentrant model
 41983 ;;
 41984                           
 41985                           	psect	text192
 41986  00E9BE                     __ptext192:
 41987                           	opt stack 0
 41988  00E9BE                     __parse_command_calibration:
 41989                           	opt stack 18
 41990                           
 41991                           ;app_device_custom_hid.c: 507: int16_t parameter = dat1;
 41992                           
 41993                           ; BSR set to: 0
 41994                           ;incstack = 0
 41995  00E9BE  C064  F069         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 41996  00E9C2  0100               	movlb	0	; () banked
 41997  00E9C4  6B6A               	clrf	(__parse_command_calibration@parameter+1)& (0+255),b
 41998                           
 41999                           ; BSR set to: 0
 42000                           ;app_device_custom_hid.c: 508: parameter <<= 8;
 42001  00E9C6  0100               	movlb	0	; () banked
 42002  00E9C8  5169               	movf	__parse_command_calibration@parameter& (0+255),w,b
 42003  00E9CA  6F6A               	movwf	(__parse_command_calibration@parameter+1)& (0+255),b
 42004  00E9CC  6B69               	clrf	__parse_command_calibration@parameter& (0+255),b
 42005                           
 42006                           ; BSR set to: 0
 42007                           ;app_device_custom_hid.c: 509: parameter |= dat2;
 42008  00E9CE  0100               	movlb	0	; () banked
 42009  00E9D0  5165               	movf	__parse_command_calibration@dat2& (0+255),w,b
 42010  00E9D2  0100               	movlb	0	; () banked
 42011  00E9D4  1369               	iorwf	__parse_command_calibration@parameter& (0+255),f,b
 42012                           
 42013                           ;app_device_custom_hid.c: 511: switch(item & 0x0F)
 42014  00E9D6  D045               	goto	l20667
 42015  00E9D8                     l20661:
 42016                           
 42017                           ; BSR set to: 0
 42018                           ;app_device_custom_hid.c: 515: calibrationParameters[item>>4].Offset = parameter;
 42019  00E9D8  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 42020  00E9DC  0100               	movlb	0	; () banked
 42021  00E9DE  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 42022  00E9E0  0E0F               	movlw	15
 42023  00E9E2  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 42024  00E9E4  0100               	movlb	0	; () banked
 42025  00E9E6  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42026  00E9E8  0D0C               	mullw	12
 42027  00E9EA  0E05               	movlw	5
 42028  00E9EC  26F3               	addwf	prodl,f,c
 42029  00E9EE  0E00               	movlw	0
 42030  00E9F0  22F4               	addwfc	prodh,f,c
 42031  00E9F2  0E00               	movlw	low _calibrationParameters
 42032  00E9F4  24F3               	addwf	prodl,w,c
 42033  00E9F6  6ED9               	movwf	fsr2l,c
 42034  00E9F8  0E03               	movlw	high _calibrationParameters
 42035  00E9FA  20F4               	addwfc	prodh,w,c
 42036  00E9FC  6EDA               	movwf	fsr2h,c
 42037  00E9FE  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 42038  00EA02  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 42039                           
 42040                           ;app_device_custom_hid.c: 516: break;
 42041  00EA06  D05D               	goto	l20685
 42042  00EA08                     l20663:
 42043                           
 42044                           ; BSR set to: 0
 42045                           ;app_device_custom_hid.c: 519: calibrationParameters[item>>4].Multiplier = parameter;
 42046  00EA08  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 42047  00EA0C  0100               	movlb	0	; () banked
 42048  00EA0E  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 42049  00EA10  0E0F               	movlw	15
 42050  00EA12  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 42051  00EA14  0100               	movlb	0	; () banked
 42052  00EA16  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42053  00EA18  0D0C               	mullw	12
 42054  00EA1A  0E07               	movlw	7
 42055  00EA1C  26F3               	addwf	prodl,f,c
 42056  00EA1E  0E00               	movlw	0
 42057  00EA20  22F4               	addwfc	prodh,f,c
 42058  00EA22  0E00               	movlw	low _calibrationParameters
 42059  00EA24  24F3               	addwf	prodl,w,c
 42060  00EA26  6ED9               	movwf	fsr2l,c
 42061  00EA28  0E03               	movlw	high _calibrationParameters
 42062  00EA2A  20F4               	addwfc	prodh,w,c
 42063  00EA2C  6EDA               	movwf	fsr2h,c
 42064  00EA2E  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 42065  00EA32  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 42066                           
 42067                           ;app_device_custom_hid.c: 520: calibrationParameters[item>>4].Shift = dat3;
 42068  00EA36  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 42069  00EA3A  0100               	movlb	0	; () banked
 42070  00EA3C  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 42071  00EA3E  0E0F               	movlw	15
 42072  00EA40  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 42073  00EA42  0100               	movlb	0	; () banked
 42074  00EA44  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42075  00EA46  0D0C               	mullw	12
 42076  00EA48  0E09               	movlw	9
 42077  00EA4A  26F3               	addwf	prodl,f,c
 42078  00EA4C  0E00               	movlw	0
 42079  00EA4E  22F4               	addwfc	prodh,f,c
 42080  00EA50  0E00               	movlw	low _calibrationParameters
 42081  00EA52  24F3               	addwf	prodl,w,c
 42082  00EA54  6ED9               	movwf	fsr2l,c
 42083  00EA56  0E03               	movlw	high _calibrationParameters
 42084  00EA58  20F4               	addwfc	prodh,w,c
 42085  00EA5A  6EDA               	movwf	fsr2h,c
 42086  00EA5C  C066  FFDF         	movff	__parse_command_calibration@dat3,indf2
 42087                           
 42088                           ; BSR set to: 0
 42089                           ;app_device_custom_hid.c: 522: }
 42090                           
 42091                           ;app_device_custom_hid.c: 521: break;
 42092  00EA60  D030               	goto	l20685
 42093  00EA62                     l20667:
 42094                           
 42095                           ; BSR set to: 0
 42096  00EA62  0100               	movlb	0	; () banked
 42097  00EA64  5163               	movf	__parse_command_calibration@item& (0+255),w,b
 42098  00EA66  0B0F               	andlw	15
 42099  00EA68  0100               	movlb	0	; () banked
 42100  00EA6A  6F67               	movwf	??__parse_command_calibration& (0+255),b
 42101  00EA6C  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 42102                           
 42103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42104                           ; Switch size 1, requested type "space"
 42105                           ; Number of cases is 1, Range of values is 0 to 0
 42106                           ; switch strategies available:
 42107                           ; Name         Instructions Cycles
 42108                           ; simple_byte            4     3 (average)
 42109                           ;	Chosen strategy is simple_byte
 42110  00EA6E  0100               	movlb	0	; () banked
 42111  00EA70  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 42112  00EA72  0A00               	xorlw	0	; case 0
 42113  00EA74  A4D8               	btfss	status,2,c
 42114  00EA76  D025               	goto	l20685
 42115                           
 42116                           ; BSR set to: 0
 42117                           ; Switch size 1, requested type "space"
 42118                           ; Number of cases is 2, Range of values is 0 to 1
 42119                           ; switch strategies available:
 42120                           ; Name         Instructions Cycles
 42121                           ; simple_byte            7     4 (average)
 42122                           ;	Chosen strategy is simple_byte
 42123  00EA78  0100               	movlb	0	; () banked
 42124  00EA7A  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42125  00EA7C  0A00               	xorlw	0	; case 0
 42126  00EA7E  B4D8               	btfsc	status,2,c
 42127  00EA80  D7AB               	goto	l20661
 42128  00EA82  0A01               	xorlw	1	; case 1
 42129  00EA84  B4D8               	btfsc	status,2,c
 42130  00EA86  D7C0               	goto	l20663
 42131                           
 42132                           ; BSR set to: 0
 42133                           ;app_device_custom_hid.c: 524: switch((calibrationIndex_t) item>>4)
 42134  00EA88  D01C               	goto	l20685
 42135  00EA8A                     l20669:
 42136                           
 42137                           ; BSR set to: 0
 42138                           ;app_device_custom_hid.c: 527: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 42139  00EA8A  0E02               	movlw	2
 42140  00EA8C  EC11  F099         	call	_schedule_eeprom_write_task
 42141                           
 42142                           ;app_device_custom_hid.c: 528: break;
 42143  00EA90  0012               	return	
 42144  00EA92                     l20671:
 42145                           
 42146                           ;app_device_custom_hid.c: 530: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 42147  00EA92  0E03               	movlw	3
 42148  00EA94  EC11  F099         	call	_schedule_eeprom_write_task
 42149                           
 42150                           ;app_device_custom_hid.c: 531: break;
 42151  00EA98  0012               	return	
 42152  00EA9A                     l20673:
 42153                           
 42154                           ;app_device_custom_hid.c: 533: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 42155  00EA9A  0E04               	movlw	4
 42156  00EA9C  EC11  F099         	call	_schedule_eeprom_write_task
 42157                           
 42158                           ;app_device_custom_hid.c: 534: break;
 42159  00EAA0  0012               	return	
 42160  00EAA2                     l20675:
 42161                           
 42162                           ;app_device_custom_hid.c: 536: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 42163  00EAA2  0E05               	movlw	5
 42164  00EAA4  EC11  F099         	call	_schedule_eeprom_write_task
 42165                           
 42166                           ;app_device_custom_hid.c: 537: break;
 42167  00EAA8  0012               	return	
 42168  00EAAA                     l20677:
 42169                           
 42170                           ;app_device_custom_hid.c: 539: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 42171  00EAAA  0E06               	movlw	6
 42172  00EAAC  EC11  F099         	call	_schedule_eeprom_write_task
 42173                           
 42174                           ;app_device_custom_hid.c: 540: break;
 42175  00EAB0  0012               	return	
 42176  00EAB2                     l20679:
 42177                           
 42178                           ;app_device_custom_hid.c: 542: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 42179  00EAB2  0E07               	movlw	7
 42180  00EAB4  EC11  F099         	call	_schedule_eeprom_write_task
 42181                           
 42182                           ;app_device_custom_hid.c: 543: break;
 42183  00EAB8  0012               	return	
 42184  00EABA                     l20681:
 42185                           
 42186                           ;app_device_custom_hid.c: 545: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 42187  00EABA  0E08               	movlw	8
 42188  00EABC  EC11  F099         	call	_schedule_eeprom_write_task
 42189                           
 42190                           ;app_device_custom_hid.c: 547: }
 42191                           
 42192                           ;app_device_custom_hid.c: 546: break;
 42193  00EAC0  0012               	return	
 42194  00EAC2                     l20685:
 42195  00EAC2  0100               	movlb	0	; () banked
 42196  00EAC4  3963               	swapf	__parse_command_calibration@item& (0+255),w,b
 42197  00EAC6  0B0F               	andlw	15
 42198  00EAC8  0100               	movlb	0	; () banked
 42199  00EACA  6F67               	movwf	??__parse_command_calibration& (0+255),b
 42200  00EACC  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 42201                           
 42202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42203                           ; Switch size 1, requested type "space"
 42204                           ; Number of cases is 1, Range of values is 0 to 0
 42205                           ; switch strategies available:
 42206                           ; Name         Instructions Cycles
 42207                           ; simple_byte            4     3 (average)
 42208                           ;	Chosen strategy is simple_byte
 42209  00EACE  0100               	movlb	0	; () banked
 42210  00EAD0  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 42211  00EAD2  0A00               	xorlw	0	; case 0
 42212  00EAD4  A4D8               	btfss	status,2,c
 42213  00EAD6  0012               	return	
 42214                           
 42215                           ; BSR set to: 0
 42216                           ; Switch size 1, requested type "space"
 42217                           ; Number of cases is 7, Range of values is 0 to 6
 42218                           ; switch strategies available:
 42219                           ; Name         Instructions Cycles
 42220                           ; simple_byte           22    12 (average)
 42221                           ;	Chosen strategy is simple_byte
 42222  00EAD8  0100               	movlb	0	; () banked
 42223  00EADA  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42224  00EADC  0A00               	xorlw	0	; case 0
 42225  00EADE  B4D8               	btfsc	status,2,c
 42226  00EAE0  D7D4               	goto	l20669
 42227  00EAE2  0A01               	xorlw	1	; case 1
 42228  00EAE4  B4D8               	btfsc	status,2,c
 42229  00EAE6  D7D5               	goto	l20671
 42230  00EAE8  0A03               	xorlw	3	; case 2
 42231  00EAEA  B4D8               	btfsc	status,2,c
 42232  00EAEC  D7D6               	goto	l20673
 42233  00EAEE  0A01               	xorlw	1	; case 3
 42234  00EAF0  B4D8               	btfsc	status,2,c
 42235  00EAF2  D7D7               	goto	l20675
 42236  00EAF4  0A07               	xorlw	7	; case 4
 42237  00EAF6  B4D8               	btfsc	status,2,c
 42238  00EAF8  D7D8               	goto	l20677
 42239  00EAFA  0A01               	xorlw	1	; case 5
 42240  00EAFC  B4D8               	btfsc	status,2,c
 42241  00EAFE  D7D9               	goto	l20679
 42242  00EB00  0A03               	xorlw	3	; case 6
 42243  00EB02  A4D8               	btfss	status,2,c
 42244  00EB04  0012               	return	
 42245  00EB06  D7D9               	goto	l20681
 42246  00EB08                     __end_of__parse_command_calibration:
 42247                           	opt stack 0
 42248                           tosu	equ	0xFFF
 42249                           tosh	equ	0xFFE
 42250                           tosl	equ	0xFFD
 42251                           pclath	equ	0xFFA
 42252                           tblptru	equ	0xFF8
 42253                           tblptrh	equ	0xFF7
 42254                           tblptrl	equ	0xFF6
 42255                           tablat	equ	0xFF5
 42256                           prodh	equ	0xFF4
 42257                           prodl	equ	0xFF3
 42258                           intcon	equ	0xFF2
 42259                           intcon2	equ	0xFF1
 42260                           intcon3	equ	0xFF0
 42261                           postinc0	equ	0xFEE
 42262                           wreg	equ	0xFE8
 42263                           indf1	equ	0xFE7
 42264                           postinc1	equ	0xFE6
 42265                           postdec1	equ	0xFE5
 42266                           plusw1	equ	0xFE3
 42267                           fsr1h	equ	0xFE2
 42268                           fsr1l	equ	0xFE1
 42269                           indf2	equ	0xFDF
 42270                           postinc2	equ	0xFDE
 42271                           postdec2	equ	0xFDD
 42272                           plusw2	equ	0xFDB
 42273                           fsr2h	equ	0xFDA
 42274                           fsr2l	equ	0xFD9
 42275                           status	equ	0xFD8
 42276                           
 42277 ;; *************** function _schedule_eeprom_write_task *****************
 42278 ;; Defined at:
 42279 ;;		line 741 in file "i2c.c"
 42280 ;; Parameters:    Size  Location     Type
 42281 ;;  task            1    wreg     enum E8252
 42282 ;; Auto vars:     Size  Location     Type
 42283 ;;  task            1    1[BANK0 ] enum E8252
 42284 ;;  idx             1    2[BANK0 ] unsigned char 
 42285 ;; Return value:  Size  Location     Type
 42286 ;;                  1    wreg      void 
 42287 ;; Registers used:
 42288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42289 ;; Tracked objects:
 42290 ;;		On entry : 0/0
 42291 ;;		On exit  : 0/0
 42292 ;;		Unchanged: 0/0
 42293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42295 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42296 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42297 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42298 ;;Total ram usage:        3 bytes
 42299 ;; Hardware stack levels used:    1
 42300 ;; Hardware stack levels required when called:   10
 42301 ;; This function calls:
 42302 ;;		Nothing
 42303 ;; This function is called by:
 42304 ;;		__parse_command_calibration
 42305 ;;		_i2c_eeprom_read_calibration
 42306 ;; This function uses a non-reentrant model
 42307 ;;
 42308                           
 42309                           	psect	text193
 42310  013222                     __ptext193:
 42311                           	opt stack 0
 42312  013222                     _schedule_eeprom_write_task:
 42313                           	opt stack 18
 42314                           
 42315                           ;incstack = 0
 42316                           ;schedule_eeprom_write_task@task stored from wreg
 42317  013222  0100               	movlb	0	; () banked
 42318  013224  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 42319                           
 42320                           ;i2c.c: 743: uint8_t idx;
 42321                           ;i2c.c: 745: for(idx=task_list_read_index; idx!=task_list_write_index; idx=(idx+1) & 0x0
      +                          F)
 42322  013226  C01E  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 42323  01322A  D013               	goto	l1660
 42324  01322C                     l19515:
 42325                           
 42326                           ;i2c.c: 746: {
 42327                           ;i2c.c: 747: if (task_list[idx] == task)
 42328  01322C  0100               	movlb	0	; () banked
 42329  01322E  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 42330  013230  0D01               	mullw	1
 42331  013232  0E68               	movlw	low _task_list
 42332  013234  24F3               	addwf	prodl,w,c
 42333  013236  6ED9               	movwf	fsr2l,c
 42334  013238  0E04               	movlw	high _task_list
 42335  01323A  20F4               	addwfc	prodh,w,c
 42336  01323C  6EDA               	movwf	fsr2h,c
 42337  01323E  0100               	movlb	0	; () banked
 42338  013240  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 42339  013242  18DE               	xorwf	postinc2,w,c
 42340  013244  B4D8               	btfsc	status,2,c
 42341  013246  0012               	return	
 42342                           
 42343                           ; BSR set to: 0
 42344                           
 42345                           ; BSR set to: 0
 42346                           
 42347                           ; BSR set to: 0
 42348                           ;i2c.c: 748: {
 42349                           ;i2c.c: 750: return;
 42350  013248  0100               	movlb	0	; () banked
 42351  01324A  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 42352  01324C  0B0F               	andlw	15
 42353  01324E  0100               	movlb	0	; () banked
 42354  013250  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 42355  013252                     l1660:
 42356  013252  501D               	movf	_task_list_write_index,w,c
 42357  013254  0100               	movlb	0	; () banked
 42358  013256  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 42359  013258  A4D8               	btfss	status,2,c
 42360  01325A  D7E8               	goto	l19515
 42361                           
 42362                           ; BSR set to: 0
 42363                           ;i2c.c: 751: }
 42364                           ;i2c.c: 752: }
 42365                           ;i2c.c: 754: task_list[task_list_write_index] = task;
 42366                           
 42367                           ; BSR set to: 0
 42368  01325C  501D               	movf	_task_list_write_index,w,c
 42369  01325E  0D01               	mullw	1
 42370  013260  0E68               	movlw	low _task_list
 42371  013262  24F3               	addwf	prodl,w,c
 42372  013264  6ED9               	movwf	fsr2l,c
 42373  013266  0E04               	movlw	high _task_list
 42374  013268  20F4               	addwfc	prodh,w,c
 42375  01326A  6EDA               	movwf	fsr2h,c
 42376  01326C  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 42377                           
 42378                           ; BSR set to: 0
 42379                           ;i2c.c: 755: ++task_list_write_index;
 42380  013270  2A1D               	incf	_task_list_write_index,f,c
 42381                           
 42382                           ; BSR set to: 0
 42383                           ;i2c.c: 756: task_list_write_index &= 0x0F;
 42384  013272  0E0F               	movlw	15
 42385  013274  161D               	andwf	_task_list_write_index,f,c
 42386                           
 42387                           ; BSR set to: 0
 42388  013276  0012               	return		;funcret
 42389  013278                     __end_of_schedule_eeprom_write_task:
 42390                           	opt stack 0
 42391                           tosu	equ	0xFFF
 42392                           tosh	equ	0xFFE
 42393                           tosl	equ	0xFFD
 42394                           pclath	equ	0xFFA
 42395                           tblptru	equ	0xFF8
 42396                           tblptrh	equ	0xFF7
 42397                           tblptrl	equ	0xFF6
 42398                           tablat	equ	0xFF5
 42399                           prodh	equ	0xFF4
 42400                           prodl	equ	0xFF3
 42401                           intcon	equ	0xFF2
 42402                           intcon2	equ	0xFF1
 42403                           intcon3	equ	0xFF0
 42404                           postinc0	equ	0xFEE
 42405                           wreg	equ	0xFE8
 42406                           indf1	equ	0xFE7
 42407                           postinc1	equ	0xFE6
 42408                           postdec1	equ	0xFE5
 42409                           plusw1	equ	0xFE3
 42410                           fsr1h	equ	0xFE2
 42411                           fsr1l	equ	0xFE1
 42412                           indf2	equ	0xFDF
 42413                           postinc2	equ	0xFDE
 42414                           postdec2	equ	0xFDD
 42415                           plusw2	equ	0xFDB
 42416                           fsr2h	equ	0xFDA
 42417                           fsr2l	equ	0xFD9
 42418                           status	equ	0xFD8
 42419                           
 42420 ;; *************** function __fill_buffer_get_status *****************
 42421 ;; Defined at:
 42422 ;;		line 269 in file "app_device_custom_hid.c"
 42423 ;; Parameters:    Size  Location     Type
 42424 ;;		None
 42425 ;; Auto vars:     Size  Location     Type
 42426 ;;		None
 42427 ;; Return value:  Size  Location     Type
 42428 ;;                  1    wreg      void 
 42429 ;; Registers used:
 42430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42431 ;; Tracked objects:
 42432 ;;		On entry : 0/0
 42433 ;;		On exit  : 0/0
 42434 ;;		Unchanged: 0/0
 42435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42438 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42439 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42440 ;;Total ram usage:        4 bytes
 42441 ;; Hardware stack levels used:    1
 42442 ;; Hardware stack levels required when called:   11
 42443 ;; This function calls:
 42444 ;;		_buck_get_dutycycle
 42445 ;;		_buck_get_mode
 42446 ;;		_buck_remote_get_dutycycle
 42447 ;;		_buck_remote_get_status
 42448 ;;		_rtcc_get_day
 42449 ;;		_rtcc_get_hours
 42450 ;;		_rtcc_get_minutes
 42451 ;;		_rtcc_get_month
 42452 ;;		_rtcc_get_seconds
 42453 ;;		_rtcc_get_year
 42454 ;;		_ui_get_status
 42455 ;; This function is called by:
 42456 ;;		_APP_DeviceCustomHIDTasks
 42457 ;; This function uses a non-reentrant model
 42458 ;;
 42459                           
 42460                           	psect	text194
 42461  00CCE8                     __ptext194:
 42462                           	opt stack 0
 42463  00CCE8                     __fill_buffer_get_status:
 42464                           	opt stack 18
 42465                           
 42466                           ;app_device_custom_hid.c: 272: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 42467                           
 42468                           ; BSR set to: 0
 42469                           ;incstack = 0
 42470  00CCE8  0E10               	movlw	16
 42471  00CCEA  0103               	movlb	3	; () banked
 42472  00CCEC  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42473                           
 42474                           ; BSR set to: 3
 42475                           ;app_device_custom_hid.c: 274: ToSendDataBuffer[1] = (uint8_t) os.input_voltage;
 42476  00CCEE  C212  F3A5         	movff	_os+18,_ToSendDataBuffer+1	;volatile
 42477                           
 42478                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[2] = os.input_voltage >> 8;
 42479  00CCF2  0102               	movlb	2	; () banked
 42480  00CCF4  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 42481  00CCF6  0103               	movlb	3	; () banked
 42482  00CCF8  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 42483                           
 42484                           ; BSR set to: 3
 42485                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[3] = (uint8_t) os.output_voltage;
 42486  00CCFA  C227  F3A7         	movff	_os+39,_ToSendDataBuffer+3	;volatile
 42487                           
 42488                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[4] = os.output_voltage >> 8;
 42489  00CCFE  0102               	movlb	2	; () banked
 42490  00CD00  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 42491  00CD02  0103               	movlb	3	; () banked
 42492  00CD04  6FA8               	movwf	(_ToSendDataBuffer+4)& (0+255),b
 42493                           
 42494                           ; BSR set to: 3
 42495                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[5] = (uint8_t) os.input_current;
 42496  00CD06  C21D  F3A9         	movff	_os+29,_ToSendDataBuffer+5	;volatile
 42497                           
 42498                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[6] = os.input_current >> 8;
 42499  00CD0A  0102               	movlb	2	; () banked
 42500  00CD0C  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 42501  00CD0E  0103               	movlb	3	; () banked
 42502  00CD10  6FAA               	movwf	(_ToSendDataBuffer+6)& (0+255),b
 42503                           
 42504                           ; BSR set to: 3
 42505                           ;app_device_custom_hid.c: 283: ToSendDataBuffer[7] = (uint8_t) os.output_current;
 42506  00CD12  C232  F3AB         	movff	_os+50,_ToSendDataBuffer+7	;volatile
 42507                           
 42508                           ;app_device_custom_hid.c: 284: ToSendDataBuffer[8] = os.output_current >> 8;
 42509  00CD16  0102               	movlb	2	; () banked
 42510  00CD18  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 42511  00CD1A  0103               	movlb	3	; () banked
 42512  00CD1C  6FAC               	movwf	(_ToSendDataBuffer+8)& (0+255),b
 42513                           
 42514                           ; BSR set to: 3
 42515                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[9] = (uint8_t) os.temperature_onboard;
 42516  00CD1E  C236  F3AD         	movff	_os+54,_ToSendDataBuffer+9	;volatile
 42517                           
 42518                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[10] = os.temperature_onboard >> 8;
 42519  00CD22  0102               	movlb	2	; () banked
 42520  00CD24  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 42521  00CD26  0103               	movlb	3	; () banked
 42522  00CD28  6FAE               	movwf	(_ToSendDataBuffer+10)& (0+255),b
 42523                           
 42524                           ; BSR set to: 3
 42525                           ;app_device_custom_hid.c: 289: ToSendDataBuffer[11] = (uint8_t) os.temperature_external_
      +                          1;
 42526  00CD2A  C23A  F3AF         	movff	_os+58,_ToSendDataBuffer+11	;volatile
 42527                           
 42528                           ;app_device_custom_hid.c: 290: ToSendDataBuffer[12] = os.temperature_external_1 >> 8;
 42529  00CD2E  0102               	movlb	2	; () banked
 42530  00CD30  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 42531  00CD32  0103               	movlb	3	; () banked
 42532  00CD34  6FB0               	movwf	(_ToSendDataBuffer+12)& (0+255),b
 42533                           
 42534                           ; BSR set to: 3
 42535                           ;app_device_custom_hid.c: 292: ToSendDataBuffer[13] = (uint8_t) os.temperature_external_
      +                          2;
 42536  00CD36  C23E  F3B1         	movff	_os+62,_ToSendDataBuffer+13	;volatile
 42537                           
 42538                           ;app_device_custom_hid.c: 293: ToSendDataBuffer[14] = os.temperature_external_2 >> 8;
 42539  00CD3A  0102               	movlb	2	; () banked
 42540  00CD3C  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 42541  00CD3E  0103               	movlb	3	; () banked
 42542  00CD40  6FB2               	movwf	(_ToSendDataBuffer+14)& (0+255),b
 42543                           
 42544                           ; BSR set to: 3
 42545                           ;app_device_custom_hid.c: 295: ToSendDataBuffer[15] = os.outputs;
 42546  00CD42  C205  F3B3         	movff	_os+5,_ToSendDataBuffer+15	;volatile
 42547                           
 42548                           ; BSR set to: 3
 42549                           ;app_device_custom_hid.c: 297: ToSendDataBuffer[16] = os.display_mode;
 42550  00CD46  C240  F3B4         	movff	_os+64,_ToSendDataBuffer+16	;volatile
 42551                           
 42552                           ; BSR set to: 3
 42553                           ;app_device_custom_hid.c: 299: ToSendDataBuffer[17] = rtcc_get_year();
 42554  00CD4A  ECA0  F0A0         	call	_rtcc_get_year	;wreg free
 42555  00CD4E  0103               	movlb	3	; () banked
 42556  00CD50  6FB5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 42557                           
 42558                           ; BSR set to: 3
 42559                           ;app_device_custom_hid.c: 300: ToSendDataBuffer[18] = rtcc_get_month();
 42560  00CD52  ECB4  F0A0         	call	_rtcc_get_month	;wreg free
 42561  00CD56  0103               	movlb	3	; () banked
 42562  00CD58  6FB6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 42563                           
 42564                           ; BSR set to: 3
 42565                           ;app_device_custom_hid.c: 301: ToSendDataBuffer[19] = rtcc_get_day();
 42566  00CD5A  ECD2  F0A0         	call	_rtcc_get_day	;wreg free
 42567  00CD5E  0103               	movlb	3	; () banked
 42568  00CD60  6FB7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 42569                           
 42570                           ; BSR set to: 3
 42571                           ;app_device_custom_hid.c: 302: ToSendDataBuffer[20] = rtcc_get_hours();
 42572  00CD62  ECC8  F0A0         	call	_rtcc_get_hours	;wreg free
 42573  00CD66  0103               	movlb	3	; () banked
 42574  00CD68  6FB8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 42575                           
 42576                           ; BSR set to: 3
 42577                           ;app_device_custom_hid.c: 303: ToSendDataBuffer[21] = rtcc_get_minutes();
 42578  00CD6A  ECBE  F0A0         	call	_rtcc_get_minutes	;wreg free
 42579  00CD6E  0103               	movlb	3	; () banked
 42580  00CD70  6FB9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 42581                           
 42582                           ; BSR set to: 3
 42583                           ;app_device_custom_hid.c: 304: ToSendDataBuffer[22] = rtcc_get_seconds();
 42584  00CD72  ECAA  F0A0         	call	_rtcc_get_seconds	;wreg free
 42585  00CD76  0103               	movlb	3	; () banked
 42586  00CD78  6FBA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 42587                           
 42588                           ; BSR set to: 3
 42589                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[23] = buck_get_mode();
 42590  00CD7A  EC78  F0A1         	call	_buck_get_mode	;wreg free
 42591  00CD7E  0103               	movlb	3	; () banked
 42592  00CD80  6FBB               	movwf	(_ToSendDataBuffer+23)& (0+255),b
 42593                           
 42594                           ; BSR set to: 3
 42595                           ;app_device_custom_hid.c: 307: ToSendDataBuffer[24] = buck_get_dutycycle();
 42596  00CD82  EC73  F0A1         	call	_buck_get_dutycycle	;wreg free
 42597  00CD86  0103               	movlb	3	; () banked
 42598  00CD88  6FBC               	movwf	(_ToSendDataBuffer+24)& (0+255),b
 42599                           
 42600                           ; BSR set to: 3
 42601                           ;app_device_custom_hid.c: 308: ToSendDataBuffer[25] = buck_remote_get_status();
 42602  00CD8A  EC27  F09D         	call	_buck_remote_get_status	;wreg free
 42603  00CD8E  0103               	movlb	3	; () banked
 42604  00CD90  6FBD               	movwf	(_ToSendDataBuffer+25)& (0+255),b
 42605                           
 42606                           ; BSR set to: 3
 42607                           ;app_device_custom_hid.c: 309: ToSendDataBuffer[26] = buck_remote_get_dutycycle();
 42608  00CD92  EC70  F0A1         	call	_buck_remote_get_dutycycle	;wreg free
 42609  00CD96  0103               	movlb	3	; () banked
 42610  00CD98  6FBE               	movwf	(_ToSendDataBuffer+26)& (0+255),b
 42611                           
 42612                           ; BSR set to: 3
 42613                           ;app_device_custom_hid.c: 311: ToSendDataBuffer[27] = (uint8_t) os.temperature_onboard_a
      +                          dc;
 42614  00CD9A  C234  F3BF         	movff	_os+52,_ToSendDataBuffer+27	;volatile
 42615                           
 42616                           ; BSR set to: 3
 42617                           ;app_device_custom_hid.c: 312: ToSendDataBuffer[28] = os.temperature_onboard_adc >> 8;
 42618  00CD9E  0102               	movlb	2	; () banked
 42619  00CDA0  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 42620  00CDA2  0103               	movlb	3	; () banked
 42621  00CDA4  6FC0               	movwf	(_ToSendDataBuffer+28)& (0+255),b
 42622                           
 42623                           ; BSR set to: 3
 42624                           ;app_device_custom_hid.c: 313: ToSendDataBuffer[29] = (uint8_t) os.temperature_external_
      +                          1_adc;
 42625  00CDA6  C238  F3C1         	movff	_os+56,_ToSendDataBuffer+29	;volatile
 42626                           
 42627                           ; BSR set to: 3
 42628                           ;app_device_custom_hid.c: 314: ToSendDataBuffer[30] = os.temperature_external_1_adc >> 8
      +                          ;
 42629  00CDAA  0102               	movlb	2	; () banked
 42630  00CDAC  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 42631  00CDAE  0103               	movlb	3	; () banked
 42632  00CDB0  6FC2               	movwf	(_ToSendDataBuffer+30)& (0+255),b
 42633                           
 42634                           ; BSR set to: 3
 42635                           ;app_device_custom_hid.c: 315: ToSendDataBuffer[31] = (uint8_t) os.temperature_external_
      +                          2_adc;
 42636  00CDB2  C23C  F3C3         	movff	_os+60,_ToSendDataBuffer+31	;volatile
 42637                           
 42638                           ; BSR set to: 3
 42639                           ;app_device_custom_hid.c: 316: ToSendDataBuffer[32] = os.temperature_external_2_adc >> 8
      +                          ;
 42640  00CDB6  0102               	movlb	2	; () banked
 42641  00CDB8  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 42642  00CDBA  0103               	movlb	3	; () banked
 42643  00CDBC  6FC4               	movwf	(_ToSendDataBuffer+32)& (0+255),b
 42644                           
 42645                           ; BSR set to: 3
 42646                           ;app_device_custom_hid.c: 317: ToSendDataBuffer[33] = (uint8_t) os.input_voltage_adc[(os
      +                          .timeSlot&0b00110000)>>4];
 42647  00CDBE  0102               	movlb	2	; () banked
 42648  00CDC0  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42649  00CDC2  0B0F               	andlw	15
 42650  00CDC4  0B03               	andlw	3
 42651  00CDC6  0100               	movlb	0	; () banked
 42652  00CDC8  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42653  00CDCA  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42654  00CDCC  90D8               	bcf	status,0,c
 42655  00CDCE  0100               	movlb	0	; () banked
 42656  00CDD0  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42657  00CDD2  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42658  00CDD4  0E0A               	movlw	low (_os+10)
 42659  00CDD6  0100               	movlb	0	; () banked
 42660  00CDD8  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42661  00CDDA  6ED9               	movwf	fsr2l,c
 42662  00CDDC  0E02               	movlw	high (_os+10)
 42663  00CDDE  0100               	movlb	0	; () banked
 42664  00CDE0  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42665  00CDE2  6EDA               	movwf	fsr2h,c
 42666  00CDE4  50DF               	movf	indf2,w,c
 42667  00CDE6  0103               	movlb	3	; () banked
 42668  00CDE8  6FC5               	movwf	(_ToSendDataBuffer+33)& (0+255),b
 42669                           
 42670                           ; BSR set to: 3
 42671                           ;app_device_custom_hid.c: 318: ToSendDataBuffer[34] = os.input_voltage_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 42672  00CDEA  0102               	movlb	2	; () banked
 42673  00CDEC  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42674  00CDEE  0B0F               	andlw	15
 42675  00CDF0  0B03               	andlw	3
 42676  00CDF2  0100               	movlb	0	; () banked
 42677  00CDF4  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42678  00CDF6  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42679  00CDF8  90D8               	bcf	status,0,c
 42680  00CDFA  0100               	movlb	0	; () banked
 42681  00CDFC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42682  00CDFE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42683  00CE00  0E0A               	movlw	low (_os+10)
 42684  00CE02  0100               	movlb	0	; () banked
 42685  00CE04  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42686  00CE06  6ED9               	movwf	fsr2l,c
 42687  00CE08  0E02               	movlw	high (_os+10)
 42688  00CE0A  0100               	movlb	0	; () banked
 42689  00CE0C  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42690  00CE0E  6EDA               	movwf	fsr2h,c
 42691  00CE10  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42692  00CE14  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42693  00CE18  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42694  00CE1C  0100               	movlb	0	; () banked
 42695  00CE1E  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42696  00CE20  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42697  00CE22  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42698  00CE24  0100               	movlb	0	; () banked
 42699  00CE26  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42700  00CE28  0103               	movlb	3	; () banked
 42701  00CE2A  6FC6               	movwf	(_ToSendDataBuffer+34)& (0+255),b
 42702                           
 42703                           ; BSR set to: 3
 42704                           ;app_device_custom_hid.c: 319: ToSendDataBuffer[35] = (uint8_t) os.output_voltage_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 42705  00CE2C  0102               	movlb	2	; () banked
 42706  00CE2E  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42707  00CE30  0B0F               	andlw	15
 42708  00CE32  0B03               	andlw	3
 42709  00CE34  0100               	movlb	0	; () banked
 42710  00CE36  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42711  00CE38  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42712  00CE3A  90D8               	bcf	status,0,c
 42713  00CE3C  0100               	movlb	0	; () banked
 42714  00CE3E  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42715  00CE40  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42716  00CE42  0E1F               	movlw	low (_os+31)
 42717  00CE44  0100               	movlb	0	; () banked
 42718  00CE46  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42719  00CE48  6ED9               	movwf	fsr2l,c
 42720  00CE4A  0E02               	movlw	high (_os+31)
 42721  00CE4C  0100               	movlb	0	; () banked
 42722  00CE4E  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42723  00CE50  6EDA               	movwf	fsr2h,c
 42724  00CE52  50DF               	movf	indf2,w,c
 42725  00CE54  0103               	movlb	3	; () banked
 42726  00CE56  6FC7               	movwf	(_ToSendDataBuffer+35)& (0+255),b
 42727                           
 42728                           ; BSR set to: 3
 42729                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[36] = os.output_voltage_adc[(os.timeSlot
      +                          &0b00110000)>>4] >> 8;
 42730  00CE58  0102               	movlb	2	; () banked
 42731  00CE5A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42732  00CE5C  0B0F               	andlw	15
 42733  00CE5E  0B03               	andlw	3
 42734  00CE60  0100               	movlb	0	; () banked
 42735  00CE62  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42736  00CE64  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42737  00CE66  90D8               	bcf	status,0,c
 42738  00CE68  0100               	movlb	0	; () banked
 42739  00CE6A  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42740  00CE6C  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42741  00CE6E  0E1F               	movlw	low (_os+31)
 42742  00CE70  0100               	movlb	0	; () banked
 42743  00CE72  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42744  00CE74  6ED9               	movwf	fsr2l,c
 42745  00CE76  0E02               	movlw	high (_os+31)
 42746  00CE78  0100               	movlb	0	; () banked
 42747  00CE7A  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42748  00CE7C  6EDA               	movwf	fsr2h,c
 42749  00CE7E  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42750  00CE82  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42751  00CE86  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42752  00CE8A  0100               	movlb	0	; () banked
 42753  00CE8C  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42754  00CE8E  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42755  00CE90  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42756  00CE92  0100               	movlb	0	; () banked
 42757  00CE94  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42758  00CE96  0103               	movlb	3	; () banked
 42759  00CE98  6FC8               	movwf	(_ToSendDataBuffer+36)& (0+255),b
 42760                           
 42761                           ; BSR set to: 3
 42762                           ;app_device_custom_hid.c: 321: ToSendDataBuffer[37] = (uint8_t) os.input_current_adc[(os
      +                          .timeSlot&0b00110000) >>4];
 42763  00CE9A  0102               	movlb	2	; () banked
 42764  00CE9C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42765  00CE9E  0B0F               	andlw	15
 42766  00CEA0  0B03               	andlw	3
 42767  00CEA2  0100               	movlb	0	; () banked
 42768  00CEA4  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42769  00CEA6  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42770  00CEA8  90D8               	bcf	status,0,c
 42771  00CEAA  0100               	movlb	0	; () banked
 42772  00CEAC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42773  00CEAE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42774  00CEB0  0E14               	movlw	low (_os+20)
 42775  00CEB2  0100               	movlb	0	; () banked
 42776  00CEB4  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42777  00CEB6  6ED9               	movwf	fsr2l,c
 42778  00CEB8  0E02               	movlw	high (_os+20)
 42779  00CEBA  0100               	movlb	0	; () banked
 42780  00CEBC  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42781  00CEBE  6EDA               	movwf	fsr2h,c
 42782  00CEC0  50DF               	movf	indf2,w,c
 42783  00CEC2  0103               	movlb	3	; () banked
 42784  00CEC4  6FC9               	movwf	(_ToSendDataBuffer+37)& (0+255),b
 42785                           
 42786                           ; BSR set to: 3
 42787                           ;app_device_custom_hid.c: 322: ToSendDataBuffer[38] = os.input_current_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 42788  00CEC6  0102               	movlb	2	; () banked
 42789  00CEC8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42790  00CECA  0B0F               	andlw	15
 42791  00CECC  0B03               	andlw	3
 42792  00CECE  0100               	movlb	0	; () banked
 42793  00CED0  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42794  00CED2  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42795  00CED4  90D8               	bcf	status,0,c
 42796  00CED6  0100               	movlb	0	; () banked
 42797  00CED8  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42798  00CEDA  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42799  00CEDC  0E14               	movlw	low (_os+20)
 42800  00CEDE  0100               	movlb	0	; () banked
 42801  00CEE0  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42802  00CEE2  6ED9               	movwf	fsr2l,c
 42803  00CEE4  0E02               	movlw	high (_os+20)
 42804  00CEE6  0100               	movlb	0	; () banked
 42805  00CEE8  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42806  00CEEA  6EDA               	movwf	fsr2h,c
 42807  00CEEC  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42808  00CEF0  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42809  00CEF4  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42810  00CEF8  0100               	movlb	0	; () banked
 42811  00CEFA  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42812  00CEFC  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42813  00CEFE  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42814  00CF00  0100               	movlb	0	; () banked
 42815  00CF02  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42816  00CF04  0103               	movlb	3	; () banked
 42817  00CF06  6FCA               	movwf	(_ToSendDataBuffer+38)& (0+255),b
 42818                           
 42819                           ; BSR set to: 3
 42820                           ;app_device_custom_hid.c: 323: ToSendDataBuffer[39] = (uint8_t) os.output_current_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 42821  00CF08  0102               	movlb	2	; () banked
 42822  00CF0A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42823  00CF0C  0B0F               	andlw	15
 42824  00CF0E  0B03               	andlw	3
 42825  00CF10  0100               	movlb	0	; () banked
 42826  00CF12  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42827  00CF14  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42828  00CF16  90D8               	bcf	status,0,c
 42829  00CF18  0100               	movlb	0	; () banked
 42830  00CF1A  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42831  00CF1C  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42832  00CF1E  0E29               	movlw	low (_os+41)
 42833  00CF20  0100               	movlb	0	; () banked
 42834  00CF22  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42835  00CF24  6ED9               	movwf	fsr2l,c
 42836  00CF26  0E02               	movlw	high (_os+41)
 42837  00CF28  0100               	movlb	0	; () banked
 42838  00CF2A  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42839  00CF2C  6EDA               	movwf	fsr2h,c
 42840  00CF2E  50DF               	movf	indf2,w,c
 42841  00CF30  0103               	movlb	3	; () banked
 42842  00CF32  6FCB               	movwf	(_ToSendDataBuffer+39)& (0+255),b
 42843                           
 42844                           ; BSR set to: 3
 42845                           ;app_device_custom_hid.c: 324: ToSendDataBuffer[40] = os.output_current_adc[(os.timeSlot
      +                          &0b00110000)>>4]>> 8;
 42846  00CF34  0102               	movlb	2	; () banked
 42847  00CF36  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42848  00CF38  0B0F               	andlw	15
 42849  00CF3A  0B03               	andlw	3
 42850  00CF3C  0100               	movlb	0	; () banked
 42851  00CF3E  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42852  00CF40  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42853  00CF42  90D8               	bcf	status,0,c
 42854  00CF44  0100               	movlb	0	; () banked
 42855  00CF46  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42856  00CF48  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42857  00CF4A  0E29               	movlw	low (_os+41)
 42858  00CF4C  0100               	movlb	0	; () banked
 42859  00CF4E  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42860  00CF50  6ED9               	movwf	fsr2l,c
 42861  00CF52  0E02               	movlw	high (_os+41)
 42862  00CF54  0100               	movlb	0	; () banked
 42863  00CF56  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42864  00CF58  6EDA               	movwf	fsr2h,c
 42865  00CF5A  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42866  00CF5E  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42867  00CF62  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42868  00CF66  0100               	movlb	0	; () banked
 42869  00CF68  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42870  00CF6A  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42871  00CF6C  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42872  00CF6E  0100               	movlb	0	; () banked
 42873  00CF70  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42874  00CF72  0103               	movlb	3	; () banked
 42875  00CF74  6FCC               	movwf	(_ToSendDataBuffer+40)& (0+255),b
 42876                           
 42877                           ; BSR set to: 3
 42878                           ;app_device_custom_hid.c: 326: ToSendDataBuffer[41] = ui_get_status();
 42879  00CF76  EC6D  F0A1         	call	_ui_get_status	;wreg free
 42880  00CF7A  0103               	movlb	3	; () banked
 42881  00CF7C  6FCD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 42882                           
 42883                           ; BSR set to: 3
 42884                           ;app_device_custom_hid.c: 327: ToSendDataBuffer[42] = os.timeSlot;
 42885  00CF7E  C208  F3CE         	movff	_os+8,_ToSendDataBuffer+42	;volatile
 42886                           
 42887                           ; BSR set to: 3
 42888  00CF82  0012               	return		;funcret
 42889  00CF84                     __end_of__fill_buffer_get_status:
 42890                           	opt stack 0
 42891                           tosu	equ	0xFFF
 42892                           tosh	equ	0xFFE
 42893                           tosl	equ	0xFFD
 42894                           pclath	equ	0xFFA
 42895                           tblptru	equ	0xFF8
 42896                           tblptrh	equ	0xFF7
 42897                           tblptrl	equ	0xFF6
 42898                           tablat	equ	0xFF5
 42899                           prodh	equ	0xFF4
 42900                           prodl	equ	0xFF3
 42901                           intcon	equ	0xFF2
 42902                           intcon2	equ	0xFF1
 42903                           intcon3	equ	0xFF0
 42904                           postinc0	equ	0xFEE
 42905                           wreg	equ	0xFE8
 42906                           indf1	equ	0xFE7
 42907                           postinc1	equ	0xFE6
 42908                           postdec1	equ	0xFE5
 42909                           plusw1	equ	0xFE3
 42910                           fsr1h	equ	0xFE2
 42911                           fsr1l	equ	0xFE1
 42912                           indf2	equ	0xFDF
 42913                           postinc2	equ	0xFDE
 42914                           postdec2	equ	0xFDD
 42915                           plusw2	equ	0xFDB
 42916                           fsr2h	equ	0xFDA
 42917                           fsr2l	equ	0xFD9
 42918                           status	equ	0xFD8
 42919                           
 42920 ;; *************** function _ui_get_status *****************
 42921 ;; Defined at:
 42922 ;;		line 12 in file "ui.c"
 42923 ;; Parameters:    Size  Location     Type
 42924 ;;		None
 42925 ;; Auto vars:     Size  Location     Type
 42926 ;;		None
 42927 ;; Return value:  Size  Location     Type
 42928 ;;                  1    wreg      enum E9488
 42929 ;; Registers used:
 42930 ;;		wreg, status,2
 42931 ;; Tracked objects:
 42932 ;;		On entry : 0/0
 42933 ;;		On exit  : 0/0
 42934 ;;		Unchanged: 0/0
 42935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42940 ;;Total ram usage:        0 bytes
 42941 ;; Hardware stack levels used:    1
 42942 ;; Hardware stack levels required when called:   10
 42943 ;; This function calls:
 42944 ;;		Nothing
 42945 ;; This function is called by:
 42946 ;;		_main
 42947 ;;		__fill_buffer_get_status
 42948 ;; This function uses a non-reentrant model
 42949 ;;
 42950                           
 42951                           	psect	text195
 42952  0142DA                     __ptext195:
 42953                           	opt stack 0
 42954  0142DA                     _ui_get_status:
 42955                           	opt stack 20
 42956                           
 42957                           ;ui.c: 14: return userInterfaceStatus;
 42958                           
 42959                           ; BSR set to: 3
 42960                           ;incstack = 0
 42961  0142DA  0101               	movlb	1	; () banked
 42962  0142DC  51F3               	movf	_userInterfaceStatus& (0+255),w,b
 42963  0142DE  0012               	return	
 42964  0142E0                     __end_of_ui_get_status:
 42965                           	opt stack 0
 42966                           tosu	equ	0xFFF
 42967                           tosh	equ	0xFFE
 42968                           tosl	equ	0xFFD
 42969                           pclath	equ	0xFFA
 42970                           tblptru	equ	0xFF8
 42971                           tblptrh	equ	0xFF7
 42972                           tblptrl	equ	0xFF6
 42973                           tablat	equ	0xFF5
 42974                           prodh	equ	0xFF4
 42975                           prodl	equ	0xFF3
 42976                           intcon	equ	0xFF2
 42977                           intcon2	equ	0xFF1
 42978                           intcon3	equ	0xFF0
 42979                           postinc0	equ	0xFEE
 42980                           wreg	equ	0xFE8
 42981                           indf1	equ	0xFE7
 42982                           postinc1	equ	0xFE6
 42983                           postdec1	equ	0xFE5
 42984                           plusw1	equ	0xFE3
 42985                           fsr1h	equ	0xFE2
 42986                           fsr1l	equ	0xFE1
 42987                           indf2	equ	0xFDF
 42988                           postinc2	equ	0xFDE
 42989                           postdec2	equ	0xFDD
 42990                           plusw2	equ	0xFDB
 42991                           fsr2h	equ	0xFDA
 42992                           fsr2l	equ	0xFD9
 42993                           status	equ	0xFD8
 42994                           
 42995 ;; *************** function _rtcc_get_year *****************
 42996 ;; Defined at:
 42997 ;;		line 127 in file "rtcc.c"
 42998 ;; Parameters:    Size  Location     Type
 42999 ;;		None
 43000 ;; Auto vars:     Size  Location     Type
 43001 ;;		None
 43002 ;; Return value:  Size  Location     Type
 43003 ;;                  1    wreg      unsigned char 
 43004 ;; Registers used:
 43005 ;;		wreg, status,2
 43006 ;; Tracked objects:
 43007 ;;		On entry : 0/0
 43008 ;;		On exit  : 0/0
 43009 ;;		Unchanged: 0/0
 43010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43015 ;;Total ram usage:        0 bytes
 43016 ;; Hardware stack levels used:    1
 43017 ;; Hardware stack levels required when called:   10
 43018 ;; This function calls:
 43019 ;;		Nothing
 43020 ;; This function is called by:
 43021 ;;		__fill_buffer_get_status
 43022 ;;		__display_time
 43023 ;;		__number_of_days
 43024 ;;		_rtcc_get_year_decimal
 43025 ;;		_rtcc_increment_year
 43026 ;;		_rtcc_decrement_year
 43027 ;;		_rtcc_write_eeprom
 43028 ;; This function uses a non-reentrant model
 43029 ;;
 43030                           
 43031                           	psect	text196
 43032  014140                     __ptext196:
 43033                           	opt stack 0
 43034  014140                     _rtcc_get_year:
 43035                           	opt stack 17
 43036                           
 43037                           ;rtcc.c: 129: RTCCFGbits.RTCPTR1 = 1;
 43038                           
 43039                           ; BSR set to: 1
 43040                           ;incstack = 0
 43041  014140  010F               	movlb	15	; () banked
 43042  014142  833F               	bsf	63,1,b	;volatile
 43043                           
 43044                           ;rtcc.c: 130: RTCCFGbits.RTCPTR0 = 1;
 43045  014144  010F               	movlb	15	; () banked
 43046  014146  813F               	bsf	63,0,b	;volatile
 43047  014148                     l2288:
 43048                           
 43049                           ; BSR set to: 15
 43050  014148  010F               	movlb	15	; () banked
 43051  01414A  B93F               	btfsc	63,4,b	;volatile
 43052  01414C  D7FD               	goto	l2288
 43053                           
 43054                           ; BSR set to: 15
 43055                           ;rtcc.c: 132: return RTCVALL;
 43056                           
 43057                           ; BSR set to: 15
 43058  01414E  010F               	movlb	15	; () banked
 43059  014150  513A               	movf	58,w,b	;volatile
 43060  014152  0012               	return	
 43061  014154                     __end_of_rtcc_get_year:
 43062                           	opt stack 0
 43063                           tosu	equ	0xFFF
 43064                           tosh	equ	0xFFE
 43065                           tosl	equ	0xFFD
 43066                           pclath	equ	0xFFA
 43067                           tblptru	equ	0xFF8
 43068                           tblptrh	equ	0xFF7
 43069                           tblptrl	equ	0xFF6
 43070                           tablat	equ	0xFF5
 43071                           prodh	equ	0xFF4
 43072                           prodl	equ	0xFF3
 43073                           intcon	equ	0xFF2
 43074                           intcon2	equ	0xFF1
 43075                           intcon3	equ	0xFF0
 43076                           postinc0	equ	0xFEE
 43077                           wreg	equ	0xFE8
 43078                           indf1	equ	0xFE7
 43079                           postinc1	equ	0xFE6
 43080                           postdec1	equ	0xFE5
 43081                           plusw1	equ	0xFE3
 43082                           fsr1h	equ	0xFE2
 43083                           fsr1l	equ	0xFE1
 43084                           indf2	equ	0xFDF
 43085                           postinc2	equ	0xFDE
 43086                           postdec2	equ	0xFDD
 43087                           plusw2	equ	0xFDB
 43088                           fsr2h	equ	0xFDA
 43089                           fsr2l	equ	0xFD9
 43090                           status	equ	0xFD8
 43091                           
 43092 ;; *************** function _rtcc_get_seconds *****************
 43093 ;; Defined at:
 43094 ;;		line 317 in file "rtcc.c"
 43095 ;; Parameters:    Size  Location     Type
 43096 ;;		None
 43097 ;; Auto vars:     Size  Location     Type
 43098 ;;		None
 43099 ;; Return value:  Size  Location     Type
 43100 ;;                  1    wreg      unsigned char 
 43101 ;; Registers used:
 43102 ;;		wreg, status,2
 43103 ;; Tracked objects:
 43104 ;;		On entry : 0/0
 43105 ;;		On exit  : 0/0
 43106 ;;		Unchanged: 0/0
 43107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43112 ;;Total ram usage:        0 bytes
 43113 ;; Hardware stack levels used:    1
 43114 ;; Hardware stack levels required when called:   10
 43115 ;; This function calls:
 43116 ;;		Nothing
 43117 ;; This function is called by:
 43118 ;;		__fill_buffer_get_status
 43119 ;;		__display_time
 43120 ;;		_rtcc_get_seconds_decimal
 43121 ;;		_rtcc_increment_seconds
 43122 ;;		_rtcc_decrement_seconds
 43123 ;;		_rtcc_write_eeprom
 43124 ;; This function uses a non-reentrant model
 43125 ;;
 43126                           
 43127                           	psect	text197
 43128  014154                     __ptext197:
 43129                           	opt stack 0
 43130  014154                     _rtcc_get_seconds:
 43131                           	opt stack 17
 43132                           
 43133                           ;rtcc.c: 319: RTCCFGbits.RTCPTR1 = 0;
 43134                           
 43135                           ; BSR set to: 15
 43136                           ;incstack = 0
 43137  014154  010F               	movlb	15	; () banked
 43138  014156  933F               	bcf	63,1,b	;volatile
 43139                           
 43140                           ;rtcc.c: 320: RTCCFGbits.RTCPTR0 = 0;
 43141  014158  010F               	movlb	15	; () banked
 43142  01415A  913F               	bcf	63,0,b	;volatile
 43143  01415C                     l2378:
 43144                           
 43145                           ; BSR set to: 15
 43146  01415C  010F               	movlb	15	; () banked
 43147  01415E  B93F               	btfsc	63,4,b	;volatile
 43148  014160  D7FD               	goto	l2378
 43149                           
 43150                           ; BSR set to: 15
 43151                           ;rtcc.c: 322: return RTCVALL;
 43152                           
 43153                           ; BSR set to: 15
 43154  014162  010F               	movlb	15	; () banked
 43155  014164  513A               	movf	58,w,b	;volatile
 43156  014166  0012               	return	
 43157  014168                     __end_of_rtcc_get_seconds:
 43158                           	opt stack 0
 43159                           tosu	equ	0xFFF
 43160                           tosh	equ	0xFFE
 43161                           tosl	equ	0xFFD
 43162                           pclath	equ	0xFFA
 43163                           tblptru	equ	0xFF8
 43164                           tblptrh	equ	0xFF7
 43165                           tblptrl	equ	0xFF6
 43166                           tablat	equ	0xFF5
 43167                           prodh	equ	0xFF4
 43168                           prodl	equ	0xFF3
 43169                           intcon	equ	0xFF2
 43170                           intcon2	equ	0xFF1
 43171                           intcon3	equ	0xFF0
 43172                           postinc0	equ	0xFEE
 43173                           wreg	equ	0xFE8
 43174                           indf1	equ	0xFE7
 43175                           postinc1	equ	0xFE6
 43176                           postdec1	equ	0xFE5
 43177                           plusw1	equ	0xFE3
 43178                           fsr1h	equ	0xFE2
 43179                           fsr1l	equ	0xFE1
 43180                           indf2	equ	0xFDF
 43181                           postinc2	equ	0xFDE
 43182                           postdec2	equ	0xFDD
 43183                           plusw2	equ	0xFDB
 43184                           fsr2h	equ	0xFDA
 43185                           fsr2l	equ	0xFD9
 43186                           status	equ	0xFD8
 43187                           
 43188 ;; *************** function _rtcc_get_month *****************
 43189 ;; Defined at:
 43190 ;;		line 165 in file "rtcc.c"
 43191 ;; Parameters:    Size  Location     Type
 43192 ;;		None
 43193 ;; Auto vars:     Size  Location     Type
 43194 ;;		None
 43195 ;; Return value:  Size  Location     Type
 43196 ;;                  1    wreg      unsigned char 
 43197 ;; Registers used:
 43198 ;;		wreg, status,2
 43199 ;; Tracked objects:
 43200 ;;		On entry : 0/0
 43201 ;;		On exit  : 0/0
 43202 ;;		Unchanged: 0/0
 43203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43208 ;;Total ram usage:        0 bytes
 43209 ;; Hardware stack levels used:    1
 43210 ;; Hardware stack levels required when called:   10
 43211 ;; This function calls:
 43212 ;;		Nothing
 43213 ;; This function is called by:
 43214 ;;		__fill_buffer_get_status
 43215 ;;		__display_time
 43216 ;;		__number_of_days
 43217 ;;		_rtcc_get_month_decimal
 43218 ;;		_rtcc_increment_month
 43219 ;;		_rtcc_decrement_month
 43220 ;;		_rtcc_write_eeprom
 43221 ;; This function uses a non-reentrant model
 43222 ;;
 43223                           
 43224                           	psect	text198
 43225  014168                     __ptext198:
 43226                           	opt stack 0
 43227  014168                     _rtcc_get_month:
 43228                           	opt stack 17
 43229                           
 43230                           ;rtcc.c: 167: RTCCFGbits.RTCPTR1 = 1;
 43231                           
 43232                           ; BSR set to: 15
 43233                           ;incstack = 0
 43234  014168  010F               	movlb	15	; () banked
 43235  01416A  833F               	bsf	63,1,b	;volatile
 43236                           
 43237                           ;rtcc.c: 168: RTCCFGbits.RTCPTR0 = 0;
 43238  01416C  010F               	movlb	15	; () banked
 43239  01416E  913F               	bcf	63,0,b	;volatile
 43240  014170                     l2306:
 43241                           
 43242                           ; BSR set to: 15
 43243  014170  010F               	movlb	15	; () banked
 43244  014172  B93F               	btfsc	63,4,b	;volatile
 43245  014174  D7FD               	goto	l2306
 43246                           
 43247                           ; BSR set to: 15
 43248                           ;rtcc.c: 170: return RTCVALH;
 43249                           
 43250                           ; BSR set to: 15
 43251  014176  010F               	movlb	15	; () banked
 43252  014178  513B               	movf	59,w,b	;volatile
 43253  01417A  0012               	return	
 43254  01417C                     __end_of_rtcc_get_month:
 43255                           	opt stack 0
 43256                           tosu	equ	0xFFF
 43257                           tosh	equ	0xFFE
 43258                           tosl	equ	0xFFD
 43259                           pclath	equ	0xFFA
 43260                           tblptru	equ	0xFF8
 43261                           tblptrh	equ	0xFF7
 43262                           tblptrl	equ	0xFF6
 43263                           tablat	equ	0xFF5
 43264                           prodh	equ	0xFF4
 43265                           prodl	equ	0xFF3
 43266                           intcon	equ	0xFF2
 43267                           intcon2	equ	0xFF1
 43268                           intcon3	equ	0xFF0
 43269                           postinc0	equ	0xFEE
 43270                           wreg	equ	0xFE8
 43271                           indf1	equ	0xFE7
 43272                           postinc1	equ	0xFE6
 43273                           postdec1	equ	0xFE5
 43274                           plusw1	equ	0xFE3
 43275                           fsr1h	equ	0xFE2
 43276                           fsr1l	equ	0xFE1
 43277                           indf2	equ	0xFDF
 43278                           postinc2	equ	0xFDE
 43279                           postdec2	equ	0xFDD
 43280                           plusw2	equ	0xFDB
 43281                           fsr2h	equ	0xFDA
 43282                           fsr2l	equ	0xFD9
 43283                           status	equ	0xFD8
 43284                           
 43285 ;; *************** function _rtcc_get_minutes *****************
 43286 ;; Defined at:
 43287 ;;		line 279 in file "rtcc.c"
 43288 ;; Parameters:    Size  Location     Type
 43289 ;;		None
 43290 ;; Auto vars:     Size  Location     Type
 43291 ;;		None
 43292 ;; Return value:  Size  Location     Type
 43293 ;;                  1    wreg      unsigned char 
 43294 ;; Registers used:
 43295 ;;		wreg, status,2
 43296 ;; Tracked objects:
 43297 ;;		On entry : 0/0
 43298 ;;		On exit  : 0/0
 43299 ;;		Unchanged: 0/0
 43300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43305 ;;Total ram usage:        0 bytes
 43306 ;; Hardware stack levels used:    1
 43307 ;; Hardware stack levels required when called:   10
 43308 ;; This function calls:
 43309 ;;		Nothing
 43310 ;; This function is called by:
 43311 ;;		__fill_buffer_get_status
 43312 ;;		__display_time
 43313 ;;		_rtcc_get_minutes_decimal
 43314 ;;		_rtcc_increment_minutes
 43315 ;;		_rtcc_decrement_minutes
 43316 ;;		_rtcc_write_eeprom
 43317 ;; This function uses a non-reentrant model
 43318 ;;
 43319                           
 43320                           	psect	text199
 43321  01417C                     __ptext199:
 43322                           	opt stack 0
 43323  01417C                     _rtcc_get_minutes:
 43324                           	opt stack 17
 43325                           
 43326                           ;rtcc.c: 281: RTCCFGbits.RTCPTR1 = 0;
 43327                           
 43328                           ; BSR set to: 15
 43329                           ;incstack = 0
 43330  01417C  010F               	movlb	15	; () banked
 43331  01417E  933F               	bcf	63,1,b	;volatile
 43332                           
 43333                           ;rtcc.c: 282: RTCCFGbits.RTCPTR0 = 0;
 43334  014180  010F               	movlb	15	; () banked
 43335  014182  913F               	bcf	63,0,b	;volatile
 43336  014184                     l2360:
 43337                           
 43338                           ; BSR set to: 15
 43339  014184  010F               	movlb	15	; () banked
 43340  014186  B93F               	btfsc	63,4,b	;volatile
 43341  014188  D7FD               	goto	l2360
 43342                           
 43343                           ; BSR set to: 15
 43344                           ;rtcc.c: 284: return RTCVALH;
 43345                           
 43346                           ; BSR set to: 15
 43347  01418A  010F               	movlb	15	; () banked
 43348  01418C  513B               	movf	59,w,b	;volatile
 43349  01418E  0012               	return	
 43350  014190                     __end_of_rtcc_get_minutes:
 43351                           	opt stack 0
 43352                           tosu	equ	0xFFF
 43353                           tosh	equ	0xFFE
 43354                           tosl	equ	0xFFD
 43355                           pclath	equ	0xFFA
 43356                           tblptru	equ	0xFF8
 43357                           tblptrh	equ	0xFF7
 43358                           tblptrl	equ	0xFF6
 43359                           tablat	equ	0xFF5
 43360                           prodh	equ	0xFF4
 43361                           prodl	equ	0xFF3
 43362                           intcon	equ	0xFF2
 43363                           intcon2	equ	0xFF1
 43364                           intcon3	equ	0xFF0
 43365                           postinc0	equ	0xFEE
 43366                           wreg	equ	0xFE8
 43367                           indf1	equ	0xFE7
 43368                           postinc1	equ	0xFE6
 43369                           postdec1	equ	0xFE5
 43370                           plusw1	equ	0xFE3
 43371                           fsr1h	equ	0xFE2
 43372                           fsr1l	equ	0xFE1
 43373                           indf2	equ	0xFDF
 43374                           postinc2	equ	0xFDE
 43375                           postdec2	equ	0xFDD
 43376                           plusw2	equ	0xFDB
 43377                           fsr2h	equ	0xFDA
 43378                           fsr2l	equ	0xFD9
 43379                           status	equ	0xFD8
 43380                           
 43381 ;; *************** function _rtcc_get_hours *****************
 43382 ;; Defined at:
 43383 ;;		line 241 in file "rtcc.c"
 43384 ;; Parameters:    Size  Location     Type
 43385 ;;		None
 43386 ;; Auto vars:     Size  Location     Type
 43387 ;;		None
 43388 ;; Return value:  Size  Location     Type
 43389 ;;                  1    wreg      unsigned char 
 43390 ;; Registers used:
 43391 ;;		wreg, status,2
 43392 ;; Tracked objects:
 43393 ;;		On entry : 0/0
 43394 ;;		On exit  : 0/0
 43395 ;;		Unchanged: 0/0
 43396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43401 ;;Total ram usage:        0 bytes
 43402 ;; Hardware stack levels used:    1
 43403 ;; Hardware stack levels required when called:   10
 43404 ;; This function calls:
 43405 ;;		Nothing
 43406 ;; This function is called by:
 43407 ;;		__fill_buffer_get_status
 43408 ;;		__display_time
 43409 ;;		_rtcc_get_hours_decimal
 43410 ;;		_rtcc_increment_hours
 43411 ;;		_rtcc_decrement_hours
 43412 ;;		_rtcc_write_eeprom
 43413 ;; This function uses a non-reentrant model
 43414 ;;
 43415                           
 43416                           	psect	text200
 43417  014190                     __ptext200:
 43418                           	opt stack 0
 43419  014190                     _rtcc_get_hours:
 43420                           	opt stack 17
 43421                           
 43422                           ;rtcc.c: 243: RTCCFGbits.RTCPTR1 = 0;
 43423                           
 43424                           ; BSR set to: 15
 43425                           ;incstack = 0
 43426  014190  010F               	movlb	15	; () banked
 43427  014192  933F               	bcf	63,1,b	;volatile
 43428                           
 43429                           ;rtcc.c: 244: RTCCFGbits.RTCPTR0 = 1;
 43430  014194  010F               	movlb	15	; () banked
 43431  014196  813F               	bsf	63,0,b	;volatile
 43432  014198                     l2342:
 43433                           
 43434                           ; BSR set to: 15
 43435  014198  010F               	movlb	15	; () banked
 43436  01419A  B93F               	btfsc	63,4,b	;volatile
 43437  01419C  D7FD               	goto	l2342
 43438                           
 43439                           ; BSR set to: 15
 43440                           ;rtcc.c: 246: return RTCVALL;
 43441                           
 43442                           ; BSR set to: 15
 43443  01419E  010F               	movlb	15	; () banked
 43444  0141A0  513A               	movf	58,w,b	;volatile
 43445  0141A2  0012               	return	
 43446  0141A4                     __end_of_rtcc_get_hours:
 43447                           	opt stack 0
 43448                           tosu	equ	0xFFF
 43449                           tosh	equ	0xFFE
 43450                           tosl	equ	0xFFD
 43451                           pclath	equ	0xFFA
 43452                           tblptru	equ	0xFF8
 43453                           tblptrh	equ	0xFF7
 43454                           tblptrl	equ	0xFF6
 43455                           tablat	equ	0xFF5
 43456                           prodh	equ	0xFF4
 43457                           prodl	equ	0xFF3
 43458                           intcon	equ	0xFF2
 43459                           intcon2	equ	0xFF1
 43460                           intcon3	equ	0xFF0
 43461                           postinc0	equ	0xFEE
 43462                           wreg	equ	0xFE8
 43463                           indf1	equ	0xFE7
 43464                           postinc1	equ	0xFE6
 43465                           postdec1	equ	0xFE5
 43466                           plusw1	equ	0xFE3
 43467                           fsr1h	equ	0xFE2
 43468                           fsr1l	equ	0xFE1
 43469                           indf2	equ	0xFDF
 43470                           postinc2	equ	0xFDE
 43471                           postdec2	equ	0xFDD
 43472                           plusw2	equ	0xFDB
 43473                           fsr2h	equ	0xFDA
 43474                           fsr2l	equ	0xFD9
 43475                           status	equ	0xFD8
 43476                           
 43477 ;; *************** function _rtcc_get_day *****************
 43478 ;; Defined at:
 43479 ;;		line 203 in file "rtcc.c"
 43480 ;; Parameters:    Size  Location     Type
 43481 ;;		None
 43482 ;; Auto vars:     Size  Location     Type
 43483 ;;		None
 43484 ;; Return value:  Size  Location     Type
 43485 ;;                  1    wreg      unsigned char 
 43486 ;; Registers used:
 43487 ;;		wreg, status,2
 43488 ;; Tracked objects:
 43489 ;;		On entry : 0/0
 43490 ;;		On exit  : 0/0
 43491 ;;		Unchanged: 0/0
 43492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43497 ;;Total ram usage:        0 bytes
 43498 ;; Hardware stack levels used:    1
 43499 ;; Hardware stack levels required when called:   10
 43500 ;; This function calls:
 43501 ;;		Nothing
 43502 ;; This function is called by:
 43503 ;;		__fill_buffer_get_status
 43504 ;;		__display_time
 43505 ;;		_rtcc_correct_day
 43506 ;;		_rtcc_get_day_decimal
 43507 ;;		_rtcc_increment_day
 43508 ;;		_rtcc_decrement_day
 43509 ;;		_rtcc_read_eeprom
 43510 ;;		_rtcc_write_eeprom
 43511 ;; This function uses a non-reentrant model
 43512 ;;
 43513                           
 43514                           	psect	text201
 43515  0141A4                     __ptext201:
 43516                           	opt stack 0
 43517  0141A4                     _rtcc_get_day:
 43518                           	opt stack 17
 43519                           
 43520                           ;rtcc.c: 205: RTCCFGbits.RTCPTR1 = 1;
 43521                           
 43522                           ; BSR set to: 15
 43523                           ;incstack = 0
 43524  0141A4  010F               	movlb	15	; () banked
 43525  0141A6  833F               	bsf	63,1,b	;volatile
 43526                           
 43527                           ;rtcc.c: 206: RTCCFGbits.RTCPTR0 = 0;
 43528  0141A8  010F               	movlb	15	; () banked
 43529  0141AA  913F               	bcf	63,0,b	;volatile
 43530  0141AC                     l2324:
 43531                           
 43532                           ; BSR set to: 15
 43533  0141AC  010F               	movlb	15	; () banked
 43534  0141AE  B93F               	btfsc	63,4,b	;volatile
 43535  0141B0  D7FD               	goto	l2324
 43536                           
 43537                           ; BSR set to: 15
 43538                           ;rtcc.c: 208: return RTCVALL;
 43539                           
 43540                           ; BSR set to: 15
 43541  0141B2  010F               	movlb	15	; () banked
 43542  0141B4  513A               	movf	58,w,b	;volatile
 43543  0141B6  0012               	return	
 43544  0141B8                     __end_of_rtcc_get_day:
 43545                           	opt stack 0
 43546                           tosu	equ	0xFFF
 43547                           tosh	equ	0xFFE
 43548                           tosl	equ	0xFFD
 43549                           pclath	equ	0xFFA
 43550                           tblptru	equ	0xFF8
 43551                           tblptrh	equ	0xFF7
 43552                           tblptrl	equ	0xFF6
 43553                           tablat	equ	0xFF5
 43554                           prodh	equ	0xFF4
 43555                           prodl	equ	0xFF3
 43556                           intcon	equ	0xFF2
 43557                           intcon2	equ	0xFF1
 43558                           intcon3	equ	0xFF0
 43559                           postinc0	equ	0xFEE
 43560                           wreg	equ	0xFE8
 43561                           indf1	equ	0xFE7
 43562                           postinc1	equ	0xFE6
 43563                           postdec1	equ	0xFE5
 43564                           plusw1	equ	0xFE3
 43565                           fsr1h	equ	0xFE2
 43566                           fsr1l	equ	0xFE1
 43567                           indf2	equ	0xFDF
 43568                           postinc2	equ	0xFDE
 43569                           postdec2	equ	0xFDD
 43570                           plusw2	equ	0xFDB
 43571                           fsr2h	equ	0xFDA
 43572                           fsr2l	equ	0xFD9
 43573                           status	equ	0xFD8
 43574                           
 43575 ;; *************** function _buck_remote_get_status *****************
 43576 ;; Defined at:
 43577 ;;		line 650 in file "buck.c"
 43578 ;; Parameters:    Size  Location     Type
 43579 ;;		None
 43580 ;; Auto vars:     Size  Location     Type
 43581 ;;  retval          1    0[BANK0 ] unsigned char 
 43582 ;; Return value:  Size  Location     Type
 43583 ;;                  1    wreg      unsigned char 
 43584 ;; Registers used:
 43585 ;;		wreg, status,2, status,0
 43586 ;; Tracked objects:
 43587 ;;		On entry : 0/0
 43588 ;;		On exit  : 0/0
 43589 ;;		Unchanged: 0/0
 43590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43594 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43595 ;;Total ram usage:        1 bytes
 43596 ;; Hardware stack levels used:    1
 43597 ;; Hardware stack levels required when called:   10
 43598 ;; This function calls:
 43599 ;;		Nothing
 43600 ;; This function is called by:
 43601 ;;		__fill_buffer_get_status
 43602 ;; This function uses a non-reentrant model
 43603 ;;
 43604                           
 43605                           	psect	text202
 43606  013A4E                     __ptext202:
 43607                           	opt stack 0
 43608  013A4E                     _buck_remote_get_status:
 43609                           	opt stack 18
 43610                           
 43611                           ;buck.c: 652: uint8_t retval = 0x00;
 43612                           
 43613                           ; BSR set to: 15
 43614                           ;incstack = 0
 43615  013A4E  0E00               	movlw	0
 43616  013A50  0100               	movlb	0	; () banked
 43617  013A52  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 43618                           
 43619                           ;buck.c: 653: if(buck_remote_enable)
 43620  013A54  0101               	movlb	1	; () banked
 43621  013A56  51F1               	movf	_buck_remote_enable& (0+255),w,b
 43622  013A58  B4D8               	btfsc	status,2,c
 43623  013A5A  D002               	goto	l19459
 43624                           
 43625                           ; BSR set to: 1
 43626                           ;buck.c: 654: retval |= 0x01;
 43627  013A5C  0100               	movlb	0	; () banked
 43628  013A5E  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 43629  013A60                     l19459:
 43630                           
 43631                           ;buck.c: 655: if(buck_remote_on)
 43632  013A60  0100               	movlb	0	; () banked
 43633  013A62  51E3               	movf	_buck_remote_on& (0+255),w,b
 43634  013A64  B4D8               	btfsc	status,2,c
 43635  013A66  D002               	goto	l19463
 43636                           
 43637                           ; BSR set to: 0
 43638                           ;buck.c: 656: retval |= 0x02;
 43639  013A68  0100               	movlb	0	; () banked
 43640  013A6A  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 43641  013A6C                     l19463:
 43642                           
 43643                           ; BSR set to: 0
 43644                           ;buck.c: 657: if(buck_remote_synchronous)
 43645  013A6C  0100               	movlb	0	; () banked
 43646  013A6E  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 43647  013A70  B4D8               	btfsc	status,2,c
 43648  013A72  D003               	goto	l19467
 43649                           
 43650                           ; BSR set to: 0
 43651                           ;buck.c: 658: retval |= 0x03;
 43652  013A74  0E03               	movlw	3
 43653  013A76  0100               	movlb	0	; () banked
 43654  013A78  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 43655  013A7A                     l19467:
 43656                           
 43657                           ; BSR set to: 0
 43658                           ;buck.c: 659: return retval;
 43659  013A7A  0100               	movlb	0	; () banked
 43660  013A7C  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 43661  013A7E  0012               	return	
 43662  013A80                     __end_of_buck_remote_get_status:
 43663                           	opt stack 0
 43664                           tosu	equ	0xFFF
 43665                           tosh	equ	0xFFE
 43666                           tosl	equ	0xFFD
 43667                           pclath	equ	0xFFA
 43668                           tblptru	equ	0xFF8
 43669                           tblptrh	equ	0xFF7
 43670                           tblptrl	equ	0xFF6
 43671                           tablat	equ	0xFF5
 43672                           prodh	equ	0xFF4
 43673                           prodl	equ	0xFF3
 43674                           intcon	equ	0xFF2
 43675                           intcon2	equ	0xFF1
 43676                           intcon3	equ	0xFF0
 43677                           postinc0	equ	0xFEE
 43678                           wreg	equ	0xFE8
 43679                           indf1	equ	0xFE7
 43680                           postinc1	equ	0xFE6
 43681                           postdec1	equ	0xFE5
 43682                           plusw1	equ	0xFE3
 43683                           fsr1h	equ	0xFE2
 43684                           fsr1l	equ	0xFE1
 43685                           indf2	equ	0xFDF
 43686                           postinc2	equ	0xFDE
 43687                           postdec2	equ	0xFDD
 43688                           plusw2	equ	0xFDB
 43689                           fsr2h	equ	0xFDA
 43690                           fsr2l	equ	0xFD9
 43691                           status	equ	0xFD8
 43692                           
 43693 ;; *************** function _buck_remote_get_dutycycle *****************
 43694 ;; Defined at:
 43695 ;;		line 662 in file "buck.c"
 43696 ;; Parameters:    Size  Location     Type
 43697 ;;		None
 43698 ;; Auto vars:     Size  Location     Type
 43699 ;;		None
 43700 ;; Return value:  Size  Location     Type
 43701 ;;                  1    wreg      unsigned char 
 43702 ;; Registers used:
 43703 ;;		wreg, status,2
 43704 ;; Tracked objects:
 43705 ;;		On entry : 0/0
 43706 ;;		On exit  : 0/0
 43707 ;;		Unchanged: 0/0
 43708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43713 ;;Total ram usage:        0 bytes
 43714 ;; Hardware stack levels used:    1
 43715 ;; Hardware stack levels required when called:   10
 43716 ;; This function calls:
 43717 ;;		Nothing
 43718 ;; This function is called by:
 43719 ;;		__fill_buffer_get_status
 43720 ;; This function uses a non-reentrant model
 43721 ;;
 43722                           
 43723                           	psect	text203
 43724  0142E0                     __ptext203:
 43725                           	opt stack 0
 43726  0142E0                     _buck_remote_get_dutycycle:
 43727                           	opt stack 18
 43728                           
 43729                           ;buck.c: 664: return buck_remote_dutycycle;
 43730                           
 43731                           ; BSR set to: 0
 43732                           ;incstack = 0
 43733  0142E0  0100               	movlb	0	; () banked
 43734  0142E2  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 43735  0142E4  0012               	return	
 43736  0142E6                     __end_of_buck_remote_get_dutycycle:
 43737                           	opt stack 0
 43738                           tosu	equ	0xFFF
 43739                           tosh	equ	0xFFE
 43740                           tosl	equ	0xFFD
 43741                           pclath	equ	0xFFA
 43742                           tblptru	equ	0xFF8
 43743                           tblptrh	equ	0xFF7
 43744                           tblptrl	equ	0xFF6
 43745                           tablat	equ	0xFF5
 43746                           prodh	equ	0xFF4
 43747                           prodl	equ	0xFF3
 43748                           intcon	equ	0xFF2
 43749                           intcon2	equ	0xFF1
 43750                           intcon3	equ	0xFF0
 43751                           postinc0	equ	0xFEE
 43752                           wreg	equ	0xFE8
 43753                           indf1	equ	0xFE7
 43754                           postinc1	equ	0xFE6
 43755                           postdec1	equ	0xFE5
 43756                           plusw1	equ	0xFE3
 43757                           fsr1h	equ	0xFE2
 43758                           fsr1l	equ	0xFE1
 43759                           indf2	equ	0xFDF
 43760                           postinc2	equ	0xFDE
 43761                           postdec2	equ	0xFDD
 43762                           plusw2	equ	0xFDB
 43763                           fsr2h	equ	0xFDA
 43764                           fsr2l	equ	0xFD9
 43765                           status	equ	0xFD8
 43766                           
 43767 ;; *************** function _buck_get_mode *****************
 43768 ;; Defined at:
 43769 ;;		line 597 in file "buck.c"
 43770 ;; Parameters:    Size  Location     Type
 43771 ;;		None
 43772 ;; Auto vars:     Size  Location     Type
 43773 ;;		None
 43774 ;; Return value:  Size  Location     Type
 43775 ;;                  1    wreg      enum E9570
 43776 ;; Registers used:
 43777 ;;		wreg, status,2
 43778 ;; Tracked objects:
 43779 ;;		On entry : 0/0
 43780 ;;		On exit  : 0/0
 43781 ;;		Unchanged: 0/0
 43782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43787 ;;Total ram usage:        0 bytes
 43788 ;; Hardware stack levels used:    1
 43789 ;; Hardware stack levels required when called:   10
 43790 ;; This function calls:
 43791 ;;		Nothing
 43792 ;; This function is called by:
 43793 ;;		_main
 43794 ;;		__fill_buffer_get_status
 43795 ;;		_system_calculate_input_current
 43796 ;;		_system_calculate_output_current
 43797 ;;		__display_inout
 43798 ;;		__display_charger
 43799 ;;		_log_collect_data
 43800 ;; This function uses a non-reentrant model
 43801 ;;
 43802                           
 43803                           	psect	text204
 43804  0142F0                     __ptext204:
 43805                           	opt stack 0
 43806  0142F0                     _buck_get_mode:
 43807                           	opt stack 19
 43808                           
 43809                           ;buck.c: 599: return buck_status;
 43810                           
 43811                           ; BSR set to: 0
 43812                           ;incstack = 0
 43813  0142F0  501C               	movf	_buck_status,w,c
 43814  0142F2  0012               	return	
 43815  0142F4                     __end_of_buck_get_mode:
 43816                           	opt stack 0
 43817                           tosu	equ	0xFFF
 43818                           tosh	equ	0xFFE
 43819                           tosl	equ	0xFFD
 43820                           pclath	equ	0xFFA
 43821                           tblptru	equ	0xFF8
 43822                           tblptrh	equ	0xFF7
 43823                           tblptrl	equ	0xFF6
 43824                           tablat	equ	0xFF5
 43825                           prodh	equ	0xFF4
 43826                           prodl	equ	0xFF3
 43827                           intcon	equ	0xFF2
 43828                           intcon2	equ	0xFF1
 43829                           intcon3	equ	0xFF0
 43830                           postinc0	equ	0xFEE
 43831                           wreg	equ	0xFE8
 43832                           indf1	equ	0xFE7
 43833                           postinc1	equ	0xFE6
 43834                           postdec1	equ	0xFE5
 43835                           plusw1	equ	0xFE3
 43836                           fsr1h	equ	0xFE2
 43837                           fsr1l	equ	0xFE1
 43838                           indf2	equ	0xFDF
 43839                           postinc2	equ	0xFDE
 43840                           postdec2	equ	0xFDD
 43841                           plusw2	equ	0xFDB
 43842                           fsr2h	equ	0xFDA
 43843                           fsr2l	equ	0xFD9
 43844                           status	equ	0xFD8
 43845                           
 43846 ;; *************** function _buck_get_dutycycle *****************
 43847 ;; Defined at:
 43848 ;;		line 592 in file "buck.c"
 43849 ;; Parameters:    Size  Location     Type
 43850 ;;		None
 43851 ;; Auto vars:     Size  Location     Type
 43852 ;;		None
 43853 ;; Return value:  Size  Location     Type
 43854 ;;                  1    wreg      unsigned char 
 43855 ;; Registers used:
 43856 ;;		wreg, status,2
 43857 ;; Tracked objects:
 43858 ;;		On entry : 0/0
 43859 ;;		On exit  : 0/0
 43860 ;;		Unchanged: 0/0
 43861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43866 ;;Total ram usage:        0 bytes
 43867 ;; Hardware stack levels used:    1
 43868 ;; Hardware stack levels required when called:   10
 43869 ;; This function calls:
 43870 ;;		Nothing
 43871 ;; This function is called by:
 43872 ;;		__fill_buffer_get_status
 43873 ;;		__display_charger
 43874 ;; This function uses a non-reentrant model
 43875 ;;
 43876                           
 43877                           	psect	text205
 43878  0142E6                     __ptext205:
 43879                           	opt stack 0
 43880  0142E6                     _buck_get_dutycycle:
 43881                           	opt stack 18
 43882                           
 43883                           ;buck.c: 594: return buck_dutycycle;
 43884                           
 43885                           ;incstack = 0
 43886  0142E6  0100               	movlb	0	; () banked
 43887  0142E8  51E4               	movf	_buck_dutycycle& (0+255),w,b
 43888  0142EA  0012               	return	
 43889  0142EC                     __end_of_buck_get_dutycycle:
 43890                           	opt stack 0
 43891                           tosu	equ	0xFFF
 43892                           tosh	equ	0xFFE
 43893                           tosl	equ	0xFFD
 43894                           pclath	equ	0xFFA
 43895                           tblptru	equ	0xFF8
 43896                           tblptrh	equ	0xFF7
 43897                           tblptrl	equ	0xFF6
 43898                           tablat	equ	0xFF5
 43899                           prodh	equ	0xFF4
 43900                           prodl	equ	0xFF3
 43901                           intcon	equ	0xFF2
 43902                           intcon2	equ	0xFF1
 43903                           intcon3	equ	0xFF0
 43904                           postinc0	equ	0xFEE
 43905                           wreg	equ	0xFE8
 43906                           indf1	equ	0xFE7
 43907                           postinc1	equ	0xFE6
 43908                           postdec1	equ	0xFE5
 43909                           plusw1	equ	0xFE3
 43910                           fsr1h	equ	0xFE2
 43911                           fsr1l	equ	0xFE1
 43912                           indf2	equ	0xFDF
 43913                           postinc2	equ	0xFDE
 43914                           postdec2	equ	0xFDD
 43915                           plusw2	equ	0xFDB
 43916                           fsr2h	equ	0xFDA
 43917                           fsr2l	equ	0xFD9
 43918                           status	equ	0xFD8
 43919                           
 43920 ;; *************** function __fill_buffer_get_display2 *****************
 43921 ;; Defined at:
 43922 ;;		line 353 in file "app_device_custom_hid.c"
 43923 ;; Parameters:    Size  Location     Type
 43924 ;;		None
 43925 ;; Auto vars:     Size  Location     Type
 43926 ;;  position        1    7[BANK0 ] unsigned char 
 43927 ;;  line            1    6[BANK0 ] unsigned char 
 43928 ;;  cntr            1    5[BANK0 ] unsigned char 
 43929 ;; Return value:  Size  Location     Type
 43930 ;;                  1    wreg      void 
 43931 ;; Registers used:
 43932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43933 ;; Tracked objects:
 43934 ;;		On entry : 0/0
 43935 ;;		On exit  : 0/0
 43936 ;;		Unchanged: 0/0
 43937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43939 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43941 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43942 ;;Total ram usage:        4 bytes
 43943 ;; Hardware stack levels used:    1
 43944 ;; Hardware stack levels required when called:   11
 43945 ;; This function calls:
 43946 ;;		_display_get_character
 43947 ;; This function is called by:
 43948 ;;		_APP_DeviceCustomHIDTasks
 43949 ;; This function uses a non-reentrant model
 43950 ;;
 43951                           
 43952                           	psect	text206
 43953  012DCC                     __ptext206:
 43954                           	opt stack 0
 43955  012DCC                     __fill_buffer_get_display2:
 43956                           	opt stack 18
 43957                           
 43958                           ;app_device_custom_hid.c: 355: uint8_t cntr;
 43959                           ;app_device_custom_hid.c: 356: uint8_t line;
 43960                           ;app_device_custom_hid.c: 357: uint8_t position;
 43961                           ;app_device_custom_hid.c: 360: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_2;
 43962                           
 43963                           ; BSR set to: 0
 43964                           ;incstack = 0
 43965  012DCC  0E12               	movlw	18
 43966  012DCE  0103               	movlb	3	; () banked
 43967  012DD0  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 43968                           
 43969                           ;app_device_custom_hid.c: 363: cntr = 1;
 43970  012DD2  0E01               	movlw	1
 43971  012DD4  0100               	movlb	0	; () banked
 43972  012DD6  6F65               	movwf	__fill_buffer_get_display2@cntr& (0+255),b
 43973                           
 43974                           ;app_device_custom_hid.c: 364: for(line=2; line<4; ++line)
 43975  012DD8  0E02               	movlw	2
 43976  012DDA  0100               	movlb	0	; () banked
 43977  012DDC  6F66               	movwf	__fill_buffer_get_display2@line& (0+255),b
 43978  012DDE                     l20541:
 43979                           
 43980                           ; BSR set to: 0
 43981  012DDE  0E03               	movlw	3
 43982  012DE0  0100               	movlb	0	; () banked
 43983  012DE2  6566               	cpfsgt	__fill_buffer_get_display2@line& (0+255),b
 43984  012DE4  D001               	goto	l20545
 43985  012DE6  0012               	return	
 43986  012DE8                     l20545:
 43987                           
 43988                           ; BSR set to: 0
 43989                           ;app_device_custom_hid.c: 365: {
 43990                           ;app_device_custom_hid.c: 366: for(position=0; position<20; ++position)
 43991  012DE8  0E00               	movlw	0
 43992  012DEA  0100               	movlb	0	; () banked
 43993  012DEC  6F67               	movwf	__fill_buffer_get_display2@position& (0+255),b
 43994  012DEE                     l20547:
 43995                           
 43996                           ; BSR set to: 0
 43997  012DEE  0E13               	movlw	19
 43998  012DF0  0100               	movlb	0	; () banked
 43999  012DF2  6567               	cpfsgt	__fill_buffer_get_display2@position& (0+255),b
 44000  012DF4  D001               	goto	l20551
 44001  012DF6  D018               	goto	l20559
 44002  012DF8                     l20551:
 44003                           
 44004                           ; BSR set to: 0
 44005                           ;app_device_custom_hid.c: 367: {
 44006                           ;app_device_custom_hid.c: 368: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 44007  012DF8  C067  F060         	movff	__fill_buffer_get_display2@position,display_get_character@position
 44008  012DFC  0100               	movlb	0	; () banked
 44009  012DFE  5166               	movf	__fill_buffer_get_display2@line& (0+255),w,b
 44010  012E00  ECC5  F09B         	call	_display_get_character
 44011  012E04  0100               	movlb	0	; () banked
 44012  012E06  6F64               	movwf	??__fill_buffer_get_display2& (0+255),b
 44013  012E08  0100               	movlb	0	; () banked
 44014  012E0A  5165               	movf	__fill_buffer_get_display2@cntr& (0+255),w,b
 44015  012E0C  0D01               	mullw	1
 44016  012E0E  0EA4               	movlw	low _ToSendDataBuffer
 44017  012E10  24F3               	addwf	prodl,w,c
 44018  012E12  6ED9               	movwf	fsr2l,c
 44019  012E14  0E03               	movlw	high _ToSendDataBuffer
 44020  012E16  20F4               	addwfc	prodh,w,c
 44021  012E18  6EDA               	movwf	fsr2h,c
 44022  012E1A  C064  FFDF         	movff	??__fill_buffer_get_display2,indf2
 44023                           
 44024                           ; BSR set to: 0
 44025                           ;app_device_custom_hid.c: 369: ++cntr;
 44026  012E1E  0100               	movlb	0	; () banked
 44027  012E20  2B65               	incf	__fill_buffer_get_display2@cntr& (0+255),f,b
 44028                           
 44029                           ; BSR set to: 0
 44030  012E22  0100               	movlb	0	; () banked
 44031  012E24  2B67               	incf	__fill_buffer_get_display2@position& (0+255),f,b
 44032  012E26  D7E3               	goto	l20547
 44033  012E28                     l20559:
 44034                           
 44035                           ; BSR set to: 0
 44036  012E28  0100               	movlb	0	; () banked
 44037  012E2A  2B66               	incf	__fill_buffer_get_display2@line& (0+255),f,b
 44038  012E2C  D7D8               	goto	l20541
 44039  012E2E                     __end_of__fill_buffer_get_display2:
 44040                           	opt stack 0
 44041                           tosu	equ	0xFFF
 44042                           tosh	equ	0xFFE
 44043                           tosl	equ	0xFFD
 44044                           pclath	equ	0xFFA
 44045                           tblptru	equ	0xFF8
 44046                           tblptrh	equ	0xFF7
 44047                           tblptrl	equ	0xFF6
 44048                           tablat	equ	0xFF5
 44049                           prodh	equ	0xFF4
 44050                           prodl	equ	0xFF3
 44051                           intcon	equ	0xFF2
 44052                           intcon2	equ	0xFF1
 44053                           intcon3	equ	0xFF0
 44054                           postinc0	equ	0xFEE
 44055                           wreg	equ	0xFE8
 44056                           indf1	equ	0xFE7
 44057                           postinc1	equ	0xFE6
 44058                           postdec1	equ	0xFE5
 44059                           plusw1	equ	0xFE3
 44060                           fsr1h	equ	0xFE2
 44061                           fsr1l	equ	0xFE1
 44062                           indf2	equ	0xFDF
 44063                           postinc2	equ	0xFDE
 44064                           postdec2	equ	0xFDD
 44065                           plusw2	equ	0xFDB
 44066                           fsr2h	equ	0xFDA
 44067                           fsr2l	equ	0xFD9
 44068                           status	equ	0xFD8
 44069                           
 44070 ;; *************** function __fill_buffer_get_display1 *****************
 44071 ;; Defined at:
 44072 ;;		line 331 in file "app_device_custom_hid.c"
 44073 ;; Parameters:    Size  Location     Type
 44074 ;;		None
 44075 ;; Auto vars:     Size  Location     Type
 44076 ;;  position        1    7[BANK0 ] unsigned char 
 44077 ;;  line            1    6[BANK0 ] unsigned char 
 44078 ;;  cntr            1    5[BANK0 ] unsigned char 
 44079 ;; Return value:  Size  Location     Type
 44080 ;;                  1    wreg      void 
 44081 ;; Registers used:
 44082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44083 ;; Tracked objects:
 44084 ;;		On entry : 0/0
 44085 ;;		On exit  : 0/0
 44086 ;;		Unchanged: 0/0
 44087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44089 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44091 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44092 ;;Total ram usage:        4 bytes
 44093 ;; Hardware stack levels used:    1
 44094 ;; Hardware stack levels required when called:   11
 44095 ;; This function calls:
 44096 ;;		_display_get_character
 44097 ;; This function is called by:
 44098 ;;		_APP_DeviceCustomHIDTasks
 44099 ;; This function uses a non-reentrant model
 44100 ;;
 44101                           
 44102                           	psect	text207
 44103  012E2E                     __ptext207:
 44104                           	opt stack 0
 44105  012E2E                     __fill_buffer_get_display1:
 44106                           	opt stack 18
 44107                           
 44108                           ;app_device_custom_hid.c: 333: uint8_t cntr;
 44109                           ;app_device_custom_hid.c: 334: uint8_t line;
 44110                           ;app_device_custom_hid.c: 335: uint8_t position;
 44111                           ;app_device_custom_hid.c: 338: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_1;
 44112                           
 44113                           ; BSR set to: 0
 44114                           ;incstack = 0
 44115  012E2E  0E11               	movlw	17
 44116  012E30  0103               	movlb	3	; () banked
 44117  012E32  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 44118                           
 44119                           ;app_device_custom_hid.c: 341: cntr = 1;
 44120  012E34  0E01               	movlw	1
 44121  012E36  0100               	movlb	0	; () banked
 44122  012E38  6F65               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 44123                           
 44124                           ;app_device_custom_hid.c: 342: for(line=0; line<2; ++line)
 44125  012E3A  0E00               	movlw	0
 44126  012E3C  0100               	movlb	0	; () banked
 44127  012E3E  6F66               	movwf	__fill_buffer_get_display1@line& (0+255),b
 44128  012E40                     l20517:
 44129                           
 44130                           ; BSR set to: 0
 44131  012E40  0E01               	movlw	1
 44132  012E42  0100               	movlb	0	; () banked
 44133  012E44  6566               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 44134  012E46  D001               	goto	l20521
 44135  012E48  0012               	return	
 44136  012E4A                     l20521:
 44137                           
 44138                           ; BSR set to: 0
 44139                           ;app_device_custom_hid.c: 343: {
 44140                           ;app_device_custom_hid.c: 344: for(position=0; position<20; ++position)
 44141  012E4A  0E00               	movlw	0
 44142  012E4C  0100               	movlb	0	; () banked
 44143  012E4E  6F67               	movwf	__fill_buffer_get_display1@position& (0+255),b
 44144  012E50                     l20523:
 44145                           
 44146                           ; BSR set to: 0
 44147  012E50  0E13               	movlw	19
 44148  012E52  0100               	movlb	0	; () banked
 44149  012E54  6567               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 44150  012E56  D001               	goto	l20527
 44151  012E58  D018               	goto	l20535
 44152  012E5A                     l20527:
 44153                           
 44154                           ; BSR set to: 0
 44155                           ;app_device_custom_hid.c: 345: {
 44156                           ;app_device_custom_hid.c: 346: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 44157  012E5A  C067  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 44158  012E5E  0100               	movlb	0	; () banked
 44159  012E60  5166               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 44160  012E62  ECC5  F09B         	call	_display_get_character
 44161  012E66  0100               	movlb	0	; () banked
 44162  012E68  6F64               	movwf	??__fill_buffer_get_display1& (0+255),b
 44163  012E6A  0100               	movlb	0	; () banked
 44164  012E6C  5165               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 44165  012E6E  0D01               	mullw	1
 44166  012E70  0EA4               	movlw	low _ToSendDataBuffer
 44167  012E72  24F3               	addwf	prodl,w,c
 44168  012E74  6ED9               	movwf	fsr2l,c
 44169  012E76  0E03               	movlw	high _ToSendDataBuffer
 44170  012E78  20F4               	addwfc	prodh,w,c
 44171  012E7A  6EDA               	movwf	fsr2h,c
 44172  012E7C  C064  FFDF         	movff	??__fill_buffer_get_display1,indf2
 44173                           
 44174                           ; BSR set to: 0
 44175                           ;app_device_custom_hid.c: 347: ++cntr;
 44176  012E80  0100               	movlb	0	; () banked
 44177  012E82  2B65               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 44178                           
 44179                           ; BSR set to: 0
 44180  012E84  0100               	movlb	0	; () banked
 44181  012E86  2B67               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 44182  012E88  D7E3               	goto	l20523
 44183  012E8A                     l20535:
 44184                           
 44185                           ; BSR set to: 0
 44186  012E8A  0100               	movlb	0	; () banked
 44187  012E8C  2B66               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 44188  012E8E  D7D8               	goto	l20517
 44189  012E90                     __end_of__fill_buffer_get_display1:
 44190                           	opt stack 0
 44191                           tosu	equ	0xFFF
 44192                           tosh	equ	0xFFE
 44193                           tosl	equ	0xFFD
 44194                           pclath	equ	0xFFA
 44195                           tblptru	equ	0xFF8
 44196                           tblptrh	equ	0xFF7
 44197                           tblptrl	equ	0xFF6
 44198                           tablat	equ	0xFF5
 44199                           prodh	equ	0xFF4
 44200                           prodl	equ	0xFF3
 44201                           intcon	equ	0xFF2
 44202                           intcon2	equ	0xFF1
 44203                           intcon3	equ	0xFF0
 44204                           postinc0	equ	0xFEE
 44205                           wreg	equ	0xFE8
 44206                           indf1	equ	0xFE7
 44207                           postinc1	equ	0xFE6
 44208                           postdec1	equ	0xFE5
 44209                           plusw1	equ	0xFE3
 44210                           fsr1h	equ	0xFE2
 44211                           fsr1l	equ	0xFE1
 44212                           indf2	equ	0xFDF
 44213                           postinc2	equ	0xFDE
 44214                           postdec2	equ	0xFDD
 44215                           plusw2	equ	0xFDB
 44216                           fsr2h	equ	0xFDA
 44217                           fsr2l	equ	0xFD9
 44218                           status	equ	0xFD8
 44219                           
 44220 ;; *************** function _display_get_character *****************
 44221 ;; Defined at:
 44222 ;;		line 23 in file "display.c"
 44223 ;; Parameters:    Size  Location     Type
 44224 ;;  line            1    wreg     unsigned char 
 44225 ;;  position        1    0[BANK0 ] unsigned char 
 44226 ;; Auto vars:     Size  Location     Type
 44227 ;;  line            1    3[BANK0 ] unsigned char 
 44228 ;; Return value:  Size  Location     Type
 44229 ;;                  1    wreg      unsigned char 
 44230 ;; Registers used:
 44231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44232 ;; Tracked objects:
 44233 ;;		On entry : 0/0
 44234 ;;		On exit  : 0/0
 44235 ;;		Unchanged: 0/0
 44236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44237 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44240 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44241 ;;Total ram usage:        4 bytes
 44242 ;; Hardware stack levels used:    1
 44243 ;; Hardware stack levels required when called:   10
 44244 ;; This function calls:
 44245 ;;		Nothing
 44246 ;; This function is called by:
 44247 ;;		__fill_buffer_get_display1
 44248 ;;		__fill_buffer_get_display2
 44249 ;; This function uses a non-reentrant model
 44250 ;;
 44251                           
 44252                           	psect	text208
 44253  01378A                     __ptext208:
 44254                           	opt stack 0
 44255  01378A                     _display_get_character:
 44256                           	opt stack 18
 44257                           
 44258                           ; BSR set to: 0
 44259                           ;incstack = 0
 44260                           ;display_get_character@line stored from wreg
 44261  01378A  0100               	movlb	0	; () banked
 44262  01378C  6F63               	movwf	display_get_character@line& (0+255),b
 44263                           
 44264                           ;display.c: 25: return display_content[line][position];
 44265  01378E  0100               	movlb	0	; () banked
 44266  013790  5163               	movf	display_get_character@line& (0+255),w,b
 44267  013792  0D14               	mullw	20
 44268  013794  0E54               	movlw	low _display_content
 44269  013796  0100               	movlb	0	; () banked
 44270  013798  6F61               	movwf	??_display_get_character& (0+255),b
 44271  01379A  0E03               	movlw	high _display_content
 44272  01379C  0100               	movlb	0	; () banked
 44273  01379E  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 44274  0137A0  50F3               	movf	prodl,w,c
 44275  0137A2  0100               	movlb	0	; () banked
 44276  0137A4  2761               	addwf	??_display_get_character& (0+255),f,b
 44277  0137A6  50F4               	movf	prodh,w,c
 44278  0137A8  0100               	movlb	0	; () banked
 44279  0137AA  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 44280  0137AC  0100               	movlb	0	; () banked
 44281  0137AE  5160               	movf	display_get_character@position& (0+255),w,b
 44282  0137B0  0D01               	mullw	1
 44283  0137B2  50F3               	movf	prodl,w,c
 44284  0137B4  0100               	movlb	0	; () banked
 44285  0137B6  2561               	addwf	??_display_get_character& (0+255),w,b
 44286  0137B8  6ED9               	movwf	fsr2l,c
 44287  0137BA  50F4               	movf	prodh,w,c
 44288  0137BC  0100               	movlb	0	; () banked
 44289  0137BE  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 44290  0137C0  6EDA               	movwf	fsr2h,c
 44291  0137C2  50DF               	movf	indf2,w,c
 44292  0137C4  0012               	return	
 44293  0137C6                     __end_of_display_get_character:
 44294                           	opt stack 0
 44295                           tosu	equ	0xFFF
 44296                           tosh	equ	0xFFE
 44297                           tosl	equ	0xFFD
 44298                           pclath	equ	0xFFA
 44299                           tblptru	equ	0xFF8
 44300                           tblptrh	equ	0xFF7
 44301                           tblptrl	equ	0xFF6
 44302                           tablat	equ	0xFF5
 44303                           prodh	equ	0xFF4
 44304                           prodl	equ	0xFF3
 44305                           intcon	equ	0xFF2
 44306                           intcon2	equ	0xFF1
 44307                           intcon3	equ	0xFF0
 44308                           postinc0	equ	0xFEE
 44309                           wreg	equ	0xFE8
 44310                           indf1	equ	0xFE7
 44311                           postinc1	equ	0xFE6
 44312                           postdec1	equ	0xFE5
 44313                           plusw1	equ	0xFE3
 44314                           fsr1h	equ	0xFE2
 44315                           fsr1l	equ	0xFE1
 44316                           indf2	equ	0xFDF
 44317                           postinc2	equ	0xFDE
 44318                           postdec2	equ	0xFDD
 44319                           plusw2	equ	0xFDB
 44320                           fsr2h	equ	0xFDA
 44321                           fsr2l	equ	0xFD9
 44322                           status	equ	0xFD8
 44323                           
 44324 ;; *************** function __fill_buffer_get_calibration2 *****************
 44325 ;; Defined at:
 44326 ;;		line 388 in file "app_device_custom_hid.c"
 44327 ;; Parameters:    Size  Location     Type
 44328 ;;		None
 44329 ;; Auto vars:     Size  Location     Type
 44330 ;;		None
 44331 ;; Return value:  Size  Location     Type
 44332 ;;                  1    wreg      void 
 44333 ;; Registers used:
 44334 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44335 ;; Tracked objects:
 44336 ;;		On entry : 0/0
 44337 ;;		On exit  : 0/0
 44338 ;;		Unchanged: 0/0
 44339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44344 ;;Total ram usage:        0 bytes
 44345 ;; Hardware stack levels used:    1
 44346 ;; Hardware stack levels required when called:   11
 44347 ;; This function calls:
 44348 ;;		_memcpy
 44349 ;; This function is called by:
 44350 ;;		_APP_DeviceCustomHIDTasks
 44351 ;; This function uses a non-reentrant model
 44352 ;;
 44353                           
 44354                           	psect	text209
 44355  012396                     __ptext209:
 44356                           	opt stack 0
 44357  012396                     __fill_buffer_get_calibration2:
 44358                           	opt stack 18
 44359                           
 44360                           ;app_device_custom_hid.c: 391: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 44361                           
 44362                           ; BSR set to: 0
 44363                           ;incstack = 0
 44364  012396  0E14               	movlw	20
 44365  012398  0103               	movlb	3	; () banked
 44366  01239A  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 44367                           
 44368                           ; BSR set to: 3
 44369                           ;app_device_custom_hid.c: 393: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 44370  01239C  0EA5               	movlw	low (_ToSendDataBuffer+1)
 44371  01239E  0100               	movlb	0	; () banked
 44372  0123A0  6F60               	movwf	memcpy@d1& (0+255),b
 44373  0123A2  0E03               	movlw	high (_ToSendDataBuffer+1)
 44374  0123A4  0100               	movlb	0	; () banked
 44375  0123A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44376  0123A8  0E30               	movlw	low (_calibrationParameters+48)
 44377  0123AA  0100               	movlb	0	; () banked
 44378  0123AC  6F62               	movwf	memcpy@s1& (0+255),b
 44379  0123AE  0E03               	movlw	high (_calibrationParameters+48)
 44380  0123B0  0100               	movlb	0	; () banked
 44381  0123B2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44382  0123B4  0E00               	movlw	0
 44383  0123B6  0100               	movlb	0	; () banked
 44384  0123B8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44385  0123BA  0E0C               	movlw	12
 44386  0123BC  6F64               	movwf	memcpy@n& (0+255),b
 44387  0123BE  EC55  F095         	call	_memcpy	;wreg free
 44388                           
 44389                           ;app_device_custom_hid.c: 394: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 44390  0123C2  0EB1               	movlw	low (_ToSendDataBuffer+13)
 44391  0123C4  0100               	movlb	0	; () banked
 44392  0123C6  6F60               	movwf	memcpy@d1& (0+255),b
 44393  0123C8  0E03               	movlw	high (_ToSendDataBuffer+13)
 44394  0123CA  0100               	movlb	0	; () banked
 44395  0123CC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44396  0123CE  0E3C               	movlw	low (_calibrationParameters+60)
 44397  0123D0  0100               	movlb	0	; () banked
 44398  0123D2  6F62               	movwf	memcpy@s1& (0+255),b
 44399  0123D4  0E03               	movlw	high (_calibrationParameters+60)
 44400  0123D6  0100               	movlb	0	; () banked
 44401  0123D8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44402  0123DA  0E00               	movlw	0
 44403  0123DC  0100               	movlb	0	; () banked
 44404  0123DE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44405  0123E0  0E0C               	movlw	12
 44406  0123E2  6F64               	movwf	memcpy@n& (0+255),b
 44407  0123E4  EC55  F095         	call	_memcpy	;wreg free
 44408                           
 44409                           ;app_device_custom_hid.c: 395: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 44410  0123E8  0EBD               	movlw	low (_ToSendDataBuffer+25)
 44411  0123EA  0100               	movlb	0	; () banked
 44412  0123EC  6F60               	movwf	memcpy@d1& (0+255),b
 44413  0123EE  0E03               	movlw	high (_ToSendDataBuffer+25)
 44414  0123F0  0100               	movlb	0	; () banked
 44415  0123F2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44416  0123F4  0E48               	movlw	low (_calibrationParameters+72)
 44417  0123F6  0100               	movlb	0	; () banked
 44418  0123F8  6F62               	movwf	memcpy@s1& (0+255),b
 44419  0123FA  0E03               	movlw	high (_calibrationParameters+72)
 44420  0123FC  0100               	movlb	0	; () banked
 44421  0123FE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44422  012400  0E00               	movlw	0
 44423  012402  0100               	movlb	0	; () banked
 44424  012404  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44425  012406  0E0C               	movlw	12
 44426  012408  6F64               	movwf	memcpy@n& (0+255),b
 44427  01240A  EC55  F095         	call	_memcpy	;wreg free
 44428  01240E  0012               	return		;funcret
 44429  012410                     __end_of__fill_buffer_get_calibration2:
 44430                           	opt stack 0
 44431                           tosu	equ	0xFFF
 44432                           tosh	equ	0xFFE
 44433                           tosl	equ	0xFFD
 44434                           pclath	equ	0xFFA
 44435                           tblptru	equ	0xFF8
 44436                           tblptrh	equ	0xFF7
 44437                           tblptrl	equ	0xFF6
 44438                           tablat	equ	0xFF5
 44439                           prodh	equ	0xFF4
 44440                           prodl	equ	0xFF3
 44441                           intcon	equ	0xFF2
 44442                           intcon2	equ	0xFF1
 44443                           intcon3	equ	0xFF0
 44444                           postinc0	equ	0xFEE
 44445                           wreg	equ	0xFE8
 44446                           indf1	equ	0xFE7
 44447                           postinc1	equ	0xFE6
 44448                           postdec1	equ	0xFE5
 44449                           plusw1	equ	0xFE3
 44450                           fsr1h	equ	0xFE2
 44451                           fsr1l	equ	0xFE1
 44452                           indf2	equ	0xFDF
 44453                           postinc2	equ	0xFDE
 44454                           postdec2	equ	0xFDD
 44455                           plusw2	equ	0xFDB
 44456                           fsr2h	equ	0xFDA
 44457                           fsr2l	equ	0xFD9
 44458                           status	equ	0xFD8
 44459                           
 44460 ;; *************** function __fill_buffer_get_calibration1 *****************
 44461 ;; Defined at:
 44462 ;;		line 376 in file "app_device_custom_hid.c"
 44463 ;; Parameters:    Size  Location     Type
 44464 ;;		None
 44465 ;; Auto vars:     Size  Location     Type
 44466 ;;		None
 44467 ;; Return value:  Size  Location     Type
 44468 ;;                  1    wreg      void 
 44469 ;; Registers used:
 44470 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44471 ;; Tracked objects:
 44472 ;;		On entry : 0/0
 44473 ;;		On exit  : 0/0
 44474 ;;		Unchanged: 0/0
 44475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44480 ;;Total ram usage:        0 bytes
 44481 ;; Hardware stack levels used:    1
 44482 ;; Hardware stack levels required when called:   11
 44483 ;; This function calls:
 44484 ;;		_memcpy
 44485 ;; This function is called by:
 44486 ;;		_APP_DeviceCustomHIDTasks
 44487 ;; This function uses a non-reentrant model
 44488 ;;
 44489                           
 44490                           	psect	text210
 44491  0115C0                     __ptext210:
 44492                           	opt stack 0
 44493  0115C0                     __fill_buffer_get_calibration1:
 44494                           	opt stack 18
 44495                           
 44496                           ;app_device_custom_hid.c: 379: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 44497                           
 44498                           ;incstack = 0
 44499  0115C0  0E13               	movlw	19
 44500  0115C2  0103               	movlb	3	; () banked
 44501  0115C4  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 44502                           
 44503                           ; BSR set to: 3
 44504                           ;app_device_custom_hid.c: 381: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 44505  0115C6  0EA5               	movlw	low (_ToSendDataBuffer+1)
 44506  0115C8  0100               	movlb	0	; () banked
 44507  0115CA  6F60               	movwf	memcpy@d1& (0+255),b
 44508  0115CC  0E03               	movlw	high (_ToSendDataBuffer+1)
 44509  0115CE  0100               	movlb	0	; () banked
 44510  0115D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44511  0115D2  0E00               	movlw	low _calibrationParameters
 44512  0115D4  0100               	movlb	0	; () banked
 44513  0115D6  6F62               	movwf	memcpy@s1& (0+255),b
 44514  0115D8  0E03               	movlw	high _calibrationParameters
 44515  0115DA  0100               	movlb	0	; () banked
 44516  0115DC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44517  0115DE  0E00               	movlw	0
 44518  0115E0  0100               	movlb	0	; () banked
 44519  0115E2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44520  0115E4  0E0C               	movlw	12
 44521  0115E6  6F64               	movwf	memcpy@n& (0+255),b
 44522  0115E8  EC55  F095         	call	_memcpy	;wreg free
 44523                           
 44524                           ;app_device_custom_hid.c: 382: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 44525  0115EC  0EB1               	movlw	low (_ToSendDataBuffer+13)
 44526  0115EE  0100               	movlb	0	; () banked
 44527  0115F0  6F60               	movwf	memcpy@d1& (0+255),b
 44528  0115F2  0E03               	movlw	high (_ToSendDataBuffer+13)
 44529  0115F4  0100               	movlb	0	; () banked
 44530  0115F6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44531  0115F8  0E0C               	movlw	low (_calibrationParameters+12)
 44532  0115FA  0100               	movlb	0	; () banked
 44533  0115FC  6F62               	movwf	memcpy@s1& (0+255),b
 44534  0115FE  0E03               	movlw	high (_calibrationParameters+12)
 44535  011600  0100               	movlb	0	; () banked
 44536  011602  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44537  011604  0E00               	movlw	0
 44538  011606  0100               	movlb	0	; () banked
 44539  011608  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44540  01160A  0E0C               	movlw	12
 44541  01160C  6F64               	movwf	memcpy@n& (0+255),b
 44542  01160E  EC55  F095         	call	_memcpy	;wreg free
 44543                           
 44544                           ;app_device_custom_hid.c: 383: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 44545  011612  0EBD               	movlw	low (_ToSendDataBuffer+25)
 44546  011614  0100               	movlb	0	; () banked
 44547  011616  6F60               	movwf	memcpy@d1& (0+255),b
 44548  011618  0E03               	movlw	high (_ToSendDataBuffer+25)
 44549  01161A  0100               	movlb	0	; () banked
 44550  01161C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44551  01161E  0E18               	movlw	low (_calibrationParameters+24)
 44552  011620  0100               	movlb	0	; () banked
 44553  011622  6F62               	movwf	memcpy@s1& (0+255),b
 44554  011624  0E03               	movlw	high (_calibrationParameters+24)
 44555  011626  0100               	movlb	0	; () banked
 44556  011628  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44557  01162A  0E00               	movlw	0
 44558  01162C  0100               	movlb	0	; () banked
 44559  01162E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44560  011630  0E0C               	movlw	12
 44561  011632  6F64               	movwf	memcpy@n& (0+255),b
 44562  011634  EC55  F095         	call	_memcpy	;wreg free
 44563                           
 44564                           ;app_device_custom_hid.c: 384: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 44565  011638  0EC9               	movlw	low (_ToSendDataBuffer+37)
 44566  01163A  0100               	movlb	0	; () banked
 44567  01163C  6F60               	movwf	memcpy@d1& (0+255),b
 44568  01163E  0E03               	movlw	high (_ToSendDataBuffer+37)
 44569  011640  0100               	movlb	0	; () banked
 44570  011642  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44571  011644  0E24               	movlw	low (_calibrationParameters+36)
 44572  011646  0100               	movlb	0	; () banked
 44573  011648  6F62               	movwf	memcpy@s1& (0+255),b
 44574  01164A  0E03               	movlw	high (_calibrationParameters+36)
 44575  01164C  0100               	movlb	0	; () banked
 44576  01164E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44577  011650  0E00               	movlw	0
 44578  011652  0100               	movlb	0	; () banked
 44579  011654  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44580  011656  0E0C               	movlw	12
 44581  011658  6F64               	movwf	memcpy@n& (0+255),b
 44582  01165A  EC55  F095         	call	_memcpy	;wreg free
 44583  01165E  0012               	return		;funcret
 44584  011660                     __end_of__fill_buffer_get_calibration1:
 44585                           	opt stack 0
 44586                           tosu	equ	0xFFF
 44587                           tosh	equ	0xFFE
 44588                           tosl	equ	0xFFD
 44589                           pclath	equ	0xFFA
 44590                           tblptru	equ	0xFF8
 44591                           tblptrh	equ	0xFF7
 44592                           tblptrl	equ	0xFF6
 44593                           tablat	equ	0xFF5
 44594                           prodh	equ	0xFF4
 44595                           prodl	equ	0xFF3
 44596                           intcon	equ	0xFF2
 44597                           intcon2	equ	0xFF1
 44598                           intcon3	equ	0xFF0
 44599                           postinc0	equ	0xFEE
 44600                           wreg	equ	0xFE8
 44601                           indf1	equ	0xFE7
 44602                           postinc1	equ	0xFE6
 44603                           postdec1	equ	0xFE5
 44604                           plusw1	equ	0xFE3
 44605                           fsr1h	equ	0xFE2
 44606                           fsr1l	equ	0xFE1
 44607                           indf2	equ	0xFDF
 44608                           postinc2	equ	0xFDE
 44609                           postdec2	equ	0xFDD
 44610                           plusw2	equ	0xFDB
 44611                           fsr2h	equ	0xFDA
 44612                           fsr2l	equ	0xFD9
 44613                           status	equ	0xFD8
 44614                           
 44615 ;; *************** function _memcpy *****************
 44616 ;; Defined at:
 44617 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 44618 ;; Parameters:    Size  Location     Type
 44619 ;;  d1              2    0[BANK0 ] PTR void 
 44620 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44621 ;;		 -> SetupPkt(8), 
 44622 ;;  s1              2    2[BANK0 ] PTR const void 
 44623 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44624 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44625 ;;		 -> SetupPkt(8), 
 44626 ;;  n               2    4[BANK0 ] unsigned int 
 44627 ;; Auto vars:     Size  Location     Type
 44628 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 44629 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44630 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44631 ;;		 -> SetupPkt(8), 
 44632 ;;  d               2    7[BANK0 ] PTR unsigned char 
 44633 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44634 ;;		 -> SetupPkt(8), 
 44635 ;;  tmp             1    6[BANK0 ] unsigned char 
 44636 ;; Return value:  Size  Location     Type
 44637 ;;                  2    0[BANK0 ] PTR void 
 44638 ;; Registers used:
 44639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44640 ;; Tracked objects:
 44641 ;;		On entry : 0/0
 44642 ;;		On exit  : 0/0
 44643 ;;		Unchanged: 0/0
 44644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44645 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44646 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44648 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44649 ;;Total ram usage:       11 bytes
 44650 ;; Hardware stack levels used:    1
 44651 ;; Hardware stack levels required when called:   10
 44652 ;; This function calls:
 44653 ;;		Nothing
 44654 ;; This function is called by:
 44655 ;;		_MSDProcessCommandMediaPresent
 44656 ;;		__fill_buffer_get_calibration1
 44657 ;;		__fill_buffer_get_calibration2
 44658 ;;		__flash_set_page_size
 44659 ;;		_fat_create_file
 44660 ;; This function uses a non-reentrant model
 44661 ;;
 44662                           
 44663                           	psect	text211
 44664  012AAA                     __ptext211:
 44665                           	opt stack 0
 44666  012AAA                     _memcpy:
 44667                           	opt stack 17
 44668                           
 44669                           ;incstack = 0
 44670  012AAA  C062  F069         	movff	memcpy@s1,memcpy@s
 44671  012AAE  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 44672  012AB2  C060  F067         	movff	memcpy@d1,memcpy@d
 44673  012AB6  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 44674  012ABA  D01F               	goto	l18115
 44675  012ABC                     l18107:
 44676  012ABC  C069  FFF6         	movff	memcpy@s,tblptrl
 44677  012AC0  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 44678  012AC4  0E00               	movlw	low (__mediumconst shr (0+16))
 44679  012AC6  6EF8               	movwf	tblptru,c
 44680  012AC8  0E0E               	movlw	(high __ramtop+-1)
 44681  012ACA  64F7               	cpfsgt	tblptrh,c
 44682  012ACC  D003               	bra	u16847
 44683  012ACE  0008               	tblrd		*
 44684  012AD0  50F5               	movf	tablat,w,c
 44685  012AD2  D005               	bra	u16840
 44686  012AD4                     u16847:
 44687  012AD4  CFF6 FFE9          	movff	tblptrl,fsr0l
 44688  012AD8  CFF7 FFEA          	movff	tblptrh,fsr0h
 44689  012ADC  50EF               	movf	indf0,w,c
 44690  012ADE                     u16840:
 44691  012ADE  0100               	movlb	0	; () banked
 44692  012AE0  6F66               	movwf	memcpy@tmp& (0+255),b
 44693                           
 44694                           ; BSR set to: 0
 44695  012AE2  0100               	movlb	0	; () banked
 44696  012AE4  4B69               	infsnz	memcpy@s& (0+255),f,b
 44697  012AE6  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 44698                           
 44699                           ; BSR set to: 0
 44700  012AE8  C067  FFD9         	movff	memcpy@d,fsr2l
 44701  012AEC  C068  FFDA         	movff	memcpy@d+1,fsr2h
 44702  012AF0  C066  FFDF         	movff	memcpy@tmp,indf2
 44703                           
 44704                           ; BSR set to: 0
 44705  012AF4  0100               	movlb	0	; () banked
 44706  012AF6  4B67               	infsnz	memcpy@d& (0+255),f,b
 44707  012AF8  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 44708  012AFA                     l18115:
 44709  012AFA  0100               	movlb	0	; () banked
 44710  012AFC  0764               	decf	memcpy@n& (0+255),f,b
 44711  012AFE  A0D8               	btfss	status,0,c
 44712  012B00  0765               	decf	(memcpy@n+1)& (0+255),f,b
 44713  012B02  0100               	movlb	0	; () banked
 44714  012B04  2964               	incf	memcpy@n& (0+255),w,b
 44715  012B06  E1DA               	bnz	l18107
 44716  012B08  0100               	movlb	0	; () banked
 44717  012B0A  2965               	incf	(memcpy@n+1)& (0+255),w,b
 44718  012B0C  B4D8               	btfsc	status,2,c
 44719  012B0E  0012               	return	
 44720  012B10  D7D5               	goto	l18107
 44721  012B12                     __end_of_memcpy:
 44722                           	opt stack 0
 44723                           tosu	equ	0xFFF
 44724                           tosh	equ	0xFFE
 44725                           tosl	equ	0xFFD
 44726                           pclath	equ	0xFFA
 44727                           tblptru	equ	0xFF8
 44728                           tblptrh	equ	0xFF7
 44729                           tblptrl	equ	0xFF6
 44730                           tablat	equ	0xFF5
 44731                           prodh	equ	0xFF4
 44732                           prodl	equ	0xFF3
 44733                           intcon	equ	0xFF2
 44734                           intcon2	equ	0xFF1
 44735                           intcon3	equ	0xFF0
 44736                           indf0	equ	0xFEF
 44737                           postinc0	equ	0xFEE
 44738                           fsr0h	equ	0xFEA
 44739                           fsr0l	equ	0xFE9
 44740                           wreg	equ	0xFE8
 44741                           indf1	equ	0xFE7
 44742                           postinc1	equ	0xFE6
 44743                           postdec1	equ	0xFE5
 44744                           plusw1	equ	0xFE3
 44745                           fsr1h	equ	0xFE2
 44746                           fsr1l	equ	0xFE1
 44747                           indf2	equ	0xFDF
 44748                           postinc2	equ	0xFDE
 44749                           postdec2	equ	0xFDD
 44750                           plusw2	equ	0xFDB
 44751                           fsr2h	equ	0xFDA
 44752                           fsr2l	equ	0xFD9
 44753                           status	equ	0xFD8
 44754                           
 44755 ;; *************** function _USBTransferOnePacket *****************
 44756 ;; Defined at:
 44757 ;;		line 995 in file "usb_device.c"
 44758 ;; Parameters:    Size  Location     Type
 44759 ;;  ep              1    wreg     unsigned char 
 44760 ;;  dir             1    0[BANK0 ] unsigned char 
 44761 ;;  data            2    1[BANK0 ] PTR unsigned char 
 44762 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 44763 ;;		 -> msd_cbw(31), NULL(0), 
 44764 ;;  len             1    3[BANK0 ] unsigned char 
 44765 ;; Auto vars:     Size  Location     Type
 44766 ;;  ep              1    8[BANK0 ] unsigned char 
 44767 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 44768 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 44769 ;; Return value:  Size  Location     Type
 44770 ;;                  2    0[BANK0 ] PTR void 
 44771 ;; Registers used:
 44772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44773 ;; Tracked objects:
 44774 ;;		On entry : 0/0
 44775 ;;		On exit  : 0/0
 44776 ;;		Unchanged: 0/0
 44777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44779 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44780 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44781 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44782 ;;Total ram usage:       11 bytes
 44783 ;; Hardware stack levels used:    1
 44784 ;; Hardware stack levels required when called:   10
 44785 ;; This function calls:
 44786 ;;		Nothing
 44787 ;; This function is called by:
 44788 ;;		_MSDTasks
 44789 ;;		_MSDProcessCommandMediaPresent
 44790 ;;		_MSDReadHandler
 44791 ;;		_MSDWriteHandler
 44792 ;;		_APP_DeviceCustomHIDTasks
 44793 ;; This function uses a non-reentrant model
 44794 ;;
 44795                           
 44796                           	psect	text212
 44797  00EED6                     __ptext212:
 44798                           	opt stack 0
 44799  00EED6                     _USBTransferOnePacket:
 44800                           	opt stack 18
 44801                           
 44802                           ; BSR set to: 0
 44803                           ;incstack = 0
 44804                           ;USBTransferOnePacket@ep stored from wreg
 44805  00EED6  0100               	movlb	0	; () banked
 44806  00EED8  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 44807                           
 44808                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 44809                           ;usb_device.c: 1000: if(dir != 0)
 44810  00EEDA  0100               	movlb	0	; () banked
 44811  00EEDC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44812  00EEDE  0100               	movlb	0	; () banked
 44813  00EEE0  B4D8               	btfsc	status,2,c
 44814  00EEE2  D008               	goto	l17927
 44815                           
 44816                           ; BSR set to: 0
 44817                           ;usb_device.c: 1001: {
 44818                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44819  00EEE4  0100               	movlb	0	; () banked
 44820  00EEE6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44821  00EEE8  0D02               	mullw	2
 44822  00EEEA  0E10               	movlw	low _pBDTEntryIn
 44823  00EEEC  24F3               	addwf	prodl,w,c
 44824  00EEEE  6ED9               	movwf	fsr2l,c
 44825  00EEF0  0E00               	movlw	high _pBDTEntryIn
 44826  00EEF2  D007               	goto	L49
 44827  00EEF4                     l17927:
 44828                           
 44829                           ; BSR set to: 0
 44830                           ;usb_device.c: 1005: else
 44831                           ;usb_device.c: 1006: {
 44832                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 44833  00EEF4  0100               	movlb	0	; () banked
 44834  00EEF6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44835  00EEF8  0D02               	mullw	2
 44836  00EEFA  0ED3               	movlw	low _pBDTEntryOut
 44837  00EEFC  24F3               	addwf	prodl,w,c
 44838  00EEFE  6ED9               	movwf	fsr2l,c
 44839  00EF00  0E01               	movlw	high _pBDTEntryOut
 44840  00EF02                     L49:
 44841  00EF02  20F4               	addwfc	prodh,w,c
 44842  00EF04  6EDA               	movwf	fsr2h,c
 44843  00EF06  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 44844  00EF0A  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 44845                           
 44846                           ; BSR set to: 0
 44847                           ;usb_device.c: 1009: }
 44848                           ;usb_device.c: 1013: if(handle == 0)
 44849                           
 44850                           ; BSR set to: 0
 44851  00EF0E  0100               	movlb	0	; () banked
 44852  00EF10  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44853  00EF12  0100               	movlb	0	; () banked
 44854  00EF14  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44855  00EF16  A4D8               	btfss	status,2,c
 44856  00EF18  D007               	goto	l17935
 44857                           
 44858                           ; BSR set to: 0
 44859                           ;usb_device.c: 1014: {
 44860                           ;usb_device.c: 1015: return 0;
 44861  00EF1A  0E00               	movlw	0
 44862  00EF1C  0100               	movlb	0	; () banked
 44863  00EF1E  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 44864  00EF20  0E00               	movlw	0
 44865  00EF22  0100               	movlb	0	; () banked
 44866  00EF24  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 44867                           
 44868                           ; BSR set to: 0
 44869  00EF26  0012               	return	
 44870  00EF28                     l17935:
 44871                           
 44872                           ; BSR set to: 0
 44873                           ;usb_device.c: 1016: }
 44874                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44875  00EF28  0100               	movlb	0	; () banked
 44876  00EF2A  EE20 F002          	lfsr	2,2
 44877  00EF2E  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44878  00EF30  26D9               	addwf	fsr2l,f,c
 44879  00EF32  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44880  00EF34  22DA               	addwfc	fsr2h,f,c
 44881  00EF36  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44882  00EF3A  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44883                           
 44884                           ;usb_device.c: 1030: handle->CNT = len;
 44885  00EF3E  0100               	movlb	0	; () banked
 44886  00EF40  EE20 F001          	lfsr	2,1
 44887  00EF44  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44888  00EF46  26D9               	addwf	fsr2l,f,c
 44889  00EF48  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44890  00EF4A  22DA               	addwfc	fsr2h,f,c
 44891  00EF4C  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 44892                           
 44893                           ; BSR set to: 0
 44894                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44895  00EF50  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44896  00EF54  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44897  00EF58  0E40               	movlw	64
 44898  00EF5A  16DF               	andwf	indf2,f,c
 44899                           
 44900                           ; BSR set to: 0
 44901                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44902  00EF5C  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44903  00EF60  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44904  00EF64  0E00               	movlw	0
 44905  00EF66  86DB               	bsf	plusw2,3,c
 44906                           
 44907                           ; BSR set to: 0
 44908                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44909  00EF68  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44910  00EF6C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44911  00EF70  0E00               	movlw	0
 44912  00EF72  8EDB               	bsf	plusw2,7,c
 44913                           
 44914                           ; BSR set to: 0
 44915                           ;usb_device.c: 1036: if(dir != 0)
 44916  00EF74  0100               	movlb	0	; () banked
 44917  00EF76  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44918  00EF78  0100               	movlb	0	; () banked
 44919  00EF7A  B4D8               	btfsc	status,2,c
 44920  00EF7C  D01E               	goto	l17947
 44921                           
 44922                           ; BSR set to: 0
 44923                           ;usb_device.c: 1037: {
 44924                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 44925  00EF7E  0100               	movlb	0	; () banked
 44926  00EF80  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44927  00EF82  0D02               	mullw	2
 44928  00EF84  0E10               	movlw	low _pBDTEntryIn
 44929  00EF86  24F3               	addwf	prodl,w,c
 44930  00EF88  6ED9               	movwf	fsr2l,c
 44931  00EF8A  0E00               	movlw	high _pBDTEntryIn
 44932  00EF8C  20F4               	addwfc	prodh,w,c
 44933  00EF8E  6EDA               	movwf	fsr2h,c
 44934  00EF90  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44935  00EF94  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44936  00EF98  0E04               	movlw	4
 44937  00EF9A  0100               	movlb	0	; () banked
 44938  00EF9C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44939  00EF9E  0100               	movlb	0	; () banked
 44940  00EFA0  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44941  00EFA2  0100               	movlb	0	; () banked
 44942  00EFA4  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44943  00EFA6  0100               	movlb	0	; () banked
 44944  00EFA8  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44945  00EFAA  0100               	movlb	0	; () banked
 44946  00EFAC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44947  00EFAE  0D02               	mullw	2
 44948  00EFB0  0E10               	movlw	low _pBDTEntryIn
 44949  00EFB2  24F3               	addwf	prodl,w,c
 44950  00EFB4  6ED9               	movwf	fsr2l,c
 44951  00EFB6  0E00               	movlw	high _pBDTEntryIn
 44952  00EFB8  D01D               	goto	L50
 44953  00EFBA                     l17947:
 44954                           
 44955                           ; BSR set to: 0
 44956                           ;usb_device.c: 1041: else
 44957                           ;usb_device.c: 1042: {
 44958                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 44959  00EFBA  0100               	movlb	0	; () banked
 44960  00EFBC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44961  00EFBE  0D02               	mullw	2
 44962  00EFC0  0ED3               	movlw	low _pBDTEntryOut
 44963  00EFC2  24F3               	addwf	prodl,w,c
 44964  00EFC4  6ED9               	movwf	fsr2l,c
 44965  00EFC6  0E01               	movlw	high _pBDTEntryOut
 44966  00EFC8  20F4               	addwfc	prodh,w,c
 44967  00EFCA  6EDA               	movwf	fsr2h,c
 44968  00EFCC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44969  00EFD0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44970  00EFD4  0E04               	movlw	4
 44971  00EFD6  0100               	movlb	0	; () banked
 44972  00EFD8  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44973  00EFDA  0100               	movlb	0	; () banked
 44974  00EFDC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44975  00EFDE  0100               	movlb	0	; () banked
 44976  00EFE0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44977  00EFE2  0100               	movlb	0	; () banked
 44978  00EFE4  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44979  00EFE6  0100               	movlb	0	; () banked
 44980  00EFE8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44981  00EFEA  0D02               	mullw	2
 44982  00EFEC  0ED3               	movlw	low _pBDTEntryOut
 44983  00EFEE  24F3               	addwf	prodl,w,c
 44984  00EFF0  6ED9               	movwf	fsr2l,c
 44985  00EFF2  0E01               	movlw	high _pBDTEntryOut
 44986  00EFF4                     L50:
 44987  00EFF4  20F4               	addwfc	prodh,w,c
 44988  00EFF6  6EDA               	movwf	fsr2h,c
 44989  00EFF8  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44990  00EFFC  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44991                           
 44992                           ; BSR set to: 0
 44993                           ;usb_device.c: 1045: }
 44994                           ;usb_device.c: 1046: return (void*)handle;
 44995                           
 44996                           ; BSR set to: 0
 44997  00F000  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44998  00F004  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44999  00F008  0012               	return	
 45000  00F00A                     __end_of_USBTransferOnePacket:
 45001                           	opt stack 0
 45002                           tosu	equ	0xFFF
 45003                           tosh	equ	0xFFE
 45004                           tosl	equ	0xFFD
 45005                           pclath	equ	0xFFA
 45006                           tblptru	equ	0xFF8
 45007                           tblptrh	equ	0xFF7
 45008                           tblptrl	equ	0xFF6
 45009                           tablat	equ	0xFF5
 45010                           prodh	equ	0xFF4
 45011                           prodl	equ	0xFF3
 45012                           intcon	equ	0xFF2
 45013                           intcon2	equ	0xFF1
 45014                           intcon3	equ	0xFF0
 45015                           indf0	equ	0xFEF
 45016                           postinc0	equ	0xFEE
 45017                           fsr0h	equ	0xFEA
 45018                           fsr0l	equ	0xFE9
 45019                           wreg	equ	0xFE8
 45020                           indf1	equ	0xFE7
 45021                           postinc1	equ	0xFE6
 45022                           postdec1	equ	0xFE5
 45023                           plusw1	equ	0xFE3
 45024                           fsr1h	equ	0xFE2
 45025                           fsr1l	equ	0xFE1
 45026                           indf2	equ	0xFDF
 45027                           postinc2	equ	0xFDE
 45028                           postdec2	equ	0xFDD
 45029                           plusw2	equ	0xFDB
 45030                           fsr2h	equ	0xFDA
 45031                           fsr2l	equ	0xFD9
 45032                           status	equ	0xFD8
 45033                           
 45034 ;; *************** function _SYS_InterruptHigh *****************
 45035 ;; Defined at:
 45036 ;;		line 201 in file "system.c"
 45037 ;; Parameters:    Size  Location     Type
 45038 ;;		None
 45039 ;; Auto vars:     Size  Location     Type
 45040 ;;		None
 45041 ;; Return value:  Size  Location     Type
 45042 ;;                  1    wreg      void 
 45043 ;; Registers used:
 45044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45045 ;; Tracked objects:
 45046 ;;		On entry : 0/0
 45047 ;;		On exit  : 0/0
 45048 ;;		Unchanged: 0/0
 45049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45052 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45053 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45054 ;;Total ram usage:       14 bytes
 45055 ;; Hardware stack levels used:    1
 45056 ;; Hardware stack levels required when called:    9
 45057 ;; This function calls:
 45058 ;;		_USBDeviceTasks
 45059 ;;		_tmr_isr
 45060 ;; This function is called by:
 45061 ;;		Interrupt level 2
 45062 ;; This function uses a non-reentrant model
 45063 ;;
 45064                           
 45065                           	psect	intcode
 45066  009008                     __pintcode:
 45067                           	opt stack 0
 45068  009008                     _SYS_InterruptHigh:
 45069                           	opt stack 9
 45070                           
 45071                           ; BSR set to: 0
 45072                           ;incstack = 0
 45073  009008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 45074  00900A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 45075  00900E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 45076  009012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 45077  009016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 45078  00901A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 45079  00901E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 45080  009022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 45081  009026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 45082  00902A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 45083  00902E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 45084  009032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 45085  009036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 45086  00903A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 45087  00903E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 45088                           
 45089                           ;system.c: 204: USBDeviceTasks();
 45090  009042  EC84  F075         	call	_USBDeviceTasks	;wreg free
 45091                           
 45092                           ;system.c: 208: tmr_isr();
 45093  009046  EC7F  F08B         	call	_tmr_isr	;wreg free
 45094  00904A  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 45095  00904E  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 45096  009052  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 45097  009056  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 45098  00905A  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 45099  00905E  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 45100  009062  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 45101  009066  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 45102  00906A  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 45103  00906E  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 45104  009072  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 45105  009076  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 45106  00907A  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 45107  00907E  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 45108  009082  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 45109  009084  0011               	retfie		f
 45110  009086                     __end_of_SYS_InterruptHigh:
 45111                           	opt stack 0
 45112                           tosu	equ	0xFFF
 45113                           tosh	equ	0xFFE
 45114                           tosl	equ	0xFFD
 45115                           pclatu	equ	0xFFB
 45116                           pclath	equ	0xFFA
 45117                           tblptru	equ	0xFF8
 45118                           tblptrh	equ	0xFF7
 45119                           tblptrl	equ	0xFF6
 45120                           tablat	equ	0xFF5
 45121                           prodh	equ	0xFF4
 45122                           prodl	equ	0xFF3
 45123                           intcon	equ	0xFF2
 45124                           intcon2	equ	0xFF1
 45125                           intcon3	equ	0xFF0
 45126                           indf0	equ	0xFEF
 45127                           postinc0	equ	0xFEE
 45128                           fsr0h	equ	0xFEA
 45129                           fsr0l	equ	0xFE9
 45130                           wreg	equ	0xFE8
 45131                           indf1	equ	0xFE7
 45132                           postinc1	equ	0xFE6
 45133                           postdec1	equ	0xFE5
 45134                           plusw1	equ	0xFE3
 45135                           fsr1h	equ	0xFE2
 45136                           fsr1l	equ	0xFE1
 45137                           indf2	equ	0xFDF
 45138                           postinc2	equ	0xFDE
 45139                           postdec2	equ	0xFDD
 45140                           plusw2	equ	0xFDB
 45141                           fsr2h	equ	0xFDA
 45142                           fsr2l	equ	0xFD9
 45143                           status	equ	0xFD8
 45144                           
 45145 ;; *************** function _tmr_isr *****************
 45146 ;; Defined at:
 45147 ;;		line 46 in file "os.c"
 45148 ;; Parameters:    Size  Location     Type
 45149 ;;		None
 45150 ;; Auto vars:     Size  Location     Type
 45151 ;;		None
 45152 ;; Return value:  Size  Location     Type
 45153 ;;                  1    wreg      void 
 45154 ;; Registers used:
 45155 ;;		wreg, status,2, status,0
 45156 ;; Tracked objects:
 45157 ;;		On entry : 0/0
 45158 ;;		On exit  : 0/0
 45159 ;;		Unchanged: 0/0
 45160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45165 ;;Total ram usage:        0 bytes
 45166 ;; Hardware stack levels used:    1
 45167 ;; This function calls:
 45168 ;;		Nothing
 45169 ;; This function is called by:
 45170 ;;		_SYS_InterruptHigh
 45171 ;; This function uses a non-reentrant model
 45172 ;;
 45173                           
 45174                           	psect	text214
 45175  0116FE                     __ptext214:
 45176                           	opt stack 0
 45177  0116FE                     _tmr_isr:
 45178                           	opt stack 17
 45179                           
 45180                           ;os.c: 49: if(INTCONbits.T0IF)
 45181                           
 45182                           ;incstack = 0
 45183  0116FE  A4F2               	btfss	intcon,2,c	;volatile
 45184  011700  D039               	goto	i2l1322
 45185                           
 45186                           ;os.c: 50: {
 45187                           ;os.c: 52: if(os.done)
 45188  011702  0102               	movlb	2	; () banked
 45189  011704  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 45190  011706  A4D8               	btfss	status,2,c
 45191  011708  D00D               	goto	i2l16915
 45192  01170A  D028               	goto	i2l16929
 45193  01170C                     i2l1325:
 45194                           
 45195                           ; BSR set to: 2
 45196                           ;os.c: 58: TMR0H = 0xFF;
 45197  01170C  68D7               	setf	4055,c	;volatile
 45198                           
 45199                           ; BSR set to: 2
 45200                           ;os.c: 59: TMR0L = 0x80;
 45201  01170E  0E80               	movlw	128
 45202  011710  D007               	goto	L52
 45203  011712                     i2l16909:
 45204                           
 45205                           ; BSR set to: 2
 45206                           ;os.c: 62: TMR0H = 0xF8;
 45207  011712  0EF8               	movlw	248
 45208  011714  6ED7               	movwf	4055,c	;volatile
 45209                           
 45210                           ;os.c: 63: TMR0L = 0x30;
 45211  011716  0E30               	movlw	48
 45212  011718  D003               	goto	L52
 45213  01171A                     i2l16911:
 45214                           
 45215                           ; BSR set to: 2
 45216                           ;os.c: 66: TMR0H = 0xD1;
 45217  01171A  0ED1               	movlw	209
 45218  01171C  6ED7               	movwf	4055,c	;volatile
 45219                           
 45220                           ;os.c: 67: TMR0L = 0x20;
 45221  01171E  0E20               	movlw	32
 45222  011720                     L52:
 45223  011720  6ED6               	movwf	4054,c	;volatile
 45224                           
 45225                           ; BSR set to: 2
 45226                           ;os.c: 69: }
 45227                           
 45228                           ;os.c: 68: break;
 45229  011722  D00B               	goto	i2l16917
 45230  011724                     i2l16915:
 45231                           
 45232                           ; BSR set to: 2
 45233  011724  0102               	movlb	2	; () banked
 45234  011726  5100               	movf	_os& (0+255),w,b	;volatile
 45235                           
 45236                           ; Switch size 1, requested type "space"
 45237                           ; Number of cases is 3, Range of values is 0 to 2
 45238                           ; switch strategies available:
 45239                           ; Name         Instructions Cycles
 45240                           ; simple_byte           10     6 (average)
 45241                           ;	Chosen strategy is simple_byte
 45242  011728  0A00               	xorlw	0	; case 0
 45243  01172A  B4D8               	btfsc	status,2,c
 45244  01172C  D7EF               	goto	i2l1325
 45245  01172E  0A01               	xorlw	1	; case 1
 45246  011730  B4D8               	btfsc	status,2,c
 45247  011732  D7EF               	goto	i2l16909
 45248  011734  0A03               	xorlw	3	; case 2
 45249  011736  B4D8               	btfsc	status,2,c
 45250  011738  D7F0               	goto	i2l16911
 45251  01173A                     i2l16917:
 45252                           
 45253                           ; BSR set to: 2
 45254                           ;os.c: 71: ++os.timeSlot;
 45255  01173A  0102               	movlb	2	; () banked
 45256  01173C  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 45257                           
 45258                           ; BSR set to: 2
 45259                           ;os.c: 76: os.done = 0;
 45260  01173E  0E00               	movlw	0
 45261  011740  0102               	movlb	2	; () banked
 45262  011742  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 45263                           
 45264                           ;os.c: 77: }
 45265  011744  D016               	goto	i2l1329
 45266  011746                     i2l1331:
 45267                           
 45268                           ; BSR set to: 2
 45269                           ;os.c: 84: TMR0H = 0xFF;
 45270  011746  68D7               	setf	4055,c	;volatile
 45271                           
 45272                           ; BSR set to: 2
 45273                           ;os.c: 85: TMR0L = 0xE0;
 45274  011748  0EE0               	movlw	224
 45275  01174A  D006               	goto	L54
 45276  01174C                     i2l1333:
 45277                           
 45278                           ; BSR set to: 2
 45279                           ;os.c: 88: TMR0H = 0xFF;
 45280  01174C  68D7               	setf	4055,c	;volatile
 45281                           
 45282                           ; BSR set to: 2
 45283                           ;os.c: 89: TMR0L = 0x06;
 45284  01174E  0E06               	movlw	6
 45285  011750  D003               	goto	L54
 45286  011752                     i2l16925:
 45287                           
 45288                           ; BSR set to: 2
 45289                           ;os.c: 92: TMR0H = 0xFA;
 45290  011752  0EFA               	movlw	250
 45291  011754  6ED7               	movwf	4055,c	;volatile
 45292                           
 45293                           ;os.c: 93: TMR0L = 0x24;
 45294  011756  0E24               	movlw	36
 45295  011758                     L54:
 45296  011758  6ED6               	movwf	4054,c	;volatile
 45297                           
 45298                           ; BSR set to: 2
 45299                           ;os.c: 95: }
 45300                           
 45301                           ;os.c: 94: break;
 45302  01175A  D00B               	goto	i2l1329
 45303  01175C                     i2l16929:
 45304                           
 45305                           ; BSR set to: 2
 45306  01175C  0102               	movlb	2	; () banked
 45307  01175E  5100               	movf	_os& (0+255),w,b	;volatile
 45308                           
 45309                           ; Switch size 1, requested type "space"
 45310                           ; Number of cases is 3, Range of values is 0 to 2
 45311                           ; switch strategies available:
 45312                           ; Name         Instructions Cycles
 45313                           ; simple_byte           10     6 (average)
 45314                           ;	Chosen strategy is simple_byte
 45315  011760  0A00               	xorlw	0	; case 0
 45316  011762  B4D8               	btfsc	status,2,c
 45317  011764  D7F0               	goto	i2l1331
 45318  011766  0A01               	xorlw	1	; case 1
 45319  011768  B4D8               	btfsc	status,2,c
 45320  01176A  D7F0               	goto	i2l1333
 45321  01176C  0A03               	xorlw	3	; case 2
 45322  01176E  B4D8               	btfsc	status,2,c
 45323  011770  D7F0               	goto	i2l16925
 45324  011772                     i2l1329:
 45325                           
 45326                           ; BSR set to: 2
 45327                           ;os.c: 96: }
 45328                           ;os.c: 97: INTCONbits.T0IF = 0;
 45329  011772  94F2               	bcf	intcon,2,c	;volatile
 45330  011774                     i2l1322:
 45331                           
 45332                           ;os.c: 98: }
 45333                           ;os.c: 101: if(INTCON3bits.INT1IF)
 45334  011774  A0F0               	btfss	intcon3,0,c	;volatile
 45335  011776  D003               	goto	i2l16935
 45336                           
 45337                           ;os.c: 102: {
 45338                           ;os.c: 103: ++os.buttonCount;
 45339  011778  0102               	movlb	2	; () banked
 45340  01177A  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 45341                           
 45342                           ; BSR set to: 2
 45343                           ;os.c: 104: INTCON3bits.INT1IF = 0;
 45344  01177C  90F0               	bcf	intcon3,0,c	;volatile
 45345  01177E                     i2l16935:
 45346                           
 45347                           ;os.c: 105: }
 45348                           ;os.c: 108: if(INTCON3bits.INT2IF)
 45349  01177E  A2F0               	btfss	intcon3,1,c	;volatile
 45350  011780  D005               	goto	i2l16943
 45351                           
 45352                           ;os.c: 109: {
 45353                           ;os.c: 110: if(!PORTBbits.RB6)
 45354  011782  BC81               	btfsc	3969,6,c	;volatile
 45355  011784  D002               	goto	i2l16941
 45356                           
 45357                           ;os.c: 111: {
 45358                           ;os.c: 112: --os.encoderCount;
 45359  011786  0102               	movlb	2	; () banked
 45360  011788  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 45361  01178A                     i2l16941:
 45362                           
 45363                           ;os.c: 113: }
 45364                           ;os.c: 114: INTCON3bits.INT2IF = 0;
 45365  01178A  92F0               	bcf	intcon3,1,c	;volatile
 45366  01178C                     i2l16943:
 45367                           
 45368                           ;os.c: 115: }
 45369                           ;os.c: 116: if(INTCON3bits.INT3IF)
 45370  01178C  A4F0               	btfss	intcon3,2,c	;volatile
 45371  01178E  0012               	return	
 45372                           
 45373                           ;os.c: 117: {
 45374                           ;os.c: 118: if(!PORTBbits.RB7)
 45375  011790  BE81               	btfsc	3969,7,c	;volatile
 45376  011792  D002               	goto	i2l16949
 45377                           
 45378                           ;os.c: 119: {
 45379                           ;os.c: 120: ++os.encoderCount;
 45380  011794  0102               	movlb	2	; () banked
 45381  011796  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 45382  011798                     i2l16949:
 45383                           
 45384                           ;os.c: 121: }
 45385                           ;os.c: 122: INTCON3bits.INT3IF = 0;
 45386  011798  94F0               	bcf	intcon3,2,c	;volatile
 45387  01179A  0012               	return	
 45388  01179C                     __end_of_tmr_isr:
 45389                           	opt stack 0
 45390                           tosu	equ	0xFFF
 45391                           tosh	equ	0xFFE
 45392                           tosl	equ	0xFFD
 45393                           pclatu	equ	0xFFB
 45394                           pclath	equ	0xFFA
 45395                           tblptru	equ	0xFF8
 45396                           tblptrh	equ	0xFF7
 45397                           tblptrl	equ	0xFF6
 45398                           tablat	equ	0xFF5
 45399                           prodh	equ	0xFF4
 45400                           prodl	equ	0xFF3
 45401                           intcon	equ	0xFF2
 45402                           intcon2	equ	0xFF1
 45403                           intcon3	equ	0xFF0
 45404                           indf0	equ	0xFEF
 45405                           postinc0	equ	0xFEE
 45406                           fsr0h	equ	0xFEA
 45407                           fsr0l	equ	0xFE9
 45408                           wreg	equ	0xFE8
 45409                           indf1	equ	0xFE7
 45410                           postinc1	equ	0xFE6
 45411                           postdec1	equ	0xFE5
 45412                           plusw1	equ	0xFE3
 45413                           fsr1h	equ	0xFE2
 45414                           fsr1l	equ	0xFE1
 45415                           indf2	equ	0xFDF
 45416                           postinc2	equ	0xFDE
 45417                           postdec2	equ	0xFDD
 45418                           plusw2	equ	0xFDB
 45419                           fsr2h	equ	0xFDA
 45420                           fsr2l	equ	0xFD9
 45421                           status	equ	0xFD8
 45422                           
 45423 ;; *************** function _USBDeviceTasks *****************
 45424 ;; Defined at:
 45425 ;;		line 477 in file "usb_device.c"
 45426 ;; Parameters:    Size  Location     Type
 45427 ;;		None
 45428 ;; Auto vars:     Size  Location     Type
 45429 ;;  i               1   30[COMRAM] unsigned char 
 45430 ;; Return value:  Size  Location     Type
 45431 ;;                  1    wreg      void 
 45432 ;; Registers used:
 45433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45434 ;; Tracked objects:
 45435 ;;		On entry : 0/0
 45436 ;;		On exit  : 0/0
 45437 ;;		Unchanged: 0/0
 45438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45443 ;;Total ram usage:        1 bytes
 45444 ;; Hardware stack levels used:    1
 45445 ;; Hardware stack levels required when called:    8
 45446 ;; This function calls:
 45447 ;;		_USBCtrlEPAllowStatusStage
 45448 ;;		_USBCtrlEPService
 45449 ;;		_USBIncrement1msInternalTimers
 45450 ;;		_USBStallHandler
 45451 ;;		_USBSuspend
 45452 ;;		_USBWakeFromSuspend
 45453 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45454 ;;		i2_USBDeviceInit
 45455 ;; This function is called by:
 45456 ;;		_SYS_InterruptHigh
 45457 ;; This function uses a non-reentrant model
 45458 ;;
 45459                           
 45460                           	psect	text215
 45461  00EB08                     __ptext215:
 45462                           	opt stack 0
 45463  00EB08                     _USBDeviceTasks:
 45464                           	opt stack 9
 45465                           
 45466                           ;usb_device.c: 479: uint8_t i;
 45467                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 45468                           
 45469                           ;incstack = 0
 45470  00EB08  042B               	decf	_USBDeviceState,w,c	;volatile
 45471  00EB0A  B4D8               	btfsc	status,2,c
 45472                           
 45473                           ;usb_device.c: 591: {
 45474                           ;usb_device.c: 601: if(!UCONbits.SE0)
 45475  00EB0C  BA65               	btfsc	3941,5,c	;volatile
 45476  00EB0E  D008               	goto	i2l22069
 45477                           
 45478                           ;usb_device.c: 602: {
 45479                           ;usb_device.c: 608: {UIR = 0;};
 45480  00EB10  0E00               	movlw	0
 45481  00EB12  6E62               	movwf	3938,c	;volatile
 45482                           
 45483                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 45484  00EB14  010F               	movlb	15	; () banked
 45485  00EB16  8136               	bsf	54,0,b	;volatile
 45486                           
 45487                           ; BSR set to: 15
 45488                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 45489  00EB18  010F               	movlb	15	; () banked
 45490  00EB1A  8936               	bsf	54,4,b	;volatile
 45491                           
 45492                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 45493  00EB1C  0E02               	movlw	2
 45494  00EB1E  6E2B               	movwf	_USBDeviceState,c	;volatile
 45495  00EB20                     i2l22069:
 45496                           
 45497                           ;usb_device.c: 617: }
 45498                           ;usb_device.c: 618: }
 45499                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 45500  00EB20  A462               	btfss	3938,2,c	;volatile
 45501  00EB22  D006               	goto	i2l22077
 45502  00EB24  010F               	movlb	15	; () banked
 45503  00EB26  A536               	btfss	54,2,b	;volatile
 45504  00EB28  D003               	goto	i2l22077
 45505                           
 45506                           ; BSR set to: 15
 45507                           ;usb_device.c: 635: {
 45508                           ;usb_device.c: 636: (UIR &= 0xFB);
 45509  00EB2A  9462               	bcf	3938,2,c	;volatile
 45510                           
 45511                           ; BSR set to: 15
 45512                           ;usb_device.c: 640: USBWakeFromSuspend();
 45513  00EB2C  EC70  F09C         	call	_USBWakeFromSuspend	;wreg free
 45514  00EB30                     i2l22077:
 45515                           
 45516                           ;usb_device.c: 642: }
 45517                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 45518  00EB30  A265               	btfss	3941,1,c	;volatile
 45519  00EB32  D002               	goto	i2l159
 45520                           
 45521                           ;usb_device.c: 648: {
 45522                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 45523  00EB34  98A1               	bcf	4001,4,c	;volatile
 45524                           
 45525                           ;usb_device.c: 650: return;
 45526  00EB36  0012               	return	
 45527  00EB38                     i2l159:
 45528                           
 45529                           ;usb_device.c: 651: }
 45530                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 45531  00EB38  A062               	btfss	3938,0,c	;volatile
 45532  00EB3A  D009               	goto	i2l22091
 45533  00EB3C  010F               	movlb	15	; () banked
 45534  00EB3E  A136               	btfss	54,0,b	;volatile
 45535  00EB40  D006               	goto	i2l22091
 45536                           
 45537                           ; BSR set to: 15
 45538                           ;usb_device.c: 664: {
 45539                           ;usb_device.c: 665: USBDeviceInit();
 45540  00EB42  EC92  F073         	call	i2_USBDeviceInit	;wreg free
 45541                           
 45542                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 45543  00EB46  88A0               	bsf	4000,4,c	;volatile
 45544                           
 45545                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 45546  00EB48  0E04               	movlw	4
 45547  00EB4A  6E2B               	movwf	_USBDeviceState,c	;volatile
 45548                           
 45549                           ;usb_device.c: 681: (UIR &= 0xFE);
 45550  00EB4C  9062               	bcf	3938,0,c	;volatile
 45551  00EB4E                     i2l22091:
 45552                           
 45553                           ;usb_device.c: 682: }
 45554                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 45555  00EB4E  A862               	btfss	3938,4,c	;volatile
 45556  00EB50  D004               	goto	i2l22097
 45557  00EB52  010F               	movlb	15	; () banked
 45558  00EB54  B936               	btfsc	54,4,b	;volatile
 45559                           
 45560                           ; BSR set to: 15
 45561                           ;usb_device.c: 688: {
 45562                           ;usb_device.c: 694: USBSuspend();
 45563  00EB56  EC40  F09D         	call	_USBSuspend	;wreg free
 45564  00EB5A                     i2l22097:
 45565                           
 45566                           ;usb_device.c: 696: }
 45567                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 45568  00EB5A  AC62               	btfss	3938,6,c	;volatile
 45569  00EB5C  D01B               	goto	i2l22115
 45570                           
 45571                           ;usb_device.c: 709: {
 45572                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 45573  00EB5E  010F               	movlb	15	; () banked
 45574  00EB60  AD36               	btfss	54,6,b	;volatile
 45575  00EB62  D00E               	goto	i2l22103
 45576                           
 45577                           ; BSR set to: 15
 45578                           ;usb_device.c: 712: {
 45579                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 45580  00EB64  0E00               	movlw	0
 45581  00EB66  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45582  00EB68  0E73               	movlw	115
 45583  00EB6A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45584  00EB6C  0E00               	movlw	0
 45585  00EB6E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45586  00EB70  0E00               	movlw	0
 45587  00EB72  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45588  00EB74  0E00               	movlw	0
 45589  00EB76  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45590  00EB78  0E01               	movlw	1
 45591  00EB7A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45592  00EB7C  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45593  00EB80                     i2l22103:
 45594                           
 45595                           ;usb_device.c: 714: }
 45596                           ;usb_device.c: 715: (UIR &= 0xBF);
 45597  00EB80  9C62               	bcf	3938,6,c	;volatile
 45598                           
 45599                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 45600  00EB82  EC6B  F09F         	call	_USBIncrement1msInternalTimers	;wreg free
 45601                           
 45602                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 45603  00EB86  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 45604  00EB88  A4D8               	btfss	status,2,c
 45605                           
 45606                           ;usb_device.c: 736: {
 45607                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 45608  00EB8A  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 45609                           
 45610                           ;usb_device.c: 738: }
 45611                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 45612  00EB8C  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 45613  00EB8E  B4D8               	btfsc	status,2,c
 45614                           
 45615                           ;usb_device.c: 745: {
 45616                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 45617  00EB90  EC34  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 45618  00EB94                     i2l22115:
 45619                           
 45620                           ;usb_device.c: 747: }
 45621                           ;usb_device.c: 749: }
 45622                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 45623  00EB94  AA62               	btfss	3938,5,c	;volatile
 45624  00EB96  D004               	goto	i2l22121
 45625  00EB98  010F               	movlb	15	; () banked
 45626  00EB9A  BB36               	btfsc	54,5,b	;volatile
 45627                           
 45628                           ; BSR set to: 15
 45629                           ;usb_device.c: 752: {
 45630                           ;usb_device.c: 753: USBStallHandler();
 45631  00EB9C  ECE6  F09A         	call	_USBStallHandler	;wreg free
 45632  00EBA0                     i2l22121:
 45633                           
 45634                           ;usb_device.c: 754: }
 45635                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 45636  00EBA0  A262               	btfss	3938,1,c	;volatile
 45637  00EBA2  D012               	goto	i2l22129
 45638  00EBA4  010F               	movlb	15	; () banked
 45639  00EBA6  A336               	btfss	54,1,b	;volatile
 45640  00EBA8  D00F               	goto	i2l22129
 45641                           
 45642                           ; BSR set to: 15
 45643                           ;usb_device.c: 757: {
 45644                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 45645  00EBAA  0E7F               	movlw	127
 45646  00EBAC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45647  00EBAE  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45648  00EBB0  0E00               	movlw	0
 45649  00EBB2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45650  00EBB4  0E00               	movlw	0
 45651  00EBB6  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45652  00EBB8  0E00               	movlw	0
 45653  00EBBA  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45654  00EBBC  0E01               	movlw	1
 45655  00EBBE  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45656  00EBC0  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45657                           
 45658                           ;usb_device.c: 759: {UEIR = 0;};
 45659  00EBC4  0E00               	movlw	0
 45660  00EBC6  6E63               	movwf	3939,c	;volatile
 45661  00EBC8                     i2l22129:
 45662                           
 45663                           ;usb_device.c: 767: }
 45664                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 45665  00EBC8  0E04               	movlw	4
 45666  00EBCA  602B               	cpfslt	_USBDeviceState,c	;volatile
 45667  00EBCC  D002               	goto	i2l169
 45668                           
 45669                           ;usb_device.c: 775: {
 45670                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 45671  00EBCE  98A1               	bcf	4001,4,c	;volatile
 45672                           
 45673                           ;usb_device.c: 777: return;
 45674  00EBD0  0012               	return	
 45675  00EBD2                     i2l169:
 45676                           
 45677                           ;usb_device.c: 778: }
 45678                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 45679  00EBD2  010F               	movlb	15	; () banked
 45680  00EBD4  A736               	btfss	54,3,b	;volatile
 45681  00EBD6  D039               	goto	i2l170
 45682                           
 45683                           ; BSR set to: 15
 45684                           ;usb_device.c: 784: {
 45685                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 45686  00EBD8  0E00               	movlw	0
 45687  00EBDA  6E4C               	movwf	USBDeviceTasks@i,c
 45688  00EBDC                     i2l22135:
 45689                           
 45690                           ; BSR set to: 15
 45691  00EBDC  0E03               	movlw	3
 45692  00EBDE  644C               	cpfsgt	USBDeviceTasks@i,c
 45693  00EBE0  D001               	goto	i2l171
 45694  00EBE2  D033               	goto	i2l170
 45695  00EBE4                     i2l171:
 45696                           
 45697                           ;usb_device.c: 786: {
 45698                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 45699  00EBE4  A662               	btfss	3938,3,c	;volatile
 45700  00EBE6  D031               	goto	i2l170
 45701                           
 45702                           ;usb_device.c: 788: {
 45703                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 45704  00EBE8  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 45705                           
 45706                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 45707  00EBEC  302C               	rrcf	_USTATcopy,w,c	;volatile
 45708  00EBEE  32E8               	rrcf	wreg,f,c
 45709  00EBF0  32E8               	rrcf	wreg,f,c
 45710  00EBF2  0B0F               	andlw	15
 45711  00EBF4  6E26               	movwf	_endpoint_number,c	;volatile
 45712                           
 45713                           ;usb_device.c: 793: (UIR &= 0xF7);
 45714  00EBF6  9662               	bcf	3938,3,c	;volatile
 45715                           
 45716                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 45717  00EBF8  B42C               	btfsc	_USTATcopy,2,c	;volatile
 45718  00EBFA  D007               	goto	i2l22149
 45719                           
 45720                           ;usb_device.c: 799: {
 45721                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 45722  00EBFC  5026               	movf	_endpoint_number,w,c	;volatile
 45723  00EBFE  0D01               	mullw	1
 45724  00EC00  0EE1               	movlw	low _ep_data_out
 45725  00EC02  24F3               	addwf	prodl,w,c
 45726  00EC04  6ED9               	movwf	fsr2l,c
 45727  00EC06  0E01               	movlw	high _ep_data_out
 45728  00EC08  D006               	goto	L55
 45729  00EC0A                     i2l22149:
 45730                           
 45731                           ;usb_device.c: 802: else
 45732                           ;usb_device.c: 803: {
 45733                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 45734  00EC0A  5026               	movf	_endpoint_number,w,c	;volatile
 45735  00EC0C  0D01               	mullw	1
 45736  00EC0E  0EE4               	movlw	low _ep_data_in
 45737  00EC10  24F3               	addwf	prodl,w,c
 45738  00EC12  6ED9               	movwf	fsr2l,c
 45739  00EC14  0E01               	movlw	high _ep_data_in
 45740  00EC16                     L55:
 45741  00EC16  20F4               	addwfc	prodh,w,c
 45742  00EC18  6EDA               	movwf	fsr2h,c
 45743  00EC1A  0101               	movlb	1	; () banked
 45744  00EC1C  70DF               	btg	indf2,0,c
 45745                           
 45746                           ; BSR set to: 1
 45747                           ;usb_device.c: 805: }
 45748                           ;usb_device.c: 810: if(endpoint_number == 0)
 45749                           
 45750                           ; BSR set to: 1
 45751  00EC1E  5026               	movf	_endpoint_number,w,c	;volatile
 45752  00EC20  A4D8               	btfss	status,2,c
 45753  00EC22  D003               	goto	i2l22155
 45754                           
 45755                           ; BSR set to: 1
 45756                           ;usb_device.c: 811: {
 45757                           ;usb_device.c: 812: USBCtrlEPService();
 45758  00EC24  ECFE  F08C         	call	_USBCtrlEPService	;wreg free
 45759                           
 45760                           ;usb_device.c: 813: }
 45761  00EC28  D00E               	goto	i2l22157
 45762  00EC2A                     i2l22155:
 45763                           
 45764                           ;usb_device.c: 814: else
 45765                           ;usb_device.c: 815: {
 45766                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 45767  00EC2A  0E00               	movlw	0
 45768  00EC2C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45769  00EC2E  0E72               	movlw	114
 45770  00EC30  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45771  00EC32  0E2C               	movlw	low _USTATcopy
 45772  00EC34  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45773  00EC36  0E00               	movlw	high _USTATcopy
 45774  00EC38  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45775  00EC3A  0E00               	movlw	0
 45776  00EC3C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45777  00EC3E  0E00               	movlw	0
 45778  00EC40  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45779  00EC42  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45780  00EC46                     i2l22157:
 45781  00EC46  2A4C               	incf	USBDeviceTasks@i,f,c
 45782  00EC48  D7C9               	goto	i2l22135
 45783  00EC4A                     i2l170:
 45784                           
 45785                           ;usb_device.c: 822: }
 45786                           ;usb_device.c: 823: }
 45787                           ;usb_device.c: 824: }
 45788                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 45789  00EC4A  98A1               	bcf	4001,4,c	;volatile
 45790  00EC4C  0012               	return		;funcret
 45791  00EC4E                     __end_of_USBDeviceTasks:
 45792                           	opt stack 0
 45793                           tosu	equ	0xFFF
 45794                           tosh	equ	0xFFE
 45795                           tosl	equ	0xFFD
 45796                           pclatu	equ	0xFFB
 45797                           pclath	equ	0xFFA
 45798                           tblptru	equ	0xFF8
 45799                           tblptrh	equ	0xFF7
 45800                           tblptrl	equ	0xFF6
 45801                           tablat	equ	0xFF5
 45802                           prodh	equ	0xFF4
 45803                           prodl	equ	0xFF3
 45804                           intcon	equ	0xFF2
 45805                           intcon2	equ	0xFF1
 45806                           intcon3	equ	0xFF0
 45807                           indf0	equ	0xFEF
 45808                           postinc0	equ	0xFEE
 45809                           fsr0h	equ	0xFEA
 45810                           fsr0l	equ	0xFE9
 45811                           wreg	equ	0xFE8
 45812                           indf1	equ	0xFE7
 45813                           postinc1	equ	0xFE6
 45814                           postdec1	equ	0xFE5
 45815                           plusw1	equ	0xFE3
 45816                           fsr1h	equ	0xFE2
 45817                           fsr1l	equ	0xFE1
 45818                           indf2	equ	0xFDF
 45819                           postinc2	equ	0xFDE
 45820                           postdec2	equ	0xFDD
 45821                           plusw2	equ	0xFDB
 45822                           fsr2h	equ	0xFDA
 45823                           fsr2l	equ	0xFD9
 45824                           status	equ	0xFD8
 45825                           
 45826 ;; *************** function i2_USBDeviceInit *****************
 45827 ;; Defined at:
 45828 ;;		line 277 in file "usb_device.c"
 45829 ;; Parameters:    Size  Location     Type
 45830 ;;		None
 45831 ;; Auto vars:     Size  Location     Type
 45832 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 45833 ;; Return value:  Size  Location     Type
 45834 ;;                  1    wreg      void 
 45835 ;; Registers used:
 45836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45837 ;; Tracked objects:
 45838 ;;		On entry : 0/0
 45839 ;;		On exit  : 0/0
 45840 ;;		Unchanged: 0/0
 45841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45846 ;;Total ram usage:        1 bytes
 45847 ;; Hardware stack levels used:    1
 45848 ;; Hardware stack levels required when called:    1
 45849 ;; This function calls:
 45850 ;;		i2_memset
 45851 ;; This function is called by:
 45852 ;;		_USBDeviceTasks
 45853 ;; This function uses a non-reentrant model
 45854 ;;
 45855                           
 45856                           	psect	text216
 45857  00E724                     __ptext216:
 45858                           	opt stack 0
 45859  00E724                     i2_USBDeviceInit:
 45860                           	opt stack 15
 45861                           
 45862                           ;usb_device.c: 279: uint8_t i;
 45863                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 45864                           
 45865                           ;incstack = 0
 45866  00E724  98A0               	bcf	4000,4,c	;volatile
 45867                           
 45868                           ;usb_device.c: 285: ;
 45869                           ;usb_device.c: 288: {UEIR = 0;};
 45870  00E726  0E00               	movlw	0
 45871  00E728  6E63               	movwf	3939,c	;volatile
 45872                           
 45873                           ;usb_device.c: 291: {UIR = 0;};
 45874  00E72A  0E00               	movlw	0
 45875  00E72C  6E62               	movwf	3938,c	;volatile
 45876                           
 45877                           ;usb_device.c: 294: UEP0 = 0;
 45878  00E72E  0E00               	movlw	0
 45879  00E730  010F               	movlb	15	; () banked
 45880  00E732  6F26               	movwf	38,b	;volatile
 45881                           
 45882                           ; BSR set to: 15
 45883                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 45884  00E734  0E27               	movlw	39
 45885  00E736  6E2E               	movwf	i2memset@p1,c
 45886  00E738  0E0F               	movlw	15
 45887  00E73A  6E2F               	movwf	i2memset@p1+1,c
 45888  00E73C  0E00               	movlw	0
 45889  00E73E  6E31               	movwf	i2memset@c+1,c
 45890  00E740  0E00               	movlw	0
 45891  00E742  6E30               	movwf	i2memset@c,c
 45892  00E744  0E00               	movlw	0
 45893  00E746  6E33               	movwf	i2memset@n+1,c
 45894  00E748  0E02               	movlw	2
 45895  00E74A  6E32               	movwf	i2memset@n,c
 45896  00E74C  EC0B  F09E         	call	i2_memset	;wreg free
 45897                           
 45898                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 45899  00E750  0E16               	movlw	22
 45900  00E752  010F               	movlb	15	; () banked
 45901  00E754  6F39               	movwf	57,b	;volatile
 45902                           
 45903                           ; BSR set to: 15
 45904  00E756  0E9F               	movlw	159
 45905  00E758  010F               	movlb	15	; () banked
 45906  00E75A  6F37               	movwf	55,b	;volatile
 45907                           
 45908                           ; BSR set to: 15
 45909  00E75C  0E7B               	movlw	123
 45910  00E75E  010F               	movlb	15	; () banked
 45911  00E760  6F36               	movwf	54,b	;volatile
 45912                           
 45913                           ; BSR set to: 15
 45914                           ;usb_device.c: 301: ;
 45915                           ;usb_device.c: 304: ;
 45916                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 45917  00E762  0E00               	movlw	0
 45918  00E764  6E36               	movwf	i2USBDeviceInit@i,c
 45919  00E766                     i2l16057:
 45920                           
 45921                           ; BSR set to: 15
 45922  00E766  0E0B               	movlw	11
 45923  00E768  6436               	cpfsgt	i2USBDeviceInit@i,c
 45924  00E76A  D001               	goto	i2l16061
 45925  00E76C  D00E               	goto	i2l148
 45926  00E76E                     i2l16061:
 45927                           
 45928                           ;usb_device.c: 308: {
 45929                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 45930  00E76E  5036               	movf	i2USBDeviceInit@i,w,c
 45931  00E770  0D04               	mullw	4
 45932  00E772  0E00               	movlw	0
 45933  00E774  24F3               	addwf	prodl,w,c
 45934  00E776  6ED9               	movwf	fsr2l,c
 45935  00E778  0E0D               	movlw	13
 45936  00E77A  20F4               	addwfc	prodh,w,c
 45937  00E77C  6EDA               	movwf	fsr2h,c
 45938  00E77E  6ADE               	clrf	postinc2,c
 45939  00E780  6ADE               	clrf	postinc2,c
 45940  00E782  6ADE               	clrf	postinc2,c
 45941  00E784  6ADD               	clrf	postdec2,c
 45942  00E786  2A36               	incf	i2USBDeviceInit@i,f,c
 45943  00E788  D7EE               	goto	i2l16057
 45944  00E78A                     i2l148:
 45945                           
 45946                           ;usb_device.c: 310: }
 45947                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 45948  00E78A  8C65               	bsf	3941,6,c	;volatile
 45949                           
 45950                           ;usb_device.c: 316: UADDR = 0x00;
 45951  00E78C  0E00               	movlw	0
 45952  00E78E  010F               	movlb	15	; () banked
 45953  00E790  6F38               	movwf	56,b	;volatile
 45954                           
 45955                           ; BSR set to: 15
 45956                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 45957  00E792  9865               	bcf	3941,4,c	;volatile
 45958                           
 45959                           ; BSR set to: 15
 45960                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 45961  00E794  9C65               	bcf	3941,6,c	;volatile
 45962  00E796                     i2l16073:
 45963                           
 45964                           ;usb_device.c: 326: {
 45965                           ;usb_device.c: 327: (UIR &= 0xF7);
 45966  00E796  9662               	bcf	3938,3,c	;volatile
 45967                           
 45968                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 45969  00E798  0E00               	movlw	0
 45970  00E79A  6E0D               	movwf	_inPipes+3,c	;volatile
 45971                           
 45972                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 45973  00E79C  0E00               	movlw	0
 45974  00E79E  6E04               	movwf	_outPipes+3,c	;volatile
 45975                           
 45976                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 45977  00E7A0  0E00               	movlw	0
 45978  00E7A2  6E06               	movwf	_outPipes+5,c	;volatile
 45979  00E7A4  0E00               	movlw	0
 45980  00E7A6  6E05               	movwf	_outPipes+4,c	;volatile
 45981                           
 45982                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 45983  00E7A8  B662               	btfsc	3938,3,c	;volatile
 45984  00E7AA  D7F5               	goto	i2l16073
 45985                           
 45986                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 45987  00E7AC  0E01               	movlw	1
 45988  00E7AE  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 45989                           
 45990                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 45991  00E7B0  0E01               	movlw	1
 45992  00E7B2  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 45993                           
 45994                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 45995  00E7B4  0E00               	movlw	0
 45996  00E7B6  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 45997                           
 45998                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 45999  00E7B8  0E00               	movlw	0
 46000  00E7BA  0101               	movlb	1	; () banked
 46001  00E7BC  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 46002                           
 46003                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 46004  00E7BE  0E00               	movlw	0
 46005  00E7C0  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 46006                           
 46007                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 46008  00E7C2  0E00               	movlw	0
 46009  00E7C4  6E36               	movwf	i2USBDeviceInit@i,c
 46010  00E7C6                     i2l16085:
 46011                           
 46012                           ; BSR set to: 1
 46013  00E7C6  0E02               	movlw	2
 46014  00E7C8  6436               	cpfsgt	i2USBDeviceInit@i,c
 46015  00E7CA  D001               	goto	i2l16089
 46016  00E7CC  D02E               	goto	i2l16095
 46017  00E7CE                     i2l16089:
 46018                           
 46019                           ;usb_device.c: 346: {
 46020                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 46021  00E7CE  5036               	movf	i2USBDeviceInit@i,w,c
 46022  00E7D0  0D02               	mullw	2
 46023  00E7D2  0E10               	movlw	low _pBDTEntryIn
 46024  00E7D4  24F3               	addwf	prodl,w,c
 46025  00E7D6  6ED9               	movwf	fsr2l,c
 46026  00E7D8  0E00               	movlw	high _pBDTEntryIn
 46027  00E7DA  20F4               	addwfc	prodh,w,c
 46028  00E7DC  6EDA               	movwf	fsr2h,c
 46029  00E7DE  0E00               	movlw	0
 46030  00E7E0  6EDE               	movwf	postinc2,c
 46031  00E7E2  0E00               	movlw	0
 46032  00E7E4  6EDD               	movwf	postdec2,c
 46033                           
 46034                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 46035  00E7E6  5036               	movf	i2USBDeviceInit@i,w,c
 46036  00E7E8  0D02               	mullw	2
 46037  00E7EA  0ED3               	movlw	low _pBDTEntryOut
 46038  00E7EC  24F3               	addwf	prodl,w,c
 46039  00E7EE  6ED9               	movwf	fsr2l,c
 46040  00E7F0  0E01               	movlw	high _pBDTEntryOut
 46041  00E7F2  20F4               	addwfc	prodh,w,c
 46042  00E7F4  6EDA               	movwf	fsr2h,c
 46043  00E7F6  0E00               	movlw	0
 46044  00E7F8  6EDE               	movwf	postinc2,c
 46045  00E7FA  0E00               	movlw	0
 46046  00E7FC  6EDD               	movwf	postdec2,c
 46047                           
 46048                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 46049  00E7FE  5036               	movf	i2USBDeviceInit@i,w,c
 46050  00E800  0D01               	mullw	1
 46051  00E802  0EE4               	movlw	low _ep_data_in
 46052  00E804  24F3               	addwf	prodl,w,c
 46053  00E806  6ED9               	movwf	fsr2l,c
 46054  00E808  0E01               	movlw	high _ep_data_in
 46055  00E80A  20F4               	addwfc	prodh,w,c
 46056  00E80C  6EDA               	movwf	fsr2h,c
 46057  00E80E  0E00               	movlw	0
 46058  00E810  6EDF               	movwf	indf2,c
 46059                           
 46060                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 46061  00E812  5036               	movf	i2USBDeviceInit@i,w,c
 46062  00E814  0D01               	mullw	1
 46063  00E816  0EE1               	movlw	low _ep_data_out
 46064  00E818  24F3               	addwf	prodl,w,c
 46065  00E81A  6ED9               	movwf	fsr2l,c
 46066  00E81C  0E01               	movlw	high _ep_data_out
 46067  00E81E  20F4               	addwfc	prodh,w,c
 46068  00E820  6EDA               	movwf	fsr2h,c
 46069  00E822  0E00               	movlw	0
 46070  00E824  6EDF               	movwf	indf2,c
 46071  00E826  2A36               	incf	i2USBDeviceInit@i,f,c
 46072  00E828  D7CE               	goto	i2l16085
 46073  00E82A                     i2l16095:
 46074                           
 46075                           ;usb_device.c: 351: }
 46076                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 46077  00E82A  0E08               	movlw	8
 46078  00E82C  6E10               	movwf	_pBDTEntryIn,c
 46079  00E82E  0E0D               	movlw	13
 46080  00E830  6E11               	movwf	_pBDTEntryIn+1,c
 46081                           
 46082                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 46083  00E832  0E16               	movlw	22
 46084  00E834  010F               	movlb	15	; () banked
 46085  00E836  6F26               	movwf	38,b	;volatile
 46086                           
 46087                           ; BSR set to: 15
 46088                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 46089  00E838  0E0D               	movlw	13
 46090  00E83A  010D               	movlb	13	; () banked
 46091  00E83C  6F03               	movwf	3,b	;volatile
 46092  00E83E  0E30               	movlw	48
 46093  00E840  6F02               	movwf	2,b	;volatile
 46094                           
 46095                           ; BSR set to: 13
 46096                           ;usb_device.c: 359: BDT[0].CNT = 8;
 46097  00E842  0E08               	movlw	8
 46098  00E844  010D               	movlb	13	; () banked
 46099  00E846  6F01               	movwf	1,b	;volatile
 46100                           
 46101                           ; BSR set to: 13
 46102                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 46103  00E848  0E04               	movlw	4
 46104  00E84A  010D               	movlb	13	; () banked
 46105  00E84C  6F00               	movwf	0,b	;volatile
 46106                           
 46107                           ; BSR set to: 13
 46108                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 46109  00E84E  010D               	movlb	13	; () banked
 46110  00E850  8F00               	bsf	0,7,b	;volatile
 46111                           
 46112                           ; BSR set to: 13
 46113                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 46114  00E852  0E00               	movlw	0
 46115  00E854  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 46116                           
 46117                           ; BSR set to: 13
 46118                           ;usb_device.c: 366: USB1msTickCount = 0;
 46119  00E856  0E00               	movlw	0
 46120  00E858  0101               	movlb	1	; () banked
 46121  00E85A  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 46122  00E85C  0E00               	movlw	0
 46123  00E85E  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 46124  00E860  0E00               	movlw	0
 46125  00E862  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 46126  00E864  0E00               	movlw	0
 46127  00E866  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 46128                           
 46129                           ; BSR set to: 1
 46130                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 46131  00E868  0E00               	movlw	0
 46132  00E86A  0101               	movlb	1	; () banked
 46133  00E86C  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46134                           
 46135                           ; BSR set to: 1
 46136                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 46137  00E86E  0E00               	movlw	0
 46138  00E870  6E2B               	movwf	_USBDeviceState,c	;volatile
 46139                           
 46140                           ; BSR set to: 1
 46141  00E872  0012               	return		;funcret
 46142  00E874                     __end_ofi2_USBDeviceInit:
 46143                           	opt stack 0
 46144                           tosu	equ	0xFFF
 46145                           tosh	equ	0xFFE
 46146                           tosl	equ	0xFFD
 46147                           pclatu	equ	0xFFB
 46148                           pclath	equ	0xFFA
 46149                           tblptru	equ	0xFF8
 46150                           tblptrh	equ	0xFF7
 46151                           tblptrl	equ	0xFF6
 46152                           tablat	equ	0xFF5
 46153                           prodh	equ	0xFF4
 46154                           prodl	equ	0xFF3
 46155                           intcon	equ	0xFF2
 46156                           intcon2	equ	0xFF1
 46157                           intcon3	equ	0xFF0
 46158                           indf0	equ	0xFEF
 46159                           postinc0	equ	0xFEE
 46160                           fsr0h	equ	0xFEA
 46161                           fsr0l	equ	0xFE9
 46162                           wreg	equ	0xFE8
 46163                           indf1	equ	0xFE7
 46164                           postinc1	equ	0xFE6
 46165                           postdec1	equ	0xFE5
 46166                           plusw1	equ	0xFE3
 46167                           fsr1h	equ	0xFE2
 46168                           fsr1l	equ	0xFE1
 46169                           indf2	equ	0xFDF
 46170                           postinc2	equ	0xFDE
 46171                           postdec2	equ	0xFDD
 46172                           plusw2	equ	0xFDB
 46173                           fsr2h	equ	0xFDA
 46174                           fsr2l	equ	0xFD9
 46175                           status	equ	0xFD8
 46176                           
 46177 ;; *************** function _USBWakeFromSuspend *****************
 46178 ;; Defined at:
 46179 ;;		line 2305 in file "usb_device.c"
 46180 ;; Parameters:    Size  Location     Type
 46181 ;;		None
 46182 ;; Auto vars:     Size  Location     Type
 46183 ;;		None
 46184 ;; Return value:  Size  Location     Type
 46185 ;;                  1    wreg      void 
 46186 ;; Registers used:
 46187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46188 ;; Tracked objects:
 46189 ;;		On entry : 0/0
 46190 ;;		On exit  : 0/0
 46191 ;;		Unchanged: 0/0
 46192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46197 ;;Total ram usage:        0 bytes
 46198 ;; Hardware stack levels used:    1
 46199 ;; Hardware stack levels required when called:    4
 46200 ;; This function calls:
 46201 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46202 ;; This function is called by:
 46203 ;;		_USBDeviceTasks
 46204 ;; This function uses a non-reentrant model
 46205 ;;
 46206                           
 46207                           	psect	text217
 46208  0138E0                     __ptext217:
 46209                           	opt stack 0
 46210  0138E0                     _USBWakeFromSuspend:
 46211                           	opt stack 12
 46212                           
 46213                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 46214                           
 46215                           ; BSR set to: 1
 46216                           ;incstack = 0
 46217  0138E0  0E00               	movlw	0
 46218  0138E2  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 46219                           
 46220                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 46221  0138E4  0E00               	movlw	0
 46222  0138E6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46223  0138E8  0E74               	movlw	116
 46224  0138EA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46225  0138EC  0E00               	movlw	0
 46226  0138EE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 46227  0138F0  0E00               	movlw	0
 46228  0138F2  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 46229  0138F4  0E00               	movlw	0
 46230  0138F6  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46231  0138F8  0E00               	movlw	0
 46232  0138FA  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46233  0138FC  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46234                           
 46235                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 46236  013900  9265               	bcf	3941,1,c	;volatile
 46237                           
 46238                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 46239  013902  010F               	movlb	15	; () banked
 46240  013904  9536               	bcf	54,2,b	;volatile
 46241                           
 46242                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 46243  013906  D001               	goto	i2l20297
 46244  013908                     i2l20295:
 46245                           
 46246                           ;usb_device.c: 2345: {
 46247                           ;usb_device.c: 2346: (UIR &= 0xFB);
 46248  013908  9462               	bcf	3938,2,c	;volatile
 46249  01390A                     i2l20297:
 46250  01390A  B462               	btfsc	3938,2,c	;volatile
 46251  01390C  D7FD               	goto	i2l20295
 46252                           
 46253                           ;usb_device.c: 2347: }
 46254                           ;usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 46255  01390E  0E00               	movlw	0
 46256  013910  0101               	movlb	1	; () banked
 46257  013912  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46258                           
 46259                           ; BSR set to: 1
 46260  013914  0012               	return		;funcret
 46261  013916                     __end_of_USBWakeFromSuspend:
 46262                           	opt stack 0
 46263                           tosu	equ	0xFFF
 46264                           tosh	equ	0xFFE
 46265                           tosl	equ	0xFFD
 46266                           pclatu	equ	0xFFB
 46267                           pclath	equ	0xFFA
 46268                           tblptru	equ	0xFF8
 46269                           tblptrh	equ	0xFF7
 46270                           tblptrl	equ	0xFF6
 46271                           tablat	equ	0xFF5
 46272                           prodh	equ	0xFF4
 46273                           prodl	equ	0xFF3
 46274                           intcon	equ	0xFF2
 46275                           intcon2	equ	0xFF1
 46276                           intcon3	equ	0xFF0
 46277                           indf0	equ	0xFEF
 46278                           postinc0	equ	0xFEE
 46279                           fsr0h	equ	0xFEA
 46280                           fsr0l	equ	0xFE9
 46281                           wreg	equ	0xFE8
 46282                           indf1	equ	0xFE7
 46283                           postinc1	equ	0xFE6
 46284                           postdec1	equ	0xFE5
 46285                           plusw1	equ	0xFE3
 46286                           fsr1h	equ	0xFE2
 46287                           fsr1l	equ	0xFE1
 46288                           indf2	equ	0xFDF
 46289                           postinc2	equ	0xFDE
 46290                           postdec2	equ	0xFDD
 46291                           plusw2	equ	0xFDB
 46292                           fsr2h	equ	0xFDA
 46293                           fsr2l	equ	0xFD9
 46294                           status	equ	0xFD8
 46295                           
 46296 ;; *************** function _USBSuspend *****************
 46297 ;; Defined at:
 46298 ;;		line 2247 in file "usb_device.c"
 46299 ;; Parameters:    Size  Location     Type
 46300 ;;		None
 46301 ;; Auto vars:     Size  Location     Type
 46302 ;;		None
 46303 ;; Return value:  Size  Location     Type
 46304 ;;                  1    wreg      void 
 46305 ;; Registers used:
 46306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46307 ;; Tracked objects:
 46308 ;;		On entry : 0/0
 46309 ;;		On exit  : 0/0
 46310 ;;		Unchanged: 0/0
 46311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46316 ;;Total ram usage:        0 bytes
 46317 ;; Hardware stack levels used:    1
 46318 ;; Hardware stack levels required when called:    4
 46319 ;; This function calls:
 46320 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46321 ;; This function is called by:
 46322 ;;		_USBDeviceTasks
 46323 ;; This function uses a non-reentrant model
 46324 ;;
 46325                           
 46326                           	psect	text218
 46327  013A80                     __ptext218:
 46328                           	opt stack 0
 46329  013A80                     _USBSuspend:
 46330                           	opt stack 12
 46331                           
 46332                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 46333                           
 46334                           ; BSR set to: 1
 46335                           ;incstack = 0
 46336  013A80  010F               	movlb	15	; () banked
 46337  013A82  8536               	bsf	54,2,b	;volatile
 46338                           
 46339                           ; BSR set to: 15
 46340                           ;usb_device.c: 2273: (UIR &= 0xEF);
 46341  013A84  9862               	bcf	3938,4,c	;volatile
 46342                           
 46343                           ; BSR set to: 15
 46344                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 46345  013A86  8265               	bsf	3941,1,c	;volatile
 46346                           
 46347                           ; BSR set to: 15
 46348                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 46349  013A88  0E01               	movlw	1
 46350  013A8A  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 46351                           
 46352                           ; BSR set to: 15
 46353                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 46354  013A8C  0E00               	movlw	0
 46355  013A8E  0101               	movlb	1	; () banked
 46356  013A90  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46357                           
 46358                           ; BSR set to: 1
 46359                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 46360  013A92  0E00               	movlw	0
 46361  013A94  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46362  013A96  0E75               	movlw	117
 46363  013A98  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46364  013A9A  0E00               	movlw	0
 46365  013A9C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 46366  013A9E  0E00               	movlw	0
 46367  013AA0  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 46368  013AA2  0E00               	movlw	0
 46369  013AA4  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46370  013AA6  0E00               	movlw	0
 46371  013AA8  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46372  013AAA  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46373  013AAE  0012               	return		;funcret
 46374  013AB0                     __end_of_USBSuspend:
 46375                           	opt stack 0
 46376                           tosu	equ	0xFFF
 46377                           tosh	equ	0xFFE
 46378                           tosl	equ	0xFFD
 46379                           pclatu	equ	0xFFB
 46380                           pclath	equ	0xFFA
 46381                           tblptru	equ	0xFF8
 46382                           tblptrh	equ	0xFF7
 46383                           tblptrl	equ	0xFF6
 46384                           tablat	equ	0xFF5
 46385                           prodh	equ	0xFF4
 46386                           prodl	equ	0xFF3
 46387                           intcon	equ	0xFF2
 46388                           intcon2	equ	0xFF1
 46389                           intcon3	equ	0xFF0
 46390                           indf0	equ	0xFEF
 46391                           postinc0	equ	0xFEE
 46392                           fsr0h	equ	0xFEA
 46393                           fsr0l	equ	0xFE9
 46394                           wreg	equ	0xFE8
 46395                           indf1	equ	0xFE7
 46396                           postinc1	equ	0xFE6
 46397                           postdec1	equ	0xFE5
 46398                           plusw1	equ	0xFE3
 46399                           fsr1h	equ	0xFE2
 46400                           fsr1l	equ	0xFE1
 46401                           indf2	equ	0xFDF
 46402                           postinc2	equ	0xFDE
 46403                           postdec2	equ	0xFDD
 46404                           plusw2	equ	0xFDB
 46405                           fsr2h	equ	0xFDA
 46406                           fsr2l	equ	0xFD9
 46407                           status	equ	0xFD8
 46408                           
 46409 ;; *************** function _USBStallHandler *****************
 46410 ;; Defined at:
 46411 ;;		line 2204 in file "usb_device.c"
 46412 ;; Parameters:    Size  Location     Type
 46413 ;;		None
 46414 ;; Auto vars:     Size  Location     Type
 46415 ;;		None
 46416 ;; Return value:  Size  Location     Type
 46417 ;;                  1    wreg      void 
 46418 ;; Registers used:
 46419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46420 ;; Tracked objects:
 46421 ;;		On entry : 0/0
 46422 ;;		On exit  : 0/0
 46423 ;;		Unchanged: 0/0
 46424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46429 ;;Total ram usage:        1 bytes
 46430 ;; Hardware stack levels used:    1
 46431 ;; This function calls:
 46432 ;;		Nothing
 46433 ;; This function is called by:
 46434 ;;		_USBDeviceTasks
 46435 ;; This function uses a non-reentrant model
 46436 ;;
 46437                           
 46438                           	psect	text219
 46439  0135CC                     __ptext219:
 46440                           	opt stack 0
 46441  0135CC                     _USBStallHandler:
 46442                           	opt stack 16
 46443                           
 46444                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 46445                           
 46446                           ;incstack = 0
 46447  0135CC  010F               	movlb	15	; () banked
 46448  0135CE  A126               	btfss	38,0,b	;volatile
 46449  0135D0  D01E               	goto	i2l309
 46450                           
 46451                           ; BSR set to: 15
 46452                           ;usb_device.c: 2217: {
 46453                           ;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 46454  0135D2  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46455  0135D6  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46456  0135DA  0E80               	movlw	128
 46457  0135DC  18DE               	xorwf	postinc2,w,c
 46458  0135DE  A4D8               	btfss	status,2,c
 46459  0135E0  D014               	goto	i2l14367
 46460                           
 46461                           ; BSR set to: 15
 46462  0135E2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 46463  0135E6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 46464  0135EA  0E84               	movlw	132
 46465  0135EC  18DE               	xorwf	postinc2,w,c
 46466  0135EE  A4D8               	btfss	status,2,c
 46467  0135F0  D00C               	goto	i2l14367
 46468                           
 46469                           ; BSR set to: 15
 46470                           ;usb_device.c: 2220: {
 46471                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 46472  0135F2  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46473  0135F6  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46474  0135FA  0E0C               	movlw	12
 46475  0135FC  6EDF               	movwf	indf2,c
 46476                           
 46477                           ; BSR set to: 15
 46478                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 46479  0135FE  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46480  013602  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46481  013606  0E00               	movlw	0
 46482  013608  8EDB               	bsf	plusw2,7,c
 46483  01360A                     i2l14367:
 46484                           
 46485                           ; BSR set to: 15
 46486                           ;usb_device.c: 2224: }
 46487                           ;usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 46488  01360A  010F               	movlb	15	; () banked
 46489  01360C  9126               	bcf	38,0,b	;volatile
 46490  01360E                     i2l309:
 46491                           
 46492                           ; BSR set to: 15
 46493                           ;usb_device.c: 2226: }
 46494                           ;usb_device.c: 2228: (UIR &= 0xDF);
 46495  01360E  9A62               	bcf	3938,5,c	;volatile
 46496                           
 46497                           ; BSR set to: 15
 46498  013610  0012               	return		;funcret
 46499  013612                     __end_of_USBStallHandler:
 46500                           	opt stack 0
 46501                           tosu	equ	0xFFF
 46502                           tosh	equ	0xFFE
 46503                           tosl	equ	0xFFD
 46504                           pclatu	equ	0xFFB
 46505                           pclath	equ	0xFFA
 46506                           tblptru	equ	0xFF8
 46507                           tblptrh	equ	0xFF7
 46508                           tblptrl	equ	0xFF6
 46509                           tablat	equ	0xFF5
 46510                           prodh	equ	0xFF4
 46511                           prodl	equ	0xFF3
 46512                           intcon	equ	0xFF2
 46513                           intcon2	equ	0xFF1
 46514                           intcon3	equ	0xFF0
 46515                           indf0	equ	0xFEF
 46516                           postinc0	equ	0xFEE
 46517                           fsr0h	equ	0xFEA
 46518                           fsr0l	equ	0xFE9
 46519                           wreg	equ	0xFE8
 46520                           indf1	equ	0xFE7
 46521                           postinc1	equ	0xFE6
 46522                           postdec1	equ	0xFE5
 46523                           plusw1	equ	0xFE3
 46524                           fsr1h	equ	0xFE2
 46525                           fsr1l	equ	0xFE1
 46526                           indf2	equ	0xFDF
 46527                           postinc2	equ	0xFDE
 46528                           postdec2	equ	0xFDD
 46529                           plusw2	equ	0xFDB
 46530                           fsr2h	equ	0xFDA
 46531                           fsr2l	equ	0xFD9
 46532                           status	equ	0xFD8
 46533                           
 46534 ;; *************** function _USBIncrement1msInternalTimers *****************
 46535 ;; Defined at:
 46536 ;;		line 3027 in file "usb_device.c"
 46537 ;; Parameters:    Size  Location     Type
 46538 ;;		None
 46539 ;; Auto vars:     Size  Location     Type
 46540 ;;		None
 46541 ;; Return value:  Size  Location     Type
 46542 ;;                  1    wreg      void 
 46543 ;; Registers used:
 46544 ;;		wreg, status,2, status,0
 46545 ;; Tracked objects:
 46546 ;;		On entry : 0/0
 46547 ;;		On exit  : 0/0
 46548 ;;		Unchanged: 0/0
 46549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46554 ;;Total ram usage:        0 bytes
 46555 ;; Hardware stack levels used:    1
 46556 ;; This function calls:
 46557 ;;		Nothing
 46558 ;; This function is called by:
 46559 ;;		_USBDeviceTasks
 46560 ;; This function uses a non-reentrant model
 46561 ;;
 46562                           
 46563                           	psect	text220
 46564  013ED6                     __ptext220:
 46565                           	opt stack 0
 46566  013ED6                     _USBIncrement1msInternalTimers:
 46567                           	opt stack 16
 46568                           
 46569                           ;usb_device.c: 3035: USB1msTickCount++;
 46570                           
 46571                           ; BSR set to: 15
 46572                           ;incstack = 0
 46573  013ED6  0E01               	movlw	1
 46574  013ED8  0101               	movlb	1	; () banked
 46575  013EDA  27DD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 46576  013EDC  0E00               	movlw	0
 46577  013EDE  23DE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 46578  013EE0  23DF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 46579  013EE2  23E0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 46580                           
 46581                           ; BSR set to: 1
 46582                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 46583  013EE4  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 46584  013EE6  A4D8               	btfss	status,2,c
 46585  013EE8  0012               	return	
 46586                           
 46587                           ; BSR set to: 1
 46588                           ;usb_device.c: 3037: {
 46589                           ;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 46590  013EEA  0101               	movlb	1	; () banked
 46591  013EEC  2BFA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 46592                           
 46593                           ; BSR set to: 1
 46594                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 46595  013EEE  0101               	movlb	1	; () banked
 46596  013EF0  51FA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 46597  013EF2  A4D8               	btfss	status,2,c
 46598  013EF4  0012               	return	
 46599                           
 46600                           ; BSR set to: 1
 46601                           ;usb_device.c: 3041: {
 46602                           ;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 46603  013EF6  0101               	movlb	1	; () banked
 46604  013EF8  69FA               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46605                           
 46606                           ; BSR set to: 1
 46607  013EFA  0012               	return	
 46608  013EFC                     __end_of_USBIncrement1msInternalTimers:
 46609                           	opt stack 0
 46610                           tosu	equ	0xFFF
 46611                           tosh	equ	0xFFE
 46612                           tosl	equ	0xFFD
 46613                           pclatu	equ	0xFFB
 46614                           pclath	equ	0xFFA
 46615                           tblptru	equ	0xFF8
 46616                           tblptrh	equ	0xFF7
 46617                           tblptrl	equ	0xFF6
 46618                           tablat	equ	0xFF5
 46619                           prodh	equ	0xFF4
 46620                           prodl	equ	0xFF3
 46621                           intcon	equ	0xFF2
 46622                           intcon2	equ	0xFF1
 46623                           intcon3	equ	0xFF0
 46624                           indf0	equ	0xFEF
 46625                           postinc0	equ	0xFEE
 46626                           fsr0h	equ	0xFEA
 46627                           fsr0l	equ	0xFE9
 46628                           wreg	equ	0xFE8
 46629                           indf1	equ	0xFE7
 46630                           postinc1	equ	0xFE6
 46631                           postdec1	equ	0xFE5
 46632                           plusw1	equ	0xFE3
 46633                           fsr1h	equ	0xFE2
 46634                           fsr1l	equ	0xFE1
 46635                           indf2	equ	0xFDF
 46636                           postinc2	equ	0xFDE
 46637                           postdec2	equ	0xFDD
 46638                           plusw2	equ	0xFDB
 46639                           fsr2h	equ	0xFDA
 46640                           fsr2l	equ	0xFD9
 46641                           status	equ	0xFD8
 46642                           
 46643 ;; *************** function _USBCtrlEPService *****************
 46644 ;; Defined at:
 46645 ;;		line 2374 in file "usb_device.c"
 46646 ;; Parameters:    Size  Location     Type
 46647 ;;		None
 46648 ;; Auto vars:     Size  Location     Type
 46649 ;;		None
 46650 ;; Return value:  Size  Location     Type
 46651 ;;                  1    wreg      void 
 46652 ;; Registers used:
 46653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46654 ;; Tracked objects:
 46655 ;;		On entry : 0/0
 46656 ;;		On exit  : 0/0
 46657 ;;		Unchanged: 0/0
 46658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46663 ;;Total ram usage:        1 bytes
 46664 ;; Hardware stack levels used:    1
 46665 ;; Hardware stack levels required when called:    7
 46666 ;; This function calls:
 46667 ;;		_USBCtrlTrfInHandler
 46668 ;;		_USBCtrlTrfOutHandler
 46669 ;;		_USBCtrlTrfSetupHandler
 46670 ;;		i2_memcpy
 46671 ;; This function is called by:
 46672 ;;		_USBDeviceTasks
 46673 ;; This function uses a non-reentrant model
 46674 ;;
 46675                           
 46676                           	psect	text221
 46677  0119FC                     __ptext221:
 46678                           	opt stack 0
 46679  0119FC                     _USBCtrlEPService:
 46680                           	opt stack 9
 46681                           
 46682                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 46683                           
 46684                           ; BSR set to: 1
 46685                           ;incstack = 0
 46686  0119FC  0E2D               	movlw	45
 46687  0119FE  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 46688                           
 46689                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 46690  011A00  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 46691  011A04  0EFD               	movlw	253
 46692  011A06  164B               	andwf	??_USBCtrlEPService,f,c
 46693  011A08  A4D8               	btfss	status,2,c
 46694  011A0A  D03B               	goto	i2l20331
 46695                           
 46696                           ;usb_device.c: 2385: {
 46697                           ;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 46698  011A0C  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 46699  011A10  90D8               	bcf	status,0,c
 46700  011A12  324B               	rrcf	??_USBCtrlEPService,f,c
 46701  011A14  0E3F               	movlw	63
 46702  011A16  164B               	andwf	??_USBCtrlEPService,f,c
 46703  011A18  504B               	movf	??_USBCtrlEPService,w,c
 46704  011A1A  0D04               	mullw	4
 46705  011A1C  0E00               	movlw	0
 46706  011A1E  24F3               	addwf	prodl,w,c
 46707  011A20  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 46708  011A22  0E0D               	movlw	13
 46709  011A24  20F4               	addwfc	prodh,w,c
 46710  011A26  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 46711                           
 46712                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 46713  011A28  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 46714  011A2C  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 46715                           
 46716                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 46717  011A30  0E04               	movlw	4
 46718  011A32  1818               	xorwf	_pBDTEntryEP0OutNext,w,c
 46719  011A34  6E18               	movwf	_pBDTEntryEP0OutNext,c
 46720  011A36  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 46721  011A38  6E19               	movwf	_pBDTEntryEP0OutNext+1,c
 46722                           
 46723                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 46724  011A3A  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46725  011A3E  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46726  011A42  30DF               	rrcf	indf2,w,c
 46727  011A44  32E8               	rrcf	wreg,f,c
 46728  011A46  0B0F               	andlw	15
 46729  011A48  0A0D               	xorlw	13
 46730  011A4A  A4D8               	btfss	status,2,c
 46731  011A4C  D017               	goto	i2l20329
 46732                           
 46733                           ;usb_device.c: 2402: {
 46734                           ;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 46735  011A4E  0E30               	movlw	48
 46736  011A50  6E2E               	movwf	i2memcpy@d1,c
 46737  011A52  0E0D               	movlw	13
 46738  011A54  6E2F               	movwf	i2memcpy@d1+1,c
 46739  011A56  EE20 F002          	lfsr	2,2
 46740  011A5A  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 46741  011A5C  26D9               	addwf	fsr2l,f,c
 46742  011A5E  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 46743  011A60  22DA               	addwfc	fsr2h,f,c
 46744  011A62  CFDE F030          	movff	postinc2,i2memcpy@s1
 46745  011A66  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 46746  011A6A  0E00               	movlw	0
 46747  011A6C  6E33               	movwf	i2memcpy@n+1,c
 46748  011A6E  0E08               	movlw	8
 46749  011A70  6E32               	movwf	i2memcpy@n,c
 46750  011A72  EC03  F098         	call	i2_memcpy	;wreg free
 46751                           
 46752                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 46753  011A76  ECDC  F08D         	call	_USBCtrlTrfSetupHandler	;wreg free
 46754                           
 46755                           ;usb_device.c: 2411: }
 46756  011A7A  0012               	return	
 46757  011A7C                     i2l20329:
 46758                           
 46759                           ;usb_device.c: 2412: else
 46760                           ;usb_device.c: 2413: {
 46761                           ;usb_device.c: 2415: USBCtrlTrfOutHandler();
 46762  011A7C  EC31  F098         	call	_USBCtrlTrfOutHandler	;wreg free
 46763                           
 46764                           ;usb_device.c: 2416: }
 46765                           ;usb_device.c: 2417: }
 46766  011A80  0012               	return	
 46767  011A82                     i2l20331:
 46768                           
 46769                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 46770  011A82  502C               	movf	_USTATcopy,w,c	;volatile
 46771  011A84  0BFD               	andlw	253
 46772  011A86  0A04               	xorlw	4
 46773  011A88  A4D8               	btfss	status,2,c
 46774  011A8A  0012               	return	
 46775                           
 46776                           ;usb_device.c: 2419: {
 46777                           ;usb_device.c: 2422: USBCtrlTrfInHandler();
 46778  011A8C  ECF5  F086         	call	_USBCtrlTrfInHandler	;wreg free
 46779  011A90  0012               	return	
 46780  011A92                     __end_of_USBCtrlEPService:
 46781                           	opt stack 0
 46782                           tosu	equ	0xFFF
 46783                           tosh	equ	0xFFE
 46784                           tosl	equ	0xFFD
 46785                           pclatu	equ	0xFFB
 46786                           pclath	equ	0xFFA
 46787                           tblptru	equ	0xFF8
 46788                           tblptrh	equ	0xFF7
 46789                           tblptrl	equ	0xFF6
 46790                           tablat	equ	0xFF5
 46791                           prodh	equ	0xFF4
 46792                           prodl	equ	0xFF3
 46793                           intcon	equ	0xFF2
 46794                           intcon2	equ	0xFF1
 46795                           intcon3	equ	0xFF0
 46796                           indf0	equ	0xFEF
 46797                           postinc0	equ	0xFEE
 46798                           fsr0h	equ	0xFEA
 46799                           fsr0l	equ	0xFE9
 46800                           wreg	equ	0xFE8
 46801                           indf1	equ	0xFE7
 46802                           postinc1	equ	0xFE6
 46803                           postdec1	equ	0xFE5
 46804                           plusw1	equ	0xFE3
 46805                           fsr1h	equ	0xFE2
 46806                           fsr1l	equ	0xFE1
 46807                           indf2	equ	0xFDF
 46808                           postinc2	equ	0xFDE
 46809                           postdec2	equ	0xFDD
 46810                           plusw2	equ	0xFDB
 46811                           fsr2h	equ	0xFDA
 46812                           fsr2l	equ	0xFD9
 46813                           status	equ	0xFD8
 46814                           
 46815 ;; *************** function i2_memcpy *****************
 46816 ;; Defined at:
 46817 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 46818 ;; Parameters:    Size  Location     Type
 46819 ;;  d1              2    0[COMRAM] PTR void 
 46820 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 46821 ;;		 -> SetupPkt(8), 
 46822 ;;  s1              2    2[COMRAM] PTR const void 
 46823 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 46824 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 46825 ;;		 -> SetupPkt(8), 
 46826 ;;  n               2    4[COMRAM] unsigned int 
 46827 ;; Auto vars:     Size  Location     Type
 46828 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 46829 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 46830 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 46831 ;;		 -> SetupPkt(8), 
 46832 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 46833 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 46834 ;;		 -> SetupPkt(8), 
 46835 ;;  memcpy          1   10[COMRAM] unsigned char 
 46836 ;; Return value:  Size  Location     Type
 46837 ;;                  2    0[COMRAM] PTR void 
 46838 ;; Registers used:
 46839 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 46840 ;; Tracked objects:
 46841 ;;		On entry : 0/0
 46842 ;;		On exit  : 0/0
 46843 ;;		Unchanged: 0/0
 46844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46845 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46846 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46848 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46849 ;;Total ram usage:       11 bytes
 46850 ;; Hardware stack levels used:    1
 46851 ;; This function calls:
 46852 ;;		Nothing
 46853 ;; This function is called by:
 46854 ;;		_USBCtrlEPService
 46855 ;; This function uses a non-reentrant model
 46856 ;;
 46857                           
 46858                           	psect	text222
 46859  013006                     __ptext222:
 46860                           	opt stack 0
 46861  013006                     i2_memcpy:
 46862                           	opt stack 15
 46863                           
 46864                           ;incstack = 0
 46865  013006  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 46866  01300A  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 46867  01300E  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 46868  013012  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 46869  013016  D01C               	goto	i2l14311
 46870  013018                     i2l14303:
 46871  013018  C036  FFF6         	movff	i2memcpy@s,tblptrl
 46872  01301C  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 46873  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 46874  013022  6EF8               	movwf	tblptru,c
 46875  013024  0E0E               	movlw	(high __ramtop+-1)
 46876  013026  64F7               	cpfsgt	tblptrh,c
 46877  013028  D003               	bra	i2u1223_47
 46878  01302A  0008               	tblrd		*
 46879  01302C  50F5               	movf	tablat,w,c
 46880  01302E  D005               	bra	i2u1223_40
 46881  013030                     i2u1223_47:
 46882  013030  CFF6 FFE9          	movff	tblptrl,fsr0l
 46883  013034  CFF7 FFEA          	movff	tblptrh,fsr0h
 46884  013038  50EF               	movf	indf0,w,c
 46885  01303A                     i2u1223_40:
 46886  01303A  6E38               	movwf	i2memcpy@tmp,c
 46887  01303C  4A36               	infsnz	i2memcpy@s,f,c
 46888  01303E  2A37               	incf	i2memcpy@s+1,f,c
 46889  013040  C034  FFD9         	movff	i2memcpy@d,fsr2l
 46890  013044  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 46891  013048  C038  FFDF         	movff	i2memcpy@tmp,indf2
 46892  01304C  4A34               	infsnz	i2memcpy@d,f,c
 46893  01304E  2A35               	incf	i2memcpy@d+1,f,c
 46894  013050                     i2l14311:
 46895  013050  0632               	decf	i2memcpy@n,f,c
 46896  013052  A0D8               	btfss	status,0,c
 46897  013054  0633               	decf	i2memcpy@n+1,f,c
 46898  013056  2832               	incf	i2memcpy@n,w,c
 46899  013058  E1DF               	bnz	i2l14303
 46900  01305A  2833               	incf	i2memcpy@n+1,w,c
 46901  01305C  B4D8               	btfsc	status,2,c
 46902  01305E  0012               	return	
 46903  013060  D7DB               	goto	i2l14303
 46904  013062                     __end_ofi2_memcpy:
 46905                           	opt stack 0
 46906                           tosu	equ	0xFFF
 46907                           tosh	equ	0xFFE
 46908                           tosl	equ	0xFFD
 46909                           pclatu	equ	0xFFB
 46910                           pclath	equ	0xFFA
 46911                           tblptru	equ	0xFF8
 46912                           tblptrh	equ	0xFF7
 46913                           tblptrl	equ	0xFF6
 46914                           tablat	equ	0xFF5
 46915                           prodh	equ	0xFF4
 46916                           prodl	equ	0xFF3
 46917                           intcon	equ	0xFF2
 46918                           intcon2	equ	0xFF1
 46919                           intcon3	equ	0xFF0
 46920                           indf0	equ	0xFEF
 46921                           postinc0	equ	0xFEE
 46922                           fsr0h	equ	0xFEA
 46923                           fsr0l	equ	0xFE9
 46924                           wreg	equ	0xFE8
 46925                           indf1	equ	0xFE7
 46926                           postinc1	equ	0xFE6
 46927                           postdec1	equ	0xFE5
 46928                           plusw1	equ	0xFE3
 46929                           fsr1h	equ	0xFE2
 46930                           fsr1l	equ	0xFE1
 46931                           indf2	equ	0xFDF
 46932                           postinc2	equ	0xFDE
 46933                           postdec2	equ	0xFDD
 46934                           plusw2	equ	0xFDB
 46935                           fsr2h	equ	0xFDA
 46936                           fsr2l	equ	0xFD9
 46937                           status	equ	0xFD8
 46938                           
 46939 ;; *************** function _USBCtrlTrfSetupHandler *****************
 46940 ;; Defined at:
 46941 ;;		line 2467 in file "usb_device.c"
 46942 ;; Parameters:    Size  Location     Type
 46943 ;;		None
 46944 ;; Auto vars:     Size  Location     Type
 46945 ;;		None
 46946 ;; Return value:  Size  Location     Type
 46947 ;;                  1    wreg      void 
 46948 ;; Registers used:
 46949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46950 ;; Tracked objects:
 46951 ;;		On entry : 0/0
 46952 ;;		On exit  : 0/0
 46953 ;;		Unchanged: 0/0
 46954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46959 ;;Total ram usage:        0 bytes
 46960 ;; Hardware stack levels used:    1
 46961 ;; Hardware stack levels required when called:    6
 46962 ;; This function calls:
 46963 ;;		_USBCheckStdRequest
 46964 ;;		_USBCtrlEPServiceComplete
 46965 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46966 ;; This function is called by:
 46967 ;;		_USBCtrlEPService
 46968 ;; This function uses a non-reentrant model
 46969 ;;
 46970                           
 46971                           	psect	text223
 46972  011BB8                     __ptext223:
 46973                           	opt stack 0
 46974  011BB8                     _USBCtrlTrfSetupHandler:
 46975                           	opt stack 9
 46976                           
 46977                           ;usb_device.c: 2472: shortPacketStatus = 0;
 46978                           
 46979                           ;incstack = 0
 46980  011BB8  0E00               	movlw	0
 46981  011BBA  6E2A               	movwf	_shortPacketStatus,c	;volatile
 46982                           
 46983                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 46984  011BBC  0E00               	movlw	0
 46985  011BBE  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 46986                           
 46987                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 46988  011BC0  0E00               	movlw	0
 46989  011BC2  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 46990                           
 46991                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 46992  011BC4  0E00               	movlw	0
 46993  011BC6  0101               	movlb	1	; () banked
 46994  011BC8  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 46995                           
 46996                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 46997  011BCA  0E00               	movlw	0
 46998  011BCC  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 46999                           
 47000                           ;usb_device.c: 2477: controlTransferState = 0;
 47001  011BCE  0E00               	movlw	0
 47002  011BD0  6E29               	movwf	_controlTransferState,c	;volatile
 47003                           
 47004                           ; BSR set to: 1
 47005                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 47006  011BD2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47007  011BD6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47008  011BDA  0E7F               	movlw	127
 47009  011BDC  16DF               	andwf	indf2,f,c
 47010                           
 47011                           ; BSR set to: 1
 47012                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 47013  011BDE  0E04               	movlw	4
 47014  011BE0  1810               	xorwf	_pBDTEntryIn,w,c
 47015  011BE2  6E10               	movwf	_pBDTEntryIn,c
 47016  011BE4  5011               	movf	_pBDTEntryIn+1,w,c
 47017  011BE6  6E11               	movwf	_pBDTEntryIn+1,c
 47018                           
 47019                           ; BSR set to: 1
 47020                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 47021  011BE8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47022  011BEC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47023  011BF0  0E7F               	movlw	127
 47024  011BF2  16DF               	andwf	indf2,f,c
 47025                           
 47026                           ; BSR set to: 1
 47027                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 47028  011BF4  0E04               	movlw	4
 47029  011BF6  1810               	xorwf	_pBDTEntryIn,w,c
 47030  011BF8  6E10               	movwf	_pBDTEntryIn,c
 47031  011BFA  5011               	movf	_pBDTEntryIn+1,w,c
 47032  011BFC  6E11               	movwf	_pBDTEntryIn+1,c
 47033                           
 47034                           ; BSR set to: 1
 47035                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 47036  011BFE  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47037  011C02  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47038  011C06  0E7F               	movlw	127
 47039  011C08  16DF               	andwf	indf2,f,c
 47040                           
 47041                           ; BSR set to: 1
 47042                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 47043  011C0A  0E00               	movlw	0
 47044  011C0C  6E0D               	movwf	_inPipes+3,c	;volatile
 47045                           
 47046                           ; BSR set to: 1
 47047                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 47048  011C0E  0E00               	movlw	0
 47049  011C10  6E0F               	movwf	_inPipes+5,c	;volatile
 47050  011C12  0E00               	movlw	0
 47051  011C14  6E0E               	movwf	_inPipes+4,c	;volatile
 47052                           
 47053                           ; BSR set to: 1
 47054                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 47055  011C16  0E00               	movlw	0
 47056  011C18  6E04               	movwf	_outPipes+3,c	;volatile
 47057                           
 47058                           ; BSR set to: 1
 47059                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 47060  011C1A  0E00               	movlw	0
 47061  011C1C  6E06               	movwf	_outPipes+5,c	;volatile
 47062  011C1E  0E00               	movlw	0
 47063  011C20  6E05               	movwf	_outPipes+4,c	;volatile
 47064                           
 47065                           ; BSR set to: 1
 47066                           ;usb_device.c: 2502: USBCheckStdRequest();
 47067  011C22  ECE2  F082         	call	_USBCheckStdRequest	;wreg free
 47068                           
 47069                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 47070  011C26  0E00               	movlw	0
 47071  011C28  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47072  011C2A  0E03               	movlw	3
 47073  011C2C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47074  011C2E  0E00               	movlw	0
 47075  011C30  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47076  011C32  0E00               	movlw	0
 47077  011C34  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47078  011C36  0E00               	movlw	0
 47079  011C38  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47080  011C3A  0E00               	movlw	0
 47081  011C3C  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47082  011C3E  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47083                           
 47084                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 47085  011C42  EC13  F081         	call	_USBCtrlEPServiceComplete	;wreg free
 47086  011C46  0012               	return		;funcret
 47087  011C48                     __end_of_USBCtrlTrfSetupHandler:
 47088                           	opt stack 0
 47089                           tosu	equ	0xFFF
 47090                           tosh	equ	0xFFE
 47091                           tosl	equ	0xFFD
 47092                           pclatu	equ	0xFFB
 47093                           pclath	equ	0xFFA
 47094                           tblptru	equ	0xFF8
 47095                           tblptrh	equ	0xFF7
 47096                           tblptrl	equ	0xFF6
 47097                           tablat	equ	0xFF5
 47098                           prodh	equ	0xFF4
 47099                           prodl	equ	0xFF3
 47100                           intcon	equ	0xFF2
 47101                           intcon2	equ	0xFF1
 47102                           intcon3	equ	0xFF0
 47103                           indf0	equ	0xFEF
 47104                           postinc0	equ	0xFEE
 47105                           fsr0h	equ	0xFEA
 47106                           fsr0l	equ	0xFE9
 47107                           wreg	equ	0xFE8
 47108                           indf1	equ	0xFE7
 47109                           postinc1	equ	0xFE6
 47110                           postdec1	equ	0xFE5
 47111                           plusw1	equ	0xFE3
 47112                           fsr1h	equ	0xFE2
 47113                           fsr1l	equ	0xFE1
 47114                           indf2	equ	0xFDF
 47115                           postinc2	equ	0xFDE
 47116                           postdec2	equ	0xFDD
 47117                           plusw2	equ	0xFDB
 47118                           fsr2h	equ	0xFDA
 47119                           fsr2l	equ	0xFD9
 47120                           status	equ	0xFD8
 47121                           
 47122 ;; *************** function _USBCtrlEPServiceComplete *****************
 47123 ;; Defined at:
 47124 ;;		line 1618 in file "usb_device.c"
 47125 ;; Parameters:    Size  Location     Type
 47126 ;;		None
 47127 ;; Auto vars:     Size  Location     Type
 47128 ;;		None
 47129 ;; Return value:  Size  Location     Type
 47130 ;;                  1    wreg      void 
 47131 ;; Registers used:
 47132 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 47133 ;; Tracked objects:
 47134 ;;		On entry : 0/0
 47135 ;;		On exit  : 0/0
 47136 ;;		Unchanged: 0/0
 47137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47142 ;;Total ram usage:        0 bytes
 47143 ;; Hardware stack levels used:    1
 47144 ;; Hardware stack levels required when called:    2
 47145 ;; This function calls:
 47146 ;;		_USBCtrlEPAllowDataStage
 47147 ;;		_USBCtrlEPAllowStatusStage
 47148 ;; This function is called by:
 47149 ;;		_USBCtrlTrfSetupHandler
 47150 ;; This function uses a non-reentrant model
 47151 ;;
 47152                           
 47153                           	psect	text224
 47154  010226                     __ptext224:
 47155                           	opt stack 0
 47156  010226                     _USBCtrlEPServiceComplete:
 47157                           	opt stack 12
 47158                           
 47159                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 47160                           
 47161                           ;incstack = 0
 47162  010226  9865               	bcf	3941,4,c	;volatile
 47163                           
 47164                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 47165  010228  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 47166  01022A  D039               	goto	i2l233
 47167                           
 47168                           ;usb_device.c: 1631: {
 47169                           ;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 47170  01022C  AE04               	btfss	_outPipes+3,7,c	;volatile
 47171  01022E  D00C               	goto	i2l12817
 47172                           
 47173                           ;usb_device.c: 1633: {
 47174                           ;usb_device.c: 1634: controlTransferState = 2;
 47175  010230  0E02               	movlw	2
 47176  010232  6E29               	movwf	_controlTransferState,c	;volatile
 47177                           
 47178                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 47179  010234  0101               	movlb	1	; () banked
 47180  010236  51FB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 47181  010238  B4D8               	btfsc	status,2,c
 47182                           
 47183                           ; BSR set to: 1
 47184                           ;usb_device.c: 1646: {
 47185                           ;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 47186  01023A  EC1B  F08C         	call	_USBCtrlEPAllowDataStage	;wreg free
 47187                           
 47188                           ;usb_device.c: 1648: }
 47189                           ;usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 47190  01023E  0E00               	movlw	0
 47191  010240  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 47192                           
 47193                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 47194  010242  0E00               	movlw	0
 47195  010244  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 47196                           
 47197                           ;usb_device.c: 1654: }
 47198  010246  0012               	return	
 47199  010248                     i2l12817:
 47200                           
 47201                           ;usb_device.c: 1655: else
 47202                           ;usb_device.c: 1656: {
 47203                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
 47204  010248  EE20 F001          	lfsr	2,1
 47205  01024C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47206  01024E  26D9               	addwf	fsr2l,f,c
 47207  010250  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47208  010252  22DA               	addwfc	fsr2h,f,c
 47209  010254  0E08               	movlw	8
 47210  010256  6EDF               	movwf	indf2,c
 47211                           
 47212                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 47213  010258  EE20 F002          	lfsr	2,2
 47214  01025C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47215  01025E  26D9               	addwf	fsr2l,f,c
 47216  010260  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47217  010262  22DA               	addwfc	fsr2h,f,c
 47218  010264  0E30               	movlw	48
 47219  010266  6EDE               	movwf	postinc2,c
 47220  010268  0E0D               	movlw	13
 47221  01026A  6EDD               	movwf	postdec2,c
 47222                           
 47223                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 47224  01026C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47225  010270  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47226  010274  0E0C               	movlw	12
 47227  010276  6EDF               	movwf	indf2,c
 47228                           
 47229                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47230  010278  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47231  01027C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47232  010280  0E00               	movlw	0
 47233  010282  8EDB               	bsf	plusw2,7,c
 47234                           
 47235                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 47236  010284  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47237  010288  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47238  01028C  0E04               	movlw	4
 47239  01028E  6EDF               	movwf	indf2,c
 47240                           
 47241                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 47242  010290  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47243  010294  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47244  010298  0E00               	movlw	0
 47245  01029A  8EDB               	bsf	plusw2,7,c
 47246                           
 47247                           ;usb_device.c: 1667: }
 47248                           ;usb_device.c: 1668: }
 47249  01029C  0012               	return	
 47250  01029E                     i2l233:
 47251                           
 47252                           ;usb_device.c: 1669: else
 47253                           ;usb_device.c: 1670: {
 47254                           ;usb_device.c: 1671: if(SetupPkt.DataDir == (0x80>>7))
 47255  01029E  010D               	movlb	13	; () banked
 47256  0102A0  AF30               	btfss	48,7,b	;volatile
 47257  0102A2  D010               	goto	i2l12837
 47258                           
 47259                           ; BSR set to: 13
 47260                           ;usb_device.c: 1672: {
 47261                           ;usb_device.c: 1673: controlTransferState = 1;
 47262  0102A4  0E01               	movlw	1
 47263  0102A6  6E29               	movwf	_controlTransferState,c	;volatile
 47264                           
 47265                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 47266  0102A8  5020               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 47267  0102AA  B4D8               	btfsc	status,2,c
 47268                           
 47269                           ; BSR set to: 13
 47270                           ;usb_device.c: 1688: {
 47271                           ;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 47272  0102AC  EC1B  F08C         	call	_USBCtrlEPAllowDataStage	;wreg free
 47273                           
 47274                           ;usb_device.c: 1690: }
 47275                           ;usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 47276  0102B0  0E00               	movlw	0
 47277  0102B2  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 47278                           
 47279                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 47280  0102B4  0E00               	movlw	0
 47281  0102B6  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 47282                           
 47283                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 47284  0102B8  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 47285  0102BA  A4D8               	btfss	status,2,c
 47286  0102BC  0012               	return	
 47287                           
 47288                           ;usb_device.c: 1715: {
 47289                           ;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 47290  0102BE  EC34  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 47291                           
 47292                           ;usb_device.c: 1717: }
 47293                           ;usb_device.c: 1718: }
 47294  0102C2  0012               	return	
 47295  0102C4                     i2l12837:
 47296                           
 47297                           ;usb_device.c: 1719: else
 47298                           ;usb_device.c: 1720: {
 47299                           ;usb_device.c: 1731: controlTransferState = 2;
 47300  0102C4  0E02               	movlw	2
 47301  0102C6  6E29               	movwf	_controlTransferState,c	;volatile
 47302                           
 47303                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 47304  0102C8  EE20 F001          	lfsr	2,1
 47305  0102CC  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47306  0102CE  26D9               	addwf	fsr2l,f,c
 47307  0102D0  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47308  0102D2  22DA               	addwfc	fsr2h,f,c
 47309  0102D4  0E08               	movlw	8
 47310  0102D6  6EDF               	movwf	indf2,c
 47311                           
 47312                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 47313  0102D8  EE20 F002          	lfsr	2,2
 47314  0102DC  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47315  0102DE  26D9               	addwf	fsr2l,f,c
 47316  0102E0  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47317  0102E2  22DA               	addwfc	fsr2h,f,c
 47318  0102E4  0E30               	movlw	48
 47319  0102E6  6EDE               	movwf	postinc2,c
 47320  0102E8  0E0D               	movlw	13
 47321  0102EA  6EDD               	movwf	postdec2,c
 47322                           
 47323                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 47324  0102EC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47325  0102F0  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47326  0102F4  0E04               	movlw	4
 47327  0102F6  6EDF               	movwf	indf2,c
 47328                           
 47329                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47330  0102F8  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47331  0102FC  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47332  010300  0E00               	movlw	0
 47333  010302  8EDB               	bsf	plusw2,7,c
 47334                           
 47335                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 47336  010304  0E00               	movlw	0
 47337  010306  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 47338                           
 47339                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 47340  010308  0E00               	movlw	0
 47341  01030A  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 47342                           
 47343                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 47344  01030C  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 47345  01030E  A4D8               	btfss	status,2,c
 47346  010310  0012               	return	
 47347                           
 47348                           ;usb_device.c: 1743: {
 47349                           ;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 47350  010312  EC34  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 47351  010316  0012               	return	
 47352  010318                     __end_of_USBCtrlEPServiceComplete:
 47353                           	opt stack 0
 47354                           tosu	equ	0xFFF
 47355                           tosh	equ	0xFFE
 47356                           tosl	equ	0xFFD
 47357                           pclatu	equ	0xFFB
 47358                           pclath	equ	0xFFA
 47359                           tblptru	equ	0xFF8
 47360                           tblptrh	equ	0xFF7
 47361                           tblptrl	equ	0xFF6
 47362                           tablat	equ	0xFF5
 47363                           prodh	equ	0xFF4
 47364                           prodl	equ	0xFF3
 47365                           intcon	equ	0xFF2
 47366                           intcon2	equ	0xFF1
 47367                           intcon3	equ	0xFF0
 47368                           indf0	equ	0xFEF
 47369                           postinc0	equ	0xFEE
 47370                           fsr0h	equ	0xFEA
 47371                           fsr0l	equ	0xFE9
 47372                           wreg	equ	0xFE8
 47373                           indf1	equ	0xFE7
 47374                           postinc1	equ	0xFE6
 47375                           postdec1	equ	0xFE5
 47376                           plusw1	equ	0xFE3
 47377                           fsr1h	equ	0xFE2
 47378                           fsr1l	equ	0xFE1
 47379                           indf2	equ	0xFDF
 47380                           postinc2	equ	0xFDE
 47381                           postdec2	equ	0xFDD
 47382                           plusw2	equ	0xFDB
 47383                           fsr2h	equ	0xFDA
 47384                           fsr2l	equ	0xFD9
 47385                           status	equ	0xFD8
 47386                           
 47387 ;; *************** function _USBCtrlEPAllowDataStage *****************
 47388 ;; Defined at:
 47389 ;;		line 1490 in file "usb_device.c"
 47390 ;; Parameters:    Size  Location     Type
 47391 ;;		None
 47392 ;; Auto vars:     Size  Location     Type
 47393 ;;		None
 47394 ;; Return value:  Size  Location     Type
 47395 ;;                  1    wreg      void 
 47396 ;; Registers used:
 47397 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 47398 ;; Tracked objects:
 47399 ;;		On entry : 0/0
 47400 ;;		On exit  : 0/0
 47401 ;;		Unchanged: 0/0
 47402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47407 ;;Total ram usage:        0 bytes
 47408 ;; Hardware stack levels used:    1
 47409 ;; Hardware stack levels required when called:    1
 47410 ;; This function calls:
 47411 ;;		_USBCtrlTrfTxService
 47412 ;; This function is called by:
 47413 ;;		_USBCtrlEPServiceComplete
 47414 ;; This function uses a non-reentrant model
 47415 ;;
 47416                           
 47417                           	psect	text225
 47418  011836                     __ptext225:
 47419                           	opt stack 0
 47420  011836                     _USBCtrlEPAllowDataStage:
 47421                           	opt stack 12
 47422                           
 47423                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 47424                           
 47425                           ;incstack = 0
 47426  011836  0E00               	movlw	0
 47427  011838  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 47428                           
 47429                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 47430  01183A  0E00               	movlw	0
 47431  01183C  0101               	movlb	1	; () banked
 47432  01183E  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 47433                           
 47434                           ; BSR set to: 1
 47435                           ;usb_device.c: 1495: if(controlTransferState == 2)
 47436  011840  0E02               	movlw	2
 47437  011842  1829               	xorwf	_controlTransferState,w,c	;volatile
 47438  011844  A4D8               	btfss	status,2,c
 47439  011846  D01F               	goto	i2l12237
 47440                           
 47441                           ; BSR set to: 1
 47442                           ;usb_device.c: 1496: {
 47443                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 47444  011848  EE20 F001          	lfsr	2,1
 47445  01184C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47446  01184E  26D9               	addwf	fsr2l,f,c
 47447  011850  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47448  011852  22DA               	addwfc	fsr2h,f,c
 47449  011854  0E08               	movlw	8
 47450  011856  6EDF               	movwf	indf2,c
 47451                           
 47452                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 47453  011858  EE20 F002          	lfsr	2,2
 47454  01185C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47455  01185E  26D9               	addwf	fsr2l,f,c
 47456  011860  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47457  011862  22DA               	addwfc	fsr2h,f,c
 47458  011864  0E38               	movlw	56
 47459  011866  6EDE               	movwf	postinc2,c
 47460  011868  0E0D               	movlw	13
 47461  01186A  6EDD               	movwf	postdec2,c
 47462                           
 47463                           ; BSR set to: 1
 47464                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 47465  01186C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47466  011870  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47467  011874  0E48               	movlw	72
 47468  011876  6EDF               	movwf	indf2,c
 47469                           
 47470                           ; BSR set to: 1
 47471                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47472  011878  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47473  01187C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47474  011880  0E00               	movlw	0
 47475  011882  8EDB               	bsf	plusw2,7,c
 47476                           
 47477                           ;usb_device.c: 1502: }
 47478  011884  0012               	return	
 47479  011886                     i2l12237:
 47480                           
 47481                           ; BSR set to: 1
 47482                           ;usb_device.c: 1503: else
 47483                           ;usb_device.c: 1504: {
 47484                           ;usb_device.c: 1507: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 47485  011886  500E               	movf	_inPipes+4,w,c	;volatile
 47486  011888  010D               	movlb	13	; () banked
 47487  01188A  5D36               	subwf	54,w,b	;volatile
 47488  01188C  500F               	movf	_inPipes+5,w,c	;volatile
 47489  01188E  010D               	movlb	13	; () banked
 47490  011890  5937               	subwfb	55,w,b	;volatile
 47491  011892  B0D8               	btfsc	status,0,c
 47492  011894  D004               	goto	i2l12241
 47493                           
 47494                           ; BSR set to: 13
 47495                           ;usb_device.c: 1508: {
 47496                           ;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 47497  011896  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 47498  01189A  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 47499  01189E                     i2l12241:
 47500                           
 47501                           ; BSR set to: 13
 47502                           ;usb_device.c: 1510: }
 47503                           ;usb_device.c: 1511: USBCtrlTrfTxService();
 47504  01189E  EC68  F085         	call	_USBCtrlTrfTxService	;wreg free
 47505                           
 47506                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 47507  0118A2  EE20 F002          	lfsr	2,2
 47508  0118A6  5010               	movf	_pBDTEntryIn,w,c
 47509  0118A8  26D9               	addwf	fsr2l,f,c
 47510  0118AA  5011               	movf	_pBDTEntryIn+1,w,c
 47511  0118AC  22DA               	addwfc	fsr2h,f,c
 47512  0118AE  0E38               	movlw	56
 47513  0118B0  6EDE               	movwf	postinc2,c
 47514  0118B2  0E0D               	movlw	13
 47515  0118B4  6EDD               	movwf	postdec2,c
 47516                           
 47517                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 47518  0118B6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47519  0118BA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47520  0118BE  0E48               	movlw	72
 47521  0118C0  6EDF               	movwf	indf2,c
 47522                           
 47523                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 47524  0118C2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47525  0118C6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47526  0118CA  0E00               	movlw	0
 47527  0118CC  8EDB               	bsf	plusw2,7,c
 47528  0118CE  0012               	return	
 47529  0118D0                     __end_of_USBCtrlEPAllowDataStage:
 47530                           	opt stack 0
 47531                           tosu	equ	0xFFF
 47532                           tosh	equ	0xFFE
 47533                           tosl	equ	0xFFD
 47534                           pclatu	equ	0xFFB
 47535                           pclath	equ	0xFFA
 47536                           tblptru	equ	0xFF8
 47537                           tblptrh	equ	0xFF7
 47538                           tblptrl	equ	0xFF6
 47539                           tablat	equ	0xFF5
 47540                           prodh	equ	0xFF4
 47541                           prodl	equ	0xFF3
 47542                           intcon	equ	0xFF2
 47543                           intcon2	equ	0xFF1
 47544                           intcon3	equ	0xFF0
 47545                           indf0	equ	0xFEF
 47546                           postinc0	equ	0xFEE
 47547                           fsr0h	equ	0xFEA
 47548                           fsr0l	equ	0xFE9
 47549                           wreg	equ	0xFE8
 47550                           indf1	equ	0xFE7
 47551                           postinc1	equ	0xFE6
 47552                           postdec1	equ	0xFE5
 47553                           plusw1	equ	0xFE3
 47554                           fsr1h	equ	0xFE2
 47555                           fsr1l	equ	0xFE1
 47556                           indf2	equ	0xFDF
 47557                           postinc2	equ	0xFDE
 47558                           postdec2	equ	0xFDD
 47559                           plusw2	equ	0xFDB
 47560                           fsr2h	equ	0xFDA
 47561                           fsr2l	equ	0xFD9
 47562                           status	equ	0xFD8
 47563                           
 47564 ;; *************** function _USBCheckStdRequest *****************
 47565 ;; Defined at:
 47566 ;;		line 2688 in file "usb_device.c"
 47567 ;; Parameters:    Size  Location     Type
 47568 ;;		None
 47569 ;; Auto vars:     Size  Location     Type
 47570 ;;		None
 47571 ;; Return value:  Size  Location     Type
 47572 ;;                  1    wreg      void 
 47573 ;; Registers used:
 47574 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47575 ;; Tracked objects:
 47576 ;;		On entry : 0/0
 47577 ;;		On exit  : 0/0
 47578 ;;		Unchanged: 0/0
 47579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47584 ;;Total ram usage:        0 bytes
 47585 ;; Hardware stack levels used:    1
 47586 ;; Hardware stack levels required when called:    5
 47587 ;; This function calls:
 47588 ;;		_USBStdFeatureReqHandler
 47589 ;;		_USBStdGetDscHandler
 47590 ;;		_USBStdGetStatusHandler
 47591 ;;		_USBStdSetCfgHandler
 47592 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47593 ;; This function is called by:
 47594 ;;		_USBCtrlTrfSetupHandler
 47595 ;; This function uses a non-reentrant model
 47596 ;;
 47597                           
 47598                           	psect	text226
 47599  0105C4                     __ptext226:
 47600                           	opt stack 0
 47601  0105C4                     _USBCheckStdRequest:
 47602                           	opt stack 9
 47603                           
 47604                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 47605                           
 47606                           ;incstack = 0
 47607  0105C4  010D               	movlb	13	; () banked
 47608  0105C6  3930               	swapf	48,w,b	;volatile
 47609  0105C8  32E8               	rrcf	wreg,f,c
 47610  0105CA  0B03               	andlw	3
 47611  0105CC  0900               	iorlw	0
 47612  0105CE  A4D8               	btfss	status,2,c
 47613  0105D0  0012               	return	
 47614  0105D2  D043               	goto	i2l18991
 47615  0105D4                     i2l358:
 47616                           
 47617                           ; BSR set to: 13
 47618                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 47619  0105D4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47620                           
 47621                           ; BSR set to: 13
 47622                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 47623  0105D6  0E08               	movlw	8
 47624  0105D8  6E2B               	movwf	_USBDeviceState,c	;volatile
 47625                           
 47626                           ;usb_device.c: 2698: break;
 47627  0105DA  0012               	return	
 47628  0105DC                     i2l18961:
 47629                           
 47630                           ; BSR set to: 13
 47631                           ;usb_device.c: 2700: USBStdGetDscHandler();
 47632  0105DC  EC9E  F078         	call	_USBStdGetDscHandler	;wreg free
 47633                           
 47634                           ;usb_device.c: 2701: break;
 47635  0105E0  0012               	return	
 47636  0105E2                     i2l18963:
 47637                           
 47638                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 47639  0105E2  EC74  F082         	call	_USBStdSetCfgHandler	;wreg free
 47640                           
 47641                           ;usb_device.c: 2704: break;
 47642  0105E6  0012               	return	
 47643  0105E8                     i2l18965:
 47644                           
 47645                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 47646  0105E8  0E2D               	movlw	low _USBActiveConfiguration
 47647  0105EA  6E0A               	movwf	_inPipes,c	;volatile
 47648  0105EC  0E00               	movlw	high _USBActiveConfiguration
 47649  0105EE  6E0B               	movwf	_inPipes+1,c	;volatile
 47650                           
 47651                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 47652  0105F0  800D               	bsf	_inPipes+3,0,c	;volatile
 47653                           
 47654                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 47655  0105F2  0E01               	movlw	1
 47656  0105F4  6E0E               	movwf	_inPipes+4,c	;volatile
 47657                           
 47658                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 47659  0105F6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47660                           
 47661                           ;usb_device.c: 2710: break;
 47662  0105F8  0012               	return	
 47663  0105FA                     i2l18973:
 47664                           
 47665                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 47666  0105FA  EC39  F08A         	call	_USBStdGetStatusHandler	;wreg free
 47667                           
 47668                           ;usb_device.c: 2713: break;
 47669  0105FE  0012               	return	
 47670  010600                     i2l18975:
 47671                           
 47672                           ;usb_device.c: 2715: case 3:
 47673                           ;usb_device.c: 2716: USBStdFeatureReqHandler();
 47674  010600  ECC2  F067         	call	_USBStdFeatureReqHandler	;wreg free
 47675                           
 47676                           ;usb_device.c: 2717: break;
 47677  010604  0012               	return	
 47678  010606                     i2l18977:
 47679                           
 47680                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 47681  010606  010D               	movlb	13	; () banked
 47682  010608  5134               	movf	52,w,b	;volatile
 47683  01060A  0D01               	mullw	1
 47684  01060C  0EFC               	movlw	low _USBAlternateInterface
 47685  01060E  24F3               	addwf	prodl,w,c
 47686  010610  6E0A               	movwf	_inPipes,c	;volatile
 47687  010612  0E01               	movlw	high _USBAlternateInterface
 47688  010614  20F4               	addwfc	prodh,w,c
 47689  010616  6E0B               	movwf	_inPipes+1,c	;volatile
 47690                           
 47691                           ; BSR set to: 13
 47692                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 47693  010618  800D               	bsf	_inPipes+3,0,c	;volatile
 47694                           
 47695                           ; BSR set to: 13
 47696                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 47697  01061A  0E01               	movlw	1
 47698  01061C  6E0E               	movwf	_inPipes+4,c	;volatile
 47699                           
 47700                           ; BSR set to: 13
 47701                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 47702  01061E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47703                           
 47704                           ;usb_device.c: 2723: break;
 47705  010620  0012               	return	
 47706  010622                     i2l367:
 47707                           
 47708                           ; BSR set to: 13
 47709                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 47710  010622  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47711                           
 47712                           ; BSR set to: 13
 47713                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 47714  010624  010D               	movlb	13	; () banked
 47715  010626  5134               	movf	52,w,b	;volatile
 47716  010628  0D01               	mullw	1
 47717  01062A  0EFC               	movlw	low _USBAlternateInterface
 47718  01062C  24F3               	addwf	prodl,w,c
 47719  01062E  6ED9               	movwf	fsr2l,c
 47720  010630  0E01               	movlw	high _USBAlternateInterface
 47721  010632  20F4               	addwfc	prodh,w,c
 47722  010634  6EDA               	movwf	fsr2h,c
 47723  010636  CD32 FFDF          	movff	3378,indf2	;volatile
 47724                           
 47725                           ;usb_device.c: 2727: break;
 47726  01063A  0012               	return	
 47727  01063C                     i2l18987:
 47728                           
 47729                           ; BSR set to: 13
 47730                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 47731  01063C  0E00               	movlw	0
 47732  01063E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47733  010640  0E02               	movlw	2
 47734  010642  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47735  010644  0E00               	movlw	0
 47736  010646  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47737  010648  0E00               	movlw	0
 47738  01064A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47739  01064C  0E00               	movlw	0
 47740  01064E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47741  010650  0E00               	movlw	0
 47742  010652  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47743  010654  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47744                           
 47745                           ;usb_device.c: 2734: }
 47746                           
 47747                           ;usb_device.c: 2733: break;
 47748                           
 47749                           ;usb_device.c: 2732: default:
 47750                           
 47751                           ;usb_device.c: 2731: case 12:
 47752                           
 47753                           ;usb_device.c: 2730: break;
 47754  010658  0012               	return	
 47755  01065A                     i2l18991:
 47756  01065A  010D               	movlb	13	; () banked
 47757  01065C  5131               	movf	49,w,b	;volatile
 47758                           
 47759                           ; Switch size 1, requested type "space"
 47760                           ; Number of cases is 11, Range of values is 0 to 12
 47761                           ; switch strategies available:
 47762                           ; Name         Instructions Cycles
 47763                           ; simple_byte           34    18 (average)
 47764                           ;	Chosen strategy is simple_byte
 47765  01065E  0A00               	xorlw	0	; case 0
 47766  010660  B4D8               	btfsc	status,2,c
 47767  010662  D7CB               	goto	i2l18973
 47768  010664  0A01               	xorlw	1	; case 1
 47769  010666  B4D8               	btfsc	status,2,c
 47770  010668  D7CB               	goto	i2l18975
 47771  01066A  0A02               	xorlw	2	; case 3
 47772  01066C  B4D8               	btfsc	status,2,c
 47773  01066E  D7C8               	goto	i2l18975
 47774  010670  0A06               	xorlw	6	; case 5
 47775  010672  B4D8               	btfsc	status,2,c
 47776  010674  D7AF               	goto	i2l358
 47777  010676  0A03               	xorlw	3	; case 6
 47778  010678  B4D8               	btfsc	status,2,c
 47779  01067A  D7B0               	goto	i2l18961
 47780  01067C  0A01               	xorlw	1	; case 7
 47781  01067E  B4D8               	btfsc	status,2,c
 47782  010680  D7DD               	goto	i2l18987
 47783  010682  0A0F               	xorlw	15	; case 8
 47784  010684  B4D8               	btfsc	status,2,c
 47785  010686  D7B0               	goto	i2l18965
 47786  010688  0A01               	xorlw	1	; case 9
 47787  01068A  B4D8               	btfsc	status,2,c
 47788  01068C  D7AA               	goto	i2l18963
 47789  01068E  0A03               	xorlw	3	; case 10
 47790  010690  B4D8               	btfsc	status,2,c
 47791  010692  D7B9               	goto	i2l18977
 47792  010694  0A01               	xorlw	1	; case 11
 47793  010696  B4D8               	btfsc	status,2,c
 47794  010698  D7C4               	goto	i2l367
 47795  01069A  0A07               	xorlw	7	; case 12
 47796  01069C  0012               	return	
 47797  01069E                     __end_of_USBCheckStdRequest:
 47798                           	opt stack 0
 47799                           tosu	equ	0xFFF
 47800                           tosh	equ	0xFFE
 47801                           tosl	equ	0xFFD
 47802                           pclatu	equ	0xFFB
 47803                           pclath	equ	0xFFA
 47804                           tblptru	equ	0xFF8
 47805                           tblptrh	equ	0xFF7
 47806                           tblptrl	equ	0xFF6
 47807                           tablat	equ	0xFF5
 47808                           prodh	equ	0xFF4
 47809                           prodl	equ	0xFF3
 47810                           intcon	equ	0xFF2
 47811                           intcon2	equ	0xFF1
 47812                           intcon3	equ	0xFF0
 47813                           indf0	equ	0xFEF
 47814                           postinc0	equ	0xFEE
 47815                           fsr0h	equ	0xFEA
 47816                           fsr0l	equ	0xFE9
 47817                           wreg	equ	0xFE8
 47818                           indf1	equ	0xFE7
 47819                           postinc1	equ	0xFE6
 47820                           postdec1	equ	0xFE5
 47821                           plusw1	equ	0xFE3
 47822                           fsr1h	equ	0xFE2
 47823                           fsr1l	equ	0xFE1
 47824                           indf2	equ	0xFDF
 47825                           postinc2	equ	0xFDE
 47826                           postdec2	equ	0xFDD
 47827                           plusw2	equ	0xFDB
 47828                           fsr2h	equ	0xFDA
 47829                           fsr2l	equ	0xFD9
 47830                           status	equ	0xFD8
 47831                           
 47832 ;; *************** function _USBStdSetCfgHandler *****************
 47833 ;; Defined at:
 47834 ;;		line 1970 in file "usb_device.c"
 47835 ;; Parameters:    Size  Location     Type
 47836 ;;		None
 47837 ;; Auto vars:     Size  Location     Type
 47838 ;;  i               1   23[COMRAM] unsigned char 
 47839 ;; Return value:  Size  Location     Type
 47840 ;;                  1    wreg      void 
 47841 ;; Registers used:
 47842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47843 ;; Tracked objects:
 47844 ;;		On entry : 0/0
 47845 ;;		On exit  : 0/0
 47846 ;;		Unchanged: 0/0
 47847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47852 ;;Total ram usage:        1 bytes
 47853 ;; Hardware stack levels used:    1
 47854 ;; Hardware stack levels required when called:    4
 47855 ;; This function calls:
 47856 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47857 ;;		i2_memset
 47858 ;; This function is called by:
 47859 ;;		_USBCheckStdRequest
 47860 ;; This function uses a non-reentrant model
 47861 ;;
 47862                           
 47863                           	psect	text227
 47864  0104E8                     __ptext227:
 47865                           	opt stack 0
 47866  0104E8                     _USBStdSetCfgHandler:
 47867                           	opt stack 9
 47868                           
 47869                           ;usb_device.c: 1972: uint8_t i;
 47870                           ;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 47871                           
 47872                           ;incstack = 0
 47873  0104E8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47874                           
 47875                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 47876  0104EA  0E27               	movlw	39
 47877  0104EC  6E2E               	movwf	i2memset@p1,c
 47878  0104EE  0E0F               	movlw	15
 47879  0104F0  6E2F               	movwf	i2memset@p1+1,c
 47880  0104F2  0E00               	movlw	0
 47881  0104F4  6E31               	movwf	i2memset@c+1,c
 47882  0104F6  0E00               	movlw	0
 47883  0104F8  6E30               	movwf	i2memset@c,c
 47884  0104FA  0E00               	movlw	0
 47885  0104FC  6E33               	movwf	i2memset@n+1,c
 47886  0104FE  0E02               	movlw	2
 47887  010500  6E32               	movwf	i2memset@n,c
 47888  010502  EC0B  F09E         	call	i2_memset	;wreg free
 47889                           
 47890                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 47891  010506  0E00               	movlw	0
 47892  010508  6E2E               	movwf	i2memset@p1,c
 47893  01050A  0E0D               	movlw	13
 47894  01050C  6E2F               	movwf	i2memset@p1+1,c
 47895  01050E  0E00               	movlw	0
 47896  010510  6E31               	movwf	i2memset@c+1,c
 47897  010512  0E00               	movlw	0
 47898  010514  6E30               	movwf	i2memset@c,c
 47899  010516  0E00               	movlw	0
 47900  010518  6E33               	movwf	i2memset@n+1,c
 47901  01051A  0E30               	movlw	48
 47902  01051C  6E32               	movwf	i2memset@n,c
 47903  01051E  EC0B  F09E         	call	i2_memset	;wreg free
 47904                           
 47905                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 47906  010522  8C65               	bsf	3941,6,c	;volatile
 47907                           
 47908                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 47909  010524  0E00               	movlw	0
 47910  010526  6E45               	movwf	USBStdSetCfgHandler@i,c
 47911  010528                     i2l18467:
 47912  010528  0E02               	movlw	2
 47913  01052A  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 47914  01052C  D001               	goto	i2l18471
 47915  01052E  D016               	goto	i2l18477
 47916  010530                     i2l18471:
 47917                           
 47918                           ;usb_device.c: 1990: {
 47919                           ;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 47920  010530  5045               	movf	USBStdSetCfgHandler@i,w,c
 47921  010532  0D01               	mullw	1
 47922  010534  0EE4               	movlw	low _ep_data_in
 47923  010536  24F3               	addwf	prodl,w,c
 47924  010538  6ED9               	movwf	fsr2l,c
 47925  01053A  0E01               	movlw	high _ep_data_in
 47926  01053C  20F4               	addwfc	prodh,w,c
 47927  01053E  6EDA               	movwf	fsr2h,c
 47928  010540  0E00               	movlw	0
 47929  010542  6EDF               	movwf	indf2,c
 47930                           
 47931                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 47932  010544  5045               	movf	USBStdSetCfgHandler@i,w,c
 47933  010546  0D01               	mullw	1
 47934  010548  0EE1               	movlw	low _ep_data_out
 47935  01054A  24F3               	addwf	prodl,w,c
 47936  01054C  6ED9               	movwf	fsr2l,c
 47937  01054E  0E01               	movlw	high _ep_data_out
 47938  010550  20F4               	addwfc	prodh,w,c
 47939  010552  6EDA               	movwf	fsr2h,c
 47940  010554  0E00               	movlw	0
 47941  010556  6EDF               	movwf	indf2,c
 47942  010558  2A45               	incf	USBStdSetCfgHandler@i,f,c
 47943  01055A  D7E6               	goto	i2l18467
 47944  01055C                     i2l18477:
 47945                           
 47946                           ;usb_device.c: 1993: }
 47947                           ;usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 47948  01055C  0EFC               	movlw	low _USBAlternateInterface
 47949  01055E  6E2E               	movwf	i2memset@p1,c
 47950  010560  0E01               	movlw	high _USBAlternateInterface
 47951  010562  6E2F               	movwf	i2memset@p1+1,c
 47952  010564  0E00               	movlw	0
 47953  010566  6E31               	movwf	i2memset@c+1,c
 47954  010568  0E00               	movlw	0
 47955  01056A  6E30               	movwf	i2memset@c,c
 47956  01056C  0E00               	movlw	0
 47957  01056E  6E33               	movwf	i2memset@n+1,c
 47958  010570  0E02               	movlw	2
 47959  010572  6E32               	movwf	i2memset@n,c
 47960  010574  EC0B  F09E         	call	i2_memset	;wreg free
 47961                           
 47962                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 47963  010578  9C65               	bcf	3941,6,c	;volatile
 47964                           
 47965                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 47966  01057A  0E08               	movlw	8
 47967  01057C  6E10               	movwf	_pBDTEntryIn,c
 47968  01057E  0E0D               	movlw	13
 47969  010580  6E11               	movwf	_pBDTEntryIn+1,c
 47970                           
 47971                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 47972  010582  0E00               	movlw	0
 47973  010584  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 47974  010586  0E0D               	movlw	13
 47975  010588  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 47976                           
 47977                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 47978  01058A  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 47979  01058E  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 47980                           
 47981                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 47982  010592  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 47983                           
 47984                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 47985  010596  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 47986  010598  A4D8               	btfss	status,2,c
 47987  01059A  D003               	goto	i2l18493
 47988                           
 47989                           ;usb_device.c: 2012: {
 47990                           ;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 47991  01059C  0E10               	movlw	16
 47992  01059E  6E2B               	movwf	_USBDeviceState,c	;volatile
 47993                           
 47994                           ;usb_device.c: 2015: }
 47995  0105A0  0012               	return	
 47996  0105A2                     i2l18493:
 47997                           
 47998                           ;usb_device.c: 2016: else
 47999                           ;usb_device.c: 2017: {
 48000                           ;usb_device.c: 2019: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 48001  0105A2  0E00               	movlw	0
 48002  0105A4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48003  0105A6  0E01               	movlw	1
 48004  0105A8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48005  0105AA  0E2D               	movlw	low _USBActiveConfiguration
 48006  0105AC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48007  0105AE  0E00               	movlw	high _USBActiveConfiguration
 48008  0105B0  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48009  0105B2  0E00               	movlw	0
 48010  0105B4  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48011  0105B6  0E01               	movlw	1
 48012  0105B8  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48013  0105BA  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48014                           
 48015                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 48016  0105BE  0E20               	movlw	32
 48017  0105C0  6E2B               	movwf	_USBDeviceState,c	;volatile
 48018  0105C2  0012               	return	
 48019  0105C4                     __end_of_USBStdSetCfgHandler:
 48020                           	opt stack 0
 48021                           tosu	equ	0xFFF
 48022                           tosh	equ	0xFFE
 48023                           tosl	equ	0xFFD
 48024                           pclatu	equ	0xFFB
 48025                           pclath	equ	0xFFA
 48026                           tblptru	equ	0xFF8
 48027                           tblptrh	equ	0xFF7
 48028                           tblptrl	equ	0xFF6
 48029                           tablat	equ	0xFF5
 48030                           prodh	equ	0xFF4
 48031                           prodl	equ	0xFF3
 48032                           intcon	equ	0xFF2
 48033                           intcon2	equ	0xFF1
 48034                           intcon3	equ	0xFF0
 48035                           indf0	equ	0xFEF
 48036                           postinc0	equ	0xFEE
 48037                           fsr0h	equ	0xFEA
 48038                           fsr0l	equ	0xFE9
 48039                           wreg	equ	0xFE8
 48040                           indf1	equ	0xFE7
 48041                           postinc1	equ	0xFE6
 48042                           postdec1	equ	0xFE5
 48043                           plusw1	equ	0xFE3
 48044                           fsr1h	equ	0xFE2
 48045                           fsr1l	equ	0xFE1
 48046                           indf2	equ	0xFDF
 48047                           postinc2	equ	0xFDE
 48048                           postdec2	equ	0xFDD
 48049                           plusw2	equ	0xFDB
 48050                           fsr2h	equ	0xFDA
 48051                           fsr2l	equ	0xFD9
 48052                           status	equ	0xFD8
 48053                           
 48054 ;; *************** function i2_memset *****************
 48055 ;; Defined at:
 48056 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 48057 ;; Parameters:    Size  Location     Type
 48058 ;;  p1              2    0[COMRAM] PTR void 
 48059 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 48060 ;;  c               2    2[COMRAM] int 
 48061 ;;  n               2    4[COMRAM] unsigned int 
 48062 ;; Auto vars:     Size  Location     Type
 48063 ;;  memset          2    6[COMRAM] PTR unsigned char 
 48064 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 48065 ;; Return value:  Size  Location     Type
 48066 ;;                  2    0[COMRAM] PTR void 
 48067 ;; Registers used:
 48068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48069 ;; Tracked objects:
 48070 ;;		On entry : 0/0
 48071 ;;		On exit  : 0/0
 48072 ;;		Unchanged: 0/0
 48073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48074 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48077 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48078 ;;Total ram usage:        8 bytes
 48079 ;; Hardware stack levels used:    1
 48080 ;; This function calls:
 48081 ;;		Nothing
 48082 ;; This function is called by:
 48083 ;;		_USBStdSetCfgHandler
 48084 ;;		i2_USBDeviceInit
 48085 ;; This function uses a non-reentrant model
 48086 ;;
 48087                           
 48088                           	psect	text228
 48089  013C16                     __ptext228:
 48090                           	opt stack 0
 48091  013C16                     i2_memset:
 48092                           	opt stack 15
 48093                           
 48094                           ;incstack = 0
 48095  013C16  C02E  F034         	movff	i2memset@p1,i2memset@p
 48096  013C1A  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 48097  013C1E  D008               	goto	i2l12191
 48098  013C20                     i2l12187:
 48099  013C20  C034  FFD9         	movff	i2memset@p,fsr2l
 48100  013C24  C035  FFDA         	movff	i2memset@p+1,fsr2h
 48101  013C28  C030  FFDF         	movff	i2memset@c,indf2
 48102  013C2C  4A34               	infsnz	i2memset@p,f,c
 48103  013C2E  2A35               	incf	i2memset@p+1,f,c
 48104  013C30                     i2l12191:
 48105  013C30  0632               	decf	i2memset@n,f,c
 48106  013C32  A0D8               	btfss	status,0,c
 48107  013C34  0633               	decf	i2memset@n+1,f,c
 48108  013C36  2832               	incf	i2memset@n,w,c
 48109  013C38  E1F3               	bnz	i2l12187
 48110  013C3A  2833               	incf	i2memset@n+1,w,c
 48111  013C3C  B4D8               	btfsc	status,2,c
 48112  013C3E  0012               	return	
 48113  013C40  D7EF               	goto	i2l12187
 48114  013C42                     __end_ofi2_memset:
 48115                           	opt stack 0
 48116                           tosu	equ	0xFFF
 48117                           tosh	equ	0xFFE
 48118                           tosl	equ	0xFFD
 48119                           pclatu	equ	0xFFB
 48120                           pclath	equ	0xFFA
 48121                           tblptru	equ	0xFF8
 48122                           tblptrh	equ	0xFF7
 48123                           tblptrl	equ	0xFF6
 48124                           tablat	equ	0xFF5
 48125                           prodh	equ	0xFF4
 48126                           prodl	equ	0xFF3
 48127                           intcon	equ	0xFF2
 48128                           intcon2	equ	0xFF1
 48129                           intcon3	equ	0xFF0
 48130                           indf0	equ	0xFEF
 48131                           postinc0	equ	0xFEE
 48132                           fsr0h	equ	0xFEA
 48133                           fsr0l	equ	0xFE9
 48134                           wreg	equ	0xFE8
 48135                           indf1	equ	0xFE7
 48136                           postinc1	equ	0xFE6
 48137                           postdec1	equ	0xFE5
 48138                           plusw1	equ	0xFE3
 48139                           fsr1h	equ	0xFE2
 48140                           fsr1l	equ	0xFE1
 48141                           indf2	equ	0xFDF
 48142                           postinc2	equ	0xFDE
 48143                           postdec2	equ	0xFDD
 48144                           plusw2	equ	0xFDB
 48145                           fsr2h	equ	0xFDA
 48146                           fsr2l	equ	0xFD9
 48147                           status	equ	0xFD8
 48148                           
 48149 ;; *************** function _USBStdGetStatusHandler *****************
 48150 ;; Defined at:
 48151 ;;		line 2131 in file "usb_device.c"
 48152 ;; Parameters:    Size  Location     Type
 48153 ;;		None
 48154 ;; Auto vars:     Size  Location     Type
 48155 ;;  p               2    1[COMRAM] PTR struct __BDT
 48156 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48157 ;; Return value:  Size  Location     Type
 48158 ;;                  1    wreg      void 
 48159 ;; Registers used:
 48160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48161 ;; Tracked objects:
 48162 ;;		On entry : 0/0
 48163 ;;		On exit  : 0/0
 48164 ;;		Unchanged: 0/0
 48165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48170 ;;Total ram usage:        3 bytes
 48171 ;; Hardware stack levels used:    1
 48172 ;; This function calls:
 48173 ;;		Nothing
 48174 ;; This function is called by:
 48175 ;;		_USBCheckStdRequest
 48176 ;; This function uses a non-reentrant model
 48177 ;;
 48178                           
 48179                           	psect	text229
 48180  011472                     __ptext229:
 48181                           	opt stack 0
 48182  011472                     _USBStdGetStatusHandler:
 48183                           	opt stack 13
 48184                           
 48185                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 48186                           
 48187                           ;incstack = 0
 48188  011472  0E00               	movlw	0
 48189  011474  010D               	movlb	13	; () banked
 48190  011476  6F38               	movwf	56,b	;volatile
 48191                           
 48192                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 48193  011478  0E00               	movlw	0
 48194  01147A  010D               	movlb	13	; () banked
 48195  01147C  6F39               	movwf	57,b	;volatile
 48196                           
 48197                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 48198  01147E  D038               	goto	i2l12339
 48199  011480                     i2l296:
 48200                           
 48201                           ; BSR set to: 13
 48202                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 48203  011480  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48204                           
 48205                           ; BSR set to: 13
 48206                           ;usb_device.c: 2147: }
 48207                           ;usb_device.c: 2149: if(RemoteWakeup == 1)
 48208                           
 48209                           ; BSR set to: 13
 48210                           
 48211                           ; BSR set to: 13
 48212                           ;usb_device.c: 2145: {
 48213                           ;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 48214                           
 48215                           ;usb_device.c: 2144: if(0 == 1)
 48216  011482  0428               	decf	_RemoteWakeup,w,c	;volatile
 48217  011484  A4D8               	btfss	status,2,c
 48218  011486  D040               	goto	i2l299
 48219                           
 48220                           ; BSR set to: 13
 48221                           ;usb_device.c: 2150: {
 48222                           ;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 48223  011488  010D               	movlb	13	; () banked
 48224  01148A  8338               	bsf	56,1,b	;volatile
 48225                           
 48226                           ; BSR set to: 13
 48227                           ;usb_device.c: 2152: }
 48228                           ;usb_device.c: 2153: break;
 48229  01148C  D03D               	goto	i2l299
 48230  01148E                     i2l300:
 48231                           
 48232                           ; BSR set to: 13
 48233                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 48234  01148E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48235                           
 48236                           ;usb_device.c: 2156: break;
 48237  011490  D03B               	goto	i2l299
 48238  011492                     i2l301:
 48239                           
 48240                           ; BSR set to: 13
 48241                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 48242  011492  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48243                           
 48244                           ;usb_device.c: 2162: {
 48245                           ;usb_device.c: 2163: BDT_ENTRY *p;
 48246                           ;usb_device.c: 2165: if(SetupPkt.EPDir == 0)
 48247  011494  010D               	movlb	13	; () banked
 48248  011496  BF34               	btfsc	52,7,b	;volatile
 48249  011498  D00B               	goto	i2l12329
 48250                           
 48251                           ; BSR set to: 13
 48252                           ;usb_device.c: 2166: {
 48253                           ;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 48254  01149A  010D               	movlb	13	; () banked
 48255  01149C  5134               	movf	52,w,b	;volatile
 48256  01149E  0B0F               	andlw	15
 48257  0114A0  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 48258  0114A2  502E               	movf	??_USBStdGetStatusHandler,w,c
 48259  0114A4  0D02               	mullw	2
 48260  0114A6  0ED3               	movlw	low _pBDTEntryOut
 48261  0114A8  24F3               	addwf	prodl,w,c
 48262  0114AA  6ED9               	movwf	fsr2l,c
 48263  0114AC  0E01               	movlw	high _pBDTEntryOut
 48264  0114AE  D00A               	goto	L56
 48265  0114B0                     i2l12329:
 48266                           
 48267                           ; BSR set to: 13
 48268                           ;usb_device.c: 2169: else
 48269                           ;usb_device.c: 2170: {
 48270                           ;usb_device.c: 2171: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 48271  0114B0  010D               	movlb	13	; () banked
 48272  0114B2  5134               	movf	52,w,b	;volatile
 48273  0114B4  0B0F               	andlw	15
 48274  0114B6  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 48275  0114B8  502E               	movf	??_USBStdGetStatusHandler,w,c
 48276  0114BA  0D02               	mullw	2
 48277  0114BC  0E10               	movlw	low _pBDTEntryIn
 48278  0114BE  24F3               	addwf	prodl,w,c
 48279  0114C0  6ED9               	movwf	fsr2l,c
 48280  0114C2  0E00               	movlw	high _pBDTEntryIn
 48281  0114C4                     L56:
 48282  0114C4  20F4               	addwfc	prodh,w,c
 48283  0114C6  6EDA               	movwf	fsr2h,c
 48284  0114C8  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 48285  0114CC  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 48286                           
 48287                           ; BSR set to: 13
 48288                           ;usb_device.c: 2172: }
 48289                           ;usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 48290                           
 48291                           ; BSR set to: 13
 48292  0114D0  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 48293  0114D4  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 48294  0114D8  AEDF               	btfss	indf2,7,c
 48295  0114DA  D016               	goto	i2l299
 48296                           
 48297                           ; BSR set to: 13
 48298  0114DC  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 48299  0114E0  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 48300  0114E4  A4DF               	btfss	indf2,2,c
 48301  0114E6  D010               	goto	i2l299
 48302                           
 48303                           ; BSR set to: 13
 48304                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 48305  0114E8  0E01               	movlw	1
 48306  0114EA  010D               	movlb	13	; () banked
 48307  0114EC  6F38               	movwf	56,b	;volatile
 48308                           
 48309                           ; BSR set to: 13
 48310                           ;usb_device.c: 2177: }
 48311                           ;usb_device.c: 2178: }
 48312                           
 48313                           ; BSR set to: 13
 48314                           ;usb_device.c: 2176: break;
 48315  0114EE  D00C               	goto	i2l299
 48316  0114F0                     i2l12339:
 48317                           
 48318                           ; BSR set to: 13
 48319  0114F0  010D               	movlb	13	; () banked
 48320  0114F2  5130               	movf	48,w,b	;volatile
 48321  0114F4  0B1F               	andlw	31
 48322                           
 48323                           ; Switch size 1, requested type "space"
 48324                           ; Number of cases is 3, Range of values is 0 to 2
 48325                           ; switch strategies available:
 48326                           ; Name         Instructions Cycles
 48327                           ; simple_byte           10     6 (average)
 48328                           ;	Chosen strategy is simple_byte
 48329  0114F6  0A00               	xorlw	0	; case 0
 48330  0114F8  B4D8               	btfsc	status,2,c
 48331  0114FA  D7C2               	goto	i2l296
 48332  0114FC  0A01               	xorlw	1	; case 1
 48333  0114FE  B4D8               	btfsc	status,2,c
 48334  011500  D7C6               	goto	i2l300
 48335  011502  0A03               	xorlw	3	; case 2
 48336  011504  B4D8               	btfsc	status,2,c
 48337  011506  D7C5               	goto	i2l301
 48338  011508                     i2l299:
 48339                           
 48340                           ; BSR set to: 13
 48341                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 48342  011508  AE0D               	btfss	_inPipes+3,7,c	;volatile
 48343  01150A  0012               	return	
 48344                           
 48345                           ; BSR set to: 13
 48346                           ;usb_device.c: 2181: {
 48347                           ;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 48348  01150C  0E38               	movlw	56
 48349  01150E  6E0A               	movwf	_inPipes,c	;volatile
 48350  011510  0E0D               	movlw	13
 48351  011512  6E0B               	movwf	_inPipes+1,c	;volatile
 48352                           
 48353                           ; BSR set to: 13
 48354                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 48355  011514  800D               	bsf	_inPipes+3,0,c	;volatile
 48356                           
 48357                           ; BSR set to: 13
 48358                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 48359  011516  0E02               	movlw	2
 48360  011518  6E0E               	movwf	_inPipes+4,c	;volatile
 48361  01151A  0012               	return	
 48362  01151C                     __end_of_USBStdGetStatusHandler:
 48363                           	opt stack 0
 48364                           tosu	equ	0xFFF
 48365                           tosh	equ	0xFFE
 48366                           tosl	equ	0xFFD
 48367                           pclatu	equ	0xFFB
 48368                           pclath	equ	0xFFA
 48369                           tblptru	equ	0xFF8
 48370                           tblptrh	equ	0xFF7
 48371                           tblptrl	equ	0xFF6
 48372                           tablat	equ	0xFF5
 48373                           prodh	equ	0xFF4
 48374                           prodl	equ	0xFF3
 48375                           intcon	equ	0xFF2
 48376                           intcon2	equ	0xFF1
 48377                           intcon3	equ	0xFF0
 48378                           indf0	equ	0xFEF
 48379                           postinc0	equ	0xFEE
 48380                           fsr0h	equ	0xFEA
 48381                           fsr0l	equ	0xFE9
 48382                           wreg	equ	0xFE8
 48383                           indf1	equ	0xFE7
 48384                           postinc1	equ	0xFE6
 48385                           postdec1	equ	0xFE5
 48386                           plusw1	equ	0xFE3
 48387                           fsr1h	equ	0xFE2
 48388                           fsr1l	equ	0xFE1
 48389                           indf2	equ	0xFDF
 48390                           postinc2	equ	0xFDE
 48391                           postdec2	equ	0xFDD
 48392                           plusw2	equ	0xFDB
 48393                           fsr2h	equ	0xFDA
 48394                           fsr2l	equ	0xFD9
 48395                           status	equ	0xFD8
 48396                           
 48397 ;; *************** function _USBStdGetDscHandler *****************
 48398 ;; Defined at:
 48399 ;;		line 2045 in file "usb_device.c"
 48400 ;; Parameters:    Size  Location     Type
 48401 ;;		None
 48402 ;; Auto vars:     Size  Location     Type
 48403 ;;		None
 48404 ;; Return value:  Size  Location     Type
 48405 ;;                  1    wreg      void 
 48406 ;; Registers used:
 48407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48408 ;; Tracked objects:
 48409 ;;		On entry : 0/0
 48410 ;;		On exit  : 0/0
 48411 ;;		Unchanged: 0/0
 48412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48417 ;;Total ram usage:        2 bytes
 48418 ;; Hardware stack levels used:    1
 48419 ;; This function calls:
 48420 ;;		Nothing
 48421 ;; This function is called by:
 48422 ;;		_USBCheckStdRequest
 48423 ;; This function uses a non-reentrant model
 48424 ;;
 48425                           
 48426                           	psect	text230
 48427  00F13C                     __ptext230:
 48428                           	opt stack 0
 48429  00F13C                     _USBStdGetDscHandler:
 48430                           	opt stack 13
 48431                           
 48432                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 48433                           
 48434                           ; BSR set to: 13
 48435                           ;incstack = 0
 48436  00F13C  0E80               	movlw	128
 48437  00F13E  010D               	movlb	13	; () banked
 48438  00F140  1930               	xorwf	48,w,b	;volatile
 48439  00F142  A4D8               	btfss	status,2,c
 48440  00F144  0012               	return	
 48441                           
 48442                           ; BSR set to: 13
 48443                           ;usb_device.c: 2048: {
 48444                           ;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 48445  00F146  0EC0               	movlw	192
 48446  00F148  6E0D               	movwf	_inPipes+3,c	;volatile
 48447                           
 48448                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 48449  00F14A  D085               	goto	i2l12317
 48450  00F14C                     i2l12291:
 48451                           
 48452                           ; BSR set to: 13
 48453                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 48454  00F14C  0E18               	movlw	low _device_dsc
 48455  00F14E  6E0A               	movwf	_inPipes,c	;volatile
 48456  00F150  0E94               	movlw	high _device_dsc
 48457  00F152  6E0B               	movwf	_inPipes+1,c	;volatile
 48458                           
 48459                           ; BSR set to: 13
 48460                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 48461  00F154  0E00               	movlw	0
 48462  00F156  6E0F               	movwf	_inPipes+5,c	;volatile
 48463  00F158  0E12               	movlw	18
 48464  00F15A  6E0E               	movwf	_inPipes+4,c	;volatile
 48465                           
 48466                           ;usb_device.c: 2060: break;
 48467  00F15C  0012               	return	
 48468  00F15E                     i2l12295:
 48469                           
 48470                           ; BSR set to: 13
 48471                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 48472  00F15E  010D               	movlb	13	; () banked
 48473  00F160  5132               	movf	50,w,b	;volatile
 48474  00F162  A4D8               	btfss	status,2,c
 48475  00F164  D043               	goto	i2l12303
 48476                           
 48477                           ; BSR set to: 13
 48478                           ;usb_device.c: 2066: {
 48479                           ;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 48480  00F166  010D               	movlb	13	; () banked
 48481  00F168  5132               	movf	50,w,b	;volatile
 48482  00F16A  0D02               	mullw	2
 48483  00F16C  0E19               	movlw	low _USB_CD_Ptr
 48484  00F16E  24F3               	addwf	prodl,w,c
 48485  00F170  6EF6               	movwf	tblptrl,c
 48486  00F172  0E93               	movlw	high _USB_CD_Ptr
 48487  00F174  20F4               	addwfc	prodh,w,c
 48488  00F176  6EF7               	movwf	tblptrh,c
 48489  00F178                     	if	1	;There are 3 active tblptr bytes
 48490  00F178  6AF8               	clrf	tblptru,c
 48491  00F17A  0E00               	movlw	low (__mediumconst shr (0+16))
 48492  00F17C  22F8               	addwfc	tblptru,f,c
 48493  00F17E                     	endif
 48494  00F17E  0009               	tblrd		*+
 48495  00F180  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 48496  00F184  000A               	tblrd		*-
 48497  00F186  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 48498                           
 48499                           ; BSR set to: 13
 48500                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 48501  00F18A  0E02               	movlw	2
 48502  00F18C  240A               	addwf	_inPipes,w,c	;volatile
 48503  00F18E  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48504  00F190  0E00               	movlw	0
 48505  00F192  200B               	addwfc	_inPipes+1,w,c	;volatile
 48506  00F194  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 48507  00F196  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 48508  00F19A  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 48509  00F19E  0E00               	movlw	low (__mediumconst shr (0+16))
 48510  00F1A0  6EF8               	movwf	tblptru,c
 48511  00F1A2  0E0E               	movlw	(high __ramtop+-1)
 48512  00F1A4  64F7               	cpfsgt	tblptrh,c
 48513  00F1A6  D003               	bra	i2u979_47
 48514  00F1A8  0008               	tblrd		*
 48515  00F1AA  50F5               	movf	tablat,w,c
 48516  00F1AC  D005               	bra	i2u979_40
 48517  00F1AE                     i2u979_47:
 48518  00F1AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 48519  00F1B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 48520  00F1B6  50EF               	movf	indf0,w,c
 48521  00F1B8                     i2u979_40:
 48522  00F1B8  6E0E               	movwf	_inPipes+4,c	;volatile
 48523                           
 48524                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 48525  00F1BA  0E03               	movlw	3
 48526  00F1BC  240A               	addwf	_inPipes,w,c	;volatile
 48527  00F1BE  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48528  00F1C0  0E00               	movlw	0
 48529  00F1C2  200B               	addwfc	_inPipes+1,w,c	;volatile
 48530  00F1C4  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 48531  00F1C6  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 48532  00F1CA  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 48533  00F1CE  0E00               	movlw	low (__mediumconst shr (0+16))
 48534  00F1D0  6EF8               	movwf	tblptru,c
 48535  00F1D2  0E0E               	movlw	(high __ramtop+-1)
 48536  00F1D4  64F7               	cpfsgt	tblptrh,c
 48537  00F1D6  D003               	bra	i2u980_47
 48538  00F1D8  0008               	tblrd		*
 48539  00F1DA  50F5               	movf	tablat,w,c
 48540  00F1DC  D005               	bra	i2u980_40
 48541  00F1DE                     i2u980_47:
 48542  00F1DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 48543  00F1E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 48544  00F1E6  50EF               	movf	indf0,w,c
 48545  00F1E8                     i2u980_40:
 48546  00F1E8  6E0F               	movwf	_inPipes+5,c	;volatile
 48547                           
 48548                           ;usb_device.c: 2078: }
 48549  00F1EA  0012               	return	
 48550  00F1EC                     i2l12303:
 48551                           
 48552                           ;usb_device.c: 2079: else
 48553                           ;usb_device.c: 2080: {
 48554                           ;usb_device.c: 2081: inPipes[0].info.Val = 0;
 48555  00F1EC  0E00               	movlw	0
 48556  00F1EE  6E0D               	movwf	_inPipes+3,c	;volatile
 48557                           
 48558                           ;usb_device.c: 2082: }
 48559                           ;usb_device.c: 2083: break;
 48560  00F1F0  0012               	return	
 48561  00F1F2                     i2l12305:
 48562                           
 48563                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 48564  00F1F2  0E04               	movlw	4
 48565  00F1F4  010D               	movlb	13	; () banked
 48566  00F1F6  6132               	cpfslt	50,b	;volatile
 48567  00F1F8  D028               	goto	i2l12311
 48568                           
 48569                           ; BSR set to: 13
 48570                           ;usb_device.c: 2089: {
 48571                           ;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 48572  00F1FA  010D               	movlb	13	; () banked
 48573  00F1FC  5132               	movf	50,w,b	;volatile
 48574  00F1FE  0D02               	mullw	2
 48575  00F200  0E07               	movlw	low _USB_SD_Ptr
 48576  00F202  24F3               	addwf	prodl,w,c
 48577  00F204  6EF6               	movwf	tblptrl,c
 48578  00F206  0E93               	movlw	high _USB_SD_Ptr
 48579  00F208  20F4               	addwfc	prodh,w,c
 48580  00F20A  6EF7               	movwf	tblptrh,c
 48581  00F20C                     	if	1	;There are 3 active tblptr bytes
 48582  00F20C  6AF8               	clrf	tblptru,c
 48583  00F20E  0E00               	movlw	low (__mediumconst shr (0+16))
 48584  00F210  22F8               	addwfc	tblptru,f,c
 48585  00F212                     	endif
 48586  00F212  0009               	tblrd		*+
 48587  00F214  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 48588  00F218  000A               	tblrd		*-
 48589  00F21A  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 48590                           
 48591                           ; BSR set to: 13
 48592                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 48593  00F21E  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 48594  00F222  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 48595  00F226  0E00               	movlw	low (__mediumconst shr (0+16))
 48596  00F228  6EF8               	movwf	tblptru,c
 48597  00F22A  0E0E               	movlw	(high __ramtop+-1)
 48598  00F22C  64F7               	cpfsgt	tblptrh,c
 48599  00F22E  D003               	bra	i2u982_47
 48600  00F230  0008               	tblrd		*
 48601  00F232  50F5               	movf	tablat,w,c
 48602  00F234  D005               	bra	i2u982_40
 48603  00F236                     i2u982_47:
 48604  00F236  CFF6 FFE9          	movff	tblptrl,fsr0l
 48605  00F23A  CFF7 FFEA          	movff	tblptrh,fsr0h
 48606  00F23E  50EF               	movf	indf0,w,c
 48607  00F240                     i2u982_40:
 48608  00F240  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48609  00F242  502E               	movf	??_USBStdGetDscHandler,w,c
 48610  00F244  6E0E               	movwf	_inPipes+4,c	;volatile
 48611  00F246  6A0F               	clrf	_inPipes+5,c	;volatile
 48612                           
 48613                           ;usb_device.c: 2094: }
 48614  00F248  0012               	return	
 48615  00F24A                     i2l12311:
 48616                           
 48617                           ;usb_device.c: 2104: else
 48618                           ;usb_device.c: 2105: {
 48619                           ;usb_device.c: 2106: inPipes[0].info.Val = 0;
 48620  00F24A  0E00               	movlw	0
 48621  00F24C  6E0D               	movwf	_inPipes+3,c	;volatile
 48622                           
 48623                           ;usb_device.c: 2107: }
 48624                           ;usb_device.c: 2108: break;
 48625  00F24E  0012               	return	
 48626  00F250                     i2l12313:
 48627                           
 48628                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 48629  00F250  0E00               	movlw	0
 48630  00F252  6E0D               	movwf	_inPipes+3,c	;volatile
 48631                           
 48632                           ;usb_device.c: 2112: }
 48633                           
 48634                           ;usb_device.c: 2111: break;
 48635  00F254  0012               	return	
 48636  00F256                     i2l12317:
 48637  00F256  010D               	movlb	13	; () banked
 48638  00F258  5133               	movf	51,w,b	;volatile
 48639                           
 48640                           ; Switch size 1, requested type "space"
 48641                           ; Number of cases is 3, Range of values is 1 to 3
 48642                           ; switch strategies available:
 48643                           ; Name         Instructions Cycles
 48644                           ; simple_byte           10     6 (average)
 48645                           ;	Chosen strategy is simple_byte
 48646  00F25A  0A01               	xorlw	1	; case 1
 48647  00F25C  B4D8               	btfsc	status,2,c
 48648  00F25E  D776               	goto	i2l12291
 48649  00F260  0A03               	xorlw	3	; case 2
 48650  00F262  B4D8               	btfsc	status,2,c
 48651  00F264  D77C               	goto	i2l12295
 48652  00F266  0A01               	xorlw	1	; case 3
 48653  00F268  B4D8               	btfsc	status,2,c
 48654  00F26A  D7C3               	goto	i2l12305
 48655  00F26C  D7F1               	goto	i2l12313
 48656  00F26E                     __end_of_USBStdGetDscHandler:
 48657                           	opt stack 0
 48658                           tosu	equ	0xFFF
 48659                           tosh	equ	0xFFE
 48660                           tosl	equ	0xFFD
 48661                           pclatu	equ	0xFFB
 48662                           pclath	equ	0xFFA
 48663                           tblptru	equ	0xFF8
 48664                           tblptrh	equ	0xFF7
 48665                           tblptrl	equ	0xFF6
 48666                           tablat	equ	0xFF5
 48667                           prodh	equ	0xFF4
 48668                           prodl	equ	0xFF3
 48669                           intcon	equ	0xFF2
 48670                           intcon2	equ	0xFF1
 48671                           intcon3	equ	0xFF0
 48672                           indf0	equ	0xFEF
 48673                           postinc0	equ	0xFEE
 48674                           fsr0h	equ	0xFEA
 48675                           fsr0l	equ	0xFE9
 48676                           wreg	equ	0xFE8
 48677                           indf1	equ	0xFE7
 48678                           postinc1	equ	0xFE6
 48679                           postdec1	equ	0xFE5
 48680                           plusw1	equ	0xFE3
 48681                           fsr1h	equ	0xFE2
 48682                           fsr1l	equ	0xFE1
 48683                           indf2	equ	0xFDF
 48684                           postinc2	equ	0xFDE
 48685                           postdec2	equ	0xFDD
 48686                           plusw2	equ	0xFDB
 48687                           fsr2h	equ	0xFDA
 48688                           fsr2l	equ	0xFD9
 48689                           status	equ	0xFD8
 48690                           
 48691 ;; *************** function _USBStdFeatureReqHandler *****************
 48692 ;; Defined at:
 48693 ;;		line 2756 in file "usb_device.c"
 48694 ;; Parameters:    Size  Location     Type
 48695 ;;		None
 48696 ;; Auto vars:     Size  Location     Type
 48697 ;;  p               2   27[COMRAM] PTR struct __BDT
 48698 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48699 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 48700 ;;		 -> UEP0(1), 
 48701 ;;  current_ep_d    1   26[COMRAM] struct .
 48702 ;; Return value:  Size  Location     Type
 48703 ;;                  1    wreg      void 
 48704 ;; Registers used:
 48705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48706 ;; Tracked objects:
 48707 ;;		On entry : 0/0
 48708 ;;		On exit  : 0/0
 48709 ;;		Unchanged: 0/0
 48710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48712 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48715 ;;Total ram usage:        6 bytes
 48716 ;; Hardware stack levels used:    1
 48717 ;; Hardware stack levels required when called:    4
 48718 ;; This function calls:
 48719 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48720 ;; This function is called by:
 48721 ;;		_USBCheckStdRequest
 48722 ;; This function uses a non-reentrant model
 48723 ;;
 48724                           
 48725                           	psect	text231
 48726  00CF84                     __ptext231:
 48727                           	opt stack 0
 48728  00CF84                     _USBStdFeatureReqHandler:
 48729                           	opt stack 9
 48730                           
 48731                           ;usb_device.c: 2758: BDT_ENTRY *p;
 48732                           ;usb_device.c: 2759: EP_STATUS current_ep_data;
 48733                           ;usb_device.c: 2763: unsigned char* pUEP;
 48734                           ;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&
 48735                           ;usb_device.c: 2802: (SetupPkt.Recipient == (0x00)))
 48736                           
 48737                           ;incstack = 0
 48738  00CF84  010D               	movlb	13	; () banked
 48739  00CF86  0532               	decf	50,w,b	;volatile
 48740  00CF88  A4D8               	btfss	status,2,c
 48741  00CF8A  D010               	goto	i2l373
 48742                           
 48743                           ; BSR set to: 13
 48744  00CF8C  010D               	movlb	13	; () banked
 48745  00CF8E  5130               	movf	48,w,b	;volatile
 48746  00CF90  0B1F               	andlw	31
 48747  00CF92  0900               	iorlw	0
 48748  00CF94  A4D8               	btfss	status,2,c
 48749  00CF96  D00A               	goto	i2l373
 48750                           
 48751                           ; BSR set to: 13
 48752                           ;usb_device.c: 2803: {
 48753                           ;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 48754  00CF98  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48755                           
 48756                           ; BSR set to: 13
 48757                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 48758  00CF9A  0E03               	movlw	3
 48759  00CF9C  010D               	movlb	13	; () banked
 48760  00CF9E  1931               	xorwf	49,w,b	;volatile
 48761  00CFA0  A4D8               	btfss	status,2,c
 48762  00CFA2  D002               	goto	i2l18507
 48763                           
 48764                           ; BSR set to: 13
 48765                           ;usb_device.c: 2806: RemoteWakeup = 1;
 48766  00CFA4  0E01               	movlw	1
 48767  00CFA6  D001               	goto	L57
 48768  00CFA8                     i2l18507:
 48769                           
 48770                           ; BSR set to: 13
 48771                           ;usb_device.c: 2807: else
 48772                           ;usb_device.c: 2808: RemoteWakeup = 0;
 48773  00CFA8  0E00               	movlw	0
 48774  00CFAA                     L57:
 48775  00CFAA  6E28               	movwf	_RemoteWakeup,c	;volatile
 48776  00CFAC                     i2l373:
 48777                           
 48778                           ; BSR set to: 13
 48779                           ;usb_device.c: 2809: }
 48780                           ;usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&
 48781                           ;usb_device.c: 2813: (SetupPkt.Recipient == (0x02))&&
 48782                           ;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 48783                           ;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 48784  00CFAC  010D               	movlb	13	; () banked
 48785  00CFAE  5132               	movf	50,w,b	;volatile
 48786  00CFB0  A4D8               	btfss	status,2,c
 48787  00CFB2  0012               	return	
 48788                           
 48789                           ; BSR set to: 13
 48790  00CFB4  010D               	movlb	13	; () banked
 48791  00CFB6  5130               	movf	48,w,b	;volatile
 48792  00CFB8  0B1F               	andlw	31
 48793  00CFBA  0A02               	xorlw	2
 48794  00CFBC  A4D8               	btfss	status,2,c
 48795  00CFBE  0012               	return	
 48796                           
 48797                           ; BSR set to: 13
 48798  00CFC0  010D               	movlb	13	; () banked
 48799  00CFC2  5134               	movf	52,w,b	;volatile
 48800  00CFC4  0B0F               	andlw	15
 48801  00CFC6  0900               	iorlw	0
 48802  00CFC8  B4D8               	btfsc	status,2,c
 48803  00CFCA  0012               	return	
 48804                           
 48805                           ; BSR set to: 13
 48806  00CFCC  010D               	movlb	13	; () banked
 48807  00CFCE  5134               	movf	52,w,b	;volatile
 48808  00CFD0  0B0F               	andlw	15
 48809  00CFD2  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48810  00CFD4  0E03               	movlw	3
 48811  00CFD6  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 48812  00CFD8  0012               	return	
 48813                           
 48814                           ; BSR set to: 13
 48815  00CFDA  0E20               	movlw	32
 48816  00CFDC  182B               	xorwf	_USBDeviceState,w,c	;volatile
 48817  00CFDE  A4D8               	btfss	status,2,c
 48818  00CFE0  0012               	return	
 48819                           
 48820                           ; BSR set to: 13
 48821                           ;usb_device.c: 2816: {
 48822                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 48823  00CFE2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48824                           
 48825                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 48826  00CFE4  010D               	movlb	13	; () banked
 48827  00CFE6  BF34               	btfsc	52,7,b	;volatile
 48828  00CFE8  D01B               	goto	i2l18521
 48829                           
 48830                           ; BSR set to: 13
 48831                           ;usb_device.c: 2823: {
 48832                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 48833  00CFEA  010D               	movlb	13	; () banked
 48834  00CFEC  5134               	movf	52,w,b	;volatile
 48835  00CFEE  0B0F               	andlw	15
 48836  00CFF0  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48837  00CFF2  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48838  00CFF4  0D02               	mullw	2
 48839  00CFF6  0ED3               	movlw	low _pBDTEntryOut
 48840  00CFF8  24F3               	addwf	prodl,w,c
 48841  00CFFA  6ED9               	movwf	fsr2l,c
 48842  00CFFC  0E01               	movlw	high _pBDTEntryOut
 48843  00CFFE  20F4               	addwfc	prodh,w,c
 48844  00D000  6EDA               	movwf	fsr2h,c
 48845  00D002  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 48846  00D006  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 48847                           
 48848                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 48849  00D00A  010D               	movlb	13	; () banked
 48850  00D00C  5134               	movf	52,w,b	;volatile
 48851  00D00E  0B0F               	andlw	15
 48852  00D010  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48853  00D012  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48854  00D014  0D01               	mullw	1
 48855  00D016  0EE1               	movlw	low _ep_data_out
 48856  00D018  24F3               	addwf	prodl,w,c
 48857  00D01A  6ED9               	movwf	fsr2l,c
 48858  00D01C  0E01               	movlw	high _ep_data_out
 48859  00D01E  D01A               	goto	L58
 48860  00D020                     i2l18521:
 48861                           
 48862                           ; BSR set to: 13
 48863                           ;usb_device.c: 2827: else
 48864                           ;usb_device.c: 2828: {
 48865                           ;usb_device.c: 2829: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 48866  00D020  010D               	movlb	13	; () banked
 48867  00D022  5134               	movf	52,w,b	;volatile
 48868  00D024  0B0F               	andlw	15
 48869  00D026  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48870  00D028  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48871  00D02A  0D02               	mullw	2
 48872  00D02C  0E10               	movlw	low _pBDTEntryIn
 48873  00D02E  24F3               	addwf	prodl,w,c
 48874  00D030  6ED9               	movwf	fsr2l,c
 48875  00D032  0E00               	movlw	high _pBDTEntryIn
 48876  00D034  20F4               	addwfc	prodh,w,c
 48877  00D036  6EDA               	movwf	fsr2h,c
 48878  00D038  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 48879  00D03C  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 48880                           
 48881                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 48882  00D040  010D               	movlb	13	; () banked
 48883  00D042  5134               	movf	52,w,b	;volatile
 48884  00D044  0B0F               	andlw	15
 48885  00D046  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48886  00D048  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48887  00D04A  0D01               	mullw	1
 48888  00D04C  0EE4               	movlw	low _ep_data_in
 48889  00D04E  24F3               	addwf	prodl,w,c
 48890  00D050  6ED9               	movwf	fsr2l,c
 48891  00D052  0E01               	movlw	high _ep_data_in
 48892  00D054                     L58:
 48893  00D054  20F4               	addwfc	prodh,w,c
 48894  00D056  6EDA               	movwf	fsr2h,c
 48895  00D058  50DF               	movf	indf2,w,c
 48896  00D05A  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 48897                           
 48898                           ; BSR set to: 13
 48899                           ;usb_device.c: 2831: }
 48900                           ;usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 48901                           
 48902                           ; BSR set to: 13
 48903  00D05C  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 48904  00D05E  D006               	goto	i2l18527
 48905                           
 48906                           ; BSR set to: 13
 48907                           ;usb_device.c: 2838: {
 48908                           ;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 48909  00D060  0EFB               	movlw	251
 48910  00D062  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 48911  00D064  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48912  00D066  0EFF               	movlw	255
 48913  00D068  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 48914  00D06A  D004               	goto	L59
 48915  00D06C                     i2l18527:
 48916                           
 48917                           ; BSR set to: 13
 48918                           ;usb_device.c: 2841: else
 48919                           ;usb_device.c: 2842: {
 48920                           ;usb_device.c: 2843: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 48921  00D06C  0E04               	movlw	4
 48922  00D06E  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 48923  00D070  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48924  00D072  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 48925  00D074                     L59:
 48926  00D074  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 48927                           
 48928                           ; BSR set to: 13
 48929                           ;usb_device.c: 2844: }
 48930                           ;usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 48931                           
 48932                           ; BSR set to: 13
 48933  00D076  010D               	movlb	13	; () banked
 48934  00D078  BF34               	btfsc	52,7,b	;volatile
 48935  00D07A  D00B               	goto	i2l18533
 48936                           
 48937                           ; BSR set to: 13
 48938                           ;usb_device.c: 2850: {
 48939                           ;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 48940  00D07C  010D               	movlb	13	; () banked
 48941  00D07E  5134               	movf	52,w,b	;volatile
 48942  00D080  0B0F               	andlw	15
 48943  00D082  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48944  00D084  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48945  00D086  0D02               	mullw	2
 48946  00D088  0ED3               	movlw	low _pBDTEntryOut
 48947  00D08A  24F3               	addwf	prodl,w,c
 48948  00D08C  6ED9               	movwf	fsr2l,c
 48949  00D08E  0E01               	movlw	high _pBDTEntryOut
 48950  00D090  D00A               	goto	L60
 48951  00D092                     i2l18533:
 48952                           
 48953                           ; BSR set to: 13
 48954                           ;usb_device.c: 2853: else
 48955                           ;usb_device.c: 2854: {
 48956                           ;usb_device.c: 2855: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 48957  00D092  010D               	movlb	13	; () banked
 48958  00D094  5134               	movf	52,w,b	;volatile
 48959  00D096  0B0F               	andlw	15
 48960  00D098  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48961  00D09A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48962  00D09C  0D02               	mullw	2
 48963  00D09E  0E10               	movlw	low _pBDTEntryIn
 48964  00D0A0  24F3               	addwf	prodl,w,c
 48965  00D0A2  6ED9               	movwf	fsr2l,c
 48966  00D0A4  0E00               	movlw	high _pBDTEntryIn
 48967  00D0A6                     L60:
 48968  00D0A6  20F4               	addwfc	prodh,w,c
 48969  00D0A8  6EDA               	movwf	fsr2h,c
 48970  00D0AA  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 48971  00D0AE  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 48972                           
 48973                           ; BSR set to: 13
 48974                           ;usb_device.c: 2856: }
 48975                           ;usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 48976                           
 48977                           ; BSR set to: 13
 48978  00D0B2  0E03               	movlw	3
 48979  00D0B4  010D               	movlb	13	; () banked
 48980  00D0B6  1931               	xorwf	49,w,b	;volatile
 48981  00D0B8  A4D8               	btfss	status,2,c
 48982  00D0BA  D02F               	goto	i2l18549
 48983                           
 48984                           ; BSR set to: 13
 48985                           ;usb_device.c: 2860: {
 48986                           ;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 48987  00D0BC  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48988  00D0C0  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48989  00D0C4  AEDF               	btfss	indf2,7,c
 48990  00D0C6  D01C               	goto	i2l18545
 48991                           
 48992                           ; BSR set to: 13
 48993                           ;usb_device.c: 2862: {
 48994                           ;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 48995  00D0C8  010D               	movlb	13	; () banked
 48996  00D0CA  BF34               	btfsc	52,7,b	;volatile
 48997  00D0CC  D00B               	goto	i2l18543
 48998                           
 48999                           ; BSR set to: 13
 49000                           ;usb_device.c: 2866: {
 49001                           ;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 49002  00D0CE  010D               	movlb	13	; () banked
 49003  00D0D0  5134               	movf	52,w,b	;volatile
 49004  00D0D2  0B0F               	andlw	15
 49005  00D0D4  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49006  00D0D6  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49007  00D0D8  0D01               	mullw	1
 49008  00D0DA  0EE1               	movlw	low _ep_data_out
 49009  00D0DC  24F3               	addwf	prodl,w,c
 49010  00D0DE  6ED9               	movwf	fsr2l,c
 49011  00D0E0  0E01               	movlw	high _ep_data_out
 49012  00D0E2  D00A               	goto	L61
 49013  00D0E4                     i2l18543:
 49014                           
 49015                           ;usb_device.c: 2869: else
 49016                           ;usb_device.c: 2870: {
 49017                           ;usb_device.c: 2871: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 49018  00D0E4  010D               	movlb	13	; () banked
 49019  00D0E6  5134               	movf	52,w,b	;volatile
 49020  00D0E8  0B0F               	andlw	15
 49021  00D0EA  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49022  00D0EC  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49023  00D0EE  0D01               	mullw	1
 49024  00D0F0  0EE4               	movlw	low _ep_data_in
 49025  00D0F2  24F3               	addwf	prodl,w,c
 49026  00D0F4  6ED9               	movwf	fsr2l,c
 49027  00D0F6  0E01               	movlw	high _ep_data_in
 49028  00D0F8                     L61:
 49029  00D0F8  20F4               	addwfc	prodh,w,c
 49030  00D0FA  6EDA               	movwf	fsr2h,c
 49031  00D0FC  0101               	movlb	1	; () banked
 49032  00D0FE  82DF               	bsf	indf2,1,c
 49033  00D100                     i2l18545:
 49034                           
 49035                           ;usb_device.c: 2872: }
 49036                           ;usb_device.c: 2873: }
 49037                           ;usb_device.c: 2876: p->STAT.Val |= 0x04;
 49038  00D100  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49039  00D104  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49040  00D108  0E00               	movlw	0
 49041  00D10A  84DB               	bsf	plusw2,2,c
 49042                           
 49043                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 49044  00D10C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49045  00D110  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49046  00D114  0E00               	movlw	0
 49047  00D116  8EDB               	bsf	plusw2,7,c
 49048                           
 49049                           ;usb_device.c: 2878: }
 49050  00D118  0012               	return	
 49051  00D11A                     i2l18549:
 49052                           
 49053                           ;usb_device.c: 2879: else
 49054                           ;usb_device.c: 2880: {
 49055                           ;usb_device.c: 2884: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 49056  00D11A  0E04               	movlw	4
 49057  00D11C  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 49058  00D11E  6E49               	movwf	USBStdFeatureReqHandler@p,c
 49059  00D120  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 49060  00D122  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 49061                           
 49062                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 49063  00D124  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49064  00D128  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49065  00D12C  AEDF               	btfss	indf2,7,c
 49066  00D12E  D01B               	goto	i2l18559
 49067                           
 49068                           ;usb_device.c: 2887: {
 49069                           ;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 49070  00D130  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49071  00D134  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49072  00D138  0E7F               	movlw	127
 49073  00D13A  16DF               	andwf	indf2,f,c
 49074                           
 49075                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 49076  00D13C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49077  00D140  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49078  00D144  0E00               	movlw	0
 49079  00D146  8CDB               	bsf	plusw2,6,c
 49080                           
 49081                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 49082  00D148  0E00               	movlw	0
 49083  00D14A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49084  00D14C  0E05               	movlw	5
 49085  00D14E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49086  00D150  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 49087  00D154  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 49088  00D158  0E00               	movlw	0
 49089  00D15A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49090  00D15C  0E02               	movlw	2
 49091  00D15E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49092  00D160  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49093                           
 49094                           ;usb_device.c: 2893: }
 49095  00D164  D006               	goto	i2l18561
 49096  00D166                     i2l18559:
 49097                           
 49098                           ;usb_device.c: 2894: else
 49099                           ;usb_device.c: 2895: {
 49100                           ;usb_device.c: 2897: p->STAT.Val |= 0x40;
 49101  00D166  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49102  00D16A  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49103  00D16E  0E00               	movlw	0
 49104  00D170  8CDB               	bsf	plusw2,6,c
 49105  00D172                     i2l18561:
 49106                           
 49107                           ;usb_device.c: 2898: }
 49108                           ;usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 49109  00D172  0E04               	movlw	4
 49110  00D174  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 49111  00D176  6E49               	movwf	USBStdFeatureReqHandler@p,c
 49112  00D178  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 49113  00D17A  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 49114                           
 49115                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 49116  00D17C  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 49117  00D17E  D006               	goto	i2l392
 49118  00D180  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49119  00D184  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49120  00D188  AEDF               	btfss	indf2,7,c
 49121  00D18A  D031               	goto	i2l18575
 49122  00D18C                     i2l392:
 49123                           
 49124                           ;usb_device.c: 2909: {
 49125                           ;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 49126  00D18C  010D               	movlb	13	; () banked
 49127  00D18E  BF34               	btfsc	52,7,b	;volatile
 49128  00D190  D00B               	goto	i2l18569
 49129                           
 49130                           ; BSR set to: 13
 49131                           ;usb_device.c: 2911: {
 49132                           ;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 49133  00D192  010D               	movlb	13	; () banked
 49134  00D194  5134               	movf	52,w,b	;volatile
 49135  00D196  0B0F               	andlw	15
 49136  00D198  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49137  00D19A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49138  00D19C  0D01               	mullw	1
 49139  00D19E  0EE1               	movlw	low _ep_data_out
 49140  00D1A0  24F3               	addwf	prodl,w,c
 49141  00D1A2  6ED9               	movwf	fsr2l,c
 49142  00D1A4  0E01               	movlw	high _ep_data_out
 49143  00D1A6  D00A               	goto	L62
 49144  00D1A8                     i2l18569:
 49145                           
 49146                           ;usb_device.c: 2914: else
 49147                           ;usb_device.c: 2915: {
 49148                           ;usb_device.c: 2916: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 49149  00D1A8  010D               	movlb	13	; () banked
 49150  00D1AA  5134               	movf	52,w,b	;volatile
 49151  00D1AC  0B0F               	andlw	15
 49152  00D1AE  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49153  00D1B0  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49154  00D1B2  0D01               	mullw	1
 49155  00D1B4  0EE4               	movlw	low _ep_data_in
 49156  00D1B6  24F3               	addwf	prodl,w,c
 49157  00D1B8  6ED9               	movwf	fsr2l,c
 49158  00D1BA  0E01               	movlw	high _ep_data_in
 49159  00D1BC                     L62:
 49160  00D1BC  20F4               	addwfc	prodh,w,c
 49161  00D1BE  6EDA               	movwf	fsr2h,c
 49162  00D1C0  0101               	movlb	1	; () banked
 49163  00D1C2  92DF               	bcf	indf2,1,c
 49164                           
 49165                           ; BSR set to: 1
 49166                           ;usb_device.c: 2917: }
 49167                           ;usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 49168                           
 49169                           ; BSR set to: 1
 49170  00D1C4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49171  00D1C8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49172  00D1CC  0E3B               	movlw	59
 49173  00D1CE  16DF               	andwf	indf2,f,c
 49174                           
 49175                           ; BSR set to: 1
 49176                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 49177  00D1D0  0E00               	movlw	0
 49178  00D1D2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49179  00D1D4  0E05               	movlw	5
 49180  00D1D6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49181  00D1D8  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 49182  00D1DC  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 49183  00D1E0  0E00               	movlw	0
 49184  00D1E2  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49185  00D1E4  0E02               	movlw	2
 49186  00D1E6  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49187  00D1E8  EC03  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49188                           
 49189                           ;usb_device.c: 2923: }
 49190  00D1EC  D006               	goto	i2l18577
 49191  00D1EE                     i2l18575:
 49192                           
 49193                           ;usb_device.c: 2924: else
 49194                           ;usb_device.c: 2925: {
 49195                           ;usb_device.c: 2927: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 49196  00D1EE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49197  00D1F2  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49198  00D1F6  0E3B               	movlw	59
 49199  00D1F8  16DF               	andwf	indf2,f,c
 49200  00D1FA                     i2l18577:
 49201                           
 49202                           ;usb_device.c: 2928: }
 49203                           ;usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 49204  00D1FA  010D               	movlb	13	; () banked
 49205  00D1FC  5134               	movf	52,w,b	;volatile
 49206  00D1FE  0B0F               	andlw	15
 49207  00D200  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49208  00D202  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49209  00D204  0D01               	mullw	1
 49210  00D206  0E26               	movlw	38
 49211  00D208  24F3               	addwf	prodl,w,c
 49212  00D20A  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 49213  00D20C  0E0F               	movlw	15
 49214  00D20E  20F4               	addwfc	prodh,w,c
 49215  00D210  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 49216                           
 49217                           ; BSR set to: 13
 49218                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 49219  00D212  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 49220  00D216  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 49221  00D21A  0EFE               	movlw	254
 49222  00D21C  16DF               	andwf	indf2,f,c
 49223                           
 49224                           ; BSR set to: 13
 49225  00D21E  0012               	return	
 49226  00D220                     __end_of_USBStdFeatureReqHandler:
 49227                           	opt stack 0
 49228                           tosu	equ	0xFFF
 49229                           tosh	equ	0xFFE
 49230                           tosl	equ	0xFFD
 49231                           pclatu	equ	0xFFB
 49232                           pclath	equ	0xFFA
 49233                           tblptru	equ	0xFF8
 49234                           tblptrh	equ	0xFF7
 49235                           tblptrl	equ	0xFF6
 49236                           tablat	equ	0xFF5
 49237                           prodh	equ	0xFF4
 49238                           prodl	equ	0xFF3
 49239                           intcon	equ	0xFF2
 49240                           intcon2	equ	0xFF1
 49241                           intcon3	equ	0xFF0
 49242                           indf0	equ	0xFEF
 49243                           postinc0	equ	0xFEE
 49244                           fsr0h	equ	0xFEA
 49245                           fsr0l	equ	0xFE9
 49246                           wreg	equ	0xFE8
 49247                           indf1	equ	0xFE7
 49248                           postinc1	equ	0xFE6
 49249                           postdec1	equ	0xFE5
 49250                           plusw1	equ	0xFE3
 49251                           fsr1h	equ	0xFE2
 49252                           fsr1l	equ	0xFE1
 49253                           indf2	equ	0xFDF
 49254                           postinc2	equ	0xFDE
 49255                           postdec2	equ	0xFDD
 49256                           plusw2	equ	0xFDB
 49257                           fsr2h	equ	0xFDA
 49258                           fsr2l	equ	0xFD9
 49259                           status	equ	0xFD8
 49260                           
 49261 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 49262 ;; Defined at:
 49263 ;;		line 54 in file "usb_events.c"
 49264 ;; Parameters:    Size  Location     Type
 49265 ;;  event           2   15[COMRAM] enum E8437
 49266 ;;  pdata           2   17[COMRAM] PTR void 
 49267 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 49268 ;;		 -> BDT(48), 
 49269 ;;  size            2   19[COMRAM] unsigned int 
 49270 ;; Auto vars:     Size  Location     Type
 49271 ;;		None
 49272 ;; Return value:  Size  Location     Type
 49273 ;;                  1    wreg      unsigned char 
 49274 ;; Registers used:
 49275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49276 ;; Tracked objects:
 49277 ;;		On entry : 0/0
 49278 ;;		On exit  : 0/0
 49279 ;;		Unchanged: 0/0
 49280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49281 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49284 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49285 ;;Total ram usage:        8 bytes
 49286 ;; Hardware stack levels used:    1
 49287 ;; Hardware stack levels required when called:    3
 49288 ;; This function calls:
 49289 ;;		_APP_DeviceCustomHIDInitialize
 49290 ;;		_APP_DeviceMSDInitialize
 49291 ;;		_MSDTransferTerminated
 49292 ;;		_USBCheckHIDRequest
 49293 ;;		_USBCheckMSDRequest
 49294 ;;		i2_SYSTEM_Initialize
 49295 ;; This function is called by:
 49296 ;;		_USBDeviceTasks
 49297 ;;		_USBStdSetCfgHandler
 49298 ;;		_USBSuspend
 49299 ;;		_USBWakeFromSuspend
 49300 ;;		_USBCtrlTrfSetupHandler
 49301 ;;		_USBCheckStdRequest
 49302 ;;		_USBStdFeatureReqHandler
 49303 ;; This function uses a non-reentrant model
 49304 ;;
 49305                           
 49306                           	psect	text232
 49307  012006                     __ptext232:
 49308                           	opt stack 0
 49309  012006                     _USER_USB_CALLBACK_EVENT_HANDLER:
 49310                           	opt stack 13
 49311                           
 49312                           ;usb_events.c: 56: switch((int)event)
 49313                           
 49314                           ;incstack = 0
 49315  012006  D019               	goto	i2l18095
 49316  012008                     i2l18079:
 49317                           
 49318                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 49319  012008  0E01               	movlw	1
 49320  01200A  EC67  F099         	call	i2_SYSTEM_Initialize
 49321                           
 49322                           ;usb_events.c: 79: break;
 49323  01200E  0012               	return	
 49324  012010                     i2l18081:
 49325                           
 49326                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 49327  012010  0E02               	movlw	2
 49328  012012  EC67  F099         	call	i2_SYSTEM_Initialize
 49329                           
 49330                           ;usb_events.c: 90: break;
 49331  012016  0012               	return	
 49332  012018                     i2l18083:
 49333                           
 49334                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 49335  012018  EC8B  F09C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 49336                           
 49337                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 49338  01201C  EC23  F0A1         	call	_APP_DeviceMSDInitialize	;wreg free
 49339                           
 49340                           ;usb_events.c: 100: break;
 49341                           
 49342                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 49343                           
 49344                           ;usb_events.c: 97: break;
 49345  012020  0012               	return	
 49346  012022                     i2l18087:
 49347                           
 49348                           ;usb_events.c: 105: USBCheckHIDRequest();
 49349  012022  EC4F  F083         	call	_USBCheckHIDRequest	;wreg free
 49350                           
 49351                           ;usb_events.c: 108: USBCheckMSDRequest();
 49352  012026  EC94  F084         	call	_USBCheckMSDRequest	;wreg free
 49353                           
 49354                           ;usb_events.c: 112: break;
 49355                           
 49356                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 49357                           
 49358                           ;usb_events.c: 109: break;
 49359  01202A  0012               	return	
 49360  01202C                     i2l18091:
 49361                           
 49362                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 49363  01202C  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 49364  012030  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 49365  012034  EC3C  F099         	call	_MSDTransferTerminated	;wreg free
 49366                           
 49367                           ;usb_events.c: 129: }
 49368                           
 49369                           ;usb_events.c: 128: break;
 49370                           
 49371                           ;usb_events.c: 127: default:
 49372                           
 49373                           ;usb_events.c: 125: break;
 49374  012038  0012               	return	
 49375  01203A                     i2l18095:
 49376  01203A  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 49377  01203E  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 49378                           
 49379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 49380                           ; Switch size 1, requested type "space"
 49381                           ; Number of cases is 2, Range of values is 0 to 127
 49382                           ; switch strategies available:
 49383                           ; Name         Instructions Cycles
 49384                           ; simple_byte            7     4 (average)
 49385                           ;	Chosen strategy is simple_byte
 49386  012042  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 49387  012044  0A00               	xorlw	0	; case 0
 49388  012046  B4D8               	btfsc	status,2,c
 49389  012048  D004               	goto	i2l23395
 49390  01204A  0A7F               	xorlw	127	; case 127
 49391  01204C  A4D8               	btfss	status,2,c
 49392  01204E  0012               	return	
 49393  012050  D01A               	goto	i2l23397
 49394  012052                     i2l23395:
 49395                           
 49396                           ; Switch size 1, requested type "space"
 49397                           ; Number of cases is 8, Range of values is 1 to 117
 49398                           ; switch strategies available:
 49399                           ; Name         Instructions Cycles
 49400                           ; simple_byte           25    13 (average)
 49401                           ;	Chosen strategy is simple_byte
 49402  012052  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 49403  012054  0A01               	xorlw	1	; case 1
 49404  012056  B4D8               	btfsc	status,2,c
 49405  012058  D7DF               	goto	i2l18083
 49406  01205A  0A03               	xorlw	3	; case 2
 49407  01205C  B4D8               	btfsc	status,2,c
 49408  01205E  0012               	return	
 49409  012060  0A01               	xorlw	1	; case 3
 49410  012062  B4D8               	btfsc	status,2,c
 49411  012064  D7DE               	goto	i2l18087
 49412  012066  0A06               	xorlw	6	; case 5
 49413  012068  B4D8               	btfsc	status,2,c
 49414  01206A  D7E0               	goto	i2l18091
 49415  01206C  0A77               	xorlw	119	; case 114
 49416  01206E  B4D8               	btfsc	status,2,c
 49417  012070  0012               	return	
 49418  012072  0A01               	xorlw	1	; case 115
 49419  012074  B4D8               	btfsc	status,2,c
 49420  012076  0012               	return	
 49421  012078  0A07               	xorlw	7	; case 116
 49422  01207A  B4D8               	btfsc	status,2,c
 49423  01207C  D7C9               	goto	i2l18081
 49424  01207E  0A01               	xorlw	1	; case 117
 49425  012080  A4D8               	btfss	status,2,c
 49426  012082  0012               	return	
 49427  012084  D7C1               	goto	i2l18079
 49428  012086                     i2l23397:
 49429                           
 49430                           ; Switch size 1, requested type "space"
 49431                           ; Number of cases is 1, Range of values is 255 to 255
 49432                           ; switch strategies available:
 49433                           ; Name         Instructions Cycles
 49434                           ; simple_byte            4     3 (average)
 49435                           ;	Chosen strategy is simple_byte
 49436  012086  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 49437  012088  0AFF               	xorlw	255	; case 255
 49438  01208A  0012               	return	
 49439  01208C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 49440                           	opt stack 0
 49441                           tosu	equ	0xFFF
 49442                           tosh	equ	0xFFE
 49443                           tosl	equ	0xFFD
 49444                           pclatu	equ	0xFFB
 49445                           pclath	equ	0xFFA
 49446                           tblptru	equ	0xFF8
 49447                           tblptrh	equ	0xFF7
 49448                           tblptrl	equ	0xFF6
 49449                           tablat	equ	0xFF5
 49450                           prodh	equ	0xFF4
 49451                           prodl	equ	0xFF3
 49452                           intcon	equ	0xFF2
 49453                           intcon2	equ	0xFF1
 49454                           intcon3	equ	0xFF0
 49455                           indf0	equ	0xFEF
 49456                           postinc0	equ	0xFEE
 49457                           fsr0h	equ	0xFEA
 49458                           fsr0l	equ	0xFE9
 49459                           wreg	equ	0xFE8
 49460                           indf1	equ	0xFE7
 49461                           postinc1	equ	0xFE6
 49462                           postdec1	equ	0xFE5
 49463                           plusw1	equ	0xFE3
 49464                           fsr1h	equ	0xFE2
 49465                           fsr1l	equ	0xFE1
 49466                           indf2	equ	0xFDF
 49467                           postinc2	equ	0xFDE
 49468                           postdec2	equ	0xFDD
 49469                           plusw2	equ	0xFDB
 49470                           fsr2h	equ	0xFDA
 49471                           fsr2l	equ	0xFD9
 49472                           status	equ	0xFD8
 49473                           
 49474 ;; *************** function i2_SYSTEM_Initialize *****************
 49475 ;; Defined at:
 49476 ;;		line 78 in file "system.c"
 49477 ;; Parameters:    Size  Location     Type
 49478 ;;  state           1    wreg     enum E8228
 49479 ;; Auto vars:     Size  Location     Type
 49480 ;;  state           1    4[COMRAM] enum E8228
 49481 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 49482 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 49483 ;; Return value:  Size  Location     Type
 49484 ;;                  1    wreg      void 
 49485 ;; Registers used:
 49486 ;;		wreg, status,2, status,0
 49487 ;; Tracked objects:
 49488 ;;		On entry : 0/0
 49489 ;;		On exit  : 0/0
 49490 ;;		Unchanged: 0/0
 49491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49493 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49495 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49496 ;;Total ram usage:        5 bytes
 49497 ;; Hardware stack levels used:    1
 49498 ;; This function calls:
 49499 ;;		Nothing
 49500 ;; This function is called by:
 49501 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49502 ;; This function uses a non-reentrant model
 49503 ;;
 49504                           
 49505                           	psect	text233
 49506  0132CE                     __ptext233:
 49507                           	opt stack 0
 49508  0132CE                     i2_SYSTEM_Initialize:
 49509                           	opt stack 15
 49510                           
 49511                           ;incstack = 0
 49512                           ;i2SYSTEM_Initialize@state stored from wreg
 49513  0132CE  6E32               	movwf	i2SYSTEM_Initialize@state,c
 49514                           
 49515                           ;system.c: 80: switch(state)
 49516  0132D0  D01D               	goto	i2l11757
 49517  0132D2                     i2l11745:
 49518                           
 49519                           ;system.c: 89: {
 49520                           ;system.c: 90: unsigned int pll_startup_counter = 600;
 49521  0132D2  0E02               	movlw	2
 49522  0132D4  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 49523  0132D6  0E58               	movlw	88
 49524  0132D8  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 49525                           
 49526                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 49527  0132DA  8C9B               	bsf	3995,6,c	;volatile
 49528  0132DC                     i2l11749:
 49529  0132DC  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 49530  0132DE  A0D8               	btfss	status,0,c
 49531  0132E0  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 49532  0132E2  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 49533  0132E4  E1FB               	bnz	i2l11749
 49534  0132E6  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 49535  0132E8  B4D8               	btfsc	status,2,c
 49536  0132EA  0012               	return	
 49537  0132EC  D7F7               	goto	i2l11749
 49538  0132EE                     i2l11751:
 49539                           
 49540                           ;system.c: 117: OSCCON = 0x70;
 49541  0132EE  0E70               	movlw	112
 49542  0132F0  6ED3               	movwf	4051,c	;volatile
 49543                           
 49544                           ;system.c: 123: {
 49545                           ;system.c: 124: unsigned int pll_startup_counter = 800;
 49546  0132F2  0E03               	movlw	3
 49547  0132F4  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,c
 49548  0132F6  0E20               	movlw	32
 49549  0132F8  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284,c
 49550  0132FA                     i2l11753:
 49551  0132FA  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284,f,c
 49552  0132FC  A0D8               	btfss	status,0,c
 49553  0132FE  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,f,c
 49554  013300  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284,w,c
 49555  013302  E1FB               	bnz	i2l11753
 49556  013304  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,w,c
 49557  013306  B4D8               	btfsc	status,2,c
 49558  013308  0012               	return	
 49559  01330A  D7F7               	goto	i2l11753
 49560  01330C                     i2l11757:
 49561  01330C  5032               	movf	i2SYSTEM_Initialize@state,w,c
 49562                           
 49563                           ; Switch size 1, requested type "space"
 49564                           ; Number of cases is 3, Range of values is 0 to 2
 49565                           ; switch strategies available:
 49566                           ; Name         Instructions Cycles
 49567                           ; simple_byte           10     6 (average)
 49568                           ;	Chosen strategy is simple_byte
 49569  01330E  0A00               	xorlw	0	; case 0
 49570  013310  B4D8               	btfsc	status,2,c
 49571  013312  D7DF               	goto	i2l11745
 49572  013314  0A01               	xorlw	1	; case 1
 49573  013316  B4D8               	btfsc	status,2,c
 49574  013318  0012               	return	
 49575  01331A  0A03               	xorlw	3	; case 2
 49576  01331C  A4D8               	btfss	status,2,c
 49577  01331E  0012               	return	
 49578  013320  D7E6               	goto	i2l11751
 49579  013322                     __end_ofi2_SYSTEM_Initialize:
 49580                           	opt stack 0
 49581                           tosu	equ	0xFFF
 49582                           tosh	equ	0xFFE
 49583                           tosl	equ	0xFFD
 49584                           pclatu	equ	0xFFB
 49585                           pclath	equ	0xFFA
 49586                           tblptru	equ	0xFF8
 49587                           tblptrh	equ	0xFF7
 49588                           tblptrl	equ	0xFF6
 49589                           tablat	equ	0xFF5
 49590                           prodh	equ	0xFF4
 49591                           prodl	equ	0xFF3
 49592                           intcon	equ	0xFF2
 49593                           intcon2	equ	0xFF1
 49594                           intcon3	equ	0xFF0
 49595                           indf0	equ	0xFEF
 49596                           postinc0	equ	0xFEE
 49597                           fsr0h	equ	0xFEA
 49598                           fsr0l	equ	0xFE9
 49599                           wreg	equ	0xFE8
 49600                           indf1	equ	0xFE7
 49601                           postinc1	equ	0xFE6
 49602                           postdec1	equ	0xFE5
 49603                           plusw1	equ	0xFE3
 49604                           fsr1h	equ	0xFE2
 49605                           fsr1l	equ	0xFE1
 49606                           indf2	equ	0xFDF
 49607                           postinc2	equ	0xFDE
 49608                           postdec2	equ	0xFDD
 49609                           plusw2	equ	0xFDB
 49610                           fsr2h	equ	0xFDA
 49611                           fsr2l	equ	0xFD9
 49612                           status	equ	0xFD8
 49613                           
 49614 ;; *************** function _USBCheckMSDRequest *****************
 49615 ;; Defined at:
 49616 ;;		line 218 in file "usb_device_msd.c"
 49617 ;; Parameters:    Size  Location     Type
 49618 ;;		None
 49619 ;; Auto vars:     Size  Location     Type
 49620 ;;		None
 49621 ;; Return value:  Size  Location     Type
 49622 ;;                  1    wreg      void 
 49623 ;; Registers used:
 49624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49625 ;; Tracked objects:
 49626 ;;		On entry : 0/0
 49627 ;;		On exit  : 0/0
 49628 ;;		Unchanged: 0/0
 49629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49631 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49634 ;;Total ram usage:        4 bytes
 49635 ;; Hardware stack levels used:    1
 49636 ;; Hardware stack levels required when called:    1
 49637 ;; This function calls:
 49638 ;;		i2_USBTransferOnePacket
 49639 ;; This function is called by:
 49640 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49641 ;; This function uses a non-reentrant model
 49642 ;;
 49643                           
 49644                           	psect	text234
 49645  010928                     __ptext234:
 49646                           	opt stack 0
 49647  010928                     _USBCheckMSDRequest:
 49648                           	opt stack 14
 49649                           
 49650                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 49651                           
 49652                           ;incstack = 0
 49653  010928  010D               	movlb	13	; () banked
 49654  01092A  5130               	movf	48,w,b	;volatile
 49655  01092C  0B1F               	andlw	31
 49656  01092E  06E8               	decf	wreg,f,c
 49657  010930  A4D8               	btfss	status,2,c
 49658  010932  0012               	return	
 49659                           
 49660                           ; BSR set to: 13
 49661                           ;usb_device_msd.c: 223: }
 49662                           ;usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 49663                           
 49664                           ; BSR set to: 13
 49665                           
 49666                           ; BSR set to: 13
 49667                           ;usb_device_msd.c: 221: {
 49668                           ;usb_device_msd.c: 222: return;
 49669  010934  010D               	movlb	13	; () banked
 49670  010936  5134               	movf	52,w,b	;volatile
 49671  010938  A4D8               	btfss	status,2,c
 49672  01093A  0012               	return	
 49673  01093C  D057               	goto	i2l11597
 49674  01093E                     i2l11559:
 49675                           
 49676                           ; BSR set to: 13
 49677                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 49678  01093E  010D               	movlb	13	; () banked
 49679  010940  5132               	movf	50,w,b	;volatile
 49680  010942  010D               	movlb	13	; () banked
 49681  010944  1133               	iorwf	51,w,b	;volatile
 49682  010946  A4D8               	btfss	status,2,c
 49683  010948  0012               	return	
 49684                           
 49685                           ; BSR set to: 13
 49686  01094A  010D               	movlb	13	; () banked
 49687  01094C  5136               	movf	54,w,b	;volatile
 49688  01094E  010D               	movlb	13	; () banked
 49689  010950  1137               	iorwf	55,w,b	;volatile
 49690  010952  A4D8               	btfss	status,2,c
 49691  010954  0012               	return	
 49692                           
 49693                           ; BSR set to: 13
 49694                           ;usb_device_msd.c: 238: }
 49695                           ;usb_device_msd.c: 246: MSD_State = 0x00;
 49696                           
 49697                           ; BSR set to: 13
 49698                           
 49699                           ; BSR set to: 13
 49700                           ;usb_device_msd.c: 236: {
 49701                           ;usb_device_msd.c: 237: return;
 49702  010956  0E00               	movlw	0
 49703  010958  0100               	movlb	0	; () banked
 49704  01095A  6FE7               	movwf	_MSD_State& (0+255),b
 49705                           
 49706                           ; BSR set to: 0
 49707                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 49708  01095C  0100               	movlb	0	; () banked
 49709  01095E  69E6               	setf	_MSDCommandState& (0+255),b
 49710                           
 49711                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 49712  010960  0E00               	movlw	0
 49713  010962  0101               	movlb	1	; () banked
 49714  010964  6FF9               	movwf	_MSDReadState& (0+255),b
 49715                           
 49716                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 49717  010966  0E00               	movlw	0
 49718  010968  6E1F               	movwf	_MSDWriteState,c
 49719                           
 49720                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 49721  01096A  0E01               	movlw	1
 49722  01096C  0101               	movlb	1	; () banked
 49723  01096E  6FF5               	movwf	_MSDCBWValid& (0+255),b
 49724                           
 49725                           ; BSR set to: 1
 49726                           
 49727                           ; BSR set to: 1
 49728                           
 49729                           ; BSR set to: 1
 49730                           
 49731                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 49732  010970  C1D7  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2640
 49733  010974  C1D8  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2640+1
 49734                           
 49735                           ; BSR set to: 1
 49736  010978  5039               	movf	_USBCheckMSDRequest$2640,w,c
 49737  01097A  103A               	iorwf	_USBCheckMSDRequest$2640+1,w,c
 49738  01097C  B4D8               	btfsc	status,2,c
 49739  01097E  D00A               	goto	i2l11579
 49740                           
 49741                           ; BSR set to: 1
 49742                           
 49743                           ; BSR set to: 1
 49744                           
 49745                           ; BSR set to: 1
 49746                           
 49747                           ; BSR set to: 1
 49748  010980  C1D7  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2641
 49749  010984  C1D8  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2641+1
 49750                           
 49751                           ; BSR set to: 1
 49752                           
 49753                           ; BSR set to: 1
 49754  010988  C03B  FFD9         	movff	_USBCheckMSDRequest$2641,fsr2l
 49755  01098C  C03C  FFDA         	movff	_USBCheckMSDRequest$2641+1,fsr2h
 49756  010990  BEDF               	btfsc	indf2,7,c
 49757  010992  D00F               	goto	i2l11581
 49758  010994                     i2l11579:
 49759                           
 49760                           ; BSR set to: 1
 49761                           ;usb_device_msd.c: 256: {
 49762                           ;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 49763  010994  0E00               	movlw	0
 49764  010996  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 49765  010998  0E40               	movlw	64
 49766  01099A  6E2F               	movwf	i2USBTransferOnePacket@data,c
 49767  01099C  0E0D               	movlw	13
 49768  01099E  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 49769  0109A0  0E40               	movlw	64
 49770  0109A2  6E31               	movwf	i2USBTransferOnePacket@len,c
 49771  0109A4  0E02               	movlw	2
 49772  0109A6  EC9F  F07F         	call	i2_USBTransferOnePacket
 49773  0109AA  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 49774  0109AE  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 49775  0109B2                     i2l11581:
 49776                           
 49777                           ;usb_device_msd.c: 258: }
 49778                           ;usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 49779  0109B2  0E80               	movlw	128
 49780  0109B4  6E0D               	movwf	_inPipes+3,c	;volatile
 49781                           
 49782                           ;usb_device_msd.c: 263: break;
 49783  0109B6  0012               	return	
 49784  0109B8                     i2l11583:
 49785                           
 49786                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 49787  0109B8  010D               	movlb	13	; () banked
 49788  0109BA  5132               	movf	50,w,b	;volatile
 49789  0109BC  010D               	movlb	13	; () banked
 49790  0109BE  1133               	iorwf	51,w,b	;volatile
 49791  0109C0  A4D8               	btfss	status,2,c
 49792  0109C2  0012               	return	
 49793                           
 49794                           ; BSR set to: 13
 49795  0109C4  010D               	movlb	13	; () banked
 49796  0109C6  0536               	decf	54,w,b	;volatile
 49797  0109C8  010D               	movlb	13	; () banked
 49798  0109CA  1137               	iorwf	55,w,b	;volatile
 49799  0109CC  A4D8               	btfss	status,2,c
 49800  0109CE  0012               	return	
 49801                           
 49802                           ; BSR set to: 13
 49803                           ;usb_device_msd.c: 271: }
 49804                           ;usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 49805                           
 49806                           ; BSR set to: 13
 49807                           
 49808                           ; BSR set to: 13
 49809                           ;usb_device_msd.c: 269: {
 49810                           ;usb_device_msd.c: 270: break;
 49811  0109D0  0E00               	movlw	0
 49812  0109D2  010D               	movlb	13	; () banked
 49813  0109D4  6F38               	movwf	56,b	;volatile
 49814                           
 49815                           ; BSR set to: 13
 49816                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 49817  0109D6  0E38               	movlw	56
 49818  0109D8  6E0A               	movwf	_inPipes,c	;volatile
 49819  0109DA  0E0D               	movlw	13
 49820  0109DC  6E0B               	movwf	_inPipes+1,c	;volatile
 49821                           
 49822                           ; BSR set to: 13
 49823  0109DE  0E00               	movlw	0
 49824  0109E0  6E0F               	movwf	_inPipes+5,c	;volatile
 49825  0109E2  0E01               	movlw	1
 49826  0109E4  6E0E               	movwf	_inPipes+4,c	;volatile
 49827                           
 49828                           ; BSR set to: 13
 49829  0109E6  0EC1               	movlw	193
 49830  0109E8  6E0D               	movwf	_inPipes+3,c	;volatile
 49831                           
 49832                           ; BSR set to: 13
 49833                           ;usb_device_msd.c: 278: }
 49834                           
 49835                           ;usb_device_msd.c: 277: break;
 49836  0109EA  0012               	return	
 49837  0109EC                     i2l11597:
 49838                           
 49839                           ; BSR set to: 13
 49840  0109EC  010D               	movlb	13	; () banked
 49841  0109EE  5131               	movf	49,w,b	;volatile
 49842                           
 49843                           ; Switch size 1, requested type "space"
 49844                           ; Number of cases is 2, Range of values is 254 to 255
 49845                           ; switch strategies available:
 49846                           ; Name         Instructions Cycles
 49847                           ; simple_byte            7     4 (average)
 49848                           ;	Chosen strategy is simple_byte
 49849  0109F0  0AFE               	xorlw	254	; case 254
 49850  0109F2  B4D8               	btfsc	status,2,c
 49851  0109F4  D7E1               	goto	i2l11583
 49852  0109F6  0A01               	xorlw	1	; case 255
 49853  0109F8  A4D8               	btfss	status,2,c
 49854  0109FA  0012               	return	
 49855  0109FC  D7A0               	goto	i2l11559
 49856  0109FE                     __end_of_USBCheckMSDRequest:
 49857                           	opt stack 0
 49858                           tosu	equ	0xFFF
 49859                           tosh	equ	0xFFE
 49860                           tosl	equ	0xFFD
 49861                           pclatu	equ	0xFFB
 49862                           pclath	equ	0xFFA
 49863                           tblptru	equ	0xFF8
 49864                           tblptrh	equ	0xFF7
 49865                           tblptrl	equ	0xFF6
 49866                           tablat	equ	0xFF5
 49867                           prodh	equ	0xFF4
 49868                           prodl	equ	0xFF3
 49869                           intcon	equ	0xFF2
 49870                           intcon2	equ	0xFF1
 49871                           intcon3	equ	0xFF0
 49872                           indf0	equ	0xFEF
 49873                           postinc0	equ	0xFEE
 49874                           fsr0h	equ	0xFEA
 49875                           fsr0l	equ	0xFE9
 49876                           wreg	equ	0xFE8
 49877                           indf1	equ	0xFE7
 49878                           postinc1	equ	0xFE6
 49879                           postdec1	equ	0xFE5
 49880                           plusw1	equ	0xFE3
 49881                           fsr1h	equ	0xFE2
 49882                           fsr1l	equ	0xFE1
 49883                           indf2	equ	0xFDF
 49884                           postinc2	equ	0xFDE
 49885                           postdec2	equ	0xFDD
 49886                           plusw2	equ	0xFDB
 49887                           fsr2h	equ	0xFDA
 49888                           fsr2l	equ	0xFD9
 49889                           status	equ	0xFD8
 49890                           
 49891 ;; *************** function _USBCheckHIDRequest *****************
 49892 ;; Defined at:
 49893 ;;		line 153 in file "usb_device_hid.c"
 49894 ;; Parameters:    Size  Location     Type
 49895 ;;		None
 49896 ;; Auto vars:     Size  Location     Type
 49897 ;;		None
 49898 ;; Return value:  Size  Location     Type
 49899 ;;                  1    wreg      void 
 49900 ;; Registers used:
 49901 ;;		wreg, status,2, status,0
 49902 ;; Tracked objects:
 49903 ;;		On entry : 0/0
 49904 ;;		On exit  : 0/0
 49905 ;;		Unchanged: 0/0
 49906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49911 ;;Total ram usage:        0 bytes
 49912 ;; Hardware stack levels used:    1
 49913 ;; This function calls:
 49914 ;;		Nothing
 49915 ;; This function is called by:
 49916 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49917 ;; This function uses a non-reentrant model
 49918 ;;
 49919                           
 49920                           	psect	text235
 49921  01069E                     __ptext235:
 49922                           	opt stack 0
 49923  01069E                     _USBCheckHIDRequest:
 49924                           	opt stack 15
 49925                           
 49926                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 49927                           
 49928                           ;incstack = 0
 49929  01069E  010D               	movlb	13	; () banked
 49930  0106A0  5130               	movf	48,w,b	;volatile
 49931  0106A2  0B1F               	andlw	31
 49932  0106A4  06E8               	decf	wreg,f,c
 49933  0106A6  A4D8               	btfss	status,2,c
 49934  0106A8  0012               	return	
 49935                           
 49936                           ; BSR set to: 13
 49937                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 49938                           
 49939                           ; BSR set to: 13
 49940                           
 49941                           ; BSR set to: 13
 49942  0106AA  010D               	movlb	13	; () banked
 49943  0106AC  5134               	movf	52,w,b	;volatile
 49944  0106AE  A4D8               	btfss	status,2,c
 49945  0106B0  0012               	return	
 49946                           
 49947                           ; BSR set to: 13
 49948                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 49949                           
 49950                           ; BSR set to: 13
 49951                           
 49952                           ; BSR set to: 13
 49953  0106B2  0E06               	movlw	6
 49954  0106B4  010D               	movlb	13	; () banked
 49955  0106B6  1931               	xorwf	49,w,b	;volatile
 49956  0106B8  B4D8               	btfsc	status,2,c
 49957  0106BA  D018               	goto	i2l11521
 49958  0106BC  D020               	goto	i2l11523
 49959  0106BE                     i2l11505:
 49960                           
 49961                           ; BSR set to: 13
 49962                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 49963  0106BE  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 49964  0106C0  A4D8               	btfss	status,2,c
 49965  0106C2  D01D               	goto	i2l11523
 49966                           
 49967                           ; BSR set to: 13
 49968                           ;usb_device_hid.c: 169: {
 49969                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 49970  0106C4  0E2D               	movlw	low (_configDescriptor1+18)
 49971  0106C6  6E0A               	movwf	_inPipes,c	;volatile
 49972  0106C8  0E93               	movlw	high (_configDescriptor1+18)
 49973  0106CA  6E0B               	movwf	_inPipes+1,c	;volatile
 49974                           
 49975                           ; BSR set to: 13
 49976  0106CC  0E00               	movlw	0
 49977  0106CE  6E0F               	movwf	_inPipes+5,c	;volatile
 49978  0106D0  0E09               	movlw	9
 49979  0106D2  D00A               	goto	L63
 49980  0106D4                     i2l11511:
 49981                           
 49982                           ; BSR set to: 13
 49983  0106D4  0EC0               	movlw	192
 49984  0106D6  6E0D               	movwf	_inPipes+3,c	;volatile
 49985                           
 49986                           ; BSR set to: 13
 49987                           ;usb_device_hid.c: 174: }
 49988                           ;usb_device_hid.c: 175: break;
 49989  0106D8  D012               	goto	i2l11523
 49990  0106DA                     i2l11513:
 49991                           
 49992                           ; BSR set to: 13
 49993                           ;usb_device_hid.c: 178: {
 49994                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 49995  0106DA  0EE1               	movlw	low _hid_rpt01
 49996  0106DC  6E0A               	movwf	_inPipes,c	;volatile
 49997  0106DE  0E93               	movlw	high _hid_rpt01
 49998  0106E0  6E0B               	movwf	_inPipes+1,c	;volatile
 49999                           
 50000                           ; BSR set to: 13
 50001  0106E2  0E00               	movlw	0
 50002  0106E4  6E0F               	movwf	_inPipes+5,c	;volatile
 50003  0106E6  0E1D               	movlw	29
 50004  0106E8                     L63:
 50005  0106E8  6E0E               	movwf	_inPipes+4,c	;volatile
 50006  0106EA  D7F4               	goto	i2l11511
 50007  0106EC                     i2l11521:
 50008                           
 50009                           ; BSR set to: 13
 50010  0106EC  010D               	movlb	13	; () banked
 50011  0106EE  5133               	movf	51,w,b	;volatile
 50012                           
 50013                           ; Switch size 1, requested type "space"
 50014                           ; Number of cases is 3, Range of values is 33 to 35
 50015                           ; switch strategies available:
 50016                           ; Name         Instructions Cycles
 50017                           ; simple_byte           10     6 (average)
 50018                           ;	Chosen strategy is simple_byte
 50019  0106F0  0A21               	xorlw	33	; case 33
 50020  0106F2  B4D8               	btfsc	status,2,c
 50021  0106F4  D7E4               	goto	i2l11505
 50022  0106F6  0A03               	xorlw	3	; case 34
 50023  0106F8  B4D8               	btfsc	status,2,c
 50024  0106FA  D7EF               	goto	i2l11513
 50025  0106FC  0A01               	xorlw	1	; case 35
 50026  0106FE                     i2l11523:
 50027                           
 50028                           ; BSR set to: 13
 50029                           ;usb_device_hid.c: 199: }
 50030                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 50031  0106FE  010D               	movlb	13	; () banked
 50032  010700  3930               	swapf	48,w,b	;volatile
 50033  010702  32E8               	rrcf	wreg,f,c
 50034  010704  0B03               	andlw	3
 50035  010706  06E8               	decf	wreg,f,c
 50036  010708  A4D8               	btfss	status,2,c
 50037  01070A  0012               	return	
 50038  01070C  D020               	goto	i2l11549
 50039  01070E                     i2l11527:
 50040                           
 50041                           ; BSR set to: 13
 50042                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 50043  01070E  0EFF               	movlw	low _idle_rate
 50044  010710  6E0A               	movwf	_inPipes,c	;volatile
 50045  010712  0E01               	movlw	high _idle_rate
 50046  010714  6E0B               	movwf	_inPipes+1,c	;volatile
 50047                           
 50048                           ; BSR set to: 13
 50049  010716  0E00               	movlw	0
 50050  010718  6E0F               	movwf	_inPipes+5,c	;volatile
 50051  01071A  0E01               	movlw	1
 50052  01071C  6E0E               	movwf	_inPipes+4,c	;volatile
 50053                           
 50054                           ; BSR set to: 13
 50055  01071E  0EC1               	movlw	193
 50056  010720  6E0D               	movwf	_inPipes+3,c	;volatile
 50057                           
 50058                           ;usb_device_hid.c: 223: break;
 50059  010722  0012               	return	
 50060  010724                     i2l11533:
 50061                           
 50062                           ; BSR set to: 13
 50063                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 50064  010724  0E80               	movlw	128
 50065  010726  6E0D               	movwf	_inPipes+3,c	;volatile
 50066                           
 50067                           ; BSR set to: 13
 50068                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 50069  010728  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 50070                           
 50071                           ;usb_device_hid.c: 227: ;
 50072                           ;usb_device_hid.c: 228: break;
 50073  01072C  0012               	return	
 50074  01072E                     i2l11537:
 50075                           
 50076                           ; BSR set to: 13
 50077                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 50078  01072E  0EFE               	movlw	low _active_protocol
 50079  010730  6E0A               	movwf	_inPipes,c	;volatile
 50080  010732  0E01               	movlw	high _active_protocol
 50081  010734  6E0B               	movwf	_inPipes+1,c	;volatile
 50082                           
 50083                           ; BSR set to: 13
 50084  010736  0E00               	movlw	0
 50085  010738  6E0F               	movwf	_inPipes+5,c	;volatile
 50086  01073A  0E01               	movlw	1
 50087  01073C  6E0E               	movwf	_inPipes+4,c	;volatile
 50088                           
 50089                           ; BSR set to: 13
 50090  01073E  0E81               	movlw	129
 50091  010740  6E0D               	movwf	_inPipes+3,c	;volatile
 50092                           
 50093                           ;usb_device_hid.c: 234: break;
 50094  010742  0012               	return	
 50095  010744                     i2l11543:
 50096                           
 50097                           ; BSR set to: 13
 50098                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 50099  010744  0E80               	movlw	128
 50100  010746  6E0D               	movwf	_inPipes+3,c	;volatile
 50101                           
 50102                           ; BSR set to: 13
 50103                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 50104  010748  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 50105                           
 50106                           ; BSR set to: 13
 50107                           ;usb_device_hid.c: 239: }
 50108                           
 50109                           ;usb_device_hid.c: 238: break;
 50110  01074C  0012               	return	
 50111  01074E                     i2l11549:
 50112                           
 50113                           ; BSR set to: 13
 50114  01074E  010D               	movlb	13	; () banked
 50115  010750  5131               	movf	49,w,b	;volatile
 50116                           
 50117                           ; Switch size 1, requested type "space"
 50118                           ; Number of cases is 6, Range of values is 1 to 11
 50119                           ; switch strategies available:
 50120                           ; Name         Instructions Cycles
 50121                           ; simple_byte           19    10 (average)
 50122                           ;	Chosen strategy is simple_byte
 50123  010752  0A01               	xorlw	1	; case 1
 50124  010754  B4D8               	btfsc	status,2,c
 50125  010756  0012               	return	
 50126  010758  0A03               	xorlw	3	; case 2
 50127  01075A  B4D8               	btfsc	status,2,c
 50128  01075C  D7D8               	goto	i2l11527
 50129  01075E  0A01               	xorlw	1	; case 3
 50130  010760  B4D8               	btfsc	status,2,c
 50131  010762  D7E5               	goto	i2l11537
 50132  010764  0A0A               	xorlw	10	; case 9
 50133  010766  B4D8               	btfsc	status,2,c
 50134  010768  0012               	return	
 50135  01076A  0A03               	xorlw	3	; case 10
 50136  01076C  B4D8               	btfsc	status,2,c
 50137  01076E  D7DA               	goto	i2l11533
 50138  010770  0A01               	xorlw	1	; case 11
 50139  010772  A4D8               	btfss	status,2,c
 50140  010774  0012               	return	
 50141  010776  D7E6               	goto	i2l11543
 50142  010778                     __end_of_USBCheckHIDRequest:
 50143                           	opt stack 0
 50144                           tosu	equ	0xFFF
 50145                           tosh	equ	0xFFE
 50146                           tosl	equ	0xFFD
 50147                           pclatu	equ	0xFFB
 50148                           pclath	equ	0xFFA
 50149                           tblptru	equ	0xFF8
 50150                           tblptrh	equ	0xFF7
 50151                           tblptrl	equ	0xFF6
 50152                           tablat	equ	0xFF5
 50153                           prodh	equ	0xFF4
 50154                           prodl	equ	0xFF3
 50155                           intcon	equ	0xFF2
 50156                           intcon2	equ	0xFF1
 50157                           intcon3	equ	0xFF0
 50158                           indf0	equ	0xFEF
 50159                           postinc0	equ	0xFEE
 50160                           fsr0h	equ	0xFEA
 50161                           fsr0l	equ	0xFE9
 50162                           wreg	equ	0xFE8
 50163                           indf1	equ	0xFE7
 50164                           postinc1	equ	0xFE6
 50165                           postdec1	equ	0xFE5
 50166                           plusw1	equ	0xFE3
 50167                           fsr1h	equ	0xFE2
 50168                           fsr1l	equ	0xFE1
 50169                           indf2	equ	0xFDF
 50170                           postinc2	equ	0xFDE
 50171                           postdec2	equ	0xFDD
 50172                           plusw2	equ	0xFDB
 50173                           fsr2h	equ	0xFDA
 50174                           fsr2l	equ	0xFD9
 50175                           status	equ	0xFD8
 50176                           
 50177 ;; *************** function _MSDTransferTerminated *****************
 50178 ;; Defined at:
 50179 ;;		line 1674 in file "usb_device_msd.c"
 50180 ;; Parameters:    Size  Location     Type
 50181 ;;  handle          2   11[COMRAM] PTR void 
 50182 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 50183 ;;		 -> BDT(48), 
 50184 ;; Auto vars:     Size  Location     Type
 50185 ;;		None
 50186 ;; Return value:  Size  Location     Type
 50187 ;;                  1    wreg      void 
 50188 ;; Registers used:
 50189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50190 ;; Tracked objects:
 50191 ;;		On entry : 0/0
 50192 ;;		On exit  : 0/0
 50193 ;;		Unchanged: 0/0
 50194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50199 ;;Total ram usage:        4 bytes
 50200 ;; Hardware stack levels used:    1
 50201 ;; Hardware stack levels required when called:    1
 50202 ;; This function calls:
 50203 ;;		i2_USBStallEndpoint
 50204 ;;		i2_USBTransferOnePacket
 50205 ;; This function is called by:
 50206 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50207 ;; This function uses a non-reentrant model
 50208 ;;
 50209                           
 50210                           	psect	text236
 50211  013278                     __ptext236:
 50212                           	opt stack 0
 50213  013278                     _MSDTransferTerminated:
 50214                           	opt stack 14
 50215                           
 50216                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 50217                           
 50218                           ; BSR set to: 13
 50219                           ;incstack = 0
 50220  013278  0101               	movlb	1	; () banked
 50221  01327A  51F5               	movf	_MSDCBWValid& (0+255),w,b
 50222  01327C  A4D8               	btfss	status,2,c
 50223  01327E  D00B               	goto	i2l11687
 50224                           
 50225                           ; BSR set to: 1
 50226                           ;usb_device_msd.c: 1677: {
 50227                           ;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 50228  013280  0E01               	movlw	1
 50229  013282  6E2E               	movwf	i2USBStallEndpoint@dir,c
 50230  013284  0E02               	movlw	2
 50231  013286  EC9A  F07E         	call	i2_USBStallEndpoint
 50232                           
 50233                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 50234  01328A  0E00               	movlw	0
 50235  01328C  6E2E               	movwf	i2USBStallEndpoint@dir,c
 50236  01328E  0E02               	movlw	2
 50237  013290  EC9A  F07E         	call	i2_USBStallEndpoint
 50238                           
 50239                           ;usb_device_msd.c: 1681: }
 50240  013294  0012               	return	
 50241  013296                     i2l11687:
 50242  013296  C1D7  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2729
 50243  01329A  C1D8  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2729+1
 50244  01329E  503B               	movf	_MSDTransferTerminated$2729,w,c
 50245  0132A0  1839               	xorwf	MSDTransferTerminated@handle,w,c
 50246  0132A2  E114               	bnz	i2l787
 50247  0132A4  503C               	movf	_MSDTransferTerminated$2729+1,w,c
 50248  0132A6  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 50249  0132A8  A4D8               	btfss	status,2,c
 50250  0132AA  0012               	return	
 50251                           
 50252                           ;usb_device_msd.c: 1687: {
 50253                           ;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,
      +                          64u);
 50254  0132AC  0E00               	movlw	0
 50255  0132AE  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 50256  0132B0  0E40               	movlw	64
 50257  0132B2  6E2F               	movwf	i2USBTransferOnePacket@data,c
 50258  0132B4  0E0D               	movlw	13
 50259  0132B6  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 50260  0132B8  0E40               	movlw	64
 50261  0132BA  6E31               	movwf	i2USBTransferOnePacket@len,c
 50262  0132BC  0E02               	movlw	2
 50263  0132BE  EC9F  F07F         	call	i2_USBTransferOnePacket
 50264  0132C2  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 50265  0132C6  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 50266  0132CA  0012               	return	
 50267  0132CC                     i2l787:
 50268  0132CC  0012               	return		;funcret
 50269  0132CE                     __end_of_MSDTransferTerminated:
 50270                           	opt stack 0
 50271                           tosu	equ	0xFFF
 50272                           tosh	equ	0xFFE
 50273                           tosl	equ	0xFFD
 50274                           pclatu	equ	0xFFB
 50275                           pclath	equ	0xFFA
 50276                           tblptru	equ	0xFF8
 50277                           tblptrh	equ	0xFF7
 50278                           tblptrl	equ	0xFF6
 50279                           tablat	equ	0xFF5
 50280                           prodh	equ	0xFF4
 50281                           prodl	equ	0xFF3
 50282                           intcon	equ	0xFF2
 50283                           intcon2	equ	0xFF1
 50284                           intcon3	equ	0xFF0
 50285                           indf0	equ	0xFEF
 50286                           postinc0	equ	0xFEE
 50287                           fsr0h	equ	0xFEA
 50288                           fsr0l	equ	0xFE9
 50289                           wreg	equ	0xFE8
 50290                           indf1	equ	0xFE7
 50291                           postinc1	equ	0xFE6
 50292                           postdec1	equ	0xFE5
 50293                           plusw1	equ	0xFE3
 50294                           fsr1h	equ	0xFE2
 50295                           fsr1l	equ	0xFE1
 50296                           indf2	equ	0xFDF
 50297                           postinc2	equ	0xFDE
 50298                           postdec2	equ	0xFDD
 50299                           plusw2	equ	0xFDB
 50300                           fsr2h	equ	0xFDA
 50301                           fsr2l	equ	0xFD9
 50302                           status	equ	0xFD8
 50303                           
 50304 ;; *************** function i2_USBStallEndpoint *****************
 50305 ;; Defined at:
 50306 ;;		line 1073 in file "usb_device.c"
 50307 ;; Parameters:    Size  Location     Type
 50308 ;;  ep              1    wreg     unsigned char 
 50309 ;;  dir             1    0[COMRAM] unsigned char 
 50310 ;; Auto vars:     Size  Location     Type
 50311 ;;  ep              1    5[COMRAM] unsigned char 
 50312 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 50313 ;;		 -> BDT(48), 
 50314 ;; Return value:  Size  Location     Type
 50315 ;;                  1    wreg      void 
 50316 ;; Registers used:
 50317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50318 ;; Tracked objects:
 50319 ;;		On entry : 0/0
 50320 ;;		On exit  : 0/0
 50321 ;;		Unchanged: 0/0
 50322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50323 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50324 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50327 ;;Total ram usage:        8 bytes
 50328 ;; Hardware stack levels used:    1
 50329 ;; This function calls:
 50330 ;;		Nothing
 50331 ;; This function is called by:
 50332 ;;		_MSDTransferTerminated
 50333 ;; This function uses a non-reentrant model
 50334 ;;
 50335                           
 50336                           	psect	text237
 50337  00FD34                     __ptext237:
 50338                           	opt stack 0
 50339  00FD34                     i2_USBStallEndpoint:
 50340                           	opt stack 14
 50341                           
 50342                           ;incstack = 0
 50343                           ;i2USBStallEndpoint@ep stored from wreg
 50344  00FD34  6E33               	movwf	i2USBStallEndpoint@ep,c
 50345                           
 50346                           ;usb_device.c: 1075: BDT_ENTRY *p;
 50347                           ;usb_device.c: 1077: if(ep == 0)
 50348  00FD36  5033               	movf	i2USBStallEndpoint@ep,w,c
 50349  00FD38  A4D8               	btfss	status,2,c
 50350  00FD3A  D02B               	goto	i2l11451
 50351                           
 50352                           ;usb_device.c: 1078: {
 50353                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 50354  00FD3C  EE20 F001          	lfsr	2,1
 50355  00FD40  5018               	movf	_pBDTEntryEP0OutNext,w,c
 50356  00FD42  26D9               	addwf	fsr2l,f,c
 50357  00FD44  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 50358  00FD46  22DA               	addwfc	fsr2h,f,c
 50359  00FD48  0E08               	movlw	8
 50360  00FD4A  6EDF               	movwf	indf2,c
 50361                           
 50362                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50363  00FD4C  EE20 F002          	lfsr	2,2
 50364  00FD50  5018               	movf	_pBDTEntryEP0OutNext,w,c
 50365  00FD52  26D9               	addwf	fsr2l,f,c
 50366  00FD54  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 50367  00FD56  22DA               	addwfc	fsr2h,f,c
 50368  00FD58  0E30               	movlw	48
 50369  00FD5A  6EDE               	movwf	postinc2,c
 50370  00FD5C  0E0D               	movlw	13
 50371  00FD5E  6EDD               	movwf	postdec2,c
 50372                           
 50373                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 50374  00FD60  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50375  00FD64  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50376  00FD68  0E0C               	movlw	12
 50377  00FD6A  6EDF               	movwf	indf2,c
 50378                           
 50379                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50380  00FD6C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50381  00FD70  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50382  00FD74  0E00               	movlw	0
 50383  00FD76  8EDB               	bsf	plusw2,7,c
 50384                           
 50385                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 50386  00FD78  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 50387  00FD7C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50388  00FD80  0E04               	movlw	4
 50389  00FD82  6EDF               	movwf	indf2,c
 50390                           
 50391                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50392  00FD84  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 50393  00FD88  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50394  00FD8C  0E00               	movlw	0
 50395  00FD8E  8EDB               	bsf	plusw2,7,c
 50396                           
 50397                           ;usb_device.c: 1089: }
 50398  00FD90  0012               	return	
 50399  00FD92                     i2l11451:
 50400                           
 50401                           ;usb_device.c: 1090: else
 50402                           ;usb_device.c: 1091: {
 50403                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 50404  00FD92  502E               	movf	i2USBStallEndpoint@dir,w,c
 50405  00FD94  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 50406  00FD96  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 50407  00FD98  90D8               	bcf	status,0,c
 50408  00FD9A  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50409  00FD9C  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50410  00FD9E  5033               	movf	i2USBStallEndpoint@ep,w,c
 50411  00FDA0  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 50412  00FDA2  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 50413  00FDA4  90D8               	bcf	status,0,c
 50414  00FDA6  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50415  00FDA8  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50416  00FDAA  90D8               	bcf	status,0,c
 50417  00FDAC  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50418  00FDAE  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50419  00FDB0  502F               	movf	??i2_USBStallEndpoint,w,c
 50420  00FDB2  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 50421  00FDB4  5030               	movf	??i2_USBStallEndpoint+1,w,c
 50422  00FDB6  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 50423  00FDB8  90D8               	bcf	status,0,c
 50424  00FDBA  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50425  00FDBC  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50426  00FDBE  90D8               	bcf	status,0,c
 50427  00FDC0  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50428  00FDC2  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50429  00FDC4  0E00               	movlw	0
 50430  00FDC6  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 50431  00FDC8  6E34               	movwf	i2USBStallEndpoint@p,c
 50432  00FDCA  0E0D               	movlw	13
 50433  00FDCC  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 50434  00FDCE  6E35               	movwf	i2USBStallEndpoint@p+1,c
 50435                           
 50436                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 50437  00FDD0  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50438  00FDD4  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50439  00FDD8  0E00               	movlw	0
 50440  00FDDA  84DB               	bsf	plusw2,2,c
 50441                           
 50442                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 50443  00FDDC  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50444  00FDE0  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50445  00FDE4  0E00               	movlw	0
 50446  00FDE6  8EDB               	bsf	plusw2,7,c
 50447                           
 50448                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 50449  00FDE8  5033               	movf	i2USBStallEndpoint@ep,w,c
 50450  00FDEA  0D04               	mullw	4
 50451  00FDEC  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 50452  00FDF0  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 50453  00FDF4  502E               	movf	i2USBStallEndpoint@dir,w,c
 50454  00FDF6  0D02               	mullw	2
 50455  00FDF8  50F3               	movf	prodl,w,c
 50456  00FDFA  262F               	addwf	??i2_USBStallEndpoint,f,c
 50457  00FDFC  50F4               	movf	prodh,w,c
 50458  00FDFE  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 50459  00FE00  90D8               	bcf	status,0,c
 50460  00FE02  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50461  00FE04  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50462  00FE06  90D8               	bcf	status,0,c
 50463  00FE08  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50464  00FE0A  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50465  00FE0C  0E04               	movlw	4
 50466  00FE0E  262F               	addwf	??i2_USBStallEndpoint,f,c
 50467  00FE10  0E00               	movlw	0
 50468  00FE12  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 50469  00FE14  0E00               	movlw	0
 50470  00FE16  242F               	addwf	??i2_USBStallEndpoint,w,c
 50471  00FE18  6E34               	movwf	i2USBStallEndpoint@p,c
 50472  00FE1A  0E0D               	movlw	13
 50473  00FE1C  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 50474  00FE1E  6E35               	movwf	i2USBStallEndpoint@p+1,c
 50475                           
 50476                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 50477  00FE20  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50478  00FE24  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50479  00FE28  0E00               	movlw	0
 50480  00FE2A  84DB               	bsf	plusw2,2,c
 50481                           
 50482                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 50483  00FE2C  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50484  00FE30  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50485  00FE34  0E00               	movlw	0
 50486  00FE36  8EDB               	bsf	plusw2,7,c
 50487  00FE38  0012               	return	
 50488  00FE3A                     __end_ofi2_USBStallEndpoint:
 50489                           	opt stack 0
 50490                           tosu	equ	0xFFF
 50491                           tosh	equ	0xFFE
 50492                           tosl	equ	0xFFD
 50493                           pclatu	equ	0xFFB
 50494                           pclath	equ	0xFFA
 50495                           tblptru	equ	0xFF8
 50496                           tblptrh	equ	0xFF7
 50497                           tblptrl	equ	0xFF6
 50498                           tablat	equ	0xFF5
 50499                           prodh	equ	0xFF4
 50500                           prodl	equ	0xFF3
 50501                           intcon	equ	0xFF2
 50502                           intcon2	equ	0xFF1
 50503                           intcon3	equ	0xFF0
 50504                           indf0	equ	0xFEF
 50505                           postinc0	equ	0xFEE
 50506                           fsr0h	equ	0xFEA
 50507                           fsr0l	equ	0xFE9
 50508                           wreg	equ	0xFE8
 50509                           indf1	equ	0xFE7
 50510                           postinc1	equ	0xFE6
 50511                           postdec1	equ	0xFE5
 50512                           plusw1	equ	0xFE3
 50513                           fsr1h	equ	0xFE2
 50514                           fsr1l	equ	0xFE1
 50515                           indf2	equ	0xFDF
 50516                           postinc2	equ	0xFDE
 50517                           postdec2	equ	0xFDD
 50518                           plusw2	equ	0xFDB
 50519                           fsr2h	equ	0xFDA
 50520                           fsr2l	equ	0xFD9
 50521                           status	equ	0xFD8
 50522                           
 50523 ;; *************** function _APP_DeviceMSDInitialize *****************
 50524 ;; Defined at:
 50525 ;;		line 84 in file "app_device_msd.c"
 50526 ;; Parameters:    Size  Location     Type
 50527 ;;		None
 50528 ;; Auto vars:     Size  Location     Type
 50529 ;;		None
 50530 ;; Return value:  Size  Location     Type
 50531 ;;                  1    wreg      void 
 50532 ;; Registers used:
 50533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50534 ;; Tracked objects:
 50535 ;;		On entry : 0/0
 50536 ;;		On exit  : 0/0
 50537 ;;		Unchanged: 0/0
 50538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50543 ;;Total ram usage:        0 bytes
 50544 ;; Hardware stack levels used:    1
 50545 ;; Hardware stack levels required when called:    2
 50546 ;; This function calls:
 50547 ;;		_USBEnableEndpoint
 50548 ;;		_USBMSDInit
 50549 ;; This function is called by:
 50550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50551 ;; This function uses a non-reentrant model
 50552 ;;
 50553                           
 50554                           	psect	text238
 50555  014246                     __ptext238:
 50556                           	opt stack 0
 50557  014246                     _APP_DeviceMSDInitialize:
 50558                           	opt stack 13
 50559                           
 50560                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 50561                           
 50562                           ;incstack = 0
 50563  014246  0E1E               	movlw	30
 50564  014248  6E36               	movwf	USBEnableEndpoint@options,c
 50565  01424A  0E02               	movlw	2
 50566  01424C  ECE3  F09B         	call	_USBEnableEndpoint
 50567                           
 50568                           ;app_device_msd.c: 93: USBMSDInit();
 50569  014250  ECCF  F079         	call	_USBMSDInit	;wreg free
 50570  014254  0012               	return		;funcret
 50571  014256                     __end_of_APP_DeviceMSDInitialize:
 50572                           	opt stack 0
 50573                           tosu	equ	0xFFF
 50574                           tosh	equ	0xFFE
 50575                           tosl	equ	0xFFD
 50576                           pclatu	equ	0xFFB
 50577                           pclath	equ	0xFFA
 50578                           tblptru	equ	0xFF8
 50579                           tblptrh	equ	0xFF7
 50580                           tblptrl	equ	0xFF6
 50581                           tablat	equ	0xFF5
 50582                           prodh	equ	0xFF4
 50583                           prodl	equ	0xFF3
 50584                           intcon	equ	0xFF2
 50585                           intcon2	equ	0xFF1
 50586                           intcon3	equ	0xFF0
 50587                           indf0	equ	0xFEF
 50588                           postinc0	equ	0xFEE
 50589                           fsr0h	equ	0xFEA
 50590                           fsr0l	equ	0xFE9
 50591                           wreg	equ	0xFE8
 50592                           indf1	equ	0xFE7
 50593                           postinc1	equ	0xFE6
 50594                           postdec1	equ	0xFE5
 50595                           plusw1	equ	0xFE3
 50596                           fsr1h	equ	0xFE2
 50597                           fsr1l	equ	0xFE1
 50598                           indf2	equ	0xFDF
 50599                           postinc2	equ	0xFDE
 50600                           postdec2	equ	0xFDD
 50601                           plusw2	equ	0xFDB
 50602                           fsr2h	equ	0xFDA
 50603                           fsr2l	equ	0xFD9
 50604                           status	equ	0xFD8
 50605                           
 50606 ;; *************** function _USBMSDInit *****************
 50607 ;; Defined at:
 50608 ;;		line 142 in file "usb_device_msd.c"
 50609 ;; Parameters:    Size  Location     Type
 50610 ;;		None
 50611 ;; Auto vars:     Size  Location     Type
 50612 ;;		None
 50613 ;; Return value:  Size  Location     Type
 50614 ;;                  1    wreg      void 
 50615 ;; Registers used:
 50616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50617 ;; Tracked objects:
 50618 ;;		On entry : 0/0
 50619 ;;		On exit  : 0/0
 50620 ;;		Unchanged: 0/0
 50621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50626 ;;Total ram usage:        3 bytes
 50627 ;; Hardware stack levels used:    1
 50628 ;; Hardware stack levels required when called:    1
 50629 ;; This function calls:
 50630 ;;		i2_ExternalFlash_MediaDetect
 50631 ;;		i2_ExternalFlash_MediaInitialize
 50632 ;;		i2_ResetSenseData
 50633 ;;		i2_USBTransferOnePacket
 50634 ;; This function is called by:
 50635 ;;		_APP_DeviceMSDInitialize
 50636 ;; This function uses a non-reentrant model
 50637 ;;
 50638                           
 50639                           	psect	text239
 50640  00F39E                     __ptext239:
 50641                           	opt stack 0
 50642  00F39E                     _USBMSDInit:
 50643                           	opt stack 13
 50644                           
 50645                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 50646                           
 50647                           ;incstack = 0
 50648  00F39E  0E00               	movlw	0
 50649  00F3A0  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 50650  00F3A2  0E40               	movlw	64
 50651  00F3A4  6E2F               	movwf	i2USBTransferOnePacket@data,c
 50652  00F3A6  0E0D               	movlw	13
 50653  00F3A8  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 50654  00F3AA  0E40               	movlw	64
 50655  00F3AC  6E31               	movwf	i2USBTransferOnePacket@len,c
 50656  00F3AE  0E02               	movlw	2
 50657  00F3B0  EC9F  F07F         	call	i2_USBTransferOnePacket
 50658  00F3B4  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 50659  00F3B8  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 50660  00F3BC  C014  F0DB         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 50661  00F3C0  C015  F0DC         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 50662                           
 50663                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 50664  00F3C4  0E00               	movlw	0
 50665  00F3C6  0100               	movlb	0	; () banked
 50666  00F3C8  6FE7               	movwf	_MSD_State& (0+255),b
 50667                           
 50668                           ; BSR set to: 0
 50669                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 50670  00F3CA  0100               	movlb	0	; () banked
 50671  00F3CC  69E6               	setf	_MSDCommandState& (0+255),b
 50672                           
 50673                           ; BSR set to: 0
 50674                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 50675  00F3CE  0E00               	movlw	0
 50676  00F3D0  0101               	movlb	1	; () banked
 50677  00F3D2  6FF9               	movwf	_MSDReadState& (0+255),b
 50678                           
 50679                           ; BSR set to: 1
 50680                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 50681  00F3D4  0E00               	movlw	0
 50682  00F3D6  6E1F               	movwf	_MSDWriteState,c
 50683                           
 50684                           ; BSR set to: 1
 50685                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 50686  00F3D8  0E00               	movlw	0
 50687  00F3DA  0100               	movlb	0	; () banked
 50688  00F3DC  6FE5               	movwf	_MSDHostNoData& (0+255),b
 50689                           
 50690                           ; BSR set to: 0
 50691                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 50692  00F3DE  0E00               	movlw	0
 50693  00F3E0  0102               	movlb	2	; () banked
 50694  00F3E2  6FAA               	movwf	_gblNumBLKS& (0+255),b
 50695  00F3E4  0E00               	movlw	0
 50696  00F3E6  6FAB               	movwf	(_gblNumBLKS+1)& (0+255),b
 50697  00F3E8  0E00               	movlw	0
 50698  00F3EA  6FAC               	movwf	(_gblNumBLKS+2)& (0+255),b
 50699  00F3EC  0E00               	movlw	0
 50700  00F3EE  6FAD               	movwf	(_gblNumBLKS+3)& (0+255),b
 50701                           
 50702                           ; BSR set to: 2
 50703                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 50704  00F3F0  0E00               	movlw	0
 50705  00F3F2  0102               	movlb	2	; () banked
 50706  00F3F4  6FA6               	movwf	_gblBLKLen& (0+255),b
 50707  00F3F6  0E00               	movlw	0
 50708  00F3F8  6FA7               	movwf	(_gblBLKLen+1)& (0+255),b
 50709  00F3FA  0E00               	movlw	0
 50710  00F3FC  6FA8               	movwf	(_gblBLKLen+2)& (0+255),b
 50711  00F3FE  0E00               	movlw	0
 50712  00F400  6FA9               	movwf	(_gblBLKLen+3)& (0+255),b
 50713                           
 50714                           ; BSR set to: 2
 50715                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 50716  00F402  0E01               	movlw	1
 50717  00F404  0101               	movlb	1	; () banked
 50718  00F406  6FF5               	movwf	_MSDCBWValid& (0+255),b
 50719                           
 50720                           ; BSR set to: 1
 50721                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 50722  00F408  0E00               	movlw	0
 50723  00F40A  0102               	movlb	2	; () banked
 50724  00F40C  6FB3               	movwf	(_gblMediaPresent+1)& (0+255),b
 50725  00F40E  0E00               	movlw	0
 50726  00F410  6FB2               	movwf	_gblMediaPresent& (0+255),b
 50727                           
 50728                           ; BSR set to: 2
 50729                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 50730  00F412  0E00               	movlw	0
 50731  00F414  0102               	movlb	2	; () banked
 50732  00F416  6F4E               	movwf	(_gblCBW+13)& (0+255),b
 50733  00F418  D04C               	goto	i2l17867
 50734  00F41A                     i2l17855:
 50735                           
 50736                           ; BSR set to: 2
 50737                           ;usb_device_msd.c: 161: {
 50738                           ;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 50739  00F41A  0102               	movlb	2	; () banked
 50740  00F41C  514E               	movf	(_gblCBW+13)& (0+255),w,b
 50741  00F41E  0D01               	mullw	1
 50742  00F420  0EF6               	movlw	low _SoftDetach
 50743  00F422  24F3               	addwf	prodl,w,c
 50744  00F424  6ED9               	movwf	fsr2l,c
 50745  00F426  0E01               	movlw	high _SoftDetach
 50746  00F428  20F4               	addwfc	prodh,w,c
 50747  00F42A  6EDA               	movwf	fsr2h,c
 50748  00F42C  0E00               	movlw	0
 50749  00F42E  6EDF               	movwf	indf2,c
 50750                           
 50751                           ; BSR set to: 2
 50752                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 50753  00F430  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 50754  00F434  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 50755  00F438  EE22  F0C4         	lfsr	2,_LUN+9
 50756  00F43C  D801               	call	i2u1646_48
 50757  00F43E  D00A               	goto	i2u1646_49
 50758  00F440                     i2u1646_48:
 50759  00F440  0005               	push	
 50760  00F442  6EFA               	movwf	pclath,c
 50761  00F444  50DE               	movf	postinc2,w,c
 50762  00F446  6EFD               	movwf	tosl,c
 50763  00F448  50DE               	movf	postinc2,w,c
 50764  00F44A  6EFE               	movwf	tosh,c
 50765  00F44C  50DE               	movf	postinc2,w,c
 50766  00F44E  6EFF               	movwf	tosu,c
 50767  00F450  50FA               	movf	pclath,w,c
 50768  00F452  0012               	return		;indir
 50769  00F454                     i2u1646_49:
 50770  00F454  0900               	iorlw	0
 50771  00F456  B4D8               	btfsc	status,2,c
 50772  00F458  D028               	goto	i2l17863
 50773                           
 50774                           ;usb_device_msd.c: 167: {
 50775                           ;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 50776  00F45A  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 50777  00F45E  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 50778  00F462  D801               	call	i2u1648_48
 50779  00F464  D00B               	goto	i2u1648_49
 50780  00F466                     i2u1648_48:
 50781  00F466  0005               	push	
 50782  00F468  6EFA               	movwf	pclath,c
 50783  00F46A  0102               	movlb	2	; () banked
 50784  00F46C  51BB               	movf	_LUN& (0+255),w,b
 50785  00F46E  6EFD               	movwf	tosl,c
 50786  00F470  51BC               	movf	(_LUN+1)& (0+255),w,b
 50787  00F472  6EFE               	movwf	tosh,c
 50788  00F474  51BD               	movf	(_LUN+2)& (0+255),w,b
 50789  00F476  6EFF               	movwf	tosu,c
 50790  00F478  50FA               	movf	pclath,w,c
 50791  00F47A  0012               	return		;indir
 50792  00F47C                     i2u1648_49:
 50793  00F47C  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 50794  00F47E  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 50795  00F480  B4D8               	btfsc	status,2,c
 50796  00F482  D013               	goto	i2l17863
 50797                           
 50798                           ;usb_device_msd.c: 170: {
 50799                           ;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 50800  00F484  C24E  F039         	movff	_gblCBW+13,??_USBMSDInit
 50801  00F488  0E01               	movlw	1
 50802  00F48A  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 50803  00F48C  0E00               	movlw	0
 50804  00F48E  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 50805  00F490  2A39               	incf	??_USBMSDInit,f,c
 50806  00F492  D003               	goto	i2u1650_44
 50807  00F494                     i2u1650_45:
 50808  00F494  90D8               	bcf	status,0,c
 50809  00F496  363A               	rlcf	??_USBMSDInit+1,f,c
 50810  00F498  363B               	rlcf	??_USBMSDInit+2,f,c
 50811  00F49A                     i2u1650_44:
 50812  00F49A  2E39               	decfsz	??_USBMSDInit,f,c
 50813  00F49C  D7FB               	goto	i2u1650_45
 50814  00F49E  503A               	movf	??_USBMSDInit+1,w,c
 50815  00F4A0  0102               	movlb	2	; () banked
 50816  00F4A2  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 50817  00F4A4  503B               	movf	??_USBMSDInit+2,w,c
 50818  00F4A6  0102               	movlb	2	; () banked
 50819  00F4A8  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 50820  00F4AA                     i2l17863:
 50821                           
 50822                           ;usb_device_msd.c: 174: }
 50823                           ;usb_device_msd.c: 175: }
 50824                           ;usb_device_msd.c: 176: ResetSenseData();
 50825  00F4AA  EC46  F090         	call	i2_ResetSenseData	;wreg free
 50826  00F4AE  0102               	movlb	2	; () banked
 50827  00F4B0  2B4E               	incf	(_gblCBW+13)& (0+255),f,b
 50828  00F4B2                     i2l17867:
 50829                           
 50830                           ; BSR set to: 2
 50831  00F4B2  0102               	movlb	2	; () banked
 50832  00F4B4  514E               	movf	(_gblCBW+13)& (0+255),w,b
 50833  00F4B6  A4D8               	btfss	status,2,c
 50834  00F4B8  0012               	return	
 50835  00F4BA  D7AF               	goto	i2l17855
 50836  00F4BC                     __end_of_USBMSDInit:
 50837                           	opt stack 0
 50838                           tosu	equ	0xFFF
 50839                           tosh	equ	0xFFE
 50840                           tosl	equ	0xFFD
 50841                           pclatu	equ	0xFFB
 50842                           pclath	equ	0xFFA
 50843                           tblptru	equ	0xFF8
 50844                           tblptrh	equ	0xFF7
 50845                           tblptrl	equ	0xFF6
 50846                           tablat	equ	0xFF5
 50847                           prodh	equ	0xFF4
 50848                           prodl	equ	0xFF3
 50849                           intcon	equ	0xFF2
 50850                           intcon2	equ	0xFF1
 50851                           intcon3	equ	0xFF0
 50852                           indf0	equ	0xFEF
 50853                           postinc0	equ	0xFEE
 50854                           fsr0h	equ	0xFEA
 50855                           fsr0l	equ	0xFE9
 50856                           wreg	equ	0xFE8
 50857                           indf1	equ	0xFE7
 50858                           postinc1	equ	0xFE6
 50859                           postdec1	equ	0xFE5
 50860                           plusw1	equ	0xFE3
 50861                           fsr1h	equ	0xFE2
 50862                           fsr1l	equ	0xFE1
 50863                           indf2	equ	0xFDF
 50864                           postinc2	equ	0xFDE
 50865                           postdec2	equ	0xFDD
 50866                           plusw2	equ	0xFDB
 50867                           fsr2h	equ	0xFDA
 50868                           fsr2l	equ	0xFD9
 50869                           status	equ	0xFD8
 50870                           
 50871 ;; *************** function i2_ResetSenseData *****************
 50872 ;; Defined at:
 50873 ;;		line 1373 in file "usb_device_msd.c"
 50874 ;; Parameters:    Size  Location     Type
 50875 ;;		None
 50876 ;; Auto vars:     Size  Location     Type
 50877 ;;		None
 50878 ;; Return value:  Size  Location     Type
 50879 ;;                  1    wreg      void 
 50880 ;; Registers used:
 50881 ;;		wreg, status,2
 50882 ;; Tracked objects:
 50883 ;;		On entry : 0/0
 50884 ;;		On exit  : 0/0
 50885 ;;		Unchanged: 0/0
 50886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50891 ;;Total ram usage:        0 bytes
 50892 ;; Hardware stack levels used:    1
 50893 ;; This function calls:
 50894 ;;		Nothing
 50895 ;; This function is called by:
 50896 ;;		_USBMSDInit
 50897 ;; This function uses a non-reentrant model
 50898 ;;
 50899                           
 50900                           	psect	text240
 50901  01208C                     __ptext240:
 50902                           	opt stack 0
 50903  01208C                     i2_ResetSenseData:
 50904                           	opt stack 13
 50905                           
 50906                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 50907                           
 50908                           ; BSR set to: 2
 50909                           ;incstack = 0
 50910  01208C  0102               	movlb	2	; () banked
 50911  01208E  9160               	bcf	_gblSenseData& (0+255),0,b
 50912  012090  9360               	bcf	_gblSenseData& (0+255),1,b
 50913  012092  9560               	bcf	_gblSenseData& (0+255),2,b
 50914  012094  9760               	bcf	_gblSenseData& (0+255),3,b
 50915  012096  8960               	bsf	_gblSenseData& (0+255),4,b
 50916  012098  8B60               	bsf	_gblSenseData& (0+255),5,b
 50917  01209A  8D60               	bsf	_gblSenseData& (0+255),6,b
 50918                           
 50919                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 50920  01209C  0102               	movlb	2	; () banked
 50921  01209E  9F60               	bcf	_gblSenseData& (0+255),7,b
 50922                           
 50923                           ; BSR set to: 2
 50924                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 50925  0120A0  0E00               	movlw	0
 50926  0120A2  0102               	movlb	2	; () banked
 50927  0120A4  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 50928                           
 50929                           ; BSR set to: 2
 50930                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 50931  0120A6  0102               	movlb	2	; () banked
 50932  0120A8  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 50933  0120AA  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 50934  0120AC  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 50935  0120AE  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 50936                           
 50937                           ; BSR set to: 2
 50938                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 50939  0120B0  0102               	movlb	2	; () banked
 50940  0120B2  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 50941                           
 50942                           ; BSR set to: 2
 50943                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 50944  0120B4  0102               	movlb	2	; () banked
 50945  0120B6  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 50946                           
 50947                           ; BSR set to: 2
 50948                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 50949  0120B8  0102               	movlb	2	; () banked
 50950  0120BA  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 50951                           
 50952                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 50953  0120BC  0E00               	movlw	0
 50954  0120BE  0102               	movlb	2	; () banked
 50955  0120C0  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 50956                           
 50957                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 50958  0120C2  0E00               	movlw	0
 50959  0120C4  0102               	movlb	2	; () banked
 50960  0120C6  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 50961                           
 50962                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 50963  0120C8  0E00               	movlw	0
 50964  0120CA  0102               	movlb	2	; () banked
 50965  0120CC  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 50966                           
 50967                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 50968  0120CE  0E00               	movlw	0
 50969  0120D0  0102               	movlb	2	; () banked
 50970  0120D2  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 50971                           
 50972                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 50973  0120D4  0E0A               	movlw	10
 50974  0120D6  0102               	movlb	2	; () banked
 50975  0120D8  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 50976                           
 50977                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 50978  0120DA  0E00               	movlw	0
 50979  0120DC  0102               	movlb	2	; () banked
 50980  0120DE  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 50981  0120E0  0E00               	movlw	0
 50982  0120E2  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 50983  0120E4  0E00               	movlw	0
 50984  0120E6  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 50985  0120E8  0E00               	movlw	0
 50986  0120EA  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 50987                           
 50988                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 50989  0120EC  0E00               	movlw	0
 50990  0120EE  0102               	movlb	2	; () banked
 50991  0120F0  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 50992                           
 50993                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 50994  0120F2  0E00               	movlw	0
 50995  0120F4  0102               	movlb	2	; () banked
 50996  0120F6  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 50997                           
 50998                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 50999  0120F8  0E00               	movlw	0
 51000  0120FA  0102               	movlb	2	; () banked
 51001  0120FC  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 51002                           
 51003                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 51004  0120FE  0E00               	movlw	0
 51005  012100  0102               	movlb	2	; () banked
 51006  012102  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 51007                           
 51008                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 51009  012104  0E00               	movlw	0
 51010  012106  0102               	movlb	2	; () banked
 51011  012108  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 51012                           
 51013                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 51014  01210A  0E00               	movlw	0
 51015  01210C  0102               	movlb	2	; () banked
 51016  01210E  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 51017                           
 51018                           ; BSR set to: 2
 51019  012110  0012               	return		;funcret
 51020  012112                     __end_ofi2_ResetSenseData:
 51021                           	opt stack 0
 51022                           tosu	equ	0xFFF
 51023                           tosh	equ	0xFFE
 51024                           tosl	equ	0xFFD
 51025                           pclatu	equ	0xFFB
 51026                           pclath	equ	0xFFA
 51027                           tblptru	equ	0xFF8
 51028                           tblptrh	equ	0xFF7
 51029                           tblptrl	equ	0xFF6
 51030                           tablat	equ	0xFF5
 51031                           prodh	equ	0xFF4
 51032                           prodl	equ	0xFF3
 51033                           intcon	equ	0xFF2
 51034                           intcon2	equ	0xFF1
 51035                           intcon3	equ	0xFF0
 51036                           indf0	equ	0xFEF
 51037                           postinc0	equ	0xFEE
 51038                           fsr0h	equ	0xFEA
 51039                           fsr0l	equ	0xFE9
 51040                           wreg	equ	0xFE8
 51041                           indf1	equ	0xFE7
 51042                           postinc1	equ	0xFE6
 51043                           postdec1	equ	0xFE5
 51044                           plusw1	equ	0xFE3
 51045                           fsr1h	equ	0xFE2
 51046                           fsr1l	equ	0xFE1
 51047                           indf2	equ	0xFDF
 51048                           postinc2	equ	0xFDE
 51049                           postdec2	equ	0xFDD
 51050                           plusw2	equ	0xFDB
 51051                           fsr2h	equ	0xFDA
 51052                           fsr2l	equ	0xFD9
 51053                           status	equ	0xFD8
 51054                           
 51055 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 51056 ;; Defined at:
 51057 ;;		line 10 in file "external_flash.c"
 51058 ;; Parameters:    Size  Location     Type
 51059 ;;  config          2    0[COMRAM] PTR void 
 51060 ;;		 -> NULL(0), 
 51061 ;; Auto vars:     Size  Location     Type
 51062 ;;		None
 51063 ;; Return value:  Size  Location     Type
 51064 ;;                  2    0[COMRAM] PTR struct .
 51065 ;; Registers used:
 51066 ;;		wreg, status,2, status,0
 51067 ;; Tracked objects:
 51068 ;;		On entry : 0/0
 51069 ;;		On exit  : 0/0
 51070 ;;		Unchanged: 0/0
 51071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51075 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51076 ;;Total ram usage:        2 bytes
 51077 ;; Hardware stack levels used:    1
 51078 ;; This function calls:
 51079 ;;		Nothing
 51080 ;; This function is called by:
 51081 ;; This function uses a non-reentrant model
 51082 ;;
 51083                           
 51084                           	psect	text241
 51085  013F9A                     __ptext241:
 51086                           	opt stack 0
 51087  013F9A                     i2_ExternalFlash_MediaInitialize:
 51088                           	opt stack 13
 51089                           
 51090                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 51091                           
 51092                           ; BSR set to: 2
 51093                           ;incstack = 0
 51094  013F9A  0102               	movlb	2	; () banked
 51095  013F9C  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 51096                           
 51097                           ; BSR set to: 2
 51098                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 51099  013F9E  0E02               	movlw	2
 51100  013FA0  0102               	movlb	2	; () banked
 51101  013FA2  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 51102  013FA4  0E00               	movlw	0
 51103  013FA6  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 51104                           
 51105                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 51106  013FA8  0E00               	movlw	0
 51107  013FAA  0102               	movlb	2	; () banked
 51108  013FAC  6FB6               	movwf	_mediaInformation& (0+255),b
 51109                           
 51110                           ; BSR set to: 2
 51111                           ;external_flash.c: 15: return &mediaInformation;
 51112  013FAE  0EB6               	movlw	low _mediaInformation
 51113  013FB0  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 51114  013FB2  0E02               	movlw	high _mediaInformation
 51115  013FB4  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 51116  013FB6  0012               	return	
 51117  013FB8                     __end_ofi2_ExternalFlash_MediaInitialize:
 51118                           	opt stack 0
 51119                           tosu	equ	0xFFF
 51120                           tosh	equ	0xFFE
 51121                           tosl	equ	0xFFD
 51122                           pclatu	equ	0xFFB
 51123                           pclath	equ	0xFFA
 51124                           tblptru	equ	0xFF8
 51125                           tblptrh	equ	0xFF7
 51126                           tblptrl	equ	0xFF6
 51127                           tablat	equ	0xFF5
 51128                           prodh	equ	0xFF4
 51129                           prodl	equ	0xFF3
 51130                           intcon	equ	0xFF2
 51131                           intcon2	equ	0xFF1
 51132                           intcon3	equ	0xFF0
 51133                           indf0	equ	0xFEF
 51134                           postinc0	equ	0xFEE
 51135                           fsr0h	equ	0xFEA
 51136                           fsr0l	equ	0xFE9
 51137                           wreg	equ	0xFE8
 51138                           indf1	equ	0xFE7
 51139                           postinc1	equ	0xFE6
 51140                           postdec1	equ	0xFE5
 51141                           plusw1	equ	0xFE3
 51142                           fsr1h	equ	0xFE2
 51143                           fsr1l	equ	0xFE1
 51144                           indf2	equ	0xFDF
 51145                           postinc2	equ	0xFDE
 51146                           postdec2	equ	0xFDD
 51147                           plusw2	equ	0xFDB
 51148                           fsr2h	equ	0xFDA
 51149                           fsr2l	equ	0xFD9
 51150                           status	equ	0xFD8
 51151                           
 51152 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 51153 ;; Defined at:
 51154 ;;		line 29 in file "external_flash.c"
 51155 ;; Parameters:    Size  Location     Type
 51156 ;;  config          2    0[COMRAM] PTR void 
 51157 ;;		 -> NULL(0), 
 51158 ;; Auto vars:     Size  Location     Type
 51159 ;;		None
 51160 ;; Return value:  Size  Location     Type
 51161 ;;                  1    wreg      unsigned char 
 51162 ;; Registers used:
 51163 ;;		wreg
 51164 ;; Tracked objects:
 51165 ;;		On entry : 0/0
 51166 ;;		On exit  : 0/0
 51167 ;;		Unchanged: 0/0
 51168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51173 ;;Total ram usage:        2 bytes
 51174 ;; Hardware stack levels used:    1
 51175 ;; This function calls:
 51176 ;;		Nothing
 51177 ;; This function is called by:
 51178 ;; This function uses a non-reentrant model
 51179 ;;
 51180                           
 51181                           	psect	text242
 51182  0142F4                     __ptext242:
 51183                           	opt stack 0
 51184  0142F4                     i2_ExternalFlash_MediaDetect:
 51185                           	opt stack 13
 51186                           
 51187                           ;external_flash.c: 31: return 1;
 51188                           
 51189                           ; BSR set to: 2
 51190                           ;incstack = 0
 51191  0142F4  0E01               	movlw	1
 51192  0142F6  0012               	return	
 51193  0142F8                     __end_ofi2_ExternalFlash_MediaDetect:
 51194                           	opt stack 0
 51195                           tosu	equ	0xFFF
 51196                           tosh	equ	0xFFE
 51197                           tosl	equ	0xFFD
 51198                           pclatu	equ	0xFFB
 51199                           pclath	equ	0xFFA
 51200                           tblptru	equ	0xFF8
 51201                           tblptrh	equ	0xFF7
 51202                           tblptrl	equ	0xFF6
 51203                           tablat	equ	0xFF5
 51204                           prodh	equ	0xFF4
 51205                           prodl	equ	0xFF3
 51206                           intcon	equ	0xFF2
 51207                           intcon2	equ	0xFF1
 51208                           intcon3	equ	0xFF0
 51209                           indf0	equ	0xFEF
 51210                           postinc0	equ	0xFEE
 51211                           fsr0h	equ	0xFEA
 51212                           fsr0l	equ	0xFE9
 51213                           wreg	equ	0xFE8
 51214                           indf1	equ	0xFE7
 51215                           postinc1	equ	0xFE6
 51216                           postdec1	equ	0xFE5
 51217                           plusw1	equ	0xFE3
 51218                           fsr1h	equ	0xFE2
 51219                           fsr1l	equ	0xFE1
 51220                           indf2	equ	0xFDF
 51221                           postinc2	equ	0xFDE
 51222                           postdec2	equ	0xFDD
 51223                           plusw2	equ	0xFDB
 51224                           fsr2h	equ	0xFDA
 51225                           fsr2l	equ	0xFD9
 51226                           status	equ	0xFD8
 51227                           
 51228 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 51229 ;; Defined at:
 51230 ;;		line 81 in file "app_device_custom_hid.c"
 51231 ;; Parameters:    Size  Location     Type
 51232 ;;		None
 51233 ;; Auto vars:     Size  Location     Type
 51234 ;;		None
 51235 ;; Return value:  Size  Location     Type
 51236 ;;                  1    wreg      void 
 51237 ;; Registers used:
 51238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51239 ;; Tracked objects:
 51240 ;;		On entry : 0/0
 51241 ;;		On exit  : 0/0
 51242 ;;		Unchanged: 0/0
 51243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51248 ;;Total ram usage:        0 bytes
 51249 ;; Hardware stack levels used:    1
 51250 ;; Hardware stack levels required when called:    2
 51251 ;; This function calls:
 51252 ;;		_USBEnableEndpoint
 51253 ;;		i2_USBTransferOnePacket
 51254 ;; This function is called by:
 51255 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51256 ;; This function uses a non-reentrant model
 51257 ;;
 51258                           
 51259                           	psect	text243
 51260  013916                     __ptext243:
 51261                           	opt stack 0
 51262  013916                     _APP_DeviceCustomHIDInitialize:
 51263                           	opt stack 13
 51264                           
 51265                           ;app_device_custom_hid.c: 85: USBInHandle = 0;
 51266                           
 51267                           ;incstack = 0
 51268  013916  0E00               	movlw	0
 51269  013918  0100               	movlb	0	; () banked
 51270  01391A  6FD7               	movwf	_USBInHandle& (0+255),b
 51271  01391C  0E00               	movlw	0
 51272  01391E  0100               	movlb	0	; () banked
 51273  013920  6FD8               	movwf	(_USBInHandle+1)& (0+255),b
 51274                           
 51275                           ; BSR set to: 0
 51276                           ;app_device_custom_hid.c: 88: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 51277  013922  0E1E               	movlw	30
 51278  013924  6E36               	movwf	USBEnableEndpoint@options,c
 51279  013926  0E01               	movlw	1
 51280  013928  ECE3  F09B         	call	_USBEnableEndpoint
 51281                           
 51282                           ;app_device_custom_hid.c: 91: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 51283  01392C  0E00               	movlw	0
 51284  01392E  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 51285  013930  0E78               	movlw	low _ReceivedDataBuffer
 51286  013932  6E2F               	movwf	i2USBTransferOnePacket@data,c
 51287  013934  0E04               	movlw	high _ReceivedDataBuffer
 51288  013936  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 51289  013938  0E40               	movlw	64
 51290  01393A  6E31               	movwf	i2USBTransferOnePacket@len,c
 51291  01393C  0E01               	movlw	1
 51292  01393E  EC9F  F07F         	call	i2_USBTransferOnePacket
 51293  013942  C02E  F1E9         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 51294  013946  C02F  F1EA         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 51295  01394A  0012               	return		;funcret
 51296  01394C                     __end_of_APP_DeviceCustomHIDInitialize:
 51297                           	opt stack 0
 51298                           tosu	equ	0xFFF
 51299                           tosh	equ	0xFFE
 51300                           tosl	equ	0xFFD
 51301                           pclatu	equ	0xFFB
 51302                           pclath	equ	0xFFA
 51303                           tblptru	equ	0xFF8
 51304                           tblptrh	equ	0xFF7
 51305                           tblptrl	equ	0xFF6
 51306                           tablat	equ	0xFF5
 51307                           prodh	equ	0xFF4
 51308                           prodl	equ	0xFF3
 51309                           intcon	equ	0xFF2
 51310                           intcon2	equ	0xFF1
 51311                           intcon3	equ	0xFF0
 51312                           indf0	equ	0xFEF
 51313                           postinc0	equ	0xFEE
 51314                           fsr0h	equ	0xFEA
 51315                           fsr0l	equ	0xFE9
 51316                           wreg	equ	0xFE8
 51317                           indf1	equ	0xFE7
 51318                           postinc1	equ	0xFE6
 51319                           postdec1	equ	0xFE5
 51320                           plusw1	equ	0xFE3
 51321                           fsr1h	equ	0xFE2
 51322                           fsr1l	equ	0xFE1
 51323                           indf2	equ	0xFDF
 51324                           postinc2	equ	0xFDE
 51325                           postdec2	equ	0xFDD
 51326                           plusw2	equ	0xFDB
 51327                           fsr2h	equ	0xFDA
 51328                           fsr2l	equ	0xFD9
 51329                           status	equ	0xFD8
 51330                           
 51331 ;; *************** function i2_USBTransferOnePacket *****************
 51332 ;; Defined at:
 51333 ;;		line 995 in file "usb_device.c"
 51334 ;; Parameters:    Size  Location     Type
 51335 ;;  ep              1    wreg     unsigned char 
 51336 ;;  dir             1    0[COMRAM] unsigned char 
 51337 ;;  data            2    1[COMRAM] PTR unsigned char 
 51338 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 51339 ;;		 -> msd_cbw(31), NULL(0), 
 51340 ;;  len             1    3[COMRAM] unsigned char 
 51341 ;; Auto vars:     Size  Location     Type
 51342 ;;  ep              1    8[COMRAM] unsigned char 
 51343 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 51344 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51345 ;; Return value:  Size  Location     Type
 51346 ;;                  2    0[COMRAM] PTR void 
 51347 ;; Registers used:
 51348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51349 ;; Tracked objects:
 51350 ;;		On entry : 0/0
 51351 ;;		On exit  : 0/0
 51352 ;;		Unchanged: 0/0
 51353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51355 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51357 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51358 ;;Total ram usage:       11 bytes
 51359 ;; Hardware stack levels used:    1
 51360 ;; This function calls:
 51361 ;;		Nothing
 51362 ;; This function is called by:
 51363 ;;		_USBMSDInit
 51364 ;;		_USBCheckMSDRequest
 51365 ;;		_MSDTransferTerminated
 51366 ;;		_APP_DeviceCustomHIDInitialize
 51367 ;; This function uses a non-reentrant model
 51368 ;;
 51369                           
 51370                           	psect	text244
 51371  00FF3E                     __ptext244:
 51372                           	opt stack 0
 51373  00FF3E                     i2_USBTransferOnePacket:
 51374                           	opt stack 14
 51375                           
 51376                           ;incstack = 0
 51377                           ;i2USBTransferOnePacket@ep stored from wreg
 51378  00FF3E  6E36               	movwf	i2USBTransferOnePacket@ep,c
 51379                           
 51380                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 51381                           ;usb_device.c: 1000: if(dir != 0)
 51382  00FF40  502E               	movf	i2USBTransferOnePacket@dir,w,c
 51383  00FF42  B4D8               	btfsc	status,2,c
 51384  00FF44  D007               	goto	i2l11285
 51385                           
 51386                           ;usb_device.c: 1001: {
 51387                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 51388  00FF46  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51389  00FF48  0D02               	mullw	2
 51390  00FF4A  0E10               	movlw	low _pBDTEntryIn
 51391  00FF4C  24F3               	addwf	prodl,w,c
 51392  00FF4E  6ED9               	movwf	fsr2l,c
 51393  00FF50  0E00               	movlw	high _pBDTEntryIn
 51394  00FF52  D006               	goto	L64
 51395  00FF54                     i2l11285:
 51396                           
 51397                           ;usb_device.c: 1005: else
 51398                           ;usb_device.c: 1006: {
 51399                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 51400  00FF54  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51401  00FF56  0D02               	mullw	2
 51402  00FF58  0ED3               	movlw	low _pBDTEntryOut
 51403  00FF5A  24F3               	addwf	prodl,w,c
 51404  00FF5C  6ED9               	movwf	fsr2l,c
 51405  00FF5E  0E01               	movlw	high _pBDTEntryOut
 51406  00FF60                     L64:
 51407  00FF60  20F4               	addwfc	prodh,w,c
 51408  00FF62  6EDA               	movwf	fsr2h,c
 51409  00FF64  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 51410  00FF68  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 51411                           
 51412                           ;usb_device.c: 1009: }
 51413                           ;usb_device.c: 1013: if(handle == 0)
 51414  00FF6C  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51415  00FF6E  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 51416  00FF70  A4D8               	btfss	status,2,c
 51417  00FF72  D005               	goto	i2l11293
 51418                           
 51419                           ;usb_device.c: 1014: {
 51420                           ;usb_device.c: 1015: return 0;
 51421  00FF74  0E00               	movlw	0
 51422  00FF76  6E2E               	movwf	?i2_USBTransferOnePacket,c
 51423  00FF78  0E00               	movlw	0
 51424  00FF7A  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 51425  00FF7C  0012               	return	
 51426  00FF7E                     i2l11293:
 51427                           
 51428                           ;usb_device.c: 1016: }
 51429                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 51430  00FF7E  EE20 F002          	lfsr	2,2
 51431  00FF82  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51432  00FF84  26D9               	addwf	fsr2l,f,c
 51433  00FF86  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 51434  00FF88  22DA               	addwfc	fsr2h,f,c
 51435  00FF8A  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 51436  00FF8E  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 51437                           
 51438                           ;usb_device.c: 1030: handle->CNT = len;
 51439  00FF92  EE20 F001          	lfsr	2,1
 51440  00FF96  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51441  00FF98  26D9               	addwf	fsr2l,f,c
 51442  00FF9A  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 51443  00FF9C  22DA               	addwfc	fsr2h,f,c
 51444  00FF9E  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 51445                           
 51446                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 51447  00FFA2  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51448  00FFA6  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51449  00FFAA  0E40               	movlw	64
 51450  00FFAC  16DF               	andwf	indf2,f,c
 51451                           
 51452                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 51453  00FFAE  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51454  00FFB2  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51455  00FFB6  0E00               	movlw	0
 51456  00FFB8  86DB               	bsf	plusw2,3,c
 51457                           
 51458                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 51459  00FFBA  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51460  00FFBE  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51461  00FFC2  0E00               	movlw	0
 51462  00FFC4  8EDB               	bsf	plusw2,7,c
 51463                           
 51464                           ;usb_device.c: 1036: if(dir != 0)
 51465  00FFC6  502E               	movf	i2USBTransferOnePacket@dir,w,c
 51466  00FFC8  B4D8               	btfsc	status,2,c
 51467  00FFCA  D018               	goto	i2l11305
 51468                           
 51469                           ;usb_device.c: 1037: {
 51470                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 51471  00FFCC  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51472  00FFCE  0D02               	mullw	2
 51473  00FFD0  0E10               	movlw	low _pBDTEntryIn
 51474  00FFD2  24F3               	addwf	prodl,w,c
 51475  00FFD4  6ED9               	movwf	fsr2l,c
 51476  00FFD6  0E00               	movlw	high _pBDTEntryIn
 51477  00FFD8  20F4               	addwfc	prodh,w,c
 51478  00FFDA  6EDA               	movwf	fsr2h,c
 51479  00FFDC  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 51480  00FFE0  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 51481  00FFE4  0E04               	movlw	4
 51482  00FFE6  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 51483  00FFE8  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 51484  00FFEA  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 51485  00FFEC  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 51486  00FFEE  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51487  00FFF0  0D02               	mullw	2
 51488  00FFF2  0E10               	movlw	low _pBDTEntryIn
 51489  00FFF4  24F3               	addwf	prodl,w,c
 51490  00FFF6  6ED9               	movwf	fsr2l,c
 51491  00FFF8  0E00               	movlw	high _pBDTEntryIn
 51492  00FFFA  D017               	goto	L65
 51493  00FFFC                     i2l11305:
 51494                           
 51495                           ;usb_device.c: 1041: else
 51496                           ;usb_device.c: 1042: {
 51497                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 51498  00FFFC  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51499  00FFFE  0D02               	mullw	2
 51500  010000  0ED3               	movlw	low _pBDTEntryOut
 51501  010002  24F3               	addwf	prodl,w,c
 51502  010004  6ED9               	movwf	fsr2l,c
 51503  010006  0E01               	movlw	high _pBDTEntryOut
 51504  010008  20F4               	addwfc	prodh,w,c
 51505  01000A  6EDA               	movwf	fsr2h,c
 51506  01000C  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 51507  010010  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 51508  010014  0E04               	movlw	4
 51509  010016  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 51510  010018  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 51511  01001A  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 51512  01001C  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 51513  01001E  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51514  010020  0D02               	mullw	2
 51515  010022  0ED3               	movlw	low _pBDTEntryOut
 51516  010024  24F3               	addwf	prodl,w,c
 51517  010026  6ED9               	movwf	fsr2l,c
 51518  010028  0E01               	movlw	high _pBDTEntryOut
 51519  01002A                     L65:
 51520  01002A  20F4               	addwfc	prodh,w,c
 51521  01002C  6EDA               	movwf	fsr2h,c
 51522  01002E  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 51523  010032  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 51524                           
 51525                           ;usb_device.c: 1045: }
 51526                           ;usb_device.c: 1046: return (void*)handle;
 51527  010036  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 51528  01003A  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 51529  01003E  0012               	return	
 51530  010040                     __end_ofi2_USBTransferOnePacket:
 51531                           	opt stack 0
 51532                           tosu	equ	0xFFF
 51533                           tosh	equ	0xFFE
 51534                           tosl	equ	0xFFD
 51535                           pclatu	equ	0xFFB
 51536                           pclath	equ	0xFFA
 51537                           tblptru	equ	0xFF8
 51538                           tblptrh	equ	0xFF7
 51539                           tblptrl	equ	0xFF6
 51540                           tablat	equ	0xFF5
 51541                           prodh	equ	0xFF4
 51542                           prodl	equ	0xFF3
 51543                           intcon	equ	0xFF2
 51544                           intcon2	equ	0xFF1
 51545                           intcon3	equ	0xFF0
 51546                           indf0	equ	0xFEF
 51547                           postinc0	equ	0xFEE
 51548                           fsr0h	equ	0xFEA
 51549                           fsr0l	equ	0xFE9
 51550                           wreg	equ	0xFE8
 51551                           indf1	equ	0xFE7
 51552                           postinc1	equ	0xFE6
 51553                           postdec1	equ	0xFE5
 51554                           plusw1	equ	0xFE3
 51555                           fsr1h	equ	0xFE2
 51556                           fsr1l	equ	0xFE1
 51557                           indf2	equ	0xFDF
 51558                           postinc2	equ	0xFDE
 51559                           postdec2	equ	0xFDD
 51560                           plusw2	equ	0xFDB
 51561                           fsr2h	equ	0xFDA
 51562                           fsr2l	equ	0xFD9
 51563                           status	equ	0xFD8
 51564                           
 51565 ;; *************** function _USBEnableEndpoint *****************
 51566 ;; Defined at:
 51567 ;;		line 878 in file "usb_device.c"
 51568 ;; Parameters:    Size  Location     Type
 51569 ;;  ep              1    wreg     unsigned char 
 51570 ;;  options         1    8[COMRAM] unsigned char 
 51571 ;; Auto vars:     Size  Location     Type
 51572 ;;  ep              1   11[COMRAM] unsigned char 
 51573 ;;  p               2    9[COMRAM] PTR unsigned char 
 51574 ;;		 -> UEP0(1), 
 51575 ;; Return value:  Size  Location     Type
 51576 ;;                  1    wreg      void 
 51577 ;; Registers used:
 51578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51579 ;; Tracked objects:
 51580 ;;		On entry : 0/0
 51581 ;;		On exit  : 0/0
 51582 ;;		Unchanged: 0/0
 51583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51584 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51585 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51588 ;;Total ram usage:        4 bytes
 51589 ;; Hardware stack levels used:    1
 51590 ;; Hardware stack levels required when called:    1
 51591 ;; This function calls:
 51592 ;;		_USBConfigureEndpoint
 51593 ;; This function is called by:
 51594 ;;		_APP_DeviceCustomHIDInitialize
 51595 ;;		_APP_DeviceMSDInitialize
 51596 ;; This function uses a non-reentrant model
 51597 ;;
 51598                           
 51599                           	psect	text245
 51600  0137C6                     __ptext245:
 51601                           	opt stack 0
 51602  0137C6                     _USBEnableEndpoint:
 51603                           	opt stack 13
 51604                           
 51605                           ;incstack = 0
 51606                           ;USBEnableEndpoint@ep stored from wreg
 51607  0137C6  6E39               	movwf	USBEnableEndpoint@ep,c
 51608                           
 51609                           ;usb_device.c: 880: unsigned char* p;
 51610                           ;usb_device.c: 884: if(options & 0x04)
 51611  0137C8  A436               	btfss	USBEnableEndpoint@options,2,c
 51612  0137CA  D005               	goto	i2l11339
 51613                           
 51614                           ;usb_device.c: 885: {
 51615                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 51616  0137CC  0E00               	movlw	0
 51617  0137CE  6E2E               	movwf	USBConfigureEndpoint@direction,c
 51618  0137D0  5039               	movf	USBEnableEndpoint@ep,w,c
 51619  0137D2  EC49  F08D         	call	_USBConfigureEndpoint
 51620  0137D6                     i2l11339:
 51621                           
 51622                           ;usb_device.c: 887: }
 51623                           ;usb_device.c: 888: if(options & 0x02)
 51624  0137D6  A236               	btfss	USBEnableEndpoint@options,1,c
 51625  0137D8  D005               	goto	i2l11343
 51626                           
 51627                           ;usb_device.c: 889: {
 51628                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 51629  0137DA  0E01               	movlw	1
 51630  0137DC  6E2E               	movwf	USBConfigureEndpoint@direction,c
 51631  0137DE  5039               	movf	USBEnableEndpoint@ep,w,c
 51632  0137E0  EC49  F08D         	call	_USBConfigureEndpoint
 51633  0137E4                     i2l11343:
 51634                           
 51635                           ;usb_device.c: 891: }
 51636                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 51637  0137E4  5039               	movf	USBEnableEndpoint@ep,w,c
 51638  0137E6  0D01               	mullw	1
 51639  0137E8  0E26               	movlw	38
 51640  0137EA  24F3               	addwf	prodl,w,c
 51641  0137EC  6E37               	movwf	USBEnableEndpoint@p,c
 51642  0137EE  0E0F               	movlw	15
 51643  0137F0  20F4               	addwfc	prodh,w,c
 51644  0137F2  6E38               	movwf	USBEnableEndpoint@p+1,c
 51645                           
 51646                           ;usb_device.c: 901: *p = options;
 51647  0137F4  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 51648  0137F8  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 51649  0137FC  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 51650  013800  0012               	return		;funcret
 51651  013802                     __end_of_USBEnableEndpoint:
 51652                           	opt stack 0
 51653                           tosu	equ	0xFFF
 51654                           tosh	equ	0xFFE
 51655                           tosl	equ	0xFFD
 51656                           pclatu	equ	0xFFB
 51657                           pclath	equ	0xFFA
 51658                           tblptru	equ	0xFF8
 51659                           tblptrh	equ	0xFF7
 51660                           tblptrl	equ	0xFF6
 51661                           tablat	equ	0xFF5
 51662                           prodh	equ	0xFF4
 51663                           prodl	equ	0xFF3
 51664                           intcon	equ	0xFF2
 51665                           intcon2	equ	0xFF1
 51666                           intcon3	equ	0xFF0
 51667                           indf0	equ	0xFEF
 51668                           postinc0	equ	0xFEE
 51669                           fsr0h	equ	0xFEA
 51670                           fsr0l	equ	0xFE9
 51671                           wreg	equ	0xFE8
 51672                           indf1	equ	0xFE7
 51673                           postinc1	equ	0xFE6
 51674                           postdec1	equ	0xFE5
 51675                           plusw1	equ	0xFE3
 51676                           fsr1h	equ	0xFE2
 51677                           fsr1l	equ	0xFE1
 51678                           indf2	equ	0xFDF
 51679                           postinc2	equ	0xFDE
 51680                           postdec2	equ	0xFDD
 51681                           plusw2	equ	0xFDB
 51682                           fsr2h	equ	0xFDA
 51683                           fsr2l	equ	0xFD9
 51684                           status	equ	0xFD8
 51685                           
 51686 ;; *************** function _USBConfigureEndpoint *****************
 51687 ;; Defined at:
 51688 ;;		line 1545 in file "usb_device.c"
 51689 ;; Parameters:    Size  Location     Type
 51690 ;;  EPNum           1    wreg     unsigned char 
 51691 ;;  direction       1    0[COMRAM] unsigned char 
 51692 ;; Auto vars:     Size  Location     Type
 51693 ;;  EPNum           1    5[COMRAM] unsigned char 
 51694 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 51695 ;;		 -> BDT(48), 
 51696 ;; Return value:  Size  Location     Type
 51697 ;;                  1    wreg      void 
 51698 ;; Registers used:
 51699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51700 ;; Tracked objects:
 51701 ;;		On entry : 0/0
 51702 ;;		On exit  : 0/0
 51703 ;;		Unchanged: 0/0
 51704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51705 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51706 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51707 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51708 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51709 ;;Total ram usage:        8 bytes
 51710 ;; Hardware stack levels used:    1
 51711 ;; This function calls:
 51712 ;;		Nothing
 51713 ;; This function is called by:
 51714 ;;		_USBEnableEndpoint
 51715 ;; This function uses a non-reentrant model
 51716 ;;
 51717                           
 51718                           	psect	text246
 51719  011A92                     __ptext246:
 51720                           	opt stack 0
 51721  011A92                     _USBConfigureEndpoint:
 51722                           	opt stack 13
 51723                           
 51724                           ;incstack = 0
 51725                           ;USBConfigureEndpoint@EPNum stored from wreg
 51726  011A92  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 51727                           
 51728                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;
 51729                           ;usb_device.c: 1551: handle = (volatile BDT_ENTRY*)&BDT[0];
 51730  011A94  0E00               	movlw	0
 51731  011A96  6E34               	movwf	USBConfigureEndpoint@handle,c
 51732  011A98  0E0D               	movlw	13
 51733  011A9A  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 51734                           
 51735                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 51736  011A9C  502E               	movf	USBConfigureEndpoint@direction,w,c
 51737  011A9E  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 51738  011AA0  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 51739  011AA2  90D8               	bcf	status,0,c
 51740  011AA4  362F               	rlcf	??_USBConfigureEndpoint,f,c
 51741  011AA6  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 51742  011AA8  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51743  011AAA  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 51744  011AAC  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 51745  011AAE  90D8               	bcf	status,0,c
 51746  011AB0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51747  011AB2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51748  011AB4  90D8               	bcf	status,0,c
 51749  011AB6  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51750  011AB8  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51751  011ABA  502F               	movf	??_USBConfigureEndpoint,w,c
 51752  011ABC  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 51753  011ABE  5030               	movf	??_USBConfigureEndpoint+1,w,c
 51754  011AC0  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 51755  011AC2  90D8               	bcf	status,0,c
 51756  011AC4  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51757  011AC6  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51758  011AC8  90D8               	bcf	status,0,c
 51759  011ACA  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51760  011ACC  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51761  011ACE  5031               	movf	??_USBConfigureEndpoint+2,w,c
 51762  011AD0  2634               	addwf	USBConfigureEndpoint@handle,f,c
 51763  011AD2  5032               	movf	??_USBConfigureEndpoint+3,w,c
 51764  011AD4  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 51765                           
 51766                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 51767  011AD6  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 51768  011ADA  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 51769  011ADE  9EDF               	bcf	indf2,7,c
 51770                           
 51771                           ;usb_device.c: 1559: if(direction == 0)
 51772  011AE0  502E               	movf	USBConfigureEndpoint@direction,w,c
 51773  011AE2  A4D8               	btfss	status,2,c
 51774  011AE4  D007               	goto	i2l11153
 51775                           
 51776                           ;usb_device.c: 1560: {
 51777                           ;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 51778  011AE6  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51779  011AE8  0D02               	mullw	2
 51780  011AEA  0ED3               	movlw	low _pBDTEntryOut
 51781  011AEC  24F3               	addwf	prodl,w,c
 51782  011AEE  6ED9               	movwf	fsr2l,c
 51783  011AF0  0E01               	movlw	high _pBDTEntryOut
 51784  011AF2  D006               	goto	L66
 51785  011AF4                     i2l11153:
 51786                           
 51787                           ;usb_device.c: 1563: else
 51788                           ;usb_device.c: 1564: {
 51789                           ;usb_device.c: 1565: pBDTEntryIn[EPNum] = handle;
 51790  011AF4  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51791  011AF6  0D02               	mullw	2
 51792  011AF8  0E10               	movlw	low _pBDTEntryIn
 51793  011AFA  24F3               	addwf	prodl,w,c
 51794  011AFC  6ED9               	movwf	fsr2l,c
 51795  011AFE  0E00               	movlw	high _pBDTEntryIn
 51796  011B00                     L66:
 51797  011B00  20F4               	addwfc	prodh,w,c
 51798  011B02  6EDA               	movwf	fsr2h,c
 51799  011B04  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 51800  011B08  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 51801                           
 51802                           ;usb_device.c: 1566: }
 51803                           ;usb_device.c: 1569: handle->STAT.DTS = 0;
 51804  011B0C  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 51805  011B10  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 51806  011B14  9CDF               	bcf	indf2,6,c
 51807                           
 51808                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 51809  011B16  EE20 F004          	lfsr	2,4
 51810  011B1A  5034               	movf	USBConfigureEndpoint@handle,w,c
 51811  011B1C  26D9               	addwf	fsr2l,f,c
 51812  011B1E  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 51813  011B20  22DA               	addwfc	fsr2h,f,c
 51814  011B22  8CDF               	bsf	indf2,6,c
 51815  011B24  0012               	return		;funcret
 51816  011B26                     __end_of_USBConfigureEndpoint:
 51817                           	opt stack 0
 51818                           tosu	equ	0xFFF
 51819                           tosh	equ	0xFFE
 51820                           tosl	equ	0xFFD
 51821                           pclatu	equ	0xFFB
 51822                           pclath	equ	0xFFA
 51823                           tblptru	equ	0xFF8
 51824                           tblptrh	equ	0xFF7
 51825                           tblptrl	equ	0xFF6
 51826                           tablat	equ	0xFF5
 51827                           prodh	equ	0xFF4
 51828                           prodl	equ	0xFF3
 51829                           intcon	equ	0xFF2
 51830                           intcon2	equ	0xFF1
 51831                           intcon3	equ	0xFF0
 51832                           indf0	equ	0xFEF
 51833                           postinc0	equ	0xFEE
 51834                           fsr0h	equ	0xFEA
 51835                           fsr0l	equ	0xFE9
 51836                           wreg	equ	0xFE8
 51837                           indf1	equ	0xFE7
 51838                           postinc1	equ	0xFE6
 51839                           postdec1	equ	0xFE5
 51840                           plusw1	equ	0xFE3
 51841                           fsr1h	equ	0xFE2
 51842                           fsr1l	equ	0xFE1
 51843                           indf2	equ	0xFDF
 51844                           postinc2	equ	0xFDE
 51845                           postdec2	equ	0xFDD
 51846                           plusw2	equ	0xFDB
 51847                           fsr2h	equ	0xFDA
 51848                           fsr2l	equ	0xFD9
 51849                           status	equ	0xFD8
 51850                           
 51851 ;; *************** function _USBCtrlTrfOutHandler *****************
 51852 ;; Defined at:
 51853 ;;		line 2540 in file "usb_device.c"
 51854 ;; Parameters:    Size  Location     Type
 51855 ;;		None
 51856 ;; Auto vars:     Size  Location     Type
 51857 ;;		None
 51858 ;; Return value:  Size  Location     Type
 51859 ;;                  1    wreg      void 
 51860 ;; Registers used:
 51861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51862 ;; Tracked objects:
 51863 ;;		On entry : 0/0
 51864 ;;		On exit  : 0/0
 51865 ;;		Unchanged: 0/0
 51866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51871 ;;Total ram usage:        0 bytes
 51872 ;; Hardware stack levels used:    1
 51873 ;; Hardware stack levels required when called:    2
 51874 ;; This function calls:
 51875 ;;		_USBCtrlTrfRxService
 51876 ;; This function is called by:
 51877 ;;		_USBCtrlEPService
 51878 ;; This function uses a non-reentrant model
 51879 ;;
 51880                           
 51881                           	psect	text247
 51882  013062                     __ptext247:
 51883                           	opt stack 0
 51884  013062                     _USBCtrlTrfOutHandler:
 51885                           	opt stack 13
 51886                           
 51887                           ;usb_device.c: 2542: if(controlTransferState == 2)
 51888                           
 51889                           ;incstack = 0
 51890  013062  0E02               	movlw	2
 51891  013064  1829               	xorwf	_controlTransferState,w,c	;volatile
 51892  013066  A4D8               	btfss	status,2,c
 51893  013068  D003               	goto	i2l13383
 51894                           
 51895                           ;usb_device.c: 2543: {
 51896                           ;usb_device.c: 2544: USBCtrlTrfRxService();
 51897  01306A  EC8B  F07C         	call	_USBCtrlTrfRxService	;wreg free
 51898                           
 51899                           ;usb_device.c: 2545: }
 51900  01306E  0012               	return	
 51901  013070                     i2l13383:
 51902                           
 51903                           ;usb_device.c: 2546: else
 51904                           ;usb_device.c: 2547: {
 51905                           ;usb_device.c: 2550: controlTransferState = 0;
 51906  013070  0E00               	movlw	0
 51907  013072  6E29               	movwf	_controlTransferState,c	;volatile
 51908                           
 51909                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 51910  013074  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 51911  013076  A4D8               	btfss	status,2,c
 51912  013078  D01F               	goto	i2l13391
 51913                           
 51914                           ;usb_device.c: 2558: {
 51915                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 51916  01307A  EE20 F001          	lfsr	2,1
 51917  01307E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51918  013080  26D9               	addwf	fsr2l,f,c
 51919  013082  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51920  013084  22DA               	addwfc	fsr2h,f,c
 51921  013086  0E08               	movlw	8
 51922  013088  6EDF               	movwf	indf2,c
 51923                           
 51924                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51925  01308A  EE20 F002          	lfsr	2,2
 51926  01308E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51927  013090  26D9               	addwf	fsr2l,f,c
 51928  013092  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51929  013094  22DA               	addwfc	fsr2h,f,c
 51930  013096  0E30               	movlw	48
 51931  013098  6EDE               	movwf	postinc2,c
 51932  01309A  0E0D               	movlw	13
 51933  01309C  6EDD               	movwf	postdec2,c
 51934                           
 51935                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 51936  01309E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51937  0130A2  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51938  0130A6  0E0C               	movlw	12
 51939  0130A8  6EDF               	movwf	indf2,c
 51940                           
 51941                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51942  0130AA  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51943  0130AE  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51944  0130B2  0E00               	movlw	0
 51945  0130B4  8EDB               	bsf	plusw2,7,c
 51946                           
 51947                           ;usb_device.c: 2563: }
 51948  0130B6  0012               	return	
 51949  0130B8                     i2l13391:
 51950                           
 51951                           ;usb_device.c: 2564: else
 51952                           ;usb_device.c: 2565: {
 51953                           ;usb_device.c: 2566: BothEP0OutUOWNsSet = 0;
 51954  0130B8  0E00               	movlw	0
 51955  0130BA  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 51956  0130BC  0012               	return	
 51957  0130BE                     __end_of_USBCtrlTrfOutHandler:
 51958                           	opt stack 0
 51959                           tosu	equ	0xFFF
 51960                           tosh	equ	0xFFE
 51961                           tosl	equ	0xFFD
 51962                           pclatu	equ	0xFFB
 51963                           pclath	equ	0xFFA
 51964                           tblptru	equ	0xFF8
 51965                           tblptrh	equ	0xFF7
 51966                           tblptrl	equ	0xFF6
 51967                           tablat	equ	0xFF5
 51968                           prodh	equ	0xFF4
 51969                           prodl	equ	0xFF3
 51970                           intcon	equ	0xFF2
 51971                           intcon2	equ	0xFF1
 51972                           intcon3	equ	0xFF0
 51973                           indf0	equ	0xFEF
 51974                           postinc0	equ	0xFEE
 51975                           fsr0h	equ	0xFEA
 51976                           fsr0l	equ	0xFE9
 51977                           wreg	equ	0xFE8
 51978                           indf1	equ	0xFE7
 51979                           postinc1	equ	0xFE6
 51980                           postdec1	equ	0xFE5
 51981                           plusw1	equ	0xFE3
 51982                           fsr1h	equ	0xFE2
 51983                           fsr1l	equ	0xFE1
 51984                           indf2	equ	0xFDF
 51985                           postinc2	equ	0xFDE
 51986                           postdec2	equ	0xFDD
 51987                           plusw2	equ	0xFDB
 51988                           fsr2h	equ	0xFDA
 51989                           fsr2l	equ	0xFD9
 51990                           status	equ	0xFD8
 51991                           
 51992 ;; *************** function _USBCtrlTrfRxService *****************
 51993 ;; Defined at:
 51994 ;;		line 1854 in file "usb_device.c"
 51995 ;; Parameters:    Size  Location     Type
 51996 ;;		None
 51997 ;; Auto vars:     Size  Location     Type
 51998 ;;  byteToRead      1    1[COMRAM] unsigned char 
 51999 ;;  i               1    0[COMRAM] unsigned char 
 52000 ;; Return value:  Size  Location     Type
 52001 ;;                  1    wreg      void 
 52002 ;; Registers used:
 52003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52004 ;; Tracked objects:
 52005 ;;		On entry : 0/0
 52006 ;;		On exit  : 0/0
 52007 ;;		Unchanged: 0/0
 52008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52013 ;;Total ram usage:        2 bytes
 52014 ;; Hardware stack levels used:    1
 52015 ;; Hardware stack levels required when called:    1
 52016 ;; This function calls:
 52017 ;;		_USBCtrlEPAllowStatusStage
 52018 ;; This function is called by:
 52019 ;;		_USBCtrlTrfOutHandler
 52020 ;; This function uses a non-reentrant model
 52021 ;;
 52022                           
 52023                           	psect	text248
 52024  00F916                     __ptext248:
 52025                           	opt stack 0
 52026  00F916                     _USBCtrlTrfRxService:
 52027                           	opt stack 13
 52028                           
 52029                           ;usb_device.c: 1856: uint8_t byteToRead;
 52030                           ;usb_device.c: 1857: uint8_t i;
 52031                           ;usb_device.c: 1861: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 52032                           
 52033                           ;incstack = 0
 52034  00F916  EE20 F001          	lfsr	2,1
 52035  00F91A  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 52036  00F91C  26D9               	addwf	fsr2l,f,c
 52037  00F91E  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52038  00F920  22DA               	addwfc	fsr2h,f,c
 52039  00F922  50DF               	movf	indf2,w,c
 52040  00F924  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 52041                           
 52042                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 52043  00F926  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 52044  00F928  5C05               	subwf	_outPipes+4,w,c	;volatile
 52045  00F92A  0E00               	movlw	0
 52046  00F92C  5806               	subwfb	_outPipes+5,w,c	;volatile
 52047  00F92E  A0D8               	btfss	status,0,c
 52048                           
 52049                           ;usb_device.c: 1868: {
 52050                           ;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 52051  00F930  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 52052                           
 52053                           ;usb_device.c: 1870: }
 52054                           ;usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 52055  00F934  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 52056  00F936  5E05               	subwf	_outPipes+4,f,c	;volatile
 52057  00F938  0E00               	movlw	0
 52058  00F93A  5A06               	subwfb	_outPipes+5,f,c	;volatile
 52059                           
 52060                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 52061  00F93C  0E00               	movlw	0
 52062  00F93E  6E2E               	movwf	USBCtrlTrfRxService@i,c
 52063  00F940  D011               	goto	i2l12871
 52064  00F942                     i2l12865:
 52065                           
 52066                           ;usb_device.c: 1877: {
 52067                           ;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 52068  00F942  502E               	movf	USBCtrlTrfRxService@i,w,c
 52069  00F944  0D01               	mullw	1
 52070  00F946  0E38               	movlw	56
 52071  00F948  24F3               	addwf	prodl,w,c
 52072  00F94A  6ED9               	movwf	fsr2l,c
 52073  00F94C  0E0D               	movlw	13
 52074  00F94E  20F4               	addwfc	prodh,w,c
 52075  00F950  6EDA               	movwf	fsr2h,c
 52076  00F952  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 52077  00F956  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 52078  00F95A  CFDF FFE7          	movff	indf2,indf1
 52079  00F95E  4A01               	infsnz	_outPipes,f,c	;volatile
 52080  00F960  2A02               	incf	_outPipes+1,f,c	;volatile
 52081  00F962  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 52082  00F964                     i2l12871:
 52083  00F964  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 52084  00F966  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 52085  00F968  A0D8               	btfss	status,0,c
 52086  00F96A  D7EB               	goto	i2l12865
 52087                           
 52088                           ;usb_device.c: 1879: }
 52089                           ;usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 52090  00F96C  5005               	movf	_outPipes+4,w,c	;volatile
 52091  00F96E  1006               	iorwf	_outPipes+5,w,c	;volatile
 52092  00F970  B4D8               	btfsc	status,2,c
 52093  00F972  D032               	goto	i2l12887
 52094                           
 52095                           ;usb_device.c: 1884: {
 52096                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 52097  00F974  EE20 F001          	lfsr	2,1
 52098  00F978  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52099  00F97A  26D9               	addwf	fsr2l,f,c
 52100  00F97C  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52101  00F97E  22DA               	addwfc	fsr2h,f,c
 52102  00F980  0E08               	movlw	8
 52103  00F982  6EDF               	movwf	indf2,c
 52104                           
 52105                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 52106  00F984  EE20 F002          	lfsr	2,2
 52107  00F988  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52108  00F98A  26D9               	addwf	fsr2l,f,c
 52109  00F98C  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52110  00F98E  22DA               	addwfc	fsr2h,f,c
 52111  00F990  0E38               	movlw	56
 52112  00F992  6EDE               	movwf	postinc2,c
 52113  00F994  0E0D               	movlw	13
 52114  00F996  6EDD               	movwf	postdec2,c
 52115                           
 52116                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 52117  00F998  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52118  00F99C  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52119  00F9A0  BCDF               	btfsc	indf2,6,c
 52120  00F9A2  D00D               	goto	i2l12883
 52121                           
 52122                           ;usb_device.c: 1888: {
 52123                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 52124  00F9A4  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52125  00F9A8  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52126  00F9AC  0E48               	movlw	72
 52127  00F9AE  6EDF               	movwf	indf2,c
 52128                           
 52129                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52130  00F9B0  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52131  00F9B4  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52132  00F9B8  0E00               	movlw	0
 52133  00F9BA  8EDB               	bsf	plusw2,7,c
 52134                           
 52135                           ;usb_device.c: 1891: }
 52136  00F9BC  0012               	return	
 52137  00F9BE                     i2l12883:
 52138                           
 52139                           ;usb_device.c: 1892: else
 52140                           ;usb_device.c: 1893: {
 52141                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 52142  00F9BE  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52143  00F9C2  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52144  00F9C6  0E08               	movlw	8
 52145  00F9C8  6EDF               	movwf	indf2,c
 52146                           
 52147                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52148  00F9CA  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52149  00F9CE  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52150  00F9D2  0E00               	movlw	0
 52151  00F9D4  8EDB               	bsf	plusw2,7,c
 52152                           
 52153                           ;usb_device.c: 1896: }
 52154                           ;usb_device.c: 1897: }
 52155  00F9D6  0012               	return	
 52156  00F9D8                     i2l12887:
 52157                           
 52158                           ;usb_device.c: 1898: else
 52159                           ;usb_device.c: 1899: {
 52160                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->CNT = 8;
 52161  00F9D8  EE20 F001          	lfsr	2,1
 52162  00F9DC  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52163  00F9DE  26D9               	addwf	fsr2l,f,c
 52164  00F9E0  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52165  00F9E2  22DA               	addwfc	fsr2h,f,c
 52166  00F9E4  0E08               	movlw	8
 52167  00F9E6  6EDF               	movwf	indf2,c
 52168                           
 52169                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52170  00F9E8  EE20 F002          	lfsr	2,2
 52171  00F9EC  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52172  00F9EE  26D9               	addwf	fsr2l,f,c
 52173  00F9F0  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52174  00F9F2  22DA               	addwfc	fsr2h,f,c
 52175  00F9F4  0E30               	movlw	48
 52176  00F9F6  6EDE               	movwf	postinc2,c
 52177  00F9F8  0E0D               	movlw	13
 52178  00F9FA  6EDD               	movwf	postdec2,c
 52179                           
 52180                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 52181  00F9FC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52182  00FA00  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52183  00FA04  0E04               	movlw	4
 52184  00FA06  6EDF               	movwf	indf2,c
 52185                           
 52186                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52187  00FA08  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52188  00FA0C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52189  00FA10  0E00               	movlw	0
 52190  00FA12  8EDB               	bsf	plusw2,7,c
 52191                           
 52192                           ;usb_device.c: 1928: }
 52193                           ;usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 52194                           
 52195                           ;usb_device.c: 1917: {
 52196                           ;usb_device.c: 1923: outPipes[0].pFunc();
 52197  00FA14  9E04               	bcf	_outPipes+3,7,c	;volatile
 52198                           
 52199                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 52200  00FA16  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 52201  00FA18  A4D8               	btfss	status,2,c
 52202  00FA1A  0012               	return	
 52203                           
 52204                           ;usb_device.c: 1944: {
 52205                           ;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 52206  00FA1C  EC34  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 52207  00FA20  0012               	return	
 52208  00FA22                     __end_of_USBCtrlTrfRxService:
 52209                           	opt stack 0
 52210                           tosu	equ	0xFFF
 52211                           tosh	equ	0xFFE
 52212                           tosl	equ	0xFFD
 52213                           pclatu	equ	0xFFB
 52214                           pclath	equ	0xFFA
 52215                           tblptru	equ	0xFF8
 52216                           tblptrh	equ	0xFF7
 52217                           tblptrl	equ	0xFF6
 52218                           tablat	equ	0xFF5
 52219                           prodh	equ	0xFF4
 52220                           prodl	equ	0xFF3
 52221                           intcon	equ	0xFF2
 52222                           intcon2	equ	0xFF1
 52223                           intcon3	equ	0xFF0
 52224                           indf0	equ	0xFEF
 52225                           postinc0	equ	0xFEE
 52226                           fsr0h	equ	0xFEA
 52227                           fsr0l	equ	0xFE9
 52228                           wreg	equ	0xFE8
 52229                           indf1	equ	0xFE7
 52230                           postinc1	equ	0xFE6
 52231                           postdec1	equ	0xFE5
 52232                           plusw1	equ	0xFE3
 52233                           fsr1h	equ	0xFE2
 52234                           fsr1l	equ	0xFE1
 52235                           indf2	equ	0xFDF
 52236                           postinc2	equ	0xFDE
 52237                           postdec2	equ	0xFDD
 52238                           plusw2	equ	0xFDB
 52239                           fsr2h	equ	0xFDA
 52240                           fsr2l	equ	0xFD9
 52241                           status	equ	0xFD8
 52242                           
 52243 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 52244 ;; Defined at:
 52245 ;;		line 1418 in file "usb_device.c"
 52246 ;; Parameters:    Size  Location     Type
 52247 ;;		None
 52248 ;; Auto vars:     Size  Location     Type
 52249 ;;		None
 52250 ;; Return value:  Size  Location     Type
 52251 ;;                  1    wreg      void 
 52252 ;; Registers used:
 52253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52254 ;; Tracked objects:
 52255 ;;		On entry : 0/0
 52256 ;;		On exit  : 0/0
 52257 ;;		Unchanged: 0/0
 52258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52263 ;;Total ram usage:        0 bytes
 52264 ;; Hardware stack levels used:    1
 52265 ;; This function calls:
 52266 ;;		Nothing
 52267 ;; This function is called by:
 52268 ;;		_USBDeviceTasks
 52269 ;;		_USBCtrlEPServiceComplete
 52270 ;;		_USBCtrlTrfRxService
 52271 ;; This function uses a non-reentrant model
 52272 ;;
 52273                           
 52274                           	psect	text249
 52275  010C68                     __ptext249:
 52276                           	opt stack 0
 52277  010C68                     _USBCtrlEPAllowStatusStage:
 52278                           	opt stack 13
 52279                           
 52280                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 52281                           
 52282                           ;incstack = 0
 52283  010C68  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 52284  010C6A  A4D8               	btfss	status,2,c
 52285  010C6C  0012               	return	
 52286                           
 52287                           ;usb_device.c: 1426: {
 52288                           ;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 52289  010C6E  0E01               	movlw	1
 52290  010C70  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 52291                           
 52292                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 52293  010C72  5021               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 52294  010C74  A4D8               	btfss	status,2,c
 52295  010C76  0012               	return	
 52296                           
 52297                           ;usb_device.c: 1429: {
 52298                           ;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 52299  010C78  0E01               	movlw	1
 52300  010C7A  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 52301                           
 52302                           ;usb_device.c: 1434: if(controlTransferState == 2)
 52303  010C7C  0E02               	movlw	2
 52304  010C7E  1829               	xorwf	_controlTransferState,w,c	;volatile
 52305  010C80  A4D8               	btfss	status,2,c
 52306  010C82  D015               	goto	i2l12207
 52307                           
 52308                           ;usb_device.c: 1435: {
 52309                           ;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 52310  010C84  EE20 F001          	lfsr	2,1
 52311  010C88  5010               	movf	_pBDTEntryIn,w,c
 52312  010C8A  26D9               	addwf	fsr2l,f,c
 52313  010C8C  5011               	movf	_pBDTEntryIn+1,w,c
 52314  010C8E  22DA               	addwfc	fsr2h,f,c
 52315  010C90  0E00               	movlw	0
 52316  010C92  6EDF               	movwf	indf2,c
 52317                           
 52318                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 52319  010C94  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52320  010C98  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52321  010C9C  0E48               	movlw	72
 52322  010C9E  6EDF               	movwf	indf2,c
 52323                           
 52324                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52325  010CA0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52326  010CA4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52327  010CA8  0E00               	movlw	0
 52328  010CAA  8EDB               	bsf	plusw2,7,c
 52329                           
 52330                           ;usb_device.c: 1439: }
 52331  010CAC  0012               	return	
 52332  010CAE                     i2l12207:
 52333                           
 52334                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 52335  010CAE  0429               	decf	_controlTransferState,w,c	;volatile
 52336  010CB0  A4D8               	btfss	status,2,c
 52337  010CB2  0012               	return	
 52338                           
 52339                           ;usb_device.c: 1441: {
 52340                           ;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 52341  010CB4  0E00               	movlw	0
 52342  010CB6  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 52343                           
 52344                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 52345  010CB8  EE20 F001          	lfsr	2,1
 52346  010CBC  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 52347  010CBE  26D9               	addwf	fsr2l,f,c
 52348  010CC0  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52349  010CC2  22DA               	addwfc	fsr2h,f,c
 52350  010CC4  0E08               	movlw	8
 52351  010CC6  6EDF               	movwf	indf2,c
 52352                           
 52353                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 52354  010CC8  EE20 F002          	lfsr	2,2
 52355  010CCC  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 52356  010CCE  26D9               	addwf	fsr2l,f,c
 52357  010CD0  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52358  010CD2  22DA               	addwfc	fsr2h,f,c
 52359  010CD4  0E30               	movlw	48
 52360  010CD6  6EDE               	movwf	postinc2,c
 52361  010CD8  0E0D               	movlw	13
 52362  010CDA  6EDD               	movwf	postdec2,c
 52363                           
 52364                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 52365  010CDC  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52366  010CE0  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52367  010CE4  0E04               	movlw	4
 52368  010CE6  6EDF               	movwf	indf2,c
 52369                           
 52370                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 52371  010CE8  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52372  010CEC  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52373  010CF0  0E00               	movlw	0
 52374  010CF2  8EDB               	bsf	plusw2,7,c
 52375                           
 52376                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 52377  010CF4  0E01               	movlw	1
 52378  010CF6  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 52379                           
 52380                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 52381  010CF8  EE20 F001          	lfsr	2,1
 52382  010CFC  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52383  010CFE  26D9               	addwf	fsr2l,f,c
 52384  010D00  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52385  010D02  22DA               	addwfc	fsr2h,f,c
 52386  010D04  0E08               	movlw	8
 52387  010D06  6EDF               	movwf	indf2,c
 52388                           
 52389                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52390  010D08  EE20 F002          	lfsr	2,2
 52391  010D0C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52392  010D0E  26D9               	addwf	fsr2l,f,c
 52393  010D10  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52394  010D12  22DA               	addwfc	fsr2h,f,c
 52395  010D14  0E30               	movlw	48
 52396  010D16  6EDE               	movwf	postinc2,c
 52397  010D18  0E0D               	movlw	13
 52398  010D1A  6EDD               	movwf	postdec2,c
 52399                           
 52400                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 52401  010D1C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52402  010D20  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52403  010D24  0E80               	movlw	128
 52404  010D26  6EDF               	movwf	indf2,c
 52405  010D28  0012               	return	
 52406  010D2A                     __end_of_USBCtrlEPAllowStatusStage:
 52407                           	opt stack 0
 52408                           tosu	equ	0xFFF
 52409                           tosh	equ	0xFFE
 52410                           tosl	equ	0xFFD
 52411                           pclatu	equ	0xFFB
 52412                           pclath	equ	0xFFA
 52413                           tblptru	equ	0xFF8
 52414                           tblptrh	equ	0xFF7
 52415                           tblptrl	equ	0xFF6
 52416                           tablat	equ	0xFF5
 52417                           prodh	equ	0xFF4
 52418                           prodl	equ	0xFF3
 52419                           intcon	equ	0xFF2
 52420                           intcon2	equ	0xFF1
 52421                           intcon3	equ	0xFF0
 52422                           indf0	equ	0xFEF
 52423                           postinc0	equ	0xFEE
 52424                           fsr0h	equ	0xFEA
 52425                           fsr0l	equ	0xFE9
 52426                           wreg	equ	0xFE8
 52427                           indf1	equ	0xFE7
 52428                           postinc1	equ	0xFE6
 52429                           postdec1	equ	0xFE5
 52430                           plusw1	equ	0xFE3
 52431                           fsr1h	equ	0xFE2
 52432                           fsr1l	equ	0xFE1
 52433                           indf2	equ	0xFDF
 52434                           postinc2	equ	0xFDE
 52435                           postdec2	equ	0xFDD
 52436                           plusw2	equ	0xFDB
 52437                           fsr2h	equ	0xFDA
 52438                           fsr2l	equ	0xFD9
 52439                           status	equ	0xFD8
 52440                           
 52441 ;; *************** function _USBCtrlTrfInHandler *****************
 52442 ;; Defined at:
 52443 ;;		line 2594 in file "usb_device.c"
 52444 ;; Parameters:    Size  Location     Type
 52445 ;;		None
 52446 ;; Auto vars:     Size  Location     Type
 52447 ;;  lastDTS         1    1[COMRAM] unsigned char 
 52448 ;; Return value:  Size  Location     Type
 52449 ;;                  1    wreg      void 
 52450 ;; Registers used:
 52451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52452 ;; Tracked objects:
 52453 ;;		On entry : 0/0
 52454 ;;		On exit  : 0/0
 52455 ;;		Unchanged: 0/0
 52456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52461 ;;Total ram usage:        1 bytes
 52462 ;; Hardware stack levels used:    1
 52463 ;; Hardware stack levels required when called:    1
 52464 ;; This function calls:
 52465 ;;		_USBCtrlTrfTxService
 52466 ;; This function is called by:
 52467 ;;		_USBCtrlEPService
 52468 ;; This function uses a non-reentrant model
 52469 ;;
 52470                           
 52471                           	psect	text250
 52472  010DEA                     __ptext250:
 52473                           	opt stack 0
 52474  010DEA                     _USBCtrlTrfInHandler:
 52475                           	opt stack 14
 52476                           
 52477                           ;usb_device.c: 2596: uint8_t lastDTS;
 52478                           ;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 52479                           
 52480                           ;incstack = 0
 52481  010DEA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52482  010DEE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52483  010DF2  0E00               	movlw	0
 52484  010DF4  BCDF               	btfsc	indf2,6,c
 52485  010DF6  0E01               	movlw	1
 52486  010DF8  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 52487                           
 52488                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 52489  010DFA  0E04               	movlw	4
 52490  010DFC  1810               	xorwf	_pBDTEntryIn,w,c
 52491  010DFE  6E10               	movwf	_pBDTEntryIn,c
 52492  010E00  5011               	movf	_pBDTEntryIn+1,w,c
 52493  010E02  6E11               	movwf	_pBDTEntryIn+1,c
 52494                           
 52495                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 52496  010E04  0E08               	movlw	8
 52497  010E06  182B               	xorwf	_USBDeviceState,w,c	;volatile
 52498  010E08  A4D8               	btfss	status,2,c
 52499  010E0A  D00D               	goto	i2l13407
 52500                           
 52501                           ;usb_device.c: 2607: {
 52502                           ;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 52503  010E0C  010D               	movlb	13	; () banked
 52504  010E0E  5132               	movf	50,w,b	;volatile
 52505  010E10  0B7F               	andlw	127
 52506  010E12  010F               	movlb	15	; () banked
 52507  010E14  6F38               	movwf	56,b	;volatile
 52508                           
 52509                           ; BSR set to: 15
 52510                           ;usb_device.c: 2609: if(UADDR != 0u)
 52511  010E16  010F               	movlb	15	; () banked
 52512  010E18  5138               	movf	56,w,b	;volatile
 52513  010E1A  B4D8               	btfsc	status,2,c
 52514  010E1C  D002               	goto	i2l13405
 52515                           
 52516                           ; BSR set to: 15
 52517                           ;usb_device.c: 2610: {
 52518                           ;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 52519  010E1E  0E10               	movlw	16
 52520  010E20  D001               	goto	L67
 52521  010E22                     i2l13405:
 52522                           
 52523                           ; BSR set to: 15
 52524                           ;usb_device.c: 2613: else
 52525                           ;usb_device.c: 2614: {
 52526                           ;usb_device.c: 2615: USBDeviceState=DEFAULT_STATE;
 52527  010E22  0E04               	movlw	4
 52528  010E24                     L67:
 52529  010E24  6E2B               	movwf	_USBDeviceState,c	;volatile
 52530  010E26                     i2l13407:
 52531                           
 52532                           ;usb_device.c: 2616: }
 52533                           ;usb_device.c: 2617: }
 52534                           ;usb_device.c: 2620: if(controlTransferState == 1)
 52535  010E26  0429               	decf	_controlTransferState,w,c	;volatile
 52536  010E28  A4D8               	btfss	status,2,c
 52537  010E2A  D03A               	goto	i2l344
 52538                           
 52539                           ;usb_device.c: 2621: {
 52540                           ;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 52541  010E2C  EE20 F002          	lfsr	2,2
 52542  010E30  5010               	movf	_pBDTEntryIn,w,c
 52543  010E32  26D9               	addwf	fsr2l,f,c
 52544  010E34  5011               	movf	_pBDTEntryIn+1,w,c
 52545  010E36  22DA               	addwfc	fsr2h,f,c
 52546  010E38  0E38               	movlw	56
 52547  010E3A  6EDE               	movwf	postinc2,c
 52548  010E3C  0E0D               	movlw	13
 52549  010E3E  6EDD               	movwf	postdec2,c
 52550                           
 52551                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 52552  010E40  EC68  F085         	call	_USBCtrlTrfTxService	;wreg free
 52553                           
 52554                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 52555  010E44  0E02               	movlw	2
 52556  010E46  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 52557  010E48  A4D8               	btfss	status,2,c
 52558  010E4A  D00D               	goto	i2l13419
 52559                           
 52560                           ;usb_device.c: 2630: {
 52561                           ;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 52562  010E4C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52563  010E50  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52564  010E54  0E04               	movlw	4
 52565  010E56  6EDF               	movwf	indf2,c
 52566                           
 52567                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52568  010E58  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52569  010E5C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52570  010E60  0E00               	movlw	0
 52571  010E62  8EDB               	bsf	plusw2,7,c
 52572                           
 52573                           ;usb_device.c: 2635: }
 52574  010E64  0012               	return	
 52575  010E66                     i2l13419:
 52576                           
 52577                           ;usb_device.c: 2636: else
 52578                           ;usb_device.c: 2637: {
 52579                           ;usb_device.c: 2638: if(lastDTS == 0)
 52580  010E66  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 52581  010E68  A4D8               	btfss	status,2,c
 52582  010E6A  D00D               	goto	i2l13425
 52583                           
 52584                           ;usb_device.c: 2639: {
 52585                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 52586  010E6C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52587  010E70  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52588  010E74  0E48               	movlw	72
 52589  010E76  6EDF               	movwf	indf2,c
 52590                           
 52591                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52592  010E78  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52593  010E7C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52594  010E80  0E00               	movlw	0
 52595  010E82  8EDB               	bsf	plusw2,7,c
 52596                           
 52597                           ;usb_device.c: 2642: }
 52598  010E84  0012               	return	
 52599  010E86                     i2l13425:
 52600                           
 52601                           ;usb_device.c: 2643: else
 52602                           ;usb_device.c: 2644: {
 52603                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 52604  010E86  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52605  010E8A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52606  010E8E  0E08               	movlw	8
 52607  010E90  6EDF               	movwf	indf2,c
 52608                           
 52609                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52610  010E92  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52611  010E96  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52612  010E9A  0E00               	movlw	0
 52613  010E9C  8EDB               	bsf	plusw2,7,c
 52614                           
 52615                           ;usb_device.c: 2647: }
 52616                           ;usb_device.c: 2648: }
 52617                           ;usb_device.c: 2649: }
 52618  010E9E  0012               	return	
 52619  010EA0                     i2l344:
 52620                           
 52621                           ;usb_device.c: 2650: else
 52622                           ;usb_device.c: 2651: {
 52623                           ;usb_device.c: 2655: if(outPipes[0].info.bits.busy == 1)
 52624  010EA0  BE04               	btfsc	_outPipes+3,7,c	;volatile
 52625                           
 52626                           ;usb_device.c: 2660: }
 52627                           ;usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 52628                           
 52629                           ;usb_device.c: 2658: {
 52630                           ;usb_device.c: 2659: outPipes[0].pFunc();
 52631  010EA2  9E04               	bcf	_outPipes+3,7,c	;volatile
 52632                           
 52633                           ;usb_device.c: 2662: }
 52634                           ;usb_device.c: 2664: controlTransferState = 0;
 52635  010EA4  0E00               	movlw	0
 52636  010EA6  6E29               	movwf	_controlTransferState,c	;volatile
 52637  010EA8  0012               	return	
 52638  010EAA                     __end_of_USBCtrlTrfInHandler:
 52639                           	opt stack 0
 52640                           tosu	equ	0xFFF
 52641                           tosh	equ	0xFFE
 52642                           tosl	equ	0xFFD
 52643                           pclatu	equ	0xFFB
 52644                           pclath	equ	0xFFA
 52645                           tblptru	equ	0xFF8
 52646                           tblptrh	equ	0xFF7
 52647                           tblptrl	equ	0xFF6
 52648                           tablat	equ	0xFF5
 52649                           prodh	equ	0xFF4
 52650                           prodl	equ	0xFF3
 52651                           intcon	equ	0xFF2
 52652                           intcon2	equ	0xFF1
 52653                           intcon3	equ	0xFF0
 52654                           indf0	equ	0xFEF
 52655                           postinc0	equ	0xFEE
 52656                           fsr0h	equ	0xFEA
 52657                           fsr0l	equ	0xFE9
 52658                           wreg	equ	0xFE8
 52659                           indf1	equ	0xFE7
 52660                           postinc1	equ	0xFE6
 52661                           postdec1	equ	0xFE5
 52662                           plusw1	equ	0xFE3
 52663                           fsr1h	equ	0xFE2
 52664                           fsr1l	equ	0xFE1
 52665                           indf2	equ	0xFDF
 52666                           postinc2	equ	0xFDE
 52667                           postdec2	equ	0xFDD
 52668                           plusw2	equ	0xFDB
 52669                           fsr2h	equ	0xFDA
 52670                           fsr2l	equ	0xFD9
 52671                           status	equ	0xFD8
 52672                           
 52673 ;; *************** function _USBCtrlTrfTxService *****************
 52674 ;; Defined at:
 52675 ;;		line 1773 in file "usb_device.c"
 52676 ;; Parameters:    Size  Location     Type
 52677 ;;		None
 52678 ;; Auto vars:     Size  Location     Type
 52679 ;;  byteToSend      1    0[COMRAM] unsigned char 
 52680 ;; Return value:  Size  Location     Type
 52681 ;;                  1    wreg      void 
 52682 ;; Registers used:
 52683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 52684 ;; Tracked objects:
 52685 ;;		On entry : 0/0
 52686 ;;		On exit  : 0/0
 52687 ;;		Unchanged: 0/0
 52688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52693 ;;Total ram usage:        1 bytes
 52694 ;; Hardware stack levels used:    1
 52695 ;; This function calls:
 52696 ;;		Nothing
 52697 ;; This function is called by:
 52698 ;;		_USBCtrlEPAllowDataStage
 52699 ;;		_USBCtrlTrfInHandler
 52700 ;; This function uses a non-reentrant model
 52701 ;;
 52702                           
 52703                           	psect	text251
 52704  010AD0                     __ptext251:
 52705                           	opt stack 0
 52706  010AD0                     _USBCtrlTrfTxService:
 52707                           	opt stack 12
 52708                           
 52709                           ;usb_device.c: 1775: uint8_t byteToSend;
 52710                           ;usb_device.c: 1779: byteToSend = 8;
 52711                           
 52712                           ;incstack = 0
 52713  010AD0  0E08               	movlw	8
 52714  010AD2  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 52715                           
 52716                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 52717  010AD4  500F               	movf	_inPipes+5,w,c	;volatile
 52718  010AD6  E110               	bnz	i2l11801
 52719  010AD8  0E08               	movlw	8
 52720  010ADA  5C0E               	subwf	_inPipes+4,w,c	;volatile
 52721  010ADC  B0D8               	btfsc	status,0,c
 52722  010ADE  D00C               	goto	i2l11801
 52723                           
 52724                           ;usb_device.c: 1781: {
 52725                           ;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 52726  010AE0  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 52727                           
 52728                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 52729  010AE4  502A               	movf	_shortPacketStatus,w,c	;volatile
 52730  010AE6  A4D8               	btfss	status,2,c
 52731  010AE8  D002               	goto	i2l11797
 52732                           
 52733                           ;usb_device.c: 1790: {
 52734                           ;usb_device.c: 1791: shortPacketStatus = 1;
 52735  010AEA  0E01               	movlw	1
 52736  010AEC  D004               	goto	L68
 52737  010AEE                     i2l11797:
 52738                           
 52739                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 52740  010AEE  042A               	decf	_shortPacketStatus,w,c	;volatile
 52741  010AF0  A4D8               	btfss	status,2,c
 52742  010AF2  D002               	goto	i2l11801
 52743                           
 52744                           ;usb_device.c: 1794: {
 52745                           ;usb_device.c: 1795: shortPacketStatus = 2;
 52746  010AF4  0E02               	movlw	2
 52747  010AF6                     L68:
 52748  010AF6  6E2A               	movwf	_shortPacketStatus,c	;volatile
 52749  010AF8                     i2l11801:
 52750                           
 52751                           ;usb_device.c: 1796: }
 52752                           ;usb_device.c: 1797: }
 52753                           ;usb_device.c: 1801: inPipes[0].wCount.Val -= byteToSend;
 52754  010AF8  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52755  010AFA  5E0E               	subwf	_inPipes+4,f,c	;volatile
 52756  010AFC  0E00               	movlw	0
 52757  010AFE  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 52758                           
 52759                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 52760  010B00  EE20 F001          	lfsr	2,1
 52761  010B04  5010               	movf	_pBDTEntryIn,w,c
 52762  010B06  26D9               	addwf	fsr2l,f,c
 52763  010B08  5011               	movf	_pBDTEntryIn+1,w,c
 52764  010B0A  22DA               	addwfc	fsr2h,f,c
 52765  010B0C  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 52766                           
 52767                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 52768  010B10  0E38               	movlw	56
 52769  010B12  0101               	movlb	1	; () banked
 52770  010B14  6FED               	movwf	_pDst& (0+255),b
 52771  010B16  0E0D               	movlw	13
 52772  010B18  0101               	movlb	1	; () banked
 52773  010B1A  6FEE               	movwf	(_pDst+1)& (0+255),b
 52774                           
 52775                           ; BSR set to: 1
 52776                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 52777  010B1C  A00D               	btfss	_inPipes+3,0,c	;volatile
 52778  010B1E  D01D               	goto	i2l11819
 52779  010B20  D03C               	goto	i2l11829
 52780  010B22                     i2l11811:
 52781                           
 52782                           ; BSR set to: 1
 52783                           ;usb_device.c: 1814: {
 52784                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 52785  010B22  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 52786  010B26  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52787  010B2A  0E00               	movlw	low (__mediumconst shr (0+16))
 52788  010B2C  6EF8               	movwf	tblptru,c
 52789  010B2E  C1ED  FFD9         	movff	_pDst,fsr2l
 52790  010B32  C1EE  FFDA         	movff	_pDst+1,fsr2h
 52791  010B36  0E0E               	movlw	(high __ramtop+-1)
 52792  010B38  64F7               	cpfsgt	tblptrh,c
 52793  010B3A  D003               	bra	i2u912_47
 52794  010B3C  0008               	tblrd		*
 52795  010B3E  50F5               	movf	tablat,w,c
 52796  010B40  D005               	bra	i2u912_40
 52797  010B42                     i2u912_47:
 52798  010B42  CFF6 FFE9          	movff	tblptrl,fsr0l
 52799  010B46  CFF7 FFEA          	movff	tblptrh,fsr0h
 52800  010B4A  50EF               	movf	indf0,w,c
 52801  010B4C                     i2u912_40:
 52802  010B4C  6EDF               	movwf	indf2,c
 52803  010B4E  4A0A               	infsnz	_inPipes,f,c	;volatile
 52804  010B50  2A0B               	incf	_inPipes+1,f,c	;volatile
 52805  010B52  0101               	movlb	1	; () banked
 52806  010B54  4BED               	infsnz	_pDst& (0+255),f,b
 52807  010B56  2BEE               	incf	(_pDst+1)& (0+255),f,b
 52808                           
 52809                           ; BSR set to: 1
 52810                           ;usb_device.c: 1816: byteToSend--;
 52811  010B58  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 52812  010B5A                     i2l11819:
 52813                           
 52814                           ; BSR set to: 1
 52815  010B5A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52816  010B5C  B4D8               	btfsc	status,2,c
 52817  010B5E  0012               	return	
 52818  010B60  D7E0               	goto	i2l11811
 52819  010B62                     i2l11821:
 52820                           
 52821                           ; BSR set to: 1
 52822                           ;usb_device.c: 1822: {
 52823                           ;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 52824  010B62  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 52825  010B66  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52826  010B6A  0E00               	movlw	low (__mediumconst shr (0+16))
 52827  010B6C  6EF8               	movwf	tblptru,c
 52828  010B6E  C1ED  FFD9         	movff	_pDst,fsr2l
 52829  010B72  C1EE  FFDA         	movff	_pDst+1,fsr2h
 52830  010B76  0E0E               	movlw	(high __ramtop+-1)
 52831  010B78  64F7               	cpfsgt	tblptrh,c
 52832  010B7A  D003               	bra	i2u914_47
 52833  010B7C  0008               	tblrd		*
 52834  010B7E  50F5               	movf	tablat,w,c
 52835  010B80  D005               	bra	i2u914_40
 52836  010B82                     i2u914_47:
 52837  010B82  CFF6 FFE9          	movff	tblptrl,fsr0l
 52838  010B86  CFF7 FFEA          	movff	tblptrh,fsr0h
 52839  010B8A  50EF               	movf	indf0,w,c
 52840  010B8C                     i2u914_40:
 52841  010B8C  6EDF               	movwf	indf2,c
 52842  010B8E  4A0A               	infsnz	_inPipes,f,c	;volatile
 52843  010B90  2A0B               	incf	_inPipes+1,f,c	;volatile
 52844  010B92  0101               	movlb	1	; () banked
 52845  010B94  4BED               	infsnz	_pDst& (0+255),f,b
 52846  010B96  2BEE               	incf	(_pDst+1)& (0+255),f,b
 52847                           
 52848                           ; BSR set to: 1
 52849                           ;usb_device.c: 1824: byteToSend--;
 52850  010B98  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 52851  010B9A                     i2l11829:
 52852                           
 52853                           ; BSR set to: 1
 52854  010B9A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52855  010B9C  B4D8               	btfsc	status,2,c
 52856  010B9E  0012               	return	
 52857  010BA0  D7E0               	goto	i2l11821
 52858  010BA2                     __end_of_USBCtrlTrfTxService:
 52859                           	opt stack 0
 52860                           tosu	equ	0xFFF
 52861                           tosh	equ	0xFFE
 52862                           tosl	equ	0xFFD
 52863                           pclatu	equ	0xFFB
 52864                           pclath	equ	0xFFA
 52865                           tblptru	equ	0xFF8
 52866                           tblptrh	equ	0xFF7
 52867                           tblptrl	equ	0xFF6
 52868                           tablat	equ	0xFF5
 52869                           prodh	equ	0xFF4
 52870                           prodl	equ	0xFF3
 52871                           intcon	equ	0xFF2
 52872                           intcon2	equ	0xFF1
 52873                           intcon3	equ	0xFF0
 52874                           indf0	equ	0xFEF
 52875                           postinc0	equ	0xFEE
 52876                           fsr0h	equ	0xFEA
 52877                           fsr0l	equ	0xFE9
 52878                           wreg	equ	0xFE8
 52879                           indf1	equ	0xFE7
 52880                           postinc1	equ	0xFE6
 52881                           postdec1	equ	0xFE5
 52882                           plusw1	equ	0xFE3
 52883                           fsr1h	equ	0xFE2
 52884                           fsr1l	equ	0xFE1
 52885                           indf2	equ	0xFDF
 52886                           postinc2	equ	0xFDE
 52887                           postdec2	equ	0xFDD
 52888                           plusw2	equ	0xFDB
 52889                           fsr2h	equ	0xFDA
 52890                           fsr2l	equ	0xFD9
 52891                           status	equ	0xFD8
 52892                           tosu	equ	0xFFF
 52893                           tosh	equ	0xFFE
 52894                           tosl	equ	0xFFD
 52895                           pclatu	equ	0xFFB
 52896                           pclath	equ	0xFFA
 52897                           tblptru	equ	0xFF8
 52898                           tblptrh	equ	0xFF7
 52899                           tblptrl	equ	0xFF6
 52900                           tablat	equ	0xFF5
 52901                           prodh	equ	0xFF4
 52902                           prodl	equ	0xFF3
 52903                           intcon	equ	0xFF2
 52904                           intcon2	equ	0xFF1
 52905                           intcon3	equ	0xFF0
 52906                           indf0	equ	0xFEF
 52907                           postinc0	equ	0xFEE
 52908                           fsr0h	equ	0xFEA
 52909                           fsr0l	equ	0xFE9
 52910                           wreg	equ	0xFE8
 52911                           indf1	equ	0xFE7
 52912                           postinc1	equ	0xFE6
 52913                           postdec1	equ	0xFE5
 52914                           plusw1	equ	0xFE3
 52915                           fsr1h	equ	0xFE2
 52916                           fsr1l	equ	0xFE1
 52917                           indf2	equ	0xFDF
 52918                           postinc2	equ	0xFDE
 52919                           postdec2	equ	0xFDD
 52920                           plusw2	equ	0xFDB
 52921                           fsr2h	equ	0xFDA
 52922                           fsr2l	equ	0xFD9
 52923                           status	equ	0xFD8
 52924                           
 52925                           	psect	text252
 52926  000000                     __ptext252:
 52927                           	opt stack 0
 52928                           tosu	equ	0xFFF
 52929                           tosh	equ	0xFFE
 52930                           tosl	equ	0xFFD
 52931                           pclatu	equ	0xFFB
 52932                           pclath	equ	0xFFA
 52933                           tblptru	equ	0xFF8
 52934                           tblptrh	equ	0xFF7
 52935                           tblptrl	equ	0xFF6
 52936                           tablat	equ	0xFF5
 52937                           prodh	equ	0xFF4
 52938                           prodl	equ	0xFF3
 52939                           intcon	equ	0xFF2
 52940                           intcon2	equ	0xFF1
 52941                           intcon3	equ	0xFF0
 52942                           indf0	equ	0xFEF
 52943                           postinc0	equ	0xFEE
 52944                           fsr0h	equ	0xFEA
 52945                           fsr0l	equ	0xFE9
 52946                           wreg	equ	0xFE8
 52947                           indf1	equ	0xFE7
 52948                           postinc1	equ	0xFE6
 52949                           postdec1	equ	0xFE5
 52950                           plusw1	equ	0xFE3
 52951                           fsr1h	equ	0xFE2
 52952                           fsr1l	equ	0xFE1
 52953                           indf2	equ	0xFDF
 52954                           postinc2	equ	0xFDE
 52955                           postdec2	equ	0xFDD
 52956                           plusw2	equ	0xFDB
 52957                           fsr2h	equ	0xFDA
 52958                           fsr2l	equ	0xFD9
 52959                           status	equ	0xFD8
 52960                           
 52961                           	psect	rparam
 52962  0000                     tosu	equ	0xFFF
 52963                           tosh	equ	0xFFE
 52964                           tosl	equ	0xFFD
 52965                           pclatu	equ	0xFFB
 52966                           pclath	equ	0xFFA
 52967                           tblptru	equ	0xFF8
 52968                           tblptrh	equ	0xFF7
 52969                           tblptrl	equ	0xFF6
 52970                           tablat	equ	0xFF5
 52971                           prodh	equ	0xFF4
 52972                           prodl	equ	0xFF3
 52973                           intcon	equ	0xFF2
 52974                           intcon2	equ	0xFF1
 52975                           intcon3	equ	0xFF0
 52976                           indf0	equ	0xFEF
 52977                           postinc0	equ	0xFEE
 52978                           fsr0h	equ	0xFEA
 52979                           fsr0l	equ	0xFE9
 52980                           wreg	equ	0xFE8
 52981                           indf1	equ	0xFE7
 52982                           postinc1	equ	0xFE6
 52983                           postdec1	equ	0xFE5
 52984                           plusw1	equ	0xFE3
 52985                           fsr1h	equ	0xFE2
 52986                           fsr1l	equ	0xFE1
 52987                           indf2	equ	0xFDF
 52988                           postinc2	equ	0xFDE
 52989                           postdec2	equ	0xFDD
 52990                           plusw2	equ	0xFDB
 52991                           fsr2h	equ	0xFDA
 52992                           fsr2l	equ	0xFD9
 52993                           status	equ	0xFD8
 52994                           
 52995                           	psect	temp
 52996  00005B                     btemp:
 52997                           	opt stack 0
 52998  00005B                     	ds	1
 52999  0000                     int$flags	set	btemp
 53000                           tosu	equ	0xFFF
 53001                           tosh	equ	0xFFE
 53002                           tosl	equ	0xFFD
 53003                           pclatu	equ	0xFFB
 53004                           pclath	equ	0xFFA
 53005                           tblptru	equ	0xFF8
 53006                           tblptrh	equ	0xFF7
 53007                           tblptrl	equ	0xFF6
 53008                           tablat	equ	0xFF5
 53009                           prodh	equ	0xFF4
 53010                           prodl	equ	0xFF3
 53011                           intcon	equ	0xFF2
 53012                           intcon2	equ	0xFF1
 53013                           intcon3	equ	0xFF0
 53014                           indf0	equ	0xFEF
 53015                           postinc0	equ	0xFEE
 53016                           fsr0h	equ	0xFEA
 53017                           fsr0l	equ	0xFE9
 53018                           wreg	equ	0xFE8
 53019                           indf1	equ	0xFE7
 53020                           postinc1	equ	0xFE6
 53021                           postdec1	equ	0xFE5
 53022                           plusw1	equ	0xFE3
 53023                           fsr1h	equ	0xFE2
 53024                           fsr1l	equ	0xFE1
 53025                           indf2	equ	0xFDF
 53026                           postinc2	equ	0xFDE
 53027                           postdec2	equ	0xFDD
 53028                           plusw2	equ	0xFDB
 53029                           fsr2h	equ	0xFDA
 53030                           fsr2l	equ	0xFD9
 53031                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        192
    BSS         1114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    119     136
    BANK1           256    211     256
    BANK2           256      0     248
    BANK3           256      0     255
    BANK4           256      0     184
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(BANK0[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> extension(BANK2[4]), filename(BANK2[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    log_generate_entry@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@byte_array	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), _flash_get_status@status(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), i2c_digipot_reset_on@data_array(BANK0[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(BANK0[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2729	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2695	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2694	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2641	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2640	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2272$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2272$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2272$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2272$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2272$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S2272$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2272$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2272$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S142$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S132$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S132$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S108$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S108$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S108$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S108$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_rtcc_write_eeprom
    _rtcc_correct_day->__number_of_days
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_write_to_disk->_fat_append_to_file
    _log_write_to_disk->_fat_create_file
    _log_generate_entry->__get_dateTime
    __get_temperature->___aldiv
    __get_dateTime->_rtcc_get_day_decimal
    __get_dateTime->_rtcc_get_hours_decimal
    __get_dateTime->_rtcc_get_minutes_decimal
    __get_dateTime->_rtcc_get_month_decimal
    __get_dateTime->_rtcc_get_seconds_decimal
    __get_dateTime->_rtcc_get_year_decimal
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    _fat_append_to_file->__get_empty_cluster
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_minutes_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bcd_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_month_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_day_decimal->__rtcc_bcd_to_decimal
    __root_is_available->_flash_partial_read
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _log_collect_data->__get_input_power
    _rtcc_get_seconds_decimal->__rtcc_bcd_to_decimal
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___altoft->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_buck_remote_change_dutycycle
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  572143
                                            117 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
          _log_get_number_of_samples
                      _log_start_new
                  _log_write_to_disk
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   33097
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    3026
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   20851
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     248
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   28856
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0   12610
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     8     8      0   12610
                                             43 BANK0      8     8      0
                   __rtcc_verify_bcd
                    _i2c_eeprom_read
                   _rtcc_correct_day
                       _rtcc_get_day
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     393
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     263
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) __rtcc_verify_bcd                                     4     2      2    1589
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     164
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      93
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    7244
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4827
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     670
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1758
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    8730
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    8730
                                             19 BANK0      5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_write_to_disk                                   33    33      0  238101
                                              0 BANK1     33    33      0
                 _fat_append_to_file
                    _fat_create_file
                      _fat_find_file
                 _log_generate_entry
 ---------------------------------------------------------------------------------
 (2) _log_generate_entry                                   4     2      2    7583
                                             24 BANK0      4     2      2
                            ___aldiv
                            ___lldiv
                      __get_checksum
                      __get_dateTime
                   __get_temperature
 ---------------------------------------------------------------------------------
 (3) __get_temperature                                     2     0      2    1033
                                             14 BANK0      2     0      2
                            ___aldiv (ARG)
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) __get_dateTime                                       20    16      4    1237
                                              4 BANK0     20    16      4
               _rtcc_get_day_decimal
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
             _rtcc_get_month_decimal
           _rtcc_get_seconds_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (3) __get_checksum                                        6     4      2     305
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _fat_create_file                                     53    45      8   99441
                                             59 BANK0     53    45      8
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _fat_get_empty_clusters                              12    10      2    9351
                                             39 BANK0     12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) _fat_find_file                                       20    16      4   10541
                                             39 BANK0     20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     816
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __get_available_root_entry                            1     1      0    9238
                                             46 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (2) _fat_append_to_file                                  63    59      4  120277
                                             49 BANK0     63    59      4
                 __get_empty_cluster
                          __read_fat
                         __read_root
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_root                                          8     6      2   26532
                                             40 BANK0      8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_fat                                           8     4      4   27263
                                             40 BANK0      8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _flash_partial_write                                  9     1      8   26056
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_copy_page_to_buffer                          10     7      3    4884
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __update_modified_time                                2     0      2    1434
                                             13 BANK0      2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (3) __get_time                                            9     7      2     634
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (3) __get_date                                            9     7      2     634
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year_decimal                                1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day_decimal                                 1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (3) __sector_from_cluster                                 2     0      2     239
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    9108
                                             39 BANK0      7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_root                                           8     6      2    9327
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_fat                                            8     6      2    9465
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __get_empty_cluster                                  10     8      2    9491
                                             39 BANK0     10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (1) _log_get_number_of_samples                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0   11180
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) __rtcc_bcd_to_decimal                                 3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    5605
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    5185
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    4460
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    4426
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3960
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     164
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    4794
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3    1086
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3708
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   49554
                                            114 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     677
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    2801
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    8825
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     711
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    8825
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 66    66      0   18095
                                             48 BANK0     66    66      0
                            ___aldiv
                           ___altoft
                            ___fttol
                             ___lmul
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     475
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3483
                                             14 BANK0     10     6      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3175
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1901
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    9329
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8145
                                             24 BANK0     24    19      5
                            ___fttol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     234
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2394
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   18856
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    7721
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0   11135
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    4094
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     808
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     195
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2460
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2321
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    4044
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    3216
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  138850
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  138850
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  131246
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   66528
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   64480
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   28752
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   18274
                                             36 BANK0     11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (7) _flash_page_write                                     5     1      4   17839
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4654
                                             19 BANK0     11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5092
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    6302
                                             19 BANK0     12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   19726
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    9479
                                             43 BANK0     10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (7) _flash_page_read                                      4     0      4    9121
                                             39 BANK0      4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _flash_partial_read                                  20    12      8    8851
                                             19 BANK0     20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2824
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1176
                                             12 BANK0      5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8    1080
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   21280
                                             44 BANK0     11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    4355
                                             43 BANK0      1     1      0
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    4200
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3978
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2896
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     851
                                              3 BANK0      2     1      1
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_synchronous                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_on                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_enable                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_dutycycle                            1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_change_dutycycle                         3     3      0     127
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     896
                                              3 BANK0      8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              4     4      0      43
                                              1 BANK0      4     4      0
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_status                               1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    4159
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    5417
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58167
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (14) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _buck_get_dutycycle
       _buck_get_mode
       _buck_remote_get_dutycycle
       _buck_remote_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _buck_remote_change_dutycycle
       _buck_remote_set_dutycycle
       _buck_remote_set_enable
       _buck_remote_set_on
       _buck_remote_set_synchronous
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___altoft
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___fttol
       ___lmul
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_temperature
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _log_get_number_of_samples
   _log_start_new
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
   _log_write_to_disk
     _fat_append_to_file
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_fat
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_root
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __root_is_available
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __sector_from_cluster
       __update_modified_time
         __get_date
           _rtcc_get_day_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_day
           _rtcc_get_month_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_month
           _rtcc_get_year_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_year
         __get_time
           _rtcc_get_hours_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_hours
           _rtcc_get_minutes_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_minutes
           _rtcc_get_seconds_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _flash_partial_write
         __flash_compare_page_to_buffer
           __flash_get_status
             __flash_spi_tx_rx
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_copy_page_to_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_page_from_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_to_buffer
           __flash_spi_tx_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
     _fat_create_file
       __get_available_root_entry
         __root_is_available
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       __get_date
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __get_time
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_empty_clusters
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _memcpy
     _fat_find_file
       _flash_partial_read
         __flash_spi_tx_rx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
       _strncmp
     _log_generate_entry
       ___aldiv
       ___lldiv
       __get_checksum
       __get_dateTime
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_temperature
         ___aldiv (ARG)
         ___awdiv (ARG)
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bcd_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         __rtcc_verify_bcd
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_correct_day
           __number_of_days
             _rtcc_get_month
             _rtcc_get_year
           _rtcc_get_day
           _rtcc_set_day
             __rtcc_write_disable
             __rtcc_write_enable
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_write_eeprom
           _i2c_eeprom_write
             __i2c_write
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
             _i2c_set_frequency
           _rtcc_get_day
           _rtcc_get_hours
           _rtcc_get_minutes
           _rtcc_get_month
           _rtcc_get_seconds
           _rtcc_get_year
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable
     _ui_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B8      13       71.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D3     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     491      31        0.0%
DATA                 0      0     691       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Sep 09 19:30:40 2018

                rtcc_get_year_decimal@bcd_year 0063                                   ___altoft@exp 0076  
                                   _USB_SD_Ptr 9307                       fat_create_file@extension 009D  
       __end_of_i2c_display_send_init_sequence 3A4E        __size_of_i2c_display_send_init_sequence 0032  
               _i2c_display_send_init_sequence 3A1C                            __system_timer0_init 3612  
                      rtcc_set_minutes@minutes 0060                                  ___altoft@sign 0077  
                                 ___awdiv@sign 0065                               ??__buck_pin_init 0060  
                                           _os 0200                                  _USBDeviceInit E1A2  
                           _USBCheckHIDRequest 069E                       __display_time@setminutes 018E  
                     __display_time@setseconds 019A                             _rtcc_increment_day 3B92  
                                 __CFG_CP0$OFF 000000                 __root_is_available@root_sector 0088  
                          __end_of_system_init F80A                       ?_i2c_display_write_fixed 0065  
         USER_USB_CALLBACK_EVENT_HANDLER@event 003D           USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                  __display_efficiency@battery 00CD                              ?__rtcc_verify_bcd 0060  
                                          l208 3830                                            l209 382E  
                                          l148 E218                    __end_of_USBStdGetDscHandler F26E  
                                ?_i2c_adc_read 0065                                            l712 BFAA  
                                          l705 BEC0                                            l641 A4A0  
                                          l716 C046                                            l590 CCE4  
                                          l664 A790                                            l648 A632  
                                          l761 F042                                            l595 CC10  
                                          _BDT 000D00                                            l686 D696  
                __size_of__sector_from_cluster 0016                       __display_time@presshours 014E  
                                          _LBA 01D9                      _buck_remote_get_dutycycle 42E0  
                                          _PR2 000FCB                       __display_time@pressmonth 013C  
                                          _LUN 02BB                                            _UIE 000F36  
                                          _UIR 000F62                           _i2c_digipot_reset_on 3B3A  
                __size_of_rtcc_decrement_hours 002A             system_calculate_output_voltage@tmp 0070  
                   __end_of_buck_get_dutycycle 42EC                       ??_rtcc_increment_minutes 0068  
                __size_of_rtcc_decrement_month 002A                       ??_rtcc_increment_seconds 0068  
                                          _idx 00E0                                     _USBSuspend 3A80  
                                          _now 029E                         __end_of_display_update 1DEA  
                         USBStdSetCfgHandler@i 0045                         i2c_eeprom_read@address 0071  
                           ??__rtcc_verify_bcd 0062                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                               _USBDeviceTasks EB08                            ?_USBCheckHIDRequest 002E  
                                 __CFG_IESO$ON 000000                            ?_rtcc_increment_day 002E  
                               _USBDeviceState 002B                               _rtcc_read_eeprom E006  
                                 ?__write_root 0088                            _rtcc_increment_year 3C42  
                      rtcc_set_seconds@seconds 0060                          ??_USBCtrlTrfRxService 002E  
                         __read_fat@fat_sector 0089                       __size_ofi2_USBDeviceInit 0150  
                     USBEnableEndpoint@options 0036                        __buck_initial_dutycycle 0850  
                            ??_MSDErrorHandler 0068                           ?__system_timer0_init 002E  
                     fat_create_file@root_slot 00AB                    __flash_write_to_buffer@data 0075  
                                         l1070 ACC2                                           l1233 422C  
                                         l1410 342E                                           l1411 3434  
                                         l1420 31E2                                           l1412 343A  
                                         l1421 31E6                                           l1422 31EA  
                                         l1407 3422                                           l1503 429E  
                                         l1417 31DA                                           l1409 3428  
                                         l1521 4296                                           l2306 4170  
                                         l1419 31DE                                           l1515 42AA  
                                         l2324 41AC                                           l1509 42C6  
                                         l2342 4198                                           l1390 F7DA  
                                         l1535 2822                                           l2503 0822  
                                         l1375 3642                                           l2360 4184  
                                         l2513 266A                                           l2514 2676  
                                         l3306 C4B4                                           l1802 A29E  
                                         l2523 26B2                                           l1660 3252  
                                         l1820 A364                     USBConfigureEndpoint@handle 0034  
                                         l1494 42CE                                           l2606 2F2E  
                                         l1814 A322                                           l1823 A38E  
                                         l2288 4148                                           l1808 A2E0  
                                         l2529 3BF4                                           l1833 A3EA  
                                         l1753 A078                                           l2378 415C  
                                         l2562 9E82                                           l1770 A130  
                                         l1755 A086                                           l1747 A04A  
                                         l2644 2DC6                                           l2548 9C70  
                                         l1828 A3BC                                           l1780 A19C  
                                         l2637 3E34                                           l2477 0922  
                                         l3541 F8E2                                           l2750 29D2  
                                         l2823 2BA0                                           l1919 C95C  
                                         l1775 A166                                           l1847 FE50  
                                         l3297 C212                                           l2690 1CA8  
                                         l1794 A24E                                           l2675 4274  
                                         l2756 1376                                           l2692 1CAA  
                                         l1796 A25C                                           l1788 A200  
                                         l2765 1202                                           l3733 24F6  
                                         l2686 1C68                                           l3654 0FF8  
                                         l2759 13BE                                           l3743 2D60  
                                         l2768 1252                                           l3680 118C  
                                         l2788 2F7E                                           l2968 1308  
                        ??i2_SYSTEM_Initialize 002E                                           STR_1 9458  
               __fill_buffer_get_display1@cntr 0065                                           STR_9 9443  
               __fill_buffer_get_display1@line 0066                 __fill_buffer_get_display2@cntr 0065  
               __fill_buffer_get_display2@line 0066                                  _i2c_frequency 01F4  
                                         u9000 2646                                           u9006 2648  
                        ??_USBCtrlTrfTxService 002E                                           _UCFG 000F39  
                                         _UEP0 000F26                                           _UEP1 000F27  
                             ?_fat_create_file 009B                                           _UEIE 000F37  
                                         u8950 25FA                                           u8960 260A  
                                         _UEIR 000F63                                           _UCON 000F65  
                                         u8970 261A                                           u8980 262A  
                                         u8990 263A                                           u8958 25FE  
                                         u8968 260E                                           u8978 261E  
                                         _TMR2 000FCC                                           u8988 262E  
                                         u8998 263E                                 ?_i2c_adc_start 006A  
                  __size_ofi2_USBStallEndpoint 0106                          _i2c_digipot_reset_off 3B66  
           __fill_buffer_get_display1@position 0067                           _system_output_toggle 3E8A  
                       __size_of_adc_calibrate 000C                                 ??_buck_operate 007E  
                               _ResetSenseData 1F80         USBStdFeatureReqHandler@current_ep_data 0048  
                       ?__update_modified_time 006D                                           _pDst 01ED  
                                         _main B816                                           _last 02A2  
                                 ___ftpack@arg 0060                                           _itoa 353E  
                     ??i2_USBTransferOnePacket 0032                     __end_of_fat_append_to_file C77C  
                                 ___ftpack@exp 0063                    __size_of_APP_DeviceMSDTasks 0012  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                      __end_of_display_prepare 1EFA                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                              _USBDeviceAttach 3802                                           btemp 005B  
                                         _utoa 0F68             __fill_buffer_get_display2@position 0067  
                   ??_ExternalFlash_SectorRead 0093                                ??_rtcc_get_year 0060  
                         __size_of__buck_start 00D8             __size_of_buck_remote_set_dutycycle 002A  
                 __display_charger@charger_off 0182                        ?_rtcc_get_hours_decimal 002E  
                 ?i2_ExternalFlash_MediaDetect 002E                      _ExternalFlash_MediaDetect 42B0  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 9086                __end_of_APP_DeviceMSDInitialize 4256  
                        _display_get_character 378A                         ??__rtcc_bcd_to_decimal 0060  
                         ??_USBCheckHIDRequest 002E                               ?_MSDWriteHandler 002E  
                         ??_rtcc_increment_day 0068                           _rtcc_increment_hours 3CEA  
               ??_MSDProcessCommandMediaAbsent 00A7                     __end_of_USBCheckStdRequest 069E  
                       ??_USBCtrlTrfOutHandler 0030                           ?_rtcc_increment_year 002E  
                         _rtcc_increment_month 3C96                   ??__flash_copy_page_to_buffer 0076  
               ?__flash_write_page_from_buffer 0073                                   ___param_bank 000000  
                    __size_of_flash_page_write 0058                      ??_USBStdFeatureReqHandler 0045  
                                 _USBOutHandle 01E9                       __end_of__display_charger BEBE  
                   __size_of_system_output_off 0058                                ??_buck_get_mode 0060  
              __size_of__flash_write_to_buffer 0066                       ??_USBStdGetStatusHandler 002E  
                                 ___fttol@exp1 006E                       ??_buck_remote_get_status 0060  
                                 ___fttol@lval 006A                                 ?_USBDeviceInit 002E  
                            __flash_get_status 3652        __end_of_system_calculate_output_current E5CA  
     __size_of_system_calculate_output_current 015A               ?_system_calculate_output_current 002E  
            ??_system_calculate_output_current 006C                _system_calculate_output_current E470  
                         __buck_set_sync_async 2664                __flash_spi_tx_tx@command_length 0062  
                   __end_of_rtcc_decrement_day 3BEA                       _system_ui_inactive_count 01E7  
                           _buck_remote_enable 01F1                     __buck_initial_dutycycle@dc 006E  
                                __CFG_PLLDIV$2 000000                                ??_rtcc_set_year 0060  
                i2c_display_write_fixed@length 0067                                          l20003 1BAC  
                                        l20101 0118                                          l20111 0130  
                                        l20031 1300                                          l20009 126E  
                                        l21001 A122                                          l20107 0128  
                                        l20213 F6E0                                          l20205 F6B2  
                                        l21101 A2EE                                          l21021 A186  
                                        l21013 A158                                          l21005 A13E  
                                        l20151 35C6                                          l21111 A314  
                                        l22001 E1EE                                          l20209 F6C4  
                                        l20225 168C                                          l21201 D53E  
                                        l20145 35A4                                          l21121 A34A  
                                        l21033 A1BC                                          l21025 A18E  
                                        l21017 A174                                          l21009 A150  
                                        l20411 CC14                                          l20403 CBE4  
                                        l20227 169C                                          l20075 006A  
                                        l21115 A330                                          l21107 A308  
                                        l21051 A1F4                                          l21043 A1D6  
                       ?_i2c_digipot_backlight 002E                                          l22005 E1F8  
                                        l20165 258A                                          l20181 F5FC  
                                        l20261 ED2E                                          l21213 D5B6  
                                        l21205 D56A                                          l21301 9846  
                                        l20069 0050                                          l21133 A382  
                                        l21125 A356                                          l21037 A1C4  
                                        l21029 A1AA                                          l11703 25EE  
                                        l20431 CCA4                                          l20423 CC3E  
                                        l20343 CA5A                                          l20271 ED64  
                                        l20239 EC88                                          l21223 D63E  
                                        l21143 A3B0                                          l21063 A232  
                                        l21047 A1E4                                          l20521 2E4A  
                                        l20601 0452                                          l20433 CCAC  
                                        l20345 CA60                                          l20281 39F2  
                                        l22033 E260                                          l22017 E224  
                                        l20169 25B0                                          l20193 F648  
                                        l20257 ED1A                                          l21209 D58A  
                                        l21321 990C                                          l21313 98C0  
                                        l21305 9872                                          l20089 00AC  
                                        l21153 A3DE                                          l21129 A372  
                                        l21073 A26A                                          l21161 A404  
                                        l20523 2E50                                          l20611 0476  
                                        l20603 045A                                          l20355 CA98  
                                        l20339 CA40                                          l21171 2C58  
                                        l20195 F658                                          l20187 F61A  
                                        l20275 ED80                                          l20267 ED4A  
                                        l21219 D612                                          l21323 9926  
                                        l21307 988C                                          l21243 9624  
                                        l21411 DF7A                                          l21403 DF56  
                                        l13091 36E6                                          l13083 36CA  
                                        l21139 A3A0                                          l21083 A290  
                                        l21067 A242                                          l21059 A224  
                                        l20517 2E40                                          l20541 2DDE  
                                        l20621 031E                                          l20613 047C  
                                        l20605 0462                                          l20429 CC7E  
                                        l20349 CA6A                                          l20437 CCC6  
                                        l20285 3A04                                          l22029 E256  
                                        l21181 2CA0                                          l21165 2C48  
                                        l20197 F65E                                          l20269 ED5A  
                                        l21341 99C8                                          l21333 997A  
                                        l21325 992E                                          l21317 98E0  
                                        l21309 9894                                          l21261 96C6  
                                        l21253 9678                                          l21245 962C  
                                        l21421 DFEC                                          l21405 DF6E  
                                        l21149 A3CE                                          l21093 A2C6  
                                        l20535 2E8A                                          l20527 2E5A  
                                        l20551 2DF8                                          l20631 0350  
                                        l20623 0328                                          l20607 046A  
                                        l20383 CB74                                          l22039 E2C6  
                                        l21511 BD58                                          l21503 BCFA  
                                        l21175 2C62                                          l21431 D2C8  
                                        l21415 DFA6                                          l13095 3708  
                                        l13079 36A8                                          l21159 A3FC  
                                        l21087 A2AC                                          l21079 A284  
                                        l20545 2DE8                                          l20641 037A  
                                        l20633 035A                                          l20625 0332  
                                        l20609 0470                                          l20617 0482  
                                        l20393 CB9E                                          l21513 BD60  
                                        l21505 BD14                                          l21169 2C52  
                                        l21193 D4F2                                          l21441 D328  
                                        l21601 D96C                                          l21353 9A40  
                                        l21345 99F4                                          l21337 99A6  
                                        l21329 995A                                          l21281 978C  
                                        l21273 973E                                          l21265 96F2  
                                        l21257 96A4                                          l21249 9658  
                                        l21417 DFC0                                          l20801 E97A  
                                        l21097 A2D2                                          l20547 2DEE  
                                        l20643 0382                                          l20635 0362  
                                        l20627 033C                                          l20379 CB6A  
                                        l20395 CBB8                                          l22411 1C56  
                                        l21531 BE32                                          l21523 BDD2  
                                        l21443 D340                                          l21427 D29C  
                                        l21611 D9D6                                          l21339 99C0  
                                        l21291 97F2                                          l21275 9758  
                                        l21259 96BE                                          l22331 2752  
                                        l20731 3628                                          l20803 E982  
                                        l20661 E9D8                                          l20645 038A  
                                        l20637 036A                                          l20629 0346  
                                        l20653 03A4                                          l20389 CB92  
                                        l22181 2A54                                          l22421 1C90  
                                        l22413 1C5E                                          l21525 BDEC  
                                        l21541 BE94                                          l21517 BD8C  
                                        l21197 D51E                                          l21461 D3EA  
                                        l21453 D394                                          l21445 D348  
                                        l21437 D2FC                                          l21621 DA40  
                                        l21605 D998                                          l21349 9A14  
                                        l21293 97FA                                          l21285 97AC  
                                        l21277 9760                                          l21269 9712  
                                        l21357 9A5A                                          l20901 105C  
                                        l22341 277A                                          l22333 275A  
                                        l22405 FF14                                          l20559 2E28  
                                        l20671 EA92                                          l20663 EA08  
                                        l20647 0392                                          l20639 0372  
                                        l20591 042A                                          l20583 040A  
                                        l20399 CBD8                                          l22183 2A6C  
                                        l21711 9E78                                          l21631 9B40  
                                        l21535 BE5E                                          l21519 BDA6  
                                        l21615 DA02                                          l21359 9A88  
                                        l22335 2762                                          l20735 3632  
                                        l20807 E98A                                          l20681 EABA  
                                        l20673 EA9A                                          l20649 039A  
                                        l20593 0432                                          l20585 0412  
                                        l22513 AE84                                          l22505 AE44  
                                        l22185 2A7A                                          l22177 2A48  
                                        l22425 1C98                                          l22409 1C4E  
                                        l22417 1C70                                          l21721 9ECC  
                                        l21801 FD18                                          l21529 BE18  
                                        l21473 D422                                          l21465 D3FC  
                                        l21457 D3C0                                          l21449 D374  
                                        l21625 DA6C                                          l21297 9826  
                                        l21289 97D8                                          l21393 DEF4  
                                        l22601 1E9C                                          l20913 1090  
                                        l20905 1066                                          l22337 276A  
                                        l22329 274A                                          l22345 2782  
                                        l20729 3620                                          l20809 E9B8  
                                        l20675 EAA2                                          l20667 EA62  
                                        l20595 043A                                          l20587 041A  
                                        l22419 1C88                                          l21643 9BBE  
                                        l21539 BE78                                          l21571 B6DA  
                                        l21563 B68E                                          l21475 D430  
                                        l21483 D45A                                          l22603 1EA2  
                                        l22339 2772                                          l22363 FE7A  
                                        l20677 EAAA                                          l20669 EA8A  
                                        l20685 EAC2                                          l20597 0442  
                                        l20589 0422                                          l22541 B04E  
                                        l22533 AF40                                          l22509 AE6A  
                                        l22461 ACFC                                          l22525 AEEA  
                                        l22189 2A92                                          l21741 A000  
                                        l21725 9EE2                                          l21653 9C16  
                                        l21493 BCAE                                          l21581 B762  
                                        l21477 D43E                                          l21469 D40E  
                                        l21397 DF22                                          l21389 DEC8  
                                        l22605 1EA8                                          l20925 3B18  
                                        l20773 E884                                          l20941 A03E  
                                        l22373 FEA6                                          l22357 FE64  
                                        l22349 FE3C                                          l20679 EAB2  
                                        l20599 044A                                          l22543 B056  
                                        l22471 AD5E                                          l22527 AF1E  
                                        l21743 A00A                                          l21719 9EB6  
                                        l21663 9C56                                          l21639 9BB4  
                                        l21575 B706                                          l21567 B6BA  
                                        l21479 D44C                                          l21399 DF2A  
                                        l22607 1EAE                                          l22631 E484  
                                        l20791 E952                                          l20951 A06C  
                                        l22383 FEC6                                          l22537 AF86  
                                        l22529 AF22                                          l22545 B094  
                                        l22481 ADB6                                          l22465 AD20  
                                        l22457 ACE2                                          l21657 9C20  
                                        l21649 9BF8                                          l21745 A010  
                                        l21489 BC82                                          l21585 B78E  
                                        l21593 D920                                          l22609 1EB4  
                                        l21913 C69E                                          l21905 C648  
                                        l21825 DB34                                          l21817 DAD6  
                                        l21809 DAC2                                          l22713 E5DE  
                                        l22633 E490                                          l20793 E95A  
                                        l20769 E87A                                          l20961 A0A6  
                                        l20937 A02E                      __buck_set_sync_async@mode 0063  
                                        l22475 AD78                                          l18011 F362  
                                        l21683 9CE4                                          l21675 9CA4  
                                        l21755 FC4A                                          l21499 BCCE  
                                        l20883 2C0C                                          l22707 1D40  
                                        l22715 E5EA                                          l20795 E962  
                                        l20971 A0C0                                          l20947 A05C  
                                        l22803 B84C                                          l22493 AE18  
                                        l22485 ADDA                                          l22477 AD9C  
                                        l22469 AD3A                                          l18005 F356  
                                        l21685 9D20                                          l21773 FC96  
                                        l21765 FC76                                          l21749 FC30  
                                        l22733 2EFE                                          l22741 2F1A  
                                        l21597 D94C                                          l20797 E96A  
                                        l20789 E932                                          l20965 A0AE  
                                        l20957 A094                                          l22813 B8CA  
                                        l22805 B852                                          l22495 AE1C  
                                        l18007 F35E                                          l21695 9D5A  
                                        l21679 9CDA                                          l21783 FCC8  
                                        l22751 2F46                                          l22735 2F02  
                                        l21919 C6FE                                          l21863 DC7A  
                                        l21855 DC12                                          l20799 E972  
                                        l20983 A0E8                                          l20975 A0CE  
                                        l22399 FF04                                          l22823 B932  
                                        l22815 B8DE                                          l22489 ADF4  
                                        l18025 F388                                          l18017 F374  
                                        l21689 9D2E                                          l21769 FC88  
                                        l22737 2F0C                                          l22745 2F36  
                                        l22593 1E7C                                          l20889 2C30  
                                        l22681 C474                                          l22673 C454  
                                        l21865 DC80                                          l20993 A108  
                                        l22841 B9A0                                          l22817 B8E4  
                                        l22809 B87E                                          l18107 2ABC  
                                        l18115 2AFA                                          l22499 AE36  
                                        l18027 F38C                                          l18019 F378  
                                        l19011 2B46                                          l21795 FCFC  
                                        l21779 FCB2                                          l22747 2F3C  
                                        l22595 1E82                                          l21891 C540  
                                        l21875 C4CC                                          l21859 DC3E  
                                        l20979 A0E0                                          l22827 B946  
                               ??_i2c_adc_read 0067                                          l18029 F390  
                                        l18133 D712                                          l18125 D6F8  
                                        l18213 BF76                                          l19013 2B4C  
                                        l19005 2B34                                          l21789 FCDE  
                                        l22597 1E8C                                          l22693 C4A4  
                                        l22685 C484                                          l22677 C464  
                                        l22669 C446                                          l20997 A11A  
                                        l20989 A0FA                                          l22861 BA4E  
                                        l22837 B99A                                          l22829 B94C  
                                        l19023 31EE                                          l18071 385A  
                                        l18231 BFD8                                          l18215 BF7C  
                                        l21799 FD12                                          l22599 1E92  
                                        l21887 C51A                                          l22863 BA54  
                                        l22847 B9EE                                          l19025 3210  
                                        l19033 343E                                          l18057 3892  
                                        l18153 D7AA                                          l19009 2B40  
                                        l19017 2B54                                          l22689 C494  
                                        l21897 C5EA                                          l22881 BAF2  
                                        l18411 4110                                          l18403 40FA  
                                        l18171 D814                                          l18163 D7F4  
                                        l18147 D780                                          l18139 D72C  
                                        l18251 C0F2                                          l18235 C000  
                                        l19123 34B6                                          l22883 BAF4  
                                        l22859 BA12                                          l22891 BB0E  
                                        l22795 B828                                          l18181 D864  
                                        l18165 D7FA                                          l18261 C16C  
                                        l18245 C064                                          l19117 3568  
                                        l19125 34BC                                          l22885 BAFE  
                                        l22893 BB76                                          l18407 4104  
                                        l18343 27BE                                          l17703 3F1C  
                                        l18159 D7DC                                          l18191 D8A2  
                                        l18263 C188                                          l18239 C04A  
                                        l19215 26C6                                          l18431 24B8  
                                        l19143 2EC4                                          l22879 BADE  
                                        l18345 27C2                                          l18353 27CE  
                                        l18185 D876                                          l18273 C1B4  
                                        l19321 F896                                          l19313 F838  
                                        l19137 2EAC                                          l18355 27E6  
                                        l18363 27F4                                          l18347 27C6  
                                        l17811 151C                                          l17803 2528  
                                        l18427 24A6                                          l18451 2D2E  
                                        l19331 F8EC                                          l19323 F8C6  
                                        l19315 F846                                          l19219 26D8  
                                        l19155 2EE8                                          l19501 2DA8  
                                        l18381 313C                                          l18357 27EA  
                                        l18349 27CA                                          l18293 0A72  
                                        l17717 EDF6                                          l18189 D87E  
                                        l18269 C1A2                                          l18277 C1BA  
                                        l18605 A4FC                                          l19165 0874  
                                        l18429 24B2                                          l19325 F8D4  
                                        l19317 F876                                          l19309 F824  
                                        l19149 2ED6                                          l19503 2DBE  
                                        l18359 27EE                                          l18367 280C  
                                        l17743 179C                                          l18279 C1DC  
                                        l18703 A7A6                                          l19415 E352  
                                        l19175 08F8                                          l18439 24E8  
                                        l18455 2D52                                          l18447 2D1C  
                                        l19087 4006                                          l18289 0A56  
                                        l17649 2F4E                                          l17665 2F98  
                                        l17913 F112                                          l17753 17C4  
                                        l18713 A7F0                                          l18633 A5D4  
                                        l19193 2698                                          l18449 2D28  
                                        l19337 F908                                          l19361 0EFA  
                                        l19515 322C                                          l18387 3160  
                                        l17771 1832                                          l18715 A806  
                                        l18707 A7D2                                          l18643 A5FC  
                                        l19435 E460                                          l19419 E39C  
                                        l19187 2688                                          l19283 19F8  
                                        l19363 0F06                                          l19355 0EDC  
                                        l18811 2312                                          l19531 3EA6  
                                        l19509 3E24                                          l17909 F104  
                                        l17749 17B6                                          l18725 A854  
                                        l18709 A7DA                                          l18717 A80A  
                                        l18629 A5C6                                          l19437 E466  
                                        l19197 26A2                                          l19277 19F4  
                                        l19269 1976                                          l19293 18F8  
                                        l19381 0F5E                                          l19373 0F3C  
                                        l19365 0F0C                                          l19349 0EC6  
                                        l17935 EF28                                          l17927 EEF4  
                                        l19463 3A6C                                          l18399 40EE  
                                        l17759 1812                                          l17783 2B92  
                                        l18719 A816                                          l18671 A6DE  
                                        l18655 A672                                          l18639 A5F2  
                                        l18591 A492                                          l18583 A472  
                                        l19439 E46A                                          l19623 AB6E  
                                        l18751 0D50                                          l18815 2316  
                                        l17881 F072                                          l17873 F028  
                                        l17793 2500                                          l17777 2B78  
                                        l18681 A714                                          l18649 A62A  
                                        l18729 A85C                                          l18905 0F70  
                                        l19297 1938                                          l19289 18D2  
                                        l19377 0F4A                                          l19609 AAE0  
                                        l19553 A8A8                                          l17947 EFBA  
                                        l19467 3A7A                                          l19459 3A60  
                                        l19483 3F92                                          l18771 1400  
                                        l17891 F0AA                                          l17883 F07A  
                                        l18691 A748                                          l18667 A6AA  
                                        l18587 A482                                          l18915 0FB2  
                                        l19299 1944                                          l19811 E090  
                                        l19803 E05A                                          l17885 F088  
                                        l17957 F286                                          l18941 1120  
                                        l19901 07E2                                          l19741 C7F6  
                                        l19637 ABFC                                          l19581 A9C4  
                                        l19653 AC8A                                          l18757 0D74  
                                        l19495 3F56                                          l18775 1442  
                                        l17895 F0BE                                          l17983 F2EE  
                                        l17967 F2A0                                          l17799 251A  
                                        l18695 A762                                          l18687 A730  
                                        l18951 117A                                          l18943 1126  
                                        l18871 235A                                          l18863 233C  
                                        l19911 07FE                                          l19743 C86A  
                                        l19735 C7DC                                          l19751 C8A0  
                                        l19567 A936                                          l18791 22D4  
                                        l19831 E0F0                                          l19489 3F74  
                                        l17889 F09C                                          l17977 F2E0  
                                        l19761 C8E0                                          l19745 C892  
                                        l17995 F33A                                          l17987 F316  
                                        l18939 1110                                          l18875 2368  
                                        l18867 234A                                          l18859 232C  
                                        l19763 C938                                          l19755 C8C6  
                              __end_of___aldiv F6F2                                          l19595 AA52  
                                        l18795 22D8                                          l19819 E0C6  
                                        l17997 F33E                                          l19933 0844  
                                        l19941 3C10                                          l19781 C9D2  
                                        l19773 C97A                                          l19765 C94E  
                                        l19749 C898                                          l18893 242A  
                                        l19783 C9D6                                          l18887 2410  
                                        l19951 1E28                                          l19855 E18A  
                                        l19847 E154                                          l19839 E11E  
                           ?__flash_get_status 006C                                          l19785 C9E4  
                                        l19769 C954                                          l18897 2438  
                                        l19961 3AE4                                          l19945 1DEE  
                                        l18995 2B14                                          l19891 0796  
                                        l19883 285C                                          l19971 3B02  
                                        l19955 1E56                                          l19877 2834  
                                        l19789 CA26                                          l19981 1B2E  
                                        l19965 3AEE                                          l19895 07A0  
                                        l19879 2852                                          l19975 3B08  
                                        l19999 1BA4                                          ?_main 002E  
                rtcc_increment_minutes@minutes 0068                                          ?_itoa 0070  
                              __end_of___awdiv 0F68                                          STR_10 944F  
                                        STR_11 9461                                          STR_12 9436  
                        ?_i2c_digipot_reset_on 002E                               ??__display_clear 0060  
            __size_of_USBCtrlEPServiceComplete 00F2                             _buck_remote_set_on 3F5E  
                        rtcc_decrement_day@day 0068                                __end_of___lldiv 119E  
                                        ?_utoa 0067               MSDCheckForErrorCases@DeviceBytes 006A  
                                        u21000 D28A                                          u21100 BB90  
                              ___awdiv@divisor 0062                                          u21110 BBAC  
                                        u21120 BBC8                         __end_of_USBDeviceTasks EC4E  
                                        u21130 BBE4                                          u21140 BC00  
                              __end_of___fttol ED92                                          u21150 BC1C  
                                        u20510 D48A                                          u21160 BC38  
                                        u20520 D4A6                                          u20600 9498  
                                        u21170 BC54                                          u20530 D4E0  
                                        u21330 D8BA                                          u20610 94B4  
                                        u22210 FE90                                          u21500 9CBA  
                                        u21180 BC70                                          u21340 D8D6  
                                        u20700 95B0                                          u20620 94D0  
                                        u22141 F6FC                                          u21270 B4A8  
                                        u21350 D8F2                                          u20710 95CC  
                                        u20630 94EC                                          u22151 F71E  
                                        u21280 B4C4                                          u21360 D90E  
                                        u20720 95E8                                          u20640 9508  
                                        u22161 F740                                          u21290 B4E0  
                                        u20650 9524                                          u20660 9540  
                                        u20900 DEB6                                          u22500 E5A0  
                                        u20670 955C                                          u20590 947C  
                                        u21710 DAF6                                          u20680 9578  
                                        u21720 DB30                                          u22505 E594  
                                        u20690 9594                      ?_USBCtrlEPServiceComplete 002E  
                                        u21715 DAEA                                          u17100 C136  
                                        u22460 FAFE                                          u17110 C138  
                                        u20870 DE62                                          u22630 E6FA  
                                        u22470 FC04                                          u20880 DE7E  
                                        u23257 1C8A                                          u22465 FAF2  
                                        u20970 D236                                          u20890 DE9A  
                                        u23267 1C92                                          u22635 E6EE  
                                        u22475 FBF8                                          u20980 D252  
                                        u23277 2F70                                          u22670 F5AE  
                                        u20990 D26E                                          u23287 2F82  
                                        u17128 C144                                          u23297 2F8C  
                                        u16345 17D2                                          u17129 C158  
                                        u17058 C010                                          u16435 2536  
                                        u17059 C024                                          u22675 F5A2  
                                        u18150 08E6                                          u16455 1538  
                                        u18065 2CBA                                          u18235 1F20  
                                        u16820 388E                                          u18245 1F42  
                                        u16830 3856                                          u18255 2242  
                                        u16840 2ADE                                          u17720 A77A  
                                        u17608 A50C                                          u17609 A520  
                                        u18265 2264                                          u19145 28D0  
                                        u17618 A540                                          u18514 E370  
                                        u17619 A554                                          u18515 E368  
                              __end_of___lwdiv 2500                                          u19411 EC64  
                                        u19155 293C                                          u18524 E3BA  
                                        u18525 E3B2                                          u18285 19AC  
                                        u19245 DCE2                                          u18630 2DA0  
                                        u16918 D758                                          u19430 ECAE  
                                        u16847 2AD4                                          u16919 D76C  
                                        u19255 DD1A                                          u16865 D6C8  
                                        u19601 CACE                                          u19265 DD62  
                                        u17658 A64E                   __flash_write_to_buffer@start 0073  
                                        u17659 A662                                          u19435 ECA4  
                                        u19275 DDAA                                          u18564 E428  
                                        u18548 E3E8                                          u18565 E420  
                                        u18549 E3FE                                          u19285 DDE8  
                                        u16975 BEF2                                          u18488 E320  
                                        u17785 13D4                                          u18489 E334  
                                        u17965 2446                                          u19901 3A26  
                                        u16998 BF2C                                          u16999 BF40  
                              __end_of___lwmod 2D6A                                          i2l300 148E  
                                        i2l301 1492                                          i2l233 029E  
                                        i2l170 EC4A                                          i2l171 EBE4  
                                        i2l148 E78A                                          i2l309 360E  
                                        i2l159 EB38                                          i2l344 0EA0  
                                        i2l169 EBD2                                          i2l373 CFAC  
                                        i2l358 05D4                                          i2l367 0622  
                                        i2l392 D18C                                          i2l296 1480  
                                        i2l299 1508                          rtcc_write_eeprom@date 0085  
                             ??__display_inout 0090                                          _UADDR 000F38  
                                        i2l787 32CC                                ___awdiv@counter 0064  
                                        _TMR0H 000FD7                                          _TMR1H 000FCF  
                                        _TMR0L 000FD6                                          _TMR1L 000FCE  
      __end_of_system_calculate_output_voltage FB28       __size_of_system_calculate_output_voltage 0106  
             ?_system_calculate_output_voltage 002E              ??_system_calculate_output_voltage 006C  
              _system_calculate_output_voltage FA22                                          _RPOR5 000EC5  
                                        _RPOR6 000EC6                                          _USTAT 000F64  
                             __i2c_read@length 0067                    ?_ExternalFlash_CapacityRead 0060  
                              ?_display_update 002E                         __rtcc_verify_bcd@value 0063  
           __size_of_USBCtrlEPAllowStatusStage 00C2                                _i2c_eeprom_read 2CA6  
                          ___lmul@multiplicand 0064                       __end_of__display_outputs D478  
                              ??_flash_is_busy 0071                               __end_of_MSDTasks CCE8  
                                   i2memcpy@d1 002E                                 __CFG_FCMEN$OFF 000000  
                              __read_fat@value 008D                             _USBCheckMSDRequest 0928  
                                   i2memcpy@s1 0030                         ??__buck_operate_remote 0076  
              __end_of_USBCtrlEPAllowDataStage 18D0                          __get_dateTime@minutes 0072  
                                        _sd000 9432                                          _sd001 935B  
                                        _sd002 938F                                          _sd003 93FE  
                        __get_dateTime@seconds 0073                 ?_USBIncrement1msInternalTimers 002E  
                  log_generate_entry@log_entry 0078                 __size_of_MSDTransferTerminated 0056  
                          ??__flash_get_status 006E                          _rtcc_get_year_decimal 41DC  
                __end_of_MSDTransferTerminated 32CE            i2c_display_send_init_sequence@F8354 03ED  
                                 _gblCBWLength 01F7                            ?_buck_remote_set_on 002E  
                                   i2memset@p1 002E                         ?_MSDCheckForErrorCases 006A  
                        ??__system_timer0_init 0060                          __buck_start@dutycycle 0072  
            __size_of_rtcc_get_minutes_decimal 0012                              ?__flash_spi_tx_rx 0060  
                            ?__flash_spi_tx_tx 0060                      ?_rtcc_get_minutes_decimal 002E  
                        i2USBStallEndpoint@dir 002E                         __end_of_ResetSenseData 2006  
                                ___ftpack@sign 0064                       __get_empty_cluster@value 008D  
                  rtcc_get_day_decimal@bcd_day 0063                     __end_of__display_usb@F8712 911B  
                   __end_of__display_usb@F8714 923B                     __end_of__display_usb@F8716 922B  
                   __end_of__display_usb@F8718 91FB                     ?_log_get_number_of_samples 0060  
                     __parse_command_long@data 0063                               ??_rtcc_get_hours 0060  
                        ?_system_output_toggle 002E                  rtcc_increment_seconds@seconds 0068  
                             ??_rtcc_get_month 0060              system_calculate_input_current@tmp 0070  
                                        pclath 000FFA                             ??__flash_spi_tx_rx 0068  
                           ??__flash_spi_tx_tx 0068                                __end_of_ui_init 412C  
                                        tablat 000FF5                      __size_of_USBStallEndpoint 0144  
                          ?_USBCheckMSDRequest 002E                                _MSDCommandState 00E6  
             __display_charger@charger_startup 0172                    ??_ExternalFlash_SectorWrite 008D  
                                        plusw1 000FE3                                          plusw2 000FDB  
                __display_charger@charger_sync 0139                 __end_of_rtcc_get_hours_decimal 41DC  
                              __end_of_tmr_isr 179C                                    ?_USBMSDInit 002E  
     ExternalFlash_WriteProtectStateGet@config 0060                  __size_of__system_encoder_init 0048  
                                        utoa@c 006F                                __number_of_days 229C  
                                        utoa@v 006D                                          status 000FD8  
                  ?__flash_copy_page_to_buffer 0073                              __CFG_DSWDTPS$8192 000000  
                     __end_ofi2_ResetSenseData 2112                                __end_of_strncmp 1966  
              ??__fill_buffer_get_calibration1 006B                ??__fill_buffer_get_calibration2 006B  
                             __end_ofi2_memcpy 3062                    __end_of__display_efficiency B816  
                             __end_ofi2_memset 3C42                 __display_temperature@external1 00A4  
               __display_temperature@external2 00B0                 ??_MSDComputeDeviceInAndResidue 0062  
                     __ic2_display_set_address 39B4                              __buck_timer2_init 40BE  
                               _MSDReadHandler D694                          ?_rtcc_increment_hours 002E  
                        ??_rtcc_increment_year 0068                          ?_rtcc_increment_month 002E  
                        __size_of__display_usb 01B6              __end_of_buck_remote_set_dutycycle 3E3A  
            __size_of_rtcc_get_seconds_decimal 0012                        __CFG_DSWDTOSC$INTOSCREF 000000  
                 __size_of_USBStdSetCfgHandler 00DC              fat_create_file@number_of_clusters 00AC  
                         flash_page_write@data 0081                  ??i2_ExternalFlash_MediaDetect 0030  
              __size_of_fat_get_empty_clusters 00B8                      ?_rtcc_get_seconds_decimal 002E  
                         flash_page_write@page 007F                       __end_of_log_collect_data C4BE  
                              __initialization 0BA2                    __display_temperature@header 0090  
                         ??_buck_remote_set_on 0060                             ?__buck_timer2_init 002E  
                    __end_of__flash_get_status 3692        __end_ofi2_ExternalFlash_MediaInitialize 3FB8  
     __size_ofi2_ExternalFlash_MediaInitialize 001E          __end_of_ExternalFlash_MediaInitialize 3E8A  
       __size_of_ExternalFlash_MediaInitialize 0028              ??i2_ExternalFlash_MediaInitialize 0030  
             ?i2_ExternalFlash_MediaInitialize 002E                i2_ExternalFlash_MediaInitialize 3F9A  
                _ExternalFlash_MediaInitialize 3E62                                    _system_init F6F2  
               __size_of_system_encoder_enable 0010                                   __end_of_main BB7E  
                                 __end_of_itoa 3586                  __end_of_system_encoder_enable 4246  
                             _rtcc_set_minutes 4058                   __size_of__rtcc_increment_bcd 003E  
                             _rtcc_set_seconds 4024                __end_of_i2c_display_write_fixed 2C42  
                                 __end_of_utoa 1026                    ??__fill_buffer_get_display1 0064  
                  ??__fill_buffer_get_display2 0064                       __parse_command_short@cmd 008B  
                        ?__buck_set_sync_async 0062                               __end_of_i2c_init 4270  
                  __end_of__rtcc_decrement_bcd 370E                       __end_of__i2c_acknowledge 42B0  
                                ??__i2c_open_1 0060                     __end_of__get_empty_cluster 1BB8  
                                _adc_calibrate 4270                           ??_USBCheckMSDRequest 0039  
                               __CFG_OSC$HSPLL 000000         MSDComputeDeviceInAndResidue@DiExpected 0060  
                      _USBCheckMSDRequest$2640 0039                        _USBCheckMSDRequest$2641 003B  
                        system_init@appendtext 0100                      __size_of_USBCtrlEPService 0096  
                          ??__buck_timer2_init 0060                                         ??_main 00D5  
                                ___fttol@sign1 0069                               __end_of__i2c_get 42A6  
                                       ??_itoa 0076                             USBStallEndpoint@ep 0065  
                         __size_of__ui_encoder 0444                                         ??_utoa 006D  
                                __activetblptr 000003                                ?_USBDeviceTasks 002E  
                           __write_root@offset 008D     __end_of_ExternalFlash_WriteProtectStateGet 42F0  
  __size_of_ExternalFlash_WriteProtectStateGet 0004           ??_ExternalFlash_WriteProtectStateGet 0062  
          ?_ExternalFlash_WriteProtectStateGet 0060             _ExternalFlash_WriteProtectStateGet 42EC  
                                  ?_USBSuspend 002E    __i2c_eeprom_load_default_calibration@buffer 0060  
                  __end_of_rtcc_decrement_year 3D3E                __size_of_rtcc_increment_minutes 002A  
              __size_of_rtcc_increment_seconds 002A                      ??__buck_initial_dutycycle 006D  
                             ??_rtcc_set_hours 0060                               ??_rtcc_set_month 0060  
                     ??_buck_remote_set_enable 0060                 __display_efficiency@efficiency 00C6  
                     __end_of_rtcc_get_minutes 4190                       __end_of_rtcc_get_seconds 4168  
                  __size_of__write_calibration 00BC                  __flash_write_to_buffer@buffer 0079  
                      __end_of_USBDeviceAttach 383A                         __flash_write_to_buffer 2B78  
              i2c_digipot_reset_off@data_array 006A                                ??_i2c_adc_start 006C  
                             __end_of___altoft 16FE                         __get_dateTime@datetime 0074  
                                       _ADRESH 000FC4                                         _ADRESL 000FC3  
                                       _CCPR1L 000FBB                                         _EECON2 000FA7  
                                       _DMABCH 000F66                                         _DMABCL 000F67  
                             ___awdiv@dividend 0060                         ?_i2c_digipot_reset_off 002E  
                              ?_ResetSenseData 002E                    ??__get_available_root_entry 008E  
                             __end_of___ftpack F916                                     __i2c_start 42CC  
                       SYSTEM_Initialize@state 0060                                     __i2c_write 3118  
                                 __display_usb DE50                               __end_of_adc_init 3FD4  
                             __end_of_adc_read 1CD6                                         i2l1322 1774  
                                       i2l1331 1746                                         i2l1333 174C  
                                       i2l1325 170C                                         i2l1329 1772  
                               __CFG_WDTEN$OFF 000000           __flash_write_page_from_buffer@buffer 0075  
              ??_APP_DeviceCustomHIDInitialize 003A                       ?__fill_buffer_get_status 002E  
                                       _OSCCON 000FD3                   ??_get_next_eeprom_write_task 0060  
                                       _RTCCAL 000F3E                                         _RPINR1 000EE1  
                                       _RPOR21 000ED5                                         _RPINR2 000EE2  
                                       _RPOR22 000ED6                                         _RPINR3 000EE3  
                    __end_of__buck_timer2_init 40D6                                 __CFG_WPCFG$OFF 000000  
                        __display_itoa@missing 008E                         __end_of_MSDReadHandler D8A8  
                              __read_root@data 0087                        __display_charger@fan_on 0108  
                      __display_charger@header 010F                        i2c_eeprom_write@address 006A  
                     i2USBTransferOnePacket@ep 0036                               ??__i2c_wait_idle 0060  
                            ??i2_USBDeviceInit 0036                         ?_display_get_character 0060  
                             ?_display_prepare 002E                __size_ofi2_USBTransferOnePacket 0102  
                              __read_root@slot 008E                              ?__get_input_power 006E  
                      __write_calibration@addr 0097                    fat_append_to_file@file_size 009F  
                      __write_calibration@cntr 009C                                 __CFG_WPDIS$OFF 000000  
                             __read_fat@offset 008B                               _i2c_eeprom_tasks 2748  
                            _shortPacketStatus 002A              fat_append_to_file@number_of_bytes 0091  
                   __get_empty_cluster@cluster 008F                                 __CFG_XINST$OFF 000000  
                             _i2c_eeprom_write 13C6                             ??__get_input_power 0070  
                              rtcc_set_day@day 0060                   ??__parse_command_calibration 0067  
                              USBDeviceTasks@i 004C                                    i2memcpy@tmp 0038  
                                 _CCPTMRS0bits 000F52                    USBStdFeatureReqHandler@pUEP 0046  
                     USBTransferOnePacket@data 0061                     USBCtrlTrfInHandler@lastDTS 002F  
                 __end_of__flash_set_page_size 1E72                                ??_USBDeviceInit 0068  
           __flash_copy_page_to_buffer@command 0079                       __end_of_rtcc_correct_day 3ED6  
                     flash_partial_read@length 0077                                         ___lmul 2578  
                                       _gblCBW 0241                                      ??___aldiv 0068  
                           __size_of__i2c_read 00C0                             __size_of__i2c_send 000A  
                       __size_of__get_dateTime 01B6                                      ??___awdiv 0064  
                               __CFG_STVREN$ON 000000                             __size_of__i2c_stop 0008  
                       __size_of__get_checksum 0046                                      ??___lldiv 0068  
                                    ??___fttol 0064    i2SYSTEM_Initialize@pll_startup_counter_3284 0030  
    SYSTEM_Initialize@pll_startup_counter_3284 0063                                      ??___lwdiv 0064  
                 __size_of_flash_partial_write 0070                                 ?_adc_calibrate 002E  
                                   _SoftDetach 01F6                                      ??___lwmod 0064  
                                       _buffer 0800                              _USBEnableEndpoint 37C6  
              __size_of_USBStdGetStatusHandler 00AA                __size_of_buck_remote_get_status 0032  
                      system_output_off@output 0061                                __get_date@month 0069  
                                       _memcpy 2AAA                     ?_adc_calculate_temperature 006C  
                                       _memset 39E8                        __end_of_i2c_eeprom_read 2D08  
                                       clear_0 0C0A                                         clear_1 0C1C  
                                       clear_2 0C28                                         clear_3 0C34  
                                       clear_4 0C40                                         clear_5 0C4C  
                    _ExternalFlash_SectorWrite 383A                                         clear_6 0C58  
                              __CFG_CLKOEC$OFF 000000                               __end_of_inq_resp 93E1  
                             ___awdiv@quotient 0066                         ??_i2c_digipot_reset_on 006A  
                                       _ui_run FE3A                        ?_system_encoder_disable 002E  
                           ?_USBEnableEndpoint 0036                   __size_of__buck_operate_local 04EE  
                         __end_of_buck_operate 2F4C                             _flash_partial_read 151C  
                                       _status 01F0                          i2c_display_init@F8357 03E4  
                                       _strlen 34AC                        ?_rtcc_decrement_minutes 002E  
                      ?_rtcc_decrement_seconds 002E                         __size_of__buck_prepare 006E  
                       __display_outputs@F8722 9269                         __display_outputs@F8724 920B  
                       __display_outputs@F8726 90CA                         __display_outputs@F8728 90B5  
                __size_of_USBTransferOnePacket 0134                            __size_of_USBMSDInit 011E  
                  i2c_display_write_fixed@data 0065                     __end_of_log_generate_entry B496  
  i2c_display_send_init_sequence@init_sequence 006A                         __size_of__flash_wakeup 005E  
                      __write_root@root_sector 008B                                         itoa@cp 0076  
                       __size_of__flash_spi_tx 006C                              _i2c_set_frequency 27B8  
                        system_init@extension2 017E                          __end_of_fat_find_file 0134  
       buck_remote_set_synchronous@synchronous 0060                    fat_get_empty_clusters@value 008D  
                       _fat_get_empty_clusters 125A                  __size_of__parse_command_short 00E4  
                       ?_rtcc_get_year_decimal 002E                 __display_charger@charger_async 0124  
          __size_of_get_next_eeprom_write_task 002E                                   __mediumconst 908A  
                          __end_of__i2c_open_1 40BE                 i2c_digipot_reset_on@data_array 006A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      __rtcc_decrement_bcd@value 0067  
                                    ??_ui_init 0060                    __end_of__display_time@F8701 924B  
             __size_of_APP_DeviceMSDInitialize 0010                    __end_of__display_time@F8681 9307  
                  __end_of__display_time@F8683 92E4                    __end_of__display_time@F8675 9285  
                  __end_of__display_time@F8691 91C6                    __end_of__display_time@F8677 92F7  
                  __end_of__display_time@F8685 92CF                    __end_of__display_time@F8693 925B  
                  __end_of__display_time@F8679 92EE                    __end_of__display_time@F8687 92C3  
                  __end_of__display_time@F8695 91B4                    __end_of__display_time@F8689 9157  
                  __end_of__display_time@F8697 9143                    __end_of__display_time@F8699 912F  
              ??__flash_compare_page_to_buffer 0076                            ??_USBEnableEndpoint 0037  
                           ?_i2c_set_frequency 002E              __end_of__display_efficiency@F8753 917D  
            __end_of__display_efficiency@F8755 916A              __end_of__display_efficiency@F8757 9269  
                          ?_flash_partial_read 0073                        __end_of__number_of_days 231A  
                     __size_of_flash_page_read 002A                      __fill_buffer_get_display1 2E2E  
                    __fill_buffer_get_display2 2DCC                                      ??_tmr_isr 002E  
                   __end_of__root_is_available 19FC                         ??_system_output_toggle 0062  
                    __size_of_system_output_on 004E                                    _CtrlTrfData 000D38  
         __end_of_buck_remote_change_dutycycle 2DCC          __size_of_buck_remote_change_dutycycle 0062  
                 _buck_remote_change_dutycycle 2D6A                                      ??_strncmp 0066  
                         __size_of__write_root 006C             buck_remote_change_dutycycle@change 0060  
                        __end_of_ui_get_status 42E0             __size_of_buck_remote_get_dutycycle 0006  
                       __display_outputs@line3 0060                         __display_outputs@line4 0075  
            i2ExternalFlash_MediaDetect@config 002E                ExternalFlash_MediaDetect@config 0060  
                         _controlTransferState 0029                     ??_APP_DeviceCustomHIDTasks 008C  
                        __flash_spi_tx_rx@data 0064                           __CFG_LS48MHZ$SYS48X8 000000  
                      ?_rtcc_get_month_decimal 002E                              _SYSTEM_Initialize 2A42  
                __size_of__display_temperature 01FC                          __flash_spi_tx_tx@data 0064  
                          ??_i2c_set_frequency 0060                                     __accesstop 0060  
                      __end_of__initialization 0C5E                                     ___altoft@c 006E  
            MSDCheckForErrorCases@MSDErrorCase 0070                     log_write_to_disk@log_entry 0101  
                  ?__parse_command_calibration 0063                                ?_MSDReadHandler 002E  
                 __size_of__buck_set_dutycycle 007C                           __end_of_i2c_adc_read 3006  
                       ??_rtcc_increment_hours 0068                             ?_SYSTEM_Initialize 002E  
                       ??_rtcc_increment_month 0068                         __size_of__display_itoa 02B8  
                                ___rparam_used 000001                         __size_of__display_time 06D8  
                       _rtcc_increment_minutes 3CC0                         _rtcc_increment_seconds 3C6C  
                     __size_of_USBStallHandler 0046                   __end_of__i2c_not_acknowledge 429C  
              ExternalFlash_SectorWrite@config 0084                ExternalFlash_SectorWrite@buffer 008A  
              __end_of__buck_initial_dutycycle 0928                    __end_of__parse_command_long 0404  
                __size_of_rtcc_get_day_decimal 0012                             __size_of__get_date 0082  
                          __size_of_USBSuspend 0030                             __size_of__get_time 0086  
                        __write_fat@fat_sector 008C                          flash_page_write@match 0083  
                     __end_of_rtcc_read_eeprom E1A2                           ??_flash_partial_read 007B  
                                   ___fttol@f1 0060                               _flash_page_write 3172  
                            ?__get_temperature 006E                                 __pcstackCOMRAM 002E  
                   __size_of__flash_get_status 0040                      __end_of_USBEnableEndpoint 3802  
                            _log_write_to_disk 1CD6                         ??__buck_set_sync_async 0063  
          __size_of_ExternalFlash_CapacityRead 0014                             __rtcc_write_enable 40EC  
                      _battery_voltage_maximum 02E9          __end_of__fill_buffer_get_calibration1 1660  
       __size_of__fill_buffer_get_calibration1 00A0                  __fill_buffer_get_calibration1 15C0  
        __end_of__fill_buffer_get_calibration2 2410         __size_of__fill_buffer_get_calibration2 007A  
                __fill_buffer_get_calibration2 2396                                  __end_of_sd000 9436  
                                __end_of_sd001 938F                                  __end_of_sd002 93BD  
                                __end_of_sd003 9418                           buck_remote_set_on@on 0060  
                                    ?_MSDTasks 002E                                   __pidataBANK2 374C  
                                 __pidataBANK3 3FD4                                   __pidataBANK4 29DA  
                          ??_SYSTEM_Initialize 0060                      __get_available_root_entry 3ADE  
                         __rtcc_verify_bcd@max 0061                           __rtcc_verify_bcd@min 0060  
         ExternalFlash_SectorWrite@sector_addr 0086               __size_of_USBCtrlEPAllowDataStage 009A  
                           __buck_prepare@cntr 0060           __size_of_i2c_eeprom_read_calibration 014A  
                           ??__get_temperature 0070                      rtcc_decrement_hours@hours 0068  
                           __size_of__read_fat 005A                                _active_protocol 01FE  
                          i2USBStallEndpoint@p 0034                             ?_log_write_to_disk 002E  
               __end_of_system_encoder_disable 42DA                  __size_of_USBConfigureEndpoint 0094  
           __size_of_ExternalFlash_MediaDetect 000A                    __end_of_USBCtrlTrfInHandler 0EAA  
                 ?_buck_remote_set_synchronous 002E                            _userInterfaceStatus 01F3  
               __end_of_rtcc_decrement_minutes 3DBC                 __end_of_rtcc_decrement_seconds 3D68  
                          display_prepare@mode 00D4                                   _gblSenseData 0260  
                              _MSDErrorHandler F00A                 ?_ExternalFlash_MediaInitialize 0060  
                    __end_of_i2c_set_frequency 2828                            ?__rtcc_write_enable 002E  
                       i2_USBTransferOnePacket FF3E                            system_init@filename 0168  
                 __size_of_system_output_is_on 001A                                     __buck_stop 3BEA  
                          ??_log_write_to_disk 00D0               fat_get_empty_clusters@fat_sector 0089  
                 buck_remote_set_enable@remote 0060                                      ?i2_memcpy 002E  
                                    ?i2_memset 002E          __end_of_MSDProcessCommandMediaPresent A8A6  
       __size_of_MSDProcessCommandMediaPresent 0436                  _MSDProcessCommandMediaPresent A470  
                       flash_partial_read@data 0079                             __size_of_buck_init 000E  
                       flash_partial_read@page 0073                                  __get_date@day 006A  
              __size_of_buck_remote_set_enable 001E                       ??_USBCtrlTrfSetupHandler 004B  
                      _USBTicksSinceSuspendEnd 01FA                                  __get_dateTime DC9A  
                                __get_checksum 3586              __flash_copy_page_to_buffer@buffer 0075  
                             ?_USBDeviceAttach 002E                      __end_of_SYSTEM_Initialize 2AAA  
                      ??__update_modified_time 006F                              __end_of__i2c_read 0DEA  
                 __size_of__rtcc_write_disable 0016                              __end_of__i2c_send 42C4  
                       _USBStdGetStatusHandler 1472                 __end_of_rtcc_get_month_decimal 4200  
                          USBStallEndpoint@dir 0060                              __end_of__i2c_stop 42CC  
                       _buck_remote_get_status 3A4E                                    ?__i2c_start 002E  
                                  ?__i2c_write 0065                                     __pbssBANK0 00D7  
                                   __pbssBANK1 01D3                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                     __pbssBANK4 0468  
                       __read_root@root_sector 008A                  fat_append_to_file@fat_cluster 00A5  
             __size_of_i2c_display_write_fixed 0064                               _USBStallEndpoint ED92  
                                   _gblNumBLKS 02AA                  ?_buck_remote_change_dutycycle 002E  
                                    ?_i2c_init 002E                             _buck_get_dutycycle 42E6  
                    __size_of__rtcc_verify_bcd 005E              __end_of_buck_remote_get_dutycycle 42E6  
                 __end_of__sector_from_cluster 40EC                           ??__rtcc_write_enable 0060  
                 ??_schedule_eeprom_write_task 0060                                     __read_root 2902  
                   __size_of__buck_timer2_init 0018                               _mediaInformation 02B6  
                 __end_of_rtcc_decrement_hours 3DE6                   __end_of_rtcc_decrement_month 3D92  
                                __buck_prepare 2828                                  __flash_wakeup 2F4C  
                    rtcc_decrement_month@month 0068                                  __flash_spi_tx 296E  
                                    ?__i2c_get 002E                    __size_of_USBWakeFromSuspend 0036  
                                  _pBDTEntryIn 0010                      __end_of_log_write_to_disk 1D60  
                  __size_of_i2c_display_cursor 0034                     __update_modified_time@root 006D  
             __end_of_USBCtrlEPServiceComplete 0318          __end_of_APP_DeviceCustomHIDInitialize 394C  
       __size_of_APP_DeviceCustomHIDInitialize 0036                  _APP_DeviceCustomHIDInitialize 3916  
                         log_collect_data@temp 0078                    MSDTransferTerminated@handle 0039  
                          ?_buck_get_dutycycle 002E             ExternalFlash_SectorSizeRead@config 0060  
                         USBCtrlTrfRxService@i 002E                                ??_adc_calibrate 0060  
                       __size_of_log_start_new 00F2                                        ?___lmul 0060  
                                   ??_MSDTasks 00AC                         __display_itoa@decimals 007A  
                      ??_i2c_digipot_backlight 006A                        __get_checksum@log_entry 0060  
                            ?__display_charger 002E                 __flash_write_to_buffer@command 007A  
                rtcc_decrement_minutes@minutes 0068                                      MSDTasks@i 00B1  
                                      _CCP1CON 000FBA                           i2c_adc_start@channel 006C  
                                    ?___altoft 006E                                        ?_memcpy 0060  
                           _fat_append_to_file C4BE                                        ?_memset 0060  
                               ___lmul@product 0068                                     _device_dsc 9418  
                             ??_display_update 0070                               ?_i2c_eeprom_read 0071  
                                  __i2c_open_1 40A6                                      ?___ftpack 0060  
                           ??__display_charger 0090                               _USBCtrlEPService 19FC  
            system_calculate_input_voltage@tmp 0070                                        ?_ui_run 002E  
                                   _ep_data_in 01E4                             __display_clear@col 0063  
                                    ?_adc_init 002E                                      ?_adc_read 0060  
                       rtcc_read_eeprom@buffer 0092                             __display_clear@row 0062  
                                      ?_strlen 0060                  fat_append_to_file@file_number 00A9  
               __parse_command_calibration@cmd 002E                  ??_buck_remote_set_synchronous 0060  
                  APP_DeviceCustomHIDTasks@idx 0096               __sector_from_cluster@fat_cluster 0060  
                  __end_of_USBCtrlTrfRxService FA22                                  __display_itoa C77C  
                                __display_time 9466                             _USBCheckStdRequest 05C4  
                    __write_calibration@buffer 0087                              _configDescriptor1 931B  
                                      i2l11153 1AF4                                        i2l11305 FFFC  
                                      i2l12207 0CAE                                        i2l11343 37E4  
                                      i2l11511 06D4                                        i2l12311 F24A  
                                      i2l12303 F1EC                                        i2l11513 06DA  
                                      i2l11505 06BE                                        i2l11521 06EC  
                                      i2l12313 F250                                        i2l12305 F1F2  
                                      i2l12241 189E                                        i2l11339 37D6  
                                      i2l11451 FD92                                        i2l11523 06FE  
                                      i2l20331 1A82                                        i2l11293 FF7E  
                                      i2l11285 FF54                                        i2l11533 0724  
                                      i2l12317 F256                                        i2l12237 1886  
                                      i2l11543 0744                                        i2l11527 070E  
                                      i2l12191 3C30                                        i2l22103 EB80  
                                      i2l11801 0AF8                                        i2l11537 072E  
                                      i2l12329 14B0                                        i2l20329 1A7C  
                                      i2l22121 EBA0                                        i2l11811 0B22  
                                      i2l12291 F14C                                        i2l12339 14F0  
                                      i2l12187 3C20                                        i2l22115 EB94  
                                      i2l11821 0B62                                        i2l13405 0E22  
                                      i2l11549 074E                                        i2l11581 09B2  
                                      i2l13407 0E26                                        i2l11583 09B8  
                                      i2l11559 093E                                        i2l11751 32EE  
                                      i2l12295 F15E                                        i2l14303 3018  
                                      i2l14311 3050                                        i2l20295 3908  
                                      i2l22135 EBDC                                        i2l13425 0E86  
                                      i2l11753 32FA                                        i2l11745 32D2  
                                      i2l20297 390A                                        i2l22129 EBC8  
                                      i2l11819 0B5A                                        i2l13419 0E66  
                                      i2l11579 0994                                        i2l22155 EC2A  
                                      i2l22091 EB4E                                        i2l11829 0B9A  
                                      i2l11597 09EC                                        i2l11749 32DC  
                                      i2l11757 330C                                        i2l22157 EC46  
                                      i2l22149 EC0A                                        i2l22077 EB30  
                                      i2l22069 EB20                                        i2l13391 30B8  
                                      i2l13383 3070                                        i2l11687 3296  
                                      i2l12817 0248                                        i2l22097 EB5A  
                                      i2l11797 0AEE                                        i2l12837 02C4  
                                      i2l16061 E76E                                        i2l12871 F964  
                                      i2l14367 360A                                        i2l12865 F942  
                                      i2l16073 E796                                        i2l16057 E766  
                                      i2l12883 F9BE                                        i2l16085 E7C6  
                                      i2l12887 F9D8                                        i2l16095 E82A  
                                      i2l16089 E7CE                                        i2l23395 2052  
                                      i2l23397 2086                                        i2l18081 2010  
                                      i2l18091 202C                                        i2l18083 2018  
                                      i2l18087 2022                                        i2l18079 2008  
                                      i2l18095 203A                                        i2l16911 171A  
                                      i2l18521 D020                        ??_MSDCheckForErrorCases 006E  
                                      i2l18507 CFA8                                        i2l16915 1724  
                                      i2l18533 D092                                        i2l16941 178A  
                                      i2l16925 1752                                        i2l16909 1712  
                                      i2l16917 173A                                        i2l18543 D0E4  
                                      i2l18527 D06C                                        i2l18471 0530  
                                      i2l16943 178C                                        i2l16935 177E  
                                      i2l18561 D172                                        i2l18545 D100  
                                      i2l16929 175C                                        i2l18467 0528  
                                      i2l18549 D11A                                        i2l18493 05A2  
                                      i2l18477 055C                                        i2l16949 1798  
                                      i2l17863 F4AA                                        i2l17855 F41A  
                                      i2l18575 D1EE                                        i2l18559 D166  
                                      i2l18577 D1FA                                        i2l18569 D1A8  
                                      i2l17867 F4B2                                        i2l18961 05DC  
                                      i2l18963 05E2                                        i2l18973 05FA  
                                      i2l18965 05E8                                        i2l18975 0600  
                                      i2l18991 065A                                        i2l18977 0606  
                                      i2l18987 063C                             __size_of_rtcc_init 0020  
                          ?_fat_append_to_file 0091                    __end_ofi2_SYSTEM_Initialize 3322  
                                   ??i2_memcpy 0034                         fat_append_to_file@data 0093  
                                   ??i2_memset 0034                                     _flash_init 33C6  
                   system_output_toggle@output 0062                    __end_of_USBCtrlTrfTxService 0BA2  
                            __end_of__get_date 229C                            _USBStdSetCfgHandler 04E8  
          __size_of_schedule_eeprom_write_task 0056                           ??_buck_get_dutycycle 0060  
                       fat_append_to_file@root 00B0                                __get_time@hours 0068  
                __buck_set_dutycycle@dutyCycle 0061                              __end_of__get_time 1F80  
                            ?__display_outputs 002E                                 ?__get_dateTime 0064  
                rtcc_decrement_seconds@seconds 0068                                 ?__get_checksum 0060  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                                      _RXADDRH 000F68                                        _RXADDRL 000F69  
                                      _RTCVALH 000F3B                                        _RTCVALL 000F3A  
                             ?__number_of_days 002E                     __end_ofi2_USBStallEndpoint FE3A  
                           _rtcc_decrement_day 3BBE                            __rtcc_increment_bcd 3692  
                        __display_time@minutes 01D0                          __display_time@seconds 01D1  
                                      _TXADDRH 000F6A                                        _TXADDRL 000F6B  
                     __end_of_rtcc_set_minutes 4072                       __end_of_rtcc_set_seconds 403E  
                          ?_USBCheckStdRequest 002E                     ??__ic2_display_set_address 006A  
                 __size_of_USBStdGetDscHandler 0132                       __display_charger@fan_off 0100  
                         __flash_set_page_size 1DEA                                        _UIEbits 000F36  
                           ??__display_outputs 0060                          __display_time@setyear 01BA  
                   __display_charger@supply_on 0160             __end_of_get_next_eeprom_write_task 3B3A  
                   _get_next_eeprom_write_task 3B0C                            i2c_eeprom_read@addr 0077  
                   __end_of_APP_DeviceMSDTasks 4236                                        _UIRbits 000F62  
                            __end_of__read_fat 3118                                  ??__buck_start 0073  
                          i2c_eeprom_read@data 0073                    ??_log_get_number_of_samples 0062  
  MSDCheckForErrorCases@HostMoreDataThanDevice 006E                          rtcc_increment_day@day 0068  
        __end_of__flash_compare_page_to_buffer 1836         __size_of__flash_compare_page_to_buffer 009A  
                __flash_compare_page_to_buffer 179C                                     __write_fat 3322  
                                   ??_i2c_init 0061                               __CFG_CFGPLLEN$ON 000000  
                     __i2c_write@slave_address 0068            __ic2_display_set_address@data_array 006B  
                               ?__buck_prepare 002E                                   ??_USBMSDInit 0039  
                     __write_calibration@index 009B                              __read_fat@cluster 0087  
                               ?__flash_wakeup 002E                             i2c_adc_read@result 0068  
                            ??_flash_page_read 008B                            ?_rtcc_decrement_day 002E  
                               ?__flash_spi_tx 0060                         fat_find_file@extension 0089  
                            ?i2_ResetSenseData 002E                                 _outputPowerSum 0286  
                                   ??__i2c_get 0060                              _MSDProcessCommand E310  
                         ??_fat_append_to_file 0095           adc_calculate_temperature@calibration 006E  
                                __i2c_send@dat 0060                      __flash_get_status@command 006E  
                           __flash_spi_tx@data 0060                                        __Hparam 0000  
              rtcc_get_hours_decimal@bcd_hours 0063                ??_USBIncrement1msInternalTimers 002E  
                                   _lastSecond 01EF                           ?_USBStdSetCfgHandler 002E  
                        __end_of_rtcc_get_year 4154                    __size_of_USBCheckHIDRequest 00DA  
                                      __Lparam 0000                    __size_of_rtcc_increment_day 002C  
                           ??i2_ResetSenseData 002E                             __display_itoa@text 007B  
                     __size_of_fat_create_file 01F6                              __end_of_hid_rpt01 93FE  
                       _buck_remote_set_enable 3F7C                             ?_MSDProcessCommand 002E  
                    __rtcc_increment_bcd@value 0067                        __end_of_MSDErrorHandler F13C  
                            __end_of_buck_init 4264                     _MSDTransferTerminated$2729 003B  
                   __size_of_USBEnableEndpoint 003C                      __size_of__flash_spi_tx_rx 00BC  
                    __size_of__flash_spi_tx_tx 00B4           APP_DeviceCustomHIDTasks@return_value 0094  
                                 ?_system_init 002E                rtcc_get_month_decimal@bcd_month 0063  
                            ?_log_collect_data 002E                             __display_usb@F8712 9107  
                           __display_usb@F8714 922B                             __display_usb@F8716 921B  
                           __display_usb@F8718 91EA                  __size_of__rtcc_bcd_to_decimal 0028  
                         ?__rtcc_increment_bcd 0064                          __size_of_buck_operate 005E  
                         ??_USBCheckStdRequest 004B                                        ___aldiv F5D8  
                __size_of_USBCtrlTrfOutHandler 005C          i2ExternalFlash_MediaInitialize@config 002E  
          ExternalFlash_MediaInitialize@config 0060                                        ___awdiv 0EAA  
                             _ToSendDataBuffer 03A4                                __size_of___lmul 0076  
                                      ___lldiv 10E2                               ??_USBDeviceTasks 004C  
                                      ___fttol EC4E                                        ___lwdiv 2488  
                            ??_USBStallHandler 002E                                        ___lwmod 2D08  
                           ??_log_collect_data 0074                                     ??___altoft 0072  
                            ?__i2c_acknowledge 002E                          __end_of_buck_get_mode 42F4  
                          __size_of__i2c_start 0008                   __end_of__system_encoder_init 353E  
                                      __pcinit 0BA2                                __size_of_memcpy 0068  
                          __size_of__i2c_write 005A                                     ??___ftpack 0065  
                              __size_of_memset 0034                       __size_of_MSDWriteHandler 0322  
                    __end_of_configDescriptor1 935B                            ??_MSDProcessCommand 00A7  
                                      __ramtop 0F00                   ExternalFlash_SectorRead@page 0093  
               ?__fill_buffer_get_calibration1 002E                 ?__fill_buffer_get_calibration2 002E  
                   __size_of_i2c_set_frequency 0070                                     ??_adc_init 0060  
                                   ??_adc_read 0062                                        __ptext0 B816  
                                      __ptext1 FE3A                                        __ptext2 4236  
                                      __ptext3 42D4                                        __ptext4 3A1C  
                                      __ptext5 3B3A                                        __ptext6 3B66  
                                      __ptext7 394C                                        __ptext8 A02C  
                                      __ptext9 3E8A                                 ?__display_itoa 0078  
                                      _inPipes 000A                           ??_rtcc_decrement_day 0068  
                              __size_of_ui_run 0104                                 ?__display_time 002E  
                        _task_list_write_index 001D                             __display_time@cntr 01D2  
            __size_of_ExternalFlash_SectorRead 0038                   __end_of__display_inout@F8671 9293  
                  _USBDeferOUTDataStagePackets 01FB                   __end_of__display_inout@F8665 91EA  
                           __display_time@mode 01CB                   __end_of__display_inout@F8667 91D8  
                 __end_of__display_inout@F8669 9319                             ??__i2c_acknowledge 0060  
                                    _T0CONbits 000FD5                             __display_time@year 01CC  
                        __end_of_rtcc_set_year 4024                      ?_ExternalFlash_SectorRead 008B  
                              __size_of_strlen 004A                    __end_of__system_timer0_init 3652  
                                    _T1CONbits 000FCD                                    ?__buck_stop 002E  
                                 ??_USBSuspend 0045                                      _T2CONbits 000FCA  
                           __end_of_USBMSDInit F4BC                               ??_ResetSenseData 0060  
                      ?__flash_write_to_buffer 0073                        _APP_DeviceMSDInitialize 4246  
                                      _msd_cbw 000D40                       __end_of_i2c_eeprom_tasks 27B8  
                             ___aldiv@dividend 0060                                        _msd_csw 000D80  
                      ??_i2c_digipot_reset_off 006A                           __i2c_not_acknowledge 4292  
                     __end_of_i2c_eeprom_write 1472                                i2_USBDeviceInit E724  
                                      _ui_init 4118                               i2USBDeviceInit@i 0036  
                                _log_start_new 0134             __size_of_ExternalFlash_SectorWrite 0038  
                      __size_of__buck_pin_init 0036                          ?__flash_set_page_size 002E  
                                      _tmr_isr 16FE                          __end_of_flash_is_busy 3F20  
                           __end_of_USB_CD_Ptr 931B                                     _msd_buffer 000600  
                           __get_empty_cluster 1B26                              ?_rtcc_get_minutes 002E  
                            ?_rtcc_get_seconds 002E                     __size_of_SYSTEM_Initialize 0068  
                             _system_output_on 3414                __size_of_USBCtrlTrfSetupHandler 0090  
                        __size_of_i2c_adc_read 005C                  __size_of__buck_operate_remote 0106  
                                      _strncmp 18D0                            _flash_partial_write 26D8  
                         end_of_initialization 0C5E                        rtcc_decrement_year@year 0068  
                      ??_display_get_character 0061                          _MSDTransferTerminated 3278  
        __flash_compare_page_to_buffer@command 007B                 ?_MSDProcessCommandMediaPresent 002E  
                           __end_of_USB_SD_Ptr 930F                    __end_of_rtcc_increment_year 3C6C  
                           ??_rtcc_get_minutes 0060                             ??_rtcc_get_seconds 0060  
                          i2c_eeprom_write@dat 0072                                        memcpy@d 0067  
         __size_of_buck_remote_set_synchronous 001E                                        memcpy@n 0064  
                                      memcpy@s 0069                               __write_fat@value 008A  
                 __get_temperature@temperature 006E                            _pBDTEntryEP0OutNext 0018  
                    __rtcc_bcd_to_decimal@ones 0061                      __end_of_MSDProcessCommand E470  
                                      itoa@buf 0070                                    ?__read_root 0087  
                    __rtcc_bcd_to_decimal@tens 0060                                        memset@c 0062  
                                      itoa@val 0072                                        memset@n 0064  
                                      memset@p 0066                            __buck_operate_local 9B3E  
                              _USB1msTickCount 01DD                       __buck_operate_local$8739 007B  
                                 _buck_operate 2EEE                            ?__get_empty_cluster 0087  
                 fat_get_empty_clusters@offset 008B                       ?_USBStdFeatureReqHandler 002E  
                                    i2u1223_40 303A                                      i2u1223_47 3030  
                i2c_eeprom_write@slave_address 0083             __size_of__fill_buffer_get_display1 0062  
           __size_of__fill_buffer_get_display2 0062                                      i2u1650_44 F49A  
                     fat_append_to_file@length 00AA                                      i2u1650_45 F494  
                             _inputCapacitySum 0282                                      i2u1646_48 F440  
                                    i2u1646_49 F454                                      i2u1648_48 F466  
                                    i2u1648_49 F47C                       fat_append_to_file@offset 00A7  
                        ??_USBStdSetCfgHandler 0045                                ___lldiv@divisor 0064  
                   __size_of_log_write_to_disk 008A            rtcc_get_minutes_decimal@bcd_minutes 0063  
                     fat_append_to_file@sector 009D                              __end_of_rtcc_init 3F40  
               ??_buck_remote_change_dutycycle 0060                                ___lldiv@counter 006C  
                          __end_of__buck_start 0850                                  ?_rtcc_get_day 002E  
          rtcc_get_seconds_decimal@bcd_seconds 0063                                   _averageCount 0016  
                        ??__rtcc_increment_bcd 0066                             __end_of_USBSuspend 3AB0  
                            __get_time@minutes 0069                              __get_time@seconds 006A  
                      _USBCtrlEPAllowDataStage 1836                     ?_buck_remote_set_dutycycle 002E  
                             ___aldiv@quotient 006A                    __size_of_buck_remote_set_on 001E  
                                      postdec1 000FE5                                        postdec2 000FDD  
         __end_of_ExternalFlash_SectorSizeRead 4288          __size_of_ExternalFlash_SectorSizeRead 000C  
                 _ExternalFlash_SectorSizeRead 427C                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                          rtcc_set_hours@hours 0060                              ?_rtcc_correct_day 002E  
                     __buck_operate_local@cntr 007D                           ?_flash_partial_write 007F  
                 __size_of__display_efficiency 0380               __size_of__fill_buffer_get_status 029C  
                                ??__ui_encoder 008B                                  ?_rtcc_set_day 002E  
                                      utoa@buf 0067                      _log_get_number_of_samples 4288  
      MSDProcessCommandMediaPresent@sectorSize 009E                       _USBCtrlEPServiceComplete 0226  
                                      utoa@val 0069                   log_write_to_disk@file_number 0100  
                                    _MSD_State 00E7                                  _inputPowerSum 028A  
                        _system_encoder_enable 4236                                        strlen@s 0060  
                  ??_adc_calculate_temperature 006F                             ??_rtcc_correct_day 0064  
                  __size_of_USBCheckMSDRequest 00D6                     _USBStatusStageEnabledFlag1 0022  
                   _USBStatusStageEnabledFlag2 0021                       flash_partial_write@match 0087  
                         ?__buck_operate_local 002E                             USBEnableEndpoint@p 0037  
                      ?_fat_get_empty_clusters 0087                        ??_rtcc_get_year_decimal 0063  
                                    _PORTAbits 000F80                                      _PORTBbits 000F81  
                      __display_outputs@header 009A                               _outputCurrentSum 028E  
                     flash_partial_write@start 0081                      __size_of__get_input_power 0084  
                         ??__get_empty_cluster 0089                 __end_of__flash_write_to_buffer 2BDE  
                          __buck_set_dutycycle 231A                               __CFG_DSBOREN$OFF 000000  
                    __display_temperature@cntr 00C7                           __sector_from_cluster 40D6  
                                 _i2c_adc_read 2FAA                           _rtcc_decrement_hours 3DBC  
                   __rtcc_bcd_to_decimal@input 0062                           _rtcc_decrement_month 3D68  
           __size_of__get_available_root_entry 002E                                ??__get_dateTime 0068  
                   __end_of__write_calibration 10E2                          ?__i2c_not_acknowledge 002E  
                fat_append_to_file@new_cluster 00A3                       _rtcc_get_minutes_decimal 41B8  
                              ??__get_checksum 0062                         fat_create_file@cluster 00AE  
                          flash_page_read@data 0089                   __size_of__rtcc_decrement_bcd 003E  
                            adc_read@adc_value 0063                                    ?_flash_init 002E  
                          flash_page_read@page 0087                               __CFG_CPUDIV$OSC1 000000  
                fat_get_empty_clusters@cluster 0091                                      _TRISAbits 000F92  
                               ?_log_start_new 002E                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96                             _ReceivedDataBuffer 0478  
                           _BothEP0OutUOWNsSet 0025                  fat_get_empty_clusters@maximum 0087  
                     __end_of_flash_page_write 31CA                                  __pbssBIGRAMll 0800  
                             ??_MSDReadHandler 0095                      USBConfigureEndpoint@EPNum 0033  
                      _i2c_display_write_fixed 2BDE                              __CFG_SOSCSEL$HIGH 000000  
                   ?_USBCtrlEPAllowStatusStage 002E                                ??__buck_prepare 0060  
                   __display_efficiency@header 0092                        __display_time@presssave 0170  
          USER_USB_CALLBACK_EVENT_HANDLER@size 0041                        __size_of__display_clear 0064  
                                    _USTATcopy 002C                                ??__flash_wakeup 0068  
                 __size_of_rtcc_decrement_year 002A                          __end_of_i2c_adc_start 34AC  
           __end_of_schedule_eeprom_write_task 3278                     _schedule_eeprom_write_task 3222  
MSDProcessCommandMediaPresent@NumBytesInPacket 009D                        ?_rtcc_increment_minutes 002E  
                      ?_rtcc_increment_seconds 002E                                ??__flash_spi_tx 0064  
                                  ?__write_fat 0088                     __display_efficiency@footer 00B8  
                      __size_of__display_inout 021C                   ?_i2c_eeprom_read_calibration 002E  
                             __rtcc_verify_bcd 2E90                             _log_generate_entry B0C4  
              i2c_eeprom_read_calibration@addr 007F                   __end_of_USBTransferOnePacket F00A  
                         ?__buck_set_dutycycle 002E                i2c_eeprom_read_calibration@cntr 0081  
                                  _CCP1CONbits 000FBA                       _rtcc_get_seconds_decimal 4212  
                          _system_output_is_on 3FF0            __end_ofi2_ExternalFlash_MediaDetect 42F8  
                        i2c_eeprom_read@length 0075                    i2_ExternalFlash_MediaDetect 42F4  
                          rtcc_set_month@month 0060                     __display_efficiency@source 00A5  
                       i2c_display_cursor@line 006E                               __CFG_IOL1WAY$OFF 000000  
                          __get_dateTime@hours 0071                   __end_of__parse_command_short 04E8  
                          __get_dateTime@month 006F                                 ??_rtcc_get_day 0060  
                          __size_of__buck_stop 002C                 ?__flash_compare_page_to_buffer 0073  
                           __root_is_available 1966                              __CFG_WPEND$PAGE_0 000000  
            __end_of__fill_buffer_get_display1 2E90              __end_of__fill_buffer_get_display2 2E2E  
                          ?_log_generate_entry 0078             __flash_compare_page_to_buffer@page 0073  
                          __CFG_MSSP7B_EN$MSK7 000000                              ?_rtcc_read_eeprom 002E  
                __get_empty_cluster@fat_sector 0089                               ?_MSDErrorHandler 002E  
                      __size_of_rtcc_get_hours 0014                        __size_of_rtcc_get_month 0014  
                             __write_root@data 0088                         _USBCtrlTrfSetupHandler 1BB8  
               __end_of__display_outputs@F8722 9277                 __end_of__display_outputs@F8724 921B  
               __end_of__display_outputs@F8726 90DF                 __end_of__display_outputs@F8728 90CA  
       __end_of_system_calculate_input_current E724        __size_of_system_calculate_input_current 015A  
               _system_calculate_input_current E5CA                          ??_flash_partial_write 0087  
                    system_output_is_on@output 0060                                 ??_rtcc_set_day 0060  
                             __write_root@slot 008F                            __rtcc_write_disable 4102  
             ExternalFlash_CapacityRead@config 0060                        ?i2_USBTransferOnePacket 002E  
                     __size_of_display_prepare 0088                          __end_of_USBDeviceInit E310  
                           ??_rtcc_read_eeprom 008B          __end_of_USBIncrement1msInternalTimers 3EFC  
       __size_of_USBIncrement1msInternalTimers 0026                  _USBIncrement1msInternalTimers 3ED6  
                 __end_of__display_temperature DAA4                                 __end_of___lmul 25EE  
               __end_of_fat_get_empty_clusters 1312                                ??__display_itoa 007D  
                ?_ExternalFlash_SectorSizeRead 0060                                ??__display_time 0060  
           __end_of__display_temperature@F8773 90F3                     __display_temperature@F8773 90DF  
           __end_of__display_temperature@F8775 92DA                     __display_temperature@F8775 92CF  
           __end_of__display_temperature@F8777 92AB                     __display_temperature@F8777 929F  
           __end_of__display_temperature@F8779 929F                     __display_temperature@F8779 9293  
                          ?__root_is_available 002E                              __size_of_MSDTasks 02B4  
                        ??__buck_operate_local 0076                       __end_of_USBStallEndpoint EED6  
                                    i2memcpy@d 0034                       ?__buck_initial_dutycycle 002E  
                                    i2memcpy@n 0032                              ??_fat_create_file 00A3  
                      __end_ofi2_USBDeviceInit E874                                      i2memcpy@s 0036  
                    ??_APP_DeviceMSDInitialize 003C                                      i2memset@c 0030  
                                    i2memset@n 0032                                      i2memset@p 0034  
                        ?__sector_from_cluster 0060                           ?_system_output_is_on 002E  
                               __end_of_memcpy 2B12                                _MSDRetryAttempt 01F8  
                         i2USBStallEndpoint@ep 0033         __end_of_system_calculate_input_voltage FC2E  
      __size_of_system_calculate_input_voltage 0106                 _system_calculate_input_voltage FB28  
                               __end_of_memset 3A1C                          __get_output_power@pwr 006F  
                        ?_rtcc_decrement_hours 002E                               __CFG_DSWDTEN$OFF 000000  
                      __parse_command_long@cmd 0064                          ?_rtcc_decrement_month 002E  
                          __size_of__read_root 006C                  __size_of_i2c_digipot_reset_on 002C  
                            _USBBusIsSuspended 0027                      flash_partial_write@length 0083  
                               __end_of_ui_run FF3E                   __end_of_rtcc_get_day_decimal 4212  
        __get_available_root_entry@file_number 008E                                 __end_of_strlen 34F6  
                __display_temperature@internal 00BC                            __end_of__ui_encoder A470  
                    __flash_set_page_size@size 0077                                  _chargerOnTime 02B0  
                          start_initialization 0BA2                        ?_USBStdGetStatusHandler 002E  
                                ??__write_root 008A                      __size_of__get_temperature 002E  
                      ?_buck_remote_get_status 002E                           ??_log_generate_entry 007A  
                     i2SYSTEM_Initialize@state 0032                  ExternalFlash_SectorWrite@page 008D  
                USBCtrlTrfRxService@byteToRead 002F                         ??__flash_set_page_size 0073  
                            ??_MSDWriteHandler 008F              __end_of__get_available_root_entry 3B0C  
                     ??_rtcc_get_hours_decimal 0063                 get_next_eeprom_write_task@task 0060  
                            __size_ofi2_memcpy 005C                     i2c_display_cursor@position 006D  
                         ?__rtcc_write_disable 002E                         ?_MSDTransferTerminated 0039  
                            __size_ofi2_memset 002C                         __display_charger@F8740 92F7  
                       __display_charger@F8732 90A0                         __display_charger@F8742 92AB  
                       __display_charger@F8734 9190                         __display_charger@F8744 91FB  
                       __display_charger@F8736 917D                         __display_charger@F8738 930F  
                       __display_charger@F8746 908B                         __display_charger@F8748 90F3  
                              _USBMSDOutHandle 00DD               __ic2_display_set_address@address 006A  
               __end_of_rtcc_increment_minutes 3CEA                   __end_of_USBConfigureEndpoint 1B26  
               __end_of_rtcc_increment_seconds 3C96                           system_init@filename2 0171  
                                 ??__i2c_start 0060                                   ??__i2c_write 0068  
              __end_of_USBStdFeatureReqHandler D220                              USBStallEndpoint@p 0066  
                                _MSDHostNoData 00E5                           _task_list_read_index 001E  
                    _adc_calculate_temperature F4BC                           ??__root_is_available 0087  
               __size_of__update_modified_time 003E              __end_of_USBCtrlEPAllowStatusStage 0D2A  
                __size_of_system_output_toggle 0026                                    __buck_start 0778  
                __end_of__update_modified_time 374C           fat_get_empty_clusters@empty_clusters 008F  
                        ??__buck_set_dutycycle 0060                       __end_of_USBCtrlEPService 1A92  
                   __size_of_MSDProcessCommand 0160                           __system_encoder_init 34F6  
                                    __i2c_read 0D2A                        __size_of_rtcc_set_hours 001A  
                         rtcc_read_eeprom@date 008C                                      __i2c_send 42BA  
                      __size_of_rtcc_set_month 001A                                      __i2c_stop 42C4  
                         __flash_spi_tx@length 0062        _ExternalFlash_MediaInitialize$intlevel0 3E68  
                ??_i2c_eeprom_read_calibration 0079                              __size_of_i2c_init 000C  
                         __display_inout@F8671 9285                           __display_inout@F8665 91D8  
                         __display_inout@F8667 91C6                           __display_inout@F8669 9316  
                            _rtcc_write_eeprom 3374                      ??_USBCtrlEPAllowDataStage 002F  
                             __buck_start@cntr 0075                                 USBDeviceInit@i 0068  
                             __buck_start@mode 0073                         __write_calibration@ptr 0099  
                __size_of_rtcc_increment_hours 002A                  __size_of_rtcc_increment_month 002A  
                __root_is_available@first_byte 008D                         _pBDTEntryEP0OutCurrent 001A  
                       __size_of_fat_find_file 00F4                             ?_rtcc_write_eeprom 002E  
                                  _DMACON1bits 000F88                         i2c_eeprom_write@length 006E  
                                  _DMACON2bits 000F86                            __size_of_flash_init 004E  
                      USBTransferOnePacket@dir 0060                               __flash_spi_tx_rx 119E  
                             __flash_spi_tx_tx 1312                        USBTransferOnePacket@len 0063  
                            __size_of__i2c_get 000A                    MSDErrorHandler@OldMSD_State 0069  
                                _MSDTasks$2694 00AD                                  _MSDTasks$2695 00AF  
               __end_ofi2_USBTransferOnePacket 0040                    __size_of_flash_partial_read 00A4  
                               __get_date@date 006B                                       ??___lmul 0068  
                             _outputVoltageSum 0292                        flash_partial_read@start 0075  
                               __get_date@year 0068                            _USBStdGetDscHandler F13C  
                       ?_system_encoder_enable 002E                         system_output_on@output 0060  
                            __CFG_ADCSEL$BIT10 000000              __size_of_APP_DeviceCustomHIDTasks 040A  
                                  __pdataBANK2 02BB                                    __pdataBANK3 03E4  
                                  __pdataBANK4 0400                  __size_of__buck_set_sync_async 0074  
                    ?_APP_DeviceCustomHIDTasks 002E                        rtcc_increment_year@year 0068  
                         __size_of_system_init 0118                 __size_of_i2c_digipot_backlight 0034  
                                     ??_memcpy 0066                        __size_of__i2c_wait_idle 0076  
                                     ??_memset 0066                           __display_inout@line1 0090  
                         system_init@extension 017A                           __display_inout@line2 00A2  
                 __size_of__parse_command_long 00EC                           __display_inout@line3 00C2  
                         __display_inout@line4 00B4                  __end_of_i2c_digipot_backlight 3980  
                                 ?__i2c_open_1 002E                         __size_of_ui_get_status 0006  
                          ??_rtcc_write_eeprom 0085                          ??_system_output_is_on 0060  
                                     ??_ui_run 008B                             __end_of__i2c_start 42D4  
                        __number_of_days@month 0063                             __end_of__i2c_write 3172  
                    __root_is_available@offset 008A                            __size_of__write_fat 0052  
                                     ??_strlen 0062                          __display_outputs@cntr 00A9  
                            __size_of___altoft 009E                         ??__i2c_not_acknowledge 0060  
                        __display_outputs@mode 00A8                         _USBActiveConfiguration 002D  
               __end_of_USBStdGetStatusHandler 151C                       _buck_dutycycle_last_step 01F2  
                              ??_log_start_new 0064                 __end_of_buck_remote_get_status 3A80  
                    __buck_operate_remote$8740 0076                              __size_of___ftpack 010C  
                            __size_of_adc_init 001C                              __size_of_adc_read 008E  
                                  __pbssCOMRAM 0001                                adc_read@channel 0062  
                   fat_append_to_file@position 00AC                    fat_create_file@next_cluster 00A7  
                              _flash_page_read 3DE6                      ??_i2c_display_write_fixed 0068  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                 __size_of_USBCtrlTrfInHandler 00C0                   ??_ExternalFlash_CapacityRead 0064  
               __size_of_MSDCheckForErrorCases 0130                                 __buck_pin_init 38AA  
                __end_of_MSDCheckForErrorCases F39E                          ??__rtcc_write_disable 0060  
                                    _gblBLKLen 02A6                      __size_of__display_charger 0340  
           __end_of_flash_command_pagesize_512 9432                     _flash_command_pagesize_512 942E  
           __end_of_flash_command_pagesize_528 942E                     _flash_command_pagesize_528 942A  
                         ?_USBStdGetDscHandler 002E                     i2c_set_frequency@frequency 0060  
                            ?_rtcc_set_minutes 002E                              ?_rtcc_set_seconds 002E  
                                    __get_date 221A                         __get_checksum@checksum 0064  
                                    __get_time 1EFA                    ?_get_next_eeprom_write_task 002E  
                          __end_of__write_root 2902                          ?__system_encoder_init 002E  
                   __end_of_USBWakeFromSuspend 3916                             ??_rtcc_set_minutes 0060  
                           ??_rtcc_set_seconds 0060                      __end_of_rtcc_write_eeprom 33C6  
                   __end_of_i2c_display_cursor 39B4                                     ?__i2c_read 0065  
                  __size_of__rtcc_write_enable 0016                                     ?__i2c_send 002E  
                              _USBStallHandler 35CC                                   _pBDTEntryOut 01D3  
                                   ?__i2c_stop 002E                        ?_buck_remote_set_enable 002E  
                   ?_buck_remote_get_dutycycle 002E                                      __read_fat 30BE  
               schedule_eeprom_write_task@task 0061                       __size_of_USBDeviceAttach 0038  
                      __rtcc_decrement_bcd@max 0065                        __rtcc_decrement_bcd@min 0064  
             __end_of_ExternalFlash_SectorRead 38AA                       __get_checksum@byte_array 0062  
                           i2_USBStallEndpoint FD34                      __size_of__display_outputs 0258  
                             ___lwdiv@dividend 0060                            flash_is_busy@status 0071  
                 buck_remote_get_status@retval 0060                              fat_find_file@name 0087  
               MSDProcessCommandMediaPresent@i 00A6                            fat_find_file@buffer 008B  
                            fat_find_file@slot 0096                                      __pintcode 9008  
                    fat_create_file@root_entry 00B0                        __fill_buffer_get_status CCE8  
                           _APP_DeviceMSDTasks 4224                                  __pmediumconst 908A  
                                     ?___aldiv 0060                            fat_find_file@offset 0099  
                                     ?___awdiv 0060                                      __ptext100 9466  
                                    __ptext101 D8A8                                      __ptext110 BB7E  
                                    __ptext102 D220                                      __ptext111 C77C  
                                    __ptext103 D478                                      __ptext200 4190  
                                    __ptext120 9B3E                                      __ptext112 34AC  
                                    __ptext104 B496                                      __ptext201 41A4  
                                    __ptext121 3BEA                                      __ptext113 353E  
                                    __ptext105 EC4E                                      __ptext210 15C0  
                                    __ptext202 3A4E                                      __ptext130 2578  
                                    __ptext122 0778                                      __ptext114 0F68  
                                    __ptext106 1660                                      __ptext211 2AAA  
                                    __ptext203 42E0                                      __ptext131 E1A2  
                                    __ptext123 2664                                      __ptext115 2D08  
                                    __ptext107 F80A                                      __ptext220 3ED6  
                                    __ptext212 EED6                                      __ptext204 42F0  
                                    __ptext140 BEBE                                      __ptext132 39E8  
                                    __ptext124 231A                                      __ptext116 2488  
                                    __ptext108 F5D8                                      __ptext221 19FC  
                                    __ptext205 42E6                                      __ptext141 42EC  
                                    __ptext133 3802                                      __ptext125 0850  
                                    __ptext117 2EEE                                      __ptext109 2C42  
                                    __ptext230 F13C                                      __ptext222 3006  
                                    __ptext214 16FE                                      __ptext206 2DCC  
                                    __ptext150 F00A                                      __ptext142 383A  
                                    __ptext134 2A42                                      __ptext126 10E2  
                                    __ptext118 FC2E                                      __ptext231 CF84  
                                    __ptext223 1BB8                                      __ptext215 EB08  
                                    __ptext207 2E2E                                      __ptext151 ED92  
                                    __ptext143 3172                                      __ptext135 4224  
                                    __ptext127 1C48                                      __ptext119 2828  
                                    __ptext240 208C                                      __ptext232 2006  
                                    __ptext224 0226                                      __ptext216 E724  
                                    __ptext208 378A                                      __ptext160 119E  
                                    __ptext152 1F80                                      __ptext144 2B78  
                                    __ptext136 CA34                                      __ptext128 4270  
                                    __ptext241 3F9A                                      __ptext233 32CE  
                                    __ptext225 1836                                      __ptext217 38E0  
                                    __ptext209 2396                                      __ptext161 09FE  
                                    __ptext153 3872                                      __ptext145 1312  
                                    __ptext137 E310                                      __ptext129 F4BC  
                                    __ptext250 0DEA                                      __ptext242 42F4  
                                    __ptext234 0928                                      __ptext226 05C4  
                                    __ptext218 3A80                                      __ptext170 3374  
                                    __ptext162 427C                                      __ptext154 3DE6  
                                    __ptext146 2500                                      __ptext138 2B12  
                                    __ptext251 0AD0                                      __ptext243 3916  
                                    __ptext235 069E                                      __ptext227 04E8  
                                    __ptext219 35CC                                      __ptext171 13C6  
                                    __ptext163 412C                                      __ptext155 151C  
                                    __ptext147 179C                                      __ptext139 A470  
                                    __ptext252 0000                                      __ptext244 FF3E  
                                    __ptext236 3278                                      __ptext228 3C16  
                                    __ptext180 4024                                      __ptext172 27B8  
                                    __ptext164 3E62                                      __ptext156 3EFC  
                                    __ptext148 D694                                      __ptext245 37C6  
                                    __ptext237 FD34                                      __ptext229 1472  
                                    __ptext181 403E                                      __ptext173 3118  
                                    __ptext165 42B0                                      __ptext157 2F4C  
                                    __ptext149 F26E                                      __ptext246 1A92  
                                    __ptext238 4246                                      __ptext190 3E10  
                                    __ptext182 4058                                      __ptext174 25EE  
                                    __ptext166 ACBA                                      __ptext158 296E  
                                    __ptext247 3062                                      __ptext239 F39E  
                                    __ptext191 2D6A                                      __ptext183 4072  
                                    __ptext175 42C4                                      __ptext167 0404  
                                    __ptext159 3652                                      __ptext248 F916  
                                    __ptext192 E9BE                                      __ptext184 408C  
                                    __ptext176 42CC                                      __ptext168 3414  
                                    __ptext249 0C68                                      __ptext193 3222  
                                    __ptext185 40EC                                      __ptext177 42BA  
                                    __ptext169 31CA                                      __ptext194 CCE8  
                                    __ptext186 4102                                      __ptext178 0318  
                                    __ptext195 42DA                                      __ptext187 3F40  
                                    __ptext179 400A                                      __ptext196 4140  
                                    __ptext188 3F5E                                      __ptext197 4154  
                                    __ptext189 3F7C                                      __ptext198 4168  
                                    __ptext199 417C                       __end_of_system_output_on 3462  
                          fat_find_file@sector 0097                                       ?___lldiv 0060  
                                     ?___fttol 0060                          __end_of_adc_calibrate 427C  
                                     ?___lwdiv 0060                                       ?___lwmod 0060  
                                    _hid_rpt01 93E1                                    __ui_encoder A02C  
                          ?i2_USBStallEndpoint 002E                         ??__sector_from_cluster 0062  
                                    _buck_init 4256                                      _idle_rate 01FF  
                       ??_rtcc_decrement_hours 0068                         ??_rtcc_decrement_month 0068  
                               __get_time@time 006B                               ?i2_USBDeviceInit 002E  
                        _buck_remote_dutycycle 00E1                       __display_efficiency@cntr 00D1  
                              __i2c_write@data 0065                               __get_input_power 2196  
                              __i2c_write@cntr 0069                            fat_create_file@name 009B  
                          ?_APP_DeviceMSDTasks 002E                      __size_ofi2_ResetSenseData 0086  
                         __display_time@setday 01C3             __flash_write_to_buffer@data_length 0077  
                          fat_create_file@size 009F                                   ??__buck_stop 0060  
                         _USBTransferOnePacket EED6                   __flash_spi_tx_rx@data_length 0066  
                   ?_ExternalFlash_MediaDetect 0060                         __end_of__buck_pin_init 38E0  
               ??_ExternalFlash_SectorSizeRead 0062                              ??_display_prepare 00D2  
                         __CFG_RTCOSC$T1OSCREF 000000                           __parse_command_short 0404  
                         __end_of_rtcc_get_day 41B8             __size_of_log_get_number_of_samples 000A  
                                _fat_find_file 0040                              __display_itoa@len 008D  
                            __display_itoa@pos 008F                              __display_itoa@tmp 0083  
                            ?_i2c_eeprom_tasks 002E                      __size_of_log_collect_data 02DE  
                 __end_of__rtcc_bcd_to_decimal 3E62                                       ?_ui_init 002E  
                  __size_of_buck_get_dutycycle 0006                              ?_i2c_eeprom_write 006A  
                 __end_of_USBCtrlTrfOutHandler 30BE                       __size_of_i2c_eeprom_read 0062  
                        ??_USBStdGetDscHandler 002E                 __size_of_i2c_digipot_reset_off 002C  
          __size_of__flash_copy_page_to_buffer 0078                                    _ep_data_out 01E1  
                             ___lwdiv@quotient 0065                                       ?_tmr_isr 002E  
              __size_of_rtcc_get_hours_decimal 0012                  __end_of_i2c_digipot_reset_off 3B92  
                           ??_i2c_eeprom_tasks 009D                                  _MSDWriteState 001F  
                 __size_of_USBCtrlTrfRxService 010C                __parse_command_calibration@dat1 0064  
              __parse_command_calibration@dat2 0065                __parse_command_calibration@dat3 0066  
                USBConfigureEndpoint@direction 002E                                       ?_strncmp 0060  
                          __display_efficiency B496                                 __display_clear 2C42  
                            __display_time@day 01CE                           __end_of_rtcc_set_day 40A6  
                           ??_i2c_eeprom_write 006F                      __size_of__i2c_acknowledge 000A  
                                ?__display_usb 002E                __parse_command_calibration@item 0063  
                            __display_time@tad 0180                                     ?__get_date 0064  
                            __display_time@pts 0100                           ??i2_USBStallEndpoint 002F  
              ?_i2c_display_send_init_sequence 002E               ??_i2c_display_send_init_sequence 006A  
                            __display_usb@cntr 00A5                                 __display_inout D478  
                                   ?__get_time 0064                                  _ui_get_status 42DA  
                 __size_ofi2_SYSTEM_Initialize 0054                 __end_of_buck_remote_set_enable 3F9A  
                         __display_temperature D8A8                                ___aldiv@divisor 0064  
                 __size_of_USBCtrlTrfTxService 00D2                                   ??__read_root 0089  
                         __display_usb@usb_off 0074                 __size_of_display_get_character 003C  
                              ___aldiv@counter 0068                           ??_APP_DeviceMSDTasks 00B2  
                __end_of_display_get_character 37C6                                      _extension 02F4  
                                     _LATAbits 000F89                                       _LATBbits 000F8A  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                     __end_of_USBCheckHIDRequest 0778  
               __root_is_available@file_number 008C                              __get_output_power 2112  
                   __end_of_rtcc_increment_day 3BBE           __flash_compare_page_to_buffer@buffer 0075  
                   ??_USBCtrlEPServiceComplete 002F                                     ?__read_fat 0087  
                     __size_of__number_of_days 007E                        __i2c_read@slave_address 006F  
                                     _IPR2bits 000FA2                                       _PIE2bits 000FA0  
                     ??_system_encoder_disable 0060                            __rtcc_decrement_bcd 36D0  
                         _rtcc_get_day_decimal 4200                    __size_of_fat_append_to_file 02BE  
                           ?__get_output_power 006D                                    _buck_status 001C  
                           __end_of__buck_stop 3C16           __flash_compare_page_to_buffer@status 0079  
                                     _PIR1bits 000F9E                                      _task_list 0468  
                                     _PIR2bits 000FA1                       ??_rtcc_decrement_minutes 0068  
                     ??_rtcc_decrement_seconds 0068                                 _rtcc_get_hours 4190  
                                     i2u912_40 0B4C                                       i2u912_47 0B42  
                                     i2u914_40 0B8C                                 _rtcc_get_month 4168  
                                     i2u914_47 0B82                                       i2u980_40 F1E8  
                                     i2u980_47 F1DE                                       i2u982_40 F240  
                                     i2u982_47 F236                                       _RCONbits 000FD0  
                    __size_of_rtcc_get_minutes 0014                      __size_of_rtcc_get_seconds 0014  
                                     i2u979_40 F1B8                                       i2u979_47 F1AE  
                             __CFG_WDTPS$32768 000000                   __end_of__buck_operate_remote FD34  
                                     _UEP0bits 000F26              __size_of__ic2_display_set_address 0034  
                  ??_buck_remote_set_dutycycle 0060                                       _MSDTasks CA34  
                   _USBDeferINDataStagePackets 0020                      ?__ic2_display_set_address 002E  
                      flash_partial_write@data 0085                    __size_of_USBCheckStdRequest 00DA  
              ??_MSDProcessCommandMediaPresent 0099                           ?__display_efficiency 002E  
                   ??_rtcc_get_minutes_decimal 0063                        flash_partial_write@page 007F  
                                    _rtcc_init 3F20                                       _UCONbits 000F65  
          __end_of_buck_remote_set_synchronous 3F5E                          _temperatureOnboardSum 027A  
                  _buck_remote_set_synchronous 3F40                           _USBConfigureEndpoint 1A92  
                          ??__get_output_power 006F                            _rtcc_decrement_year 3D14  
                                   ?_buck_init 002E                              __i2c_write@length 0067  
                      __end_of_flash_page_read 3E10             __flash_write_page_from_buffer@page 0073  
             __size_of_USBStdFeatureReqHandler 029C                                 _USBMSDInHandle 00DB  
                     __end_of__rtcc_verify_bcd 2EEE                                     _ADCON0bits 000FC2  
                                   _ADCON1bits 000FC1                         __display_time@sethours 01B0  
                        ?_USBTransferOnePacket 0060                         __display_time@setmonth 01A6  
                            __read_root@offset 008C                         __display_time@pressday 0160  
                  __display_charger@supply_off 014D                    __size_of_rtcc_decrement_day 002C  
                            _outputCapacitySum 027E                 __size_of_rtcc_get_year_decimal 0012  
          _ExternalFlash_MediaDetect$intlevel0 42B6                              _SYS_InterruptHigh 9008  
                     ??_rtcc_get_month_decimal 0063                  __end_of_rtcc_get_year_decimal 41EE  
                           __end_of__read_root 296E                          ?__parse_command_short 002E  
                              ?__buck_pin_init 002E                           ?__rtcc_decrement_bcd 0064  
                    i2c_display_cursor@address 006F                               __CFG_WPFP$PAGE_1 000000  
                               ?_fat_find_file 0087                   i2c_eeprom_read@slave_address 0078  
                                 ??_flash_init 0078                                   _RemoteWakeup 0028  
            __end_of_ExternalFlash_MediaDetect 42BA                             __get_dateTime@year 006E  
                                     i2_memcpy 3006                                       i2_memset 3C16  
                             __get_temperature 3AB0              MSDCheckForErrorCases@DeviceNoData 006F  
                   ??_rtcc_get_seconds_decimal 0063                                    __write_root 2896  
                           ?_SYS_InterruptHigh 002E                         __end_of__display_clear 2CA6  
                       __size_of_rtcc_get_year 0014                      __size_of_rtcc_correct_day 0026  
                      __end_of_USBStallHandler 3612                         __end_of__display_inout D694  
                            ?_flash_page_write 007F              __end_of_log_get_number_of_samples 4292  
                               __i2c_read@data 0065                ??__flash_write_page_from_buffer 0076  
                      __size_of_display_update 008A                                 ??__display_usb 0060  
                               __i2c_read@cntr 0070                              ___lmul@multiplier 0060  
                                  _INTCON2bits 000FF1                                    _INTCON3bits 000FF0  
                                    copy_data0 0BB6                                      copy_data1 0BD6  
                                    copy_data2 0BF6                   __size_of__system_timer0_init 0040  
                               ?_ui_get_status 002E                         ??__system_encoder_init 0060  
                  ??_USBCtrlEPAllowStatusStage 002E                           ?_rtcc_decrement_year 002E  
                 fat_create_file@cluster_count 00A9                    __end_of_USBStdSetCfgHandler 05C4  
                        ?__display_temperature 002E                             ??_flash_page_write 0083  
                                 ??__write_fat 008C                      __end_of__get_output_power 2196  
                  ?_schedule_eeprom_write_task 002E                                       _i2c_init 4264  
                                 _lowPowerTime 02AE                            ??_SYS_InterruptHigh 004D  
                   __size_of_rtcc_write_eeprom 0052                                 _rtcc_set_hours 4072  
                               _rtcc_set_month 403E     __i2c_eeprom_load_default_calibration@index 0062  
                       __size_of_buck_get_mode 0004                                    ??__i2c_read 0068  
                  __end_of__rtcc_increment_bcd 36D0             system_calculate_output_current@tmp 0070  
                                  ??__i2c_send 0060                                   _MSDReadState 01F9  
                           __write_calibration 1026                                    ??__i2c_stop 0060  
           buck_remote_set_dutycycle@dutycycle 0060                             __write_fat@cluster 0088  
                           __end_of_device_dsc 942A             adc_calculate_temperature@adc_value 006C  
                           __get_checksum@cntr 0065                         __end_of_rtcc_get_hours 41A4  
                     MSDErrorHandler@ErrorCase 0068                         __end_of_rtcc_get_month 417C  
                        ?_rtcc_get_day_decimal 002E                                       __i2c_get 429C  
                            i2c_adc_start@gain 006B                        ?_USBCtrlTrfSetupHandler 002E  
                              _fat_create_file DAA4                         __size_of_rtcc_set_year 001A  
                    ??__fill_buffer_get_status 0061                                     _ANCON0bits 000F48  
                   __end_of_buck_remote_set_on 3F7C                                     _ANCON1bits 000F49  
                      USBStdGetStatusHandler@p 002F                                       __Hrparam 0000  
                          __display_itoa@value 0078                          __display_charger@cntr 018E  
                 __size_of_rtcc_increment_year 002A                                      memcpy@tmp 0066  
                                     __Lrparam 0000             __size_of_adc_calculate_temperature 011C  
                       USBTransferOnePacket@ep 0068                         _rtcc_get_hours_decimal 41CA  
                               _buck_dutycycle 00E4                            ?__write_calibration 002E  
                          rtcc_correct_day@day 0064                                       _SetupPkt 000D30  
                          rtcc_correct_day@max 0065                             __end_of_flash_init 3414  
                        ??__display_efficiency 0090                                 _TransferLength 00D9  
                    __get_empty_cluster@offset 008B                     __end_of_USBCheckMSDRequest 09FE  
                          __display_inout@cntr 00C5                                     ?_rtcc_init 002E  
                        ?_USBConfigureEndpoint 002E                           __number_of_days@year 0061  
                             __size_of___aldiv 011A                       _ExternalFlash_SectorRead 3872  
                    display_get_character@line 0063                         __size_of_flash_is_busy 0024  
                            ??_USBDeviceAttach 0060                                 __i2c_wait_idle 25EE  
                              _MSDWriteHandler BEBE                               __size_of___awdiv 00BE  
                         __display_outputs@low 008A                               __size_of___lldiv 00BC  
                                     ___altoft 1660                               __size_of___fttol 0144  
                             __size_of___lwdiv 0078                               __size_of___lwmod 0062  
    ExternalFlash_SectorWrite@allowWriteToZero 008C                                       ___ftpack F80A  
         __size_ofi2_ExternalFlash_MediaDetect 0004                                    _MSDCBWValid 01F5  
                    __end_of_SYS_InterruptHigh 9086                                 _buck_remote_on 00E3  
                            ?_USBStallEndpoint 0060                     i2c_display_write_fixed@pos 0068  
              i2c_adc_start@configuration_byte 006D                                       _adc_init 3FB8  
                                     _adc_read 1C48                            __display_time@F8701 923B  
                          __display_time@F8681 92FF                            __display_time@F8683 92DA  
                          __display_time@F8675 9277                            __display_time@F8691 91B4  
                          __display_time@F8677 92EE                            __display_time@F8685 92C3  
                          __display_time@F8693 924B                            __display_time@F8679 92E4  
                          __display_time@F8687 92B7                            __display_time@F8695 91A2  
                          __display_time@F8689 9143                            __display_time@F8697 912F  
                          __display_time@F8699 911B                    __size_of__get_empty_cluster 0092  
                           __end_of__write_fat 3374                           __size_of__i2c_open_1 0018  
                        ??__rtcc_decrement_bcd 0066                             ??_USBStallEndpoint 0061  
              __flash_copy_page_to_buffer@page 0073             __end_of_ExternalFlash_CapacityRead 4140  
                   _ExternalFlash_CapacityRead 412C                        ??_MSDTransferTerminated 003B  
                schedule_eeprom_write_task@idx 0062                      __size_of_rtcc_read_eeprom 019C  
                      __size_of_USBDeviceTasks 0146                                ___lwdiv@divisor 0062  
              ?_system_calculate_input_current 002E               ??_system_calculate_input_current 006C  
                        __end_of__get_dateTime DE50                           ??__write_calibration 0085  
                        __end_of__get_checksum 35CC                      _buck_remote_set_dutycycle 3E10  
                              ?__display_clear 002E                       __end_of__flash_spi_tx_rx 125A  
                              ___lwdiv@counter 0064                       __end_of__flash_spi_tx_tx 13C6  
            __buck_operate_local@tmp_dutycycle 007C                                       __ptext10 3C42  
                                     __ptext11 3C6C                                       __ptext20 3D92  
                                     __ptext12 3C96                                       __ptext21 3DBC  
                                     __ptext13 3CC0                                       __ptext30 2E90  
                                     __ptext22 3BBE                                       __ptext14 3CEA  
                                     __ptext31 0134                                       __ptext23 36D0  
                                     __ptext15 3B92                                       __ptext40 4256  
                                     __ptext32 4264                                       __ptext24 F6F2  
                                     __ptext16 3692                                       __ptext41 40BE  
                                     __ptext33 40A6                                       __ptext25 4118  
                                     __ptext17 3D14                                       __ptext50 1CD6  
                                     __ptext42 38AA                                       __ptext34 E874  
                                     __ptext26 3F20                                       __ptext18 3D3E  
                              _inputCurrentSum 0296                                       __ptext51 B0C4  
                                     __ptext43 3FB8                                       __ptext35 2CA6  
                                     __ptext27 E006                                       __ptext19 3D68  
                                     __ptext60 3ADE                                       __ptext52 3AB0  
                                     __ptext44 3612                                       __ptext36 0D2A  
                                     __ptext28 3EB0                                       __ptext61 C4BE  
                                     __ptext53 0EAA                                       __ptext45 34F6  
                                     __ptext37 A8A6                                       __ptext29 229C  
                                     __ptext70 221A                                       __ptext62 2896  
                                     __ptext54 DC9A                                       __ptext46 FA22  
                                     __ptext38 33C6                                       __ptext71 41DC  
                                     __ptext63 3322                                       __ptext55 3586  
                                     __ptext47 E470                                       __ptext39 1DEA  
                                     __ptext80 C1E0                                       __ptext72 41EE  
                                     __ptext64 26D8                                       __ptext56 DAA4  
                                     __ptext48 FB28                                       __ptext81 3FF0  
                                     __ptext73 4200                                       __ptext65 2410  
                                     __ptext57 125A                                       __ptext49 E5CA  
                                     __ptext90 2FAA                                       __ptext82 4212  
                                     __ptext74 40D6                                       __ptext66 370E  
                                     __ptext58 0040                                       __ptext91 4292  
                                     __ptext83 3E3A                                       __ptext75 1966  
                                     __ptext67 1EFA                                       __ptext59 18D0  
                                     __ptext92 429C                                       __ptext84 2112  
                                     __ptext76 2902                                       __ptext68 41B8  
                                     __ptext93 42A6                                       __ptext85 2196  
                                     __ptext77 30BE                                       __ptext69 41CA  
                                     __ptext94 1D60                                       __ptext86 2748  
                                     __ptext78 1B26                                       __ptext95 2BDE  
                                     __ptext87 3B0C                                       __ptext79 4288  
                                     __ptext96 3980                                       __ptext88 1026  
                                     __ptext97 39B4                                       __ptext89 3462  
                                     __ptext98 1E72                                       __ptext99 DE50  
                             __display_charger BB7E            __size_of__parse_command_calibration 014A  
                             __size_of_ui_init 0014                                   _SSP1CON1bits 000FC6  
                              ?__display_inout 002E                                   _SSP1CON2bits 000FC5  
                                     _filename 02EB                  __buck_start@startup_dutycycle 0074  
                 __flash_set_page_size@command 0073                          ??_rtcc_decrement_year 0068  
                          __display_time@hours 01CF                         __end_of_rtcc_set_hours 408C  
                                 _SSP2CON1bits 000F72                               __size_of_tmr_isr 009E  
         __end_of_MSDProcessCommandMediaAbsent 2B78          __size_of_MSDProcessCommandMediaAbsent 0066  
                 _MSDProcessCommandMediaAbsent 2B12                                    ??__get_date 0066  
                        __flash_wakeup@command 0068                            __display_time@month 01CD  
                       __end_of_rtcc_set_month 4058               __size_of__buck_initial_dutycycle 00D8  
                                  ??__get_time 0066      buck_remote_change_dutycycle@new_dutycycle 0061  
                             __size_of_strncmp 0096                                   ?__buck_start 0072  
                          __parse_command_long 0318                            __display_usb@header 0060  
                   ?_ExternalFlash_SectorWrite 0084                ?_system_calculate_input_voltage 002E  
             ??_system_calculate_input_voltage 006C                 ExternalFlash_SectorRead@config 008B  
               ExternalFlash_SectorRead@buffer 0091              i2c_eeprom_read_calibration@buffer 007B  
                        __end_of__buck_prepare 2896             __end_of__flash_copy_page_to_buffer 2488  
                   __flash_copy_page_to_buffer 2410                        __size_of_ResetSenseData 0086  
             __end_of_APP_DeviceCustomHIDTasks B0C4                   __end_of_i2c_digipot_reset_on 3B66  
                            ??_i2c_eeprom_read 0076                          __end_of__flash_wakeup 2FAA  
               __end_of_USBCtrlTrfSetupHandler 1C48                                  __size_of_main 0368  
                            ?_USBCtrlEPService 002E                                  __size_of_itoa 0048  
                        __end_of__flash_spi_tx 29DA                                       _inq_resp 93BD  
                                __size_of_utoa 00BE                               __display_usb@low 0085  
                                  ??__read_fat 0089                    __end_of_flash_partial_write 2748  
                                   strncmp@len 0064                            __display_usb@usb_on 0095  
                              ?_rtcc_get_hours 002E             __buck_set_sync_async@new_dutycycle 0062  
                              ?_rtcc_get_month 002E                     __display_time@pressminutes 0114  
                   __display_time@pressseconds 0128                             ??_USBCtrlEPService 004B  
                             __display_outputs D220                        ??_system_encoder_enable 0060  
              __size_of_system_encoder_disable 0006                            _USBCtrlTrfInHandler 0DEA  
           _MSDProcessCommandMediaPresent$2712 009B               __get_empty_cluster@first_cluster 0087  
                  __end_of__buck_operate_local A02C           __parse_command_calibration@parameter 0069  
                                _rtcc_get_year 4140                          _calibrationParameters 0300  
              __size_of_rtcc_decrement_minutes 002A                __size_of_rtcc_decrement_seconds 002A  
                       __end_of__i2c_wait_idle 2664                           __rtcc_bcd_to_decimal 3E3A  
                                     _outPipes 0001                     ?__fill_buffer_get_display1 002E  
                   ?__fill_buffer_get_display2 002E                           _USBCtrlTrfOutHandler 3062  
                                     int$flags 005B              __end_of_adc_calculate_temperature F5D8  
                            ??__number_of_days 0060                      _USBCtrlEPAllowStatusStage 0C68  
                 __end_of_system_output_toggle 3EB0                           ?__parse_command_long 0063  
                            _system_output_off 31CA                                   _SSP1STATbits 000FC7  
                                  ??_buck_init 0060                              __get_dateTime@day 0070  
                       ??_USBTransferOnePacket 0064                     i2c_digipot_backlight@level 006A  
                        __size_of_rtcc_get_day 0014                               ?_flash_page_read 0087  
                                 _SSP2STATbits 000F73                                  _buck_get_mode 42F0  
                       __size_of_i2c_adc_start 004A                          __end_of__display_itoa CA34  
                        __end_of__display_time 9B3E                               i2_ResetSenseData 208C  
               ?_APP_DeviceCustomHIDInitialize 002E                                ??_fat_find_file 008B  
                           ?_system_output_off 002E                         ??__parse_command_short 008B  
               __end_of__display_charger@F8740 92FF                 __end_of__display_charger@F8732 90B5  
               __end_of__display_charger@F8742 92B7                 __end_of__display_charger@F8734 91A2  
               __end_of__display_charger@F8744 920B                 __end_of__display_charger@F8736 9190  
               __end_of__display_charger@F8738 9316                 __end_of__display_charger@F8746 90A0  
               __end_of__display_charger@F8748 9107          MSDProcessCommandMediaPresent@capacity 00A2  
                display_get_character@position 0060                       __size_of_MSDErrorHandler 0132  
                             system_init@F8581 0400                               system_init@F8573 02D8  
                             system_init@F8575 02E5                               system_init@F8577 03F6  
                             system_init@F8579 02E1                              rtcc_set_year@year 0060  
                    _USBDeferStatusStagePacket 0023                __end_of__fill_buffer_get_status CF84  
                                _rtcc_set_year 400A                   __end_of_rtcc_increment_hours 3D14  
                 __end_of_rtcc_increment_month 3CC0                                    _OSCTUNEbits 000F9B  
                                   _INTCONbits 000FF2                __size_of_rtcc_get_month_decimal 0012  
                        __size_of_rtcc_set_day 001A                              __write_fat@offset 008E  
                         ?_USBCtrlTrfInHandler 002E                                       memcpy@d1 0060  
                                     memcpy@s1 0062                           i2c_eeprom_write@data 006C  
                             _log_collect_data C1E0                           i2c_eeprom_write@cntr 0084  
                USBCtrlTrfTxService@byteToSend 002E                    __size_of_log_generate_entry 03D2  
              i2c_digipot_backlight@data_array 006B                       __number_of_days@bcd_year 0062  
                                     itoa@base 0074                    __end_of__buck_set_dutycycle 2396  
                              ??_ui_get_status 0060                                       memset@p1 0060  
                          ??_system_output_off 0060           __end_of_MSDComputeDeviceInAndResidue 0AD0  
        __size_of_MSDComputeDeviceInAndResidue 00D2                   _MSDComputeDeviceInAndResidue 09FE  
                             ?_USBStallHandler 002E                       USBStdFeatureReqHandler@p 0049  
                   ?__get_available_root_entry 002E                   __end_of__buck_set_sync_async 26D8  
                __size_of__flash_set_page_size 0088                         ??__display_temperature 0090  
                         __buck_operate_remote FC2E                                  _flash_is_busy 3EFC  
                             __i2c_acknowledge 42A6                                ?_rtcc_set_hours 002E  
                      __end_of_fat_create_file DC9A                                ?_rtcc_set_month 002E  
                                     intlevel2 0000                       __flash_get_status@status 006F  
              __flash_spi_tx_rx@command_length 0062                   adc_calculate_temperature@tmp 0075  
                   __size_of__get_output_power 0084                    __size_of__root_is_available 0096  
                       __size_of_USBDeviceInit 016E                  ?_MSDProcessCommandMediaAbsent 002E  
      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 208C       __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
            ??_USER_USB_CALLBACK_EVENT_HANDLER 0043               ?_USER_USB_CALLBACK_EVENT_HANDLER 003D  
              _USER_USB_CALLBACK_EVENT_HANDLER 2006                    rtcc_read_eeprom@error_found 008B  
                             ___lwmod@dividend 0060                   i2USBTransferOnePacket@handle 0037  
                      i2c_adc_start@resolution 006A              __end_of_ExternalFlash_SectorWrite 3872  
                             ___lldiv@dividend 0060          __end_of__flash_write_page_from_buffer 2578  
       __size_of__flash_write_page_from_buffer 0078                  __flash_write_page_from_buffer 2500  
                     __end_of__get_input_power 221A                         ??_rtcc_get_day_decimal 0063  
       i2SYSTEM_Initialize@pll_startup_counter 002E           SYSTEM_Initialize@pll_startup_counter 0061  
                        __update_modified_time 370E                                _display_content 0354  
                  ??_buck_remote_get_dutycycle 0060                     __end_of_flash_partial_read 15C0  
                      __end_of_MSDWriteHandler C1E0                                      strncmp@s1 0060  
                                    strncmp@s2 0062                                 ?_rtcc_get_year 002E  
                      __size_of_MSDReadHandler 0214                                   _rtcc_get_day 41A4  
                   i2USBTransferOnePacket@data 002F                                  ??_system_init 0093  
                        ?__rtcc_bcd_to_decimal 002E                               _rtcc_get_minutes 417C  
                             _rtcc_get_seconds 4154                    __end_of_system_output_is_on 400A  
                       ??_USBConfigureEndpoint 002F                                ?__i2c_wait_idle 002E  
                        ?_USBCtrlTrfOutHandler 002E                                _display_prepare 1E72  
             __end_of_rtcc_get_minutes_decimal 41CA                       ??__flash_write_to_buffer 007A  
                    __end_of_system_output_off 3222                      __size_of_rtcc_set_minutes 001A  
                     ?_APP_DeviceMSDInitialize 002E                      __size_of_rtcc_set_seconds 001A  
                    __display_efficiency@F8753 916A                      __display_efficiency@F8755 9157  
                    __display_efficiency@F8757 925B                            _USBCtrlTrfRxService F916  
                                  ??_rtcc_init 0093                             _USBWakeFromSuspend 38E0  
                        ??__parse_command_long 0064                           __end_of__display_usb E006  
                            ?_system_output_on 002E                                   ?__ui_encoder 002E  
                                 _rtcc_set_day 408C                             _i2c_display_cursor 3980  
                      _USBStdFeatureReqHandler CF84                        _temperatureExternal1Sum 0276  
                      _temperatureExternal2Sum 0272                      rtcc_increment_hours@hours 0068  
                               ?_buck_get_mode 002E                            i2_SYSTEM_Initialize 32CE  
                          _USBCtrlTrfTxService 0AD0                     __size_of_SYS_InterruptHigh 007E  
        __flash_write_page_from_buffer@command 0079                        __rtcc_increment_bcd@max 0065  
                           ??_system_output_on 0060                        __rtcc_increment_bcd@min 0064  
                                     utoa@base 006B                                     _RTCCFGbits 000F3F  
                              _gblMediaPresent 02B2                    __end_of__rtcc_write_disable 4118  
                               ?_rtcc_set_year 002E                                _inputVoltageSum 029A  
                        _i2c_digipot_backlight 394C            ExternalFlash_SectorRead@sector_addr 008D  
                          ?_USBWakeFromSuspend 002E                                     _PPSCONbits 000EBF  
                             ___lldiv@quotient 0068                                ___lwmod@divisor 0062  
                  ??_ExternalFlash_MediaDetect 0062                            ?_i2c_display_cursor 006D  
                        ??_USBCtrlTrfInHandler 002F                                       strlen@cp 0064  
                       _system_encoder_disable 42D4   __end_of__i2c_eeprom_load_default_calibration ACBA  
__size_of__i2c_eeprom_load_default_calibration 0414         ??__i2c_eeprom_load_default_calibration 0063  
        ?__i2c_eeprom_load_default_calibration 0060           __i2c_eeprom_load_default_calibration A8A6  
                 __flash_spi_tx_tx@data_length 0066                          _USBAlternateInterface 01FC  
                              ___lwmod@counter 0064                      __display_efficiency@panel 00C9  
             __end_of_rtcc_get_seconds_decimal 4224                  __size_of__i2c_not_acknowledge 000A  
                      _buck_remote_synchronous 00E2                                    _ptrNextData 01EB  
                        __end_of_log_start_new 0226                                   ___aldiv@sign 0069  
                       _rtcc_decrement_minutes 3D92                         _rtcc_decrement_seconds 3D3E  
                    i2USBTransferOnePacket@dir 002E                      i2USBTransferOnePacket@len 0031  
                          USBEnableEndpoint@ep 0039                                _endpoint_number 0026  
                             _rtcc_correct_day 3EB0                                 _display_update 1D60  
                        ?__buck_operate_remote 002E                                 ?_flash_is_busy 002E  
                         ?_USBCtrlTrfRxService 002E                          _MSDCheckForErrorCases F26E  
                         __get_input_power@pwr 0070                     __end_of__rtcc_write_enable 4102  
                ?_MSDComputeDeviceInAndResidue 0060               __end_of__ic2_display_set_address 39E8  
          __end_of_i2c_eeprom_read_calibration E9BE                    _i2c_eeprom_read_calibration E874  
                         ?i2_SYSTEM_Initialize 002E                       ?_USBCtrlEPAllowDataStage 002E  
                               _MSBBufferIndex 02B4                       __flash_spi_tx_rx@command 0060  
                         ?_USBCtrlTrfTxService 002E                                  _i2c_adc_start 3462  
                    flash_partial_read@address 0083             __end_of__parse_command_calibration EB08  
                   __parse_command_calibration E9BE                                     _USBMSDInit F39E  
                                ?_buck_operate 002E                   _USBStatusStageTimeoutCounter 0024  
              ??_ExternalFlash_MediaInitialize 0062                           ??_USBWakeFromSuspend 0045  
                   USBTransferOnePacket@handle 0069                         _rtcc_get_month_decimal 41EE  
                         ??_i2c_display_cursor 006E                      flash_partial_read@command 007F  
                    rtcc_increment_month@month 0068                       ??_fat_get_empty_clusters 0089  
                    __size_of_i2c_eeprom_tasks 0070                                     _USB_CD_Ptr 9319  
                     __end_of__get_temperature 3ADE                       __flash_spi_tx_tx@command 0060  
                    __size_of_i2c_eeprom_write 00AC                                    _power_state 00DF  
                                  _USBInHandle 00D7                       _APP_DeviceCustomHIDTasks ACBA  
