

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 26 15:11:44 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1,group=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	text251,global,reloc=2,class=CODE,delta=1
   275                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   276                           	psect	text252,global,reloc=2,class=CODE,delta=1
   277                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   278                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   279                           	dabs	1,0x600,512,_msd_buffer
   280                           	dabs	1,0xD00,48,_BDT
   281                           	dabs	1,0xD40,31,_msd_cbw
   282                           	dabs	1,0xD80,13,_msd_csw
   283                           	dabs	1,0xD38,8,_CtrlTrfData
   284                           	dabs	1,0xD30,8,_SetupPkt
   285  0000                     
   286                           ; Version 1.42
   287                           ; Generated 13/04/2017 GMT
   288                           ; 
   289                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   290                           ; All rights reserved.
   291                           ; 
   292                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   293                           ; 
   294                           ; Redistribution and use in source and binary forms, with or without modification, are
   295                           ; permitted provided that the following conditions are met:
   296                           ; 
   297                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   298                           ;        conditions and the following disclaimer.
   299                           ; 
   300                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   301                           ;        of conditions and the following disclaimer in the documentation and/or other
   302                           ;        materials provided with the distribution.
   303                           ; 
   304                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   305                           ;        software without specific prior written permission.
   306                           ; 
   307                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   308                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   309                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   310                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   311                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   312                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   313                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   314                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   315                           ; 
   316                           ; 
   317                           ; Code-generator required, PIC18F47J53 Definitions
   318                           ; 
   319                           ; SFR Addresses
   320  0000                     
   321                           	psect	idataBANK2
   322  01375A                     __pidataBANK2:
   323                           	opt stack 0
   324                           
   325                           ;initializer for _LUN
   326  01375A  70                 	db	low _ExternalFlash_MediaInitialize
   327  01375B  3E                 	db	high _ExternalFlash_MediaInitialize
   328  01375C  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   329  01375D  3A                 	db	low _ExternalFlash_CapacityRead
   330  01375E  41                 	db	high _ExternalFlash_CapacityRead
   331  01375F  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   332  013760  8A                 	db	low _ExternalFlash_SectorSizeRead
   333  013761  42                 	db	high _ExternalFlash_SectorSizeRead
   334  013762  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   335  013763  BE                 	db	low _ExternalFlash_MediaDetect
   336  013764  42                 	db	high _ExternalFlash_MediaDetect
   337  013765  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   338  013766  80                 	db	low _ExternalFlash_SectorRead
   339  013767  38                 	db	high _ExternalFlash_SectorRead
   340  013768  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   341  013769  FA                 	db	low _ExternalFlash_WriteProtectStateGet
   342  01376A  42                 	db	high _ExternalFlash_WriteProtectStateGet
   343  01376B  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   344  01376C  48                 	db	low _ExternalFlash_SectorWrite
   345  01376D  38                 	db	high _ExternalFlash_SectorWrite
   346  01376E  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   347  01376F  00                 	db	0
   348  013770  00                 	db	0
   349  013771  00                 	db	0
   350  013772  00                 	db	0
   351  013773  00                 	db	0
   352  013774  00                 	db	0
   353  013775  00                 	db	0
   354  013776  00                 	db	0
   355                           
   356                           ;initializer for system_init@F8573
   357  013777  54                 	db	84
   358  013778  45                 	db	69
   359  013779  53                 	db	83
   360  01377A  54                 	db	84
   361  01377B  20                 	db	32
   362  01377C  20                 	db	32
   363  01377D  20                 	db	32
   364  01377E  20                 	db	32
   365  01377F  00                 	db	0
   366                           
   367                           ;initializer for system_init@F8579
   368  013780  54                 	db	84
   369  013781  58                 	db	88
   370  013782  54                 	db	84
   371  013783  00                 	db	0
   372                           
   373                           ;initializer for system_init@F8575
   374  013784  54                 	db	84
   375  013785  58                 	db	88
   376  013786  54                 	db	84
   377  013787  00                 	db	0
   378                           
   379                           ;initializer for _battery_voltage_maximum
   380  013788  34BC               	dw	13500
   381                           
   382                           ;initializer for _filename
   383  01378A  4C                 	db	76
   384  01378B  4F                 	db	79
   385  01378C  47                 	db	71
   386  01378D  20                 	db	32
   387  01378E  20                 	db	32
   388  01378F  20                 	db	32
   389  013790  20                 	db	32
   390  013791  20                 	db	32
   391  013792  00                 	db	0
   392                           
   393                           ;initializer for _extension
   394  013793  54                 	db	84
   395  013794  58                 	db	88
   396  013795  54                 	db	84
   397  013796  00                 	db	0
   398                           
   399                           	psect	idataBANK3
   400  013FE2                     __pidataBANK3:
   401                           	opt stack 0
   402                           
   403                           ;initializer for i2c_display_init@F8357
   404  013FE2  3A                 	db	58
   405  013FE3  1E                 	db	30
   406  013FE4  39                 	db	57
   407  013FE5  0C                 	db	12
   408  013FE6  74                 	db	116
   409  013FE7  5C                 	db	92
   410  013FE8  6D                 	db	109
   411  013FE9  0C                 	db	12
   412  013FEA  01                 	db	1
   413                           
   414                           ;initializer for i2c_display_send_init_sequence@F8354
   415  013FEB  3A                 	db	58
   416  013FEC  1E                 	db	30
   417  013FED  39                 	db	57
   418  013FEE  0C                 	db	12
   419  013FEF  74                 	db	116
   420  013FF0  5C                 	db	92
   421  013FF1  6D                 	db	109
   422  013FF2  0C                 	db	12
   423  013FF3  01                 	db	1
   424                           
   425                           ;initializer for system_init@F8577
   426  013FF4  4E                 	db	78
   427  013FF5  45                 	db	69
   428  013FF6  57                 	db	87
   429  013FF7  46                 	db	70
   430  013FF8  49                 	db	73
   431  013FF9  4C                 	db	76
   432  013FFA  45                 	db	69
   433  013FFB  20                 	db	32
   434  013FFC  00                 	db	0
   435                           
   436                           	psect	idataBANK4
   437  0129E8                     __pidataBANK4:
   438                           	opt stack 0
   439                           
   440                           ;initializer for system_init@F8581
   441  0129E8  4A                 	db	74
   442  0129E9  75                 	db	117
   443  0129EA  73                 	db	115
   444  0129EB  74                 	db	116
   445  0129EC  20                 	db	32
   446  0129ED  61                 	db	97
   447  0129EE  70                 	db	112
   448  0129EF  70                 	db	112
   449  0129F0  65                 	db	101
   450  0129F1  6E                 	db	110
   451  0129F2  64                 	db	100
   452  0129F3  65                 	db	101
   453  0129F4  64                 	db	100
   454  0129F5  20                 	db	32
   455  0129F6  74                 	db	116
   456  0129F7  68                 	db	104
   457  0129F8  69                 	db	105
   458  0129F9  73                 	db	115
   459  0129FA  20                 	db	32
   460  0129FB  74                 	db	116
   461  0129FC  65                 	db	101
   462  0129FD  78                 	db	120
   463  0129FE  74                 	db	116
   464  0129FF  21                 	db	33
   465  012A00  20                 	db	32
   466  012A01  4E                 	db	78
   467  012A02  6F                 	db	111
   468  012A03  77                 	db	119
   469  012A04  20                 	db	32
   470  012A05  74                 	db	116
   471  012A06  68                 	db	104
   472  012A07  69                 	db	105
   473  012A08  73                 	db	115
   474  012A09  20                 	db	32
   475  012A0A  69                 	db	105
   476  012A0B  73                 	db	115
   477  012A0C  20                 	db	32
   478  012A0D  73                 	db	115
   479  012A0E  75                 	db	117
   480  012A0F  70                 	db	112
   481  012A10  65                 	db	101
   482  012A11  72                 	db	114
   483  012A12  2D                 	db	45
   484  012A13  6C                 	db	108
   485  012A14  6F                 	db	111
   486  012A15  6E                 	db	110
   487  012A16  67                 	db	103
   488  012A17  2E                 	db	46
   489  012A18  20                 	db	32
   490  012A19  69                 	db	105
   491  012A1A  74                 	db	116
   492  012A1B  20                 	db	32
   493  012A1C  67                 	db	103
   494  012A1D  6F                 	db	111
   495  012A1E  65                 	db	101
   496  012A1F  73                 	db	115
   497  012A20  20                 	db	32
   498  012A21  6F                 	db	111
   499  012A22  6E                 	db	110
   500  012A23  20                 	db	32
   501  012A24  61                 	db	97
   502  012A25  6E                 	db	110
   503  012A26  64                 	db	100
   504  012A27  20                 	db	32
   505  012A28  6F                 	db	111
   506  012A29  6E                 	db	110
   507  012A2A  20                 	db	32
   508  012A2B  61                 	db	97
   509  012A2C  6E                 	db	110
   510  012A2D  64                 	db	100
   511  012A2E  20                 	db	32
   512  012A2F  6F                 	db	111
   513  012A30  6E                 	db	110
   514  012A31  20                 	db	32
   515  012A32  2E                 	db	46
   516  012A33  2E                 	db	46
   517  012A34  2E                 	db	46
   518  012A35  20                 	db	32
   519  012A36  62                 	db	98
   520  012A37  75                 	db	117
   521  012A38  74                 	db	116
   522  012A39  20                 	db	32
   523  012A3A  66                 	db	102
   524  012A3B  69                 	db	105
   525  012A3C  6E                 	db	110
   526  012A3D  61                 	db	97
   527  012A3E  6C                 	db	108
   528  012A3F  6C                 	db	108
   529  012A40  79                 	db	121
   530  012A41  20                 	db	32
   531  012A42  69                 	db	105
   532  012A43  74                 	db	116
   533  012A44  20                 	db	32
   534  012A45  65                 	db	101
   535  012A46  6E                 	db	110
   536  012A47  64                 	db	100
   537  012A48  73                 	db	115
   538  012A49  20                 	db	32
   539  012A4A  48                 	db	72
   540  012A4B  45                 	db	69
   541  012A4C  52                 	db	82
   542  012A4D  45                 	db	69
   543  012A4E  2E                 	db	46
   544  012A4F  00                 	db	0
   545                           
   546                           	psect	mediumconst
   547  00908A                     __pmediumconst:
   548                           	opt stack 0
   549  00908A  00                 	db	0
   550  00908B                     __display_charger@F8746:
   551                           	opt stack 0
   552  00908B  43                 	db	67
   553  00908C  68                 	db	104
   554  00908D  61                 	db	97
   555  00908E  72                 	db	114
   556  00908F  67                 	db	103
   557  009090  65                 	db	101
   558  009091  72                 	db	114
   559  009092  20                 	db	32
   560  009093  41                 	db	65
   561  009094  73                 	db	115
   562  009095  79                 	db	121
   563  009096  6E                 	db	110
   564  009097  63                 	db	99
   565  009098  68                 	db	104
   566  009099  72                 	db	114
   567  00909A  6F                 	db	111
   568  00909B  6E                 	db	110
   569  00909C  6F                 	db	111
   570  00909D  75                 	db	117
   571  00909E  73                 	db	115
   572  00909F  00                 	db	0
   573  0090A0                     __end_of__display_charger@F8746:
   574                           	opt stack 0
   575  0090A0                     __display_charger@F8732:
   576                           	opt stack 0
   577  0090A0  4D                 	db	77
   578  0090A1  50                 	db	80
   579  0090A2  50                 	db	80
   580  0090A3  54                 	db	84
   581  0090A4  20                 	db	32
   582  0090A5  43                 	db	67
   583  0090A6  68                 	db	104
   584  0090A7  61                 	db	97
   585  0090A8  72                 	db	114
   586  0090A9  67                 	db	103
   587  0090AA  65                 	db	101
   588  0090AB  72                 	db	114
   589  0090AC  20                 	db	32
   590  0090AD  44                 	db	68
   591  0090AE  65                 	db	101
   592  0090AF  74                 	db	116
   593  0090B0  61                 	db	97
   594  0090B1  69                 	db	105
   595  0090B2  6C                 	db	108
   596  0090B3  73                 	db	115
   597  0090B4  00                 	db	0
   598  0090B5                     __end_of__display_charger@F8732:
   599                           	opt stack 0
   600  0090B5                     __display_outputs@F8728:
   601                           	opt stack 0
   602  0090B5  20                 	db	32
   603  0090B6  20                 	db	32
   604  0090B7  4F                 	db	79
   605  0090B8  75                 	db	117
   606  0090B9  74                 	db	116
   607  0090BA  33                 	db	51
   608  0090BB  20                 	db	32
   609  0090BC  6F                 	db	111
   610  0090BD  66                 	db	102
   611  0090BE  66                 	db	102
   612  0090BF  20                 	db	32
   613  0090C0  20                 	db	32
   614  0090C1  4F                 	db	79
   615  0090C2  75                 	db	117
   616  0090C3  74                 	db	116
   617  0090C4  34                 	db	52
   618  0090C5  20                 	db	32
   619  0090C6  6F                 	db	111
   620  0090C7  66                 	db	102
   621  0090C8  66                 	db	102
   622  0090C9  00                 	db	0
   623  0090CA                     __end_of__display_outputs@F8728:
   624                           	opt stack 0
   625  0090CA                     __display_outputs@F8726:
   626                           	opt stack 0
   627  0090CA  20                 	db	32
   628  0090CB  20                 	db	32
   629  0090CC  4F                 	db	79
   630  0090CD  75                 	db	117
   631  0090CE  74                 	db	116
   632  0090CF  31                 	db	49
   633  0090D0  20                 	db	32
   634  0090D1  6F                 	db	111
   635  0090D2  66                 	db	102
   636  0090D3  66                 	db	102
   637  0090D4  20                 	db	32
   638  0090D5  20                 	db	32
   639  0090D6  4F                 	db	79
   640  0090D7  75                 	db	117
   641  0090D8  74                 	db	116
   642  0090D9  32                 	db	50
   643  0090DA  20                 	db	32
   644  0090DB  6F                 	db	111
   645  0090DC  66                 	db	102
   646  0090DD  66                 	db	102
   647  0090DE  00                 	db	0
   648  0090DF                     __end_of__display_outputs@F8726:
   649                           	opt stack 0
   650  0090DF                     __display_temperature@F8773:
   651                           	opt stack 0
   652  0090DF  54                 	db	84
   653  0090E0  65                 	db	101
   654  0090E1  6D                 	db	109
   655  0090E2  70                 	db	112
   656  0090E3  65                 	db	101
   657  0090E4  72                 	db	114
   658  0090E5  61                 	db	97
   659  0090E6  74                 	db	116
   660  0090E7  75                 	db	117
   661  0090E8  72                 	db	114
   662  0090E9  65                 	db	101
   663  0090EA  20                 	db	32
   664  0090EB  4D                 	db	77
   665  0090EC  6F                 	db	111
   666  0090ED  6E                 	db	110
   667  0090EE  69                 	db	105
   668  0090EF  74                 	db	116
   669  0090F0  6F                 	db	111
   670  0090F1  72                 	db	114
   671  0090F2  00                 	db	0
   672  0090F3                     __end_of__display_temperature@F8773:
   673                           	opt stack 0
   674  0090F3                     __display_charger@F8748:
   675                           	opt stack 0
   676  0090F3  43                 	db	67
   677  0090F4  68                 	db	104
   678  0090F5  61                 	db	97
   679  0090F6  72                 	db	114
   680  0090F7  67                 	db	103
   681  0090F8  65                 	db	101
   682  0090F9  72                 	db	114
   683  0090FA  20                 	db	32
   684  0090FB  53                 	db	83
   685  0090FC  79                 	db	121
   686  0090FD  6E                 	db	110
   687  0090FE  63                 	db	99
   688  0090FF  68                 	db	104
   689  009100  72                 	db	114
   690  009101  6F                 	db	111
   691  009102  6E                 	db	110
   692  009103  6F                 	db	111
   693  009104  75                 	db	117
   694  009105  73                 	db	115
   695  009106  00                 	db	0
   696  009107                     __end_of__display_charger@F8748:
   697                           	opt stack 0
   698  009107                     __display_usb@F8712:
   699                           	opt stack 0
   700  009107  55                 	db	85
   701  009108  53                 	db	83
   702  009109  42                 	db	66
   703  00910A  20                 	db	32
   704  00910B  43                 	db	67
   705  00910C  68                 	db	104
   706  00910D  61                 	db	97
   707  00910E  72                 	db	114
   708  00910F  67                 	db	103
   709  009110  65                 	db	101
   710  009111  72                 	db	114
   711  009112  20                 	db	32
   712  009113  4F                 	db	79
   713  009114  75                 	db	117
   714  009115  74                 	db	116
   715  009116  70                 	db	112
   716  009117  75                 	db	117
   717  009118  74                 	db	116
   718  009119  73                 	db	115
   719  00911A  00                 	db	0
   720  00911B                     __end_of__display_usb@F8712:
   721                           	opt stack 0
   722  00911B                     __display_time@F8699:
   723                           	opt stack 0
   724  00911B  2D                 	db	45
   725  00911C  3E                 	db	62
   726  00911D  50                 	db	80
   727  00911E  72                 	db	114
   728  00911F  65                 	db	101
   729  009120  73                 	db	115
   730  009121  73                 	db	115
   731  009122  20                 	db	32
   732  009123  66                 	db	102
   733  009124  6F                 	db	111
   734  009125  72                 	db	114
   735  009126  20                 	db	32
   736  009127  73                 	db	115
   737  009128  65                 	db	101
   738  009129  63                 	db	99
   739  00912A  6F                 	db	111
   740  00912B  6E                 	db	110
   741  00912C  64                 	db	100
   742  00912D  73                 	db	115
   743  00912E  00                 	db	0
   744  00912F                     __end_of__display_time@F8699:
   745                           	opt stack 0
   746  00912F                     __display_time@F8697:
   747                           	opt stack 0
   748  00912F  2D                 	db	45
   749  009130  3E                 	db	62
   750  009131  50                 	db	80
   751  009132  72                 	db	114
   752  009133  65                 	db	101
   753  009134  73                 	db	115
   754  009135  73                 	db	115
   755  009136  20                 	db	32
   756  009137  66                 	db	102
   757  009138  6F                 	db	111
   758  009139  72                 	db	114
   759  00913A  20                 	db	32
   760  00913B  6D                 	db	109
   761  00913C  69                 	db	105
   762  00913D  6E                 	db	110
   763  00913E  75                 	db	117
   764  00913F  74                 	db	116
   765  009140  65                 	db	101
   766  009141  73                 	db	115
   767  009142  00                 	db	0
   768  009143                     __end_of__display_time@F8697:
   769                           	opt stack 0
   770  009143                     __display_time@F8689:
   771                           	opt stack 0
   772  009143  2D                 	db	45
   773  009144  3E                 	db	62
   774  009145  50                 	db	80
   775  009146  72                 	db	114
   776  009147  65                 	db	101
   777  009148  73                 	db	115
   778  009149  73                 	db	115
   779  00914A  20                 	db	32
   780  00914B  74                 	db	116
   781  00914C  6F                 	db	111
   782  00914D  20                 	db	32
   783  00914E  73                 	db	115
   784  00914F  65                 	db	101
   785  009150  74                 	db	116
   786  009151  20                 	db	32
   787  009152  74                 	db	116
   788  009153  69                 	db	105
   789  009154  6D                 	db	109
   790  009155  65                 	db	101
   791  009156  00                 	db	0
   792  009157                     __end_of__display_time@F8689:
   793                           	opt stack 0
   794  009157                     __display_efficiency@F8755:
   795                           	opt stack 0
   796  009157  50                 	db	80
   797  009158  61                 	db	97
   798  009159  6E                 	db	110
   799  00915A  65                 	db	101
   800  00915B  6C                 	db	108
   801  00915C  3A                 	db	58
   802  00915D  20                 	db	32
   803  00915E  20                 	db	32
   804  00915F  20                 	db	32
   805  009160  20                 	db	32
   806  009161  42                 	db	66
   807  009162  61                 	db	97
   808  009163  74                 	db	116
   809  009164  74                 	db	116
   810  009165  65                 	db	101
   811  009166  72                 	db	114
   812  009167  79                 	db	121
   813  009168  3A                 	db	58
   814  009169  00                 	db	0
   815  00916A                     __end_of__display_efficiency@F8755:
   816                           	opt stack 0
   817  00916A                     __display_efficiency@F8753:
   818                           	opt stack 0
   819  00916A  43                 	db	67
   820  00916B  68                 	db	104
   821  00916C  61                 	db	97
   822  00916D  72                 	db	114
   823  00916E  67                 	db	103
   824  00916F  65                 	db	101
   825  009170  72                 	db	114
   826  009171  20                 	db	32
   827  009172  45                 	db	69
   828  009173  66                 	db	102
   829  009174  66                 	db	102
   830  009175  69                 	db	105
   831  009176  63                 	db	99
   832  009177  69                 	db	105
   833  009178  65                 	db	101
   834  009179  6E                 	db	110
   835  00917A  63                 	db	99
   836  00917B  79                 	db	121
   837  00917C  00                 	db	0
   838  00917D                     __end_of__display_efficiency@F8753:
   839                           	opt stack 0
   840  00917D                     __display_charger@F8736:
   841                           	opt stack 0
   842  00917D  43                 	db	67
   843  00917E  68                 	db	104
   844  00917F  61                 	db	97
   845  009180  72                 	db	114
   846  009181  67                 	db	103
   847  009182  65                 	db	101
   848  009183  72                 	db	114
   849  009184  20                 	db	32
   850  009185  73                 	db	115
   851  009186  75                 	db	117
   852  009187  70                 	db	112
   853  009188  70                 	db	112
   854  009189  6C                 	db	108
   855  00918A  79                 	db	121
   856  00918B  20                 	db	32
   857  00918C  6F                 	db	111
   858  00918D  66                 	db	102
   859  00918E  66                 	db	102
   860  00918F  00                 	db	0
   861  009190                     __end_of__display_charger@F8736:
   862                           	opt stack 0
   863  009190                     __display_charger@F8734:
   864                           	opt stack 0
   865  009190  43                 	db	67
   866  009191  68                 	db	104
   867  009192  61                 	db	97
   868  009193  72                 	db	114
   869  009194  67                 	db	103
   870  009195  65                 	db	101
   871  009196  72                 	db	114
   872  009197  20                 	db	32
   873  009198  73                 	db	115
   874  009199  75                 	db	117
   875  00919A  70                 	db	112
   876  00919B  70                 	db	112
   877  00919C  6C                 	db	108
   878  00919D  79                 	db	121
   879  00919E  20                 	db	32
   880  00919F  6F                 	db	111
   881  0091A0  6E                 	db	110
   882  0091A1  00                 	db	0
   883  0091A2                     __end_of__display_charger@F8734:
   884                           	opt stack 0
   885  0091A2                     __display_time@F8695:
   886                           	opt stack 0
   887  0091A2  2D                 	db	45
   888  0091A3  3E                 	db	62
   889  0091A4  50                 	db	80
   890  0091A5  72                 	db	114
   891  0091A6  65                 	db	101
   892  0091A7  73                 	db	115
   893  0091A8  73                 	db	115
   894  0091A9  20                 	db	32
   895  0091AA  66                 	db	102
   896  0091AB  6F                 	db	111
   897  0091AC  72                 	db	114
   898  0091AD  20                 	db	32
   899  0091AE  68                 	db	104
   900  0091AF  6F                 	db	111
   901  0091B0  75                 	db	117
   902  0091B1  72                 	db	114
   903  0091B2  73                 	db	115
   904  0091B3  00                 	db	0
   905  0091B4                     __end_of__display_time@F8695:
   906                           	opt stack 0
   907  0091B4                     __display_time@F8691:
   908                           	opt stack 0
   909  0091B4  2D                 	db	45
   910  0091B5  3E                 	db	62
   911  0091B6  50                 	db	80
   912  0091B7  72                 	db	114
   913  0091B8  65                 	db	101
   914  0091B9  73                 	db	115
   915  0091BA  73                 	db	115
   916  0091BB  20                 	db	32
   917  0091BC  66                 	db	102
   918  0091BD  6F                 	db	111
   919  0091BE  72                 	db	114
   920  0091BF  20                 	db	32
   921  0091C0  6D                 	db	109
   922  0091C1  6F                 	db	111
   923  0091C2  6E                 	db	110
   924  0091C3  74                 	db	116
   925  0091C4  68                 	db	104
   926  0091C5  00                 	db	0
   927  0091C6                     __end_of__display_time@F8691:
   928                           	opt stack 0
   929  0091C6                     __display_inout@F8667:
   930                           	opt stack 0
   931  0091C6  20                 	db	32
   932  0091C7  20                 	db	32
   933  0091C8  20                 	db	32
   934  0091C9  49                 	db	73
   935  0091CA  6E                 	db	110
   936  0091CB  70                 	db	112
   937  0091CC  75                 	db	117
   938  0091CD  74                 	db	116
   939  0091CE  20                 	db	32
   940  0091CF  20                 	db	32
   941  0091D0  20                 	db	32
   942  0091D1  4F                 	db	79
   943  0091D2  75                 	db	117
   944  0091D3  74                 	db	116
   945  0091D4  70                 	db	112
   946  0091D5  75                 	db	117
   947  0091D6  74                 	db	116
   948  0091D7  00                 	db	0
   949  0091D8                     __end_of__display_inout@F8667:
   950                           	opt stack 0
   951  0091D8                     __display_inout@F8665:
   952                           	opt stack 0
   953  0091D8  56                 	db	86
   954  0091D9  6F                 	db	111
   955  0091DA  6C                 	db	108
   956  0091DB  74                 	db	116
   957  0091DC  61                 	db	97
   958  0091DD  67                 	db	103
   959  0091DE  65                 	db	101
   960  0091DF  20                 	db	32
   961  0091E0  26                 	db	38
   962  0091E1  20                 	db	32
   963  0091E2  43                 	db	67
   964  0091E3  75                 	db	117
   965  0091E4  72                 	db	114
   966  0091E5  72                 	db	114
   967  0091E6  65                 	db	101
   968  0091E7  6E                 	db	110
   969  0091E8  74                 	db	116
   970  0091E9  00                 	db	0
   971  0091EA                     __end_of__display_inout@F8665:
   972                           	opt stack 0
   973  0091EA                     __display_usb@F8718:
   974                           	opt stack 0
   975  0091EA  55                 	db	85
   976  0091EB  53                 	db	83
   977  0091EC  42                 	db	66
   978  0091ED  20                 	db	32
   979  0091EE  63                 	db	99
   980  0091EF  68                 	db	104
   981  0091F0  61                 	db	97
   982  0091F1  72                 	db	114
   983  0091F2  67                 	db	103
   984  0091F3  69                 	db	105
   985  0091F4  6E                 	db	110
   986  0091F5  67                 	db	103
   987  0091F6  20                 	db	32
   988  0091F7  6F                 	db	111
   989  0091F8  66                 	db	102
   990  0091F9  66                 	db	102
   991  0091FA  00                 	db	0
   992  0091FB                     __end_of__display_usb@F8718:
   993                           	opt stack 0
   994  0091FB                     __display_charger@F8744:
   995                           	opt stack 0
   996  0091FB  43                 	db	67
   997  0091FC  68                 	db	104
   998  0091FD  61                 	db	97
   999  0091FE  72                 	db	114
  1000  0091FF  67                 	db	103
  1001  009200  65                 	db	101
  1002  009201  72                 	db	114
  1003  009202  20                 	db	32
  1004  009203  53                 	db	83
  1005  009204  74                 	db	116
  1006  009205  61                 	db	97
  1007  009206  72                 	db	114
  1008  009207  74                 	db	116
  1009  009208  75                 	db	117
  1010  009209  70                 	db	112
  1011  00920A  00                 	db	0
  1012  00920B                     __end_of__display_charger@F8744:
  1013                           	opt stack 0
  1014  00920B                     __display_outputs@F8724:
  1015                           	opt stack 0
  1016  00920B  42                 	db	66
  1017  00920C  61                 	db	97
  1018  00920D  74                 	db	116
  1019  00920E  74                 	db	116
  1020  00920F  65                 	db	101
  1021  009210  72                 	db	114
  1022  009211  79                 	db	121
  1023  009212  20                 	db	32
  1024  009213  74                 	db	116
  1025  009214  6F                 	db	111
  1026  009215  6F                 	db	111
  1027  009216  20                 	db	32
  1028  009217  6C                 	db	108
  1029  009218  6F                 	db	111
  1030  009219  77                 	db	119
  1031  00921A  00                 	db	0
  1032  00921B                     __end_of__display_outputs@F8724:
  1033                           	opt stack 0
  1034  00921B                     __display_usb@F8716:
  1035                           	opt stack 0
  1036  00921B  55                 	db	85
  1037  00921C  53                 	db	83
  1038  00921D  42                 	db	66
  1039  00921E  20                 	db	32
  1040  00921F  63                 	db	99
  1041  009220  68                 	db	104
  1042  009221  61                 	db	97
  1043  009222  72                 	db	114
  1044  009223  67                 	db	103
  1045  009224  69                 	db	105
  1046  009225  6E                 	db	110
  1047  009226  67                 	db	103
  1048  009227  20                 	db	32
  1049  009228  6F                 	db	111
  1050  009229  6E                 	db	110
  1051  00922A  00                 	db	0
  1052  00922B                     __end_of__display_usb@F8716:
  1053                           	opt stack 0
  1054  00922B                     __display_usb@F8714:
  1055                           	opt stack 0
  1056  00922B  42                 	db	66
  1057  00922C  61                 	db	97
  1058  00922D  74                 	db	116
  1059  00922E  74                 	db	116
  1060  00922F  65                 	db	101
  1061  009230  72                 	db	114
  1062  009231  79                 	db	121
  1063  009232  20                 	db	32
  1064  009233  74                 	db	116
  1065  009234  6F                 	db	111
  1066  009235  6F                 	db	111
  1067  009236  20                 	db	32
  1068  009237  6C                 	db	108
  1069  009238  6F                 	db	111
  1070  009239  77                 	db	119
  1071  00923A  00                 	db	0
  1072  00923B                     __end_of__display_usb@F8714:
  1073                           	opt stack 0
  1074  00923B                     __display_time@F8701:
  1075                           	opt stack 0
  1076  00923B  2D                 	db	45
  1077  00923C  3E                 	db	62
  1078  00923D  50                 	db	80
  1079  00923E  72                 	db	114
  1080  00923F  65                 	db	101
  1081  009240  73                 	db	115
  1082  009241  73                 	db	115
  1083  009242  20                 	db	32
  1084  009243  74                 	db	116
  1085  009244  6F                 	db	111
  1086  009245  20                 	db	32
  1087  009246  73                 	db	115
  1088  009247  61                 	db	97
  1089  009248  76                 	db	118
  1090  009249  65                 	db	101
  1091  00924A  00                 	db	0
  1092  00924B                     __end_of__display_time@F8701:
  1093                           	opt stack 0
  1094  00924B                     __display_time@F8693:
  1095                           	opt stack 0
  1096  00924B  2D                 	db	45
  1097  00924C  3E                 	db	62
  1098  00924D  50                 	db	80
  1099  00924E  72                 	db	114
  1100  00924F  65                 	db	101
  1101  009250  73                 	db	115
  1102  009251  73                 	db	115
  1103  009252  20                 	db	32
  1104  009253  66                 	db	102
  1105  009254  6F                 	db	111
  1106  009255  72                 	db	114
  1107  009256  20                 	db	32
  1108  009257  64                 	db	100
  1109  009258  61                 	db	97
  1110  009259  79                 	db	121
  1111  00925A  00                 	db	0
  1112  00925B                     __end_of__display_time@F8693:
  1113                           	opt stack 0
  1114  00925B                     __display_efficiency@F8757:
  1115                           	opt stack 0
  1116  00925B  45                 	db	69
  1117  00925C  3A                 	db	58
  1118  00925D  20                 	db	32
  1119  00925E  20                 	db	32
  1120  00925F  20                 	db	32
  1121  009260  20                 	db	32
  1122  009261  20                 	db	32
  1123  009262  20                 	db	32
  1124  009263  20                 	db	32
  1125  009264  20                 	db	32
  1126  009265  20                 	db	32
  1127  009266  4C                 	db	76
  1128  009267  3A                 	db	58
  1129  009268  00                 	db	0
  1130  009269                     __end_of__display_efficiency@F8757:
  1131                           	opt stack 0
  1132  009269                     __display_outputs@F8722:
  1133                           	opt stack 0
  1134  009269  50                 	db	80
  1135  00926A  6F                 	db	111
  1136  00926B  77                 	db	119
  1137  00926C  65                 	db	101
  1138  00926D  72                 	db	114
  1139  00926E  20                 	db	32
  1140  00926F  4F                 	db	79
  1141  009270  75                 	db	117
  1142  009271  74                 	db	116
  1143  009272  70                 	db	112
  1144  009273  75                 	db	117
  1145  009274  74                 	db	116
  1146  009275  73                 	db	115
  1147  009276  00                 	db	0
  1148  009277                     __end_of__display_outputs@F8722:
  1149                           	opt stack 0
  1150  009277                     __display_time@F8675:
  1151                           	opt stack 0
  1152  009277  54                 	db	84
  1153  009278  69                 	db	105
  1154  009279  6D                 	db	109
  1155  00927A  65                 	db	101
  1156  00927B  20                 	db	32
  1157  00927C  61                 	db	97
  1158  00927D  6E                 	db	110
  1159  00927E  64                 	db	100
  1160  00927F  20                 	db	32
  1161  009280  44                 	db	68
  1162  009281  61                 	db	97
  1163  009282  74                 	db	116
  1164  009283  65                 	db	101
  1165  009284  00                 	db	0
  1166  009285                     __end_of__display_time@F8675:
  1167                           	opt stack 0
  1168  009285                     __display_inout@F8671:
  1169                           	opt stack 0
  1170  009285  41                 	db	65
  1171  009286  3A                 	db	58
  1172  009287  20                 	db	32
  1173  009288  2D                 	db	45
  1174  009289  2D                 	db	45
  1175  00928A  20                 	db	32
  1176  00928B  20                 	db	32
  1177  00928C  20                 	db	32
  1178  00928D  20                 	db	32
  1179  00928E  20                 	db	32
  1180  00928F  20                 	db	32
  1181  009290  2D                 	db	45
  1182  009291  2D                 	db	45
  1183  009292  00                 	db	0
  1184  009293                     __end_of__display_inout@F8671:
  1185                           	opt stack 0
  1186  009293                     __display_temperature@F8779:
  1187                           	opt stack 0
  1188  009293  45                 	db	69
  1189  009294  78                 	db	120
  1190  009295  74                 	db	116
  1191  009296  65                 	db	101
  1192  009297  72                 	db	114
  1193  009298  6E                 	db	110
  1194  009299  61                 	db	97
  1195  00929A  6C                 	db	108
  1196  00929B  20                 	db	32
  1197  00929C  32                 	db	50
  1198  00929D  3A                 	db	58
  1199  00929E  00                 	db	0
  1200  00929F                     __end_of__display_temperature@F8779:
  1201                           	opt stack 0
  1202  00929F                     __display_temperature@F8777:
  1203                           	opt stack 0
  1204  00929F  45                 	db	69
  1205  0092A0  78                 	db	120
  1206  0092A1  74                 	db	116
  1207  0092A2  65                 	db	101
  1208  0092A3  72                 	db	114
  1209  0092A4  6E                 	db	110
  1210  0092A5  61                 	db	97
  1211  0092A6  6C                 	db	108
  1212  0092A7  20                 	db	32
  1213  0092A8  31                 	db	49
  1214  0092A9  3A                 	db	58
  1215  0092AA  00                 	db	0
  1216  0092AB                     __end_of__display_temperature@F8777:
  1217                           	opt stack 0
  1218  0092AB                     __display_charger@F8742:
  1219                           	opt stack 0
  1220  0092AB  43                 	db	67
  1221  0092AC  68                 	db	104
  1222  0092AD  61                 	db	97
  1223  0092AE  72                 	db	114
  1224  0092AF  67                 	db	103
  1225  0092B0  65                 	db	101
  1226  0092B1  72                 	db	114
  1227  0092B2  20                 	db	32
  1228  0092B3  6F                 	db	111
  1229  0092B4  66                 	db	102
  1230  0092B5  66                 	db	102
  1231  0092B6  00                 	db	0
  1232  0092B7                     __end_of__display_charger@F8742:
  1233                           	opt stack 0
  1234  0092B7                     __display_time@F8687:
  1235                           	opt stack 0
  1236  0092B7  53                 	db	83
  1237  0092B8  65                 	db	101
  1238  0092B9  74                 	db	116
  1239  0092BA  20                 	db	32
  1240  0092BB  73                 	db	115
  1241  0092BC  65                 	db	101
  1242  0092BD  63                 	db	99
  1243  0092BE  6F                 	db	111
  1244  0092BF  6E                 	db	110
  1245  0092C0  64                 	db	100
  1246  0092C1  73                 	db	115
  1247  0092C2  00                 	db	0
  1248  0092C3                     __end_of__display_time@F8687:
  1249                           	opt stack 0
  1250  0092C3                     __display_time@F8685:
  1251                           	opt stack 0
  1252  0092C3  53                 	db	83
  1253  0092C4  65                 	db	101
  1254  0092C5  74                 	db	116
  1255  0092C6  20                 	db	32
  1256  0092C7  6D                 	db	109
  1257  0092C8  69                 	db	105
  1258  0092C9  6E                 	db	110
  1259  0092CA  75                 	db	117
  1260  0092CB  74                 	db	116
  1261  0092CC  65                 	db	101
  1262  0092CD  73                 	db	115
  1263  0092CE  00                 	db	0
  1264  0092CF                     __end_of__display_time@F8685:
  1265                           	opt stack 0
  1266  0092CF                     __display_temperature@F8775:
  1267                           	opt stack 0
  1268  0092CF  4F                 	db	79
  1269  0092D0  6E                 	db	110
  1270  0092D1  2D                 	db	45
  1271  0092D2  62                 	db	98
  1272  0092D3  6F                 	db	111
  1273  0092D4  61                 	db	97
  1274  0092D5  72                 	db	114
  1275  0092D6  64                 	db	100
  1276  0092D7  3A                 	db	58
  1277  0092D8  20                 	db	32
  1278  0092D9  00                 	db	0
  1279  0092DA                     __end_of__display_temperature@F8775:
  1280                           	opt stack 0
  1281  0092DA                     __display_time@F8683:
  1282                           	opt stack 0
  1283  0092DA  53                 	db	83
  1284  0092DB  65                 	db	101
  1285  0092DC  74                 	db	116
  1286  0092DD  20                 	db	32
  1287  0092DE  68                 	db	104
  1288  0092DF  6F                 	db	111
  1289  0092E0  75                 	db	117
  1290  0092E1  72                 	db	114
  1291  0092E2  73                 	db	115
  1292  0092E3  00                 	db	0
  1293  0092E4                     __end_of__display_time@F8683:
  1294                           	opt stack 0
  1295  0092E4                     __display_time@F8679:
  1296                           	opt stack 0
  1297  0092E4  53                 	db	83
  1298  0092E5  65                 	db	101
  1299  0092E6  74                 	db	116
  1300  0092E7  20                 	db	32
  1301  0092E8  6D                 	db	109
  1302  0092E9  6F                 	db	111
  1303  0092EA  6E                 	db	110
  1304  0092EB  74                 	db	116
  1305  0092EC  68                 	db	104
  1306  0092ED  00                 	db	0
  1307  0092EE                     __end_of__display_time@F8679:
  1308                           	opt stack 0
  1309  0092EE                     __display_time@F8677:
  1310                           	opt stack 0
  1311  0092EE  53                 	db	83
  1312  0092EF  65                 	db	101
  1313  0092F0  74                 	db	116
  1314  0092F1  20                 	db	32
  1315  0092F2  79                 	db	121
  1316  0092F3  65                 	db	101
  1317  0092F4  61                 	db	97
  1318  0092F5  72                 	db	114
  1319  0092F6  00                 	db	0
  1320  0092F7                     __end_of__display_time@F8677:
  1321                           	opt stack 0
  1322  0092F7                     __display_charger@F8740:
  1323                           	opt stack 0
  1324  0092F7  46                 	db	70
  1325  0092F8  61                 	db	97
  1326  0092F9  6E                 	db	110
  1327  0092FA  20                 	db	32
  1328  0092FB  6F                 	db	111
  1329  0092FC  66                 	db	102
  1330  0092FD  66                 	db	102
  1331  0092FE  00                 	db	0
  1332  0092FF                     __end_of__display_charger@F8740:
  1333                           	opt stack 0
  1334  0092FF                     __display_time@F8681:
  1335                           	opt stack 0
  1336  0092FF  53                 	db	83
  1337  009300  65                 	db	101
  1338  009301  74                 	db	116
  1339  009302  20                 	db	32
  1340  009303  64                 	db	100
  1341  009304  61                 	db	97
  1342  009305  79                 	db	121
  1343  009306  00                 	db	0
  1344  009307                     __end_of__display_time@F8681:
  1345                           	opt stack 0
  1346  009307                     _USB_SD_Ptr:
  1347                           	opt stack 0
  1348  009307  32                 	db	low _sd000
  1349  009308  94                 	db	high _sd000
  1350  009309  5B                 	db	low _sd001
  1351  00930A  93                 	db	high _sd001
  1352  00930B  8F                 	db	low _sd002
  1353  00930C  93                 	db	high _sd002
  1354  00930D  FE                 	db	low _sd003
  1355  00930E  93                 	db	high _sd003
  1356  00930F                     __end_of_USB_SD_Ptr:
  1357                           	opt stack 0
  1358  00930F                     __display_charger@F8738:
  1359                           	opt stack 0
  1360  00930F  46                 	db	70
  1361  009310  61                 	db	97
  1362  009311  6E                 	db	110
  1363  009312  20                 	db	32
  1364  009313  6F                 	db	111
  1365  009314  6E                 	db	110
  1366  009315  00                 	db	0
  1367  009316                     __end_of__display_charger@F8738:
  1368                           	opt stack 0
  1369  009316                     __display_inout@F8669:
  1370                           	opt stack 0
  1371  009316  56                 	db	86
  1372  009317  3A                 	db	58
  1373  009318  00                 	db	0
  1374  009319                     __end_of__display_inout@F8669:
  1375                           	opt stack 0
  1376  009319                     _USB_CD_Ptr:
  1377                           	opt stack 0
  1378  009319  1B                 	db	low _configDescriptor1
  1379  00931A  93                 	db	high _configDescriptor1
  1380  00931B                     __end_of_USB_CD_Ptr:
  1381                           	opt stack 0
  1382  00931B                     _configDescriptor1:
  1383                           	opt stack 0
  1384  00931B  09                 	db	9
  1385  00931C  02                 	db	2
  1386  00931D  40                 	db	64
  1387  00931E  00                 	db	0
  1388  00931F  02                 	db	2
  1389  009320  01                 	db	1
  1390  009321  00                 	db	0
  1391  009322  C0                 	db	192
  1392  009323  32                 	db	50
  1393  009324  09                 	db	9
  1394  009325  04                 	db	4
  1395  009326  00                 	db	0
  1396  009327  00                 	db	0
  1397  009328  02                 	db	2
  1398  009329  03                 	db	3
  1399  00932A  00                 	db	0
  1400  00932B  00                 	db	0
  1401  00932C  00                 	db	0
  1402  00932D  09                 	db	9
  1403  00932E  21                 	db	33
  1404  00932F  11                 	db	17
  1405  009330  01                 	db	1
  1406  009331  00                 	db	0
  1407  009332  01                 	db	1
  1408  009333  22                 	db	34
  1409  009334  1D                 	db	29
  1410  009335  00                 	db	0
  1411  009336  07                 	db	7
  1412  009337  05                 	db	5
  1413  009338  81                 	db	129
  1414  009339  03                 	db	3
  1415  00933A  40                 	db	64
  1416  00933B  00                 	db	0
  1417  00933C  01                 	db	1
  1418  00933D  07                 	db	7
  1419  00933E  05                 	db	5
  1420  00933F  01                 	db	1
  1421  009340  03                 	db	3
  1422  009341  40                 	db	64
  1423  009342  00                 	db	0
  1424  009343  01                 	db	1
  1425  009344  09                 	db	9
  1426  009345  04                 	db	4
  1427  009346  01                 	db	1
  1428  009347  00                 	db	0
  1429  009348  02                 	db	2
  1430  009349  08                 	db	8
  1431  00934A  06                 	db	6
  1432  00934B  50                 	db	80
  1433  00934C  00                 	db	0
  1434  00934D  07                 	db	7
  1435  00934E  05                 	db	5
  1436  00934F  82                 	db	130
  1437  009350  02                 	db	2
  1438  009351  40                 	db	64
  1439  009352  00                 	db	0
  1440  009353  01                 	db	1
  1441  009354  07                 	db	7
  1442  009355  05                 	db	5
  1443  009356  02                 	db	2
  1444  009357  02                 	db	2
  1445  009358  40                 	db	64
  1446  009359  00                 	db	0
  1447  00935A  01                 	db	1
  1448  00935B                     __end_of_configDescriptor1:
  1449                           	opt stack 0
  1450  00935B                     _sd001:
  1451                           	opt stack 0
  1452  00935B  34                 	db	52
  1453  00935C  03                 	db	3
  1454  00935D  0053               	dw	83
  1455  00935F  006F               	dw	111
  1456  009361  006C               	dw	108
  1457  009363  0064               	dw	100
  1458  009365  0065               	dw	101
  1459  009367  0072               	dw	114
  1460  009369  006E               	dw	110
  1461  00936B  0065               	dw	101
  1462  00936D  0072               	dw	114
  1463  00936F  0064               	dw	100
  1464  009371  002E               	dw	46
  1465  009373  0063               	dw	99
  1466  009375  006F               	dw	111
  1467  009377  006D               	dw	109
  1468  009379  0020               	dw	32
  1469  00937B  0020               	dw	32
  1470  00937D  0020               	dw	32
  1471  00937F  0020               	dw	32
  1472  009381  0020               	dw	32
  1473  009383  0020               	dw	32
  1474  009385  0020               	dw	32
  1475  009387  0020               	dw	32
  1476  009389  0020               	dw	32
  1477  00938B  0020               	dw	32
  1478  00938D  0020               	dw	32
  1479  00938F                     __end_of_sd001:
  1480                           	opt stack 0
  1481  00938F                     _sd002:
  1482                           	opt stack 0
  1483  00938F  2E                 	db	46
  1484  009390  03                 	db	3
  1485  009391  004D               	dw	77
  1486  009393  0050               	dw	80
  1487  009395  0050               	dw	80
  1488  009397  0054               	dw	84
  1489  009399  0053               	dw	83
  1490  00939B  006F               	dw	111
  1491  00939D  006C               	dw	108
  1492  00939F  0061               	dw	97
  1493  0093A1  0072               	dw	114
  1494  0093A3  0020               	dw	32
  1495  0093A5  0043               	dw	67
  1496  0093A7  0068               	dw	104
  1497  0093A9  0061               	dw	97
  1498  0093AB  0072               	dw	114
  1499  0093AD  0067               	dw	103
  1500  0093AF  0065               	dw	101
  1501  0093B1  0072               	dw	114
  1502  0093B3  0020               	dw	32
  1503  0093B5  0052               	dw	82
  1504  0093B7  0065               	dw	101
  1505  0093B9  0076               	dw	118
  1506  0093BB  0045               	dw	69
  1507  0093BD                     __end_of_sd002:
  1508                           	opt stack 0
  1509  0093BD                     _inq_resp:
  1510                           	opt stack 0
  1511  0093BD  00                 	db	0
  1512  0093BE  80                 	db	128
  1513  0093BF  04                 	db	4
  1514  0093C0  02                 	db	2
  1515  0093C1  20                 	db	32
  1516  0093C2  00                 	db	0
  1517  0093C3  00                 	db	0
  1518  0093C4  00                 	db	0
  1519  0093C5  4D                 	db	77
  1520  0093C6  69                 	db	105
  1521  0093C7  63                 	db	99
  1522  0093C8  72                 	db	114
  1523  0093C9  6F                 	db	111
  1524  0093CA  63                 	db	99
  1525  0093CB  68                 	db	104
  1526  0093CC  70                 	db	112
  1527  0093CD  4D                 	db	77
  1528  0093CE  61                 	db	97
  1529  0093CF  73                 	db	115
  1530  0093D0  73                 	db	115
  1531  0093D1  20                 	db	32
  1532  0093D2  53                 	db	83
  1533  0093D3  74                 	db	116
  1534  0093D4  6F                 	db	111
  1535  0093D5  72                 	db	114
  1536  0093D6  61                 	db	97
  1537  0093D7  67                 	db	103
  1538  0093D8  65                 	db	101
  1539  0093D9  20                 	db	32
  1540  0093DA  20                 	db	32
  1541  0093DB  20                 	db	32
  1542  0093DC  20                 	db	32
  1543  0093DD  30                 	db	48
  1544  0093DE  30                 	db	48
  1545  0093DF  30                 	db	48
  1546  0093E0  31                 	db	49
  1547  0093E1                     __end_of_inq_resp:
  1548                           	opt stack 0
  1549  0093E1                     _hid_rpt01:
  1550                           	opt stack 0
  1551  0093E1  06                 	db	6
  1552  0093E2  00                 	db	0
  1553  0093E3  FF                 	db	255
  1554  0093E4  09                 	db	9
  1555  0093E5  01                 	db	1
  1556  0093E6  A1                 	db	161
  1557  0093E7  01                 	db	1
  1558  0093E8  19                 	db	25
  1559  0093E9  01                 	db	1
  1560  0093EA  29                 	db	41
  1561  0093EB  40                 	db	64
  1562  0093EC  15                 	db	21
  1563  0093ED  00                 	db	0
  1564  0093EE  26                 	db	38
  1565  0093EF  FF                 	db	255
  1566  0093F0  00                 	db	0
  1567  0093F1  75                 	db	117
  1568  0093F2  08                 	db	8
  1569  0093F3  95                 	db	149
  1570  0093F4  40                 	db	64
  1571  0093F5  81                 	db	129
  1572  0093F6  00                 	db	0
  1573  0093F7  19                 	db	25
  1574  0093F8  01                 	db	1
  1575  0093F9  29                 	db	41
  1576  0093FA  40                 	db	64
  1577  0093FB  91                 	db	145
  1578  0093FC  00                 	db	0
  1579  0093FD  C0                 	db	192
  1580  0093FE                     __end_of_hid_rpt01:
  1581                           	opt stack 0
  1582  0093FE                     _sd003:
  1583                           	opt stack 0
  1584  0093FE  1A                 	db	26
  1585  0093FF  03                 	db	3
  1586  009400  0031               	dw	49
  1587  009402  0032               	dw	50
  1588  009404  0033               	dw	51
  1589  009406  0034               	dw	52
  1590  009408  0035               	dw	53
  1591  00940A  0036               	dw	54
  1592  00940C  0037               	dw	55
  1593  00940E  0038               	dw	56
  1594  009410  0039               	dw	57
  1595  009412  0030               	dw	48
  1596  009414  0039               	dw	57
  1597  009416  0039               	dw	57
  1598  009418                     __end_of_sd003:
  1599                           	opt stack 0
  1600  009418                     _device_dsc:
  1601                           	opt stack 0
  1602  009418  12                 	db	18
  1603  009419  01                 	db	1
  1604  00941A  0200               	dw	512
  1605  00941C  00                 	db	0
  1606  00941D  00                 	db	0
  1607  00941E  00                 	db	0
  1608  00941F  08                 	db	8
  1609  009420  04D8               	dw	1240
  1610  009422  F08E               	dw	61582
  1611  009424  0100               	dw	256
  1612  009426  01                 	db	1
  1613  009427  02                 	db	2
  1614  009428  00                 	db	0
  1615  009429  01                 	db	1
  1616  00942A                     __end_of_device_dsc:
  1617                           	opt stack 0
  1618  00942A                     _flash_command_pagesize_528:
  1619                           	opt stack 0
  1620  00942A  3D                 	db	61
  1621  00942B  2A                 	db	42
  1622  00942C  80                 	db	128
  1623  00942D  A7                 	db	167
  1624  00942E                     __end_of_flash_command_pagesize_528:
  1625                           	opt stack 0
  1626  00942E                     _flash_command_pagesize_512:
  1627                           	opt stack 0
  1628  00942E  3D                 	db	61
  1629  00942F  2A                 	db	42
  1630  009430  80                 	db	128
  1631  009431  A6                 	db	166
  1632  009432                     __end_of_flash_command_pagesize_512:
  1633                           	opt stack 0
  1634  009432                     _sd000:
  1635                           	opt stack 0
  1636  009432  04                 	db	4
  1637  009433  03                 	db	3
  1638  009434  0409               	dw	1033
  1639  009436                     __end_of_sd000:
  1640                           	opt stack 0
  1641  0000                     _RPINR22	set	3837
  1642  0000                     _RPOR22	set	3798
  1643  0000                     _RPOR21	set	3797
  1644  0000                     _RPINR21	set	3836
  1645  0000                     _RPOR5	set	3781
  1646  0000                     _RPOR6	set	3782
  1647  0000                     _RPINR2	set	3810
  1648  0000                     _RPINR3	set	3811
  1649  0000                     _RPINR1	set	3809
  1650  0000                     _PPSCONbits	set	3775
  1651  0000                     _CCPTMRS0bits	set	3922
  1652  0000                     _RTCVALH	set	3899
  1653  0000                     _RTCVALL	set	3898
  1654  0000                     _RTCCAL	set	3902
  1655  0000                     _RTCCFGbits	set	3903
  1656  0000                     _ANCON1bits	set	3913
  1657  0000                     _ANCON0bits	set	3912
  1658  0000                     _UEP0bits	set	3878
  1659  0000                     _UIEbits	set	3894
  1660  0000                     _UADDR	set	3896
  1661  0000                     _UIE	set	3894
  1662  0000                     _UEIE	set	3895
  1663  0000                     _UCFG	set	3897
  1664  0000                     _UEP1	set	3879
  1665  0000                     _UEP0	set	3878
  1666  0000                     _SSP2CON1bits	set	3954
  1667  0000                     _SSP2STATbits	set	3955
  1668  0000                     _RXADDRL	set	3945
  1669  0000                     _RXADDRH	set	3944
  1670  0000                     _DMABCL	set	3943
  1671  0000                     _DMABCH	set	3942
  1672  0000                     _TXADDRL	set	3947
  1673  0000                     _TXADDRH	set	3946
  1674  0000                     _DMACON2bits	set	3974
  1675  0000                     _DMACON1bits	set	3976
  1676  0000                     _ADRESL	set	4035
  1677  0000                     _ADRESH	set	4036
  1678  0000                     _ADCON1bits	set	4033
  1679  0000                     _ADCON0bits	set	4034
  1680  0000                     _CCP1CON	set	4026
  1681  0000                     _TMR2	set	4044
  1682  0000                     _PR2	set	4043
  1683  0000                     _CCPR1L	set	4027
  1684  0000                     _CCP1CONbits	set	4026
  1685  0000                     _T2CONbits	set	4042
  1686  0000                     _SSP1BUF	set	4041
  1687  0000                     _SSP1CON2bits	set	4037
  1688  0000                     _SSP1CON1bits	set	4038
  1689  0000                     _SSP1ADD	set	4040
  1690  0000                     _SSP1STATbits	set	4039
  1691  0000                     _T1CONbits	set	4045
  1692  0000                     _TMR1L	set	4046
  1693  0000                     _TMR1H	set	4047
  1694  0000                     _PIR1bits	set	3998
  1695  0000                     _LATAbits	set	3977
  1696  0000                     _TRISEbits	set	3990
  1697  0000                     _LATEbits	set	3981
  1698  0000                     _LATCbits	set	3979
  1699  0000                     _TRISAbits	set	3986
  1700  0000                     _TRISBbits	set	3987
  1701  0000                     _LATBbits	set	3978
  1702  0000                     _TRISDbits	set	3989
  1703  0000                     _TRISCbits	set	3988
  1704  0000                     _T0CONbits	set	4053
  1705  0000                     _INTCON2bits	set	4081
  1706  0000                     _EECON2	set	4007
  1707  0000                     _PORTBbits	set	3969
  1708  0000                     _INTCON3bits	set	4080
  1709  0000                     _TMR0L	set	4054
  1710  0000                     _TMR0H	set	4055
  1711  0000                     _PORTAbits	set	3968
  1712  0000                     _OSCCON	set	4051
  1713  0000                     _OSCTUNEbits	set	3995
  1714  0000                     _LATDbits	set	3980
  1715  0000                     _INTCONbits	set	4082
  1716  0000                     _IPR2bits	set	4002
  1717  0000                     _RCONbits	set	4048
  1718  0000                     _UCON	set	3941
  1719  0000                     _USTAT	set	3940
  1720  0000                     _PIR2bits	set	4001
  1721  0000                     _UIRbits	set	3938
  1722  0000                     _UCONbits	set	3941
  1723  0000                     _UIR	set	3938
  1724  0000                     _UEIR	set	3939
  1725  0000                     _PIE2bits	set	4000
  1726  009436                     
  1727                           ; BSR set to: 1
  1728  009436  48                 	db	72	;'H'
  1729  009437  45                 	db	69	;'E'
  1730  009438  4C                 	db	76	;'L'
  1731  009439  4C                 	db	76	;'L'
  1732  00943A  4F                 	db	79	;'O'
  1733  00943B  20                 	db	32
  1734  00943C  57                 	db	87	;'W'
  1735  00943D  4F                 	db	79	;'O'
  1736  00943E  52                 	db	82	;'R'
  1737  00943F  4C                 	db	76	;'L'
  1738  009440  44                 	db	68	;'D'
  1739  009441  21                 	db	33
  1740  009442  00                 	db	0
  1741  009443                     
  1742                           ; BSR set to: 1
  1743  009443  53                 	db	83	;'S'
  1744  009444  6F                 	db	111	;'o'
  1745  009445  6C                 	db	108	;'l'
  1746  009446  61                 	db	97	;'a'
  1747  009447  72                 	db	114	;'r'
  1748  009448  43                 	db	67	;'C'
  1749  009449  68                 	db	104	;'h'
  1750  00944A  61                 	db	97	;'a'
  1751  00944B  72                 	db	114	;'r'
  1752  00944C  67                 	db	103	;'g'
  1753  00944D  72                 	db	114	;'r'
  1754  00944E  00                 	db	0
  1755  00944F                     
  1756                           ; BSR set to: 1
  1757  00944F  46                 	db	70	;'F'
  1758  009450  49                 	db	73	;'I'
  1759  009451  4C                 	db	76	;'L'
  1760  009452  45                 	db	69	;'E'
  1761  009453  20                 	db	32
  1762  009454  20                 	db	32
  1763  009455  20                 	db	32
  1764  009456  20                 	db	32
  1765  009457  00                 	db	0
  1766  009458                     STR_1:
  1767                           
  1768                           ; BSR set to: 1
  1769  009458  4D                 	db	77	;'M'
  1770  009459  53                 	db	83	;'S'
  1771  00945A  44                 	db	68	;'D'
  1772  00945B  4F                 	db	79	;'O'
  1773  00945C  53                 	db	83	;'S'
  1774  00945D  35                 	db	53	;'5'
  1775  00945E  2E                 	db	46
  1776  00945F  30                 	db	48	;'0'
  1777  009460  00                 	db	0
  1778  009461                     
  1779                           ; BSR set to: 1
  1780  009461  54                 	db	84	;'T'
  1781  009462  58                 	db	88	;'X'
  1782  009463  54                 	db	84	;'T'
  1783  009464  00                 	db	0
  1784  0000                     
  1785                           ; #config settings
  1786  009465  00                 	db	0	; dummy byte at the end
  1787  0000                     
  1788                           	psect	cinit
  1789  010BB0                     __pcinit:
  1790                           	opt stack 0
  1791  010BB0                     start_initialization:
  1792                           	opt stack 0
  1793  010BB0                     __initialization:
  1794                           	opt stack 0
  1795                           
  1796                           ; Initialize objects allocated to BANK4 (104 bytes)
  1797                           ; load TBLPTR registers with __pidataBANK4
  1798  010BB0  0EE8               	movlw	low __pidataBANK4
  1799  010BB2  6EF6               	movwf	tblptrl,c
  1800  010BB4  0E29               	movlw	high __pidataBANK4
  1801  010BB6  6EF7               	movwf	tblptrh,c
  1802  010BB8  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1803  010BBA  6EF8               	movwf	tblptru,c
  1804  010BBC  EE04  F000         	lfsr	0,__pdataBANK4
  1805  010BC0  EE10 F068          	lfsr	1,104
  1806  010BC4                     copy_data0:
  1807  010BC4  0009               	tblrd		*+
  1808  010BC6  CFF5 FFEE          	movff	tablat,postinc0
  1809  010BCA  50E5               	movf	postdec1,w,c
  1810  010BCC  50E1               	movf	fsr1l,w,c
  1811  010BCE  E1FA               	bnz	copy_data0
  1812                           
  1813                           ; Initialize objects allocated to BANK3 (27 bytes)
  1814                           ; load TBLPTR registers with __pidataBANK3
  1815  010BD0  0EE2               	movlw	low __pidataBANK3
  1816  010BD2  6EF6               	movwf	tblptrl,c
  1817  010BD4  0E3F               	movlw	high __pidataBANK3
  1818  010BD6  6EF7               	movwf	tblptrh,c
  1819  010BD8  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1820  010BDA  6EF8               	movwf	tblptru,c
  1821  010BDC  EE03  F0E4         	lfsr	0,__pdataBANK3
  1822  010BE0  EE10 F01B          	lfsr	1,27
  1823  010BE4                     copy_data1:
  1824  010BE4  0009               	tblrd		*+
  1825  010BE6  CFF5 FFEE          	movff	tablat,postinc0
  1826  010BEA  50E5               	movf	postdec1,w,c
  1827  010BEC  50E1               	movf	fsr1l,w,c
  1828  010BEE  E1FA               	bnz	copy_data1
  1829                           
  1830                           ; Initialize objects allocated to BANK2 (61 bytes)
  1831                           ; load TBLPTR registers with __pidataBANK2
  1832  010BF0  0E5A               	movlw	low __pidataBANK2
  1833  010BF2  6EF6               	movwf	tblptrl,c
  1834  010BF4  0E37               	movlw	high __pidataBANK2
  1835  010BF6  6EF7               	movwf	tblptrh,c
  1836  010BF8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1837  010BFA  6EF8               	movwf	tblptru,c
  1838  010BFC  EE02  F0BB         	lfsr	0,__pdataBANK2
  1839  010C00  EE10 F03D          	lfsr	1,61
  1840  010C04                     copy_data2:
  1841  010C04  0009               	tblrd		*+
  1842  010C06  CFF5 FFEE          	movff	tablat,postinc0
  1843  010C0A  50E5               	movf	postdec1,w,c
  1844  010C0C  50E1               	movf	fsr1l,w,c
  1845  010C0E  E1FA               	bnz	copy_data2
  1846                           
  1847                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1848  010C10  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1849  010C14  EE12 F000          	lfsr	1,512
  1850  010C18                     clear_0:
  1851  010C18  6AEE               	clrf	postinc0,c
  1852  010C1A  50E5               	movf	postdec1,w,c
  1853  010C1C  50E1               	movf	fsr1l,w,c
  1854  010C1E  E1FC               	bnz	clear_0
  1855  010C20  50E2               	movf	fsr1h,w,c
  1856  010C22  E1FA               	bnz	clear_0
  1857                           
  1858                           ; Clear objects allocated to BANK4 (80 bytes)
  1859  010C24  EE04  F068         	lfsr	0,__pbssBANK4
  1860  010C28  0E50               	movlw	80
  1861  010C2A                     clear_1:
  1862  010C2A  6AEE               	clrf	postinc0,c
  1863  010C2C  06E8               	decf	wreg,f,c
  1864  010C2E  E1FD               	bnz	clear_1
  1865                           
  1866                           ; Clear objects allocated to BANK3 (228 bytes)
  1867  010C30  EE03  F000         	lfsr	0,__pbssBANK3
  1868  010C34  0EE4               	movlw	228
  1869  010C36                     clear_2:
  1870  010C36  6AEE               	clrf	postinc0,c
  1871  010C38  06E8               	decf	wreg,f,c
  1872  010C3A  E1FD               	bnz	clear_2
  1873                           
  1874                           ; Clear objects allocated to BANK2 (187 bytes)
  1875  010C3C  EE02  F000         	lfsr	0,__pbssBANK2
  1876  010C40  0EBB               	movlw	187
  1877  010C42                     clear_3:
  1878  010C42  6AEE               	clrf	postinc0,c
  1879  010C44  06E8               	decf	wreg,f,c
  1880  010C46  E1FD               	bnz	clear_3
  1881                           
  1882                           ; Clear objects allocated to BANK1 (45 bytes)
  1883  010C48  EE01  F0D3         	lfsr	0,__pbssBANK1
  1884  010C4C  0E2D               	movlw	45
  1885  010C4E                     clear_4:
  1886  010C4E  6AEE               	clrf	postinc0,c
  1887  010C50  06E8               	decf	wreg,f,c
  1888  010C52  E1FD               	bnz	clear_4
  1889                           
  1890                           ; Clear objects allocated to BANK0 (17 bytes)
  1891  010C54  EE00  F0D7         	lfsr	0,__pbssBANK0
  1892  010C58  0E11               	movlw	17
  1893  010C5A                     clear_5:
  1894  010C5A  6AEE               	clrf	postinc0,c
  1895  010C5C  06E8               	decf	wreg,f,c
  1896  010C5E  E1FD               	bnz	clear_5
  1897                           
  1898                           ; Clear objects allocated to COMRAM (45 bytes)
  1899  010C60  EE00  F001         	lfsr	0,__pbssCOMRAM
  1900  010C64  0E2D               	movlw	45
  1901  010C66                     clear_6:
  1902  010C66  6AEE               	clrf	postinc0,c
  1903  010C68  06E8               	decf	wreg,f,c
  1904  010C6A  E1FD               	bnz	clear_6
  1905  010C6C                     end_of_initialization:
  1906                           	opt stack 0
  1907  010C6C                     __end_of__initialization:
  1908                           	opt stack 0
  1909  010C6C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1910  010C6E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1911  010C70  0100               	movlb	0
  1912  010C72  EF0B  F05C         	goto	_main	;jump to C main() function
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1h	equ	0xFE2
  1921                           fsr1l	equ	0xFE1
  1922                           
  1923                           	psect	bssCOMRAM
  1924  000001                     __pbssCOMRAM:
  1925                           	opt stack 0
  1926  000001                     _outPipes:
  1927                           	opt stack 0
  1928  000001                     	ds	9
  1929  00000A                     _inPipes:
  1930                           	opt stack 0
  1931  00000A                     	ds	6
  1932  000010                     _pBDTEntryIn:
  1933                           	opt stack 0
  1934  000010                     	ds	6
  1935  000016                     _averageCount:
  1936                           	opt stack 0
  1937  000016                     	ds	2
  1938  000018                     _pBDTEntryEP0OutNext:
  1939                           	opt stack 0
  1940  000018                     	ds	2
  1941  00001A                     _pBDTEntryEP0OutCurrent:
  1942                           	opt stack 0
  1943  00001A                     	ds	2
  1944  00001C                     _buck_status:
  1945                           	opt stack 0
  1946  00001C                     	ds	1
  1947  00001D                     _task_list_write_index:
  1948                           	opt stack 0
  1949  00001D                     	ds	1
  1950  00001E                     _task_list_read_index:
  1951                           	opt stack 0
  1952  00001E                     	ds	1
  1953  00001F                     _MSDWriteState:
  1954                           	opt stack 0
  1955  00001F                     	ds	1
  1956  000020                     _USBDeferINDataStagePackets:
  1957                           	opt stack 0
  1958  000020                     	ds	1
  1959  000021                     _USBStatusStageEnabledFlag2:
  1960                           	opt stack 0
  1961  000021                     	ds	1
  1962  000022                     _USBStatusStageEnabledFlag1:
  1963                           	opt stack 0
  1964  000022                     	ds	1
  1965  000023                     _USBDeferStatusStagePacket:
  1966                           	opt stack 0
  1967  000023                     	ds	1
  1968  000024                     _USBStatusStageTimeoutCounter:
  1969                           	opt stack 0
  1970  000024                     	ds	1
  1971  000025                     _BothEP0OutUOWNsSet:
  1972                           	opt stack 0
  1973  000025                     	ds	1
  1974  000026                     _endpoint_number:
  1975                           	opt stack 0
  1976  000026                     	ds	1
  1977  000027                     _USBBusIsSuspended:
  1978                           	opt stack 0
  1979  000027                     	ds	1
  1980  000028                     _RemoteWakeup:
  1981                           	opt stack 0
  1982  000028                     	ds	1
  1983  000029                     _controlTransferState:
  1984                           	opt stack 0
  1985  000029                     	ds	1
  1986  00002A                     _shortPacketStatus:
  1987                           	opt stack 0
  1988  00002A                     	ds	1
  1989  00002B                     _USBDeviceState:
  1990                           	opt stack 0
  1991  00002B                     	ds	1
  1992  00002C                     _USTATcopy:
  1993                           	opt stack 0
  1994  00002C                     	ds	1
  1995  00002D                     _USBActiveConfiguration:
  1996                           	opt stack 0
  1997  00002D                     	ds	1
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           
  2008                           	psect	bssBANK0
  2009  0000D7                     __pbssBANK0:
  2010                           	opt stack 0
  2011  0000D7                     _USBInHandle:
  2012                           	opt stack 0
  2013  0000D7                     	ds	2
  2014  0000D9                     _TransferLength:
  2015                           	opt stack 0
  2016  0000D9                     	ds	2
  2017  0000DB                     _USBMSDInHandle:
  2018                           	opt stack 0
  2019  0000DB                     	ds	2
  2020  0000DD                     _USBMSDOutHandle:
  2021                           	opt stack 0
  2022  0000DD                     	ds	2
  2023  0000DF                     _power_state:
  2024                           	opt stack 0
  2025  0000DF                     	ds	1
  2026  0000E0                     _idx:
  2027                           	opt stack 0
  2028  0000E0                     	ds	1
  2029  0000E1                     _buck_remote_dutycycle:
  2030                           	opt stack 0
  2031  0000E1                     	ds	1
  2032  0000E2                     _buck_remote_synchronous:
  2033                           	opt stack 0
  2034  0000E2                     	ds	1
  2035  0000E3                     _buck_remote_on:
  2036                           	opt stack 0
  2037  0000E3                     	ds	1
  2038  0000E4                     _buck_dutycycle:
  2039                           	opt stack 0
  2040  0000E4                     	ds	1
  2041  0000E5                     _MSDHostNoData:
  2042                           	opt stack 0
  2043  0000E5                     	ds	1
  2044  0000E6                     _MSDCommandState:
  2045                           	opt stack 0
  2046  0000E6                     	ds	1
  2047  0000E7                     _MSD_State:
  2048                           	opt stack 0
  2049  0000E7                     	ds	1
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           postinc0	equ	0xFEE
  2055                           wreg	equ	0xFE8
  2056                           postdec1	equ	0xFE5
  2057                           fsr1h	equ	0xFE2
  2058                           fsr1l	equ	0xFE1
  2059                           
  2060                           	psect	bssBANK1
  2061  0001D3                     __pbssBANK1:
  2062                           	opt stack 0
  2063  0001D3                     _pBDTEntryOut:
  2064                           	opt stack 0
  2065  0001D3                     	ds	6
  2066  0001D9                     _LBA:
  2067                           	opt stack 0
  2068  0001D9                     	ds	4
  2069  0001DD                     _USB1msTickCount:
  2070                           	opt stack 0
  2071  0001DD                     	ds	4
  2072  0001E1                     _ep_data_out:
  2073                           	opt stack 0
  2074  0001E1                     	ds	3
  2075  0001E4                     _ep_data_in:
  2076                           	opt stack 0
  2077  0001E4                     	ds	3
  2078  0001E7                     _system_ui_inactive_count:
  2079                           	opt stack 0
  2080  0001E7                     	ds	2
  2081  0001E9                     _USBOutHandle:
  2082                           	opt stack 0
  2083  0001E9                     	ds	2
  2084  0001EB                     _ptrNextData:
  2085                           	opt stack 0
  2086  0001EB                     	ds	2
  2087  0001ED                     _pDst:
  2088                           	opt stack 0
  2089  0001ED                     	ds	2
  2090  0001EF                     _lastSecond:
  2091                           	opt stack 0
  2092  0001EF                     	ds	1
  2093  0001F0                     _status:
  2094                           	opt stack 0
  2095  0001F0                     	ds	1
  2096  0001F1                     _buck_remote_enable:
  2097                           	opt stack 0
  2098  0001F1                     	ds	1
  2099  0001F2                     _buck_dutycycle_last_step:
  2100                           	opt stack 0
  2101  0001F2                     	ds	1
  2102  0001F3                     _userInterfaceStatus:
  2103                           	opt stack 0
  2104  0001F3                     	ds	1
  2105  0001F4                     _i2c_frequency:
  2106                           	opt stack 0
  2107  0001F4                     	ds	1
  2108  0001F5                     _MSDCBWValid:
  2109                           	opt stack 0
  2110  0001F5                     	ds	1
  2111  0001F6                     _SoftDetach:
  2112                           	opt stack 0
  2113  0001F6                     	ds	1
  2114  0001F7                     _gblCBWLength:
  2115                           	opt stack 0
  2116  0001F7                     	ds	1
  2117  0001F8                     _MSDRetryAttempt:
  2118                           	opt stack 0
  2119  0001F8                     	ds	1
  2120  0001F9                     _MSDReadState:
  2121                           	opt stack 0
  2122  0001F9                     	ds	1
  2123  0001FA                     _USBTicksSinceSuspendEnd:
  2124                           	opt stack 0
  2125  0001FA                     	ds	1
  2126  0001FB                     _USBDeferOUTDataStagePackets:
  2127                           	opt stack 0
  2128  0001FB                     	ds	1
  2129  0001FC                     _USBAlternateInterface:
  2130                           	opt stack 0
  2131  0001FC                     	ds	2
  2132  0001FE                     _active_protocol:
  2133                           	opt stack 0
  2134  0001FE                     	ds	1
  2135  0001FF                     _idle_rate:
  2136                           	opt stack 0
  2137  0001FF                     	ds	1
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           postinc0	equ	0xFEE
  2143                           wreg	equ	0xFE8
  2144                           postdec1	equ	0xFE5
  2145                           fsr1h	equ	0xFE2
  2146                           fsr1l	equ	0xFE1
  2147                           
  2148                           	psect	bssBANK2
  2149  000200                     __pbssBANK2:
  2150                           	opt stack 0
  2151  000200                     _os:
  2152                           	opt stack 0
  2153  000200                     	ds	65
  2154  000241                     _gblCBW:
  2155                           	opt stack 0
  2156  000241                     	ds	31
  2157  000260                     _gblSenseData:
  2158                           	opt stack 0
  2159  000260                     	ds	18
  2160  000272                     _temperatureExternal2Sum:
  2161                           	opt stack 0
  2162  000272                     	ds	4
  2163  000276                     _temperatureExternal1Sum:
  2164                           	opt stack 0
  2165  000276                     	ds	4
  2166  00027A                     _temperatureOnboardSum:
  2167                           	opt stack 0
  2168  00027A                     	ds	4
  2169  00027E                     _outputCapacitySum:
  2170                           	opt stack 0
  2171  00027E                     	ds	4
  2172  000282                     _inputCapacitySum:
  2173                           	opt stack 0
  2174  000282                     	ds	4
  2175  000286                     _outputPowerSum:
  2176                           	opt stack 0
  2177  000286                     	ds	4
  2178  00028A                     _inputPowerSum:
  2179                           	opt stack 0
  2180  00028A                     	ds	4
  2181  00028E                     _outputCurrentSum:
  2182                           	opt stack 0
  2183  00028E                     	ds	4
  2184  000292                     _outputVoltageSum:
  2185                           	opt stack 0
  2186  000292                     	ds	4
  2187  000296                     _inputCurrentSum:
  2188                           	opt stack 0
  2189  000296                     	ds	4
  2190  00029A                     _inputVoltageSum:
  2191                           	opt stack 0
  2192  00029A                     	ds	4
  2193  00029E                     _now:
  2194                           	opt stack 0
  2195  00029E                     	ds	4
  2196  0002A2                     _last:
  2197                           	opt stack 0
  2198  0002A2                     	ds	4
  2199  0002A6                     _gblBLKLen:
  2200                           	opt stack 0
  2201  0002A6                     	ds	4
  2202  0002AA                     _gblNumBLKS:
  2203                           	opt stack 0
  2204  0002AA                     	ds	4
  2205  0002AE                     _lowPowerTime:
  2206                           	opt stack 0
  2207  0002AE                     	ds	2
  2208  0002B0                     _chargerOnTime:
  2209                           	opt stack 0
  2210  0002B0                     	ds	2
  2211  0002B2                     _gblMediaPresent:
  2212                           	opt stack 0
  2213  0002B2                     	ds	2
  2214  0002B4                     _MSBBufferIndex:
  2215                           	opt stack 0
  2216  0002B4                     	ds	2
  2217  0002B6                     _mediaInformation:
  2218                           	opt stack 0
  2219  0002B6                     	ds	5
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           postinc0	equ	0xFEE
  2225                           wreg	equ	0xFE8
  2226                           postdec1	equ	0xFE5
  2227                           fsr1h	equ	0xFE2
  2228                           fsr1l	equ	0xFE1
  2229                           
  2230                           	psect	dataBANK2
  2231  0002BB                     __pdataBANK2:
  2232                           	opt stack 0
  2233  0002BB                     _LUN:
  2234                           	opt stack 0
  2235  0002BB                     	ds	29
  2236  0002D8                     system_init@F8573:
  2237                           	opt stack 0
  2238  0002D8                     	ds	9
  2239  0002E1                     system_init@F8579:
  2240                           	opt stack 0
  2241  0002E1                     	ds	4
  2242  0002E5                     system_init@F8575:
  2243                           	opt stack 0
  2244  0002E5                     	ds	4
  2245  0002E9                     _battery_voltage_maximum:
  2246                           	opt stack 0
  2247  0002E9                     	ds	2
  2248  0002EB                     _filename:
  2249                           	opt stack 0
  2250  0002EB                     	ds	9
  2251  0002F4                     _extension:
  2252                           	opt stack 0
  2253  0002F4                     	ds	4
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           fsr1h	equ	0xFE2
  2262                           fsr1l	equ	0xFE1
  2263                           
  2264                           	psect	bssBANK3
  2265  000300                     __pbssBANK3:
  2266                           	opt stack 0
  2267  000300                     _calibrationParameters:
  2268                           	opt stack 0
  2269  000300                     	ds	84
  2270  000354                     _display_content:
  2271                           	opt stack 0
  2272  000354                     	ds	80
  2273  0003A4                     _ToSendDataBuffer:
  2274                           	opt stack 0
  2275  0003A4                     	ds	64
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postdec1	equ	0xFE5
  2283                           fsr1h	equ	0xFE2
  2284                           fsr1l	equ	0xFE1
  2285                           
  2286                           	psect	dataBANK3
  2287  0003E4                     __pdataBANK3:
  2288                           	opt stack 0
  2289  0003E4                     i2c_display_init@F8357:
  2290                           	opt stack 0
  2291  0003E4                     	ds	9
  2292  0003ED                     i2c_display_send_init_sequence@F8354:
  2293                           	opt stack 0
  2294  0003ED                     	ds	9
  2295  0003F6                     system_init@F8577:
  2296                           	opt stack 0
  2297  0003F6                     	ds	9
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           postinc0	equ	0xFEE
  2303                           wreg	equ	0xFE8
  2304                           postdec1	equ	0xFE5
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           
  2308                           	psect	bssBANK4
  2309  000468                     __pbssBANK4:
  2310                           	opt stack 0
  2311  000468                     _task_list:
  2312                           	opt stack 0
  2313  000468                     	ds	16
  2314  000478                     _ReceivedDataBuffer:
  2315                           	opt stack 0
  2316  000478                     	ds	64
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           postinc0	equ	0xFEE
  2322                           wreg	equ	0xFE8
  2323                           postdec1	equ	0xFE5
  2324                           fsr1h	equ	0xFE2
  2325                           fsr1l	equ	0xFE1
  2326                           
  2327                           	psect	dataBANK4
  2328  000400                     __pdataBANK4:
  2329                           	opt stack 0
  2330  000400                     system_init@F8581:
  2331                           	opt stack 0
  2332  000400                     	ds	104
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           
  2343                           	psect	bssBIGRAMll
  2344  000800                     __pbssBIGRAMll:
  2345                           	opt stack 0
  2346  000800                     _buffer:
  2347                           	opt stack 0
  2348  000800                     	ds	512
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           postinc0	equ	0xFEE
  2354                           wreg	equ	0xFE8
  2355                           postdec1	equ	0xFE5
  2356                           fsr1h	equ	0xFE2
  2357                           fsr1l	equ	0xFE1
  2358                           
  2359                           	psect	cstackBANK1
  2360  000100                     __pcstackBANK1:
  2361                           	opt stack 0
  2362  000100                     log_write_to_disk@file_number:
  2363                           	opt stack 0
  2364  000100                     __display_charger@fan_off:
  2365                           	opt stack 0
  2366  000100                     __display_time@pts:
  2367                           	opt stack 0
  2368  000100                     system_init@appendtext:
  2369                           	opt stack 0
  2370                           
  2371                           ; 104 bytes @ 0x0
  2372  000100                     	ds	1
  2373  000101                     log_write_to_disk@log_entry:
  2374                           	opt stack 0
  2375                           
  2376                           ; 32 bytes @ 0x1
  2377  000101                     	ds	7
  2378  000108                     __display_charger@fan_on:
  2379                           	opt stack 0
  2380                           
  2381                           ; 7 bytes @ 0x8
  2382  000108                     	ds	7
  2383  00010F                     __display_charger@header:
  2384                           	opt stack 0
  2385                           
  2386                           ; 21 bytes @ 0xF
  2387  00010F                     	ds	5
  2388  000114                     __display_time@pressminutes:
  2389                           	opt stack 0
  2390                           
  2391                           ; 20 bytes @ 0x14
  2392  000114                     	ds	16
  2393  000124                     __display_charger@charger_async:
  2394                           	opt stack 0
  2395                           
  2396                           ; 21 bytes @ 0x24
  2397  000124                     	ds	4
  2398  000128                     __display_time@pressseconds:
  2399                           	opt stack 0
  2400                           
  2401                           ; 20 bytes @ 0x28
  2402  000128                     	ds	17
  2403  000139                     __display_charger@charger_sync:
  2404                           	opt stack 0
  2405                           
  2406                           ; 20 bytes @ 0x39
  2407  000139                     	ds	3
  2408  00013C                     __display_time@pressmonth:
  2409                           	opt stack 0
  2410                           
  2411                           ; 18 bytes @ 0x3C
  2412  00013C                     	ds	17
  2413  00014D                     __display_charger@supply_off:
  2414                           	opt stack 0
  2415                           
  2416                           ; 19 bytes @ 0x4D
  2417  00014D                     	ds	1
  2418  00014E                     __display_time@presshours:
  2419                           	opt stack 0
  2420                           
  2421                           ; 18 bytes @ 0x4E
  2422  00014E                     	ds	18
  2423  000160                     __display_time@pressday:
  2424                           	opt stack 0
  2425  000160                     __display_charger@supply_on:
  2426                           	opt stack 0
  2427                           
  2428                           ; 18 bytes @ 0x60
  2429  000160                     	ds	8
  2430  000168                     system_init@filename:
  2431                           	opt stack 0
  2432                           
  2433                           ; 9 bytes @ 0x68
  2434  000168                     	ds	8
  2435  000170                     __display_time@presssave:
  2436                           	opt stack 0
  2437                           
  2438                           ; 16 bytes @ 0x70
  2439  000170                     	ds	1
  2440  000171                     system_init@filename2:
  2441                           	opt stack 0
  2442                           
  2443                           ; 9 bytes @ 0x71
  2444  000171                     	ds	1
  2445  000172                     __display_charger@charger_startup:
  2446                           	opt stack 0
  2447                           
  2448                           ; 16 bytes @ 0x72
  2449  000172                     	ds	8
  2450  00017A                     system_init@extension:
  2451                           	opt stack 0
  2452                           
  2453                           ; 4 bytes @ 0x7A
  2454  00017A                     	ds	4
  2455  00017E                     system_init@extension2:
  2456                           	opt stack 0
  2457                           
  2458                           ; 4 bytes @ 0x7E
  2459  00017E                     	ds	2
  2460  000180                     __display_time@tad:
  2461                           	opt stack 0
  2462                           
  2463                           ; 14 bytes @ 0x80
  2464  000180                     	ds	2
  2465  000182                     __display_charger@charger_off:
  2466                           	opt stack 0
  2467                           
  2468                           ; 12 bytes @ 0x82
  2469  000182                     	ds	12
  2470  00018E                     __display_charger@cntr:
  2471                           	opt stack 0
  2472  00018E                     __display_time@setminutes:
  2473                           	opt stack 0
  2474                           
  2475                           ; 12 bytes @ 0x8E
  2476  00018E                     	ds	12
  2477  00019A                     __display_time@setseconds:
  2478                           	opt stack 0
  2479                           
  2480                           ; 12 bytes @ 0x9A
  2481  00019A                     	ds	12
  2482  0001A6                     __display_time@setmonth:
  2483                           	opt stack 0
  2484                           
  2485                           ; 10 bytes @ 0xA6
  2486  0001A6                     	ds	10
  2487  0001B0                     __display_time@sethours:
  2488                           	opt stack 0
  2489                           
  2490                           ; 10 bytes @ 0xB0
  2491  0001B0                     	ds	10
  2492  0001BA                     __display_time@setyear:
  2493                           	opt stack 0
  2494                           
  2495                           ; 9 bytes @ 0xBA
  2496  0001BA                     	ds	9
  2497  0001C3                     __display_time@setday:
  2498                           	opt stack 0
  2499                           
  2500                           ; 8 bytes @ 0xC3
  2501  0001C3                     	ds	8
  2502  0001CB                     __display_time@mode:
  2503                           	opt stack 0
  2504                           
  2505                           ; 1 bytes @ 0xCB
  2506  0001CB                     	ds	1
  2507  0001CC                     __display_time@year:
  2508                           	opt stack 0
  2509                           
  2510                           ; 1 bytes @ 0xCC
  2511  0001CC                     	ds	1
  2512  0001CD                     __display_time@month:
  2513                           	opt stack 0
  2514                           
  2515                           ; 1 bytes @ 0xCD
  2516  0001CD                     	ds	1
  2517  0001CE                     __display_time@day:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0xCE
  2521  0001CE                     	ds	1
  2522  0001CF                     __display_time@hours:
  2523                           	opt stack 0
  2524                           
  2525                           ; 1 bytes @ 0xCF
  2526  0001CF                     	ds	1
  2527  0001D0                     __display_time@minutes:
  2528                           	opt stack 0
  2529                           
  2530                           ; 1 bytes @ 0xD0
  2531  0001D0                     	ds	1
  2532  0001D1                     __display_time@seconds:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0xD1
  2536  0001D1                     	ds	1
  2537  0001D2                     __display_time@cntr:
  2538                           	opt stack 0
  2539                           
  2540                           ; 1 bytes @ 0xD2
  2541  0001D2                     	ds	1
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1h	equ	0xFE2
  2550                           fsr1l	equ	0xFE1
  2551                           
  2552                           	psect	cstackBANK0
  2553  000060                     __pcstackBANK0:
  2554                           	opt stack 0
  2555  000060                     ??_system_output_off:
  2556  000060                     ??__i2c_wait_idle:
  2557  000060                     ??__display_clear:
  2558  000060                     ??__number_of_days:
  2559  000060                     ??__buck_set_dutycycle:
  2560  000060                     ?_USBTransferOnePacket:
  2561                           	opt stack 0
  2562  000060                     ?_adc_read:
  2563                           	opt stack 0
  2564  000060                     ?_log_get_number_of_samples:
  2565                           	opt stack 0
  2566  000060                     ?_ExternalFlash_MediaInitialize:
  2567                           	opt stack 0
  2568  000060                     ?_ExternalFlash_SectorSizeRead:
  2569                           	opt stack 0
  2570  000060                     ?_strlen:
  2571                           	opt stack 0
  2572  000060                     ?_strncmp:
  2573                           	opt stack 0
  2574  000060                     ?__sector_from_cluster:
  2575                           	opt stack 0
  2576  000060                     ?___awdiv:
  2577                           	opt stack 0
  2578  000060                     ?___lwdiv:
  2579                           	opt stack 0
  2580  000060                     ?___lwmod:
  2581                           	opt stack 0
  2582  000060                     ?___ftpack:
  2583                           	opt stack 0
  2584  000060                     ?_ExternalFlash_CapacityRead:
  2585                           	opt stack 0
  2586  000060                     ?___lmul:
  2587                           	opt stack 0
  2588  000060                     ?___aldiv:
  2589                           	opt stack 0
  2590  000060                     ?___fttol:
  2591                           	opt stack 0
  2592  000060                     ?___lldiv:
  2593                           	opt stack 0
  2594  000060                     USBTransferOnePacket@dir:
  2595                           	opt stack 0
  2596  000060                     USBStallEndpoint@dir:
  2597                           	opt stack 0
  2598  000060                     SYSTEM_Initialize@state:
  2599                           	opt stack 0
  2600  000060                     system_output_is_on@output:
  2601                           	opt stack 0
  2602  000060                     system_output_on@output:
  2603                           	opt stack 0
  2604  000060                     __i2c_send@dat:
  2605                           	opt stack 0
  2606  000060                     i2c_set_frequency@frequency:
  2607                           	opt stack 0
  2608  000060                     get_next_eeprom_write_task@task:
  2609                           	opt stack 0
  2610  000060                     display_get_character@position:
  2611                           	opt stack 0
  2612  000060                     __rtcc_bcd_to_decimal@tens:
  2613                           	opt stack 0
  2614  000060                     __rtcc_verify_bcd@min:
  2615                           	opt stack 0
  2616  000060                     rtcc_set_year@year:
  2617                           	opt stack 0
  2618  000060                     rtcc_set_month@month:
  2619                           	opt stack 0
  2620  000060                     rtcc_set_day@day:
  2621                           	opt stack 0
  2622  000060                     rtcc_set_hours@hours:
  2623                           	opt stack 0
  2624  000060                     rtcc_set_minutes@minutes:
  2625                           	opt stack 0
  2626  000060                     rtcc_set_seconds@seconds:
  2627                           	opt stack 0
  2628  000060                     __buck_prepare@cntr:
  2629                           	opt stack 0
  2630  000060                     buck_remote_set_enable@remote:
  2631                           	opt stack 0
  2632  000060                     buck_remote_set_on@on:
  2633                           	opt stack 0
  2634  000060                     buck_remote_set_synchronous@synchronous:
  2635                           	opt stack 0
  2636  000060                     buck_remote_set_dutycycle@dutycycle:
  2637                           	opt stack 0
  2638  000060                     buck_remote_change_dutycycle@change:
  2639                           	opt stack 0
  2640  000060                     buck_remote_get_status@retval:
  2641                           	opt stack 0
  2642  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2643                           	opt stack 0
  2644  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2645                           	opt stack 0
  2646  000060                     __flash_spi_tx@data:
  2647                           	opt stack 0
  2648  000060                     __flash_spi_tx_tx@command:
  2649                           	opt stack 0
  2650  000060                     __flash_spi_tx_rx@command:
  2651                           	opt stack 0
  2652  000060                     ExternalFlash_MediaInitialize@config:
  2653                           	opt stack 0
  2654  000060                     ExternalFlash_SectorSizeRead@config:
  2655                           	opt stack 0
  2656  000060                     ExternalFlash_CapacityRead@config:
  2657                           	opt stack 0
  2658  000060                     ExternalFlash_MediaDetect@config:
  2659                           	opt stack 0
  2660  000060                     ExternalFlash_WriteProtectStateGet@config:
  2661                           	opt stack 0
  2662  000060                     __sector_from_cluster@fat_cluster:
  2663                           	opt stack 0
  2664  000060                     __get_checksum@log_entry:
  2665                           	opt stack 0
  2666  000060                     ___awdiv@dividend:
  2667                           	opt stack 0
  2668  000060                     ___lwdiv@dividend:
  2669                           	opt stack 0
  2670  000060                     ___lwmod@dividend:
  2671                           	opt stack 0
  2672  000060                     memcpy@d1:
  2673                           	opt stack 0
  2674  000060                     memset@p1:
  2675                           	opt stack 0
  2676  000060                     strlen@s:
  2677                           	opt stack 0
  2678  000060                     strncmp@s1:
  2679                           	opt stack 0
  2680  000060                     ___ftpack@arg:
  2681                           	opt stack 0
  2682  000060                     ___fttol@f1:
  2683                           	opt stack 0
  2684  000060                     ___lmul@multiplier:
  2685                           	opt stack 0
  2686  000060                     ___aldiv@dividend:
  2687                           	opt stack 0
  2688  000060                     ___lldiv@dividend:
  2689                           	opt stack 0
  2690  000060                     __display_usb@header:
  2691                           	opt stack 0
  2692  000060                     __display_outputs@line3:
  2693                           	opt stack 0
  2694                           
  2695                           ; 21 bytes @ 0x0
  2696  000060                     	ds	1
  2697  000061                     ??__fill_buffer_get_status:
  2698  000061                     ??_display_get_character:
  2699  000061                     ??_USBStallEndpoint:
  2700  000061                     system_output_off@output:
  2701                           	opt stack 0
  2702  000061                     schedule_eeprom_write_task@task:
  2703                           	opt stack 0
  2704  000061                     __rtcc_bcd_to_decimal@ones:
  2705                           	opt stack 0
  2706  000061                     __number_of_days@year:
  2707                           	opt stack 0
  2708  000061                     __rtcc_verify_bcd@max:
  2709                           	opt stack 0
  2710  000061                     __buck_set_dutycycle@dutyCycle:
  2711                           	opt stack 0
  2712  000061                     USBTransferOnePacket@data:
  2713                           	opt stack 0
  2714  000061                     SYSTEM_Initialize@pll_startup_counter:
  2715                           	opt stack 0
  2716  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2717                           	opt stack 0
  2718                           
  2719                           ; 2 bytes @ 0x1
  2720  000061                     	ds	1
  2721  000062                     ??_MSDComputeDeviceInAndResidue:
  2722  000062                     ??_strlen:
  2723  000062                     ??__rtcc_verify_bcd:
  2724  000062                     system_output_toggle@output:
  2725                           	opt stack 0
  2726  000062                     __i2c_eeprom_load_default_calibration@index:
  2727                           	opt stack 0
  2728  000062                     schedule_eeprom_write_task@idx:
  2729                           	opt stack 0
  2730  000062                     __display_clear@row:
  2731                           	opt stack 0
  2732  000062                     __rtcc_bcd_to_decimal@input:
  2733                           	opt stack 0
  2734  000062                     __number_of_days@bcd_year:
  2735                           	opt stack 0
  2736  000062                     __buck_set_sync_async@new_dutycycle:
  2737                           	opt stack 0
  2738  000062                     adc_read@channel:
  2739                           	opt stack 0
  2740  000062                     __flash_spi_tx@length:
  2741                           	opt stack 0
  2742  000062                     __flash_spi_tx_tx@command_length:
  2743                           	opt stack 0
  2744  000062                     __flash_spi_tx_rx@command_length:
  2745                           	opt stack 0
  2746  000062                     __get_checksum@byte_array:
  2747                           	opt stack 0
  2748  000062                     ___awdiv@divisor:
  2749                           	opt stack 0
  2750  000062                     ___lwdiv@divisor:
  2751                           	opt stack 0
  2752  000062                     ___lwmod@divisor:
  2753                           	opt stack 0
  2754  000062                     memcpy@s1:
  2755                           	opt stack 0
  2756  000062                     memset@c:
  2757                           	opt stack 0
  2758  000062                     strncmp@s2:
  2759                           	opt stack 0
  2760                           
  2761                           ; 2 bytes @ 0x2
  2762  000062                     	ds	1
  2763  000063                     USBTransferOnePacket@len:
  2764                           	opt stack 0
  2765  000063                     __parse_command_long@data:
  2766                           	opt stack 0
  2767  000063                     __parse_command_calibration@item:
  2768                           	opt stack 0
  2769  000063                     display_get_character@line:
  2770                           	opt stack 0
  2771  000063                     __display_clear@col:
  2772                           	opt stack 0
  2773  000063                     __number_of_days@month:
  2774                           	opt stack 0
  2775  000063                     __rtcc_verify_bcd@value:
  2776                           	opt stack 0
  2777  000063                     rtcc_get_year_decimal@bcd_year:
  2778                           	opt stack 0
  2779  000063                     rtcc_get_month_decimal@bcd_month:
  2780                           	opt stack 0
  2781  000063                     rtcc_get_day_decimal@bcd_day:
  2782                           	opt stack 0
  2783  000063                     rtcc_get_hours_decimal@bcd_hours:
  2784                           	opt stack 0
  2785  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  2786                           	opt stack 0
  2787  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  2788                           	opt stack 0
  2789  000063                     __buck_set_sync_async@mode:
  2790                           	opt stack 0
  2791  000063                     ___ftpack@exp:
  2792                           	opt stack 0
  2793  000063                     SYSTEM_Initialize@pll_startup_counter_3284:
  2794                           	opt stack 0
  2795  000063                     adc_read@adc_value:
  2796                           	opt stack 0
  2797                           
  2798                           ; 2 bytes @ 0x3
  2799  000063                     	ds	1
  2800  000064                     ??_USBTransferOnePacket:
  2801  000064                     ??__fill_buffer_get_display1:
  2802  000064                     ??__fill_buffer_get_display2:
  2803  000064                     ??__flash_spi_tx:
  2804  000064                     ??___fttol:
  2805  000064                     ?__get_time:
  2806                           	opt stack 0
  2807  000064                     ?__get_date:
  2808                           	opt stack 0
  2809  000064                     ?__get_dateTime:
  2810                           	opt stack 0
  2811  000064                     __parse_command_long@cmd:
  2812                           	opt stack 0
  2813  000064                     __parse_command_calibration@dat1:
  2814                           	opt stack 0
  2815  000064                     __rtcc_increment_bcd@min:
  2816                           	opt stack 0
  2817  000064                     __rtcc_decrement_bcd@min:
  2818                           	opt stack 0
  2819  000064                     rtcc_correct_day@day:
  2820                           	opt stack 0
  2821  000064                     __get_checksum@checksum:
  2822                           	opt stack 0
  2823  000064                     ___awdiv@counter:
  2824                           	opt stack 0
  2825  000064                     ___ftpack@sign:
  2826                           	opt stack 0
  2827  000064                     ___lwdiv@counter:
  2828                           	opt stack 0
  2829  000064                     ___lwmod@counter:
  2830                           	opt stack 0
  2831  000064                     __flash_spi_tx_tx@data:
  2832                           	opt stack 0
  2833  000064                     __flash_spi_tx_rx@data:
  2834                           	opt stack 0
  2835  000064                     memcpy@n:
  2836                           	opt stack 0
  2837  000064                     memset@n:
  2838                           	opt stack 0
  2839  000064                     strlen@cp:
  2840                           	opt stack 0
  2841  000064                     strncmp@len:
  2842                           	opt stack 0
  2843  000064                     ___lmul@multiplicand:
  2844                           	opt stack 0
  2845  000064                     ___aldiv@divisor:
  2846                           	opt stack 0
  2847  000064                     ___lldiv@divisor:
  2848                           	opt stack 0
  2849                           
  2850                           ; 4 bytes @ 0x4
  2851  000064                     	ds	1
  2852  000065                     ??___ftpack:
  2853  000065                     ?_i2c_adc_read:
  2854                           	opt stack 0
  2855  000065                     USBStallEndpoint@ep:
  2856                           	opt stack 0
  2857  000065                     __fill_buffer_get_display1@cntr:
  2858                           	opt stack 0
  2859  000065                     __fill_buffer_get_display2@cntr:
  2860                           	opt stack 0
  2861  000065                     __parse_command_calibration@dat2:
  2862                           	opt stack 0
  2863  000065                     __rtcc_increment_bcd@max:
  2864                           	opt stack 0
  2865  000065                     __rtcc_decrement_bcd@max:
  2866                           	opt stack 0
  2867  000065                     rtcc_correct_day@max:
  2868                           	opt stack 0
  2869  000065                     __get_checksum@cntr:
  2870                           	opt stack 0
  2871  000065                     ___awdiv@sign:
  2872                           	opt stack 0
  2873  000065                     __i2c_write@data:
  2874                           	opt stack 0
  2875  000065                     __i2c_read@data:
  2876                           	opt stack 0
  2877  000065                     i2c_display_write_fixed@data:
  2878                           	opt stack 0
  2879  000065                     ___lwdiv@quotient:
  2880                           	opt stack 0
  2881                           
  2882                           ; 2 bytes @ 0x5
  2883  000065                     	ds	1
  2884  000066                     ??_strncmp:
  2885  000066                     ??__rtcc_increment_bcd:
  2886  000066                     ??__rtcc_decrement_bcd:
  2887  000066                     ??__get_time:
  2888  000066                     ??__get_date:
  2889  000066                     __fill_buffer_get_display1@line:
  2890                           	opt stack 0
  2891  000066                     __fill_buffer_get_display2@line:
  2892                           	opt stack 0
  2893  000066                     __parse_command_calibration@dat3:
  2894                           	opt stack 0
  2895  000066                     memcpy@tmp:
  2896                           	opt stack 0
  2897  000066                     USBStallEndpoint@p:
  2898                           	opt stack 0
  2899  000066                     __flash_spi_tx_tx@data_length:
  2900                           	opt stack 0
  2901  000066                     __flash_spi_tx_rx@data_length:
  2902                           	opt stack 0
  2903  000066                     ___awdiv@quotient:
  2904                           	opt stack 0
  2905  000066                     memset@p:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x6
  2909  000066                     	ds	1
  2910  000067                     ??_i2c_adc_read:
  2911  000067                     ??__parse_command_calibration:
  2912  000067                     __fill_buffer_get_display1@position:
  2913                           	opt stack 0
  2914  000067                     __fill_buffer_get_display2@position:
  2915                           	opt stack 0
  2916  000067                     __i2c_write@length:
  2917                           	opt stack 0
  2918  000067                     __i2c_read@length:
  2919                           	opt stack 0
  2920  000067                     i2c_display_write_fixed@length:
  2921                           	opt stack 0
  2922  000067                     __rtcc_increment_bcd@value:
  2923                           	opt stack 0
  2924  000067                     __rtcc_decrement_bcd@value:
  2925                           	opt stack 0
  2926  000067                     utoa@buf:
  2927                           	opt stack 0
  2928  000067                     memcpy@d:
  2929                           	opt stack 0
  2930                           
  2931                           ; 2 bytes @ 0x7
  2932  000067                     	ds	1
  2933  000068                     ??__i2c_read:
  2934  000068                     ??__flash_spi_tx_tx:
  2935  000068                     ??__flash_spi_tx_rx:
  2936  000068                     ??__get_dateTime:
  2937  000068                     USBDeviceInit@i:
  2938                           	opt stack 0
  2939  000068                     USBTransferOnePacket@ep:
  2940                           	opt stack 0
  2941  000068                     MSDErrorHandler@ErrorCase:
  2942                           	opt stack 0
  2943  000068                     __i2c_write@slave_address:
  2944                           	opt stack 0
  2945  000068                     i2c_display_write_fixed@pos:
  2946                           	opt stack 0
  2947  000068                     rtcc_increment_year@year:
  2948                           	opt stack 0
  2949  000068                     rtcc_decrement_year@year:
  2950                           	opt stack 0
  2951  000068                     rtcc_increment_month@month:
  2952                           	opt stack 0
  2953  000068                     rtcc_decrement_month@month:
  2954                           	opt stack 0
  2955  000068                     rtcc_increment_day@day:
  2956                           	opt stack 0
  2957  000068                     rtcc_decrement_day@day:
  2958                           	opt stack 0
  2959  000068                     rtcc_increment_hours@hours:
  2960                           	opt stack 0
  2961  000068                     rtcc_decrement_hours@hours:
  2962                           	opt stack 0
  2963  000068                     rtcc_increment_minutes@minutes:
  2964                           	opt stack 0
  2965  000068                     rtcc_decrement_minutes@minutes:
  2966                           	opt stack 0
  2967  000068                     rtcc_increment_seconds@seconds:
  2968                           	opt stack 0
  2969  000068                     rtcc_decrement_seconds@seconds:
  2970                           	opt stack 0
  2971  000068                     __flash_wakeup@command:
  2972                           	opt stack 0
  2973  000068                     __get_time@hours:
  2974                           	opt stack 0
  2975  000068                     __get_date@year:
  2976                           	opt stack 0
  2977  000068                     ___aldiv@counter:
  2978                           	opt stack 0
  2979  000068                     i2c_adc_read@result:
  2980                           	opt stack 0
  2981  000068                     ___lmul@product:
  2982                           	opt stack 0
  2983  000068                     ___lldiv@quotient:
  2984                           	opt stack 0
  2985                           
  2986                           ; 4 bytes @ 0x8
  2987  000068                     	ds	1
  2988  000069                     MSDErrorHandler@OldMSD_State:
  2989                           	opt stack 0
  2990  000069                     __i2c_write@cntr:
  2991                           	opt stack 0
  2992  000069                     __get_time@minutes:
  2993                           	opt stack 0
  2994  000069                     __get_date@month:
  2995                           	opt stack 0
  2996  000069                     ___aldiv@sign:
  2997                           	opt stack 0
  2998  000069                     ___fttol@sign1:
  2999                           	opt stack 0
  3000  000069                     USBTransferOnePacket@handle:
  3001                           	opt stack 0
  3002  000069                     __parse_command_calibration@parameter:
  3003                           	opt stack 0
  3004  000069                     utoa@val:
  3005                           	opt stack 0
  3006  000069                     memcpy@s:
  3007                           	opt stack 0
  3008                           
  3009                           ; 2 bytes @ 0x9
  3010  000069                     	ds	1
  3011  00006A                     __ic2_display_set_address@address:
  3012                           	opt stack 0
  3013  00006A                     i2c_digipot_backlight@level:
  3014                           	opt stack 0
  3015  00006A                     i2c_adc_start@resolution:
  3016                           	opt stack 0
  3017  00006A                     __get_time@seconds:
  3018                           	opt stack 0
  3019  00006A                     __get_date@day:
  3020                           	opt stack 0
  3021  00006A                     i2c_digipot_reset_on@data_array:
  3022                           	opt stack 0
  3023  00006A                     i2c_digipot_reset_off@data_array:
  3024                           	opt stack 0
  3025  00006A                     i2c_eeprom_write@address:
  3026                           	opt stack 0
  3027  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3028                           	opt stack 0
  3029  00006A                     ___aldiv@quotient:
  3030                           	opt stack 0
  3031  00006A                     ___fttol@lval:
  3032                           	opt stack 0
  3033  00006A                     i2c_display_send_init_sequence@init_sequence:
  3034                           	opt stack 0
  3035                           
  3036                           ; 9 bytes @ 0xA
  3037  00006A                     	ds	1
  3038  00006B                     i2c_adc_start@gain:
  3039                           	opt stack 0
  3040  00006B                     __ic2_display_set_address@data_array:
  3041                           	opt stack 0
  3042  00006B                     i2c_digipot_backlight@data_array:
  3043                           	opt stack 0
  3044  00006B                     __get_time@time:
  3045                           	opt stack 0
  3046  00006B                     __get_date@date:
  3047                           	opt stack 0
  3048  00006B                     utoa@base:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0xB
  3052  00006B                     	ds	1
  3053  00006C                     ??_system_calculate_output_voltage:
  3054  00006C                     ??_system_calculate_input_voltage:
  3055  00006C                     ??_system_calculate_output_current:
  3056  00006C                     ??_system_calculate_input_current:
  3057  00006C                     ?_adc_calculate_temperature:
  3058                           	opt stack 0
  3059  00006C                     ?__flash_get_status:
  3060                           	opt stack 0
  3061  00006C                     i2c_adc_start@channel:
  3062                           	opt stack 0
  3063  00006C                     ___lldiv@counter:
  3064                           	opt stack 0
  3065  00006C                     i2c_eeprom_write@data:
  3066                           	opt stack 0
  3067  00006C                     adc_calculate_temperature@adc_value:
  3068                           	opt stack 0
  3069                           
  3070                           ; 2 bytes @ 0xC
  3071  00006C                     	ds	1
  3072  00006D                     ??__buck_initial_dutycycle:
  3073  00006D                     ?__get_output_power:
  3074                           	opt stack 0
  3075  00006D                     i2c_display_cursor@position:
  3076                           	opt stack 0
  3077  00006D                     i2c_adc_start@configuration_byte:
  3078                           	opt stack 0
  3079  00006D                     __update_modified_time@root:
  3080                           	opt stack 0
  3081  00006D                     utoa@v:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0xD
  3085  00006D                     	ds	1
  3086  00006E                     ?__get_input_power:
  3087                           	opt stack 0
  3088  00006E                     ?___altoft:
  3089                           	opt stack 0
  3090  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3091                           	opt stack 0
  3092  00006E                     i2c_display_cursor@line:
  3093                           	opt stack 0
  3094  00006E                     i2c_eeprom_write@length:
  3095                           	opt stack 0
  3096  00006E                     adc_calculate_temperature@calibration:
  3097                           	opt stack 0
  3098  00006E                     __flash_get_status@command:
  3099                           	opt stack 0
  3100  00006E                     __get_dateTime@year:
  3101                           	opt stack 0
  3102  00006E                     ___fttol@exp1:
  3103                           	opt stack 0
  3104  00006E                     __get_temperature@temperature:
  3105                           	opt stack 0
  3106  00006E                     __buck_initial_dutycycle@dc:
  3107                           	opt stack 0
  3108  00006E                     ___altoft@c:
  3109                           	opt stack 0
  3110                           
  3111                           ; 4 bytes @ 0xE
  3112  00006E                     	ds	1
  3113  00006F                     ??_adc_calculate_temperature:
  3114  00006F                     ??_i2c_eeprom_write:
  3115  00006F                     MSDCheckForErrorCases@DeviceNoData:
  3116                           	opt stack 0
  3117  00006F                     __i2c_read@slave_address:
  3118                           	opt stack 0
  3119  00006F                     i2c_display_cursor@address:
  3120                           	opt stack 0
  3121  00006F                     __get_dateTime@month:
  3122                           	opt stack 0
  3123  00006F                     utoa@c:
  3124                           	opt stack 0
  3125  00006F                     __flash_get_status@status:
  3126                           	opt stack 0
  3127  00006F                     __get_output_power@pwr:
  3128                           	opt stack 0
  3129                           
  3130                           ; 4 bytes @ 0xF
  3131  00006F                     	ds	1
  3132  000070                     MSDCheckForErrorCases@MSDErrorCase:
  3133                           	opt stack 0
  3134  000070                     __i2c_read@cntr:
  3135                           	opt stack 0
  3136  000070                     __get_dateTime@day:
  3137                           	opt stack 0
  3138  000070                     itoa@buf:
  3139                           	opt stack 0
  3140  000070                     system_calculate_input_voltage@tmp:
  3141                           	opt stack 0
  3142  000070                     system_calculate_output_voltage@tmp:
  3143                           	opt stack 0
  3144  000070                     system_calculate_input_current@tmp:
  3145                           	opt stack 0
  3146  000070                     system_calculate_output_current@tmp:
  3147                           	opt stack 0
  3148  000070                     __get_input_power@pwr:
  3149                           	opt stack 0
  3150                           
  3151                           ; 4 bytes @ 0x10
  3152  000070                     	ds	1
  3153  000071                     __get_dateTime@hours:
  3154                           	opt stack 0
  3155  000071                     i2c_eeprom_read@address:
  3156                           	opt stack 0
  3157  000071                     flash_is_busy@status:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x11
  3161  000071                     	ds	1
  3162  000072                     ??___altoft:
  3163  000072                     __buck_start@dutycycle:
  3164                           	opt stack 0
  3165  000072                     __get_dateTime@minutes:
  3166                           	opt stack 0
  3167  000072                     itoa@val:
  3168                           	opt stack 0
  3169  000072                     i2c_eeprom_write@dat:
  3170                           	opt stack 0
  3171                           
  3172                           ; 17 bytes @ 0x12
  3173  000072                     	ds	1
  3174  000073                     __buck_start@mode:
  3175                           	opt stack 0
  3176  000073                     __get_dateTime@seconds:
  3177                           	opt stack 0
  3178  000073                     i2c_eeprom_read@data:
  3179                           	opt stack 0
  3180  000073                     __flash_copy_page_to_buffer@page:
  3181                           	opt stack 0
  3182  000073                     __flash_compare_page_to_buffer@page:
  3183                           	opt stack 0
  3184  000073                     __flash_write_to_buffer@start:
  3185                           	opt stack 0
  3186  000073                     __flash_write_page_from_buffer@page:
  3187                           	opt stack 0
  3188  000073                     flash_partial_read@page:
  3189                           	opt stack 0
  3190  000073                     __flash_set_page_size@command:
  3191                           	opt stack 0
  3192                           
  3193                           ; 4 bytes @ 0x13
  3194  000073                     	ds	1
  3195  000074                     ??_log_collect_data:
  3196  000074                     __buck_start@startup_dutycycle:
  3197                           	opt stack 0
  3198  000074                     itoa@base:
  3199                           	opt stack 0
  3200  000074                     __get_dateTime@datetime:
  3201                           	opt stack 0
  3202  000074                     __display_usb@usb_off:
  3203                           	opt stack 0
  3204                           
  3205                           ; 17 bytes @ 0x14
  3206  000074                     	ds	1
  3207  000075                     i2c_eeprom_read@length:
  3208                           	opt stack 0
  3209  000075                     __buck_start@cntr:
  3210                           	opt stack 0
  3211  000075                     __flash_copy_page_to_buffer@buffer:
  3212                           	opt stack 0
  3213  000075                     __flash_compare_page_to_buffer@buffer:
  3214                           	opt stack 0
  3215  000075                     __flash_write_page_from_buffer@buffer:
  3216                           	opt stack 0
  3217  000075                     __flash_write_to_buffer@data:
  3218                           	opt stack 0
  3219  000075                     flash_partial_read@start:
  3220                           	opt stack 0
  3221  000075                     adc_calculate_temperature@tmp:
  3222                           	opt stack 0
  3223  000075                     __display_outputs@line4:
  3224                           	opt stack 0
  3225                           
  3226                           ; 21 bytes @ 0x15
  3227  000075                     	ds	1
  3228  000076                     ??_i2c_eeprom_read:
  3229  000076                     ??__buck_operate_local:
  3230  000076                     ??__flash_copy_page_to_buffer:
  3231  000076                     ??__flash_compare_page_to_buffer:
  3232  000076                     ??__flash_write_page_from_buffer:
  3233  000076                     ___altoft@exp:
  3234                           	opt stack 0
  3235  000076                     __buck_operate_remote$8740:
  3236                           	opt stack 0
  3237  000076                     itoa@cp:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0x16
  3241  000076                     	ds	1
  3242  000077                     i2c_eeprom_read@addr:
  3243                           	opt stack 0
  3244  000077                     __flash_set_page_size@size:
  3245                           	opt stack 0
  3246  000077                     ___altoft@sign:
  3247                           	opt stack 0
  3248  000077                     __flash_write_to_buffer@data_length:
  3249                           	opt stack 0
  3250  000077                     flash_partial_read@length:
  3251                           	opt stack 0
  3252                           
  3253                           ; 2 bytes @ 0x17
  3254  000077                     	ds	1
  3255  000078                     i2c_eeprom_read@slave_address:
  3256                           	opt stack 0
  3257  000078                     __display_itoa@value:
  3258                           	opt stack 0
  3259  000078                     log_collect_data@temp:
  3260                           	opt stack 0
  3261  000078                     log_generate_entry@log_entry:
  3262                           	opt stack 0
  3263                           
  3264                           ; 2 bytes @ 0x18
  3265  000078                     	ds	1
  3266  000079                     ??_i2c_eeprom_read_calibration:
  3267  000079                     __flash_write_to_buffer@buffer:
  3268                           	opt stack 0
  3269  000079                     __flash_compare_page_to_buffer@status:
  3270                           	opt stack 0
  3271  000079                     flash_partial_read@data:
  3272                           	opt stack 0
  3273  000079                     __flash_copy_page_to_buffer@command:
  3274                           	opt stack 0
  3275  000079                     __flash_write_page_from_buffer@command:
  3276                           	opt stack 0
  3277                           
  3278                           ; 4 bytes @ 0x19
  3279  000079                     	ds	1
  3280  00007A                     ??_log_generate_entry:
  3281  00007A                     __display_itoa@decimals:
  3282                           	opt stack 0
  3283  00007A                     __flash_write_to_buffer@command:
  3284                           	opt stack 0
  3285                           
  3286                           ; 4 bytes @ 0x1A
  3287  00007A                     	ds	1
  3288  00007B                     ??_flash_partial_read:
  3289  00007B                     __buck_operate_local$8739:
  3290                           	opt stack 0
  3291  00007B                     __display_itoa@text:
  3292                           	opt stack 0
  3293  00007B                     i2c_eeprom_read_calibration@buffer:
  3294                           	opt stack 0
  3295  00007B                     __flash_compare_page_to_buffer@command:
  3296                           	opt stack 0
  3297                           
  3298                           ; 4 bytes @ 0x1B
  3299  00007B                     	ds	1
  3300  00007C                     __buck_operate_local@tmp_dutycycle:
  3301                           	opt stack 0
  3302                           
  3303                           ; 1 bytes @ 0x1C
  3304  00007C                     	ds	1
  3305  00007D                     ??__display_itoa:
  3306  00007D                     __buck_operate_local@cntr:
  3307                           	opt stack 0
  3308                           
  3309                           ; 1 bytes @ 0x1D
  3310  00007D                     	ds	1
  3311  00007E                     
  3312                           ; 1 bytes @ 0x1E
  3313  00007E                     	ds	1
  3314  00007F                     i2c_eeprom_read_calibration@addr:
  3315                           	opt stack 0
  3316  00007F                     flash_page_write@page:
  3317                           	opt stack 0
  3318  00007F                     flash_partial_write@page:
  3319                           	opt stack 0
  3320  00007F                     flash_partial_read@command:
  3321                           	opt stack 0
  3322                           
  3323                           ; 4 bytes @ 0x1F
  3324  00007F                     	ds	2
  3325  000081                     i2c_eeprom_read_calibration@cntr:
  3326                           	opt stack 0
  3327  000081                     flash_page_write@data:
  3328                           	opt stack 0
  3329  000081                     flash_partial_write@start:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x21
  3333  000081                     	ds	2
  3334  000083                     i2c_eeprom_write@slave_address:
  3335                           	opt stack 0
  3336  000083                     flash_page_write@match:
  3337                           	opt stack 0
  3338  000083                     flash_partial_write@length:
  3339                           	opt stack 0
  3340  000083                     flash_partial_read@address:
  3341                           	opt stack 0
  3342  000083                     __display_itoa@tmp:
  3343                           	opt stack 0
  3344                           
  3345                           ; 10 bytes @ 0x23
  3346  000083                     	ds	1
  3347  000084                     i2c_eeprom_write@cntr:
  3348                           	opt stack 0
  3349  000084                     ExternalFlash_SectorWrite@config:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x24
  3353  000084                     	ds	1
  3354  000085                     ??__write_calibration:
  3355  000085                     flash_partial_write@data:
  3356                           	opt stack 0
  3357  000085                     rtcc_write_eeprom@date:
  3358                           	opt stack 0
  3359  000085                     __display_usb@low:
  3360                           	opt stack 0
  3361                           
  3362                           ; 16 bytes @ 0x25
  3363  000085                     	ds	1
  3364  000086                     ExternalFlash_SectorWrite@sector_addr:
  3365                           	opt stack 0
  3366                           
  3367                           ; 4 bytes @ 0x26
  3368  000086                     	ds	1
  3369  000087                     ??__root_is_available:
  3370  000087                     ?__get_empty_cluster:
  3371                           	opt stack 0
  3372  000087                     ?_fat_get_empty_clusters:
  3373                           	opt stack 0
  3374  000087                     ?__read_fat:
  3375                           	opt stack 0
  3376  000087                     flash_partial_write@match:
  3377                           	opt stack 0
  3378  000087                     flash_page_read@page:
  3379                           	opt stack 0
  3380  000087                     __get_empty_cluster@first_cluster:
  3381                           	opt stack 0
  3382  000087                     fat_get_empty_clusters@maximum:
  3383                           	opt stack 0
  3384  000087                     __read_fat@cluster:
  3385                           	opt stack 0
  3386  000087                     __read_root@data:
  3387                           	opt stack 0
  3388  000087                     fat_find_file@name:
  3389                           	opt stack 0
  3390  000087                     __write_calibration@buffer:
  3391                           	opt stack 0
  3392                           
  3393                           ; 16 bytes @ 0x27
  3394  000087                     	ds	1
  3395  000088                     __root_is_available@root_sector:
  3396                           	opt stack 0
  3397  000088                     __write_fat@cluster:
  3398                           	opt stack 0
  3399  000088                     __write_root@data:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x28
  3403  000088                     	ds	1
  3404  000089                     ??__read_root:
  3405  000089                     flash_page_read@data:
  3406                           	opt stack 0
  3407  000089                     __get_empty_cluster@fat_sector:
  3408                           	opt stack 0
  3409  000089                     fat_get_empty_clusters@fat_sector:
  3410                           	opt stack 0
  3411  000089                     __read_fat@fat_sector:
  3412                           	opt stack 0
  3413  000089                     fat_find_file@extension:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x29
  3417  000089                     	ds	1
  3418  00008A                     ??__write_root:
  3419  00008A                     ExternalFlash_SectorWrite@buffer:
  3420                           	opt stack 0
  3421  00008A                     __root_is_available@offset:
  3422                           	opt stack 0
  3423  00008A                     __write_fat@value:
  3424                           	opt stack 0
  3425  00008A                     __read_root@root_sector:
  3426                           	opt stack 0
  3427  00008A                     __display_outputs@low:
  3428                           	opt stack 0
  3429                           
  3430                           ; 16 bytes @ 0x2A
  3431  00008A                     	ds	1
  3432  00008B                     __parse_command_short@cmd:
  3433                           	opt stack 0
  3434  00008B                     rtcc_read_eeprom@error_found:
  3435                           	opt stack 0
  3436  00008B                     ExternalFlash_SectorRead@config:
  3437                           	opt stack 0
  3438  00008B                     __get_empty_cluster@offset:
  3439                           	opt stack 0
  3440  00008B                     fat_get_empty_clusters@offset:
  3441                           	opt stack 0
  3442  00008B                     __read_fat@offset:
  3443                           	opt stack 0
  3444  00008B                     __write_root@root_sector:
  3445                           	opt stack 0
  3446  00008B                     fat_find_file@buffer:
  3447                           	opt stack 0
  3448                           
  3449                           ; 11 bytes @ 0x2B
  3450  00008B                     	ds	1
  3451  00008C                     ??_APP_DeviceCustomHIDTasks:
  3452  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3453                           	opt stack 0
  3454  00008C                     __root_is_available@file_number:
  3455                           	opt stack 0
  3456  00008C                     __write_fat@fat_sector:
  3457                           	opt stack 0
  3458  00008C                     __read_root@offset:
  3459                           	opt stack 0
  3460  00008C                     rtcc_read_eeprom@date:
  3461                           	opt stack 0
  3462                           
  3463                           ; 6 bytes @ 0x2C
  3464  00008C                     	ds	1
  3465  00008D                     __display_itoa@len:
  3466                           	opt stack 0
  3467  00008D                     __root_is_available@first_byte:
  3468                           	opt stack 0
  3469  00008D                     ExternalFlash_SectorWrite@page:
  3470                           	opt stack 0
  3471  00008D                     __get_empty_cluster@value:
  3472                           	opt stack 0
  3473  00008D                     fat_get_empty_clusters@value:
  3474                           	opt stack 0
  3475  00008D                     __read_fat@value:
  3476                           	opt stack 0
  3477  00008D                     __write_root@offset:
  3478                           	opt stack 0
  3479  00008D                     ExternalFlash_SectorRead@sector_addr:
  3480                           	opt stack 0
  3481                           
  3482                           ; 4 bytes @ 0x2D
  3483  00008D                     	ds	1
  3484  00008E                     __display_itoa@missing:
  3485                           	opt stack 0
  3486  00008E                     __get_available_root_entry@file_number:
  3487                           	opt stack 0
  3488  00008E                     __read_root@slot:
  3489                           	opt stack 0
  3490  00008E                     __write_fat@offset:
  3491                           	opt stack 0
  3492                           
  3493                           ; 2 bytes @ 0x2E
  3494  00008E                     	ds	1
  3495  00008F                     ??_MSDWriteHandler:
  3496  00008F                     __display_itoa@pos:
  3497                           	opt stack 0
  3498  00008F                     __write_root@slot:
  3499                           	opt stack 0
  3500  00008F                     __get_empty_cluster@cluster:
  3501                           	opt stack 0
  3502  00008F                     fat_get_empty_clusters@empty_clusters:
  3503                           	opt stack 0
  3504                           
  3505                           ; 2 bytes @ 0x2F
  3506  00008F                     	ds	1
  3507  000090                     ??__display_charger:
  3508  000090                     ??__display_efficiency:
  3509  000090                     __display_inout@line1:
  3510                           	opt stack 0
  3511  000090                     __display_temperature@header:
  3512                           	opt stack 0
  3513                           
  3514                           ; 20 bytes @ 0x30
  3515  000090                     	ds	1
  3516  000091                     ExternalFlash_SectorRead@buffer:
  3517                           	opt stack 0
  3518  000091                     fat_get_empty_clusters@cluster:
  3519                           	opt stack 0
  3520  000091                     fat_append_to_file@number_of_bytes:
  3521                           	opt stack 0
  3522                           
  3523                           ; 2 bytes @ 0x31
  3524  000091                     	ds	1
  3525  000092                     rtcc_read_eeprom@buffer:
  3526                           	opt stack 0
  3527  000092                     __display_efficiency@header:
  3528                           	opt stack 0
  3529                           
  3530                           ; 19 bytes @ 0x32
  3531  000092                     	ds	1
  3532  000093                     ExternalFlash_SectorRead@page:
  3533                           	opt stack 0
  3534  000093                     fat_append_to_file@data:
  3535                           	opt stack 0
  3536                           
  3537                           ; 2 bytes @ 0x33
  3538  000093                     	ds	1
  3539  000094                     APP_DeviceCustomHIDTasks@return_value:
  3540                           	opt stack 0
  3541                           
  3542                           ; 2 bytes @ 0x34
  3543  000094                     	ds	1
  3544  000095                     ??_MSDReadHandler:
  3545  000095                     ??_fat_append_to_file:
  3546  000095                     __display_usb@usb_on:
  3547                           	opt stack 0
  3548                           
  3549                           ; 16 bytes @ 0x35
  3550  000095                     	ds	1
  3551  000096                     APP_DeviceCustomHIDTasks@idx:
  3552                           	opt stack 0
  3553  000096                     fat_find_file@slot:
  3554                           	opt stack 0
  3555                           
  3556                           ; 1 bytes @ 0x36
  3557  000096                     	ds	1
  3558  000097                     __write_calibration@addr:
  3559                           	opt stack 0
  3560  000097                     fat_find_file@sector:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x37
  3564  000097                     	ds	2
  3565  000099                     ??_MSDProcessCommandMediaPresent:
  3566  000099                     __write_calibration@ptr:
  3567                           	opt stack 0
  3568  000099                     fat_find_file@offset:
  3569                           	opt stack 0
  3570                           
  3571                           ; 2 bytes @ 0x39
  3572  000099                     	ds	1
  3573  00009A                     __display_outputs@header:
  3574                           	opt stack 0
  3575                           
  3576                           ; 14 bytes @ 0x3A
  3577  00009A                     	ds	1
  3578  00009B                     __write_calibration@index:
  3579                           	opt stack 0
  3580  00009B                     _MSDProcessCommandMediaPresent$2712:
  3581                           	opt stack 0
  3582  00009B                     fat_create_file@name:
  3583                           	opt stack 0
  3584                           
  3585                           ; 2 bytes @ 0x3B
  3586  00009B                     	ds	1
  3587  00009C                     __write_calibration@cntr:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x3C
  3591  00009C                     	ds	1
  3592  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3593                           	opt stack 0
  3594  00009D                     fat_create_file@extension:
  3595                           	opt stack 0
  3596  00009D                     fat_append_to_file@sector:
  3597                           	opt stack 0
  3598                           
  3599                           ; 2 bytes @ 0x3D
  3600  00009D                     	ds	1
  3601  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3602                           	opt stack 0
  3603                           
  3604                           ; 4 bytes @ 0x3E
  3605  00009E                     	ds	1
  3606  00009F                     fat_create_file@size:
  3607                           	opt stack 0
  3608  00009F                     fat_append_to_file@file_size:
  3609                           	opt stack 0
  3610                           
  3611                           ; 4 bytes @ 0x3F
  3612  00009F                     	ds	3
  3613  0000A2                     MSDProcessCommandMediaPresent@capacity:
  3614                           	opt stack 0
  3615  0000A2                     __display_inout@line2:
  3616                           	opt stack 0
  3617                           
  3618                           ; 18 bytes @ 0x42
  3619  0000A2                     	ds	1
  3620  0000A3                     ??_fat_create_file:
  3621  0000A3                     fat_append_to_file@new_cluster:
  3622                           	opt stack 0
  3623                           
  3624                           ; 2 bytes @ 0x43
  3625  0000A3                     	ds	1
  3626  0000A4                     __display_temperature@external1:
  3627                           	opt stack 0
  3628                           
  3629                           ; 12 bytes @ 0x44
  3630  0000A4                     	ds	1
  3631  0000A5                     __display_usb@cntr:
  3632                           	opt stack 0
  3633  0000A5                     fat_append_to_file@fat_cluster:
  3634                           	opt stack 0
  3635  0000A5                     __display_efficiency@source:
  3636                           	opt stack 0
  3637                           
  3638                           ; 19 bytes @ 0x45
  3639  0000A5                     	ds	1
  3640  0000A6                     MSDProcessCommandMediaPresent@i:
  3641                           	opt stack 0
  3642                           
  3643                           ; 1 bytes @ 0x46
  3644  0000A6                     	ds	1
  3645  0000A7                     ??_MSDProcessCommand:
  3646  0000A7                     fat_create_file@next_cluster:
  3647                           	opt stack 0
  3648  0000A7                     fat_append_to_file@offset:
  3649                           	opt stack 0
  3650                           
  3651                           ; 2 bytes @ 0x47
  3652  0000A7                     	ds	1
  3653  0000A8                     __display_outputs@mode:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x48
  3657  0000A8                     	ds	1
  3658  0000A9                     __display_outputs@cntr:
  3659                           	opt stack 0
  3660  0000A9                     fat_append_to_file@file_number:
  3661                           	opt stack 0
  3662  0000A9                     fat_create_file@cluster_count:
  3663                           	opt stack 0
  3664                           
  3665                           ; 2 bytes @ 0x49
  3666  0000A9                     	ds	1
  3667  0000AA                     fat_append_to_file@length:
  3668                           	opt stack 0
  3669                           
  3670                           ; 2 bytes @ 0x4A
  3671  0000AA                     	ds	1
  3672  0000AB                     fat_create_file@root_slot:
  3673                           	opt stack 0
  3674                           
  3675                           ; 1 bytes @ 0x4B
  3676  0000AB                     	ds	1
  3677  0000AC                     ??_MSDTasks:
  3678  0000AC                     fat_create_file@number_of_clusters:
  3679                           	opt stack 0
  3680  0000AC                     fat_append_to_file@position:
  3681                           	opt stack 0
  3682                           
  3683                           ; 4 bytes @ 0x4C
  3684  0000AC                     	ds	1
  3685  0000AD                     _MSDTasks$2694:
  3686                           	opt stack 0
  3687                           
  3688                           ; 2 bytes @ 0x4D
  3689  0000AD                     	ds	1
  3690  0000AE                     fat_create_file@cluster:
  3691                           	opt stack 0
  3692                           
  3693                           ; 2 bytes @ 0x4E
  3694  0000AE                     	ds	1
  3695  0000AF                     _MSDTasks$2695:
  3696                           	opt stack 0
  3697                           
  3698                           ; 2 bytes @ 0x4F
  3699  0000AF                     	ds	1
  3700  0000B0                     __display_temperature@external2:
  3701                           	opt stack 0
  3702  0000B0                     fat_create_file@root_entry:
  3703                           	opt stack 0
  3704  0000B0                     fat_append_to_file@root:
  3705                           	opt stack 0
  3706                           
  3707                           ; 32 bytes @ 0x50
  3708  0000B0                     	ds	1
  3709  0000B1                     MSDTasks@i:
  3710                           	opt stack 0
  3711                           
  3712                           ; 1 bytes @ 0x51
  3713  0000B1                     	ds	1
  3714  0000B2                     
  3715                           ; 1 bytes @ 0x52
  3716  0000B2                     	ds	2
  3717  0000B4                     __display_inout@line4:
  3718                           	opt stack 0
  3719                           
  3720                           ; 14 bytes @ 0x54
  3721  0000B4                     	ds	4
  3722  0000B8                     __display_efficiency@footer:
  3723                           	opt stack 0
  3724                           
  3725                           ; 14 bytes @ 0x58
  3726  0000B8                     	ds	4
  3727  0000BC                     __display_temperature@internal:
  3728                           	opt stack 0
  3729                           
  3730                           ; 11 bytes @ 0x5C
  3731  0000BC                     	ds	6
  3732  0000C2                     __display_inout@line3:
  3733                           	opt stack 0
  3734                           
  3735                           ; 3 bytes @ 0x62
  3736  0000C2                     	ds	3
  3737  0000C5                     __display_inout@cntr:
  3738                           	opt stack 0
  3739                           
  3740                           ; 1 bytes @ 0x65
  3741  0000C5                     	ds	1
  3742  0000C6                     __display_efficiency@efficiency:
  3743                           	opt stack 0
  3744                           
  3745                           ; 3 bytes @ 0x66
  3746  0000C6                     	ds	1
  3747  0000C7                     __display_temperature@cntr:
  3748                           	opt stack 0
  3749                           
  3750                           ; 1 bytes @ 0x67
  3751  0000C7                     	ds	2
  3752  0000C9                     __display_efficiency@panel:
  3753                           	opt stack 0
  3754                           
  3755                           ; 4 bytes @ 0x69
  3756  0000C9                     	ds	4
  3757  0000CD                     __display_efficiency@battery:
  3758                           	opt stack 0
  3759                           
  3760                           ; 4 bytes @ 0x6D
  3761  0000CD                     	ds	3
  3762  0000D0                     
  3763                           ; 1 bytes @ 0x70
  3764  0000D0                     	ds	1
  3765  0000D1                     __display_efficiency@cntr:
  3766                           	opt stack 0
  3767                           
  3768                           ; 1 bytes @ 0x71
  3769  0000D1                     	ds	1
  3770  0000D2                     ??_display_prepare:
  3771                           
  3772                           ; 1 bytes @ 0x72
  3773  0000D2                     	ds	2
  3774  0000D4                     display_prepare@mode:
  3775                           	opt stack 0
  3776                           
  3777                           ; 1 bytes @ 0x74
  3778  0000D4                     	ds	1
  3779  0000D5                     ??_main:
  3780                           
  3781                           ; 1 bytes @ 0x75
  3782  0000D5                     	ds	2
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           postdec1	equ	0xFE5
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           
  3793                           	psect	cstackCOMRAM
  3794  00002E                     __pcstackCOMRAM:
  3795                           	opt stack 0
  3796  00002E                     ??_USBStdGetDscHandler:
  3797  00002E                     ??_USBStdGetStatusHandler:
  3798  00002E                     ?i2_USBTransferOnePacket:
  3799                           	opt stack 0
  3800  00002E                     ?i2_ExternalFlash_MediaInitialize:
  3801                           	opt stack 0
  3802  00002E                     USBConfigureEndpoint@direction:
  3803                           	opt stack 0
  3804  00002E                     USBCtrlTrfTxService@byteToSend:
  3805                           	opt stack 0
  3806  00002E                     USBCtrlTrfRxService@i:
  3807                           	opt stack 0
  3808  00002E                     i2USBTransferOnePacket@dir:
  3809                           	opt stack 0
  3810  00002E                     i2USBStallEndpoint@dir:
  3811                           	opt stack 0
  3812  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  3813                           	opt stack 0
  3814  00002E                     i2ExternalFlash_MediaInitialize@config:
  3815                           	opt stack 0
  3816  00002E                     i2ExternalFlash_MediaDetect@config:
  3817                           	opt stack 0
  3818  00002E                     i2memcpy@d1:
  3819                           	opt stack 0
  3820  00002E                     i2memset@p1:
  3821                           	opt stack 0
  3822                           
  3823                           ; 2 bytes @ 0x0
  3824  00002E                     	ds	1
  3825  00002F                     ??_USBConfigureEndpoint:
  3826  00002F                     ??i2_USBStallEndpoint:
  3827  00002F                     USBCtrlTrfRxService@byteToRead:
  3828                           	opt stack 0
  3829  00002F                     USBCtrlTrfInHandler@lastDTS:
  3830                           	opt stack 0
  3831  00002F                     USBStdGetStatusHandler@p:
  3832                           	opt stack 0
  3833  00002F                     i2USBTransferOnePacket@data:
  3834                           	opt stack 0
  3835                           
  3836                           ; 2 bytes @ 0x1
  3837  00002F                     	ds	1
  3838  000030                     i2SYSTEM_Initialize@pll_startup_counter_3284:
  3839                           	opt stack 0
  3840  000030                     i2memcpy@s1:
  3841                           	opt stack 0
  3842  000030                     i2memset@c:
  3843                           	opt stack 0
  3844                           
  3845                           ; 2 bytes @ 0x2
  3846  000030                     	ds	1
  3847  000031                     i2USBTransferOnePacket@len:
  3848                           	opt stack 0
  3849                           
  3850                           ; 1 bytes @ 0x3
  3851  000031                     	ds	1
  3852  000032                     ??i2_USBTransferOnePacket:
  3853  000032                     i2SYSTEM_Initialize@state:
  3854                           	opt stack 0
  3855  000032                     i2memcpy@n:
  3856                           	opt stack 0
  3857  000032                     i2memset@n:
  3858                           	opt stack 0
  3859                           
  3860                           ; 2 bytes @ 0x4
  3861  000032                     	ds	1
  3862  000033                     USBConfigureEndpoint@EPNum:
  3863                           	opt stack 0
  3864  000033                     i2USBStallEndpoint@ep:
  3865                           	opt stack 0
  3866                           
  3867                           ; 1 bytes @ 0x5
  3868  000033                     	ds	1
  3869  000034                     USBConfigureEndpoint@handle:
  3870                           	opt stack 0
  3871  000034                     i2USBStallEndpoint@p:
  3872                           	opt stack 0
  3873  000034                     i2memcpy@d:
  3874                           	opt stack 0
  3875  000034                     i2memset@p:
  3876                           	opt stack 0
  3877                           
  3878                           ; 2 bytes @ 0x6
  3879  000034                     	ds	2
  3880  000036                     USBEnableEndpoint@options:
  3881                           	opt stack 0
  3882  000036                     i2USBDeviceInit@i:
  3883                           	opt stack 0
  3884  000036                     i2USBTransferOnePacket@ep:
  3885                           	opt stack 0
  3886  000036                     i2memcpy@s:
  3887                           	opt stack 0
  3888                           
  3889                           ; 2 bytes @ 0x8
  3890  000036                     	ds	1
  3891  000037                     USBEnableEndpoint@p:
  3892                           	opt stack 0
  3893  000037                     i2USBTransferOnePacket@handle:
  3894                           	opt stack 0
  3895                           
  3896                           ; 2 bytes @ 0x9
  3897  000037                     	ds	1
  3898  000038                     i2memcpy@tmp:
  3899                           	opt stack 0
  3900                           
  3901                           ; 1 bytes @ 0xA
  3902  000038                     	ds	1
  3903  000039                     ??_USBMSDInit:
  3904  000039                     USBEnableEndpoint@ep:
  3905                           	opt stack 0
  3906  000039                     _USBCheckMSDRequest$2640:
  3907                           	opt stack 0
  3908  000039                     MSDTransferTerminated@handle:
  3909                           	opt stack 0
  3910                           
  3911                           ; 2 bytes @ 0xB
  3912  000039                     	ds	1
  3913  00003A                     
  3914                           ; 1 bytes @ 0xC
  3915  00003A                     	ds	1
  3916  00003B                     _USBCheckMSDRequest$2641:
  3917                           	opt stack 0
  3918  00003B                     _MSDTransferTerminated$2729:
  3919                           	opt stack 0
  3920                           
  3921                           ; 2 bytes @ 0xD
  3922  00003B                     	ds	1
  3923  00003C                     
  3924                           ; 1 bytes @ 0xE
  3925  00003C                     	ds	1
  3926  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3927                           	opt stack 0
  3928                           
  3929                           ; 2 bytes @ 0xF
  3930  00003D                     	ds	2
  3931  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3932                           	opt stack 0
  3933                           
  3934                           ; 2 bytes @ 0x11
  3935  00003F                     	ds	2
  3936  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3937                           	opt stack 0
  3938                           
  3939                           ; 2 bytes @ 0x13
  3940  000041                     	ds	2
  3941  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3942                           
  3943                           ; 1 bytes @ 0x15
  3944  000043                     	ds	2
  3945  000045                     ??_USBStdFeatureReqHandler:
  3946  000045                     USBStdSetCfgHandler@i:
  3947                           	opt stack 0
  3948                           
  3949                           ; 1 bytes @ 0x17
  3950  000045                     	ds	1
  3951  000046                     USBStdFeatureReqHandler@pUEP:
  3952                           	opt stack 0
  3953                           
  3954                           ; 2 bytes @ 0x18
  3955  000046                     	ds	2
  3956  000048                     USBStdFeatureReqHandler@current_ep_data:
  3957                           	opt stack 0
  3958                           
  3959                           ; 1 bytes @ 0x1A
  3960  000048                     	ds	1
  3961  000049                     USBStdFeatureReqHandler@p:
  3962                           	opt stack 0
  3963                           
  3964                           ; 2 bytes @ 0x1B
  3965  000049                     	ds	2
  3966  00004B                     ??_USBCtrlEPService:
  3967  00004B                     
  3968                           ; 1 bytes @ 0x1D
  3969  00004B                     	ds	1
  3970  00004C                     USBDeviceTasks@i:
  3971                           	opt stack 0
  3972                           
  3973                           ; 1 bytes @ 0x1E
  3974  00004C                     	ds	1
  3975  00004D                     ??_SYS_InterruptHigh:
  3976                           
  3977                           ; 1 bytes @ 0x1F
  3978  00004D                     	ds	14
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           postinc0	equ	0xFEE
  3984                           wreg	equ	0xFE8
  3985                           postdec1	equ	0xFE5
  3986                           fsr1h	equ	0xFE2
  3987                           fsr1l	equ	0xFE1
  3988                           
  3989 ;;
  3990 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3991 ;;
  3992 ;; *************** function _main *****************
  3993 ;; Defined at:
  3994 ;;		line 50 in file "main.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels required when called:   22
  4014 ;; This function calls:
  4015 ;;		_APP_DeviceCustomHIDTasks
  4016 ;;		_APP_DeviceMSDTasks
  4017 ;;		_SYSTEM_Initialize
  4018 ;;		_USBDeviceAttach
  4019 ;;		_USBDeviceInit
  4020 ;;		_adc_calculate_temperature
  4021 ;;		_adc_calibrate
  4022 ;;		_adc_read
  4023 ;;		_buck_get_mode
  4024 ;;		_buck_operate
  4025 ;;		_display_prepare
  4026 ;;		_display_update
  4027 ;;		_i2c_adc_read
  4028 ;;		_i2c_adc_start
  4029 ;;		_i2c_eeprom_tasks
  4030 ;;		_log_collect_data
  4031 ;;		_log_get_number_of_samples
  4032 ;;		_log_start_new
  4033 ;;		_log_write_to_disk
  4034 ;;		_system_calculate_input_current
  4035 ;;		_system_calculate_input_voltage
  4036 ;;		_system_calculate_output_current
  4037 ;;		_system_calculate_output_voltage
  4038 ;;		_system_init
  4039 ;;		_system_output_off
  4040 ;;		_ui_get_status
  4041 ;;		_ui_run
  4042 ;; This function is called by:
  4043 ;;		Startup code after reset
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text0
  4048  00B816                     __ptext0:
  4049                           	opt stack 0
  4050  00B816                     _main:
  4051                           	opt stack 9
  4052                           
  4053                           ;main.c: 55: system_init();
  4054                           
  4055                           ; BSR set to: 1
  4056                           ;incstack = 0
  4057  00B816  EC79  F07B         	call	_system_init	;wreg free
  4058                           
  4059                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4060  00B81A  0E00               	movlw	0
  4061  00B81C  EC28  F095         	call	_SYSTEM_Initialize
  4062                           
  4063                           ;main.c: 59: USBDeviceInit();
  4064  00B820  ECD1  F070         	call	_USBDeviceInit	;wreg free
  4065                           
  4066                           ;main.c: 60: USBDeviceAttach();
  4067  00B824  EC08  F09C         	call	_USBDeviceAttach	;wreg free
  4068  00B828                     l22795:
  4069                           
  4070                           ;main.c: 63: {
  4071                           ;main.c: 86: APP_DeviceMSDTasks();
  4072  00B828  EC19  F0A1         	call	_APP_DeviceMSDTasks	;wreg free
  4073                           
  4074                           ;main.c: 88: if(!os.done)
  4075  00B82C  0102               	movlb	2	; () banked
  4076  00B82E  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4077  00B830  A4D8               	btfss	status,2,c
  4078  00B832  D7FA               	goto	l22795
  4079                           
  4080                           ; BSR set to: 2
  4081  00B834  0004               	clrwdt		;# 
  4082                           
  4083                           ;main.c: 96: if(os.output_voltage<12000)
  4084  00B836  0102               	movlb	2	; () banked
  4085  00B838  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4086  00B83A  D008               	goto	l22803
  4087  00B83C  0EE0               	movlw	224
  4088  00B83E  0102               	movlb	2	; () banked
  4089  00B840  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4090  00B842  0E2E               	movlw	46
  4091  00B844  0102               	movlb	2	; () banked
  4092  00B846  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4093  00B848  B0D8               	btfsc	status,0,c
  4094  00B84A  D003               	goto	l22805
  4095  00B84C                     l22803:
  4096                           
  4097                           ; BSR set to: 2
  4098                           ;main.c: 97: {
  4099                           ;main.c: 98: system_output_off(OUTPUT_USB);
  4100  00B84C  0E10               	movlw	16
  4101  00B84E  ECEC  F098         	call	_system_output_off
  4102  00B852                     l22805:
  4103                           
  4104                           ;main.c: 99: }
  4105                           ;main.c: 100: if(os.output_voltage<-1)
  4106  00B852  0102               	movlb	2	; () banked
  4107  00B854  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4108  00B856  D013               	goto	l22809
  4109  00B858  0102               	movlb	2	; () banked
  4110  00B85A  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4111  00B85C  0EFF               	movlw	255
  4112  00B85E  0102               	movlb	2	; () banked
  4113  00B860  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4114  00B862  B0D8               	btfsc	status,0,c
  4115  00B864  D00C               	goto	l22809
  4116                           
  4117                           ; BSR set to: 2
  4118                           ;main.c: 101: {
  4119                           ;main.c: 102: system_output_off(OUTPUT_1);
  4120  00B866  0E01               	movlw	1
  4121  00B868  ECEC  F098         	call	_system_output_off
  4122                           
  4123                           ;main.c: 103: system_output_off(OUTPUT_2);
  4124  00B86C  0E02               	movlw	2
  4125  00B86E  ECEC  F098         	call	_system_output_off
  4126                           
  4127                           ;main.c: 104: system_output_off(OUTPUT_3);
  4128  00B872  0E04               	movlw	4
  4129  00B874  ECEC  F098         	call	_system_output_off
  4130                           
  4131                           ;main.c: 105: system_output_off(OUTPUT_4);
  4132  00B878  0E08               	movlw	8
  4133  00B87A  ECEC  F098         	call	_system_output_off
  4134  00B87E                     l22809:
  4135                           
  4136                           ;main.c: 106: }
  4137                           ;main.c: 109: i2c_eeprom_tasks();
  4138  00B87E  ECAB  F093         	call	_i2c_eeprom_tasks	;wreg free
  4139                           
  4140                           ;main.c: 112: ui_run();
  4141  00B882  EC05  F07C         	call	_ui_run	;wreg free
  4142                           
  4143                           ;main.c: 115: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4144  00B886  0E00               	movlw	0
  4145  00B888  EC2B  F08E         	call	_adc_read
  4146  00B88C  0100               	movlb	0	; () banked
  4147  00B88E  5160               	movf	?_adc_read& (0+255),w,b
  4148  00B890  0102               	movlb	2	; () banked
  4149  00B892  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4150  00B894  0100               	movlb	0	; () banked
  4151  00B896  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4152  00B898  0102               	movlb	2	; () banked
  4153  00B89A  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4154                           
  4155                           ;main.c: 116: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _1);
  4156  00B89C  0E01               	movlw	1
  4157  00B89E  EC2B  F08E         	call	_adc_read
  4158  00B8A2  0100               	movlb	0	; () banked
  4159  00B8A4  5160               	movf	?_adc_read& (0+255),w,b
  4160  00B8A6  0102               	movlb	2	; () banked
  4161  00B8A8  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4162  00B8AA  0100               	movlb	0	; () banked
  4163  00B8AC  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4164  00B8AE  0102               	movlb	2	; () banked
  4165  00B8B0  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4166                           
  4167                           ;main.c: 117: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _2);
  4168  00B8B2  0E02               	movlw	2
  4169  00B8B4  EC2B  F08E         	call	_adc_read
  4170  00B8B8  0100               	movlb	0	; () banked
  4171  00B8BA  5160               	movf	?_adc_read& (0+255),w,b
  4172  00B8BC  0102               	movlb	2	; () banked
  4173  00B8BE  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4174  00B8C0  0100               	movlb	0	; () banked
  4175  00B8C2  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4176  00B8C4  0102               	movlb	2	; () banked
  4177  00B8C6  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4178                           
  4179                           ;main.c: 120: switch(os.timeSlot&0b00001111)
  4180  00B8C8  D122               	goto	l22891
  4181  00B8CA                     l22813:
  4182                           
  4183                           ;main.c: 123: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4184  00B8CA  0E01               	movlw	1
  4185  00B8CC  0100               	movlb	0	; () banked
  4186  00B8CE  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4187  00B8D0  0E00               	movlw	0
  4188  00B8D2  0100               	movlb	0	; () banked
  4189  00B8D4  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4190  00B8D6  0E00               	movlw	0
  4191  00B8D8  EC38  F09A         	call	_i2c_adc_start
  4192                           
  4193                           ;main.c: 124: break;
  4194  00B8DC  D14C               	goto	l22893
  4195  00B8DE                     l22815:
  4196                           
  4197                           ;main.c: 127: APP_DeviceCustomHIDTasks();
  4198  00B8DE  EC5D  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4199                           
  4200                           ;main.c: 131: break;
  4201  00B8E2  D149               	goto	l22893
  4202  00B8E4                     l22817:
  4203                           
  4204                           ;main.c: 135: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4205  00B8E4  ECDC  F097         	call	_i2c_adc_read	;wreg free
  4206  00B8E8  0102               	movlb	2	; () banked
  4207  00B8EA  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4208  00B8EC  0B0F               	andlw	15
  4209  00B8EE  0B03               	andlw	3
  4210  00B8F0  0100               	movlb	0	; () banked
  4211  00B8F2  6FD5               	movwf	??_main& (0+255),b
  4212  00B8F4  6BD6               	clrf	(??_main+1)& (0+255),b
  4213  00B8F6  90D8               	bcf	status,0,c
  4214  00B8F8  0100               	movlb	0	; () banked
  4215  00B8FA  37D5               	rlcf	??_main& (0+255),f,b
  4216  00B8FC  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4217  00B8FE  0E1F               	movlw	low (_os+31)
  4218  00B900  0100               	movlb	0	; () banked
  4219  00B902  25D5               	addwf	??_main& (0+255),w,b
  4220  00B904  6ED9               	movwf	fsr2l,c
  4221  00B906  0E02               	movlw	high (_os+31)
  4222  00B908  0100               	movlb	0	; () banked
  4223  00B90A  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4224  00B90C  6EDA               	movwf	fsr2h,c
  4225  00B90E  0100               	movlb	0	; () banked
  4226  00B910  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4227  00B914  0100               	movlb	0	; () banked
  4228  00B916  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;main.c: 136: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4232  00B91A  0E01               	movlw	1
  4233  00B91C  0100               	movlb	0	; () banked
  4234  00B91E  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4235  00B920  0E00               	movlw	0
  4236  00B922  0100               	movlb	0	; () banked
  4237  00B924  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4238  00B926  0E03               	movlw	3
  4239  00B928  EC38  F09A         	call	_i2c_adc_start
  4240                           
  4241                           ;main.c: 137: system_calculate_output_voltage();
  4242  00B92C  EC9A  F07D         	call	_system_calculate_output_voltage	;wreg free
  4243                           
  4244                           ;main.c: 138: break;
  4245  00B930  D122               	goto	l22893
  4246  00B932                     l22823:
  4247                           
  4248                           ;main.c: 141: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4249  00B932  EC74  F0A1         	call	_ui_get_status	;wreg free
  4250  00B936  0A05               	xorlw	5
  4251  00B938  A4D8               	btfss	status,2,c
  4252  00B93A  D11D               	goto	l22893
  4253                           
  4254                           ;main.c: 142: {
  4255                           ;main.c: 143: display_prepare(os.display_mode);
  4256  00B93C  0102               	movlb	2	; () banked
  4257  00B93E  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4258  00B940  EC40  F08F         	call	_display_prepare
  4259                           
  4260                           ;main.c: 144: }
  4261                           ;main.c: 145: break;
  4262  00B944  D118               	goto	l22893
  4263  00B946                     l22827:
  4264                           
  4265                           ;main.c: 148: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4266  00B946  EC74  F0A1         	call	_ui_get_status	;wreg free
  4267                           
  4268                           ;main.c: 151: }
  4269                           ;main.c: 152: break;
  4270                           
  4271                           ;main.c: 149: {
  4272  00B94A  D115               	goto	l22893
  4273  00B94C                     l22829:
  4274                           
  4275                           ;main.c: 155: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4276  00B94C  ECDC  F097         	call	_i2c_adc_read	;wreg free
  4277  00B950  0102               	movlb	2	; () banked
  4278  00B952  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4279  00B954  0B0F               	andlw	15
  4280  00B956  0B03               	andlw	3
  4281  00B958  0100               	movlb	0	; () banked
  4282  00B95A  6FD5               	movwf	??_main& (0+255),b
  4283  00B95C  6BD6               	clrf	(??_main+1)& (0+255),b
  4284  00B95E  90D8               	bcf	status,0,c
  4285  00B960  0100               	movlb	0	; () banked
  4286  00B962  37D5               	rlcf	??_main& (0+255),f,b
  4287  00B964  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4288  00B966  0E0A               	movlw	low (_os+10)
  4289  00B968  0100               	movlb	0	; () banked
  4290  00B96A  25D5               	addwf	??_main& (0+255),w,b
  4291  00B96C  6ED9               	movwf	fsr2l,c
  4292  00B96E  0E02               	movlw	high (_os+10)
  4293  00B970  0100               	movlb	0	; () banked
  4294  00B972  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4295  00B974  6EDA               	movwf	fsr2h,c
  4296  00B976  0100               	movlb	0	; () banked
  4297  00B978  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4298  00B97C  0100               	movlb	0	; () banked
  4299  00B97E  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4300                           
  4301                           ;main.c: 157: {
  4302                           ;main.c: 158: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4303                           
  4304                           ; BSR set to: 0
  4305                           
  4306                           ;main.c: 156: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  4307  00B982  0E01               	movlw	1
  4308  00B984  0100               	movlb	0	; () banked
  4309  00B986  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4310  00B988  0E00               	movlw	0
  4311  00B98A  0100               	movlb	0	; () banked
  4312  00B98C  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4313  00B98E  0E01               	movlw	1
  4314  00B990  EC38  F09A         	call	_i2c_adc_start
  4315                           
  4316                           ;main.c: 159: }
  4317                           ;main.c: 160: system_calculate_input_voltage();
  4318  00B994  EC1D  F07E         	call	_system_calculate_input_voltage	;wreg free
  4319                           
  4320                           ;main.c: 161: break;
  4321  00B998  D0EE               	goto	l22893
  4322  00B99A                     l22837:
  4323                           
  4324                           ;main.c: 164: APP_DeviceCustomHIDTasks();
  4325  00B99A  EC5D  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4326                           
  4327                           ;main.c: 165: break;
  4328  00B99E  D0EB               	goto	l22893
  4329  00B9A0                     l22841:
  4330                           
  4331                           ;main.c: 169: {
  4332                           ;main.c: 170: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4333  00B9A0  ECDC  F097         	call	_i2c_adc_read	;wreg free
  4334  00B9A4  0102               	movlb	2	; () banked
  4335  00B9A6  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4336  00B9A8  0B0F               	andlw	15
  4337  00B9AA  0B03               	andlw	3
  4338  00B9AC  0100               	movlb	0	; () banked
  4339  00B9AE  6FD5               	movwf	??_main& (0+255),b
  4340  00B9B0  6BD6               	clrf	(??_main+1)& (0+255),b
  4341  00B9B2  90D8               	bcf	status,0,c
  4342  00B9B4  0100               	movlb	0	; () banked
  4343  00B9B6  37D5               	rlcf	??_main& (0+255),f,b
  4344  00B9B8  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4345  00B9BA  0E29               	movlw	low (_os+41)
  4346  00B9BC  0100               	movlb	0	; () banked
  4347  00B9BE  25D5               	addwf	??_main& (0+255),w,b
  4348  00B9C0  6ED9               	movwf	fsr2l,c
  4349  00B9C2  0E02               	movlw	high (_os+41)
  4350  00B9C4  0100               	movlb	0	; () banked
  4351  00B9C6  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4352  00B9C8  6EDA               	movwf	fsr2h,c
  4353  00B9CA  0100               	movlb	0	; () banked
  4354  00B9CC  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4355  00B9D0  0100               	movlb	0	; () banked
  4356  00B9D2  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;main.c: 171: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4360  00B9D6  0E01               	movlw	1
  4361  00B9D8  0100               	movlb	0	; () banked
  4362  00B9DA  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4363  00B9DC  0E00               	movlw	0
  4364  00B9DE  0100               	movlb	0	; () banked
  4365  00B9E0  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4366  00B9E2  0E02               	movlw	2
  4367  00B9E4  EC38  F09A         	call	_i2c_adc_start
  4368                           
  4369                           ;main.c: 172: system_calculate_output_current();
  4370  00B9E8  EC38  F072         	call	_system_calculate_output_current	;wreg free
  4371                           
  4372                           ;main.c: 173: }
  4373                           ;main.c: 174: break;
  4374  00B9EC  D0C4               	goto	l22893
  4375  00B9EE                     l22847:
  4376                           
  4377                           ;main.c: 177: APP_DeviceCustomHIDTasks();
  4378  00B9EE  EC5D  F056         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4379                           
  4380                           ;main.c: 178: log_collect_data();
  4381  00B9F2  ECF0  F060         	call	_log_collect_data	;wreg free
  4382                           
  4383                           ;main.c: 179: if(log_get_number_of_samples() == 30)
  4384  00B9F6  EC4B  F0A1         	call	_log_get_number_of_samples	;wreg free
  4385  00B9FA  0E1E               	movlw	30
  4386  00B9FC  0100               	movlb	0	; () banked
  4387  00B9FE  1960               	xorwf	?_log_get_number_of_samples& (0+255),w,b
  4388  00BA00  0100               	movlb	0	; () banked
  4389  00BA02  1161               	iorwf	(?_log_get_number_of_samples+1)& (0+255),w,b
  4390  00BA04  A4D8               	btfss	status,2,c
  4391  00BA06  D0B7               	goto	l22893
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;main.c: 180: {
  4395                           ;main.c: 181: log_write_to_disk();
  4396  00BA08  EC72  F08E         	call	_log_write_to_disk	;wreg free
  4397                           
  4398                           ;main.c: 182: log_start_new();
  4399  00BA0C  ECA1  F080         	call	_log_start_new	;wreg free
  4400                           
  4401                           ;main.c: 183: }
  4402                           ;main.c: 184: break;
  4403  00BA10  D0B2               	goto	l22893
  4404  00BA12                     l22859:
  4405                           
  4406                           ;main.c: 188: {
  4407                           ;main.c: 189: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4408  00BA12  ECDC  F097         	call	_i2c_adc_read	;wreg free
  4409  00BA16  0102               	movlb	2	; () banked
  4410  00BA18  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4411  00BA1A  0B0F               	andlw	15
  4412  00BA1C  0B03               	andlw	3
  4413  00BA1E  0100               	movlb	0	; () banked
  4414  00BA20  6FD5               	movwf	??_main& (0+255),b
  4415  00BA22  6BD6               	clrf	(??_main+1)& (0+255),b
  4416  00BA24  90D8               	bcf	status,0,c
  4417  00BA26  0100               	movlb	0	; () banked
  4418  00BA28  37D5               	rlcf	??_main& (0+255),f,b
  4419  00BA2A  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4420  00BA2C  0E14               	movlw	low (_os+20)
  4421  00BA2E  0100               	movlb	0	; () banked
  4422  00BA30  25D5               	addwf	??_main& (0+255),w,b
  4423  00BA32  6ED9               	movwf	fsr2l,c
  4424  00BA34  0E02               	movlw	high (_os+20)
  4425  00BA36  0100               	movlb	0	; () banked
  4426  00BA38  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4427  00BA3A  6EDA               	movwf	fsr2h,c
  4428  00BA3C  0100               	movlb	0	; () banked
  4429  00BA3E  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4430  00BA42  0100               	movlb	0	; () banked
  4431  00BA44  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4432                           
  4433                           ;main.c: 190: system_calculate_input_current();
  4434  00BA48  ECE5  F072         	call	_system_calculate_input_current	;wreg free
  4435                           
  4436                           ;main.c: 191: }
  4437                           ;main.c: 192: break;
  4438  00BA4C  D094               	goto	l22893
  4439  00BA4E                     l22861:
  4440                           
  4441                           ;main.c: 195: buck_operate();
  4442  00BA4E  EC7E  F097         	call	_buck_operate	;wreg free
  4443                           
  4444                           ;main.c: 196: break;
  4445  00BA52  D091               	goto	l22893
  4446  00BA54                     l22863:
  4447                           
  4448                           ;main.c: 200: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  4449  00BA54  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  4450  00BA58  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  4451  00BA5C  0E04               	movlw	4
  4452  00BA5E  0100               	movlb	0	; () banked
  4453  00BA60  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4454  00BA62  EC5E  F07A         	call	_adc_calculate_temperature	;wreg free
  4455  00BA66  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  4456  00BA6A  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  4457                           
  4458                           ;main.c: 201: os.temperature_onboard_adc = 0;
  4459  00BA6E  0E00               	movlw	0
  4460  00BA70  0102               	movlb	2	; () banked
  4461  00BA72  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  4462  00BA74  0E00               	movlw	0
  4463  00BA76  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  4464                           
  4465                           ; BSR set to: 2
  4466                           ;main.c: 202: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  4467  00BA78  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  4468  00BA7C  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  4469  00BA80  0E05               	movlw	5
  4470  00BA82  0100               	movlb	0	; () banked
  4471  00BA84  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4472  00BA86  EC5E  F07A         	call	_adc_calculate_temperature	;wreg free
  4473  00BA8A  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  4474  00BA8E  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  4475                           
  4476                           ;main.c: 203: os.temperature_external_1_adc = 0;
  4477  00BA92  0E00               	movlw	0
  4478  00BA94  0102               	movlb	2	; () banked
  4479  00BA96  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  4480  00BA98  0E00               	movlw	0
  4481  00BA9A  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  4482                           
  4483                           ; BSR set to: 2
  4484                           ;main.c: 204: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  4485  00BA9C  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  4486  00BAA0  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  4487  00BAA4  0E06               	movlw	6
  4488  00BAA6  0100               	movlb	0	; () banked
  4489  00BAA8  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4490  00BAAA  EC5E  F07A         	call	_adc_calculate_temperature	;wreg free
  4491  00BAAE  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  4492  00BAB2  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  4493                           
  4494                           ;main.c: 205: os.temperature_external_2_adc = 0;
  4495  00BAB6  0E00               	movlw	0
  4496  00BAB8  0102               	movlb	2	; () banked
  4497  00BABA  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  4498  00BABC  0E00               	movlw	0
  4499  00BABE  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  4500                           
  4501                           ; BSR set to: 2
  4502                           ;main.c: 206: adc_calibrate();
  4503  00BAC0  EC3F  F0A1         	call	_adc_calibrate	;wreg free
  4504                           
  4505                           ;main.c: 208: if(os.temperature_onboard>3000)
  4506  00BAC4  0102               	movlb	2	; () banked
  4507  00BAC6  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4508  00BAC8  D00A               	goto	l22879
  4509  00BACA  0EB9               	movlw	185
  4510  00BACC  0102               	movlb	2	; () banked
  4511  00BACE  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4512  00BAD0  0E0B               	movlw	11
  4513  00BAD2  0102               	movlb	2	; () banked
  4514  00BAD4  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4515  00BAD6  A0D8               	btfss	status,0,c
  4516  00BAD8  D002               	goto	l22879
  4517                           
  4518                           ; BSR set to: 2
  4519                           ;main.c: 209: {
  4520                           ;main.c: 210: LATDbits.LD1 = 1;
  4521  00BADA  828C               	bsf	3980,1,c	;volatile
  4522                           
  4523                           ;main.c: 211: }
  4524  00BADC  D00B               	goto	l22883
  4525  00BADE                     l22879:
  4526                           
  4527                           ; BSR set to: 2
  4528                           ;main.c: 212: else if(os.temperature_onboard<2500)
  4529  00BADE  0102               	movlb	2	; () banked
  4530  00BAE0  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4531  00BAE2  D007               	goto	l22881
  4532  00BAE4  0EC4               	movlw	196
  4533  00BAE6  0102               	movlb	2	; () banked
  4534  00BAE8  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4535  00BAEA  0E09               	movlw	9
  4536  00BAEC  0102               	movlb	2	; () banked
  4537  00BAEE  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4538  00BAF0  A0D8               	btfss	status,0,c
  4539  00BAF2                     l22881:
  4540                           
  4541                           ; BSR set to: 2
  4542                           ;main.c: 213: {
  4543                           ;main.c: 214: LATDbits.LD1 = 0;
  4544  00BAF2  928C               	bcf	3980,1,c	;volatile
  4545  00BAF4                     l22883:
  4546                           
  4547                           ; BSR set to: 2
  4548                           ;main.c: 215: }
  4549                           ;main.c: 216: display_prepare(os.display_mode);
  4550  00BAF4  0102               	movlb	2	; () banked
  4551  00BAF6  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4552  00BAF8  EC40  F08F         	call	_display_prepare
  4553                           
  4554                           ;main.c: 217: break;
  4555  00BAFC  D03C               	goto	l22893
  4556  00BAFE                     l22885:
  4557                           
  4558                           ;main.c: 220: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4559  00BAFE  EC74  F0A1         	call	_ui_get_status	;wreg free
  4560  00BB02  0A05               	xorlw	5
  4561  00BB04  A4D8               	btfss	status,2,c
  4562  00BB06  D037               	goto	l22893
  4563                           
  4564                           ;main.c: 221: {
  4565                           ;main.c: 222: display_update();
  4566  00BB08  ECB7  F08E         	call	_display_update	;wreg free
  4567                           
  4568                           ;main.c: 225: }
  4569                           
  4570                           ;main.c: 223: }
  4571                           ;main.c: 224: break;
  4572  00BB0C  D034               	goto	l22893
  4573  00BB0E                     l22891:
  4574  00BB0E  0102               	movlb	2	; () banked
  4575  00BB10  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  4576  00BB12  0B0F               	andlw	15
  4577  00BB14  0100               	movlb	0	; () banked
  4578  00BB16  6FD5               	movwf	??_main& (0+255),b
  4579  00BB18  6BD6               	clrf	(??_main+1)& (0+255),b
  4580                           
  4581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4582                           ; Switch size 1, requested type "space"
  4583                           ; Number of cases is 1, Range of values is 0 to 0
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            4     3 (average)
  4587                           ;	Chosen strategy is simple_byte
  4588  00BB1A  0100               	movlb	0	; () banked
  4589  00BB1C  51D6               	movf	(??_main+1)& (0+255),w,b
  4590  00BB1E  0A00               	xorlw	0	; case 0
  4591  00BB20  A4D8               	btfss	status,2,c
  4592  00BB22  D029               	goto	l22893
  4593                           
  4594                           ; BSR set to: 0
  4595                           ; Switch size 1, requested type "space"
  4596                           ; Number of cases is 13, Range of values is 0 to 15
  4597                           ; switch strategies available:
  4598                           ; Name         Instructions Cycles
  4599                           ; simple_byte           40    21 (average)
  4600                           ;	Chosen strategy is simple_byte
  4601  00BB24  0100               	movlb	0	; () banked
  4602  00BB26  51D5               	movf	??_main& (0+255),w,b
  4603  00BB28  0A00               	xorlw	0	; case 0
  4604  00BB2A  B4D8               	btfsc	status,2,c
  4605  00BB2C  D6CE               	goto	l22813
  4606  00BB2E  0A01               	xorlw	1	; case 1
  4607  00BB30  B4D8               	btfsc	status,2,c
  4608  00BB32  D6D5               	goto	l22815
  4609  00BB34  0A02               	xorlw	2	; case 3
  4610  00BB36  B4D8               	btfsc	status,2,c
  4611  00BB38  D6D5               	goto	l22817
  4612  00BB3A  0A07               	xorlw	7	; case 4
  4613  00BB3C  B4D8               	btfsc	status,2,c
  4614  00BB3E  D6F9               	goto	l22823
  4615  00BB40  0A01               	xorlw	1	; case 5
  4616  00BB42  B4D8               	btfsc	status,2,c
  4617  00BB44  D700               	goto	l22827
  4618  00BB46  0A03               	xorlw	3	; case 6
  4619  00BB48  B4D8               	btfsc	status,2,c
  4620  00BB4A  D700               	goto	l22829
  4621  00BB4C  0A0E               	xorlw	14	; case 8
  4622  00BB4E  B4D8               	btfsc	status,2,c
  4623  00BB50  D724               	goto	l22837
  4624  00BB52  0A01               	xorlw	1	; case 9
  4625  00BB54  B4D8               	btfsc	status,2,c
  4626  00BB56  D724               	goto	l22841
  4627  00BB58  0A02               	xorlw	2	; case 11
  4628  00BB5A  B4D8               	btfsc	status,2,c
  4629  00BB5C  D748               	goto	l22847
  4630  00BB5E  0A07               	xorlw	7	; case 12
  4631  00BB60  B4D8               	btfsc	status,2,c
  4632  00BB62  D757               	goto	l22859
  4633  00BB64  0A01               	xorlw	1	; case 13
  4634  00BB66  B4D8               	btfsc	status,2,c
  4635  00BB68  D772               	goto	l22861
  4636  00BB6A  0A03               	xorlw	3	; case 14
  4637  00BB6C  B4D8               	btfsc	status,2,c
  4638  00BB6E  D772               	goto	l22863
  4639  00BB70  0A01               	xorlw	1	; case 15
  4640  00BB72  B4D8               	btfsc	status,2,c
  4641  00BB74  D7C4               	goto	l22885
  4642  00BB76                     l22893:
  4643                           
  4644                           ;main.c: 226: os.done = 1;
  4645  00BB76  0E01               	movlw	1
  4646  00BB78  0102               	movlb	2	; () banked
  4647  00BB7A  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  4648                           
  4649                           ; BSR set to: 2
  4650                           
  4651                           ; BSR set to: 2
  4652  00BB7C  D655               	goto	l22795
  4653  00BB7E                     __end_of_main:
  4654                           	opt stack 0
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           postdec1	equ	0xFE5
  4662                           fsr1h	equ	0xFE2
  4663                           fsr1l	equ	0xFE1
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _ui_run *****************
  4671 ;; Defined at:
  4672 ;;		line 334 in file "ui.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:   15
  4693 ;; This function calls:
  4694 ;;		__ui_encoder
  4695 ;;		_i2c_digipot_backlight
  4696 ;;		_i2c_digipot_reset_off
  4697 ;;		_i2c_digipot_reset_on
  4698 ;;		_i2c_display_send_init_sequence
  4699 ;;		_system_encoder_disable
  4700 ;;		_system_encoder_enable
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text1
  4707  00F80A                     __ptext1:
  4708                           	opt stack 0
  4709  00F80A                     _ui_run:
  4710                           	opt stack 15
  4711                           
  4712                           ;ui.c: 336: switch(userInterfaceStatus)
  4713                           
  4714                           ; BSR set to: 2
  4715                           ;incstack = 0
  4716  00F80A  D073               	goto	l22405
  4717  00F80C                     l22349:
  4718                           
  4719                           ;ui.c: 339: if (os.buttonCount!=0)
  4720  00F80C  0102               	movlb	2	; () banked
  4721  00F80E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4722  00F810  B4D8               	btfsc	status,2,c
  4723  00F812  0012               	return	
  4724                           
  4725                           ; BSR set to: 2
  4726                           ;ui.c: 340: {
  4727                           ;ui.c: 342: LATCbits.LC2 = 1;
  4728  00F814  848B               	bsf	3979,2,c	;volatile
  4729                           
  4730                           ; BSR set to: 2
  4731                           ;ui.c: 343: os.buttonCount = 0;
  4732  00F816  0E00               	movlw	0
  4733  00F818  0102               	movlb	2	; () banked
  4734  00F81A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  4735                           
  4736                           ;ui.c: 345: system_ui_inactive_count = 0;
  4737  00F81C  0E00               	movlw	0
  4738  00F81E  0101               	movlb	1	; () banked
  4739  00F820  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4740  00F822  0E00               	movlw	0
  4741  00F824  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4742                           
  4743                           ;ui.c: 346: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4744  00F826  0E01               	movlw	1
  4745  00F828  0101               	movlb	1	; () banked
  4746  00F82A  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;ui.c: 347: }
  4750                           ;ui.c: 348: break;
  4751  00F82C  0012               	return	
  4752  00F82E                     l1847:
  4753                           
  4754                           ; BSR set to: 1
  4755                           ;ui.c: 357: LATDbits.LD0 = 0;
  4756  00F82E  908C               	bcf	3980,0,c	;volatile
  4757                           
  4758                           ; BSR set to: 1
  4759                           ;ui.c: 359: system_ui_inactive_count = 0;
  4760  00F830  0E00               	movlw	0
  4761  00F832  0101               	movlb	1	; () banked
  4762  00F834  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4763  00F836  0E00               	movlw	0
  4764  00F838  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4765                           
  4766                           ;ui.c: 360: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4767  00F83A  0E02               	movlw	2
  4768  00F83C  0101               	movlb	1	; () banked
  4769  00F83E  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4770                           
  4771                           ;ui.c: 361: break;
  4772  00F840  0012               	return	
  4773  00F842                     l22357:
  4774                           
  4775                           ; BSR set to: 1
  4776                           ;ui.c: 365: i2c_digipot_reset_on();
  4777  00F842  ECA4  F09D         	call	_i2c_digipot_reset_on	;wreg free
  4778                           
  4779                           ;ui.c: 367: system_ui_inactive_count = 0;
  4780  00F846  0E00               	movlw	0
  4781  00F848  0101               	movlb	1	; () banked
  4782  00F84A  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4783  00F84C  0E00               	movlw	0
  4784  00F84E  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;ui.c: 368: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4788  00F850  0E03               	movlw	3
  4789  00F852  0101               	movlb	1	; () banked
  4790  00F854  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4791                           
  4792                           ;ui.c: 369: break;
  4793  00F856  0012               	return	
  4794  00F858                     l22363:
  4795                           
  4796                           ; BSR set to: 1
  4797                           ;ui.c: 372: ++system_ui_inactive_count;
  4798  00F858  0101               	movlb	1	; () banked
  4799  00F85A  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4800  00F85C  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4801                           
  4802                           ; BSR set to: 1
  4803                           ;ui.c: 374: if (system_ui_inactive_count>3)
  4804  00F85E  0101               	movlb	1	; () banked
  4805  00F860  51E8               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4806  00F862  E105               	bnz	u22210
  4807  00F864  0E04               	movlw	4
  4808  00F866  0101               	movlb	1	; () banked
  4809  00F868  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4810  00F86A  A0D8               	btfss	status,0,c
  4811  00F86C  0012               	return	
  4812  00F86E                     u22210:
  4813                           
  4814                           ; BSR set to: 1
  4815                           ;ui.c: 375: {
  4816                           ;ui.c: 376: i2c_digipot_reset_off();
  4817  00F86E  ECBA  F09D         	call	_i2c_digipot_reset_off	;wreg free
  4818                           
  4819                           ;ui.c: 377: system_ui_inactive_count = 0;
  4820  00F872  0E00               	movlw	0
  4821  00F874  0101               	movlb	1	; () banked
  4822  00F876  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4823  00F878  0E00               	movlw	0
  4824  00F87A  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;ui.c: 378: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4828  00F87C  0E04               	movlw	4
  4829  00F87E  0101               	movlb	1	; () banked
  4830  00F880  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4831                           
  4832                           ; BSR set to: 1
  4833                           ;ui.c: 379: }
  4834                           ;ui.c: 380: break;
  4835  00F882  0012               	return	
  4836  00F884                     l22373:
  4837                           
  4838                           ; BSR set to: 1
  4839                           ;ui.c: 384: i2c_display_send_init_sequence();
  4840  00F884  EC15  F09D         	call	_i2c_display_send_init_sequence	;wreg free
  4841                           
  4842                           ;ui.c: 386: i2c_digipot_backlight(150);
  4843  00F888  0E96               	movlw	150
  4844  00F88A  ECAD  F09C         	call	_i2c_digipot_backlight
  4845                           
  4846                           ;ui.c: 388: system_encoder_enable();
  4847  00F88E  EC22  F0A1         	call	_system_encoder_enable	;wreg free
  4848                           
  4849                           ;ui.c: 390: system_ui_inactive_count = 0;
  4850  00F892  0E00               	movlw	0
  4851  00F894  0101               	movlb	1	; () banked
  4852  00F896  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4853  00F898  0E00               	movlw	0
  4854  00F89A  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4855                           
  4856                           ; BSR set to: 1
  4857                           ;ui.c: 391: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4858  00F89C  0E05               	movlw	5
  4859  00F89E  0101               	movlb	1	; () banked
  4860  00F8A0  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4861                           
  4862                           ;ui.c: 392: break;
  4863  00F8A2  0012               	return	
  4864  00F8A4                     l22383:
  4865                           
  4866                           ; BSR set to: 1
  4867                           ;ui.c: 395: if (os.encoderCount==0 && os.buttonCount==0)
  4868  00F8A4  0102               	movlb	2	; () banked
  4869  00F8A6  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  4870  00F8A8  A4D8               	btfss	status,2,c
  4871  00F8AA  D01B               	goto	l22399
  4872                           
  4873                           ; BSR set to: 2
  4874  00F8AC  0102               	movlb	2	; () banked
  4875  00F8AE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4876  00F8B0  A4D8               	btfss	status,2,c
  4877  00F8B2  D017               	goto	l22399
  4878                           
  4879                           ; BSR set to: 2
  4880                           ;ui.c: 396: {
  4881                           ;ui.c: 397: ++system_ui_inactive_count;
  4882  00F8B4  0101               	movlb	1	; () banked
  4883  00F8B6  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4884  00F8B8  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4885                           
  4886                           ; BSR set to: 1
  4887                           ;ui.c: 398: if(system_ui_inactive_count > 20000)
  4888  00F8BA  0E21               	movlw	33
  4889  00F8BC  0101               	movlb	1	; () banked
  4890  00F8BE  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4891  00F8C0  0E4E               	movlw	78
  4892  00F8C2  0101               	movlb	1	; () banked
  4893  00F8C4  59E8               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  4894  00F8C6  A0D8               	btfss	status,0,c
  4895  00F8C8  0012               	return	
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;ui.c: 399: {
  4899                           ;ui.c: 401: system_encoder_disable();
  4900  00F8CA  EC71  F0A1         	call	_system_encoder_disable	;wreg free
  4901                           
  4902                           ;ui.c: 403: LATDbits.LD0 = 1;
  4903  00F8CE  808C               	bsf	3980,0,c	;volatile
  4904                           
  4905                           ;ui.c: 406: system_ui_inactive_count = 0;
  4906  00F8D0  0E00               	movlw	0
  4907  00F8D2  0101               	movlb	1	; () banked
  4908  00F8D4  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4909  00F8D6  0E00               	movlw	0
  4910  00F8D8  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4911                           
  4912                           ; BSR set to: 1
  4913                           ;ui.c: 407: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  4914  00F8DA  0E00               	movlw	0
  4915  00F8DC  0101               	movlb	1	; () banked
  4916  00F8DE  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4917                           
  4918                           ; BSR set to: 1
  4919                           ;ui.c: 408: }
  4920                           ;ui.c: 409: }
  4921  00F8E0  0012               	return	
  4922  00F8E2                     l22399:
  4923                           
  4924                           ;ui.c: 410: else
  4925                           ;ui.c: 411: {
  4926                           ;ui.c: 412: system_ui_inactive_count = 0;
  4927  00F8E2  0E00               	movlw	0
  4928  00F8E4  0101               	movlb	1	; () banked
  4929  00F8E6  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4930  00F8E8  0E00               	movlw	0
  4931  00F8EA  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4932                           
  4933                           ; BSR set to: 1
  4934                           ;ui.c: 413: _ui_encoder();
  4935  00F8EC  EC16  F050         	call	__ui_encoder	;wreg free
  4936                           
  4937                           ;ui.c: 416: }
  4938                           
  4939                           ;ui.c: 414: }
  4940                           ;ui.c: 415: break;
  4941  00F8F0  0012               	return	
  4942  00F8F2                     l22405:
  4943  00F8F2  0101               	movlb	1	; () banked
  4944  00F8F4  51F3               	movf	_userInterfaceStatus& (0+255),w,b
  4945                           
  4946                           ; Switch size 1, requested type "space"
  4947                           ; Number of cases is 6, Range of values is 0 to 5
  4948                           ; switch strategies available:
  4949                           ; Name         Instructions Cycles
  4950                           ; simple_byte           19    10 (average)
  4951                           ;	Chosen strategy is simple_byte
  4952  00F8F6  0A00               	xorlw	0	; case 0
  4953  00F8F8  B4D8               	btfsc	status,2,c
  4954  00F8FA  D788               	goto	l22349
  4955  00F8FC  0A01               	xorlw	1	; case 1
  4956  00F8FE  B4D8               	btfsc	status,2,c
  4957  00F900  D796               	goto	l1847
  4958  00F902  0A03               	xorlw	3	; case 2
  4959  00F904  B4D8               	btfsc	status,2,c
  4960  00F906  D79D               	goto	l22357
  4961  00F908  0A01               	xorlw	1	; case 3
  4962  00F90A  B4D8               	btfsc	status,2,c
  4963  00F90C  D7A5               	goto	l22363
  4964  00F90E  0A07               	xorlw	7	; case 4
  4965  00F910  B4D8               	btfsc	status,2,c
  4966  00F912  D7B8               	goto	l22373
  4967  00F914  0A01               	xorlw	1	; case 5
  4968  00F916  A4D8               	btfss	status,2,c
  4969  00F918  0012               	return	
  4970  00F91A  D7C4               	goto	l22383
  4971  00F91C                     __end_of_ui_run:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           postinc0	equ	0xFEE
  4978                           wreg	equ	0xFE8
  4979                           postdec1	equ	0xFE5
  4980                           fsr1h	equ	0xFE2
  4981                           fsr1l	equ	0xFE1
  4982                           postinc2	equ	0xFDE
  4983                           postdec2	equ	0xFDD
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function _system_encoder_enable *****************
  4989 ;; Defined at:
  4990 ;;		line 198 in file "os.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;		None
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, status,2
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;Total ram usage:        0 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:   10
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_ui_run
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text2
  5019  014244                     __ptext2:
  5020                           	opt stack 0
  5021  014244                     _system_encoder_enable:
  5022                           	opt stack 19
  5023                           
  5024                           ;os.c: 201: INTCON3bits.INT2IF = 0;
  5025                           
  5026                           ;incstack = 0
  5027  014244  92F0               	bcf	intcon3,1,c	;volatile
  5028                           
  5029                           ;os.c: 202: INTCON3bits.INT3IF = 0;
  5030  014246  94F0               	bcf	intcon3,2,c	;volatile
  5031                           
  5032                           ;os.c: 205: os.encoderCount = 0;
  5033  014248  0E00               	movlw	0
  5034  01424A  0102               	movlb	2	; () banked
  5035  01424C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5036                           
  5037                           ; BSR set to: 2
  5038                           ;os.c: 208: INTCON3bits.INT2IE = 1;
  5039  01424E  88F0               	bsf	intcon3,4,c	;volatile
  5040                           
  5041                           ; BSR set to: 2
  5042                           ;os.c: 209: INTCON3bits.INT3IE = 1;
  5043  014250  8AF0               	bsf	intcon3,5,c	;volatile
  5044                           
  5045                           ; BSR set to: 2
  5046  014252  0012               	return		;funcret
  5047  014254                     __end_of_system_encoder_enable:
  5048                           	opt stack 0
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           intcon3	equ	0xFF0
  5054                           postinc0	equ	0xFEE
  5055                           wreg	equ	0xFE8
  5056                           postdec1	equ	0xFE5
  5057                           fsr1h	equ	0xFE2
  5058                           fsr1l	equ	0xFE1
  5059                           postinc2	equ	0xFDE
  5060                           postdec2	equ	0xFDD
  5061                           fsr2h	equ	0xFDA
  5062                           fsr2l	equ	0xFD9
  5063                           status	equ	0xFD8
  5064                           
  5065 ;; *************** function _system_encoder_disable *****************
  5066 ;; Defined at:
  5067 ;;		line 191 in file "os.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		None
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:   10
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_ui_run
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text3
  5096  0142E2                     __ptext3:
  5097                           	opt stack 0
  5098  0142E2                     _system_encoder_disable:
  5099                           	opt stack 19
  5100                           
  5101                           ;os.c: 194: INTCON3bits.INT2IE = 0;
  5102                           
  5103                           ; BSR set to: 2
  5104                           ;incstack = 0
  5105  0142E2  98F0               	bcf	intcon3,4,c	;volatile
  5106                           
  5107                           ;os.c: 195: INTCON3bits.INT3IE = 0;
  5108  0142E4  9AF0               	bcf	intcon3,5,c	;volatile
  5109  0142E6  0012               	return		;funcret
  5110  0142E8                     __end_of_system_encoder_disable:
  5111                           	opt stack 0
  5112                           tblptru	equ	0xFF8
  5113                           tblptrh	equ	0xFF7
  5114                           tblptrl	equ	0xFF6
  5115                           tablat	equ	0xFF5
  5116                           intcon3	equ	0xFF0
  5117                           postinc0	equ	0xFEE
  5118                           wreg	equ	0xFE8
  5119                           postdec1	equ	0xFE5
  5120                           fsr1h	equ	0xFE2
  5121                           fsr1l	equ	0xFE1
  5122                           postinc2	equ	0xFDE
  5123                           postdec2	equ	0xFDD
  5124                           fsr2h	equ	0xFDA
  5125                           fsr2l	equ	0xFD9
  5126                           status	equ	0xFD8
  5127                           
  5128 ;; *************** function _i2c_display_send_init_sequence *****************
  5129 ;; Defined at:
  5130 ;;		line 248 in file "i2c.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5145 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;Total ram usage:        9 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:   12
  5151 ;; This function calls:
  5152 ;;		__i2c_write
  5153 ;;		_i2c_set_frequency
  5154 ;; This function is called by:
  5155 ;;		_ui_run
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text4
  5160  013A2A                     __ptext4:
  5161                           	opt stack 0
  5162  013A2A                     _i2c_display_send_init_sequence:
  5163                           	opt stack 17
  5164                           
  5165                           ;i2c.c: 250: uint8_t init_sequence[9] = {
  5166                           ;i2c.c: 251: 0x3A,
  5167                           ;i2c.c: 253: 0b00011110,
  5168                           ;i2c.c: 254: 0x39,
  5169                           ;i2c.c: 256: 0b00001100,
  5170                           ;i2c.c: 257: 0x74,
  5171                           ;i2c.c: 258: 0b1011100,
  5172                           ;i2c.c: 259: 0x6d,
  5173                           ;i2c.c: 260: 0x0c,
  5174                           ;i2c.c: 261: 0x01
  5175                           ;i2c.c: 262: };
  5176                           
  5177                           ;incstack = 0
  5178  013A2A  EE23  F0ED         	lfsr	2,i2c_display_send_init_sequence@F8354
  5179  013A2E  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5180  013A32  0E08               	movlw	8
  5181  013A34                     u19901:
  5182  013A34  CFDB FFE3          	movff	plusw2,plusw1
  5183  013A38  06E8               	decf	wreg,f,c
  5184  013A3A  E2FC               	bc	u19901
  5185                           
  5186                           ;i2c.c: 265: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5187  013A3C  0E00               	movlw	0
  5188  013A3E  ECE3  F093         	call	_i2c_set_frequency
  5189                           
  5190                           ;i2c.c: 268: _i2c_write(0b01111000, &init_sequence[0], 9);
  5191  013A42  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5192  013A44  0100               	movlb	0	; () banked
  5193  013A46  6F65               	movwf	__i2c_write@data& (0+255),b
  5194  013A48  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5195  013A4A  0100               	movlb	0	; () banked
  5196  013A4C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5197  013A4E  0E09               	movlw	9
  5198  013A50  0100               	movlb	0	; () banked
  5199  013A52  6F67               	movwf	__i2c_write@length& (0+255),b
  5200  013A54  0E78               	movlw	120
  5201  013A56  EC93  F098         	call	__i2c_write
  5202  013A5A  0012               	return		;funcret
  5203  013A5C                     __end_of_i2c_display_send_init_sequence:
  5204                           	opt stack 0
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           intcon3	equ	0xFF0
  5210                           postinc0	equ	0xFEE
  5211                           wreg	equ	0xFE8
  5212                           postdec1	equ	0xFE5
  5213                           plusw1	equ	0xFE3
  5214                           fsr1h	equ	0xFE2
  5215                           fsr1l	equ	0xFE1
  5216                           postinc2	equ	0xFDE
  5217                           postdec2	equ	0xFDD
  5218                           plusw2	equ	0xFDB
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _i2c_digipot_reset_on *****************
  5224 ;; Defined at:
  5225 ;;		line 425 in file "i2c.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5240 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5243 ;;Total ram usage:        2 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:   12
  5246 ;; This function calls:
  5247 ;;		__i2c_write
  5248 ;;		_i2c_set_frequency
  5249 ;; This function is called by:
  5250 ;;		_ui_run
  5251 ;;		_i2c_display_init
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text5
  5256  013B48                     __ptext5:
  5257                           	opt stack 0
  5258  013B48                     _i2c_digipot_reset_on:
  5259                           	opt stack 17
  5260                           
  5261                           ;i2c.c: 427: uint8_t data_array[2];
  5262                           ;i2c.c: 428: data_array[0] = 0x10 | 0x00;
  5263                           
  5264                           ;incstack = 0
  5265  013B48  0E10               	movlw	16
  5266  013B4A  0100               	movlb	0	; () banked
  5267  013B4C  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5268                           
  5269                           ;i2c.c: 430: data_array[1] = 0x00;
  5270  013B4E  0E00               	movlw	0
  5271  013B50  0100               	movlb	0	; () banked
  5272  013B52  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;i2c.c: 433: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5276  013B54  0E02               	movlw	2
  5277  013B56  ECE3  F093         	call	_i2c_set_frequency
  5278                           
  5279                           ;i2c.c: 435: _i2c_write(0b01011100, &data_array[0], 2);
  5280  013B5A  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5281  013B5C  0100               	movlb	0	; () banked
  5282  013B5E  6F65               	movwf	__i2c_write@data& (0+255),b
  5283  013B60  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5284  013B62  0100               	movlb	0	; () banked
  5285  013B64  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5286  013B66  0E02               	movlw	2
  5287  013B68  0100               	movlb	0	; () banked
  5288  013B6A  6F67               	movwf	__i2c_write@length& (0+255),b
  5289  013B6C  0E5C               	movlw	92
  5290  013B6E  EC93  F098         	call	__i2c_write
  5291  013B72  0012               	return		;funcret
  5292  013B74                     __end_of_i2c_digipot_reset_on:
  5293                           	opt stack 0
  5294                           tblptru	equ	0xFF8
  5295                           tblptrh	equ	0xFF7
  5296                           tblptrl	equ	0xFF6
  5297                           tablat	equ	0xFF5
  5298                           intcon3	equ	0xFF0
  5299                           postinc0	equ	0xFEE
  5300                           wreg	equ	0xFE8
  5301                           postdec1	equ	0xFE5
  5302                           plusw1	equ	0xFE3
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           postinc2	equ	0xFDE
  5306                           postdec2	equ	0xFDD
  5307                           plusw2	equ	0xFDB
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _i2c_digipot_reset_off *****************
  5313 ;; Defined at:
  5314 ;;		line 438 in file "i2c.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;Total ram usage:        2 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:   12
  5335 ;; This function calls:
  5336 ;;		__i2c_write
  5337 ;;		_i2c_set_frequency
  5338 ;; This function is called by:
  5339 ;;		_ui_run
  5340 ;;		_i2c_display_init
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text6
  5345  013B74                     __ptext6:
  5346                           	opt stack 0
  5347  013B74                     _i2c_digipot_reset_off:
  5348                           	opt stack 17
  5349                           
  5350                           ;i2c.c: 440: uint8_t data_array[2];
  5351                           ;i2c.c: 441: data_array[0] = 0x10 | 0x00;
  5352                           
  5353                           ;incstack = 0
  5354  013B74  0E10               	movlw	16
  5355  013B76  0100               	movlb	0	; () banked
  5356  013B78  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  5357                           
  5358                           ;i2c.c: 442: data_array[1] = 0x80;
  5359  013B7A  0E80               	movlw	128
  5360  013B7C  0100               	movlb	0	; () banked
  5361  013B7E  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;i2c.c: 445: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5365  013B80  0E02               	movlw	2
  5366  013B82  ECE3  F093         	call	_i2c_set_frequency
  5367                           
  5368                           ;i2c.c: 447: _i2c_write(0b01011100, &data_array[0], 2);
  5369  013B86  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  5370  013B88  0100               	movlb	0	; () banked
  5371  013B8A  6F65               	movwf	__i2c_write@data& (0+255),b
  5372  013B8C  0E00               	movlw	high i2c_digipot_reset_off@data_array
  5373  013B8E  0100               	movlb	0	; () banked
  5374  013B90  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5375  013B92  0E02               	movlw	2
  5376  013B94  0100               	movlb	0	; () banked
  5377  013B96  6F67               	movwf	__i2c_write@length& (0+255),b
  5378  013B98  0E5C               	movlw	92
  5379  013B9A  EC93  F098         	call	__i2c_write
  5380  013B9E  0012               	return		;funcret
  5381  013BA0                     __end_of_i2c_digipot_reset_off:
  5382                           	opt stack 0
  5383                           tblptru	equ	0xFF8
  5384                           tblptrh	equ	0xFF7
  5385                           tblptrl	equ	0xFF6
  5386                           tablat	equ	0xFF5
  5387                           intcon3	equ	0xFF0
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           postdec1	equ	0xFE5
  5391                           plusw1	equ	0xFE3
  5392                           fsr1h	equ	0xFE2
  5393                           fsr1l	equ	0xFE1
  5394                           postinc2	equ	0xFDE
  5395                           postdec2	equ	0xFDD
  5396                           plusw2	equ	0xFDB
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _i2c_digipot_backlight *****************
  5402 ;; Defined at:
  5403 ;;		line 450 in file "i2c.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  level           1    wreg     unsigned char 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  level           1   10[BANK0 ] unsigned char 
  5408 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5419 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;Total ram usage:        3 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:   12
  5425 ;; This function calls:
  5426 ;;		__i2c_write
  5427 ;;		_i2c_set_frequency
  5428 ;; This function is called by:
  5429 ;;		_ui_run
  5430 ;;		_i2c_display_init
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text7
  5435  01395A                     __ptext7:
  5436                           	opt stack 0
  5437  01395A                     _i2c_digipot_backlight:
  5438                           	opt stack 17
  5439                           
  5440                           ;incstack = 0
  5441                           ;i2c_digipot_backlight@level stored from wreg
  5442  01395A  0100               	movlb	0	; () banked
  5443  01395C  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  5444                           
  5445                           ;i2c.c: 452: uint8_t data_array[2];
  5446                           ;i2c.c: 453: data_array[0] = 0x00 | 0x00;
  5447  01395E  0E00               	movlw	0
  5448  013960  0100               	movlb	0	; () banked
  5449  013962  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;i2c.c: 454: data_array[1] = level>>1;
  5453  013964  0100               	movlb	0	; () banked
  5454  013966  90D8               	bcf	status,0,c
  5455  013968  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  5456  01396A  0100               	movlb	0	; () banked
  5457  01396C  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;i2c.c: 457: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5461  01396E  0E02               	movlw	2
  5462  013970  ECE3  F093         	call	_i2c_set_frequency
  5463                           
  5464                           ;i2c.c: 459: _i2c_write(0b01011100, &data_array[0], 2);
  5465  013974  0E6B               	movlw	low i2c_digipot_backlight@data_array
  5466  013976  0100               	movlb	0	; () banked
  5467  013978  6F65               	movwf	__i2c_write@data& (0+255),b
  5468  01397A  0E00               	movlw	high i2c_digipot_backlight@data_array
  5469  01397C  0100               	movlb	0	; () banked
  5470  01397E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5471  013980  0E02               	movlw	2
  5472  013982  0100               	movlb	0	; () banked
  5473  013984  6F67               	movwf	__i2c_write@length& (0+255),b
  5474  013986  0E5C               	movlw	92
  5475  013988  EC93  F098         	call	__i2c_write
  5476  01398C  0012               	return		;funcret
  5477  01398E                     __end_of_i2c_digipot_backlight:
  5478                           	opt stack 0
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           intcon3	equ	0xFF0
  5484                           postinc0	equ	0xFEE
  5485                           wreg	equ	0xFE8
  5486                           postdec1	equ	0xFE5
  5487                           plusw1	equ	0xFE3
  5488                           fsr1h	equ	0xFE2
  5489                           fsr1l	equ	0xFE1
  5490                           postinc2	equ	0xFDE
  5491                           postdec2	equ	0xFDD
  5492                           plusw2	equ	0xFDB
  5493                           fsr2h	equ	0xFDA
  5494                           fsr2l	equ	0xFD9
  5495                           status	equ	0xFD8
  5496                           
  5497 ;; *************** function __ui_encoder *****************
  5498 ;; Defined at:
  5499 ;;		line 17 in file "ui.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;		None
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      void 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;Total ram usage:        0 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:   14
  5520 ;; This function calls:
  5521 ;;		_rtcc_correct_day
  5522 ;;		_rtcc_decrement_day
  5523 ;;		_rtcc_decrement_hours
  5524 ;;		_rtcc_decrement_minutes
  5525 ;;		_rtcc_decrement_month
  5526 ;;		_rtcc_decrement_seconds
  5527 ;;		_rtcc_decrement_year
  5528 ;;		_rtcc_increment_day
  5529 ;;		_rtcc_increment_hours
  5530 ;;		_rtcc_increment_minutes
  5531 ;;		_rtcc_increment_month
  5532 ;;		_rtcc_increment_seconds
  5533 ;;		_rtcc_increment_year
  5534 ;;		_rtcc_write_eeprom
  5535 ;;		_system_output_off
  5536 ;;		_system_output_on
  5537 ;;		_system_output_toggle
  5538 ;; This function is called by:
  5539 ;;		_ui_run
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text8
  5544  00A02C                     __ptext8:
  5545                           	opt stack 0
  5546  00A02C                     __ui_encoder:
  5547                           	opt stack 15
  5548                           
  5549                           ;ui.c: 19: switch(os.display_mode)
  5550                           
  5551                           ;incstack = 0
  5552  00A02C  D1EB               	goto	l21161
  5553  00A02E                     l20937:
  5554                           
  5555                           ;ui.c: 22: if(os.encoderCount>0)
  5556  00A02E  0102               	movlb	2	; () banked
  5557  00A030  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5558  00A032  0A80               	xorlw	128
  5559  00A034  0F7F               	addlw	-129
  5560  00A036  A0D8               	btfss	status,0,c
  5561  00A038  D002               	goto	l20941
  5562                           
  5563                           ; BSR set to: 2
  5564                           ;ui.c: 23: {
  5565                           ;ui.c: 24: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5566  00A03A  0E10               	movlw	16
  5567  00A03C  D004               	goto	L1
  5568  00A03E                     l20941:
  5569                           
  5570                           ; BSR set to: 2
  5571                           ;ui.c: 26: else if(os.encoderCount<0)
  5572  00A03E  0102               	movlb	2	; () banked
  5573  00A040  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5574  00A042  D003               	goto	l1747
  5575                           
  5576                           ; BSR set to: 2
  5577                           ;ui.c: 27: {
  5578                           ;ui.c: 28: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  5579  00A044  0E60               	movlw	96
  5580  00A046                     L1:
  5581  00A046  0102               	movlb	2	; () banked
  5582  00A048  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5583  00A04A                     l1747:
  5584                           
  5585                           ; BSR set to: 2
  5586                           ;ui.c: 29: }
  5587                           ;ui.c: 30: if(os.buttonCount)
  5588  00A04A  0102               	movlb	2	; () banked
  5589  00A04C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5590                           
  5591                           ; BSR set to: 2
  5592                           ;ui.c: 33: }
  5593                           ;ui.c: 34: os.encoderCount = 0;
  5594                           
  5595                           ; BSR set to: 2
  5596                           
  5597                           ;ui.c: 31: {
  5598                           ;ui.c: 32: ;
  5599  00A04E  0E00               	movlw	0
  5600  00A050  0102               	movlb	2	; () banked
  5601  00A052  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5602                           
  5603                           ;ui.c: 35: os.buttonCount = 0;
  5604  00A054  0E00               	movlw	0
  5605  00A056  0102               	movlb	2	; () banked
  5606  00A058  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5607                           
  5608                           ;ui.c: 36: break;
  5609  00A05A  0012               	return	
  5610  00A05C                     l20947:
  5611                           
  5612                           ; BSR set to: 2
  5613                           ;ui.c: 39: if(os.encoderCount>0)
  5614  00A05C  0102               	movlb	2	; () banked
  5615  00A05E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5616  00A060  0A80               	xorlw	128
  5617  00A062  0F7F               	addlw	-129
  5618  00A064  A0D8               	btfss	status,0,c
  5619  00A066  D002               	goto	l20951
  5620                           
  5621                           ; BSR set to: 2
  5622                           ;ui.c: 40: {
  5623                           ;ui.c: 41: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5624  00A068  0E20               	movlw	32
  5625  00A06A  D004               	goto	L2
  5626  00A06C                     l20951:
  5627                           
  5628                           ; BSR set to: 2
  5629                           ;ui.c: 43: else if(os.encoderCount<0)
  5630  00A06C  0102               	movlb	2	; () banked
  5631  00A06E  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5632  00A070  D003               	goto	l1753
  5633                           
  5634                           ; BSR set to: 2
  5635                           ;ui.c: 44: {
  5636                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_OVERVIEW;
  5637  00A072  0E00               	movlw	0
  5638  00A074                     L2:
  5639  00A074  0102               	movlb	2	; () banked
  5640  00A076  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5641  00A078                     l1753:
  5642                           
  5643                           ; BSR set to: 2
  5644                           ;ui.c: 46: }
  5645                           ;ui.c: 47: if(os.buttonCount)
  5646  00A078  0102               	movlb	2	; () banked
  5647  00A07A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5648  00A07C  B4D8               	btfsc	status,2,c
  5649  00A07E  D003               	goto	l1755
  5650                           
  5651                           ; BSR set to: 2
  5652                           ;ui.c: 48: {
  5653                           ;ui.c: 49: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  5654  00A080  0E11               	movlw	17
  5655  00A082  0102               	movlb	2	; () banked
  5656  00A084  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5657  00A086                     l1755:
  5658                           
  5659                           ; BSR set to: 2
  5660                           ;ui.c: 50: }
  5661                           ;ui.c: 51: os.encoderCount = 0;
  5662  00A086  0E00               	movlw	0
  5663  00A088  0102               	movlb	2	; () banked
  5664  00A08A  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5665                           
  5666                           ;ui.c: 52: os.buttonCount = 0;
  5667  00A08C  0E00               	movlw	0
  5668  00A08E  0102               	movlb	2	; () banked
  5669  00A090  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5670                           
  5671                           ;ui.c: 53: break;
  5672  00A092  0012               	return	
  5673  00A094                     l20957:
  5674                           
  5675                           ; BSR set to: 2
  5676                           ;ui.c: 56: if(os.encoderCount>0)
  5677  00A094  0102               	movlb	2	; () banked
  5678  00A096  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5679  00A098  0A80               	xorlw	128
  5680  00A09A  0F7F               	addlw	-129
  5681  00A09C  A0D8               	btfss	status,0,c
  5682  00A09E  D003               	goto	l20961
  5683                           
  5684                           ; BSR set to: 2
  5685                           ;ui.c: 57: {
  5686                           ;ui.c: 58: rtcc_increment_year();
  5687  00A0A0  EC28  F09E         	call	_rtcc_increment_year	;wreg free
  5688                           
  5689                           ;ui.c: 59: }
  5690  00A0A4  D004               	goto	l20965
  5691  00A0A6                     l20961:
  5692                           
  5693                           ;ui.c: 60: else if(os.encoderCount<0)
  5694  00A0A6  0102               	movlb	2	; () banked
  5695  00A0A8  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5696                           
  5697                           ; BSR set to: 2
  5698                           ;ui.c: 61: {
  5699                           ;ui.c: 62: rtcc_decrement_year();
  5700  00A0AA  EC91  F09E         	call	_rtcc_decrement_year	;wreg free
  5701  00A0AE                     l20965:
  5702                           
  5703                           ;ui.c: 63: }
  5704                           ;ui.c: 64: if(os.buttonCount)
  5705  00A0AE  0102               	movlb	2	; () banked
  5706  00A0B0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5707  00A0B2  B4D8               	btfsc	status,2,c
  5708  00A0B4  D005               	goto	l20971
  5709                           
  5710                           ; BSR set to: 2
  5711                           ;ui.c: 65: {
  5712                           ;ui.c: 66: rtcc_correct_day();
  5713  00A0B6  EC5F  F09F         	call	_rtcc_correct_day	;wreg free
  5714                           
  5715                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  5716  00A0BA  0E12               	movlw	18
  5717  00A0BC  0102               	movlb	2	; () banked
  5718  00A0BE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5719  00A0C0                     l20971:
  5720                           
  5721                           ; BSR set to: 2
  5722                           ;ui.c: 68: }
  5723                           ;ui.c: 69: os.encoderCount = 0;
  5724  00A0C0  0E00               	movlw	0
  5725  00A0C2  0102               	movlb	2	; () banked
  5726  00A0C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5727                           
  5728                           ; BSR set to: 2
  5729                           ;ui.c: 70: os.buttonCount = 0;
  5730  00A0C6  0E00               	movlw	0
  5731  00A0C8  0102               	movlb	2	; () banked
  5732  00A0CA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5733                           
  5734                           ;ui.c: 71: break;
  5735  00A0CC  0012               	return	
  5736  00A0CE                     l20975:
  5737                           
  5738                           ; BSR set to: 2
  5739                           ;ui.c: 74: if(os.encoderCount>0)
  5740  00A0CE  0102               	movlb	2	; () banked
  5741  00A0D0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5742  00A0D2  0A80               	xorlw	128
  5743  00A0D4  0F7F               	addlw	-129
  5744  00A0D6  A0D8               	btfss	status,0,c
  5745  00A0D8  D003               	goto	l20979
  5746                           
  5747                           ; BSR set to: 2
  5748                           ;ui.c: 75: {
  5749                           ;ui.c: 76: rtcc_increment_month();
  5750  00A0DA  EC52  F09E         	call	_rtcc_increment_month	;wreg free
  5751                           
  5752                           ;ui.c: 77: }
  5753  00A0DE  D004               	goto	l20983
  5754  00A0E0                     l20979:
  5755                           
  5756                           ;ui.c: 78: else if(os.encoderCount<0)
  5757  00A0E0  0102               	movlb	2	; () banked
  5758  00A0E2  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5759                           
  5760                           ; BSR set to: 2
  5761                           ;ui.c: 79: {
  5762                           ;ui.c: 80: rtcc_decrement_month();
  5763  00A0E4  ECBB  F09E         	call	_rtcc_decrement_month	;wreg free
  5764  00A0E8                     l20983:
  5765                           
  5766                           ;ui.c: 81: }
  5767                           ;ui.c: 82: if(os.buttonCount)
  5768  00A0E8  0102               	movlb	2	; () banked
  5769  00A0EA  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5770  00A0EC  B4D8               	btfsc	status,2,c
  5771  00A0EE  D005               	goto	l20989
  5772                           
  5773                           ; BSR set to: 2
  5774                           ;ui.c: 83: {
  5775                           ;ui.c: 84: rtcc_correct_day();
  5776  00A0F0  EC5F  F09F         	call	_rtcc_correct_day	;wreg free
  5777                           
  5778                           ;ui.c: 85: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  5779  00A0F4  0E13               	movlw	19
  5780  00A0F6  0102               	movlb	2	; () banked
  5781  00A0F8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5782  00A0FA                     l20989:
  5783                           
  5784                           ; BSR set to: 2
  5785                           ;ui.c: 86: }
  5786                           ;ui.c: 87: os.encoderCount = 0;
  5787  00A0FA  0E00               	movlw	0
  5788  00A0FC  0102               	movlb	2	; () banked
  5789  00A0FE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5790                           
  5791                           ; BSR set to: 2
  5792                           ;ui.c: 88: os.buttonCount = 0;
  5793  00A100  0E00               	movlw	0
  5794  00A102  0102               	movlb	2	; () banked
  5795  00A104  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5796                           
  5797                           ;ui.c: 89: break;
  5798  00A106  0012               	return	
  5799  00A108                     l20993:
  5800                           
  5801                           ; BSR set to: 2
  5802                           ;ui.c: 92: if(os.encoderCount>0)
  5803  00A108  0102               	movlb	2	; () banked
  5804  00A10A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5805  00A10C  0A80               	xorlw	128
  5806  00A10E  0F7F               	addlw	-129
  5807  00A110  A0D8               	btfss	status,0,c
  5808  00A112  D003               	goto	l20997
  5809                           
  5810                           ; BSR set to: 2
  5811                           ;ui.c: 93: {
  5812                           ;ui.c: 94: rtcc_increment_day();
  5813  00A114  ECD0  F09D         	call	_rtcc_increment_day	;wreg free
  5814                           
  5815                           ;ui.c: 95: }
  5816  00A118  D004               	goto	l21001
  5817  00A11A                     l20997:
  5818                           
  5819                           ;ui.c: 96: else if(os.encoderCount<0)
  5820  00A11A  0102               	movlb	2	; () banked
  5821  00A11C  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5822                           
  5823                           ; BSR set to: 2
  5824                           ;ui.c: 97: {
  5825                           ;ui.c: 98: rtcc_decrement_day();
  5826  00A11E  ECE6  F09D         	call	_rtcc_decrement_day	;wreg free
  5827  00A122                     l21001:
  5828                           
  5829                           ;ui.c: 99: }
  5830                           ;ui.c: 100: if(os.buttonCount)
  5831  00A122  0102               	movlb	2	; () banked
  5832  00A124  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5833  00A126  B4D8               	btfsc	status,2,c
  5834  00A128  D003               	goto	l1770
  5835                           
  5836                           ; BSR set to: 2
  5837                           ;ui.c: 101: {
  5838                           ;ui.c: 102: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  5839  00A12A  0E14               	movlw	20
  5840  00A12C  0102               	movlb	2	; () banked
  5841  00A12E  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5842  00A130                     l1770:
  5843                           
  5844                           ; BSR set to: 2
  5845                           ;ui.c: 103: }
  5846                           ;ui.c: 104: os.encoderCount = 0;
  5847  00A130  0E00               	movlw	0
  5848  00A132  0102               	movlb	2	; () banked
  5849  00A134  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5850                           
  5851                           ;ui.c: 105: os.buttonCount = 0;
  5852  00A136  0E00               	movlw	0
  5853  00A138  0102               	movlb	2	; () banked
  5854  00A13A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5855                           
  5856                           ;ui.c: 106: break;
  5857  00A13C  0012               	return	
  5858  00A13E                     l21005:
  5859                           
  5860                           ; BSR set to: 2
  5861                           ;ui.c: 109: if(os.encoderCount>0)
  5862  00A13E  0102               	movlb	2	; () banked
  5863  00A140  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5864  00A142  0A80               	xorlw	128
  5865  00A144  0F7F               	addlw	-129
  5866  00A146  A0D8               	btfss	status,0,c
  5867  00A148  D003               	goto	l21009
  5868                           
  5869                           ; BSR set to: 2
  5870                           ;ui.c: 110: {
  5871                           ;ui.c: 111: rtcc_increment_hours();
  5872  00A14A  EC7C  F09E         	call	_rtcc_increment_hours	;wreg free
  5873                           
  5874                           ;ui.c: 112: }
  5875  00A14E  D004               	goto	l21013
  5876  00A150                     l21009:
  5877                           
  5878                           ;ui.c: 113: else if(os.encoderCount<0)
  5879  00A150  0102               	movlb	2	; () banked
  5880  00A152  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5881                           
  5882                           ; BSR set to: 2
  5883                           ;ui.c: 114: {
  5884                           ;ui.c: 115: rtcc_decrement_hours();
  5885  00A154  ECE5  F09E         	call	_rtcc_decrement_hours	;wreg free
  5886  00A158                     l21013:
  5887                           
  5888                           ;ui.c: 116: }
  5889                           ;ui.c: 117: if(os.buttonCount)
  5890  00A158  0102               	movlb	2	; () banked
  5891  00A15A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5892  00A15C  B4D8               	btfsc	status,2,c
  5893  00A15E  D003               	goto	l1775
  5894                           
  5895                           ; BSR set to: 2
  5896                           ;ui.c: 118: {
  5897                           ;ui.c: 119: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  5898  00A160  0E15               	movlw	21
  5899  00A162  0102               	movlb	2	; () banked
  5900  00A164  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5901  00A166                     l1775:
  5902                           
  5903                           ; BSR set to: 2
  5904                           ;ui.c: 120: }
  5905                           ;ui.c: 121: os.encoderCount = 0;
  5906  00A166  0E00               	movlw	0
  5907  00A168  0102               	movlb	2	; () banked
  5908  00A16A  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5909                           
  5910                           ;ui.c: 122: os.buttonCount = 0;
  5911  00A16C  0E00               	movlw	0
  5912  00A16E  0102               	movlb	2	; () banked
  5913  00A170  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5914                           
  5915                           ;ui.c: 123: break;
  5916  00A172  0012               	return	
  5917  00A174                     l21017:
  5918                           
  5919                           ; BSR set to: 2
  5920                           ;ui.c: 126: if(os.encoderCount>0)
  5921  00A174  0102               	movlb	2	; () banked
  5922  00A176  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5923  00A178  0A80               	xorlw	128
  5924  00A17A  0F7F               	addlw	-129
  5925  00A17C  A0D8               	btfss	status,0,c
  5926  00A17E  D003               	goto	l21021
  5927                           
  5928                           ; BSR set to: 2
  5929                           ;ui.c: 127: {
  5930                           ;ui.c: 128: rtcc_increment_minutes();
  5931  00A180  EC67  F09E         	call	_rtcc_increment_minutes	;wreg free
  5932                           
  5933                           ;ui.c: 129: }
  5934  00A184  D004               	goto	l21025
  5935  00A186                     l21021:
  5936                           
  5937                           ;ui.c: 130: else if(os.encoderCount<0)
  5938  00A186  0102               	movlb	2	; () banked
  5939  00A188  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5940                           
  5941                           ; BSR set to: 2
  5942                           ;ui.c: 131: {
  5943                           ;ui.c: 132: rtcc_decrement_minutes();
  5944  00A18A  ECD0  F09E         	call	_rtcc_decrement_minutes	;wreg free
  5945  00A18E                     l21025:
  5946                           
  5947                           ;ui.c: 133: }
  5948                           ;ui.c: 134: if(os.buttonCount)
  5949  00A18E  0102               	movlb	2	; () banked
  5950  00A190  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5951  00A192  B4D8               	btfsc	status,2,c
  5952  00A194  D003               	goto	l1780
  5953                           
  5954                           ; BSR set to: 2
  5955                           ;ui.c: 135: {
  5956                           ;ui.c: 136: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  5957  00A196  0E16               	movlw	22
  5958  00A198  0102               	movlb	2	; () banked
  5959  00A19A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5960  00A19C                     l1780:
  5961                           
  5962                           ; BSR set to: 2
  5963                           ;ui.c: 137: }
  5964                           ;ui.c: 138: os.encoderCount = 0;
  5965  00A19C  0E00               	movlw	0
  5966  00A19E  0102               	movlb	2	; () banked
  5967  00A1A0  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5968                           
  5969                           ;ui.c: 139: os.buttonCount = 0;
  5970  00A1A2  0E00               	movlw	0
  5971  00A1A4  0102               	movlb	2	; () banked
  5972  00A1A6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5973                           
  5974                           ;ui.c: 140: break;
  5975  00A1A8  0012               	return	
  5976  00A1AA                     l21029:
  5977                           
  5978                           ; BSR set to: 2
  5979                           ;ui.c: 143: if(os.encoderCount>0)
  5980  00A1AA  0102               	movlb	2	; () banked
  5981  00A1AC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5982  00A1AE  0A80               	xorlw	128
  5983  00A1B0  0F7F               	addlw	-129
  5984  00A1B2  A0D8               	btfss	status,0,c
  5985  00A1B4  D003               	goto	l21033
  5986                           
  5987                           ; BSR set to: 2
  5988                           ;ui.c: 144: {
  5989                           ;ui.c: 145: rtcc_increment_seconds();
  5990  00A1B6  EC3D  F09E         	call	_rtcc_increment_seconds	;wreg free
  5991                           
  5992                           ;ui.c: 146: }
  5993  00A1BA  D004               	goto	l21037
  5994  00A1BC                     l21033:
  5995                           
  5996                           ;ui.c: 147: else if(os.encoderCount<0)
  5997  00A1BC  0102               	movlb	2	; () banked
  5998  00A1BE  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5999                           
  6000                           ; BSR set to: 2
  6001                           ;ui.c: 148: {
  6002                           ;ui.c: 149: rtcc_decrement_seconds();
  6003  00A1C0  ECA6  F09E         	call	_rtcc_decrement_seconds	;wreg free
  6004  00A1C4                     l21037:
  6005                           
  6006                           ;ui.c: 150: }
  6007                           ;ui.c: 151: if(os.buttonCount)
  6008  00A1C4  0102               	movlb	2	; () banked
  6009  00A1C6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6010  00A1C8  B4D8               	btfsc	status,2,c
  6011  00A1CA  D005               	goto	l21043
  6012                           
  6013                           ; BSR set to: 2
  6014                           ;ui.c: 152: {
  6015                           ;ui.c: 153: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6016  00A1CC  0E10               	movlw	16
  6017  00A1CE  0102               	movlb	2	; () banked
  6018  00A1D0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6019                           
  6020                           ; BSR set to: 2
  6021                           ;ui.c: 154: rtcc_write_eeprom();
  6022  00A1D2  ECC1  F099         	call	_rtcc_write_eeprom	;wreg free
  6023  00A1D6                     l21043:
  6024                           
  6025                           ;ui.c: 155: }
  6026                           ;ui.c: 156: os.encoderCount = 0;
  6027  00A1D6  0E00               	movlw	0
  6028  00A1D8  0102               	movlb	2	; () banked
  6029  00A1DA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6030                           
  6031                           ; BSR set to: 2
  6032                           ;ui.c: 157: os.buttonCount = 0;
  6033  00A1DC  0E00               	movlw	0
  6034  00A1DE  0102               	movlb	2	; () banked
  6035  00A1E0  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6036                           
  6037                           ;ui.c: 158: break;
  6038  00A1E2  0012               	return	
  6039  00A1E4                     l21047:
  6040                           
  6041                           ; BSR set to: 2
  6042                           ;ui.c: 161: if(os.encoderCount>0)
  6043  00A1E4  0102               	movlb	2	; () banked
  6044  00A1E6  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6045  00A1E8  0A80               	xorlw	128
  6046  00A1EA  0F7F               	addlw	-129
  6047  00A1EC  A0D8               	btfss	status,0,c
  6048  00A1EE  D002               	goto	l21051
  6049                           
  6050                           ; BSR set to: 2
  6051                           ;ui.c: 162: {
  6052                           ;ui.c: 163: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6053  00A1F0  0E30               	movlw	48
  6054  00A1F2  D004               	goto	L3
  6055  00A1F4                     l21051:
  6056                           
  6057                           ; BSR set to: 2
  6058                           ;ui.c: 165: else if(os.encoderCount<0)
  6059  00A1F4  0102               	movlb	2	; () banked
  6060  00A1F6  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6061  00A1F8  D003               	goto	l1788
  6062                           
  6063                           ; BSR set to: 2
  6064                           ;ui.c: 166: {
  6065                           ;ui.c: 167: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6066  00A1FA  0E10               	movlw	16
  6067  00A1FC                     L3:
  6068  00A1FC  0102               	movlb	2	; () banked
  6069  00A1FE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6070  00A200                     l1788:
  6071                           
  6072                           ; BSR set to: 2
  6073                           ;ui.c: 168: }
  6074                           ;ui.c: 169: if(os.buttonCount)
  6075  00A200  0102               	movlb	2	; () banked
  6076  00A202  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6077  00A204  B4D8               	btfsc	status,2,c
  6078  00A206  D00E               	goto	l21059
  6079                           
  6080                           ; BSR set to: 2
  6081                           ;ui.c: 170: {
  6082                           ;ui.c: 171: if(os.output_voltage>12000)
  6083  00A208  0102               	movlb	2	; () banked
  6084  00A20A  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6085  00A20C  D00B               	goto	l21059
  6086  00A20E  0EE1               	movlw	225
  6087  00A210  0102               	movlb	2	; () banked
  6088  00A212  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  6089  00A214  0E2E               	movlw	46
  6090  00A216  0102               	movlb	2	; () banked
  6091  00A218  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  6092  00A21A  A0D8               	btfss	status,0,c
  6093  00A21C  D003               	goto	l21059
  6094                           
  6095                           ; BSR set to: 2
  6096                           ;ui.c: 172: {
  6097                           ;ui.c: 173: system_output_toggle(OUTPUT_USB);
  6098  00A21E  0E10               	movlw	16
  6099  00A220  EC4C  F09F         	call	_system_output_toggle
  6100  00A224                     l21059:
  6101                           
  6102                           ;ui.c: 174: }
  6103                           ;ui.c: 175: }
  6104                           ;ui.c: 176: os.encoderCount = 0;
  6105  00A224  0E00               	movlw	0
  6106  00A226  0102               	movlb	2	; () banked
  6107  00A228  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6108                           
  6109                           ; BSR set to: 2
  6110                           ;ui.c: 177: os.buttonCount = 0;
  6111  00A22A  0E00               	movlw	0
  6112  00A22C  0102               	movlb	2	; () banked
  6113  00A22E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6114                           
  6115                           ;ui.c: 178: break;
  6116  00A230  0012               	return	
  6117  00A232                     l21063:
  6118                           
  6119                           ; BSR set to: 2
  6120                           ;ui.c: 181: if(os.encoderCount>0)
  6121  00A232  0102               	movlb	2	; () banked
  6122  00A234  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6123  00A236  0A80               	xorlw	128
  6124  00A238  0F7F               	addlw	-129
  6125  00A23A  A0D8               	btfss	status,0,c
  6126  00A23C  D002               	goto	l21067
  6127                           
  6128                           ; BSR set to: 2
  6129                           ;ui.c: 182: {
  6130                           ;ui.c: 183: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6131  00A23E  0E40               	movlw	64
  6132  00A240  D004               	goto	L4
  6133  00A242                     l21067:
  6134                           
  6135                           ; BSR set to: 2
  6136                           ;ui.c: 185: else if(os.encoderCount<0)
  6137  00A242  0102               	movlb	2	; () banked
  6138  00A244  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6139  00A246  D003               	goto	l1794
  6140                           
  6141                           ; BSR set to: 2
  6142                           ;ui.c: 186: {
  6143                           ;ui.c: 187: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  6144  00A248  0E20               	movlw	32
  6145  00A24A                     L4:
  6146  00A24A  0102               	movlb	2	; () banked
  6147  00A24C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6148  00A24E                     l1794:
  6149                           
  6150                           ; BSR set to: 2
  6151                           ;ui.c: 188: }
  6152                           ;ui.c: 189: if(os.buttonCount)
  6153  00A24E  0102               	movlb	2	; () banked
  6154  00A250  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6155  00A252  B4D8               	btfsc	status,2,c
  6156  00A254  D003               	goto	l1796
  6157                           
  6158                           ; BSR set to: 2
  6159                           ;ui.c: 190: {
  6160                           ;ui.c: 191: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  6161  00A256  0E31               	movlw	49
  6162  00A258  0102               	movlb	2	; () banked
  6163  00A25A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6164  00A25C                     l1796:
  6165                           
  6166                           ; BSR set to: 2
  6167                           ;ui.c: 192: }
  6168                           ;ui.c: 193: os.encoderCount = 0;
  6169  00A25C  0E00               	movlw	0
  6170  00A25E  0102               	movlb	2	; () banked
  6171  00A260  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6172                           
  6173                           ;ui.c: 194: os.buttonCount = 0;
  6174  00A262  0E00               	movlw	0
  6175  00A264  0102               	movlb	2	; () banked
  6176  00A266  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6177                           
  6178                           ;ui.c: 195: break;
  6179  00A268  0012               	return	
  6180  00A26A                     l21073:
  6181                           
  6182                           ; BSR set to: 2
  6183                           ;ui.c: 198: if(os.encoderCount>0)
  6184  00A26A  0102               	movlb	2	; () banked
  6185  00A26C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6186  00A26E  0A80               	xorlw	128
  6187  00A270  0F7F               	addlw	-129
  6188  00A272  A0D8               	btfss	status,0,c
  6189  00A274  D007               	goto	l21079
  6190                           
  6191                           ; BSR set to: 2
  6192                           ;ui.c: 199: {
  6193                           ;ui.c: 200: if(os.output_voltage>-1)
  6194  00A276  0102               	movlb	2	; () banked
  6195  00A278  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6196  00A27A  D00A               	goto	l21083
  6197                           
  6198                           ; BSR set to: 2
  6199                           ;ui.c: 201: system_output_on(OUTPUT_1);
  6200  00A27C  0E01               	movlw	1
  6201  00A27E  EC11  F09A         	call	_system_output_on
  6202                           
  6203                           ;ui.c: 202: }
  6204  00A282  D006               	goto	l21083
  6205  00A284                     l21079:
  6206                           
  6207                           ;ui.c: 203: else if(os.encoderCount<0)
  6208  00A284  0102               	movlb	2	; () banked
  6209  00A286  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6210  00A288  D003               	goto	l21083
  6211                           
  6212                           ; BSR set to: 2
  6213                           ;ui.c: 204: {
  6214                           ;ui.c: 205: system_output_off(OUTPUT_1);
  6215  00A28A  0E01               	movlw	1
  6216  00A28C  ECEC  F098         	call	_system_output_off
  6217  00A290                     l21083:
  6218                           
  6219                           ;ui.c: 206: }
  6220                           ;ui.c: 207: if(os.buttonCount)
  6221  00A290  0102               	movlb	2	; () banked
  6222  00A292  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6223  00A294  B4D8               	btfsc	status,2,c
  6224  00A296  D003               	goto	l1802
  6225                           
  6226                           ; BSR set to: 2
  6227                           ;ui.c: 208: {
  6228                           ;ui.c: 209: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6229  00A298  0E32               	movlw	50
  6230  00A29A  0102               	movlb	2	; () banked
  6231  00A29C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6232  00A29E                     l1802:
  6233                           
  6234                           ; BSR set to: 2
  6235                           ;ui.c: 210: }
  6236                           ;ui.c: 211: os.encoderCount = 0;
  6237  00A29E  0E00               	movlw	0
  6238  00A2A0  0102               	movlb	2	; () banked
  6239  00A2A2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6240                           
  6241                           ;ui.c: 212: os.buttonCount = 0;
  6242  00A2A4  0E00               	movlw	0
  6243  00A2A6  0102               	movlb	2	; () banked
  6244  00A2A8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6245                           
  6246                           ;ui.c: 213: break;
  6247  00A2AA  0012               	return	
  6248  00A2AC                     l21087:
  6249                           
  6250                           ; BSR set to: 2
  6251                           ;ui.c: 216: if(os.encoderCount>0)
  6252  00A2AC  0102               	movlb	2	; () banked
  6253  00A2AE  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6254  00A2B0  0A80               	xorlw	128
  6255  00A2B2  0F7F               	addlw	-129
  6256  00A2B4  A0D8               	btfss	status,0,c
  6257  00A2B6  D007               	goto	l21093
  6258                           
  6259                           ; BSR set to: 2
  6260                           ;ui.c: 217: {
  6261                           ;ui.c: 218: if(os.output_voltage>-1)
  6262  00A2B8  0102               	movlb	2	; () banked
  6263  00A2BA  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6264  00A2BC  D00A               	goto	l21097
  6265                           
  6266                           ; BSR set to: 2
  6267                           ;ui.c: 219: system_output_on(OUTPUT_2);
  6268  00A2BE  0E02               	movlw	2
  6269  00A2C0  EC11  F09A         	call	_system_output_on
  6270                           
  6271                           ;ui.c: 220: }
  6272  00A2C4  D006               	goto	l21097
  6273  00A2C6                     l21093:
  6274                           
  6275                           ;ui.c: 221: else if(os.encoderCount<0)
  6276  00A2C6  0102               	movlb	2	; () banked
  6277  00A2C8  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6278  00A2CA  D003               	goto	l21097
  6279                           
  6280                           ; BSR set to: 2
  6281                           ;ui.c: 222: {
  6282                           ;ui.c: 223: system_output_off(OUTPUT_2);
  6283  00A2CC  0E02               	movlw	2
  6284  00A2CE  ECEC  F098         	call	_system_output_off
  6285  00A2D2                     l21097:
  6286                           
  6287                           ;ui.c: 224: }
  6288                           ;ui.c: 225: if(os.buttonCount)
  6289  00A2D2  0102               	movlb	2	; () banked
  6290  00A2D4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6291  00A2D6  B4D8               	btfsc	status,2,c
  6292  00A2D8  D003               	goto	l1808
  6293                           
  6294                           ; BSR set to: 2
  6295                           ;ui.c: 226: {
  6296                           ;ui.c: 227: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6297  00A2DA  0E33               	movlw	51
  6298  00A2DC  0102               	movlb	2	; () banked
  6299  00A2DE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6300  00A2E0                     l1808:
  6301                           
  6302                           ; BSR set to: 2
  6303                           ;ui.c: 228: }
  6304                           ;ui.c: 229: os.encoderCount = 0;
  6305  00A2E0  0E00               	movlw	0
  6306  00A2E2  0102               	movlb	2	; () banked
  6307  00A2E4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6308                           
  6309                           ;ui.c: 230: os.buttonCount = 0;
  6310  00A2E6  0E00               	movlw	0
  6311  00A2E8  0102               	movlb	2	; () banked
  6312  00A2EA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6313                           
  6314                           ;ui.c: 231: break;
  6315  00A2EC  0012               	return	
  6316  00A2EE                     l21101:
  6317                           
  6318                           ; BSR set to: 2
  6319                           ;ui.c: 234: if(os.encoderCount>0)
  6320  00A2EE  0102               	movlb	2	; () banked
  6321  00A2F0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6322  00A2F2  0A80               	xorlw	128
  6323  00A2F4  0F7F               	addlw	-129
  6324  00A2F6  A0D8               	btfss	status,0,c
  6325  00A2F8  D007               	goto	l21107
  6326                           
  6327                           ; BSR set to: 2
  6328                           ;ui.c: 235: {
  6329                           ;ui.c: 236: if(os.output_voltage>-1)
  6330  00A2FA  0102               	movlb	2	; () banked
  6331  00A2FC  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6332  00A2FE  D00A               	goto	l21111
  6333                           
  6334                           ; BSR set to: 2
  6335                           ;ui.c: 237: system_output_on(OUTPUT_3);
  6336  00A300  0E04               	movlw	4
  6337  00A302  EC11  F09A         	call	_system_output_on
  6338                           
  6339                           ;ui.c: 238: }
  6340  00A306  D006               	goto	l21111
  6341  00A308                     l21107:
  6342                           
  6343                           ;ui.c: 239: else if(os.encoderCount<0)
  6344  00A308  0102               	movlb	2	; () banked
  6345  00A30A  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6346  00A30C  D003               	goto	l21111
  6347                           
  6348                           ; BSR set to: 2
  6349                           ;ui.c: 240: {
  6350                           ;ui.c: 241: system_output_off(OUTPUT_3);
  6351  00A30E  0E04               	movlw	4
  6352  00A310  ECEC  F098         	call	_system_output_off
  6353  00A314                     l21111:
  6354                           
  6355                           ;ui.c: 242: }
  6356                           ;ui.c: 243: if(os.buttonCount)
  6357  00A314  0102               	movlb	2	; () banked
  6358  00A316  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6359  00A318  B4D8               	btfsc	status,2,c
  6360  00A31A  D003               	goto	l1814
  6361                           
  6362                           ; BSR set to: 2
  6363                           ;ui.c: 244: {
  6364                           ;ui.c: 245: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6365  00A31C  0E34               	movlw	52
  6366  00A31E  0102               	movlb	2	; () banked
  6367  00A320  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6368  00A322                     l1814:
  6369                           
  6370                           ; BSR set to: 2
  6371                           ;ui.c: 246: }
  6372                           ;ui.c: 247: os.encoderCount = 0;
  6373  00A322  0E00               	movlw	0
  6374  00A324  0102               	movlb	2	; () banked
  6375  00A326  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6376                           
  6377                           ;ui.c: 248: os.buttonCount = 0;
  6378  00A328  0E00               	movlw	0
  6379  00A32A  0102               	movlb	2	; () banked
  6380  00A32C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6381                           
  6382                           ;ui.c: 249: break;
  6383  00A32E  0012               	return	
  6384  00A330                     l21115:
  6385                           
  6386                           ; BSR set to: 2
  6387                           ;ui.c: 252: if(os.encoderCount>0)
  6388  00A330  0102               	movlb	2	; () banked
  6389  00A332  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6390  00A334  0A80               	xorlw	128
  6391  00A336  0F7F               	addlw	-129
  6392  00A338  A0D8               	btfss	status,0,c
  6393  00A33A  D007               	goto	l21121
  6394                           
  6395                           ; BSR set to: 2
  6396                           ;ui.c: 253: {
  6397                           ;ui.c: 254: if(os.output_voltage>-1)
  6398  00A33C  0102               	movlb	2	; () banked
  6399  00A33E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6400  00A340  D00A               	goto	l21125
  6401                           
  6402                           ; BSR set to: 2
  6403                           ;ui.c: 255: system_output_on(OUTPUT_4);
  6404  00A342  0E08               	movlw	8
  6405  00A344  EC11  F09A         	call	_system_output_on
  6406                           
  6407                           ;ui.c: 256: }
  6408  00A348  D006               	goto	l21125
  6409  00A34A                     l21121:
  6410                           
  6411                           ;ui.c: 257: else if(os.encoderCount<0)
  6412  00A34A  0102               	movlb	2	; () banked
  6413  00A34C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6414  00A34E  D003               	goto	l21125
  6415                           
  6416                           ; BSR set to: 2
  6417                           ;ui.c: 258: {
  6418                           ;ui.c: 259: system_output_off(OUTPUT_4);
  6419  00A350  0E08               	movlw	8
  6420  00A352  ECEC  F098         	call	_system_output_off
  6421  00A356                     l21125:
  6422                           
  6423                           ;ui.c: 260: }
  6424                           ;ui.c: 261: if(os.buttonCount)
  6425  00A356  0102               	movlb	2	; () banked
  6426  00A358  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6427  00A35A  B4D8               	btfsc	status,2,c
  6428  00A35C  D003               	goto	l1820
  6429                           
  6430                           ; BSR set to: 2
  6431                           ;ui.c: 262: {
  6432                           ;ui.c: 263: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6433  00A35E  0E30               	movlw	48
  6434  00A360  0102               	movlb	2	; () banked
  6435  00A362  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6436  00A364                     l1820:
  6437                           
  6438                           ; BSR set to: 2
  6439                           ;ui.c: 264: }
  6440                           ;ui.c: 265: os.encoderCount = 0;
  6441  00A364  0E00               	movlw	0
  6442  00A366  0102               	movlb	2	; () banked
  6443  00A368  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6444                           
  6445                           ;ui.c: 266: os.buttonCount = 0;
  6446  00A36A  0E00               	movlw	0
  6447  00A36C  0102               	movlb	2	; () banked
  6448  00A36E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6449                           
  6450                           ;ui.c: 267: break;
  6451  00A370  0012               	return	
  6452  00A372                     l21129:
  6453                           
  6454                           ; BSR set to: 2
  6455                           ;ui.c: 270: if(os.encoderCount>0)
  6456  00A372  0102               	movlb	2	; () banked
  6457  00A374  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6458  00A376  0A80               	xorlw	128
  6459  00A378  0F7F               	addlw	-129
  6460  00A37A  A0D8               	btfss	status,0,c
  6461  00A37C  D002               	goto	l21133
  6462                           
  6463                           ; BSR set to: 2
  6464                           ;ui.c: 271: {
  6465                           ;ui.c: 272: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6466  00A37E  0E50               	movlw	80
  6467  00A380  D004               	goto	L5
  6468  00A382                     l21133:
  6469                           
  6470                           ; BSR set to: 2
  6471                           ;ui.c: 274: else if(os.encoderCount<0)
  6472  00A382  0102               	movlb	2	; () banked
  6473  00A384  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6474  00A386  D003               	goto	l1823
  6475                           
  6476                           ; BSR set to: 2
  6477                           ;ui.c: 275: {
  6478                           ;ui.c: 276: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6479  00A388  0E30               	movlw	48
  6480  00A38A                     L5:
  6481  00A38A  0102               	movlb	2	; () banked
  6482  00A38C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6483  00A38E                     l1823:
  6484                           
  6485                           ; BSR set to: 2
  6486                           ;ui.c: 277: }
  6487                           ;ui.c: 278: if(os.buttonCount)
  6488  00A38E  0102               	movlb	2	; () banked
  6489  00A390  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6490                           
  6491                           ; BSR set to: 2
  6492                           ;ui.c: 281: }
  6493                           ;ui.c: 282: os.encoderCount = 0;
  6494                           
  6495                           ; BSR set to: 2
  6496                           
  6497                           ;ui.c: 279: {
  6498                           ;ui.c: 280: ;
  6499  00A392  0E00               	movlw	0
  6500  00A394  0102               	movlb	2	; () banked
  6501  00A396  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6502                           
  6503                           ;ui.c: 283: os.buttonCount = 0;
  6504  00A398  0E00               	movlw	0
  6505  00A39A  0102               	movlb	2	; () banked
  6506  00A39C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6507                           
  6508                           ;ui.c: 284: break;
  6509  00A39E  0012               	return	
  6510  00A3A0                     l21139:
  6511                           
  6512                           ; BSR set to: 2
  6513                           ;ui.c: 287: if(os.encoderCount>0)
  6514  00A3A0  0102               	movlb	2	; () banked
  6515  00A3A2  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6516  00A3A4  0A80               	xorlw	128
  6517  00A3A6  0F7F               	addlw	-129
  6518  00A3A8  A0D8               	btfss	status,0,c
  6519  00A3AA  D002               	goto	l21143
  6520                           
  6521                           ; BSR set to: 2
  6522                           ;ui.c: 288: {
  6523                           ;ui.c: 289: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6524  00A3AC  0E60               	movlw	96
  6525  00A3AE  D004               	goto	L6
  6526  00A3B0                     l21143:
  6527                           
  6528                           ; BSR set to: 2
  6529                           ;ui.c: 291: else if(os.encoderCount<0)
  6530  00A3B0  0102               	movlb	2	; () banked
  6531  00A3B2  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6532  00A3B4  D003               	goto	l1828
  6533                           
  6534                           ; BSR set to: 2
  6535                           ;ui.c: 292: {
  6536                           ;ui.c: 293: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6537  00A3B6  0E40               	movlw	64
  6538  00A3B8                     L6:
  6539  00A3B8  0102               	movlb	2	; () banked
  6540  00A3BA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6541  00A3BC                     l1828:
  6542                           
  6543                           ; BSR set to: 2
  6544                           ;ui.c: 294: }
  6545                           ;ui.c: 295: if(os.buttonCount)
  6546  00A3BC  0102               	movlb	2	; () banked
  6547  00A3BE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6548                           
  6549                           ; BSR set to: 2
  6550                           ;ui.c: 298: }
  6551                           ;ui.c: 299: os.encoderCount = 0;
  6552                           
  6553                           ; BSR set to: 2
  6554                           
  6555                           ;ui.c: 296: {
  6556                           ;ui.c: 297: ;
  6557  00A3C0  0E00               	movlw	0
  6558  00A3C2  0102               	movlb	2	; () banked
  6559  00A3C4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6560                           
  6561                           ;ui.c: 300: os.buttonCount = 0;
  6562  00A3C6  0E00               	movlw	0
  6563  00A3C8  0102               	movlb	2	; () banked
  6564  00A3CA  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6565                           
  6566                           ;ui.c: 301: break;
  6567  00A3CC  0012               	return	
  6568  00A3CE                     l21149:
  6569                           
  6570                           ; BSR set to: 2
  6571                           ;ui.c: 304: if(os.encoderCount>0)
  6572  00A3CE  0102               	movlb	2	; () banked
  6573  00A3D0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6574  00A3D2  0A80               	xorlw	128
  6575  00A3D4  0F7F               	addlw	-129
  6576  00A3D6  A0D8               	btfss	status,0,c
  6577  00A3D8  D002               	goto	l21153
  6578                           
  6579                           ; BSR set to: 2
  6580                           ;ui.c: 305: {
  6581                           ;ui.c: 306: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6582  00A3DA  0E00               	movlw	0
  6583  00A3DC  D004               	goto	L7
  6584  00A3DE                     l21153:
  6585                           
  6586                           ; BSR set to: 2
  6587                           ;ui.c: 308: else if(os.encoderCount<0)
  6588  00A3DE  0102               	movlb	2	; () banked
  6589  00A3E0  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6590  00A3E2  D003               	goto	l1833
  6591                           
  6592                           ; BSR set to: 2
  6593                           ;ui.c: 309: {
  6594                           ;ui.c: 310: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6595  00A3E4  0E50               	movlw	80
  6596  00A3E6                     L7:
  6597  00A3E6  0102               	movlb	2	; () banked
  6598  00A3E8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6599  00A3EA                     l1833:
  6600                           
  6601                           ; BSR set to: 2
  6602                           ;ui.c: 311: }
  6603                           ;ui.c: 312: if(os.buttonCount)
  6604  00A3EA  0102               	movlb	2	; () banked
  6605  00A3EC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6606                           
  6607                           ; BSR set to: 2
  6608                           ;ui.c: 315: }
  6609                           ;ui.c: 316: os.encoderCount = 0;
  6610                           
  6611                           ; BSR set to: 2
  6612                           
  6613                           ;ui.c: 313: {
  6614                           ;ui.c: 314: ;
  6615  00A3EE  0E00               	movlw	0
  6616  00A3F0  0102               	movlb	2	; () banked
  6617  00A3F2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6618                           
  6619                           ;ui.c: 317: os.buttonCount = 0;
  6620  00A3F4  0E00               	movlw	0
  6621  00A3F6  0102               	movlb	2	; () banked
  6622  00A3F8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6623                           
  6624                           ;ui.c: 318: break;
  6625  00A3FA  0012               	return	
  6626  00A3FC                     l21159:
  6627                           
  6628                           ; BSR set to: 2
  6629                           ;ui.c: 321: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6630  00A3FC  0E00               	movlw	0
  6631  00A3FE  0102               	movlb	2	; () banked
  6632  00A400  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6633                           
  6634                           ;ui.c: 322: }
  6635  00A402  0012               	return	
  6636  00A404                     l21161:
  6637  00A404  0102               	movlb	2	; () banked
  6638  00A406  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  6639                           
  6640                           ; Switch size 1, requested type "space"
  6641                           ; Number of cases is 17, Range of values is 0 to 96
  6642                           ; switch strategies available:
  6643                           ; Name         Instructions Cycles
  6644                           ; simple_byte           52    27 (average)
  6645                           ;	Chosen strategy is simple_byte
  6646  00A408  0A00               	xorlw	0	; case 0
  6647  00A40A  B4D8               	btfsc	status,2,c
  6648  00A40C  D610               	goto	l20937
  6649  00A40E  0A10               	xorlw	16	; case 16
  6650  00A410  B4D8               	btfsc	status,2,c
  6651  00A412  D624               	goto	l20947
  6652  00A414  0A01               	xorlw	1	; case 17
  6653  00A416  B4D8               	btfsc	status,2,c
  6654  00A418  D63D               	goto	l20957
  6655  00A41A  0A03               	xorlw	3	; case 18
  6656  00A41C  B4D8               	btfsc	status,2,c
  6657  00A41E  D657               	goto	l20975
  6658  00A420  0A01               	xorlw	1	; case 19
  6659  00A422  B4D8               	btfsc	status,2,c
  6660  00A424  D671               	goto	l20993
  6661  00A426  0A07               	xorlw	7	; case 20
  6662  00A428  B4D8               	btfsc	status,2,c
  6663  00A42A  D689               	goto	l21005
  6664  00A42C  0A01               	xorlw	1	; case 21
  6665  00A42E  B4D8               	btfsc	status,2,c
  6666  00A430  D6A1               	goto	l21017
  6667  00A432  0A03               	xorlw	3	; case 22
  6668  00A434  B4D8               	btfsc	status,2,c
  6669  00A436  D6B9               	goto	l21029
  6670  00A438  0A36               	xorlw	54	; case 32
  6671  00A43A  B4D8               	btfsc	status,2,c
  6672  00A43C  D6D3               	goto	l21047
  6673  00A43E  0A10               	xorlw	16	; case 48
  6674  00A440  B4D8               	btfsc	status,2,c
  6675  00A442  D6F7               	goto	l21063
  6676  00A444  0A01               	xorlw	1	; case 49
  6677  00A446  B4D8               	btfsc	status,2,c
  6678  00A448  D710               	goto	l21073
  6679  00A44A  0A03               	xorlw	3	; case 50
  6680  00A44C  B4D8               	btfsc	status,2,c
  6681  00A44E  D72E               	goto	l21087
  6682  00A450  0A01               	xorlw	1	; case 51
  6683  00A452  B4D8               	btfsc	status,2,c
  6684  00A454  D74C               	goto	l21101
  6685  00A456  0A07               	xorlw	7	; case 52
  6686  00A458  B4D8               	btfsc	status,2,c
  6687  00A45A  D76A               	goto	l21115
  6688  00A45C  0A74               	xorlw	116	; case 64
  6689  00A45E  B4D8               	btfsc	status,2,c
  6690  00A460  D788               	goto	l21129
  6691  00A462  0A10               	xorlw	16	; case 80
  6692  00A464  B4D8               	btfsc	status,2,c
  6693  00A466  D79C               	goto	l21139
  6694  00A468  0A30               	xorlw	48	; case 96
  6695  00A46A  B4D8               	btfsc	status,2,c
  6696  00A46C  D7B0               	goto	l21149
  6697  00A46E  D7C6               	goto	l21159
  6698  00A470                     __end_of__ui_encoder:
  6699                           	opt stack 0
  6700                           tblptru	equ	0xFF8
  6701                           tblptrh	equ	0xFF7
  6702                           tblptrl	equ	0xFF6
  6703                           tablat	equ	0xFF5
  6704                           intcon3	equ	0xFF0
  6705                           postinc0	equ	0xFEE
  6706                           wreg	equ	0xFE8
  6707                           postdec1	equ	0xFE5
  6708                           plusw1	equ	0xFE3
  6709                           fsr1h	equ	0xFE2
  6710                           fsr1l	equ	0xFE1
  6711                           postinc2	equ	0xFDE
  6712                           postdec2	equ	0xFDD
  6713                           plusw2	equ	0xFDB
  6714                           fsr2h	equ	0xFDA
  6715                           fsr2l	equ	0xFD9
  6716                           status	equ	0xFD8
  6717                           
  6718 ;; *************** function _system_output_toggle *****************
  6719 ;; Defined at:
  6720 ;;		line 499 in file "os.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  output          1    wreg     enum E8129
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  output          1    2[BANK0 ] enum E8129
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      void 
  6727 ;; Registers used:
  6728 ;;		wreg, status,2, status,0, cstack
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;Total ram usage:        1 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:   11
  6741 ;; This function calls:
  6742 ;;		_system_output_is_on
  6743 ;;		_system_output_off
  6744 ;;		_system_output_on
  6745 ;; This function is called by:
  6746 ;;		__ui_encoder
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text9
  6751  013E98                     __ptext9:
  6752                           	opt stack 0
  6753  013E98                     _system_output_toggle:
  6754                           	opt stack 17
  6755                           
  6756                           ; BSR set to: 2
  6757                           ;incstack = 0
  6758                           ;system_output_toggle@output stored from wreg
  6759  013E98  0100               	movlb	0	; () banked
  6760  013E9A  6F62               	movwf	system_output_toggle@output& (0+255),b
  6761                           
  6762                           ;os.c: 501: if(system_output_is_on(output))
  6763  013E9C  0100               	movlb	0	; () banked
  6764  013E9E  5162               	movf	system_output_toggle@output& (0+255),w,b
  6765  013EA0  ECFF  F09F         	call	_system_output_is_on
  6766  013EA4  0900               	iorlw	0
  6767  013EA6  B4D8               	btfsc	status,2,c
  6768  013EA8  D005               	goto	l19531
  6769                           
  6770                           ;os.c: 502: system_output_off(output);
  6771  013EAA  0100               	movlb	0	; () banked
  6772  013EAC  5162               	movf	system_output_toggle@output& (0+255),w,b
  6773  013EAE  ECEC  F098         	call	_system_output_off
  6774  013EB2  0012               	return	
  6775  013EB4                     l19531:
  6776                           
  6777                           ;os.c: 503: else
  6778                           ;os.c: 504: system_output_on(output);
  6779  013EB4  0100               	movlb	0	; () banked
  6780  013EB6  5162               	movf	system_output_toggle@output& (0+255),w,b
  6781  013EB8  EC11  F09A         	call	_system_output_on
  6782  013EBC  0012               	return	
  6783  013EBE                     __end_of_system_output_toggle:
  6784                           	opt stack 0
  6785                           tblptru	equ	0xFF8
  6786                           tblptrh	equ	0xFF7
  6787                           tblptrl	equ	0xFF6
  6788                           tablat	equ	0xFF5
  6789                           intcon3	equ	0xFF0
  6790                           postinc0	equ	0xFEE
  6791                           wreg	equ	0xFE8
  6792                           postdec1	equ	0xFE5
  6793                           plusw1	equ	0xFE3
  6794                           fsr1h	equ	0xFE2
  6795                           fsr1l	equ	0xFE1
  6796                           postinc2	equ	0xFDE
  6797                           postdec2	equ	0xFDD
  6798                           plusw2	equ	0xFDB
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _rtcc_increment_year *****************
  6804 ;; Defined at:
  6805 ;;		line 150 in file "rtcc.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  year            1    8[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;Total ram usage:        1 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:   12
  6826 ;; This function calls:
  6827 ;;		__rtcc_increment_bcd
  6828 ;;		_rtcc_get_year
  6829 ;;		_rtcc_set_year
  6830 ;; This function is called by:
  6831 ;;		__ui_encoder
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text10
  6836  013C50                     __ptext10:
  6837                           	opt stack 0
  6838  013C50                     _rtcc_increment_year:
  6839                           	opt stack 16
  6840                           
  6841                           ;rtcc.c: 152: uint8_t year = rtcc_get_year();
  6842                           
  6843                           ;incstack = 0
  6844  013C50  ECA7  F0A0         	call	_rtcc_get_year	;wreg free
  6845  013C54  0100               	movlb	0	; () banked
  6846  013C56  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;rtcc.c: 153: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  6850  013C58  0E00               	movlw	0
  6851  013C5A  0100               	movlb	0	; () banked
  6852  013C5C  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6853  013C5E  0E99               	movlw	153
  6854  013C60  0100               	movlb	0	; () banked
  6855  013C62  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6856  013C64  0100               	movlb	0	; () banked
  6857  013C66  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6858  013C68  EC50  F09B         	call	__rtcc_increment_bcd
  6859  013C6C  0100               	movlb	0	; () banked
  6860  013C6E  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;rtcc.c: 154: rtcc_set_year(year);
  6864  013C70  0100               	movlb	0	; () banked
  6865  013C72  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6866  013C74  EC0C  F0A0         	call	_rtcc_set_year
  6867  013C78  0012               	return		;funcret
  6868  013C7A                     __end_of_rtcc_increment_year:
  6869                           	opt stack 0
  6870                           tblptru	equ	0xFF8
  6871                           tblptrh	equ	0xFF7
  6872                           tblptrl	equ	0xFF6
  6873                           tablat	equ	0xFF5
  6874                           intcon3	equ	0xFF0
  6875                           postinc0	equ	0xFEE
  6876                           wreg	equ	0xFE8
  6877                           postdec1	equ	0xFE5
  6878                           plusw1	equ	0xFE3
  6879                           fsr1h	equ	0xFE2
  6880                           fsr1l	equ	0xFE1
  6881                           postinc2	equ	0xFDE
  6882                           postdec2	equ	0xFDD
  6883                           plusw2	equ	0xFDB
  6884                           fsr2h	equ	0xFDA
  6885                           fsr2l	equ	0xFD9
  6886                           status	equ	0xFD8
  6887                           
  6888 ;; *************** function _rtcc_increment_seconds *****************
  6889 ;; Defined at:
  6890 ;;		line 340 in file "rtcc.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;		None
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  seconds         1    8[BANK0 ] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6908 ;;Total ram usage:        1 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:   12
  6911 ;; This function calls:
  6912 ;;		__rtcc_increment_bcd
  6913 ;;		_rtcc_get_seconds
  6914 ;;		_rtcc_set_seconds
  6915 ;; This function is called by:
  6916 ;;		__ui_encoder
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text11
  6921  013C7A                     __ptext11:
  6922                           	opt stack 0
  6923  013C7A                     _rtcc_increment_seconds:
  6924                           	opt stack 16
  6925                           
  6926                           ;rtcc.c: 342: uint8_t seconds = rtcc_get_seconds();
  6927                           
  6928                           ;incstack = 0
  6929  013C7A  ECB1  F0A0         	call	_rtcc_get_seconds	;wreg free
  6930  013C7E  0100               	movlb	0	; () banked
  6931  013C80  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;rtcc.c: 343: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  6935  013C82  0E00               	movlw	0
  6936  013C84  0100               	movlb	0	; () banked
  6937  013C86  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6938  013C88  0E59               	movlw	89
  6939  013C8A  0100               	movlb	0	; () banked
  6940  013C8C  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6941  013C8E  0100               	movlb	0	; () banked
  6942  013C90  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6943  013C92  EC50  F09B         	call	__rtcc_increment_bcd
  6944  013C96  0100               	movlb	0	; () banked
  6945  013C98  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;rtcc.c: 344: rtcc_set_seconds(seconds);
  6949  013C9A  0100               	movlb	0	; () banked
  6950  013C9C  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6951  013C9E  EC19  F0A0         	call	_rtcc_set_seconds
  6952  013CA2  0012               	return		;funcret
  6953  013CA4                     __end_of_rtcc_increment_seconds:
  6954                           	opt stack 0
  6955                           tblptru	equ	0xFF8
  6956                           tblptrh	equ	0xFF7
  6957                           tblptrl	equ	0xFF6
  6958                           tablat	equ	0xFF5
  6959                           intcon3	equ	0xFF0
  6960                           postinc0	equ	0xFEE
  6961                           wreg	equ	0xFE8
  6962                           postdec1	equ	0xFE5
  6963                           plusw1	equ	0xFE3
  6964                           fsr1h	equ	0xFE2
  6965                           fsr1l	equ	0xFE1
  6966                           postinc2	equ	0xFDE
  6967                           postdec2	equ	0xFDD
  6968                           plusw2	equ	0xFDB
  6969                           fsr2h	equ	0xFDA
  6970                           fsr2l	equ	0xFD9
  6971                           status	equ	0xFD8
  6972                           
  6973 ;; *************** function _rtcc_increment_month *****************
  6974 ;; Defined at:
  6975 ;;		line 188 in file "rtcc.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;		None
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  month           1    8[BANK0 ] unsigned char 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  1    wreg      void 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;Total ram usage:        1 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:   12
  6996 ;; This function calls:
  6997 ;;		__rtcc_increment_bcd
  6998 ;;		_rtcc_get_month
  6999 ;;		_rtcc_set_month
  7000 ;; This function is called by:
  7001 ;;		__ui_encoder
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text12
  7006  013CA4                     __ptext12:
  7007                           	opt stack 0
  7008  013CA4                     _rtcc_increment_month:
  7009                           	opt stack 16
  7010                           
  7011                           ;rtcc.c: 190: uint8_t month = rtcc_get_month();
  7012                           
  7013                           ;incstack = 0
  7014  013CA4  ECBB  F0A0         	call	_rtcc_get_month	;wreg free
  7015  013CA8  0100               	movlb	0	; () banked
  7016  013CAA  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;rtcc.c: 191: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  7020  013CAC  0E01               	movlw	1
  7021  013CAE  0100               	movlb	0	; () banked
  7022  013CB0  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7023  013CB2  0E12               	movlw	18
  7024  013CB4  0100               	movlb	0	; () banked
  7025  013CB6  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7026  013CB8  0100               	movlb	0	; () banked
  7027  013CBA  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7028  013CBC  EC50  F09B         	call	__rtcc_increment_bcd
  7029  013CC0  0100               	movlb	0	; () banked
  7030  013CC2  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;rtcc.c: 192: rtcc_set_month(month);
  7034  013CC4  0100               	movlb	0	; () banked
  7035  013CC6  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7036  013CC8  EC26  F0A0         	call	_rtcc_set_month
  7037  013CCC  0012               	return		;funcret
  7038  013CCE                     __end_of_rtcc_increment_month:
  7039                           	opt stack 0
  7040                           tblptru	equ	0xFF8
  7041                           tblptrh	equ	0xFF7
  7042                           tblptrl	equ	0xFF6
  7043                           tablat	equ	0xFF5
  7044                           intcon3	equ	0xFF0
  7045                           postinc0	equ	0xFEE
  7046                           wreg	equ	0xFE8
  7047                           postdec1	equ	0xFE5
  7048                           plusw1	equ	0xFE3
  7049                           fsr1h	equ	0xFE2
  7050                           fsr1l	equ	0xFE1
  7051                           postinc2	equ	0xFDE
  7052                           postdec2	equ	0xFDD
  7053                           plusw2	equ	0xFDB
  7054                           fsr2h	equ	0xFDA
  7055                           fsr2l	equ	0xFD9
  7056                           status	equ	0xFD8
  7057                           
  7058 ;; *************** function _rtcc_increment_minutes *****************
  7059 ;; Defined at:
  7060 ;;		line 302 in file "rtcc.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;		None
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  minutes         1    8[BANK0 ] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      void 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;Total ram usage:        1 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:   12
  7081 ;; This function calls:
  7082 ;;		__rtcc_increment_bcd
  7083 ;;		_rtcc_get_minutes
  7084 ;;		_rtcc_set_minutes
  7085 ;; This function is called by:
  7086 ;;		__ui_encoder
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text13
  7091  013CCE                     __ptext13:
  7092                           	opt stack 0
  7093  013CCE                     _rtcc_increment_minutes:
  7094                           	opt stack 16
  7095                           
  7096                           ;rtcc.c: 304: uint8_t minutes = rtcc_get_minutes();
  7097                           
  7098                           ;incstack = 0
  7099  013CCE  ECC5  F0A0         	call	_rtcc_get_minutes	;wreg free
  7100  013CD2  0100               	movlb	0	; () banked
  7101  013CD4  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;rtcc.c: 305: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  7105  013CD6  0E00               	movlw	0
  7106  013CD8  0100               	movlb	0	; () banked
  7107  013CDA  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7108  013CDC  0E59               	movlw	89
  7109  013CDE  0100               	movlb	0	; () banked
  7110  013CE0  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7111  013CE2  0100               	movlb	0	; () banked
  7112  013CE4  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7113  013CE6  EC50  F09B         	call	__rtcc_increment_bcd
  7114  013CEA  0100               	movlb	0	; () banked
  7115  013CEC  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;rtcc.c: 306: rtcc_set_minutes(minutes);
  7119  013CEE  0100               	movlb	0	; () banked
  7120  013CF0  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7121  013CF2  EC33  F0A0         	call	_rtcc_set_minutes
  7122  013CF6  0012               	return		;funcret
  7123  013CF8                     __end_of_rtcc_increment_minutes:
  7124                           	opt stack 0
  7125                           tblptru	equ	0xFF8
  7126                           tblptrh	equ	0xFF7
  7127                           tblptrl	equ	0xFF6
  7128                           tablat	equ	0xFF5
  7129                           intcon3	equ	0xFF0
  7130                           postinc0	equ	0xFEE
  7131                           wreg	equ	0xFE8
  7132                           postdec1	equ	0xFE5
  7133                           plusw1	equ	0xFE3
  7134                           fsr1h	equ	0xFE2
  7135                           fsr1l	equ	0xFE1
  7136                           postinc2	equ	0xFDE
  7137                           postdec2	equ	0xFDD
  7138                           plusw2	equ	0xFDB
  7139                           fsr2h	equ	0xFDA
  7140                           fsr2l	equ	0xFD9
  7141                           status	equ	0xFD8
  7142                           
  7143 ;; *************** function _rtcc_increment_hours *****************
  7144 ;; Defined at:
  7145 ;;		line 264 in file "rtcc.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  hours           1    8[BANK0 ] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  1    wreg      void 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7162 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7163 ;;Total ram usage:        1 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:   12
  7166 ;; This function calls:
  7167 ;;		__rtcc_increment_bcd
  7168 ;;		_rtcc_get_hours
  7169 ;;		_rtcc_set_hours
  7170 ;; This function is called by:
  7171 ;;		__ui_encoder
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text14
  7176  013CF8                     __ptext14:
  7177                           	opt stack 0
  7178  013CF8                     _rtcc_increment_hours:
  7179                           	opt stack 16
  7180                           
  7181                           ;rtcc.c: 266: uint8_t hours = rtcc_get_hours();
  7182                           
  7183                           ;incstack = 0
  7184  013CF8  ECCF  F0A0         	call	_rtcc_get_hours	;wreg free
  7185  013CFC  0100               	movlb	0	; () banked
  7186  013CFE  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;rtcc.c: 267: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  7190  013D00  0E00               	movlw	0
  7191  013D02  0100               	movlb	0	; () banked
  7192  013D04  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7193  013D06  0E23               	movlw	35
  7194  013D08  0100               	movlb	0	; () banked
  7195  013D0A  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7196  013D0C  0100               	movlb	0	; () banked
  7197  013D0E  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7198  013D10  EC50  F09B         	call	__rtcc_increment_bcd
  7199  013D14  0100               	movlb	0	; () banked
  7200  013D16  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;rtcc.c: 268: rtcc_set_hours(hours);
  7204  013D18  0100               	movlb	0	; () banked
  7205  013D1A  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7206  013D1C  EC40  F0A0         	call	_rtcc_set_hours
  7207  013D20  0012               	return		;funcret
  7208  013D22                     __end_of_rtcc_increment_hours:
  7209                           	opt stack 0
  7210                           tblptru	equ	0xFF8
  7211                           tblptrh	equ	0xFF7
  7212                           tblptrl	equ	0xFF6
  7213                           tablat	equ	0xFF5
  7214                           intcon3	equ	0xFF0
  7215                           postinc0	equ	0xFEE
  7216                           wreg	equ	0xFE8
  7217                           postdec1	equ	0xFE5
  7218                           plusw1	equ	0xFE3
  7219                           fsr1h	equ	0xFE2
  7220                           fsr1l	equ	0xFE1
  7221                           postinc2	equ	0xFDE
  7222                           postdec2	equ	0xFDD
  7223                           plusw2	equ	0xFDB
  7224                           fsr2h	equ	0xFDA
  7225                           fsr2l	equ	0xFD9
  7226                           status	equ	0xFD8
  7227                           
  7228 ;; *************** function _rtcc_increment_day *****************
  7229 ;; Defined at:
  7230 ;;		line 226 in file "rtcc.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;		None
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  day             1    8[BANK0 ] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;Total ram usage:        1 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:   12
  7251 ;; This function calls:
  7252 ;;		__number_of_days
  7253 ;;		__rtcc_increment_bcd
  7254 ;;		_rtcc_get_day
  7255 ;;		_rtcc_set_day
  7256 ;; This function is called by:
  7257 ;;		__ui_encoder
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text15
  7262  013BA0                     __ptext15:
  7263                           	opt stack 0
  7264  013BA0                     _rtcc_increment_day:
  7265                           	opt stack 16
  7266                           
  7267                           ;rtcc.c: 228: uint8_t day = rtcc_get_day();
  7268                           
  7269                           ;incstack = 0
  7270  013BA0  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
  7271  013BA4  0100               	movlb	0	; () banked
  7272  013BA6  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;rtcc.c: 229: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7276  013BA8  0E01               	movlw	1
  7277  013BAA  0100               	movlb	0	; () banked
  7278  013BAC  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7279  013BAE  EC55  F091         	call	__number_of_days	;wreg free
  7280  013BB2  0100               	movlb	0	; () banked
  7281  013BB4  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7282  013BB6  0100               	movlb	0	; () banked
  7283  013BB8  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7284  013BBA  EC50  F09B         	call	__rtcc_increment_bcd
  7285  013BBE  0100               	movlb	0	; () banked
  7286  013BC0  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;rtcc.c: 230: rtcc_set_day(day);
  7290  013BC2  0100               	movlb	0	; () banked
  7291  013BC4  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7292  013BC6  EC4D  F0A0         	call	_rtcc_set_day
  7293  013BCA  0012               	return		;funcret
  7294  013BCC                     __end_of_rtcc_increment_day:
  7295                           	opt stack 0
  7296                           tblptru	equ	0xFF8
  7297                           tblptrh	equ	0xFF7
  7298                           tblptrl	equ	0xFF6
  7299                           tablat	equ	0xFF5
  7300                           intcon3	equ	0xFF0
  7301                           postinc0	equ	0xFEE
  7302                           wreg	equ	0xFE8
  7303                           postdec1	equ	0xFE5
  7304                           plusw1	equ	0xFE3
  7305                           fsr1h	equ	0xFE2
  7306                           fsr1l	equ	0xFE1
  7307                           postinc2	equ	0xFDE
  7308                           postdec2	equ	0xFDD
  7309                           plusw2	equ	0xFDB
  7310                           fsr2h	equ	0xFDA
  7311                           fsr2l	equ	0xFD9
  7312                           status	equ	0xFD8
  7313                           
  7314 ;; *************** function __rtcc_increment_bcd *****************
  7315 ;; Defined at:
  7316 ;;		line 34 in file "rtcc.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  value           1    wreg     unsigned char 
  7319 ;;  min             1    4[BANK0 ] unsigned char 
  7320 ;;  max             1    5[BANK0 ] unsigned char 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  value           1    7[BANK0 ] unsigned char 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      unsigned char 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;Total ram usage:        4 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:   10
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_rtcc_increment_year
  7343 ;;		_rtcc_increment_month
  7344 ;;		_rtcc_increment_day
  7345 ;;		_rtcc_increment_hours
  7346 ;;		_rtcc_increment_minutes
  7347 ;;		_rtcc_increment_seconds
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text16
  7352  0136A0                     __ptext16:
  7353                           	opt stack 0
  7354  0136A0                     __rtcc_increment_bcd:
  7355                           	opt stack 17
  7356                           
  7357                           ;incstack = 0
  7358                           ;__rtcc_increment_bcd@value stored from wreg
  7359  0136A0  0100               	movlb	0	; () banked
  7360  0136A2  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7361                           
  7362                           ;rtcc.c: 36: if(value==max)
  7363  0136A4  0100               	movlb	0	; () banked
  7364  0136A6  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7365  0136A8  0100               	movlb	0	; () banked
  7366  0136AA  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7367  0136AC  A4D8               	btfss	status,2,c
  7368  0136AE  D003               	goto	l13079
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;rtcc.c: 37: return min;
  7372  0136B0  0100               	movlb	0	; () banked
  7373  0136B2  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7374  0136B4  0012               	return	
  7375  0136B6                     l13079:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;rtcc.c: 38: ++value;
  7379  0136B6  0100               	movlb	0	; () banked
  7380  0136B8  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7381                           
  7382                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7383  0136BA  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7384  0136BE  0E0F               	movlw	15
  7385  0136C0  0100               	movlb	0	; () banked
  7386  0136C2  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7387  0136C4  0E09               	movlw	9
  7388  0136C6  0100               	movlb	0	; () banked
  7389  0136C8  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7390  0136CA  D006               	goto	l13083
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;rtcc.c: 40: {
  7394                           ;rtcc.c: 41: value += 0x10;
  7395  0136CC  0E10               	movlw	16
  7396  0136CE  0100               	movlb	0	; () banked
  7397  0136D0  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7398                           
  7399                           ;rtcc.c: 42: value &= 0xF0;
  7400  0136D2  0EF0               	movlw	240
  7401  0136D4  0100               	movlb	0	; () banked
  7402  0136D6  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7403  0136D8                     l13083:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;rtcc.c: 43: }
  7407                           ;rtcc.c: 44: return value;
  7408  0136D8  0100               	movlb	0	; () banked
  7409  0136DA  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7410  0136DC  0012               	return	
  7411  0136DE                     __end_of__rtcc_increment_bcd:
  7412                           	opt stack 0
  7413                           tblptru	equ	0xFF8
  7414                           tblptrh	equ	0xFF7
  7415                           tblptrl	equ	0xFF6
  7416                           tablat	equ	0xFF5
  7417                           intcon3	equ	0xFF0
  7418                           postinc0	equ	0xFEE
  7419                           wreg	equ	0xFE8
  7420                           postdec1	equ	0xFE5
  7421                           plusw1	equ	0xFE3
  7422                           fsr1h	equ	0xFE2
  7423                           fsr1l	equ	0xFE1
  7424                           postinc2	equ	0xFDE
  7425                           postdec2	equ	0xFDD
  7426                           plusw2	equ	0xFDB
  7427                           fsr2h	equ	0xFDA
  7428                           fsr2l	equ	0xFD9
  7429                           status	equ	0xFD8
  7430                           
  7431 ;; *************** function _rtcc_decrement_year *****************
  7432 ;; Defined at:
  7433 ;;		line 157 in file "rtcc.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  year            1    8[BANK0 ] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7451 ;;Total ram usage:        1 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:   12
  7454 ;; This function calls:
  7455 ;;		__rtcc_decrement_bcd
  7456 ;;		_rtcc_get_year
  7457 ;;		_rtcc_set_year
  7458 ;; This function is called by:
  7459 ;;		__ui_encoder
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text17
  7464  013D22                     __ptext17:
  7465                           	opt stack 0
  7466  013D22                     _rtcc_decrement_year:
  7467                           	opt stack 16
  7468                           
  7469                           ;rtcc.c: 159: uint8_t year = rtcc_get_year();
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;incstack = 0
  7473  013D22  ECA7  F0A0         	call	_rtcc_get_year	;wreg free
  7474  013D26  0100               	movlb	0	; () banked
  7475  013D28  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;rtcc.c: 160: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  7479  013D2A  0E00               	movlw	0
  7480  013D2C  0100               	movlb	0	; () banked
  7481  013D2E  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7482  013D30  0E99               	movlw	153
  7483  013D32  0100               	movlb	0	; () banked
  7484  013D34  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7485  013D36  0100               	movlb	0	; () banked
  7486  013D38  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7487  013D3A  EC6F  F09B         	call	__rtcc_decrement_bcd
  7488  013D3E  0100               	movlb	0	; () banked
  7489  013D40  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;rtcc.c: 161: rtcc_set_year(year);
  7493  013D42  0100               	movlb	0	; () banked
  7494  013D44  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7495  013D46  EC0C  F0A0         	call	_rtcc_set_year
  7496  013D4A  0012               	return		;funcret
  7497  013D4C                     __end_of_rtcc_decrement_year:
  7498                           	opt stack 0
  7499                           tblptru	equ	0xFF8
  7500                           tblptrh	equ	0xFF7
  7501                           tblptrl	equ	0xFF6
  7502                           tablat	equ	0xFF5
  7503                           intcon3	equ	0xFF0
  7504                           postinc0	equ	0xFEE
  7505                           wreg	equ	0xFE8
  7506                           postdec1	equ	0xFE5
  7507                           plusw1	equ	0xFE3
  7508                           fsr1h	equ	0xFE2
  7509                           fsr1l	equ	0xFE1
  7510                           postinc2	equ	0xFDE
  7511                           postdec2	equ	0xFDD
  7512                           plusw2	equ	0xFDB
  7513                           fsr2h	equ	0xFDA
  7514                           fsr2l	equ	0xFD9
  7515                           status	equ	0xFD8
  7516                           
  7517 ;; *************** function _rtcc_decrement_seconds *****************
  7518 ;; Defined at:
  7519 ;;		line 347 in file "rtcc.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  seconds         1    8[BANK0 ] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7536 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;Total ram usage:        1 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:   12
  7540 ;; This function calls:
  7541 ;;		__rtcc_decrement_bcd
  7542 ;;		_rtcc_get_seconds
  7543 ;;		_rtcc_set_seconds
  7544 ;; This function is called by:
  7545 ;;		__ui_encoder
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           	psect	text18
  7550  013D4C                     __ptext18:
  7551                           	opt stack 0
  7552  013D4C                     _rtcc_decrement_seconds:
  7553                           	opt stack 16
  7554                           
  7555                           ;rtcc.c: 349: uint8_t seconds = rtcc_get_seconds();
  7556                           
  7557                           ;incstack = 0
  7558  013D4C  ECB1  F0A0         	call	_rtcc_get_seconds	;wreg free
  7559  013D50  0100               	movlb	0	; () banked
  7560  013D52  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;rtcc.c: 350: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  7564  013D54  0E00               	movlw	0
  7565  013D56  0100               	movlb	0	; () banked
  7566  013D58  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7567  013D5A  0E59               	movlw	89
  7568  013D5C  0100               	movlb	0	; () banked
  7569  013D5E  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7570  013D60  0100               	movlb	0	; () banked
  7571  013D62  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7572  013D64  EC6F  F09B         	call	__rtcc_decrement_bcd
  7573  013D68  0100               	movlb	0	; () banked
  7574  013D6A  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;rtcc.c: 351: rtcc_set_seconds(seconds);
  7578  013D6C  0100               	movlb	0	; () banked
  7579  013D6E  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7580  013D70  EC19  F0A0         	call	_rtcc_set_seconds
  7581  013D74  0012               	return		;funcret
  7582  013D76                     __end_of_rtcc_decrement_seconds:
  7583                           	opt stack 0
  7584                           tblptru	equ	0xFF8
  7585                           tblptrh	equ	0xFF7
  7586                           tblptrl	equ	0xFF6
  7587                           tablat	equ	0xFF5
  7588                           intcon3	equ	0xFF0
  7589                           postinc0	equ	0xFEE
  7590                           wreg	equ	0xFE8
  7591                           postdec1	equ	0xFE5
  7592                           plusw1	equ	0xFE3
  7593                           fsr1h	equ	0xFE2
  7594                           fsr1l	equ	0xFE1
  7595                           postinc2	equ	0xFDE
  7596                           postdec2	equ	0xFDD
  7597                           plusw2	equ	0xFDB
  7598                           fsr2h	equ	0xFDA
  7599                           fsr2l	equ	0xFD9
  7600                           status	equ	0xFD8
  7601                           
  7602 ;; *************** function _rtcc_decrement_month *****************
  7603 ;; Defined at:
  7604 ;;		line 195 in file "rtcc.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  month           1    8[BANK0 ] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7622 ;;Total ram usage:        1 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:   12
  7625 ;; This function calls:
  7626 ;;		__rtcc_decrement_bcd
  7627 ;;		_rtcc_get_month
  7628 ;;		_rtcc_set_month
  7629 ;; This function is called by:
  7630 ;;		__ui_encoder
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text19
  7635  013D76                     __ptext19:
  7636                           	opt stack 0
  7637  013D76                     _rtcc_decrement_month:
  7638                           	opt stack 16
  7639                           
  7640                           ;rtcc.c: 197: uint8_t month = rtcc_get_month();
  7641                           
  7642                           ;incstack = 0
  7643  013D76  ECBB  F0A0         	call	_rtcc_get_month	;wreg free
  7644  013D7A  0100               	movlb	0	; () banked
  7645  013D7C  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;rtcc.c: 198: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  7649  013D7E  0E01               	movlw	1
  7650  013D80  0100               	movlb	0	; () banked
  7651  013D82  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7652  013D84  0E12               	movlw	18
  7653  013D86  0100               	movlb	0	; () banked
  7654  013D88  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7655  013D8A  0100               	movlb	0	; () banked
  7656  013D8C  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7657  013D8E  EC6F  F09B         	call	__rtcc_decrement_bcd
  7658  013D92  0100               	movlb	0	; () banked
  7659  013D94  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;rtcc.c: 199: rtcc_set_month(month);
  7663  013D96  0100               	movlb	0	; () banked
  7664  013D98  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7665  013D9A  EC26  F0A0         	call	_rtcc_set_month
  7666  013D9E  0012               	return		;funcret
  7667  013DA0                     __end_of_rtcc_decrement_month:
  7668                           	opt stack 0
  7669                           tblptru	equ	0xFF8
  7670                           tblptrh	equ	0xFF7
  7671                           tblptrl	equ	0xFF6
  7672                           tablat	equ	0xFF5
  7673                           intcon3	equ	0xFF0
  7674                           postinc0	equ	0xFEE
  7675                           wreg	equ	0xFE8
  7676                           postdec1	equ	0xFE5
  7677                           plusw1	equ	0xFE3
  7678                           fsr1h	equ	0xFE2
  7679                           fsr1l	equ	0xFE1
  7680                           postinc2	equ	0xFDE
  7681                           postdec2	equ	0xFDD
  7682                           plusw2	equ	0xFDB
  7683                           fsr2h	equ	0xFDA
  7684                           fsr2l	equ	0xFD9
  7685                           status	equ	0xFD8
  7686                           
  7687 ;; *************** function _rtcc_decrement_minutes *****************
  7688 ;; Defined at:
  7689 ;;		line 309 in file "rtcc.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;		None
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  minutes         1    8[BANK0 ] unsigned char 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, status,0, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7706 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7707 ;;Total ram usage:        1 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:   12
  7710 ;; This function calls:
  7711 ;;		__rtcc_decrement_bcd
  7712 ;;		_rtcc_get_minutes
  7713 ;;		_rtcc_set_minutes
  7714 ;; This function is called by:
  7715 ;;		__ui_encoder
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text20
  7720  013DA0                     __ptext20:
  7721                           	opt stack 0
  7722  013DA0                     _rtcc_decrement_minutes:
  7723                           	opt stack 16
  7724                           
  7725                           ;rtcc.c: 311: uint8_t minutes = rtcc_get_minutes();
  7726                           
  7727                           ;incstack = 0
  7728  013DA0  ECC5  F0A0         	call	_rtcc_get_minutes	;wreg free
  7729  013DA4  0100               	movlb	0	; () banked
  7730  013DA6  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;rtcc.c: 312: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  7734  013DA8  0E00               	movlw	0
  7735  013DAA  0100               	movlb	0	; () banked
  7736  013DAC  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7737  013DAE  0E59               	movlw	89
  7738  013DB0  0100               	movlb	0	; () banked
  7739  013DB2  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7740  013DB4  0100               	movlb	0	; () banked
  7741  013DB6  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7742  013DB8  EC6F  F09B         	call	__rtcc_decrement_bcd
  7743  013DBC  0100               	movlb	0	; () banked
  7744  013DBE  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;rtcc.c: 313: rtcc_set_minutes(minutes);
  7748  013DC0  0100               	movlb	0	; () banked
  7749  013DC2  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7750  013DC4  EC33  F0A0         	call	_rtcc_set_minutes
  7751  013DC8  0012               	return		;funcret
  7752  013DCA                     __end_of_rtcc_decrement_minutes:
  7753                           	opt stack 0
  7754                           tblptru	equ	0xFF8
  7755                           tblptrh	equ	0xFF7
  7756                           tblptrl	equ	0xFF6
  7757                           tablat	equ	0xFF5
  7758                           intcon3	equ	0xFF0
  7759                           postinc0	equ	0xFEE
  7760                           wreg	equ	0xFE8
  7761                           postdec1	equ	0xFE5
  7762                           plusw1	equ	0xFE3
  7763                           fsr1h	equ	0xFE2
  7764                           fsr1l	equ	0xFE1
  7765                           postinc2	equ	0xFDE
  7766                           postdec2	equ	0xFDD
  7767                           plusw2	equ	0xFDB
  7768                           fsr2h	equ	0xFDA
  7769                           fsr2l	equ	0xFD9
  7770                           status	equ	0xFD8
  7771                           
  7772 ;; *************** function _rtcc_decrement_hours *****************
  7773 ;; Defined at:
  7774 ;;		line 271 in file "rtcc.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  hours           1    8[BANK0 ] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;Total ram usage:        1 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:   12
  7795 ;; This function calls:
  7796 ;;		__rtcc_decrement_bcd
  7797 ;;		_rtcc_get_hours
  7798 ;;		_rtcc_set_hours
  7799 ;; This function is called by:
  7800 ;;		__ui_encoder
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text21
  7805  013DCA                     __ptext21:
  7806                           	opt stack 0
  7807  013DCA                     _rtcc_decrement_hours:
  7808                           	opt stack 16
  7809                           
  7810                           ;rtcc.c: 273: uint8_t hours = rtcc_get_hours();
  7811                           
  7812                           ;incstack = 0
  7813  013DCA  ECCF  F0A0         	call	_rtcc_get_hours	;wreg free
  7814  013DCE  0100               	movlb	0	; () banked
  7815  013DD0  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;rtcc.c: 274: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  7819  013DD2  0E00               	movlw	0
  7820  013DD4  0100               	movlb	0	; () banked
  7821  013DD6  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7822  013DD8  0E23               	movlw	35
  7823  013DDA  0100               	movlb	0	; () banked
  7824  013DDC  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7825  013DDE  0100               	movlb	0	; () banked
  7826  013DE0  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7827  013DE2  EC6F  F09B         	call	__rtcc_decrement_bcd
  7828  013DE6  0100               	movlb	0	; () banked
  7829  013DE8  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;rtcc.c: 275: rtcc_set_hours(hours);
  7833  013DEA  0100               	movlb	0	; () banked
  7834  013DEC  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7835  013DEE  EC40  F0A0         	call	_rtcc_set_hours
  7836  013DF2  0012               	return		;funcret
  7837  013DF4                     __end_of_rtcc_decrement_hours:
  7838                           	opt stack 0
  7839                           tblptru	equ	0xFF8
  7840                           tblptrh	equ	0xFF7
  7841                           tblptrl	equ	0xFF6
  7842                           tablat	equ	0xFF5
  7843                           intcon3	equ	0xFF0
  7844                           postinc0	equ	0xFEE
  7845                           wreg	equ	0xFE8
  7846                           postdec1	equ	0xFE5
  7847                           plusw1	equ	0xFE3
  7848                           fsr1h	equ	0xFE2
  7849                           fsr1l	equ	0xFE1
  7850                           postinc2	equ	0xFDE
  7851                           postdec2	equ	0xFDD
  7852                           plusw2	equ	0xFDB
  7853                           fsr2h	equ	0xFDA
  7854                           fsr2l	equ	0xFD9
  7855                           status	equ	0xFD8
  7856                           
  7857 ;; *************** function _rtcc_decrement_day *****************
  7858 ;; Defined at:
  7859 ;;		line 233 in file "rtcc.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;		None
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  day             1    8[BANK0 ] unsigned char 
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      void 
  7866 ;; Registers used:
  7867 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;Total ram usage:        1 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:   12
  7880 ;; This function calls:
  7881 ;;		__number_of_days
  7882 ;;		__rtcc_decrement_bcd
  7883 ;;		_rtcc_get_day
  7884 ;;		_rtcc_set_day
  7885 ;; This function is called by:
  7886 ;;		__ui_encoder
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text22
  7891  013BCC                     __ptext22:
  7892                           	opt stack 0
  7893  013BCC                     _rtcc_decrement_day:
  7894                           	opt stack 16
  7895                           
  7896                           ;rtcc.c: 235: uint8_t day = rtcc_get_day();
  7897                           
  7898                           ;incstack = 0
  7899  013BCC  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
  7900  013BD0  0100               	movlb	0	; () banked
  7901  013BD2  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;rtcc.c: 236: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  7905  013BD4  0E01               	movlw	1
  7906  013BD6  0100               	movlb	0	; () banked
  7907  013BD8  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7908  013BDA  EC55  F091         	call	__number_of_days	;wreg free
  7909  013BDE  0100               	movlb	0	; () banked
  7910  013BE0  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7911  013BE2  0100               	movlb	0	; () banked
  7912  013BE4  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7913  013BE6  EC6F  F09B         	call	__rtcc_decrement_bcd
  7914  013BEA  0100               	movlb	0	; () banked
  7915  013BEC  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;rtcc.c: 237: rtcc_set_day(day);
  7919  013BEE  0100               	movlb	0	; () banked
  7920  013BF0  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7921  013BF2  EC4D  F0A0         	call	_rtcc_set_day
  7922  013BF6  0012               	return		;funcret
  7923  013BF8                     __end_of_rtcc_decrement_day:
  7924                           	opt stack 0
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           intcon3	equ	0xFF0
  7930                           postinc0	equ	0xFEE
  7931                           wreg	equ	0xFE8
  7932                           postdec1	equ	0xFE5
  7933                           plusw1	equ	0xFE3
  7934                           fsr1h	equ	0xFE2
  7935                           fsr1l	equ	0xFE1
  7936                           postinc2	equ	0xFDE
  7937                           postdec2	equ	0xFDD
  7938                           plusw2	equ	0xFDB
  7939                           fsr2h	equ	0xFDA
  7940                           fsr2l	equ	0xFD9
  7941                           status	equ	0xFD8
  7942                           
  7943 ;; *************** function __rtcc_decrement_bcd *****************
  7944 ;; Defined at:
  7945 ;;		line 47 in file "rtcc.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  value           1    wreg     unsigned char 
  7948 ;;  min             1    4[BANK0 ] unsigned char 
  7949 ;;  max             1    5[BANK0 ] unsigned char 
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;  value           1    7[BANK0 ] unsigned char 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      unsigned char 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2, status,0
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7961 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;Total ram usage:        4 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:   10
  7968 ;; This function calls:
  7969 ;;		Nothing
  7970 ;; This function is called by:
  7971 ;;		_rtcc_decrement_year
  7972 ;;		_rtcc_decrement_month
  7973 ;;		_rtcc_decrement_day
  7974 ;;		_rtcc_decrement_hours
  7975 ;;		_rtcc_decrement_minutes
  7976 ;;		_rtcc_decrement_seconds
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text23
  7981  0136DE                     __ptext23:
  7982                           	opt stack 0
  7983  0136DE                     __rtcc_decrement_bcd:
  7984                           	opt stack 17
  7985                           
  7986                           ;incstack = 0
  7987                           ;__rtcc_decrement_bcd@value stored from wreg
  7988  0136DE  0100               	movlb	0	; () banked
  7989  0136E0  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  7990                           
  7991                           ;rtcc.c: 49: if(value==min)
  7992  0136E2  0100               	movlb	0	; () banked
  7993  0136E4  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  7994  0136E6  0100               	movlb	0	; () banked
  7995  0136E8  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  7996  0136EA  A4D8               	btfss	status,2,c
  7997  0136EC  D003               	goto	l13091
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;rtcc.c: 50: return max;
  8001  0136EE  0100               	movlb	0	; () banked
  8002  0136F0  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  8003  0136F2  0012               	return	
  8004  0136F4                     l13091:
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;rtcc.c: 51: --value;
  8008  0136F4  0100               	movlb	0	; () banked
  8009  0136F6  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  8010                           
  8011                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  8012  0136F8  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  8013  0136FC  0E0F               	movlw	15
  8014  0136FE  0100               	movlb	0	; () banked
  8015  013700  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  8016  013702  0E09               	movlw	9
  8017  013704  0100               	movlb	0	; () banked
  8018  013706  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  8019  013708  D006               	goto	l13095
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;rtcc.c: 53: {
  8023                           ;rtcc.c: 54: value &= 0xF0;
  8024  01370A  0EF0               	movlw	240
  8025  01370C  0100               	movlb	0	; () banked
  8026  01370E  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8027                           
  8028                           ;rtcc.c: 55: value |= 0x09;
  8029  013710  0E09               	movlw	9
  8030  013712  0100               	movlb	0	; () banked
  8031  013714  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8032  013716                     l13095:
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;rtcc.c: 56: }
  8036                           ;rtcc.c: 57: return value;
  8037  013716  0100               	movlb	0	; () banked
  8038  013718  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  8039  01371A  0012               	return	
  8040  01371C                     __end_of__rtcc_decrement_bcd:
  8041                           	opt stack 0
  8042                           tblptru	equ	0xFF8
  8043                           tblptrh	equ	0xFF7
  8044                           tblptrl	equ	0xFF6
  8045                           tablat	equ	0xFF5
  8046                           intcon3	equ	0xFF0
  8047                           postinc0	equ	0xFEE
  8048                           wreg	equ	0xFE8
  8049                           postdec1	equ	0xFE5
  8050                           plusw1	equ	0xFE3
  8051                           fsr1h	equ	0xFE2
  8052                           fsr1l	equ	0xFE1
  8053                           postinc2	equ	0xFDE
  8054                           postdec2	equ	0xFDD
  8055                           plusw2	equ	0xFDB
  8056                           fsr2h	equ	0xFDA
  8057                           fsr2l	equ	0xFD9
  8058                           status	equ	0xFD8
  8059                           
  8060 ;; *************** function _system_init *****************
  8061 ;; Defined at:
  8062 ;;		line 250 in file "os.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  8067 ;;  temp           50    0        unsigned char [50]
  8068 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  8069 ;;  filename        9  104[BANK1 ] unsigned char [9]
  8070 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  8071 ;;  extension       4  122[BANK1 ] unsigned char [4]
  8072 ;;  file_number     1    0        unsigned char 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8085 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;Total ram usage:      130 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:   16
  8089 ;; This function calls:
  8090 ;;		__system_encoder_init
  8091 ;;		__system_timer0_init
  8092 ;;		_adc_init
  8093 ;;		_buck_init
  8094 ;;		_flash_init
  8095 ;;		_i2c_eeprom_read_calibration
  8096 ;;		_i2c_init
  8097 ;;		_log_start_new
  8098 ;;		_rtcc_init
  8099 ;;		_ui_init
  8100 ;; This function is called by:
  8101 ;;		_main
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text24
  8106  00F6F2                     __ptext24:
  8107                           	opt stack 0
  8108  00F6F2                     _system_init:
  8109                           	opt stack 14
  8110                           
  8111                           ;os.c: 252: char filename[9] = "TEST    ";
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;incstack = 0
  8115  00F6F2  EE22  F0D8         	lfsr	2,system_init@F8573
  8116  00F6F6  EE11  F068         	lfsr	1,system_init@filename
  8117  00F6FA  0E08               	movlw	8
  8118  00F6FC                     u22141:
  8119  00F6FC  CFDB FFE3          	movff	plusw2,plusw1
  8120  00F700  06E8               	decf	wreg,f,c
  8121  00F702  E2FC               	bc	u22141
  8122                           
  8123                           ;os.c: 253: char extension[4] = "TXT";
  8124  00F704  C2E5  F17A         	movff	system_init@F8575,system_init@extension
  8125  00F708  C2E6  F17B         	movff	system_init@F8575+1,system_init@extension+1
  8126  00F70C  C2E7  F17C         	movff	system_init@F8575+2,system_init@extension+2
  8127  00F710  C2E8  F17D         	movff	system_init@F8575+3,system_init@extension+3
  8128                           
  8129                           ;os.c: 254: char filename2[9] = "NEWFILE ";
  8130  00F714  EE23  F0F6         	lfsr	2,system_init@F8577
  8131  00F718  EE11  F071         	lfsr	1,system_init@filename2
  8132  00F71C  0E08               	movlw	8
  8133  00F71E                     u22151:
  8134  00F71E  CFDB FFE3          	movff	plusw2,plusw1
  8135  00F722  06E8               	decf	wreg,f,c
  8136  00F724  E2FC               	bc	u22151
  8137                           
  8138                           ;os.c: 255: char extension2[4] = "TXT";
  8139  00F726  C2E1  F17E         	movff	system_init@F8579,system_init@extension2
  8140  00F72A  C2E2  F17F         	movff	system_init@F8579+1,system_init@extension2+1
  8141  00F72E  C2E3  F180         	movff	system_init@F8579+2,system_init@extension2+2
  8142  00F732  C2E4  F181         	movff	system_init@F8579+3,system_init@extension2+3
  8143                           
  8144                           ;os.c: 256: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  8145  00F736  EE24  F000         	lfsr	2,system_init@F8581
  8146  00F73A  EE11  F000         	lfsr	1,system_init@appendtext
  8147  00F73E  0E67               	movlw	103
  8148  00F740                     u22161:
  8149  00F740  CFDB FFE3          	movff	plusw2,plusw1
  8150  00F744  06E8               	decf	wreg,f,c
  8151  00F746  E2FC               	bc	u22161
  8152                           
  8153                           ;os.c: 257: uint8_t file_number;
  8154                           ;os.c: 258: uint8_t temp[50];
  8155                           ;os.c: 261: TRISCbits.TRISC2 = 0;
  8156  00F748  9494               	bcf	3988,2,c	;volatile
  8157                           
  8158                           ;os.c: 262: TRISDbits.TRISD0 = 0;
  8159  00F74A  9095               	bcf	3989,0,c	;volatile
  8160                           
  8161                           ;os.c: 264: TRISDbits.TRISD3 = 0;
  8162  00F74C  9695               	bcf	3989,3,c	;volatile
  8163                           
  8164                           ;os.c: 265: LATDbits.LD3 = 0;
  8165  00F74E  968C               	bcf	3980,3,c	;volatile
  8166                           
  8167                           ;os.c: 268: LATDbits.LD1 = 0;
  8168  00F750  928C               	bcf	3980,1,c	;volatile
  8169                           
  8170                           ;os.c: 269: TRISDbits.TRISD1 = 0;
  8171  00F752  9295               	bcf	3989,1,c	;volatile
  8172                           
  8173                           ;os.c: 272: LATBbits.LB1 = 0;
  8174  00F754  928A               	bcf	3978,1,c	;volatile
  8175                           
  8176                           ;os.c: 273: TRISBbits.TRISB1 = 0;
  8177  00F756  9293               	bcf	3987,1,c	;volatile
  8178                           
  8179                           ;os.c: 274: LATBbits.LB2 = 0;
  8180  00F758  948A               	bcf	3978,2,c	;volatile
  8181                           
  8182                           ;os.c: 275: TRISBbits.TRISB2 = 0;
  8183  00F75A  9493               	bcf	3987,2,c	;volatile
  8184                           
  8185                           ;os.c: 276: LATBbits.LB3 = 0;
  8186  00F75C  968A               	bcf	3978,3,c	;volatile
  8187                           
  8188                           ;os.c: 277: TRISBbits.TRISB3 = 0;
  8189  00F75E  9693               	bcf	3987,3,c	;volatile
  8190                           
  8191                           ;os.c: 281: TRISDbits.TRISD6 = 1;
  8192  00F760  8C95               	bsf	3989,6,c	;volatile
  8193                           
  8194                           ;os.c: 282: TRISDbits.TRISD4 = 0;
  8195  00F762  9895               	bcf	3989,4,c	;volatile
  8196                           
  8197                           ;os.c: 283: TRISDbits.TRISD5 = 0;
  8198  00F764  9A95               	bcf	3989,5,c	;volatile
  8199                           
  8200                           ;os.c: 284: TRISDbits.TRISD7 = 0;
  8201  00F766  9E95               	bcf	3989,7,c	;volatile
  8202                           
  8203                           ;os.c: 285: LATDbits.LD7 = 1;
  8204  00F768  8E8C               	bsf	3980,7,c	;volatile
  8205                           
  8206                           ;os.c: 288: TRISAbits.TRISA3 = 1;
  8207  00F76A  8692               	bsf	3986,3,c	;volatile
  8208                           
  8209                           ;os.c: 289: ANCON0bits.PCFG3 = 0;
  8210  00F76C  010F               	movlb	15	; () banked
  8211  00F76E  9748               	bcf	72,3,b	;volatile
  8212                           
  8213                           ; BSR set to: 15
  8214                           ;os.c: 290: TRISBbits.TRISB0 = 1;
  8215  00F770  8093               	bsf	3987,0,c	;volatile
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;os.c: 291: ANCON1bits.PCFG12 = 0;
  8219  00F772  010F               	movlb	15	; () banked
  8220  00F774  9949               	bcf	73,4,b	;volatile
  8221                           
  8222                           ; BSR set to: 15
  8223                           ;os.c: 292: TRISAbits.TRISA1 = 1;
  8224  00F776  8292               	bsf	3986,1,c	;volatile
  8225                           
  8226                           ; BSR set to: 15
  8227                           ;os.c: 293: ANCON0bits.PCFG1 = 0;
  8228  00F778  010F               	movlb	15	; () banked
  8229  00F77A  9348               	bcf	72,1,b	;volatile
  8230                           
  8231                           ; BSR set to: 15
  8232                           ;os.c: 294: TRISAbits.TRISA2 = 1;
  8233  00F77C  8492               	bsf	3986,2,c	;volatile
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;os.c: 295: ANCON0bits.PCFG2 = 0;
  8237  00F77E  010F               	movlb	15	; () banked
  8238  00F780  9548               	bcf	72,2,b	;volatile
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;os.c: 298: LATCbits.LC7 = 0;
  8242  00F782  9E8B               	bcf	3979,7,c	;volatile
  8243                           
  8244                           ; BSR set to: 15
  8245                           ;os.c: 299: TRISCbits.TRISC7 = 0;
  8246  00F784  9E94               	bcf	3988,7,c	;volatile
  8247                           
  8248                           ; BSR set to: 15
  8249                           ;os.c: 300: LATEbits.LE2 = 1;
  8250  00F786  848D               	bsf	3981,2,c	;volatile
  8251                           
  8252                           ; BSR set to: 15
  8253                           ;os.c: 301: TRISEbits.TRISE2 = 0;
  8254  00F788  9496               	bcf	3990,2,c	;volatile
  8255                           
  8256                           ; BSR set to: 15
  8257                           ;os.c: 302: LATEbits.LE1 = 1;
  8258  00F78A  828D               	bsf	3981,1,c	;volatile
  8259                           
  8260                           ; BSR set to: 15
  8261                           ;os.c: 303: TRISEbits.TRISE1 = 0;
  8262  00F78C  9296               	bcf	3990,1,c	;volatile
  8263                           
  8264                           ; BSR set to: 15
  8265                           ;os.c: 304: LATEbits.LE0 = 1;
  8266  00F78E  808D               	bsf	3981,0,c	;volatile
  8267                           
  8268                           ; BSR set to: 15
  8269                           ;os.c: 305: TRISEbits.TRISE0 = 0;
  8270  00F790  9096               	bcf	3990,0,c	;volatile
  8271                           
  8272                           ; BSR set to: 15
  8273                           ;os.c: 306: LATAbits.LA5 = 1;
  8274  00F792  8A89               	bsf	3977,5,c	;volatile
  8275                           
  8276                           ; BSR set to: 15
  8277                           ;os.c: 307: TRISAbits.TRISA5 = 0;
  8278  00F794  9A92               	bcf	3986,5,c	;volatile
  8279                           
  8280                           ; BSR set to: 15
  8281                           ;os.c: 309: TRISAbits.TRISA0 = 1;
  8282  00F796  8092               	bsf	3986,0,c	;volatile
  8283                           
  8284                           ; BSR set to: 15
  8285                           ;os.c: 310: ANCON0bits.PCFG0 = 1;
  8286  00F798  010F               	movlb	15	; () banked
  8287  00F79A  8148               	bsf	72,0,b	;volatile
  8288                           
  8289                           ; BSR set to: 15
  8290                           ;os.c: 311: TRISBbits.TRISB6 = 1;
  8291  00F79C  8C93               	bsf	3987,6,c	;volatile
  8292                           
  8293                           ; BSR set to: 15
  8294                           ;os.c: 312: TRISBbits.TRISB7 = 1;
  8295  00F79E  8E93               	bsf	3987,7,c	;volatile
  8296                           
  8297                           ; BSR set to: 15
  8298                           ;os.c: 333: os.clockFrequency = CPU_FREQUENCY_48MHz;
  8299  00F7A0  0E02               	movlw	2
  8300  00F7A2  0102               	movlb	2	; () banked
  8301  00F7A4  6F00               	movwf	_os& (0+255),b	;volatile
  8302                           
  8303                           ; BSR set to: 2
  8304                           ;os.c: 334: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  8305  00F7A6  0E01               	movlw	1
  8306  00F7A8  0102               	movlb	2	; () banked
  8307  00F7AA  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  8308                           
  8309                           ; BSR set to: 2
  8310                           ;os.c: 335: os.buckFrequency = BUCK_OFF;
  8311  00F7AC  0E00               	movlw	0
  8312  00F7AE  0102               	movlb	2	; () banked
  8313  00F7B0  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  8314                           
  8315                           ; BSR set to: 2
  8316                           ;os.c: 336: os.buckDutyCycle = 0;
  8317  00F7B2  0E00               	movlw	0
  8318  00F7B4  0102               	movlb	2	; () banked
  8319  00F7B6  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8320                           
  8321                           ; BSR set to: 2
  8322                           ;os.c: 337: os.buckLastStep = -1;
  8323  00F7B8  0102               	movlb	2	; () banked
  8324  00F7BA  6904               	setf	(_os+4)& (0+255),b	;volatile
  8325                           
  8326                           ; BSR set to: 2
  8327                           ;os.c: 338: os.display_mode = DISPLAY_MODE_OVERVIEW;
  8328  00F7BC  0E00               	movlw	0
  8329  00F7BE  0102               	movlb	2	; () banked
  8330  00F7C0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8331                           
  8332                           ; BSR set to: 2
  8333                           ;os.c: 341: os.output_voltage = 13000;
  8334  00F7C2  0E32               	movlw	50
  8335  00F7C4  0102               	movlb	2	; () banked
  8336  00F7C6  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8337  00F7C8  0EC8               	movlw	200
  8338  00F7CA  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8339                           
  8340                           ; BSR set to: 2
  8341                           ;os.c: 345: PIR1bits.TMR1IF = 0;
  8342  00F7CC  909E               	bcf	3998,0,c	;volatile
  8343                           
  8344                           ; BSR set to: 2
  8345                           ;os.c: 347: TMR1H = 0xFC;
  8346  00F7CE  0EFC               	movlw	252
  8347  00F7D0  6ECF               	movwf	4047,c	;volatile
  8348                           
  8349                           ; BSR set to: 2
  8350                           ;os.c: 348: TMR1L = 0x00;
  8351  00F7D2  0E00               	movlw	0
  8352  00F7D4  6ECE               	movwf	4046,c	;volatile
  8353                           
  8354                           ; BSR set to: 2
  8355                           ;os.c: 350: T1CONbits.TMR1ON = 1;
  8356  00F7D6  80CD               	bsf	4045,0,c	;volatile
  8357                           
  8358                           ; BSR set to: 2
  8359                           ;os.c: 352: T1CONbits.T1OSCEN = 1;
  8360  00F7D8  86CD               	bsf	4045,3,c	;volatile
  8361  00F7DA                     l1390:
  8362  00F7DA  A09E               	btfss	3998,0,c	;volatile
  8363  00F7DC  D7FE               	goto	l1390
  8364                           
  8365                           ;os.c: 356: T1CONbits.TMR1ON = 0;
  8366  00F7DE  90CD               	bcf	4045,0,c	;volatile
  8367                           
  8368                           ;os.c: 359: i2c_init();
  8369  00F7E0  EC39  F0A1         	call	_i2c_init	;wreg free
  8370                           
  8371                           ;os.c: 361: ui_init();
  8372  00F7E4  EC93  F0A0         	call	_ui_init	;wreg free
  8373                           
  8374                           ;os.c: 364: adc_init();
  8375  00F7E8  ECE3  F09F         	call	_adc_init	;wreg free
  8376                           
  8377                           ;os.c: 367: rtcc_init();
  8378  00F7EC  EC97  F09F         	call	_rtcc_init	;wreg free
  8379                           
  8380                           ;os.c: 370: i2c_eeprom_read_calibration();
  8381  00F7F0  EC3A  F074         	call	_i2c_eeprom_read_calibration	;wreg free
  8382                           
  8383                           ;os.c: 385: _system_timer0_init();
  8384  00F7F4  EC10  F09B         	call	__system_timer0_init	;wreg free
  8385                           
  8386                           ;os.c: 394: _system_encoder_init();
  8387  00F7F8  EC82  F09A         	call	__system_encoder_init	;wreg free
  8388                           
  8389                           ;os.c: 396: flash_init();
  8390  00F7FC  ECEA  F099         	call	_flash_init	;wreg free
  8391                           
  8392                           ;os.c: 430: buck_init();
  8393  00F800  EC32  F0A1         	call	_buck_init	;wreg free
  8394                           
  8395                           ;os.c: 433: log_start_new();
  8396  00F804  ECA1  F080         	call	_log_start_new	;wreg free
  8397  00F808  0012               	return		;funcret
  8398  00F80A                     __end_of_system_init:
  8399                           	opt stack 0
  8400                           tblptru	equ	0xFF8
  8401                           tblptrh	equ	0xFF7
  8402                           tblptrl	equ	0xFF6
  8403                           tablat	equ	0xFF5
  8404                           intcon3	equ	0xFF0
  8405                           postinc0	equ	0xFEE
  8406                           wreg	equ	0xFE8
  8407                           postdec1	equ	0xFE5
  8408                           plusw1	equ	0xFE3
  8409                           fsr1h	equ	0xFE2
  8410                           fsr1l	equ	0xFE1
  8411                           postinc2	equ	0xFDE
  8412                           postdec2	equ	0xFDD
  8413                           plusw2	equ	0xFDB
  8414                           fsr2h	equ	0xFDA
  8415                           fsr2l	equ	0xFD9
  8416                           status	equ	0xFD8
  8417                           
  8418 ;; *************** function _ui_init *****************
  8419 ;; Defined at:
  8420 ;;		line 325 in file "ui.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;		None
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      void 
  8427 ;; Registers used:
  8428 ;;		wreg, status,2
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;Total ram usage:        0 bytes
  8439 ;; Hardware stack levels used:    1
  8440 ;; Hardware stack levels required when called:   10
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_system_init
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text25
  8449  014126                     __ptext25:
  8450                           	opt stack 0
  8451  014126                     _ui_init:
  8452                           	opt stack 19
  8453                           
  8454                           ;ui.c: 327: system_ui_inactive_count = 0;
  8455                           
  8456                           ;incstack = 0
  8457  014126  0E00               	movlw	0
  8458  014128  0101               	movlb	1	; () banked
  8459  01412A  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8460  01412C  0E00               	movlw	0
  8461  01412E  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  8462                           
  8463                           ; BSR set to: 1
  8464                           ;ui.c: 329: LATCbits.LC2 = 1;
  8465  014130  848B               	bsf	3979,2,c	;volatile
  8466                           
  8467                           ;ui.c: 330: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8468  014132  0E01               	movlw	1
  8469  014134  0101               	movlb	1	; () banked
  8470  014136  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  8471                           
  8472                           ; BSR set to: 1
  8473  014138  0012               	return		;funcret
  8474  01413A                     __end_of_ui_init:
  8475                           	opt stack 0
  8476                           tblptru	equ	0xFF8
  8477                           tblptrh	equ	0xFF7
  8478                           tblptrl	equ	0xFF6
  8479                           tablat	equ	0xFF5
  8480                           intcon3	equ	0xFF0
  8481                           postinc0	equ	0xFEE
  8482                           wreg	equ	0xFE8
  8483                           postdec1	equ	0xFE5
  8484                           plusw1	equ	0xFE3
  8485                           fsr1h	equ	0xFE2
  8486                           fsr1l	equ	0xFE1
  8487                           postinc2	equ	0xFDE
  8488                           postdec2	equ	0xFDD
  8489                           plusw2	equ	0xFDB
  8490                           fsr2h	equ	0xFDA
  8491                           fsr2l	equ	0xFD9
  8492                           status	equ	0xFD8
  8493                           
  8494 ;; *************** function _rtcc_init *****************
  8495 ;; Defined at:
  8496 ;;		line 105 in file "rtcc.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;		None
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;		None
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  1    wreg      void 
  8503 ;; Registers used:
  8504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8514 ;;Total ram usage:        0 bytes
  8515 ;; Hardware stack levels used:    1
  8516 ;; Hardware stack levels required when called:   15
  8517 ;; This function calls:
  8518 ;;		_rtcc_read_eeprom
  8519 ;; This function is called by:
  8520 ;;		_system_init
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text26
  8525  013F2E                     __ptext26:
  8526                           	opt stack 0
  8527  013F2E                     _rtcc_init:
  8528                           	opt stack 14
  8529                           
  8530                           ;rtcc.c: 107: EECON2 = 0x55;
  8531                           
  8532                           ; BSR set to: 1
  8533                           ;incstack = 0
  8534  013F2E  0E55               	movlw	85
  8535  013F30  6EA7               	movwf	4007,c	;volatile
  8536                           
  8537                           ;rtcc.c: 108: EECON2 = 0xAA;
  8538  013F32  0EAA               	movlw	170
  8539  013F34  6EA7               	movwf	4007,c	;volatile
  8540                           
  8541                           ;rtcc.c: 109: RTCCFGbits.RTCWREN = 1;
  8542  013F36  010F               	movlb	15	; () banked
  8543  013F38  8B3F               	bsf	63,5,b	;volatile
  8544                           
  8545                           ; BSR set to: 15
  8546                           ;rtcc.c: 110: RTCCFGbits.RTCEN = 1;
  8547  013F3A  010F               	movlb	15	; () banked
  8548  013F3C  8F3F               	bsf	63,7,b	;volatile
  8549                           
  8550                           ; BSR set to: 15
  8551                           ;rtcc.c: 111: RTCCFGbits.RTCOE = 0;
  8552  013F3E  010F               	movlb	15	; () banked
  8553  013F40  953F               	bcf	63,2,b	;volatile
  8554                           
  8555                           ;rtcc.c: 112: RTCCAL = 0x00;
  8556  013F42  0E00               	movlw	0
  8557  013F44  010F               	movlb	15	; () banked
  8558  013F46  6F3E               	movwf	62,b	;volatile
  8559                           
  8560                           ; BSR set to: 15
  8561                           ;rtcc.c: 115: rtcc_read_eeprom();
  8562  013F48  EC03  F070         	call	_rtcc_read_eeprom	;wreg free
  8563  013F4C  0012               	return		;funcret
  8564  013F4E                     __end_of_rtcc_init:
  8565                           	opt stack 0
  8566                           tblptru	equ	0xFF8
  8567                           tblptrh	equ	0xFF7
  8568                           tblptrl	equ	0xFF6
  8569                           tablat	equ	0xFF5
  8570                           intcon3	equ	0xFF0
  8571                           postinc0	equ	0xFEE
  8572                           wreg	equ	0xFE8
  8573                           postdec1	equ	0xFE5
  8574                           plusw1	equ	0xFE3
  8575                           fsr1h	equ	0xFE2
  8576                           fsr1l	equ	0xFE1
  8577                           postinc2	equ	0xFDE
  8578                           postdec2	equ	0xFDD
  8579                           plusw2	equ	0xFDB
  8580                           fsr2h	equ	0xFDA
  8581                           fsr2l	equ	0xFD9
  8582                           status	equ	0xFD8
  8583                           
  8584 ;; *************** function _rtcc_read_eeprom *****************
  8585 ;; Defined at:
  8586 ;;		line 354 in file "rtcc.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;		None
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  date            6   44[BANK0 ] unsigned char [6]
  8591 ;;  buffer          1   50[BANK0 ] unsigned char 
  8592 ;;  error_found     1   43[BANK0 ] unsigned char 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8605 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8606 ;;Total ram usage:        8 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:   14
  8609 ;; This function calls:
  8610 ;;		__rtcc_verify_bcd
  8611 ;;		_i2c_eeprom_read
  8612 ;;		_rtcc_correct_day
  8613 ;;		_rtcc_get_day
  8614 ;;		_rtcc_set_day
  8615 ;;		_rtcc_set_hours
  8616 ;;		_rtcc_set_minutes
  8617 ;;		_rtcc_set_month
  8618 ;;		_rtcc_set_seconds
  8619 ;;		_rtcc_set_year
  8620 ;;		_rtcc_write_eeprom
  8621 ;; This function is called by:
  8622 ;;		_rtcc_init
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text27
  8627  00E006                     __ptext27:
  8628                           	opt stack 0
  8629  00E006                     _rtcc_read_eeprom:
  8630                           	opt stack 14
  8631                           
  8632                           ;rtcc.c: 356: uint8_t date[6];
  8633                           ;rtcc.c: 357: uint8_t buffer;
  8634                           ;rtcc.c: 358: uint8_t error_found = 0;
  8635                           
  8636                           ;incstack = 0
  8637  00E006  0E00               	movlw	0
  8638  00E008  0100               	movlb	0	; () banked
  8639  00E00A  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;rtcc.c: 361: i2c_eeprom_read(0x040, &date[0], 6);
  8643  00E00C  0E00               	movlw	0
  8644  00E00E  0100               	movlb	0	; () banked
  8645  00E010  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  8646  00E012  0E40               	movlw	64
  8647  00E014  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  8648  00E016  0E8C               	movlw	low rtcc_read_eeprom@date
  8649  00E018  0100               	movlb	0	; () banked
  8650  00E01A  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  8651  00E01C  0E00               	movlw	high rtcc_read_eeprom@date
  8652  00E01E  0100               	movlb	0	; () banked
  8653  00E020  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  8654  00E022  0E06               	movlw	6
  8655  00E024  0100               	movlb	0	; () banked
  8656  00E026  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  8657  00E028  EC5A  F096         	call	_i2c_eeprom_read	;wreg free
  8658                           
  8659                           ;rtcc.c: 367: buffer = _rtcc_verify_bcd(date[0], 0x00, 0x99);
  8660  00E02C  0E00               	movlw	0
  8661  00E02E  0100               	movlb	0	; () banked
  8662  00E030  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8663  00E032  0E99               	movlw	153
  8664  00E034  0100               	movlb	0	; () banked
  8665  00E036  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8666  00E038  0100               	movlb	0	; () banked
  8667  00E03A  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8668  00E03C  EC4F  F097         	call	__rtcc_verify_bcd
  8669  00E040  0100               	movlb	0	; () banked
  8670  00E042  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;rtcc.c: 368: if(buffer != date[0])
  8674  00E044  0100               	movlb	0	; () banked
  8675  00E046  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8676  00E048  0100               	movlb	0	; () banked
  8677  00E04A  198C               	xorwf	rtcc_read_eeprom@date& (0+255),w,b
  8678  00E04C  B4D8               	btfsc	status,2,c
  8679  00E04E  D005               	goto	l19803
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;rtcc.c: 369: {
  8683                           ;rtcc.c: 370: date[0] = buffer;
  8684  00E050  C092  F08C         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;rtcc.c: 371: error_found = 1;
  8688  00E054  0E01               	movlw	1
  8689  00E056  0100               	movlb	0	; () banked
  8690  00E058  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8691  00E05A                     l19803:
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;rtcc.c: 372: }
  8695                           ;rtcc.c: 373: rtcc_set_year(date[0]);
  8696  00E05A  0100               	movlb	0	; () banked
  8697  00E05C  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8698  00E05E  EC0C  F0A0         	call	_rtcc_set_year
  8699                           
  8700                           ;rtcc.c: 376: buffer = _rtcc_verify_bcd(date[1], 0x01, 0x12);
  8701  00E062  0E01               	movlw	1
  8702  00E064  0100               	movlb	0	; () banked
  8703  00E066  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8704  00E068  0E12               	movlw	18
  8705  00E06A  0100               	movlb	0	; () banked
  8706  00E06C  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8707  00E06E  0100               	movlb	0	; () banked
  8708  00E070  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8709  00E072  EC4F  F097         	call	__rtcc_verify_bcd
  8710  00E076  0100               	movlb	0	; () banked
  8711  00E078  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8712                           
  8713                           ;rtcc.c: 377: if(buffer != date[1])
  8714  00E07A  0100               	movlb	0	; () banked
  8715  00E07C  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8716  00E07E  0100               	movlb	0	; () banked
  8717  00E080  198D               	xorwf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8718  00E082  B4D8               	btfsc	status,2,c
  8719  00E084  D005               	goto	l19811
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;rtcc.c: 378: {
  8723                           ;rtcc.c: 379: date[1] = buffer;
  8724  00E086  C092  F08D         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+1
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;rtcc.c: 380: error_found = 1;
  8728  00E08A  0E01               	movlw	1
  8729  00E08C  0100               	movlb	0	; () banked
  8730  00E08E  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8731  00E090                     l19811:
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;rtcc.c: 381: }
  8735                           ;rtcc.c: 382: rtcc_set_month(date[1]);
  8736  00E090  0100               	movlb	0	; () banked
  8737  00E092  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8738  00E094  EC26  F0A0         	call	_rtcc_set_month
  8739                           
  8740                           ;rtcc.c: 385: buffer = _rtcc_verify_bcd(date[2], 0x01, 0x31);
  8741  00E098  0E01               	movlw	1
  8742  00E09A  0100               	movlb	0	; () banked
  8743  00E09C  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8744  00E09E  0E31               	movlw	49
  8745  00E0A0  0100               	movlb	0	; () banked
  8746  00E0A2  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8747  00E0A4  0100               	movlb	0	; () banked
  8748  00E0A6  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8749  00E0A8  EC4F  F097         	call	__rtcc_verify_bcd
  8750  00E0AC  0100               	movlb	0	; () banked
  8751  00E0AE  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8752                           
  8753                           ;rtcc.c: 386: if(buffer != date[2])
  8754  00E0B0  0100               	movlb	0	; () banked
  8755  00E0B2  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8756  00E0B4  0100               	movlb	0	; () banked
  8757  00E0B6  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8758  00E0B8  B4D8               	btfsc	status,2,c
  8759  00E0BA  D005               	goto	l19819
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;rtcc.c: 387: {
  8763                           ;rtcc.c: 388: date[2] = buffer;
  8764  00E0BC  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;rtcc.c: 389: error_found = 1;
  8768  00E0C0  0E01               	movlw	1
  8769  00E0C2  0100               	movlb	0	; () banked
  8770  00E0C4  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8771  00E0C6                     l19819:
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;rtcc.c: 390: }
  8775                           ;rtcc.c: 391: rtcc_set_day(date[2]);
  8776  00E0C6  0100               	movlb	0	; () banked
  8777  00E0C8  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8778  00E0CA  EC4D  F0A0         	call	_rtcc_set_day
  8779                           
  8780                           ;rtcc.c: 394: rtcc_correct_day();
  8781  00E0CE  EC5F  F09F         	call	_rtcc_correct_day	;wreg free
  8782                           
  8783                           ;rtcc.c: 395: buffer = rtcc_get_day();
  8784  00E0D2  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
  8785  00E0D6  0100               	movlb	0	; () banked
  8786  00E0D8  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;rtcc.c: 396: if(buffer != date[2])
  8790  00E0DA  0100               	movlb	0	; () banked
  8791  00E0DC  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8792  00E0DE  0100               	movlb	0	; () banked
  8793  00E0E0  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8794  00E0E2  B4D8               	btfsc	status,2,c
  8795  00E0E4  D005               	goto	l19831
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;rtcc.c: 397: {
  8799                           ;rtcc.c: 398: date[2] = buffer;
  8800  00E0E6  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;rtcc.c: 399: error_found = 1;
  8804  00E0EA  0E01               	movlw	1
  8805  00E0EC  0100               	movlb	0	; () banked
  8806  00E0EE  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8807  00E0F0                     l19831:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;rtcc.c: 400: }
  8811                           ;rtcc.c: 403: buffer = _rtcc_verify_bcd(date[3], 0x00, 0x23);
  8812  00E0F0  0E00               	movlw	0
  8813  00E0F2  0100               	movlb	0	; () banked
  8814  00E0F4  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8815  00E0F6  0E23               	movlw	35
  8816  00E0F8  0100               	movlb	0	; () banked
  8817  00E0FA  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8818  00E0FC  0100               	movlb	0	; () banked
  8819  00E0FE  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8820  00E100  EC4F  F097         	call	__rtcc_verify_bcd
  8821  00E104  0100               	movlb	0	; () banked
  8822  00E106  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;rtcc.c: 404: if(buffer != date[3])
  8826  00E108  0100               	movlb	0	; () banked
  8827  00E10A  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8828  00E10C  0100               	movlb	0	; () banked
  8829  00E10E  198F               	xorwf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8830  00E110  B4D8               	btfsc	status,2,c
  8831  00E112  D005               	goto	l19839
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;rtcc.c: 405: {
  8835                           ;rtcc.c: 406: date[3] = buffer;
  8836  00E114  C092  F08F         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+3
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;rtcc.c: 407: error_found = 1;
  8840  00E118  0E01               	movlw	1
  8841  00E11A  0100               	movlb	0	; () banked
  8842  00E11C  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8843  00E11E                     l19839:
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;rtcc.c: 408: }
  8847                           ;rtcc.c: 409: rtcc_set_hours(date[3]);
  8848  00E11E  0100               	movlb	0	; () banked
  8849  00E120  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8850  00E122  EC40  F0A0         	call	_rtcc_set_hours
  8851                           
  8852                           ;rtcc.c: 412: buffer = _rtcc_verify_bcd(date[4], 0x00, 0x59);
  8853  00E126  0E00               	movlw	0
  8854  00E128  0100               	movlb	0	; () banked
  8855  00E12A  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8856  00E12C  0E59               	movlw	89
  8857  00E12E  0100               	movlb	0	; () banked
  8858  00E130  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8859  00E132  0100               	movlb	0	; () banked
  8860  00E134  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8861  00E136  EC4F  F097         	call	__rtcc_verify_bcd
  8862  00E13A  0100               	movlb	0	; () banked
  8863  00E13C  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8864                           
  8865                           ;rtcc.c: 413: if(buffer != date[4])
  8866  00E13E  0100               	movlb	0	; () banked
  8867  00E140  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8868  00E142  0100               	movlb	0	; () banked
  8869  00E144  1990               	xorwf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8870  00E146  B4D8               	btfsc	status,2,c
  8871  00E148  D005               	goto	l19847
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;rtcc.c: 414: {
  8875                           ;rtcc.c: 415: date[4] = buffer;
  8876  00E14A  C092  F090         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+4
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;rtcc.c: 416: error_found = 1;
  8880  00E14E  0E01               	movlw	1
  8881  00E150  0100               	movlb	0	; () banked
  8882  00E152  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8883  00E154                     l19847:
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;rtcc.c: 417: }
  8887                           ;rtcc.c: 418: rtcc_set_minutes(date[4]);
  8888  00E154  0100               	movlb	0	; () banked
  8889  00E156  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8890  00E158  EC33  F0A0         	call	_rtcc_set_minutes
  8891                           
  8892                           ;rtcc.c: 421: buffer = _rtcc_verify_bcd(date[5], 0x00, 0x59);
  8893  00E15C  0E00               	movlw	0
  8894  00E15E  0100               	movlb	0	; () banked
  8895  00E160  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8896  00E162  0E59               	movlw	89
  8897  00E164  0100               	movlb	0	; () banked
  8898  00E166  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8899  00E168  0100               	movlb	0	; () banked
  8900  00E16A  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8901  00E16C  EC4F  F097         	call	__rtcc_verify_bcd
  8902  00E170  0100               	movlb	0	; () banked
  8903  00E172  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8904                           
  8905                           ;rtcc.c: 422: if(buffer != date[5])
  8906  00E174  0100               	movlb	0	; () banked
  8907  00E176  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8908  00E178  0100               	movlb	0	; () banked
  8909  00E17A  1991               	xorwf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8910  00E17C  B4D8               	btfsc	status,2,c
  8911  00E17E  D005               	goto	l19855
  8912                           
  8913                           ; BSR set to: 0
  8914                           ;rtcc.c: 423: {
  8915                           ;rtcc.c: 424: date[5] = buffer;
  8916  00E180  C092  F091         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+5
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;rtcc.c: 425: error_found = 1;
  8920  00E184  0E01               	movlw	1
  8921  00E186  0100               	movlb	0	; () banked
  8922  00E188  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8923  00E18A                     l19855:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;rtcc.c: 426: }
  8927                           ;rtcc.c: 427: rtcc_set_seconds(date[5]);
  8928  00E18A  0100               	movlb	0	; () banked
  8929  00E18C  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8930  00E18E  EC19  F0A0         	call	_rtcc_set_seconds
  8931                           
  8932                           ;rtcc.c: 430: if(error_found)
  8933  00E192  0100               	movlb	0	; () banked
  8934  00E194  518B               	movf	rtcc_read_eeprom@error_found& (0+255),w,b
  8935  00E196  0100               	movlb	0	; () banked
  8936  00E198  B4D8               	btfsc	status,2,c
  8937  00E19A  0012               	return	
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;rtcc.c: 431: {
  8941                           ;rtcc.c: 432: rtcc_write_eeprom();
  8942  00E19C  ECC1  F099         	call	_rtcc_write_eeprom	;wreg free
  8943  00E1A0  0012               	return	
  8944  00E1A2                     __end_of_rtcc_read_eeprom:
  8945                           	opt stack 0
  8946                           tblptru	equ	0xFF8
  8947                           tblptrh	equ	0xFF7
  8948                           tblptrl	equ	0xFF6
  8949                           tablat	equ	0xFF5
  8950                           intcon3	equ	0xFF0
  8951                           postinc0	equ	0xFEE
  8952                           wreg	equ	0xFE8
  8953                           postdec1	equ	0xFE5
  8954                           plusw1	equ	0xFE3
  8955                           fsr1h	equ	0xFE2
  8956                           fsr1l	equ	0xFE1
  8957                           postinc2	equ	0xFDE
  8958                           postdec2	equ	0xFDD
  8959                           plusw2	equ	0xFDB
  8960                           fsr2h	equ	0xFDA
  8961                           fsr2l	equ	0xFD9
  8962                           status	equ	0xFD8
  8963                           
  8964 ;; *************** function _rtcc_correct_day *****************
  8965 ;; Defined at:
  8966 ;;		line 118 in file "rtcc.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;		None
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;  max             1    5[BANK0 ] unsigned char 
  8971 ;;  day             1    4[BANK0 ] unsigned char 
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  1    wreg      void 
  8974 ;; Registers used:
  8975 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8982 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8985 ;;Total ram usage:        2 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; Hardware stack levels required when called:   12
  8988 ;; This function calls:
  8989 ;;		__number_of_days
  8990 ;;		_rtcc_get_day
  8991 ;;		_rtcc_set_day
  8992 ;; This function is called by:
  8993 ;;		__ui_encoder
  8994 ;;		_rtcc_read_eeprom
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text28
  8999  013EBE                     __ptext28:
  9000                           	opt stack 0
  9001  013EBE                     _rtcc_correct_day:
  9002                           	opt stack 16
  9003                           
  9004                           ;rtcc.c: 120: uint8_t day = rtcc_get_day();
  9005                           
  9006                           ;incstack = 0
  9007  013EBE  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
  9008  013EC2  0100               	movlb	0	; () banked
  9009  013EC4  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;rtcc.c: 121: uint8_t max = _number_of_days();
  9013  013EC6  EC55  F091         	call	__number_of_days	;wreg free
  9014  013ECA  0100               	movlb	0	; () banked
  9015  013ECC  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;rtcc.c: 122: if(day>max)
  9019  013ECE  0100               	movlb	0	; () banked
  9020  013ED0  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  9021  013ED2  0100               	movlb	0	; () banked
  9022  013ED4  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  9023  013ED6  B0D8               	btfsc	status,0,c
  9024  013ED8  0012               	return	
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;rtcc.c: 123: rtcc_set_day(max);
  9028  013EDA  0100               	movlb	0	; () banked
  9029  013EDC  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  9030  013EDE  EC4D  F0A0         	call	_rtcc_set_day
  9031  013EE2  0012               	return	
  9032  013EE4                     __end_of_rtcc_correct_day:
  9033                           	opt stack 0
  9034                           tblptru	equ	0xFF8
  9035                           tblptrh	equ	0xFF7
  9036                           tblptrl	equ	0xFF6
  9037                           tablat	equ	0xFF5
  9038                           intcon3	equ	0xFF0
  9039                           postinc0	equ	0xFEE
  9040                           wreg	equ	0xFE8
  9041                           postdec1	equ	0xFE5
  9042                           plusw1	equ	0xFE3
  9043                           fsr1h	equ	0xFE2
  9044                           fsr1l	equ	0xFE1
  9045                           postinc2	equ	0xFDE
  9046                           postdec2	equ	0xFDD
  9047                           plusw2	equ	0xFDB
  9048                           fsr2h	equ	0xFDA
  9049                           fsr2l	equ	0xFD9
  9050                           status	equ	0xFD8
  9051                           
  9052 ;; *************** function __number_of_days *****************
  9053 ;; Defined at:
  9054 ;;		line 60 in file "rtcc.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;  month           1    3[BANK0 ] unsigned char 
  9059 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  9060 ;;  year            1    1[BANK0 ] unsigned char 
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1    wreg      unsigned char 
  9063 ;; Registers used:
  9064 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;Total ram usage:        4 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:   11
  9077 ;; This function calls:
  9078 ;;		_rtcc_get_month
  9079 ;;		_rtcc_get_year
  9080 ;; This function is called by:
  9081 ;;		_rtcc_correct_day
  9082 ;;		_rtcc_increment_day
  9083 ;;		_rtcc_decrement_day
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text29
  9088  0122AA                     __ptext29:
  9089                           	opt stack 0
  9090  0122AA                     __number_of_days:
  9091                           	opt stack 16
  9092                           
  9093                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  9094                           
  9095                           ;incstack = 0
  9096  0122AA  ECBB  F0A0         	call	_rtcc_get_month	;wreg free
  9097  0122AE  0100               	movlb	0	; () banked
  9098  0122B0  6F63               	movwf	__number_of_days@month& (0+255),b
  9099                           
  9100                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  9101  0122B2  ECA7  F0A0         	call	_rtcc_get_year	;wreg free
  9102  0122B6  0100               	movlb	0	; () banked
  9103  0122B8  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;rtcc.c: 64: uint8_t year;
  9107                           ;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || month==0x11)
  9108  0122BA  0E04               	movlw	4
  9109  0122BC  0100               	movlb	0	; () banked
  9110  0122BE  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9111  0122C0  B4D8               	btfsc	status,2,c
  9112  0122C2  D00F               	goto	l18791
  9113                           
  9114                           ; BSR set to: 0
  9115  0122C4  0E06               	movlw	6
  9116  0122C6  0100               	movlb	0	; () banked
  9117  0122C8  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9118  0122CA  B4D8               	btfsc	status,2,c
  9119  0122CC  D00A               	goto	l18791
  9120                           
  9121                           ; BSR set to: 0
  9122  0122CE  0E09               	movlw	9
  9123  0122D0  0100               	movlb	0	; () banked
  9124  0122D2  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9125  0122D4  B4D8               	btfsc	status,2,c
  9126  0122D6  D005               	goto	l18791
  9127                           
  9128                           ; BSR set to: 0
  9129  0122D8  0E11               	movlw	17
  9130  0122DA  0100               	movlb	0	; () banked
  9131  0122DC  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9132  0122DE  A4D8               	btfss	status,2,c
  9133  0122E0  D002               	goto	l18795
  9134  0122E2                     l18791:
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;rtcc.c: 66: return 0x30;
  9138  0122E2  0E30               	movlw	48
  9139                           
  9140                           ; BSR set to: 0
  9141  0122E4  0012               	return	
  9142  0122E6                     l18795:
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;rtcc.c: 67: if(month==0x02)
  9146  0122E6  0E02               	movlw	2
  9147  0122E8  0100               	movlb	0	; () banked
  9148  0122EA  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9149  0122EC  A4D8               	btfss	status,2,c
  9150  0122EE  D01A               	goto	l18815
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;rtcc.c: 68: {
  9154                           ;rtcc.c: 69: year = bcd_year>>4;
  9155  0122F0  0100               	movlb	0	; () banked
  9156  0122F2  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  9157  0122F4  0B0F               	andlw	15
  9158  0122F6  0100               	movlb	0	; () banked
  9159  0122F8  6F61               	movwf	__number_of_days@year& (0+255),b
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;rtcc.c: 70: year *= 10;
  9163  0122FA  0E0A               	movlw	10
  9164  0122FC  0100               	movlb	0	; () banked
  9165  0122FE  0361               	mulwf	__number_of_days@year& (0+255),b
  9166  012300  50F3               	movf	prodl,w,c
  9167  012302  6F61               	movwf	__number_of_days@year& (0+255),b
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  9171  012304  0100               	movlb	0	; () banked
  9172  012306  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  9173  012308  0B0F               	andlw	15
  9174  01230A  0100               	movlb	0	; () banked
  9175  01230C  2761               	addwf	__number_of_days@year& (0+255),f,b
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;rtcc.c: 72: if(year&0b11)
  9179  01230E  C061  F060         	movff	__number_of_days@year,??__number_of_days
  9180  012312  0E03               	movlw	3
  9181  012314  0100               	movlb	0	; () banked
  9182  012316  1760               	andwf	??__number_of_days& (0+255),f,b
  9183  012318  B4D8               	btfsc	status,2,c
  9184  01231A  D002               	goto	l18811
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;rtcc.c: 73: return 0x28;
  9188  01231C  0E28               	movlw	40
  9189                           
  9190                           ; BSR set to: 0
  9191  01231E  0012               	return	
  9192  012320                     l18811:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;rtcc.c: 74: else
  9196                           ;rtcc.c: 75: return 0x29;
  9197  012320  0E29               	movlw	41
  9198                           
  9199                           ; BSR set to: 0
  9200  012322  0012               	return	
  9201  012324                     l18815:
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;rtcc.c: 76: }
  9205                           ;rtcc.c: 77: return 0x31;
  9206  012324  0E31               	movlw	49
  9207  012326  0012               	return	
  9208  012328                     __end_of__number_of_days:
  9209                           	opt stack 0
  9210                           tblptru	equ	0xFF8
  9211                           tblptrh	equ	0xFF7
  9212                           tblptrl	equ	0xFF6
  9213                           tablat	equ	0xFF5
  9214                           prodl	equ	0xFF3
  9215                           intcon3	equ	0xFF0
  9216                           postinc0	equ	0xFEE
  9217                           wreg	equ	0xFE8
  9218                           postdec1	equ	0xFE5
  9219                           plusw1	equ	0xFE3
  9220                           fsr1h	equ	0xFE2
  9221                           fsr1l	equ	0xFE1
  9222                           postinc2	equ	0xFDE
  9223                           postdec2	equ	0xFDD
  9224                           plusw2	equ	0xFDB
  9225                           fsr2h	equ	0xFDA
  9226                           fsr2l	equ	0xFD9
  9227                           status	equ	0xFD8
  9228                           
  9229 ;; *************** function __rtcc_verify_bcd *****************
  9230 ;; Defined at:
  9231 ;;		line 80 in file "rtcc.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  value           1    wreg     unsigned char 
  9234 ;;  min             1    0[BANK0 ] unsigned char 
  9235 ;;  max             1    1[BANK0 ] unsigned char 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;  value           1    3[BANK0 ] unsigned char 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      unsigned char 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;Total ram usage:        4 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:   10
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_rtcc_read_eeprom
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text30
  9262  012E9E                     __ptext30:
  9263                           	opt stack 0
  9264  012E9E                     __rtcc_verify_bcd:
  9265                           	opt stack 17
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;incstack = 0
  9269                           ;__rtcc_verify_bcd@value stored from wreg
  9270  012E9E  0100               	movlb	0	; () banked
  9271  012EA0  6F63               	movwf	__rtcc_verify_bcd@value& (0+255),b
  9272                           
  9273                           ;rtcc.c: 83: if((value&0x0F)>0x09)
  9274  012EA2  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9275  012EA6  0E0F               	movlw	15
  9276  012EA8  0100               	movlb	0	; () banked
  9277  012EAA  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9278  012EAC  0E09               	movlw	9
  9279  012EAE  0100               	movlb	0	; () banked
  9280  012EB0  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9281  012EB2  D003               	goto	l19137
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;rtcc.c: 84: {
  9285                           ;rtcc.c: 85: return min;
  9286  012EB4  0100               	movlb	0	; () banked
  9287  012EB6  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9288                           
  9289                           ; BSR set to: 0
  9290  012EB8  0012               	return	
  9291  012EBA                     l19137:
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;rtcc.c: 86: }
  9295                           ;rtcc.c: 87: if((value&0xF0)>0x90)
  9296  012EBA  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9297  012EBE  0EF0               	movlw	240
  9298  012EC0  0100               	movlb	0	; () banked
  9299  012EC2  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9300  012EC4  0E90               	movlw	144
  9301  012EC6  0100               	movlb	0	; () banked
  9302  012EC8  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9303  012ECA  D003               	goto	l19143
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;rtcc.c: 88: {
  9307                           ;rtcc.c: 89: return min;
  9308  012ECC  0100               	movlb	0	; () banked
  9309  012ECE  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9310                           
  9311                           ; BSR set to: 0
  9312  012ED0  0012               	return	
  9313  012ED2                     l19143:
  9314                           
  9315                           ; BSR set to: 0
  9316                           ;rtcc.c: 90: }
  9317                           ;rtcc.c: 92: if(value<min)
  9318  012ED2  0100               	movlb	0	; () banked
  9319  012ED4  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9320  012ED6  0100               	movlb	0	; () banked
  9321  012ED8  5D63               	subwf	__rtcc_verify_bcd@value& (0+255),w,b
  9322  012EDA  B0D8               	btfsc	status,0,c
  9323  012EDC  D003               	goto	l19149
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;rtcc.c: 93: {
  9327                           ;rtcc.c: 94: return min;
  9328  012EDE  0100               	movlb	0	; () banked
  9329  012EE0  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9330                           
  9331                           ; BSR set to: 0
  9332  012EE2  0012               	return	
  9333  012EE4                     l19149:
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;rtcc.c: 95: }
  9337                           ;rtcc.c: 96: if(value>max)
  9338  012EE4  0100               	movlb	0	; () banked
  9339  012EE6  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9340  012EE8  0100               	movlb	0	; () banked
  9341  012EEA  5D61               	subwf	__rtcc_verify_bcd@max& (0+255),w,b
  9342  012EEC  B0D8               	btfsc	status,0,c
  9343  012EEE  D003               	goto	l19155
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;rtcc.c: 97: {
  9347                           ;rtcc.c: 98: return max;
  9348  012EF0  0100               	movlb	0	; () banked
  9349  012EF2  5161               	movf	__rtcc_verify_bcd@max& (0+255),w,b
  9350                           
  9351                           ; BSR set to: 0
  9352  012EF4  0012               	return	
  9353  012EF6                     l19155:
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;rtcc.c: 99: }
  9357                           ;rtcc.c: 101: return value;
  9358  012EF6  0100               	movlb	0	; () banked
  9359  012EF8  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9360  012EFA  0012               	return	
  9361  012EFC                     __end_of__rtcc_verify_bcd:
  9362                           	opt stack 0
  9363                           tblptru	equ	0xFF8
  9364                           tblptrh	equ	0xFF7
  9365                           tblptrl	equ	0xFF6
  9366                           tablat	equ	0xFF5
  9367                           prodl	equ	0xFF3
  9368                           intcon3	equ	0xFF0
  9369                           postinc0	equ	0xFEE
  9370                           wreg	equ	0xFE8
  9371                           postdec1	equ	0xFE5
  9372                           plusw1	equ	0xFE3
  9373                           fsr1h	equ	0xFE2
  9374                           fsr1l	equ	0xFE1
  9375                           postinc2	equ	0xFDE
  9376                           postdec2	equ	0xFDD
  9377                           plusw2	equ	0xFDB
  9378                           fsr2h	equ	0xFDA
  9379                           fsr2l	equ	0xFD9
  9380                           status	equ	0xFD8
  9381                           
  9382 ;; *************** function _log_start_new *****************
  9383 ;; Defined at:
  9384 ;;		line 71 in file "log.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;		None
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  1    wreg      void 
  9391 ;; Registers used:
  9392 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9402 ;;Total ram usage:        0 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:   12
  9405 ;; This function calls:
  9406 ;;		_rtcc_get_seconds_decimal
  9407 ;; This function is called by:
  9408 ;;		_main
  9409 ;;		_system_init
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	text31
  9414  010142                     __ptext31:
  9415                           	opt stack 0
  9416  010142                     _log_start_new:
  9417                           	opt stack 17
  9418                           
  9419                           ;log.c: 73: inputVoltageSum = 0;
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;incstack = 0
  9423  010142  0E00               	movlw	0
  9424  010144  0102               	movlb	2	; () banked
  9425  010146  6F9A               	movwf	_inputVoltageSum& (0+255),b
  9426  010148  0E00               	movlw	0
  9427  01014A  6F9B               	movwf	(_inputVoltageSum+1)& (0+255),b
  9428  01014C  0E00               	movlw	0
  9429  01014E  6F9C               	movwf	(_inputVoltageSum+2)& (0+255),b
  9430  010150  0E00               	movlw	0
  9431  010152  6F9D               	movwf	(_inputVoltageSum+3)& (0+255),b
  9432                           
  9433                           ;log.c: 74: inputCurrentSum = 0;
  9434  010154  0E00               	movlw	0
  9435  010156  0102               	movlb	2	; () banked
  9436  010158  6F96               	movwf	_inputCurrentSum& (0+255),b
  9437  01015A  0E00               	movlw	0
  9438  01015C  6F97               	movwf	(_inputCurrentSum+1)& (0+255),b
  9439  01015E  0E00               	movlw	0
  9440  010160  6F98               	movwf	(_inputCurrentSum+2)& (0+255),b
  9441  010162  0E00               	movlw	0
  9442  010164  6F99               	movwf	(_inputCurrentSum+3)& (0+255),b
  9443                           
  9444                           ;log.c: 75: outputVoltageSum = 0;
  9445  010166  0E00               	movlw	0
  9446  010168  0102               	movlb	2	; () banked
  9447  01016A  6F92               	movwf	_outputVoltageSum& (0+255),b
  9448  01016C  0E00               	movlw	0
  9449  01016E  6F93               	movwf	(_outputVoltageSum+1)& (0+255),b
  9450  010170  0E00               	movlw	0
  9451  010172  6F94               	movwf	(_outputVoltageSum+2)& (0+255),b
  9452  010174  0E00               	movlw	0
  9453  010176  6F95               	movwf	(_outputVoltageSum+3)& (0+255),b
  9454                           
  9455                           ;log.c: 76: outputCurrentSum = 0;
  9456  010178  0E00               	movlw	0
  9457  01017A  0102               	movlb	2	; () banked
  9458  01017C  6F8E               	movwf	_outputCurrentSum& (0+255),b
  9459  01017E  0E00               	movlw	0
  9460  010180  6F8F               	movwf	(_outputCurrentSum+1)& (0+255),b
  9461  010182  0E00               	movlw	0
  9462  010184  6F90               	movwf	(_outputCurrentSum+2)& (0+255),b
  9463  010186  0E00               	movlw	0
  9464  010188  6F91               	movwf	(_outputCurrentSum+3)& (0+255),b
  9465                           
  9466                           ;log.c: 77: inputPowerSum = 0;
  9467  01018A  0E00               	movlw	0
  9468  01018C  0102               	movlb	2	; () banked
  9469  01018E  6F8A               	movwf	_inputPowerSum& (0+255),b
  9470  010190  0E00               	movlw	0
  9471  010192  6F8B               	movwf	(_inputPowerSum+1)& (0+255),b
  9472  010194  0E00               	movlw	0
  9473  010196  6F8C               	movwf	(_inputPowerSum+2)& (0+255),b
  9474  010198  0E00               	movlw	0
  9475  01019A  6F8D               	movwf	(_inputPowerSum+3)& (0+255),b
  9476                           
  9477                           ;log.c: 78: outputPowerSum = 0;
  9478  01019C  0E00               	movlw	0
  9479  01019E  0102               	movlb	2	; () banked
  9480  0101A0  6F86               	movwf	_outputPowerSum& (0+255),b
  9481  0101A2  0E00               	movlw	0
  9482  0101A4  6F87               	movwf	(_outputPowerSum+1)& (0+255),b
  9483  0101A6  0E00               	movlw	0
  9484  0101A8  6F88               	movwf	(_outputPowerSum+2)& (0+255),b
  9485  0101AA  0E00               	movlw	0
  9486  0101AC  6F89               	movwf	(_outputPowerSum+3)& (0+255),b
  9487                           
  9488                           ;log.c: 79: inputCapacitySum = 0;
  9489  0101AE  0E00               	movlw	0
  9490  0101B0  0102               	movlb	2	; () banked
  9491  0101B2  6F82               	movwf	_inputCapacitySum& (0+255),b
  9492  0101B4  0E00               	movlw	0
  9493  0101B6  6F83               	movwf	(_inputCapacitySum+1)& (0+255),b
  9494  0101B8  0E00               	movlw	0
  9495  0101BA  6F84               	movwf	(_inputCapacitySum+2)& (0+255),b
  9496  0101BC  0E00               	movlw	0
  9497  0101BE  6F85               	movwf	(_inputCapacitySum+3)& (0+255),b
  9498                           
  9499                           ;log.c: 80: outputCapacitySum = 0;
  9500  0101C0  0E00               	movlw	0
  9501  0101C2  0102               	movlb	2	; () banked
  9502  0101C4  6F7E               	movwf	_outputCapacitySum& (0+255),b
  9503  0101C6  0E00               	movlw	0
  9504  0101C8  6F7F               	movwf	(_outputCapacitySum+1)& (0+255),b
  9505  0101CA  0E00               	movlw	0
  9506  0101CC  6F80               	movwf	(_outputCapacitySum+2)& (0+255),b
  9507  0101CE  0E00               	movlw	0
  9508  0101D0  6F81               	movwf	(_outputCapacitySum+3)& (0+255),b
  9509                           
  9510                           ;log.c: 81: temperatureOnboardSum = 0;
  9511  0101D2  0E00               	movlw	0
  9512  0101D4  0102               	movlb	2	; () banked
  9513  0101D6  6F7A               	movwf	_temperatureOnboardSum& (0+255),b
  9514  0101D8  0E00               	movlw	0
  9515  0101DA  6F7B               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  9516  0101DC  0E00               	movlw	0
  9517  0101DE  6F7C               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  9518  0101E0  0E00               	movlw	0
  9519  0101E2  6F7D               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  9520                           
  9521                           ;log.c: 82: temperatureExternal1Sum = 0;
  9522  0101E4  0E00               	movlw	0
  9523  0101E6  0102               	movlb	2	; () banked
  9524  0101E8  6F76               	movwf	_temperatureExternal1Sum& (0+255),b
  9525  0101EA  0E00               	movlw	0
  9526  0101EC  6F77               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  9527  0101EE  0E00               	movlw	0
  9528  0101F0  6F78               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  9529  0101F2  0E00               	movlw	0
  9530  0101F4  6F79               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  9531                           
  9532                           ;log.c: 83: temperatureExternal2Sum = 0;
  9533  0101F6  0E00               	movlw	0
  9534  0101F8  0102               	movlb	2	; () banked
  9535  0101FA  6F72               	movwf	_temperatureExternal2Sum& (0+255),b
  9536  0101FC  0E00               	movlw	0
  9537  0101FE  6F73               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  9538  010200  0E00               	movlw	0
  9539  010202  6F74               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  9540  010204  0E00               	movlw	0
  9541  010206  6F75               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  9542                           
  9543                           ;log.c: 84: chargerOnTime = 0;
  9544  010208  0E00               	movlw	0
  9545  01020A  0102               	movlb	2	; () banked
  9546  01020C  6FB1               	movwf	(_chargerOnTime+1)& (0+255),b
  9547  01020E  0E00               	movlw	0
  9548  010210  6FB0               	movwf	_chargerOnTime& (0+255),b
  9549                           
  9550                           ;log.c: 85: lowPowerTime = 0;
  9551  010212  0E00               	movlw	0
  9552  010214  0102               	movlb	2	; () banked
  9553  010216  6FAF               	movwf	(_lowPowerTime+1)& (0+255),b
  9554  010218  0E00               	movlw	0
  9555  01021A  6FAE               	movwf	_lowPowerTime& (0+255),b
  9556                           
  9557                           ;log.c: 86: status = 0;
  9558  01021C  0E00               	movlw	0
  9559  01021E  0101               	movlb	1	; () banked
  9560  010220  6FF0               	movwf	_status& (0+255),b
  9561                           
  9562                           ;log.c: 87: averageCount = 0;
  9563  010222  0E00               	movlw	0
  9564  010224  6E17               	movwf	_averageCount+1,c
  9565  010226  0E00               	movlw	0
  9566  010228  6E16               	movwf	_averageCount,c
  9567                           
  9568                           ; BSR set to: 1
  9569                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  9570  01022A  EC10  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
  9571  01022E  0101               	movlb	1	; () banked
  9572  010230  6FEF               	movwf	_lastSecond& (0+255),b
  9573                           
  9574                           ; BSR set to: 1
  9575  010232  0012               	return		;funcret
  9576  010234                     __end_of_log_start_new:
  9577                           	opt stack 0
  9578                           tblptru	equ	0xFF8
  9579                           tblptrh	equ	0xFF7
  9580                           tblptrl	equ	0xFF6
  9581                           tablat	equ	0xFF5
  9582                           prodl	equ	0xFF3
  9583                           intcon3	equ	0xFF0
  9584                           postinc0	equ	0xFEE
  9585                           wreg	equ	0xFE8
  9586                           postdec1	equ	0xFE5
  9587                           plusw1	equ	0xFE3
  9588                           fsr1h	equ	0xFE2
  9589                           fsr1l	equ	0xFE1
  9590                           postinc2	equ	0xFDE
  9591                           postdec2	equ	0xFDD
  9592                           plusw2	equ	0xFDB
  9593                           fsr2h	equ	0xFDA
  9594                           fsr2l	equ	0xFD9
  9595                           status	equ	0xFD8
  9596                           
  9597 ;; *************** function _i2c_init *****************
  9598 ;; Defined at:
  9599 ;;		line 94 in file "i2c.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;		None
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;		None
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2, status,0, cstack
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9617 ;;Total ram usage:        0 bytes
  9618 ;; Hardware stack levels used:    1
  9619 ;; Hardware stack levels required when called:   11
  9620 ;; This function calls:
  9621 ;;		__i2c_open_1
  9622 ;;		_i2c_set_frequency
  9623 ;; This function is called by:
  9624 ;;		_system_init
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text32
  9629  014272                     __ptext32:
  9630                           	opt stack 0
  9631  014272                     _i2c_init:
  9632                           	opt stack 18
  9633                           
  9634                           ;i2c.c: 96: _i2c_open_1();
  9635                           
  9636                           ; BSR set to: 1
  9637                           ;incstack = 0
  9638  014272  EC5A  F0A0         	call	__i2c_open_1	;wreg free
  9639                           
  9640                           ;i2c.c: 98: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9641  014276  0E00               	movlw	0
  9642  014278  ECE3  F093         	call	_i2c_set_frequency
  9643  01427C  0012               	return		;funcret
  9644  01427E                     __end_of_i2c_init:
  9645                           	opt stack 0
  9646                           tblptru	equ	0xFF8
  9647                           tblptrh	equ	0xFF7
  9648                           tblptrl	equ	0xFF6
  9649                           tablat	equ	0xFF5
  9650                           prodl	equ	0xFF3
  9651                           intcon3	equ	0xFF0
  9652                           postinc0	equ	0xFEE
  9653                           wreg	equ	0xFE8
  9654                           postdec1	equ	0xFE5
  9655                           plusw1	equ	0xFE3
  9656                           fsr1h	equ	0xFE2
  9657                           fsr1l	equ	0xFE1
  9658                           postinc2	equ	0xFDE
  9659                           postdec2	equ	0xFDD
  9660                           plusw2	equ	0xFDB
  9661                           fsr2h	equ	0xFDA
  9662                           fsr2l	equ	0xFD9
  9663                           status	equ	0xFD8
  9664                           
  9665 ;; *************** function __i2c_open_1 *****************
  9666 ;; Defined at:
  9667 ;;		line 33 in file "i2c.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9685 ;;Total ram usage:        0 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:   10
  9688 ;; This function calls:
  9689 ;;		Nothing
  9690 ;; This function is called by:
  9691 ;;		_i2c_init
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text33
  9696  0140B4                     __ptext33:
  9697                           	opt stack 0
  9698  0140B4                     __i2c_open_1:
  9699                           	opt stack 18
  9700                           
  9701                           ;i2c.c: 35: SSP1STATbits.SMP = 0;
  9702                           
  9703                           ;incstack = 0
  9704  0140B4  9EC7               	bcf	4039,7,c	;volatile
  9705                           
  9706                           ;i2c.c: 36: SSP1STATbits.CKE = 0;
  9707  0140B6  9CC7               	bcf	4039,6,c	;volatile
  9708                           
  9709                           ;i2c.c: 37: SSP1ADD = 29;
  9710  0140B8  0E1D               	movlw	29
  9711  0140BA  6EC8               	movwf	4040,c	;volatile
  9712                           
  9713                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  9714  0140BC  9EC6               	bcf	4038,7,c	;volatile
  9715                           
  9716                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  9717  0140BE  9CC6               	bcf	4038,6,c	;volatile
  9718                           
  9719                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  9720  0140C0  50C6               	movf	4038,w,c	;volatile
  9721  0140C2  0BF0               	andlw	-16
  9722  0140C4  0908               	iorlw	8
  9723  0140C6  6EC6               	movwf	4038,c	;volatile
  9724                           
  9725                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  9726  0140C8  8AC6               	bsf	4038,5,c	;volatile
  9727  0140CA  0012               	return		;funcret
  9728  0140CC                     __end_of__i2c_open_1:
  9729                           	opt stack 0
  9730                           tblptru	equ	0xFF8
  9731                           tblptrh	equ	0xFF7
  9732                           tblptrl	equ	0xFF6
  9733                           tablat	equ	0xFF5
  9734                           prodl	equ	0xFF3
  9735                           intcon3	equ	0xFF0
  9736                           postinc0	equ	0xFEE
  9737                           wreg	equ	0xFE8
  9738                           postdec1	equ	0xFE5
  9739                           plusw1	equ	0xFE3
  9740                           fsr1h	equ	0xFE2
  9741                           fsr1l	equ	0xFE1
  9742                           postinc2	equ	0xFDE
  9743                           postdec2	equ	0xFDD
  9744                           plusw2	equ	0xFDB
  9745                           fsr2h	equ	0xFDA
  9746                           fsr2l	equ	0xFD9
  9747                           status	equ	0xFD8
  9748                           
  9749 ;; *************** function _i2c_eeprom_read_calibration *****************
  9750 ;; Defined at:
  9751 ;;		line 579 in file "i2c.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;		None
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  buffer          4   27[BANK0 ] unsigned char [4]
  9756 ;;  addr            2   31[BANK0 ] unsigned int 
  9757 ;;  cntr            1   33[BANK0 ] unsigned char 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      void 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9768 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9769 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9770 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9771 ;;Total ram usage:        9 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:   13
  9774 ;; This function calls:
  9775 ;;		__i2c_eeprom_load_default_calibration
  9776 ;;		_i2c_eeprom_read
  9777 ;;		_schedule_eeprom_write_task
  9778 ;; This function is called by:
  9779 ;;		_system_init
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text34
  9784  00E874                     __ptext34:
  9785                           	opt stack 0
  9786  00E874                     _i2c_eeprom_read_calibration:
  9787                           	opt stack 16
  9788                           
  9789                           ;i2c.c: 581: uint8_t buffer[4];
  9790                           ;i2c.c: 582: uint8_t cntr;
  9791                           ;i2c.c: 583: uint16_t addr;
  9792                           ;i2c.c: 585: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  9793                           
  9794                           ;incstack = 0
  9795  00E874  0E00               	movlw	0
  9796  00E876  0100               	movlb	0	; () banked
  9797  00E878  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
  9798  00E87A                     l20769:
  9799                           
  9800                           ; BSR set to: 0
  9801  00E87A  0E06               	movlw	6
  9802  00E87C  0100               	movlb	0	; () banked
  9803  00E87E  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
  9804  00E880  D001               	goto	l20773
  9805  00E882  0012               	return	
  9806  00E884                     l20773:
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;i2c.c: 586: {
  9810                           ;i2c.c: 588: addr = 0x0200 + (cntr<<4);
  9811  00E884  0100               	movlb	0	; () banked
  9812  00E886  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9813  00E888  0100               	movlb	0	; () banked
  9814  00E88A  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
  9815  00E88C  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
  9816  00E88E  0100               	movlb	0	; () banked
  9817  00E890  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9818  00E892  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9819  00E894  0EF0               	movlw	240
  9820  00E896  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9821  00E898  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9822  00E89A  0B0F               	andlw	15
  9823  00E89C  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9824  00E89E  0EF0               	movlw	240
  9825  00E8A0  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9826  00E8A2  0E00               	movlw	0
  9827  00E8A4  0100               	movlb	0	; () banked
  9828  00E8A6  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9829  00E8A8  0100               	movlb	0	; () banked
  9830  00E8AA  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
  9831  00E8AC  0E02               	movlw	2
  9832  00E8AE  0100               	movlb	0	; () banked
  9833  00E8B0  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
  9834  00E8B2  0100               	movlb	0	; () banked
  9835  00E8B4  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;i2c.c: 589: i2c_eeprom_read(addr, &buffer[0], 4);
  9839  00E8B6  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9840  00E8BA  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9841  00E8BE  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
  9842  00E8C0  0100               	movlb	0	; () banked
  9843  00E8C2  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9844  00E8C4  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  9845  00E8C6  0100               	movlb	0	; () banked
  9846  00E8C8  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9847  00E8CA  0E04               	movlw	4
  9848  00E8CC  0100               	movlb	0	; () banked
  9849  00E8CE  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9850  00E8D0  EC5A  F096         	call	_i2c_eeprom_read	;wreg free
  9851                           
  9852                           ;i2c.c: 591: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  9853  00E8D4  0E77               	movlw	119
  9854  00E8D6  0100               	movlb	0	; () banked
  9855  00E8D8  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
  9856  00E8DA  A4D8               	btfss	status,2,c
  9857  00E8DC  D02A               	goto	l20789
  9858                           
  9859                           ; BSR set to: 0
  9860  00E8DE  0E55               	movlw	85
  9861  00E8E0  0100               	movlb	0	; () banked
  9862  00E8E2  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
  9863  00E8E4  A4D8               	btfss	status,2,c
  9864  00E8E6  D025               	goto	l20789
  9865                           
  9866                           ; BSR set to: 0
  9867  00E8E8  0E33               	movlw	51
  9868  00E8EA  0100               	movlb	0	; () banked
  9869  00E8EC  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
  9870  00E8EE  A4D8               	btfss	status,2,c
  9871  00E8F0  D020               	goto	l20789
  9872                           
  9873                           ; BSR set to: 0
  9874  00E8F2  0100               	movlb	0	; () banked
  9875  00E8F4  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9876  00E8F6  0100               	movlb	0	; () banked
  9877  00E8F8  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
  9878  00E8FA  A4D8               	btfss	status,2,c
  9879  00E8FC  D01A               	goto	l20789
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;i2c.c: 592: {
  9883                           ;i2c.c: 594: addr += 4;
  9884  00E8FE  0E04               	movlw	4
  9885  00E900  0100               	movlb	0	; () banked
  9886  00E902  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
  9887  00E904  0E00               	movlw	0
  9888  00E906  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;i2c.c: 595: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  9892  00E908  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9893  00E90C  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9894  00E910  0100               	movlb	0	; () banked
  9895  00E912  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9896  00E914  0D0C               	mullw	12
  9897  00E916  0E00               	movlw	low _calibrationParameters
  9898  00E918  24F3               	addwf	prodl,w,c
  9899  00E91A  0100               	movlb	0	; () banked
  9900  00E91C  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9901  00E91E  0E03               	movlw	high _calibrationParameters
  9902  00E920  20F4               	addwfc	prodh,w,c
  9903  00E922  0100               	movlb	0	; () banked
  9904  00E924  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9905  00E926  0E0C               	movlw	12
  9906  00E928  0100               	movlb	0	; () banked
  9907  00E92A  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9908  00E92C  EC5A  F096         	call	_i2c_eeprom_read	;wreg free
  9909                           
  9910                           ;i2c.c: 596: }
  9911  00E930  D043               	goto	l20809
  9912  00E932                     l20789:
  9913                           
  9914                           ;i2c.c: 597: else
  9915                           ;i2c.c: 598: {
  9916                           ;i2c.c: 600: _i2c_eeprom_load_default_calibration(&calibrationParameters[cntr], cntr);
  9917  00E932  0100               	movlb	0	; () banked
  9918  00E934  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9919  00E936  0D0C               	mullw	12
  9920  00E938  0E00               	movlw	low _calibrationParameters
  9921  00E93A  24F3               	addwf	prodl,w,c
  9922  00E93C  0100               	movlb	0	; () banked
  9923  00E93E  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
  9924  00E940  0E03               	movlw	high _calibrationParameters
  9925  00E942  20F4               	addwfc	prodh,w,c
  9926  00E944  0100               	movlb	0	; () banked
  9927  00E946  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
  9928  00E948  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  9929  00E94C  EC53  F054         	call	__i2c_eeprom_load_default_calibration	;wreg free
  9930                           
  9931                           ;i2c.c: 602: switch((calibrationIndex_t) cntr)
  9932  00E950  D01C               	goto	l20807
  9933  00E952                     l20791:
  9934                           
  9935                           ;i2c.c: 605: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  9936  00E952  0E02               	movlw	2
  9937  00E954  EC18  F099         	call	_schedule_eeprom_write_task
  9938                           
  9939                           ;i2c.c: 606: break;
  9940  00E958  D02F               	goto	l20809
  9941  00E95A                     l20793:
  9942                           
  9943                           ;i2c.c: 608: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  9944  00E95A  0E03               	movlw	3
  9945  00E95C  EC18  F099         	call	_schedule_eeprom_write_task
  9946                           
  9947                           ;i2c.c: 609: break;
  9948  00E960  D02B               	goto	l20809
  9949  00E962                     l20795:
  9950                           
  9951                           ;i2c.c: 611: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  9952  00E962  0E04               	movlw	4
  9953  00E964  EC18  F099         	call	_schedule_eeprom_write_task
  9954                           
  9955                           ;i2c.c: 612: break;
  9956  00E968  D027               	goto	l20809
  9957  00E96A                     l20797:
  9958                           
  9959                           ;i2c.c: 614: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  9960  00E96A  0E05               	movlw	5
  9961  00E96C  EC18  F099         	call	_schedule_eeprom_write_task
  9962                           
  9963                           ;i2c.c: 615: break;
  9964  00E970  D023               	goto	l20809
  9965  00E972                     l20799:
  9966                           
  9967                           ;i2c.c: 617: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  9968  00E972  0E06               	movlw	6
  9969  00E974  EC18  F099         	call	_schedule_eeprom_write_task
  9970                           
  9971                           ;i2c.c: 618: break;
  9972  00E978  D01F               	goto	l20809
  9973  00E97A                     l20801:
  9974                           
  9975                           ;i2c.c: 620: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  9976  00E97A  0E07               	movlw	7
  9977  00E97C  EC18  F099         	call	_schedule_eeprom_write_task
  9978                           
  9979                           ;i2c.c: 621: break;
  9980  00E980  D01B               	goto	l20809
  9981  00E982                     l20803:
  9982                           
  9983                           ;i2c.c: 623: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  9984  00E982  0E08               	movlw	8
  9985  00E984  EC18  F099         	call	_schedule_eeprom_write_task
  9986                           
  9987                           ;i2c.c: 625: }
  9988                           
  9989                           ;i2c.c: 624: break;
  9990  00E988  D017               	goto	l20809
  9991  00E98A                     l20807:
  9992  00E98A  0100               	movlb	0	; () banked
  9993  00E98C  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9994                           
  9995                           ; Switch size 1, requested type "space"
  9996                           ; Number of cases is 7, Range of values is 0 to 6
  9997                           ; switch strategies available:
  9998                           ; Name         Instructions Cycles
  9999                           ; simple_byte           22    12 (average)
 10000                           ;	Chosen strategy is simple_byte
 10001  00E98E  0A00               	xorlw	0	; case 0
 10002  00E990  B4D8               	btfsc	status,2,c
 10003  00E992  D7DF               	goto	l20791
 10004  00E994  0A01               	xorlw	1	; case 1
 10005  00E996  B4D8               	btfsc	status,2,c
 10006  00E998  D7E0               	goto	l20793
 10007  00E99A  0A03               	xorlw	3	; case 2
 10008  00E99C  B4D8               	btfsc	status,2,c
 10009  00E99E  D7E1               	goto	l20795
 10010  00E9A0  0A01               	xorlw	1	; case 3
 10011  00E9A2  B4D8               	btfsc	status,2,c
 10012  00E9A4  D7E2               	goto	l20797
 10013  00E9A6  0A07               	xorlw	7	; case 4
 10014  00E9A8  B4D8               	btfsc	status,2,c
 10015  00E9AA  D7E3               	goto	l20799
 10016  00E9AC  0A01               	xorlw	1	; case 5
 10017  00E9AE  B4D8               	btfsc	status,2,c
 10018  00E9B0  D7E4               	goto	l20801
 10019  00E9B2  0A03               	xorlw	3	; case 6
 10020  00E9B4  B4D8               	btfsc	status,2,c
 10021  00E9B6  D7E5               	goto	l20803
 10022  00E9B8                     l20809:
 10023  00E9B8  0100               	movlb	0	; () banked
 10024  00E9BA  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
 10025  00E9BC  D75E               	goto	l20769
 10026  00E9BE                     __end_of_i2c_eeprom_read_calibration:
 10027                           	opt stack 0
 10028                           tblptru	equ	0xFF8
 10029                           tblptrh	equ	0xFF7
 10030                           tblptrl	equ	0xFF6
 10031                           tablat	equ	0xFF5
 10032                           prodh	equ	0xFF4
 10033                           prodl	equ	0xFF3
 10034                           intcon3	equ	0xFF0
 10035                           postinc0	equ	0xFEE
 10036                           wreg	equ	0xFE8
 10037                           postdec1	equ	0xFE5
 10038                           plusw1	equ	0xFE3
 10039                           fsr1h	equ	0xFE2
 10040                           fsr1l	equ	0xFE1
 10041                           postinc2	equ	0xFDE
 10042                           postdec2	equ	0xFDD
 10043                           plusw2	equ	0xFDB
 10044                           fsr2h	equ	0xFDA
 10045                           fsr2l	equ	0xFD9
 10046                           status	equ	0xFD8
 10047                           
 10048 ;; *************** function _i2c_eeprom_read *****************
 10049 ;; Defined at:
 10050 ;;		line 563 in file "i2c.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  address         2   17[BANK0 ] unsigned int 
 10053 ;;  data            2   19[BANK0 ] PTR unsigned char 
 10054 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
 10055 ;;  length          1   21[BANK0 ] unsigned char 
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;  slave_addres    1   24[BANK0 ] unsigned char 
 10058 ;;  addr            1   23[BANK0 ] unsigned char 
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  1    wreg      void 
 10061 ;; Registers used:
 10062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10068 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10071 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10072 ;;Total ram usage:        8 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:   12
 10075 ;; This function calls:
 10076 ;;		__i2c_read
 10077 ;;		__i2c_write
 10078 ;;		_i2c_set_frequency
 10079 ;; This function is called by:
 10080 ;;		_i2c_eeprom_read_calibration
 10081 ;;		_rtcc_read_eeprom
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text35
 10086  012CB4                     __ptext35:
 10087                           	opt stack 0
 10088  012CB4                     _i2c_eeprom_read:
 10089                           	opt stack 15
 10090                           
 10091                           ;i2c.c: 565: uint8_t slave_address;
 10092                           ;i2c.c: 566: uint8_t addr;
 10093                           ;i2c.c: 567: addr = address & 0xFF;
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;incstack = 0
 10097  012CB4  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
 10098                           
 10099                           ;i2c.c: 568: address &= 0b0000011100000000;
 10100  012CB8  0100               	movlb	0	; () banked
 10101  012CBA  0E00               	movlw	0
 10102  012CBC  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
 10103  012CBE  0E07               	movlw	7
 10104  012CC0  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
 10105                           
 10106                           ;i2c.c: 569: address >>= 7;
 10107  012CC2  0E07               	movlw	7
 10108  012CC4  0100               	movlb	0	; () banked
 10109  012CC6  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
 10110  012CC8                     u18065:
 10111  012CC8  90D8               	bcf	status,0,c
 10112  012CCA  0100               	movlb	0	; () banked
 10113  012CCC  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
 10114  012CCE  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
 10115  012CD0  0100               	movlb	0	; () banked
 10116  012CD2  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
 10117  012CD4  D7F9               	goto	u18065
 10118                           
 10119                           ;i2c.c: 570: slave_address = 0b10100000 | address;
 10120  012CD6  0100               	movlb	0	; () banked
 10121  012CD8  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
 10122  012CDA  09A0               	iorlw	160
 10123  012CDC  0100               	movlb	0	; () banked
 10124  012CDE  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;i2c.c: 573: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10128  012CE0  0E02               	movlw	2
 10129  012CE2  ECE3  F093         	call	_i2c_set_frequency
 10130                           
 10131                           ;i2c.c: 575: _i2c_write(slave_address, &addr, 1);
 10132  012CE6  0E77               	movlw	low i2c_eeprom_read@addr
 10133  012CE8  0100               	movlb	0	; () banked
 10134  012CEA  6F65               	movwf	__i2c_write@data& (0+255),b
 10135  012CEC  0E00               	movlw	high i2c_eeprom_read@addr
 10136  012CEE  0100               	movlb	0	; () banked
 10137  012CF0  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10138  012CF2  0E01               	movlw	1
 10139  012CF4  0100               	movlb	0	; () banked
 10140  012CF6  6F67               	movwf	__i2c_write@length& (0+255),b
 10141  012CF8  0100               	movlb	0	; () banked
 10142  012CFA  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
 10143  012CFC  EC93  F098         	call	__i2c_write
 10144                           
 10145                           ;i2c.c: 576: _i2c_read(slave_address, &data[0], length);
 10146  012D00  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
 10147  012D04  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
 10148  012D08  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
 10149  012D0C  0100               	movlb	0	; () banked
 10150  012D0E  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
 10151  012D10  EC9C  F086         	call	__i2c_read
 10152  012D14  0012               	return		;funcret
 10153  012D16                     __end_of_i2c_eeprom_read:
 10154                           	opt stack 0
 10155                           tblptru	equ	0xFF8
 10156                           tblptrh	equ	0xFF7
 10157                           tblptrl	equ	0xFF6
 10158                           tablat	equ	0xFF5
 10159                           prodh	equ	0xFF4
 10160                           prodl	equ	0xFF3
 10161                           intcon3	equ	0xFF0
 10162                           postinc0	equ	0xFEE
 10163                           wreg	equ	0xFE8
 10164                           postdec1	equ	0xFE5
 10165                           plusw1	equ	0xFE3
 10166                           fsr1h	equ	0xFE2
 10167                           fsr1l	equ	0xFE1
 10168                           postinc2	equ	0xFDE
 10169                           postdec2	equ	0xFDD
 10170                           plusw2	equ	0xFDB
 10171                           fsr2h	equ	0xFDA
 10172                           fsr2l	equ	0xFD9
 10173                           status	equ	0xFD8
 10174                           
 10175 ;; *************** function __i2c_read *****************
 10176 ;; Defined at:
 10177 ;;		line 167 in file "i2c.c"
 10178 ;; Parameters:    Size  Location     Type
 10179 ;;  slave_addres    1    wreg     unsigned char 
 10180 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10181 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
 10182 ;;  length          1    7[BANK0 ] unsigned char 
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;  slave_addres    1   15[BANK0 ] unsigned char 
 10185 ;;  cntr            1   16[BANK0 ] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10195 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10198 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10199 ;;Total ram usage:       12 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   11
 10202 ;; This function calls:
 10203 ;;		__i2c_acknowledge
 10204 ;;		__i2c_get
 10205 ;;		__i2c_not_acknowledge
 10206 ;;		__i2c_send
 10207 ;;		__i2c_start
 10208 ;;		__i2c_stop
 10209 ;;		__i2c_wait_idle
 10210 ;; This function is called by:
 10211 ;;		_i2c_eeprom_read
 10212 ;;		_i2c_eeprom_readByte
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           	psect	text36
 10217  010D38                     __ptext36:
 10218                           	opt stack 0
 10219  010D38                     __i2c_read:
 10220                           	opt stack 15
 10221                           
 10222                           ;incstack = 0
 10223                           ;__i2c_read@slave_address stored from wreg
 10224  010D38  0100               	movlb	0	; () banked
 10225  010D3A  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
 10226                           
 10227                           ;i2c.c: 169: uint8_t cntr;
 10228                           ;i2c.c: 171: _i2c_wait_idle();
 10229  010D3C  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 10230                           
 10231                           ;i2c.c: 172: _i2c_start();
 10232  010D40  EC6D  F0A1         	call	__i2c_start	;wreg free
 10233                           
 10234                           ;i2c.c: 173: _i2c_wait_idle();
 10235  010D44  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 10236                           
 10237                           ;i2c.c: 174: _i2c_send(slave_address | 0x01);
 10238  010D48  0100               	movlb	0	; () banked
 10239  010D4A  516F               	movf	__i2c_read@slave_address& (0+255),w,b
 10240  010D4C  0901               	iorlw	1
 10241  010D4E  EC64  F0A1         	call	__i2c_send
 10242                           
 10243                           ;i2c.c: 175: _i2c_wait_idle();
 10244  010D52  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 10245                           
 10246                           ;i2c.c: 185: for(cntr=0; cntr<length-1; ++cntr)
 10247  010D56  0E00               	movlw	0
 10248  010D58  0100               	movlb	0	; () banked
 10249  010D5A  6F70               	movwf	__i2c_read@cntr& (0+255),b
 10250  010D5C  D012               	goto	l18757
 10251  010D5E                     l18751:
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;i2c.c: 186: {
 10255                           ;i2c.c: 187: data[cntr] = _i2c_get();
 10256  010D5E  0100               	movlb	0	; () banked
 10257  010D60  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10258  010D62  0D01               	mullw	1
 10259  010D64  50F3               	movf	prodl,w,c
 10260  010D66  0100               	movlb	0	; () banked
 10261  010D68  2565               	addwf	__i2c_read@data& (0+255),w,b
 10262  010D6A  6ED9               	movwf	fsr2l,c
 10263  010D6C  50F4               	movf	prodh,w,c
 10264  010D6E  0100               	movlb	0	; () banked
 10265  010D70  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10266  010D72  6EDA               	movwf	fsr2h,c
 10267  010D74  EC55  F0A1         	call	__i2c_get	;wreg free
 10268  010D78  6EDF               	movwf	indf2,c
 10269                           
 10270                           ;i2c.c: 188: _i2c_acknowledge();
 10271  010D7A  EC5A  F0A1         	call	__i2c_acknowledge	;wreg free
 10272  010D7E  0100               	movlb	0	; () banked
 10273  010D80  2B70               	incf	__i2c_read@cntr& (0+255),f,b
 10274  010D82                     l18757:
 10275                           
 10276                           ; BSR set to: 0
 10277  010D82  0EFF               	movlw	255
 10278  010D84  0100               	movlb	0	; () banked
 10279  010D86  6F68               	movwf	??__i2c_read& (0+255),b
 10280  010D88  0EFF               	movlw	255
 10281  010D8A  0100               	movlb	0	; () banked
 10282  010D8C  6F69               	movwf	(??__i2c_read+1)& (0+255),b
 10283  010D8E  0100               	movlb	0	; () banked
 10284  010D90  5167               	movf	__i2c_read@length& (0+255),w,b
 10285  010D92  0100               	movlb	0	; () banked
 10286  010D94  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
 10287  010D96  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
 10288  010D98  0100               	movlb	0	; () banked
 10289  010D9A  5168               	movf	??__i2c_read& (0+255),w,b
 10290  010D9C  0100               	movlb	0	; () banked
 10291  010D9E  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
 10292  010DA0  0100               	movlb	0	; () banked
 10293  010DA2  5169               	movf	(??__i2c_read+1)& (0+255),w,b
 10294  010DA4  0100               	movlb	0	; () banked
 10295  010DA6  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
 10296  010DA8  0100               	movlb	0	; () banked
 10297  010DAA  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10298  010DAC  0100               	movlb	0	; () banked
 10299  010DAE  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
 10300  010DB0  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
 10301  010DB2  0100               	movlb	0	; () banked
 10302  010DB4  516A               	movf	(??__i2c_read+2)& (0+255),w,b
 10303  010DB6  0100               	movlb	0	; () banked
 10304  010DB8  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
 10305  010DBA  0100               	movlb	0	; () banked
 10306  010DBC  516D               	movf	(??__i2c_read+5)& (0+255),w,b
 10307  010DBE  0A80               	xorlw	128
 10308  010DC0  0100               	movlb	0	; () banked
 10309  010DC2  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
 10310  010DC4  0100               	movlb	0	; () banked
 10311  010DC6  516B               	movf	(??__i2c_read+3)& (0+255),w,b
 10312  010DC8  0A80               	xorlw	128
 10313  010DCA  0100               	movlb	0	; () banked
 10314  010DCC  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
 10315  010DCE  A0D8               	btfss	status,0,c
 10316  010DD0  D7C6               	goto	l18751
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;i2c.c: 189: }
 10320                           ;i2c.c: 190: data[cntr] = _i2c_get();
 10321                           
 10322                           ; BSR set to: 0
 10323  010DD2  0100               	movlb	0	; () banked
 10324  010DD4  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10325  010DD6  0D01               	mullw	1
 10326  010DD8  50F3               	movf	prodl,w,c
 10327  010DDA  0100               	movlb	0	; () banked
 10328  010DDC  2565               	addwf	__i2c_read@data& (0+255),w,b
 10329  010DDE  6ED9               	movwf	fsr2l,c
 10330  010DE0  50F4               	movf	prodh,w,c
 10331  010DE2  0100               	movlb	0	; () banked
 10332  010DE4  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10333  010DE6  6EDA               	movwf	fsr2h,c
 10334  010DE8  EC55  F0A1         	call	__i2c_get	;wreg free
 10335  010DEC  6EDF               	movwf	indf2,c
 10336                           
 10337                           ;i2c.c: 191: _i2c_not_acknowledge();
 10338  010DEE  EC50  F0A1         	call	__i2c_not_acknowledge	;wreg free
 10339                           
 10340                           ;i2c.c: 193: _i2c_stop();
 10341  010DF2  EC69  F0A1         	call	__i2c_stop	;wreg free
 10342  010DF6  0012               	return		;funcret
 10343  010DF8                     __end_of__i2c_read:
 10344                           	opt stack 0
 10345                           tblptru	equ	0xFF8
 10346                           tblptrh	equ	0xFF7
 10347                           tblptrl	equ	0xFF6
 10348                           tablat	equ	0xFF5
 10349                           prodh	equ	0xFF4
 10350                           prodl	equ	0xFF3
 10351                           intcon3	equ	0xFF0
 10352                           postinc0	equ	0xFEE
 10353                           wreg	equ	0xFE8
 10354                           postdec1	equ	0xFE5
 10355                           plusw1	equ	0xFE3
 10356                           fsr1h	equ	0xFE2
 10357                           fsr1l	equ	0xFE1
 10358                           indf2	equ	0xFDF
 10359                           postinc2	equ	0xFDE
 10360                           postdec2	equ	0xFDD
 10361                           plusw2	equ	0xFDB
 10362                           fsr2h	equ	0xFDA
 10363                           fsr2l	equ	0xFD9
 10364                           status	equ	0xFD8
 10365                           
 10366 ;; *************** function __i2c_eeprom_load_default_calibration *****************
 10367 ;; Defined at:
 10368 ;;		line 645 in file "i2c.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  buffer          2    0[BANK0 ] PTR struct .
 10371 ;;		 -> calibrationParameters(84), 
 10372 ;;  index           1    2[BANK0 ] enum E8142
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;		None
 10375 ;; Return value:  Size  Location     Type
 10376 ;;                  1    wreg      void 
 10377 ;; Registers used:
 10378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10379 ;; Tracked objects:
 10380 ;;		On entry : 0/0
 10381 ;;		On exit  : 0/0
 10382 ;;		Unchanged: 0/0
 10383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10384 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10387 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10388 ;;Total ram usage:        3 bytes
 10389 ;; Hardware stack levels used:    1
 10390 ;; Hardware stack levels required when called:   10
 10391 ;; This function calls:
 10392 ;;		Nothing
 10393 ;; This function is called by:
 10394 ;;		_i2c_eeprom_read_calibration
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text37
 10399  00A8A6                     __ptext37:
 10400                           	opt stack 0
 10401  00A8A6                     __i2c_eeprom_load_default_calibration:
 10402                           	opt stack 18
 10403                           
 10404                           ;i2c.c: 647: switch(index)
 10405                           
 10406                           ;incstack = 0
 10407  00A8A6  D1F1               	goto	l19653
 10408  00A8A8                     l19553:
 10409                           
 10410                           ;i2c.c: 650: (*buffer).NeutralOffset = 0;
 10411  00A8A8  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10412  00A8AC  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10413  00A8B0  0E00               	movlw	0
 10414  00A8B2  6EDE               	movwf	postinc2,c
 10415  00A8B4  0E00               	movlw	0
 10416  00A8B6  6EDD               	movwf	postdec2,c
 10417                           
 10418                           ;i2c.c: 651: (*buffer).NeutralMultiplier = 11;
 10419  00A8B8  0100               	movlb	0	; () banked
 10420  00A8BA  EE20 F002          	lfsr	2,2
 10421  00A8BE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10422  00A8C0  26D9               	addwf	fsr2l,f,c
 10423  00A8C2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10424  00A8C4  22DA               	addwfc	fsr2h,f,c
 10425  00A8C6  0E0B               	movlw	11
 10426  00A8C8  6EDE               	movwf	postinc2,c
 10427  00A8CA  0E00               	movlw	0
 10428  00A8CC  6EDD               	movwf	postdec2,c
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;i2c.c: 652: (*buffer).NeutralShift = 4;
 10432  00A8CE  0100               	movlb	0	; () banked
 10433  00A8D0  EE20 F004          	lfsr	2,4
 10434  00A8D4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10435  00A8D6  26D9               	addwf	fsr2l,f,c
 10436  00A8D8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10437  00A8DA  22DA               	addwfc	fsr2h,f,c
 10438  00A8DC  0E04               	movlw	4
 10439  00A8DE  6EDF               	movwf	indf2,c
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;i2c.c: 653: (*buffer).Offset = 0;
 10443  00A8E0  0100               	movlb	0	; () banked
 10444  00A8E2  EE20 F005          	lfsr	2,5
 10445  00A8E6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10446  00A8E8  26D9               	addwf	fsr2l,f,c
 10447  00A8EA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10448  00A8EC  22DA               	addwfc	fsr2h,f,c
 10449  00A8EE  0E00               	movlw	0
 10450  00A8F0  6EDE               	movwf	postinc2,c
 10451  00A8F2  0E00               	movlw	0
 10452  00A8F4  6EDD               	movwf	postdec2,c
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;i2c.c: 654: (*buffer).Multiplier = 11;
 10456  00A8F6  0100               	movlb	0	; () banked
 10457  00A8F8  EE20 F007          	lfsr	2,7
 10458  00A8FC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10459  00A8FE  26D9               	addwf	fsr2l,f,c
 10460  00A900  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10461  00A902  22DA               	addwfc	fsr2h,f,c
 10462  00A904  0E0B               	movlw	11
 10463  00A906  6EDE               	movwf	postinc2,c
 10464  00A908  0E00               	movlw	0
 10465  00A90A  6EDD               	movwf	postdec2,c
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;i2c.c: 655: (*buffer).Shift = 4;
 10469  00A90C  0100               	movlb	0	; () banked
 10470  00A90E  EE20 F009          	lfsr	2,9
 10471  00A912  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10472  00A914  26D9               	addwf	fsr2l,f,c
 10473  00A916  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10474  00A918  22DA               	addwfc	fsr2h,f,c
 10475  00A91A  0E04               	movlw	4
 10476  00A91C  6EDF               	movwf	indf2,c
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;i2c.c: 656: (*buffer).AutoCalibration = 0;
 10480  00A91E  0100               	movlb	0	; () banked
 10481  00A920  EE20 F00A          	lfsr	2,10
 10482  00A924  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10483  00A926  26D9               	addwf	fsr2l,f,c
 10484  00A928  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10485  00A92A  22DA               	addwfc	fsr2h,f,c
 10486  00A92C  0E00               	movlw	0
 10487  00A92E  6EDE               	movwf	postinc2,c
 10488  00A930  0E00               	movlw	0
 10489  00A932  6EDD               	movwf	postdec2,c
 10490                           
 10491                           ;i2c.c: 657: break;
 10492  00A934  0012               	return	
 10493  00A936                     l19567:
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;i2c.c: 659: (*buffer).NeutralOffset = 0;
 10497  00A936  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10498  00A93A  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10499  00A93E  0E00               	movlw	0
 10500  00A940  6EDE               	movwf	postinc2,c
 10501  00A942  0E00               	movlw	0
 10502  00A944  6EDD               	movwf	postdec2,c
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;i2c.c: 660: (*buffer).NeutralMultiplier = 17;
 10506  00A946  0100               	movlb	0	; () banked
 10507  00A948  EE20 F002          	lfsr	2,2
 10508  00A94C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10509  00A94E  26D9               	addwf	fsr2l,f,c
 10510  00A950  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10511  00A952  22DA               	addwfc	fsr2h,f,c
 10512  00A954  0E11               	movlw	17
 10513  00A956  6EDE               	movwf	postinc2,c
 10514  00A958  0E00               	movlw	0
 10515  00A95A  6EDD               	movwf	postdec2,c
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;i2c.c: 661: (*buffer).NeutralShift = 5;
 10519  00A95C  0100               	movlb	0	; () banked
 10520  00A95E  EE20 F004          	lfsr	2,4
 10521  00A962  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10522  00A964  26D9               	addwf	fsr2l,f,c
 10523  00A966  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10524  00A968  22DA               	addwfc	fsr2h,f,c
 10525  00A96A  0E05               	movlw	5
 10526  00A96C  6EDF               	movwf	indf2,c
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;i2c.c: 662: (*buffer).Offset = 0;
 10530  00A96E  0100               	movlb	0	; () banked
 10531  00A970  EE20 F005          	lfsr	2,5
 10532  00A974  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10533  00A976  26D9               	addwf	fsr2l,f,c
 10534  00A978  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10535  00A97A  22DA               	addwfc	fsr2h,f,c
 10536  00A97C  0E00               	movlw	0
 10537  00A97E  6EDE               	movwf	postinc2,c
 10538  00A980  0E00               	movlw	0
 10539  00A982  6EDD               	movwf	postdec2,c
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;i2c.c: 663: (*buffer).Multiplier = 17;
 10543  00A984  0100               	movlb	0	; () banked
 10544  00A986  EE20 F007          	lfsr	2,7
 10545  00A98A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10546  00A98C  26D9               	addwf	fsr2l,f,c
 10547  00A98E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10548  00A990  22DA               	addwfc	fsr2h,f,c
 10549  00A992  0E11               	movlw	17
 10550  00A994  6EDE               	movwf	postinc2,c
 10551  00A996  0E00               	movlw	0
 10552  00A998  6EDD               	movwf	postdec2,c
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;i2c.c: 664: (*buffer).Shift = 5;
 10556  00A99A  0100               	movlb	0	; () banked
 10557  00A99C  EE20 F009          	lfsr	2,9
 10558  00A9A0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10559  00A9A2  26D9               	addwf	fsr2l,f,c
 10560  00A9A4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10561  00A9A6  22DA               	addwfc	fsr2h,f,c
 10562  00A9A8  0E05               	movlw	5
 10563  00A9AA  6EDF               	movwf	indf2,c
 10564                           
 10565                           ; BSR set to: 0
 10566                           ;i2c.c: 665: (*buffer).AutoCalibration = 0;
 10567  00A9AC  0100               	movlb	0	; () banked
 10568  00A9AE  EE20 F00A          	lfsr	2,10
 10569  00A9B2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10570  00A9B4  26D9               	addwf	fsr2l,f,c
 10571  00A9B6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10572  00A9B8  22DA               	addwfc	fsr2h,f,c
 10573  00A9BA  0E00               	movlw	0
 10574  00A9BC  6EDE               	movwf	postinc2,c
 10575  00A9BE  0E00               	movlw	0
 10576  00A9C0  6EDD               	movwf	postdec2,c
 10577                           
 10578                           ;i2c.c: 666: break;
 10579  00A9C2  0012               	return	
 10580  00A9C4                     l19581:
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;i2c.c: 668: (*buffer).NeutralOffset = 0;
 10584  00A9C4  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10585  00A9C8  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10586  00A9CC  0E00               	movlw	0
 10587  00A9CE  6EDE               	movwf	postinc2,c
 10588  00A9D0  0E00               	movlw	0
 10589  00A9D2  6EDD               	movwf	postdec2,c
 10590                           
 10591                           ; BSR set to: 0
 10592                           ;i2c.c: 669: (*buffer).NeutralMultiplier = 5851;
 10593  00A9D4  0100               	movlb	0	; () banked
 10594  00A9D6  EE20 F002          	lfsr	2,2
 10595  00A9DA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10596  00A9DC  26D9               	addwf	fsr2l,f,c
 10597  00A9DE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10598  00A9E0  22DA               	addwfc	fsr2h,f,c
 10599  00A9E2  0EDB               	movlw	219
 10600  00A9E4  6EDE               	movwf	postinc2,c
 10601  00A9E6  0E16               	movlw	22
 10602  00A9E8  6EDD               	movwf	postdec2,c
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;i2c.c: 670: (*buffer).NeutralShift = 15;
 10606  00A9EA  0100               	movlb	0	; () banked
 10607  00A9EC  EE20 F004          	lfsr	2,4
 10608  00A9F0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10609  00A9F2  26D9               	addwf	fsr2l,f,c
 10610  00A9F4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10611  00A9F6  22DA               	addwfc	fsr2h,f,c
 10612  00A9F8  0E0F               	movlw	15
 10613  00A9FA  6EDF               	movwf	indf2,c
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;i2c.c: 671: (*buffer).Offset = 0;
 10617  00A9FC  0100               	movlb	0	; () banked
 10618  00A9FE  EE20 F005          	lfsr	2,5
 10619  00AA02  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10620  00AA04  26D9               	addwf	fsr2l,f,c
 10621  00AA06  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10622  00AA08  22DA               	addwfc	fsr2h,f,c
 10623  00AA0A  0E00               	movlw	0
 10624  00AA0C  6EDE               	movwf	postinc2,c
 10625  00AA0E  0E00               	movlw	0
 10626  00AA10  6EDD               	movwf	postdec2,c
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;i2c.c: 672: (*buffer).Multiplier = 5851;
 10630  00AA12  0100               	movlb	0	; () banked
 10631  00AA14  EE20 F007          	lfsr	2,7
 10632  00AA18  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10633  00AA1A  26D9               	addwf	fsr2l,f,c
 10634  00AA1C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10635  00AA1E  22DA               	addwfc	fsr2h,f,c
 10636  00AA20  0EDB               	movlw	219
 10637  00AA22  6EDE               	movwf	postinc2,c
 10638  00AA24  0E16               	movlw	22
 10639  00AA26  6EDD               	movwf	postdec2,c
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;i2c.c: 673: (*buffer).Shift = 15;
 10643  00AA28  0100               	movlb	0	; () banked
 10644  00AA2A  EE20 F009          	lfsr	2,9
 10645  00AA2E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10646  00AA30  26D9               	addwf	fsr2l,f,c
 10647  00AA32  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10648  00AA34  22DA               	addwfc	fsr2h,f,c
 10649  00AA36  0E0F               	movlw	15
 10650  00AA38  6EDF               	movwf	indf2,c
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;i2c.c: 674: (*buffer).AutoCalibration = 0;
 10654  00AA3A  0100               	movlb	0	; () banked
 10655  00AA3C  EE20 F00A          	lfsr	2,10
 10656  00AA40  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10657  00AA42  26D9               	addwf	fsr2l,f,c
 10658  00AA44  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10659  00AA46  22DA               	addwfc	fsr2h,f,c
 10660  00AA48  0E00               	movlw	0
 10661  00AA4A  6EDE               	movwf	postinc2,c
 10662  00AA4C  0E00               	movlw	0
 10663  00AA4E  6EDD               	movwf	postdec2,c
 10664                           
 10665                           ;i2c.c: 675: break;
 10666  00AA50  0012               	return	
 10667  00AA52                     l19595:
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;i2c.c: 677: (*buffer).NeutralOffset = 0;
 10671  00AA52  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10672  00AA56  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10673  00AA5A  0E00               	movlw	0
 10674  00AA5C  6EDE               	movwf	postinc2,c
 10675  00AA5E  0E00               	movlw	0
 10676  00AA60  6EDD               	movwf	postdec2,c
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;i2c.c: 678: (*buffer).NeutralMultiplier = 5851;
 10680  00AA62  0100               	movlb	0	; () banked
 10681  00AA64  EE20 F002          	lfsr	2,2
 10682  00AA68  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10683  00AA6A  26D9               	addwf	fsr2l,f,c
 10684  00AA6C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10685  00AA6E  22DA               	addwfc	fsr2h,f,c
 10686  00AA70  0EDB               	movlw	219
 10687  00AA72  6EDE               	movwf	postinc2,c
 10688  00AA74  0E16               	movlw	22
 10689  00AA76  6EDD               	movwf	postdec2,c
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;i2c.c: 679: (*buffer).NeutralShift = 15;
 10693  00AA78  0100               	movlb	0	; () banked
 10694  00AA7A  EE20 F004          	lfsr	2,4
 10695  00AA7E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10696  00AA80  26D9               	addwf	fsr2l,f,c
 10697  00AA82  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10698  00AA84  22DA               	addwfc	fsr2h,f,c
 10699  00AA86  0E0F               	movlw	15
 10700  00AA88  6EDF               	movwf	indf2,c
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;i2c.c: 680: (*buffer).Offset = 0;
 10704  00AA8A  0100               	movlb	0	; () banked
 10705  00AA8C  EE20 F005          	lfsr	2,5
 10706  00AA90  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10707  00AA92  26D9               	addwf	fsr2l,f,c
 10708  00AA94  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10709  00AA96  22DA               	addwfc	fsr2h,f,c
 10710  00AA98  0E00               	movlw	0
 10711  00AA9A  6EDE               	movwf	postinc2,c
 10712  00AA9C  0E00               	movlw	0
 10713  00AA9E  6EDD               	movwf	postdec2,c
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;i2c.c: 681: (*buffer).Multiplier = 5851;
 10717  00AAA0  0100               	movlb	0	; () banked
 10718  00AAA2  EE20 F007          	lfsr	2,7
 10719  00AAA6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10720  00AAA8  26D9               	addwf	fsr2l,f,c
 10721  00AAAA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10722  00AAAC  22DA               	addwfc	fsr2h,f,c
 10723  00AAAE  0EDB               	movlw	219
 10724  00AAB0  6EDE               	movwf	postinc2,c
 10725  00AAB2  0E16               	movlw	22
 10726  00AAB4  6EDD               	movwf	postdec2,c
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;i2c.c: 682: (*buffer).Shift = 15;
 10730  00AAB6  0100               	movlb	0	; () banked
 10731  00AAB8  EE20 F009          	lfsr	2,9
 10732  00AABC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10733  00AABE  26D9               	addwf	fsr2l,f,c
 10734  00AAC0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10735  00AAC2  22DA               	addwfc	fsr2h,f,c
 10736  00AAC4  0E0F               	movlw	15
 10737  00AAC6  6EDF               	movwf	indf2,c
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;i2c.c: 683: (*buffer).AutoCalibration = 0;
 10741  00AAC8  0100               	movlb	0	; () banked
 10742  00AACA  EE20 F00A          	lfsr	2,10
 10743  00AACE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10744  00AAD0  26D9               	addwf	fsr2l,f,c
 10745  00AAD2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10746  00AAD4  22DA               	addwfc	fsr2h,f,c
 10747  00AAD6  0E00               	movlw	0
 10748  00AAD8  6EDE               	movwf	postinc2,c
 10749  00AADA  0E00               	movlw	0
 10750  00AADC  6EDD               	movwf	postdec2,c
 10751                           
 10752                           ;i2c.c: 684: break;
 10753  00AADE  0012               	return	
 10754  00AAE0                     l19609:
 10755                           
 10756                           ; BSR set to: 0
 10757                           ;i2c.c: 686: (*buffer).NeutralOffset = -13769;
 10758  00AAE0  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10759  00AAE4  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10760  00AAE8  0E37               	movlw	55
 10761  00AAEA  6EDE               	movwf	postinc2,c
 10762  00AAEC  0ECA               	movlw	202
 10763  00AAEE  6EDD               	movwf	postdec2,c
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;i2c.c: 687: (*buffer).NeutralMultiplier = -11479;
 10767  00AAF0  0100               	movlb	0	; () banked
 10768  00AAF2  EE20 F002          	lfsr	2,2
 10769  00AAF6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10770  00AAF8  26D9               	addwf	fsr2l,f,c
 10771  00AAFA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10772  00AAFC  22DA               	addwfc	fsr2h,f,c
 10773  00AAFE  0E29               	movlw	41
 10774  00AB00  6EDE               	movwf	postinc2,c
 10775  00AB02  0ED3               	movlw	211
 10776  00AB04  6EDD               	movwf	postdec2,c
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;i2c.c: 688: (*buffer).NeutralShift = 13;
 10780  00AB06  0100               	movlb	0	; () banked
 10781  00AB08  EE20 F004          	lfsr	2,4
 10782  00AB0C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10783  00AB0E  26D9               	addwf	fsr2l,f,c
 10784  00AB10  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10785  00AB12  22DA               	addwfc	fsr2h,f,c
 10786  00AB14  0E0D               	movlw	13
 10787  00AB16  6EDF               	movwf	indf2,c
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;i2c.c: 689: (*buffer).Offset = -13769;
 10791  00AB18  0100               	movlb	0	; () banked
 10792  00AB1A  EE20 F005          	lfsr	2,5
 10793  00AB1E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10794  00AB20  26D9               	addwf	fsr2l,f,c
 10795  00AB22  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10796  00AB24  22DA               	addwfc	fsr2h,f,c
 10797  00AB26  0E37               	movlw	55
 10798  00AB28  6EDE               	movwf	postinc2,c
 10799  00AB2A  0ECA               	movlw	202
 10800  00AB2C  6EDD               	movwf	postdec2,c
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;i2c.c: 690: (*buffer).Multiplier = -11479;
 10804  00AB2E  0100               	movlb	0	; () banked
 10805  00AB30  EE20 F007          	lfsr	2,7
 10806  00AB34  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10807  00AB36  26D9               	addwf	fsr2l,f,c
 10808  00AB38  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10809  00AB3A  22DA               	addwfc	fsr2h,f,c
 10810  00AB3C  0E29               	movlw	41
 10811  00AB3E  6EDE               	movwf	postinc2,c
 10812  00AB40  0ED3               	movlw	211
 10813  00AB42  6EDD               	movwf	postdec2,c
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;i2c.c: 691: (*buffer).Shift = 13;
 10817  00AB44  0100               	movlb	0	; () banked
 10818  00AB46  EE20 F009          	lfsr	2,9
 10819  00AB4A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10820  00AB4C  26D9               	addwf	fsr2l,f,c
 10821  00AB4E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10822  00AB50  22DA               	addwfc	fsr2h,f,c
 10823  00AB52  0E0D               	movlw	13
 10824  00AB54  6EDF               	movwf	indf2,c
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;i2c.c: 692: (*buffer).AutoCalibration = 0;
 10828  00AB56  0100               	movlb	0	; () banked
 10829  00AB58  EE20 F00A          	lfsr	2,10
 10830  00AB5C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10831  00AB5E  26D9               	addwf	fsr2l,f,c
 10832  00AB60  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10833  00AB62  22DA               	addwfc	fsr2h,f,c
 10834  00AB64  0E00               	movlw	0
 10835  00AB66  6EDE               	movwf	postinc2,c
 10836  00AB68  0E00               	movlw	0
 10837  00AB6A  6EDD               	movwf	postdec2,c
 10838                           
 10839                           ;i2c.c: 693: break;
 10840  00AB6C  0012               	return	
 10841  00AB6E                     l19623:
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;i2c.c: 695: (*buffer).NeutralOffset = -13769;
 10845  00AB6E  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10846  00AB72  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10847  00AB76  0E37               	movlw	55
 10848  00AB78  6EDE               	movwf	postinc2,c
 10849  00AB7A  0ECA               	movlw	202
 10850  00AB7C  6EDD               	movwf	postdec2,c
 10851                           
 10852                           ; BSR set to: 0
 10853                           ;i2c.c: 696: (*buffer).NeutralMultiplier = -11479;
 10854  00AB7E  0100               	movlb	0	; () banked
 10855  00AB80  EE20 F002          	lfsr	2,2
 10856  00AB84  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10857  00AB86  26D9               	addwf	fsr2l,f,c
 10858  00AB88  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10859  00AB8A  22DA               	addwfc	fsr2h,f,c
 10860  00AB8C  0E29               	movlw	41
 10861  00AB8E  6EDE               	movwf	postinc2,c
 10862  00AB90  0ED3               	movlw	211
 10863  00AB92  6EDD               	movwf	postdec2,c
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;i2c.c: 697: (*buffer).NeutralShift = 13;
 10867  00AB94  0100               	movlb	0	; () banked
 10868  00AB96  EE20 F004          	lfsr	2,4
 10869  00AB9A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10870  00AB9C  26D9               	addwf	fsr2l,f,c
 10871  00AB9E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10872  00ABA0  22DA               	addwfc	fsr2h,f,c
 10873  00ABA2  0E0D               	movlw	13
 10874  00ABA4  6EDF               	movwf	indf2,c
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;i2c.c: 698: (*buffer).Offset = -13769;
 10878  00ABA6  0100               	movlb	0	; () banked
 10879  00ABA8  EE20 F005          	lfsr	2,5
 10880  00ABAC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10881  00ABAE  26D9               	addwf	fsr2l,f,c
 10882  00ABB0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10883  00ABB2  22DA               	addwfc	fsr2h,f,c
 10884  00ABB4  0E37               	movlw	55
 10885  00ABB6  6EDE               	movwf	postinc2,c
 10886  00ABB8  0ECA               	movlw	202
 10887  00ABBA  6EDD               	movwf	postdec2,c
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;i2c.c: 699: (*buffer).Multiplier = -11479;
 10891  00ABBC  0100               	movlb	0	; () banked
 10892  00ABBE  EE20 F007          	lfsr	2,7
 10893  00ABC2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10894  00ABC4  26D9               	addwf	fsr2l,f,c
 10895  00ABC6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10896  00ABC8  22DA               	addwfc	fsr2h,f,c
 10897  00ABCA  0E29               	movlw	41
 10898  00ABCC  6EDE               	movwf	postinc2,c
 10899  00ABCE  0ED3               	movlw	211
 10900  00ABD0  6EDD               	movwf	postdec2,c
 10901                           
 10902                           ; BSR set to: 0
 10903                           ;i2c.c: 700: (*buffer).Shift = 13;
 10904  00ABD2  0100               	movlb	0	; () banked
 10905  00ABD4  EE20 F009          	lfsr	2,9
 10906  00ABD8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10907  00ABDA  26D9               	addwf	fsr2l,f,c
 10908  00ABDC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10909  00ABDE  22DA               	addwfc	fsr2h,f,c
 10910  00ABE0  0E0D               	movlw	13
 10911  00ABE2  6EDF               	movwf	indf2,c
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;i2c.c: 701: (*buffer).AutoCalibration = 0;
 10915  00ABE4  0100               	movlb	0	; () banked
 10916  00ABE6  EE20 F00A          	lfsr	2,10
 10917  00ABEA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10918  00ABEC  26D9               	addwf	fsr2l,f,c
 10919  00ABEE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10920  00ABF0  22DA               	addwfc	fsr2h,f,c
 10921  00ABF2  0E00               	movlw	0
 10922  00ABF4  6EDE               	movwf	postinc2,c
 10923  00ABF6  0E00               	movlw	0
 10924  00ABF8  6EDD               	movwf	postdec2,c
 10925                           
 10926                           ;i2c.c: 702: break;
 10927  00ABFA  0012               	return	
 10928  00ABFC                     l19637:
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;i2c.c: 704: (*buffer).NeutralOffset = -13769;
 10932  00ABFC  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10933  00AC00  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10934  00AC04  0E37               	movlw	55
 10935  00AC06  6EDE               	movwf	postinc2,c
 10936  00AC08  0ECA               	movlw	202
 10937  00AC0A  6EDD               	movwf	postdec2,c
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;i2c.c: 705: (*buffer).NeutralMultiplier = -11479;
 10941  00AC0C  0100               	movlb	0	; () banked
 10942  00AC0E  EE20 F002          	lfsr	2,2
 10943  00AC12  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10944  00AC14  26D9               	addwf	fsr2l,f,c
 10945  00AC16  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10946  00AC18  22DA               	addwfc	fsr2h,f,c
 10947  00AC1A  0E29               	movlw	41
 10948  00AC1C  6EDE               	movwf	postinc2,c
 10949  00AC1E  0ED3               	movlw	211
 10950  00AC20  6EDD               	movwf	postdec2,c
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;i2c.c: 706: (*buffer).NeutralShift = 13;
 10954  00AC22  0100               	movlb	0	; () banked
 10955  00AC24  EE20 F004          	lfsr	2,4
 10956  00AC28  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10957  00AC2A  26D9               	addwf	fsr2l,f,c
 10958  00AC2C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10959  00AC2E  22DA               	addwfc	fsr2h,f,c
 10960  00AC30  0E0D               	movlw	13
 10961  00AC32  6EDF               	movwf	indf2,c
 10962                           
 10963                           ; BSR set to: 0
 10964                           ;i2c.c: 707: (*buffer).Offset = -13769;
 10965  00AC34  0100               	movlb	0	; () banked
 10966  00AC36  EE20 F005          	lfsr	2,5
 10967  00AC3A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10968  00AC3C  26D9               	addwf	fsr2l,f,c
 10969  00AC3E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10970  00AC40  22DA               	addwfc	fsr2h,f,c
 10971  00AC42  0E37               	movlw	55
 10972  00AC44  6EDE               	movwf	postinc2,c
 10973  00AC46  0ECA               	movlw	202
 10974  00AC48  6EDD               	movwf	postdec2,c
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;i2c.c: 708: (*buffer).Multiplier = -11479;
 10978  00AC4A  0100               	movlb	0	; () banked
 10979  00AC4C  EE20 F007          	lfsr	2,7
 10980  00AC50  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10981  00AC52  26D9               	addwf	fsr2l,f,c
 10982  00AC54  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10983  00AC56  22DA               	addwfc	fsr2h,f,c
 10984  00AC58  0E29               	movlw	41
 10985  00AC5A  6EDE               	movwf	postinc2,c
 10986  00AC5C  0ED3               	movlw	211
 10987  00AC5E  6EDD               	movwf	postdec2,c
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;i2c.c: 709: (*buffer).Shift = 13;
 10991  00AC60  0100               	movlb	0	; () banked
 10992  00AC62  EE20 F009          	lfsr	2,9
 10993  00AC66  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10994  00AC68  26D9               	addwf	fsr2l,f,c
 10995  00AC6A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10996  00AC6C  22DA               	addwfc	fsr2h,f,c
 10997  00AC6E  0E0D               	movlw	13
 10998  00AC70  6EDF               	movwf	indf2,c
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;i2c.c: 710: (*buffer).AutoCalibration = 0;
 11002  00AC72  0100               	movlb	0	; () banked
 11003  00AC74  EE20 F00A          	lfsr	2,10
 11004  00AC78  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11005  00AC7A  26D9               	addwf	fsr2l,f,c
 11006  00AC7C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11007  00AC7E  22DA               	addwfc	fsr2h,f,c
 11008  00AC80  0E00               	movlw	0
 11009  00AC82  6EDE               	movwf	postinc2,c
 11010  00AC84  0E00               	movlw	0
 11011  00AC86  6EDD               	movwf	postdec2,c
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;i2c.c: 712: }
 11015                           
 11016                           ;i2c.c: 711: break;
 11017  00AC88  0012               	return	
 11018  00AC8A                     l19653:
 11019  00AC8A  0100               	movlb	0	; () banked
 11020  00AC8C  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 11021                           
 11022                           ; Switch size 1, requested type "space"
 11023                           ; Number of cases is 7, Range of values is 0 to 6
 11024                           ; switch strategies available:
 11025                           ; Name         Instructions Cycles
 11026                           ; simple_byte           22    12 (average)
 11027                           ;	Chosen strategy is simple_byte
 11028  00AC8E  0A00               	xorlw	0	; case 0
 11029  00AC90  B4D8               	btfsc	status,2,c
 11030  00AC92  D60A               	goto	l19553
 11031  00AC94  0A01               	xorlw	1	; case 1
 11032  00AC96  B4D8               	btfsc	status,2,c
 11033  00AC98  D64E               	goto	l19567
 11034  00AC9A  0A03               	xorlw	3	; case 2
 11035  00AC9C  B4D8               	btfsc	status,2,c
 11036  00AC9E  D692               	goto	l19581
 11037  00ACA0  0A01               	xorlw	1	; case 3
 11038  00ACA2  B4D8               	btfsc	status,2,c
 11039  00ACA4  D6D6               	goto	l19595
 11040  00ACA6  0A07               	xorlw	7	; case 4
 11041  00ACA8  B4D8               	btfsc	status,2,c
 11042  00ACAA  D71A               	goto	l19609
 11043  00ACAC  0A01               	xorlw	1	; case 5
 11044  00ACAE  B4D8               	btfsc	status,2,c
 11045  00ACB0  D75E               	goto	l19623
 11046  00ACB2  0A03               	xorlw	3	; case 6
 11047  00ACB4  A4D8               	btfss	status,2,c
 11048  00ACB6  0012               	return	
 11049  00ACB8  D7A1               	goto	l19637
 11050  00ACBA                     __end_of__i2c_eeprom_load_default_calibration:
 11051                           	opt stack 0
 11052                           tblptru	equ	0xFF8
 11053                           tblptrh	equ	0xFF7
 11054                           tblptrl	equ	0xFF6
 11055                           tablat	equ	0xFF5
 11056                           prodh	equ	0xFF4
 11057                           prodl	equ	0xFF3
 11058                           intcon3	equ	0xFF0
 11059                           postinc0	equ	0xFEE
 11060                           wreg	equ	0xFE8
 11061                           postdec1	equ	0xFE5
 11062                           plusw1	equ	0xFE3
 11063                           fsr1h	equ	0xFE2
 11064                           fsr1l	equ	0xFE1
 11065                           indf2	equ	0xFDF
 11066                           postinc2	equ	0xFDE
 11067                           postdec2	equ	0xFDD
 11068                           plusw2	equ	0xFDB
 11069                           fsr2h	equ	0xFDA
 11070                           fsr2l	equ	0xFD9
 11071                           status	equ	0xFD8
 11072                           
 11073 ;; *************** function _flash_init *****************
 11074 ;; Defined at:
 11075 ;;		line 448 in file "flash.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;		None
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      void 
 11082 ;; Registers used:
 11083 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11093 ;;Total ram usage:        0 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:   14
 11096 ;; This function calls:
 11097 ;;		__flash_set_page_size
 11098 ;; This function is called by:
 11099 ;;		_system_init
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text38
 11104  0133D4                     __ptext38:
 11105                           	opt stack 0
 11106  0133D4                     _flash_init:
 11107                           	opt stack 15
 11108                           
 11109                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;incstack = 0
 11113  0133D4  0E55               	movlw	85
 11114  0133D6  6EA7               	movwf	4007,c	;volatile
 11115  0133D8  0EAA               	movlw	170
 11116  0133DA  6EA7               	movwf	4007,c	;volatile
 11117  0133DC  010E               	movlb	14	; () banked
 11118  0133DE  91BF               	bcf	191,0,b	;volatile
 11119                           
 11120                           ;flash.c: 452: RPINR21 = 23;
 11121  0133E0  0E17               	movlw	23
 11122  0133E2  010E               	movlb	14	; () banked
 11123  0133E4  6FFC               	movwf	252,b	;volatile
 11124                           
 11125                           ;flash.c: 453: RPOR21 = 10;
 11126  0133E6  0E0A               	movlw	10
 11127  0133E8  010E               	movlb	14	; () banked
 11128  0133EA  6FD5               	movwf	213,b	;volatile
 11129                           
 11130                           ;flash.c: 455: RPOR22 = 11;
 11131  0133EC  0E0B               	movlw	11
 11132  0133EE  010E               	movlb	14	; () banked
 11133  0133F0  6FD6               	movwf	214,b	;volatile
 11134                           
 11135                           ;flash.c: 456: RPINR22 = 22;
 11136  0133F2  0E16               	movlw	22
 11137  0133F4  010E               	movlb	14	; () banked
 11138  0133F6  6FFD               	movwf	253,b	;volatile
 11139                           
 11140                           ;flash.c: 457: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11141  0133F8  0E55               	movlw	85
 11142  0133FA  6EA7               	movwf	4007,c	;volatile
 11143  0133FC  0EAA               	movlw	170
 11144  0133FE  6EA7               	movwf	4007,c	;volatile
 11145                           
 11146                           ; BSR set to: 14
 11147  013400  010E               	movlb	14	; () banked
 11148  013402  81BF               	bsf	191,0,b	;volatile
 11149                           
 11150                           ; BSR set to: 14
 11151                           ;flash.c: 460: SSP2STATbits.SMP = 1;
 11152  013404  8E73               	bsf	3955,7,c	;volatile
 11153                           
 11154                           ; BSR set to: 14
 11155                           ;flash.c: 461: SSP2STATbits.CKE = 1;
 11156  013406  8C73               	bsf	3955,6,c	;volatile
 11157                           
 11158                           ; BSR set to: 14
 11159                           ;flash.c: 462: SSP2CON1bits.CKP = 0;
 11160  013408  9872               	bcf	3954,4,c	;volatile
 11161                           
 11162                           ; BSR set to: 14
 11163                           ;flash.c: 463: SSP2CON1bits.SSPM =0b0000;
 11164  01340A  9072               	bcf	3954,0,c	;volatile
 11165  01340C  9272               	bcf	3954,1,c	;volatile
 11166  01340E  9472               	bcf	3954,2,c	;volatile
 11167  013410  9672               	bcf	3954,3,c	;volatile
 11168                           
 11169                           ; BSR set to: 14
 11170                           ;flash.c: 464: SSP2CON1bits.SSPEN = 1;
 11171  013412  8A72               	bsf	3954,5,c	;volatile
 11172                           
 11173                           ;flash.c: 467: power_state = FLASH_POWER_STATE_NORMAL;
 11174  013414  0E00               	movlw	0
 11175  013416  0100               	movlb	0	; () banked
 11176  013418  6FDF               	movwf	_power_state& (0+255),b
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;flash.c: 470: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 11180  01341A  0E00               	movlw	0
 11181  01341C  ECFC  F08E         	call	__flash_set_page_size
 11182  013420  0012               	return		;funcret
 11183  013422                     __end_of_flash_init:
 11184                           	opt stack 0
 11185                           tblptru	equ	0xFF8
 11186                           tblptrh	equ	0xFF7
 11187                           tblptrl	equ	0xFF6
 11188                           tablat	equ	0xFF5
 11189                           prodh	equ	0xFF4
 11190                           prodl	equ	0xFF3
 11191                           intcon3	equ	0xFF0
 11192                           postinc0	equ	0xFEE
 11193                           wreg	equ	0xFE8
 11194                           postdec1	equ	0xFE5
 11195                           plusw1	equ	0xFE3
 11196                           fsr1h	equ	0xFE2
 11197                           fsr1l	equ	0xFE1
 11198                           indf2	equ	0xFDF
 11199                           postinc2	equ	0xFDE
 11200                           postdec2	equ	0xFDD
 11201                           plusw2	equ	0xFDB
 11202                           fsr2h	equ	0xFDA
 11203                           fsr2l	equ	0xFD9
 11204                           status	equ	0xFD8
 11205                           
 11206 ;; *************** function __flash_set_page_size *****************
 11207 ;; Defined at:
 11208 ;;		line 260 in file "flash.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;  size            1    wreg     enum E8327
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  size            1   23[BANK0 ] enum E8327
 11213 ;;  command         4   19[BANK0 ] unsigned char [4]
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11224 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11226 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11227 ;;Total ram usage:        5 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:   13
 11230 ;; This function calls:
 11231 ;;		__flash_spi_tx
 11232 ;;		_flash_is_busy
 11233 ;;		_memcpy
 11234 ;; This function is called by:
 11235 ;;		_flash_init
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text39
 11240  011DF8                     __ptext39:
 11241                           	opt stack 0
 11242  011DF8                     __flash_set_page_size:
 11243                           	opt stack 15
 11244                           
 11245                           ;incstack = 0
 11246                           ;__flash_set_page_size@size stored from wreg
 11247  011DF8  0100               	movlb	0	; () banked
 11248  011DFA  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 11249  011DFC                     l19945:
 11250  011DFC  EC85  F09F         	call	_flash_is_busy	;wreg free
 11251  011E00  0900               	iorlw	0
 11252  011E02  A4D8               	btfss	status,2,c
 11253  011E04  D7FB               	goto	l19945
 11254                           
 11255                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
 11256  011E06  0100               	movlb	0	; () banked
 11257  011E08  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 11258  011E0A  0100               	movlb	0	; () banked
 11259  011E0C  A4D8               	btfss	status,2,c
 11260  011E0E  D013               	goto	l19951
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
 11264  011E10  0E73               	movlw	low __flash_set_page_size@command
 11265  011E12  0100               	movlb	0	; () banked
 11266  011E14  6F60               	movwf	memcpy@d1& (0+255),b
 11267  011E16  0E00               	movlw	high __flash_set_page_size@command
 11268  011E18  0100               	movlb	0	; () banked
 11269  011E1A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11270  011E1C  0E2E               	movlw	low _flash_command_pagesize_512
 11271  011E1E  0100               	movlb	0	; () banked
 11272  011E20  6F62               	movwf	memcpy@s1& (0+255),b
 11273  011E22  0E94               	movlw	high _flash_command_pagesize_512
 11274  011E24  0100               	movlb	0	; () banked
 11275  011E26  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11276  011E28  0E00               	movlw	0
 11277  011E2A  0100               	movlb	0	; () banked
 11278  011E2C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11279  011E2E  0E04               	movlw	4
 11280  011E30  6F64               	movwf	memcpy@n& (0+255),b
 11281  011E32  EC5C  F095         	call	_memcpy	;wreg free
 11282  011E36                     l19951:
 11283                           
 11284                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
 11285  011E36  0100               	movlb	0	; () banked
 11286  011E38  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 11287  011E3A  A4D8               	btfss	status,2,c
 11288  011E3C  D013               	goto	l19955
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
 11292  011E3E  0E73               	movlw	low __flash_set_page_size@command
 11293  011E40  0100               	movlb	0	; () banked
 11294  011E42  6F60               	movwf	memcpy@d1& (0+255),b
 11295  011E44  0E00               	movlw	high __flash_set_page_size@command
 11296  011E46  0100               	movlb	0	; () banked
 11297  011E48  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11298  011E4A  0E2A               	movlw	low _flash_command_pagesize_528
 11299  011E4C  0100               	movlb	0	; () banked
 11300  011E4E  6F62               	movwf	memcpy@s1& (0+255),b
 11301  011E50  0E94               	movlw	high _flash_command_pagesize_528
 11302  011E52  0100               	movlb	0	; () banked
 11303  011E54  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11304  011E56  0E00               	movlw	0
 11305  011E58  0100               	movlb	0	; () banked
 11306  011E5A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11307  011E5C  0E04               	movlw	4
 11308  011E5E  6F64               	movwf	memcpy@n& (0+255),b
 11309  011E60  EC5C  F095         	call	_memcpy	;wreg free
 11310  011E64                     l19955:
 11311                           
 11312                           ;flash.c: 274: _flash_spi_tx(command, 4);
 11313  011E64  0E73               	movlw	low __flash_set_page_size@command
 11314  011E66  0100               	movlb	0	; () banked
 11315  011E68  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 11316  011E6A  0E00               	movlw	high __flash_set_page_size@command
 11317  011E6C  0100               	movlb	0	; () banked
 11318  011E6E  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 11319  011E70  0E00               	movlw	0
 11320  011E72  0100               	movlb	0	; () banked
 11321  011E74  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 11322  011E76  0E04               	movlw	4
 11323  011E78  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 11324  011E7A  ECBE  F094         	call	__flash_spi_tx	;wreg free
 11325  011E7E  0012               	return		;funcret
 11326  011E80                     __end_of__flash_set_page_size:
 11327                           	opt stack 0
 11328                           tblptru	equ	0xFF8
 11329                           tblptrh	equ	0xFF7
 11330                           tblptrl	equ	0xFF6
 11331                           tablat	equ	0xFF5
 11332                           prodh	equ	0xFF4
 11333                           prodl	equ	0xFF3
 11334                           intcon3	equ	0xFF0
 11335                           postinc0	equ	0xFEE
 11336                           wreg	equ	0xFE8
 11337                           postdec1	equ	0xFE5
 11338                           plusw1	equ	0xFE3
 11339                           fsr1h	equ	0xFE2
 11340                           fsr1l	equ	0xFE1
 11341                           indf2	equ	0xFDF
 11342                           postinc2	equ	0xFDE
 11343                           postdec2	equ	0xFDD
 11344                           plusw2	equ	0xFDB
 11345                           fsr2h	equ	0xFDA
 11346                           fsr2l	equ	0xFD9
 11347                           status	equ	0xFD8
 11348                           
 11349 ;; *************** function _buck_init *****************
 11350 ;; Defined at:
 11351 ;;		line 543 in file "buck.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;Total ram usage:        0 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:   11
 11372 ;; This function calls:
 11373 ;;		__buck_pin_init
 11374 ;;		__buck_timer2_init
 11375 ;; This function is called by:
 11376 ;;		_system_init
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text40
 11381  014264                     __ptext40:
 11382                           	opt stack 0
 11383  014264                     _buck_init:
 11384                           	opt stack 18
 11385                           
 11386                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 11387                           
 11388                           ;incstack = 0
 11389  014264  0E00               	movlw	0
 11390  014266  6E1C               	movwf	_buck_status,c
 11391                           
 11392                           ;buck.c: 546: _buck_timer2_init();
 11393  014268  EC66  F0A0         	call	__buck_timer2_init	;wreg free
 11394                           
 11395                           ;buck.c: 547: _buck_pin_init();
 11396  01426C  EC5C  F09C         	call	__buck_pin_init	;wreg free
 11397  014270  0012               	return		;funcret
 11398  014272                     __end_of_buck_init:
 11399                           	opt stack 0
 11400                           tblptru	equ	0xFF8
 11401                           tblptrh	equ	0xFF7
 11402                           tblptrl	equ	0xFF6
 11403                           tablat	equ	0xFF5
 11404                           prodh	equ	0xFF4
 11405                           prodl	equ	0xFF3
 11406                           intcon3	equ	0xFF0
 11407                           postinc0	equ	0xFEE
 11408                           wreg	equ	0xFE8
 11409                           postdec1	equ	0xFE5
 11410                           plusw1	equ	0xFE3
 11411                           fsr1h	equ	0xFE2
 11412                           fsr1l	equ	0xFE1
 11413                           indf2	equ	0xFDF
 11414                           postinc2	equ	0xFDE
 11415                           postdec2	equ	0xFDD
 11416                           plusw2	equ	0xFDB
 11417                           fsr2h	equ	0xFDA
 11418                           fsr2l	equ	0xFD9
 11419                           status	equ	0xFD8
 11420                           
 11421 ;; *************** function __buck_timer2_init *****************
 11422 ;; Defined at:
 11423 ;;		line 64 in file "buck.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		None
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:   10
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_buck_init
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text41
 11452  0140CC                     __ptext41:
 11453                           	opt stack 0
 11454  0140CC                     __buck_timer2_init:
 11455                           	opt stack 18
 11456                           
 11457                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 11458                           
 11459                           ;incstack = 0
 11460  0140CC  010F               	movlb	15	; () banked
 11461  0140CE  9152               	bcf	82,0,b	;volatile
 11462  0140D0  9352               	bcf	82,1,b	;volatile
 11463  0140D2  9552               	bcf	82,2,b	;volatile
 11464                           
 11465                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 11466  0140D4  86CA               	bsf	4042,3,c	;volatile
 11467  0140D6  88CA               	bsf	4042,4,c	;volatile
 11468  0140D8  8ACA               	bsf	4042,5,c	;volatile
 11469  0140DA  8CCA               	bsf	4042,6,c	;volatile
 11470                           
 11471                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 11472  0140DC  92CA               	bcf	4042,1,c	;volatile
 11473                           
 11474                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 11475  0140DE  90CA               	bcf	4042,0,c	;volatile
 11476                           
 11477                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 11478  0140E0  94CA               	bcf	4042,2,c	;volatile
 11479                           
 11480                           ; BSR set to: 15
 11481  0140E2  0012               	return		;funcret
 11482  0140E4                     __end_of__buck_timer2_init:
 11483                           	opt stack 0
 11484                           tblptru	equ	0xFF8
 11485                           tblptrh	equ	0xFF7
 11486                           tblptrl	equ	0xFF6
 11487                           tablat	equ	0xFF5
 11488                           prodh	equ	0xFF4
 11489                           prodl	equ	0xFF3
 11490                           intcon3	equ	0xFF0
 11491                           postinc0	equ	0xFEE
 11492                           wreg	equ	0xFE8
 11493                           postdec1	equ	0xFE5
 11494                           plusw1	equ	0xFE3
 11495                           fsr1h	equ	0xFE2
 11496                           fsr1l	equ	0xFE1
 11497                           indf2	equ	0xFDF
 11498                           postinc2	equ	0xFDE
 11499                           postdec2	equ	0xFDD
 11500                           plusw2	equ	0xFDB
 11501                           fsr2h	equ	0xFDA
 11502                           fsr2l	equ	0xFD9
 11503                           status	equ	0xFD8
 11504                           
 11505 ;; *************** function __buck_pin_init *****************
 11506 ;; Defined at:
 11507 ;;		line 41 in file "buck.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;		None
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;		None
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  1    wreg      void 
 11514 ;; Registers used:
 11515 ;;		wreg, status,2
 11516 ;; Tracked objects:
 11517 ;;		On entry : 0/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11525 ;;Total ram usage:        0 bytes
 11526 ;; Hardware stack levels used:    1
 11527 ;; Hardware stack levels required when called:   10
 11528 ;; This function calls:
 11529 ;;		Nothing
 11530 ;; This function is called by:
 11531 ;;		_buck_init
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text42
 11536  0138B8                     __ptext42:
 11537                           	opt stack 0
 11538  0138B8                     __buck_pin_init:
 11539                           	opt stack 18
 11540                           
 11541                           ;buck.c: 44: LATBbits.LB1 = 0;
 11542                           
 11543                           ; BSR set to: 15
 11544                           ;incstack = 0
 11545  0138B8  928A               	bcf	3978,1,c	;volatile
 11546                           
 11547                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 11548  0138BA  9293               	bcf	3987,1,c	;volatile
 11549                           
 11550                           ;buck.c: 46: LATBbits.LB2 = 0;
 11551  0138BC  948A               	bcf	3978,2,c	;volatile
 11552                           
 11553                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 11554  0138BE  9493               	bcf	3987,2,c	;volatile
 11555                           
 11556                           ;buck.c: 48: LATBbits.LB3 = 0;
 11557  0138C0  968A               	bcf	3978,3,c	;volatile
 11558                           
 11559                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 11560  0138C2  9693               	bcf	3987,3,c	;volatile
 11561                           
 11562                           ;buck.c: 52: LATBbits.LATB2 = 0;
 11563  0138C4  948A               	bcf	3978,2,c	;volatile
 11564                           
 11565                           ;buck.c: 53: LATBbits.LATB1 = 0;
 11566  0138C6  928A               	bcf	3978,1,c	;volatile
 11567                           
 11568                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11569  0138C8  0E55               	movlw	85
 11570  0138CA  6EA7               	movwf	4007,c	;volatile
 11571  0138CC  0EAA               	movlw	170
 11572  0138CE  6EA7               	movwf	4007,c	;volatile
 11573  0138D0  010E               	movlb	14	; () banked
 11574  0138D2  91BF               	bcf	191,0,b	;volatile
 11575                           
 11576                           ;buck.c: 57: RPOR6 = 14;
 11577  0138D4  0E0E               	movlw	14
 11578  0138D6  010E               	movlb	14	; () banked
 11579  0138D8  6FC6               	movwf	198,b	;volatile
 11580                           
 11581                           ;buck.c: 58: RPOR5 = 15;
 11582  0138DA  0E0F               	movlw	15
 11583  0138DC  010E               	movlb	14	; () banked
 11584  0138DE  6FC5               	movwf	197,b	;volatile
 11585                           
 11586                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11587  0138E0  0E55               	movlw	85
 11588  0138E2  6EA7               	movwf	4007,c	;volatile
 11589  0138E4  0EAA               	movlw	170
 11590  0138E6  6EA7               	movwf	4007,c	;volatile
 11591                           
 11592                           ; BSR set to: 14
 11593  0138E8  010E               	movlb	14	; () banked
 11594  0138EA  81BF               	bsf	191,0,b	;volatile
 11595                           
 11596                           ; BSR set to: 14
 11597  0138EC  0012               	return		;funcret
 11598  0138EE                     __end_of__buck_pin_init:
 11599                           	opt stack 0
 11600                           tblptru	equ	0xFF8
 11601                           tblptrh	equ	0xFF7
 11602                           tblptrl	equ	0xFF6
 11603                           tablat	equ	0xFF5
 11604                           prodh	equ	0xFF4
 11605                           prodl	equ	0xFF3
 11606                           intcon3	equ	0xFF0
 11607                           postinc0	equ	0xFEE
 11608                           wreg	equ	0xFE8
 11609                           postdec1	equ	0xFE5
 11610                           plusw1	equ	0xFE3
 11611                           fsr1h	equ	0xFE2
 11612                           fsr1l	equ	0xFE1
 11613                           indf2	equ	0xFDF
 11614                           postinc2	equ	0xFDE
 11615                           postdec2	equ	0xFDD
 11616                           plusw2	equ	0xFDB
 11617                           fsr2h	equ	0xFDA
 11618                           fsr2l	equ	0xFD9
 11619                           status	equ	0xFD8
 11620                           
 11621 ;; *************** function _adc_init *****************
 11622 ;; Defined at:
 11623 ;;		line 9 in file "adc.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;		None
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;		None
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  1    wreg      void 
 11630 ;; Registers used:
 11631 ;;		wreg, status,2
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11641 ;;Total ram usage:        0 bytes
 11642 ;; Hardware stack levels used:    1
 11643 ;; Hardware stack levels required when called:   10
 11644 ;; This function calls:
 11645 ;;		Nothing
 11646 ;; This function is called by:
 11647 ;;		_system_init
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text43
 11652  013FC6                     __ptext43:
 11653                           	opt stack 0
 11654  013FC6                     _adc_init:
 11655                           	opt stack 19
 11656                           
 11657                           ;adc.c: 11: ADCON0bits.VCFG1 = 0;
 11658                           
 11659                           ; BSR set to: 14
 11660                           ;incstack = 0
 11661  013FC6  9EC2               	bcf	4034,7,c	;volatile
 11662                           
 11663                           ;adc.c: 12: ADCON0bits.VCFG0 = 1;
 11664  013FC8  8CC2               	bsf	4034,6,c	;volatile
 11665                           
 11666                           ;adc.c: 13: ADCON0bits.CHS = 0b1100;
 11667  013FCA  50C2               	movf	4034,w,c	;volatile
 11668  013FCC  0BC3               	andlw	-61
 11669  013FCE  0930               	iorlw	48
 11670  013FD0  6EC2               	movwf	4034,c	;volatile
 11671                           
 11672                           ;adc.c: 14: ADCON0bits.ADON = 1;
 11673  013FD2  80C2               	bsf	4034,0,c	;volatile
 11674                           
 11675                           ;adc.c: 15: ADCON1bits.ADFM = 0;
 11676  013FD4  9EC1               	bcf	4033,7,c	;volatile
 11677                           
 11678                           ;adc.c: 16: ADCON1bits.ADCAL = 0;
 11679  013FD6  9CC1               	bcf	4033,6,c	;volatile
 11680                           
 11681                           ;adc.c: 17: ADCON1bits.ADCS = 0b110;
 11682  013FD8  50C1               	movf	4033,w,c	;volatile
 11683  013FDA  0BF8               	andlw	-8
 11684  013FDC  0906               	iorlw	6
 11685  013FDE  6EC1               	movwf	4033,c	;volatile
 11686  013FE0  0012               	return		;funcret
 11687  013FE2                     __end_of_adc_init:
 11688                           	opt stack 0
 11689                           tblptru	equ	0xFF8
 11690                           tblptrh	equ	0xFF7
 11691                           tblptrl	equ	0xFF6
 11692                           tablat	equ	0xFF5
 11693                           prodh	equ	0xFF4
 11694                           prodl	equ	0xFF3
 11695                           intcon3	equ	0xFF0
 11696                           postinc0	equ	0xFEE
 11697                           wreg	equ	0xFE8
 11698                           postdec1	equ	0xFE5
 11699                           plusw1	equ	0xFE3
 11700                           fsr1h	equ	0xFE2
 11701                           fsr1l	equ	0xFE1
 11702                           indf2	equ	0xFDF
 11703                           postinc2	equ	0xFDE
 11704                           postdec2	equ	0xFDD
 11705                           plusw2	equ	0xFDB
 11706                           fsr2h	equ	0xFDA
 11707                           fsr2l	equ	0xFD9
 11708                           status	equ	0xFD8
 11709                           
 11710 ;; *************** function __system_timer0_init *****************
 11711 ;; Defined at:
 11712 ;;		line 214 in file "os.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;		None
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;		None
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      void 
 11719 ;; Registers used:
 11720 ;;		wreg, status,2, status,0
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11730 ;;Total ram usage:        0 bytes
 11731 ;; Hardware stack levels used:    1
 11732 ;; Hardware stack levels required when called:   10
 11733 ;; This function calls:
 11734 ;;		Nothing
 11735 ;; This function is called by:
 11736 ;;		_system_init
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           
 11740                           	psect	text44
 11741  013620                     __ptext44:
 11742                           	opt stack 0
 11743  013620                     __system_timer0_init:
 11744                           	opt stack 19
 11745                           
 11746                           ;os.c: 217: T0CONbits.T0CS = 0;
 11747                           
 11748                           ;incstack = 0
 11749  013620  9AD5               	bcf	4053,5,c	;volatile
 11750                           
 11751                           ;os.c: 219: T0CONbits.T08BIT = 0;
 11752  013622  9CD5               	bcf	4053,6,c	;volatile
 11753                           
 11754                           ;os.c: 221: T0CONbits.T0PS2 = 0;
 11755  013624  94D5               	bcf	4053,2,c	;volatile
 11756                           
 11757                           ;os.c: 222: T0CONbits.T0PS1 = 1;
 11758  013626  82D5               	bsf	4053,1,c	;volatile
 11759                           
 11760                           ;os.c: 223: T0CONbits.T0PS0 = 0;
 11761  013628  90D5               	bcf	4053,0,c	;volatile
 11762                           
 11763                           ;os.c: 225: T0CONbits.PSA = 0;
 11764  01362A  96D5               	bcf	4053,3,c	;volatile
 11765                           
 11766                           ;os.c: 227: switch(os.clockFrequency)
 11767  01362C  D009               	goto	l20735
 11768  01362E                     l20729:
 11769                           
 11770                           ;os.c: 230: TMR0H = 0xF8;
 11771  01362E  0EF8               	movlw	248
 11772  013630  6ED7               	movwf	4055,c	;volatile
 11773                           
 11774                           ;os.c: 231: TMR0L = 0x30;
 11775  013632  0E30               	movlw	48
 11776  013634  D003               	goto	L8
 11777  013636                     l20731:
 11778                           
 11779                           ;os.c: 234: TMR0H = 0xD1;
 11780  013636  0ED1               	movlw	209
 11781  013638  6ED7               	movwf	4055,c	;volatile
 11782                           
 11783                           ;os.c: 235: TMR0L = 0x20;
 11784  01363A  0E20               	movlw	32
 11785  01363C                     L8:
 11786  01363C  6ED6               	movwf	4054,c	;volatile
 11787                           
 11788                           ;os.c: 237: }
 11789                           
 11790                           ;os.c: 236: break;
 11791  01363E  D008               	goto	l1375
 11792  013640                     l20735:
 11793  013640  0102               	movlb	2	; () banked
 11794  013642  5100               	movf	_os& (0+255),w,b	;volatile
 11795                           
 11796                           ; Switch size 1, requested type "space"
 11797                           ; Number of cases is 2, Range of values is 1 to 2
 11798                           ; switch strategies available:
 11799                           ; Name         Instructions Cycles
 11800                           ; simple_byte            7     4 (average)
 11801                           ;	Chosen strategy is simple_byte
 11802  013644  0A01               	xorlw	1	; case 1
 11803  013646  B4D8               	btfsc	status,2,c
 11804  013648  D7F2               	goto	l20729
 11805  01364A  0A03               	xorlw	3	; case 2
 11806  01364C  B4D8               	btfsc	status,2,c
 11807  01364E  D7F3               	goto	l20731
 11808  013650                     l1375:
 11809                           
 11810                           ;os.c: 239: T0CONbits.TMR0ON = 1;
 11811  013650  8ED5               	bsf	4053,7,c	;volatile
 11812                           
 11813                           ;os.c: 242: INTCONbits.TMR0IF = 0;
 11814  013652  94F2               	bcf	intcon,2,c	;volatile
 11815                           
 11816                           ;os.c: 243: INTCONbits.TMR0IE = 1;
 11817  013654  8AF2               	bsf	intcon,5,c	;volatile
 11818                           
 11819                           ;os.c: 244: INTCONbits.GIE = 1;
 11820  013656  8EF2               	bsf	intcon,7,c	;volatile
 11821                           
 11822                           ;os.c: 247: os.timeSlot = 0;
 11823  013658  0E00               	movlw	0
 11824  01365A  0102               	movlb	2	; () banked
 11825  01365C  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 11826                           
 11827                           ; BSR set to: 2
 11828  01365E  0012               	return		;funcret
 11829  013660                     __end_of__system_timer0_init:
 11830                           	opt stack 0
 11831                           tblptru	equ	0xFF8
 11832                           tblptrh	equ	0xFF7
 11833                           tblptrl	equ	0xFF6
 11834                           tablat	equ	0xFF5
 11835                           prodh	equ	0xFF4
 11836                           prodl	equ	0xFF3
 11837                           intcon	equ	0xFF2
 11838                           intcon3	equ	0xFF0
 11839                           postinc0	equ	0xFEE
 11840                           wreg	equ	0xFE8
 11841                           postdec1	equ	0xFE5
 11842                           plusw1	equ	0xFE3
 11843                           fsr1h	equ	0xFE2
 11844                           fsr1l	equ	0xFE1
 11845                           indf2	equ	0xFDF
 11846                           postinc2	equ	0xFDE
 11847                           postdec2	equ	0xFDD
 11848                           plusw2	equ	0xFDB
 11849                           fsr2h	equ	0xFDA
 11850                           fsr2l	equ	0xFD9
 11851                           status	equ	0xFD8
 11852                           
 11853 ;; *************** function __system_encoder_init *****************
 11854 ;; Defined at:
 11855 ;;		line 160 in file "os.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;		None
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      void 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11873 ;;Total ram usage:        0 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:   10
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_system_init
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text45
 11884  013504                     __ptext45:
 11885                           	opt stack 0
 11886  013504                     __system_encoder_init:
 11887                           	opt stack 19
 11888                           
 11889                           ;os.c: 162: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11890                           
 11891                           ; BSR set to: 2
 11892                           ;incstack = 0
 11893  013504  0E55               	movlw	85
 11894  013506  6EA7               	movwf	4007,c	;volatile
 11895  013508  0EAA               	movlw	170
 11896  01350A  6EA7               	movwf	4007,c	;volatile
 11897  01350C  010E               	movlb	14	; () banked
 11898  01350E  91BF               	bcf	191,0,b	;volatile
 11899                           
 11900                           ;os.c: 163: RPINR1 = 0;
 11901  013510  0E00               	movlw	0
 11902  013512  010E               	movlb	14	; () banked
 11903  013514  6FE1               	movwf	225,b	;volatile
 11904                           
 11905                           ;os.c: 164: RPINR3 = 9;
 11906  013516  0E09               	movlw	9
 11907  013518  010E               	movlb	14	; () banked
 11908  01351A  6FE3               	movwf	227,b	;volatile
 11909                           
 11910                           ;os.c: 165: RPINR2 = 10;
 11911  01351C  0E0A               	movlw	10
 11912  01351E  010E               	movlb	14	; () banked
 11913  013520  6FE2               	movwf	226,b	;volatile
 11914                           
 11915                           ;os.c: 166: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 11916  013522  0E55               	movlw	85
 11917  013524  6EA7               	movwf	4007,c	;volatile
 11918  013526  0EAA               	movlw	170
 11919  013528  6EA7               	movwf	4007,c	;volatile
 11920                           
 11921                           ; BSR set to: 14
 11922  01352A  010E               	movlb	14	; () banked
 11923  01352C  91BF               	bcf	191,0,b	;volatile
 11924                           
 11925                           ; BSR set to: 14
 11926                           ;os.c: 173: INTCON2bits.INTEDG1 = 0;
 11927  01352E  9AF1               	bcf	intcon2,5,c	;volatile
 11928                           
 11929                           ; BSR set to: 14
 11930                           ;os.c: 174: INTCON3bits.INT1IF = 0;
 11931  013530  90F0               	bcf	intcon3,0,c	;volatile
 11932                           
 11933                           ; BSR set to: 14
 11934                           ;os.c: 175: INTCON3bits.INT1IE = 1;
 11935  013532  86F0               	bsf	intcon3,3,c	;volatile
 11936                           
 11937                           ; BSR set to: 14
 11938                           ;os.c: 177: INTCON2bits.INTEDG2 = 1;
 11939  013534  88F1               	bsf	intcon2,4,c	;volatile
 11940                           
 11941                           ; BSR set to: 14
 11942                           ;os.c: 178: INTCON3bits.INT2IF = 0;
 11943  013536  92F0               	bcf	intcon3,1,c	;volatile
 11944                           
 11945                           ; BSR set to: 14
 11946                           ;os.c: 181: INTCON2bits.INTEDG3 = 1;
 11947  013538  86F1               	bsf	intcon2,3,c	;volatile
 11948                           
 11949                           ; BSR set to: 14
 11950                           ;os.c: 182: INTCON3bits.INT3IF = 0;
 11951  01353A  94F0               	bcf	intcon3,2,c	;volatile
 11952                           
 11953                           ; BSR set to: 14
 11954                           ;os.c: 185: INTCONbits.GIE = 1;
 11955  01353C  8EF2               	bsf	intcon,7,c	;volatile
 11956                           
 11957                           ;os.c: 187: os.encoderCount = 0;
 11958  01353E  0E00               	movlw	0
 11959  013540  0102               	movlb	2	; () banked
 11960  013542  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 11961                           
 11962                           ;os.c: 188: os.buttonCount = 0;
 11963  013544  0E00               	movlw	0
 11964  013546  0102               	movlb	2	; () banked
 11965  013548  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 11966                           
 11967                           ; BSR set to: 2
 11968  01354A  0012               	return		;funcret
 11969  01354C                     __end_of__system_encoder_init:
 11970                           	opt stack 0
 11971                           tblptru	equ	0xFF8
 11972                           tblptrh	equ	0xFF7
 11973                           tblptrl	equ	0xFF6
 11974                           tablat	equ	0xFF5
 11975                           prodh	equ	0xFF4
 11976                           prodl	equ	0xFF3
 11977                           intcon	equ	0xFF2
 11978                           intcon2	equ	0xFF1
 11979                           intcon3	equ	0xFF0
 11980                           postinc0	equ	0xFEE
 11981                           wreg	equ	0xFE8
 11982                           postdec1	equ	0xFE5
 11983                           plusw1	equ	0xFE3
 11984                           fsr1h	equ	0xFE2
 11985                           fsr1l	equ	0xFE1
 11986                           indf2	equ	0xFDF
 11987                           postinc2	equ	0xFDE
 11988                           postdec2	equ	0xFDD
 11989                           plusw2	equ	0xFDB
 11990                           fsr2h	equ	0xFDA
 11991                           fsr2l	equ	0xFD9
 11992                           status	equ	0xFD8
 11993                           
 11994 ;; *************** function _system_calculate_output_voltage *****************
 11995 ;; Defined at:
 11996 ;;		line 587 in file "os.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  tmp             4   16[BANK0 ] long 
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12014 ;;Total ram usage:        8 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:   11
 12017 ;; This function calls:
 12018 ;;		___lmul
 12019 ;; This function is called by:
 12020 ;;		_main
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           	psect	text46
 12025  00FB34                     __ptext46:
 12026                           	opt stack 0
 12027  00FB34                     _system_calculate_output_voltage:
 12028                           	opt stack 19
 12029                           
 12030                           ;os.c: 589: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 12031                           
 12032                           ; BSR set to: 2
 12033                           ;incstack = 0
 12034  00FB34  0102               	movlb	2	; () banked
 12035  00FB36  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 12036  00FB38  0102               	movlb	2	; () banked
 12037  00FB3A  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 12038  00FB3C  0100               	movlb	0	; () banked
 12039  00FB3E  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 12040  00FB40  0102               	movlb	2	; () banked
 12041  00FB42  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 12042  00FB44  0102               	movlb	2	; () banked
 12043  00FB46  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 12044  00FB48  0100               	movlb	0	; () banked
 12045  00FB4A  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 12046  00FB4C  0102               	movlb	2	; () banked
 12047  00FB4E  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 12048  00FB50  0100               	movlb	0	; () banked
 12049  00FB52  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12050  00FB54  0102               	movlb	2	; () banked
 12051  00FB56  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 12052  00FB58  0100               	movlb	0	; () banked
 12053  00FB5A  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12054  00FB5C  0102               	movlb	2	; () banked
 12055  00FB5E  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 12056  00FB60  0100               	movlb	0	; () banked
 12057  00FB62  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12058  00FB64  0102               	movlb	2	; () banked
 12059  00FB66  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 12060  00FB68  0100               	movlb	0	; () banked
 12061  00FB6A  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12062  00FB6C  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 12063  00FB70  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 12064  00FB74  0100               	movlb	0	; () banked
 12065  00FB76  0E00               	movlw	0
 12066  00FB78  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 12067  00FB7A  0EFF               	movlw	-1
 12068  00FB7C  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 12069  00FB7E  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 12070                           
 12071                           ;os.c: 590: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 12072  00FB80  C311  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 12073  00FB84  C312  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 12074  00FB88  0E00               	movlw	0
 12075  00FB8A  0100               	movlb	0	; () banked
 12076  00FB8C  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 12077  00FB8E  0EFF               	movlw	255
 12078  00FB90  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 12079  00FB92  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 12080  00FB94  0100               	movlb	0	; () banked
 12081  00FB96  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 12082  00FB98  0100               	movlb	0	; () banked
 12083  00FB9A  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 12084  00FB9C  0100               	movlb	0	; () banked
 12085  00FB9E  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 12086  00FBA0  0100               	movlb	0	; () banked
 12087  00FBA2  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12088  00FBA4  0100               	movlb	0	; () banked
 12089  00FBA6  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 12090  00FBA8  0100               	movlb	0	; () banked
 12091  00FBAA  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12092  00FBAC  0100               	movlb	0	; () banked
 12093  00FBAE  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 12094  00FBB0  0100               	movlb	0	; () banked
 12095  00FBB2  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;os.c: 591: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 12099  00FBB4  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 12100  00FBB8  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 12101  00FBBC  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 12102  00FBC0  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 12103  00FBC4  EE23  F013         	lfsr	2,_calibrationParameters+19
 12104  00FBC8  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12105  00FBCC  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12106  00FBD0  0100               	movlb	0	; () banked
 12107  00FBD2  0E00               	movlw	0
 12108  00FBD4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12109  00FBD6  0EFF               	movlw	-1
 12110  00FBD8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12111  00FBDA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12112  00FBDC  ECC3  F092         	call	___lmul	;wreg free
 12113  00FBE0  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 12114  00FBE4  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 12115  00FBE8  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 12116  00FBEC  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 12117                           
 12118                           ;os.c: 592: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 12119  00FBF0  C315  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 12120  00FBF4  0EFF               	movlw	-1
 12121  00FBF6  0100               	movlb	0	; () banked
 12122  00FBF8  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12123  00FBFA  0100               	movlb	0	; () banked
 12124  00FBFC  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 12125  00FBFE  0100               	movlb	0	; () banked
 12126  00FC00  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 12127  00FC02  D006               	goto	u22460
 12128  00FC04                     u22465:
 12129  00FC04  0100               	movlb	0	; () banked
 12130  00FC06  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 12131  00FC08  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12132  00FC0A  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12133  00FC0C  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12134  00FC0E  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 12135  00FC10                     u22460:
 12136  00FC10  0100               	movlb	0	; () banked
 12137  00FC12  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12138  00FC14  D7F7               	goto	u22465
 12139                           
 12140                           ;os.c: 593: tmp += 1;
 12141  00FC16  0E01               	movlw	1
 12142  00FC18  0100               	movlb	0	; () banked
 12143  00FC1A  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 12144  00FC1C  0E00               	movlw	0
 12145  00FC1E  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12146  00FC20  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12147  00FC22  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;os.c: 594: tmp >>= 1;
 12151  00FC24  0100               	movlb	0	; () banked
 12152  00FC26  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 12153  00FC28  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12154  00FC2A  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12155  00FC2C  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12156  00FC2E  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;os.c: 595: os.output_voltage = (int16_t) tmp;
 12160  00FC30  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 12161  00FC34  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 12162                           
 12163                           ; BSR set to: 0
 12164  00FC38  0012               	return		;funcret
 12165  00FC3A                     __end_of_system_calculate_output_voltage:
 12166                           	opt stack 0
 12167                           tblptru	equ	0xFF8
 12168                           tblptrh	equ	0xFF7
 12169                           tblptrl	equ	0xFF6
 12170                           tablat	equ	0xFF5
 12171                           prodh	equ	0xFF4
 12172                           prodl	equ	0xFF3
 12173                           intcon	equ	0xFF2
 12174                           intcon2	equ	0xFF1
 12175                           intcon3	equ	0xFF0
 12176                           postinc0	equ	0xFEE
 12177                           wreg	equ	0xFE8
 12178                           postdec1	equ	0xFE5
 12179                           plusw1	equ	0xFE3
 12180                           fsr1h	equ	0xFE2
 12181                           fsr1l	equ	0xFE1
 12182                           indf2	equ	0xFDF
 12183                           postinc2	equ	0xFDE
 12184                           postdec2	equ	0xFDD
 12185                           plusw2	equ	0xFDB
 12186                           fsr2h	equ	0xFDA
 12187                           fsr2l	equ	0xFD9
 12188                           status	equ	0xFD8
 12189                           
 12190 ;; *************** function _system_calculate_output_current *****************
 12191 ;; Defined at:
 12192 ;;		line 625 in file "os.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;		None
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;  tmp             4   16[BANK0 ] long 
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12207 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12209 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12210 ;;Total ram usage:        8 bytes
 12211 ;; Hardware stack levels used:    1
 12212 ;; Hardware stack levels required when called:   11
 12213 ;; This function calls:
 12214 ;;		___lmul
 12215 ;;		_buck_get_mode
 12216 ;; This function is called by:
 12217 ;;		_main
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text47
 12222  00E470                     __ptext47:
 12223                           	opt stack 0
 12224  00E470                     _system_calculate_output_current:
 12225                           	opt stack 19
 12226                           
 12227                           ;os.c: 627: int32_t tmp;
 12228                           ;os.c: 629: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;incstack = 0
 12232  00E470  EC7F  F0A1         	call	_buck_get_mode	;wreg free
 12233  00E474  0900               	iorlw	0
 12234  00E476  B4D8               	btfsc	status,2,c
 12235  00E478  D005               	goto	l22631
 12236  00E47A  EC7F  F0A1         	call	_buck_get_mode	;wreg free
 12237  00E47E  0A80               	xorlw	128
 12238  00E480  A4D8               	btfss	status,2,c
 12239  00E482  D006               	goto	l22633
 12240  00E484                     l22631:
 12241                           
 12242                           ;os.c: 630: {
 12243                           ;os.c: 631: os.output_current = 0;
 12244  00E484  0E00               	movlw	0
 12245  00E486  0102               	movlb	2	; () banked
 12246  00E488  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 12247  00E48A  0E00               	movlw	0
 12248  00E48C  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 12249                           
 12250                           ;os.c: 632: }
 12251  00E48E  0012               	return	
 12252  00E490                     l22633:
 12253                           
 12254                           ;os.c: 633: else
 12255                           ;os.c: 634: {
 12256                           ;os.c: 635: tmp = (int32_t) (os.output_current_adc[0] + os.output_current_adc[1] + os.ou
      +                          tput_current_adc[2] + os.output_current_adc[3]);
 12257  00E490  0102               	movlb	2	; () banked
 12258  00E492  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 12259  00E494  0102               	movlb	2	; () banked
 12260  00E496  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 12261  00E498  0100               	movlb	0	; () banked
 12262  00E49A  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 12263  00E49C  0102               	movlb	2	; () banked
 12264  00E49E  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 12265  00E4A0  0102               	movlb	2	; () banked
 12266  00E4A2  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 12267  00E4A4  0100               	movlb	0	; () banked
 12268  00E4A6  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 12269  00E4A8  0102               	movlb	2	; () banked
 12270  00E4AA  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 12271  00E4AC  0100               	movlb	0	; () banked
 12272  00E4AE  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12273  00E4B0  0102               	movlb	2	; () banked
 12274  00E4B2  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 12275  00E4B4  0100               	movlb	0	; () banked
 12276  00E4B6  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 12277  00E4B8  0102               	movlb	2	; () banked
 12278  00E4BA  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 12279  00E4BC  0100               	movlb	0	; () banked
 12280  00E4BE  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12281  00E4C0  0102               	movlb	2	; () banked
 12282  00E4C2  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 12283  00E4C4  0100               	movlb	0	; () banked
 12284  00E4C6  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 12285  00E4C8  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 12286  00E4CC  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 12287  00E4D0  0100               	movlb	0	; () banked
 12288  00E4D2  0E00               	movlw	0
 12289  00E4D4  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 12290  00E4D6  0EFF               	movlw	-1
 12291  00E4D8  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 12292  00E4DA  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 12293                           
 12294                           ;os.c: 636: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 12295  00E4DC  C32E  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 12296  00E4E0  C32F  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 12297  00E4E4  0E00               	movlw	0
 12298  00E4E6  0100               	movlb	0	; () banked
 12299  00E4E8  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 12300  00E4EA  0EFF               	movlw	255
 12301  00E4EC  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 12302  00E4EE  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 12303  00E4F0  0100               	movlb	0	; () banked
 12304  00E4F2  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 12305  00E4F4  0100               	movlb	0	; () banked
 12306  00E4F6  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12307  00E4F8  0100               	movlb	0	; () banked
 12308  00E4FA  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 12309  00E4FC  0100               	movlb	0	; () banked
 12310  00E4FE  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12311  00E500  0100               	movlb	0	; () banked
 12312  00E502  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 12313  00E504  0100               	movlb	0	; () banked
 12314  00E506  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12315  00E508  0100               	movlb	0	; () banked
 12316  00E50A  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 12317  00E50C  0100               	movlb	0	; () banked
 12318  00E50E  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12319                           
 12320                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 12321  00E510  C329  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 12322  00E514  C32A  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 12323  00E518  0E00               	movlw	0
 12324  00E51A  0100               	movlb	0	; () banked
 12325  00E51C  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 12326  00E51E  0EFF               	movlw	255
 12327  00E520  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 12328  00E522  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 12329  00E524  0100               	movlb	0	; () banked
 12330  00E526  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 12331  00E528  0100               	movlb	0	; () banked
 12332  00E52A  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12333  00E52C  0100               	movlb	0	; () banked
 12334  00E52E  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 12335  00E530  0100               	movlb	0	; () banked
 12336  00E532  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12337  00E534  0100               	movlb	0	; () banked
 12338  00E536  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 12339  00E538  0100               	movlb	0	; () banked
 12340  00E53A  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12341  00E53C  0100               	movlb	0	; () banked
 12342  00E53E  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 12343  00E540  0100               	movlb	0	; () banked
 12344  00E542  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;os.c: 638: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 12348  00E544  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 12349  00E548  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 12350  00E54C  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 12351  00E550  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 12352  00E554  EE23  F02B         	lfsr	2,_calibrationParameters+43
 12353  00E558  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12354  00E55C  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12355  00E560  0100               	movlb	0	; () banked
 12356  00E562  0E00               	movlw	0
 12357  00E564  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12358  00E566  0EFF               	movlw	-1
 12359  00E568  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12360  00E56A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12361  00E56C  ECC3  F092         	call	___lmul	;wreg free
 12362  00E570  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 12363  00E574  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 12364  00E578  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 12365  00E57C  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 12366                           
 12367                           ;os.c: 639: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 12368  00E580  C32D  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 12369  00E584  0EFF               	movlw	-1
 12370  00E586  0100               	movlb	0	; () banked
 12371  00E588  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12372  00E58A  0100               	movlb	0	; () banked
 12373  00E58C  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 12374  00E58E  0100               	movlb	0	; () banked
 12375  00E590  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 12376  00E592  D006               	goto	u22500
 12377  00E594                     u22505:
 12378  00E594  0100               	movlb	0	; () banked
 12379  00E596  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12380  00E598  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12381  00E59A  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12382  00E59C  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12383  00E59E  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12384  00E5A0                     u22500:
 12385  00E5A0  0100               	movlb	0	; () banked
 12386  00E5A2  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 12387  00E5A4  D7F7               	goto	u22505
 12388                           
 12389                           ;os.c: 640: tmp += 1;
 12390  00E5A6  0E01               	movlw	1
 12391  00E5A8  0100               	movlb	0	; () banked
 12392  00E5AA  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12393  00E5AC  0E00               	movlw	0
 12394  00E5AE  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12395  00E5B0  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12396  00E5B2  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;os.c: 641: tmp >>= 1;
 12400  00E5B4  0100               	movlb	0	; () banked
 12401  00E5B6  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12402  00E5B8  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12403  00E5BA  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12404  00E5BC  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12405  00E5BE  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;os.c: 642: os.output_current = (int16_t) tmp;
 12409  00E5C0  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 12410  00E5C4  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 12411  00E5C8  0012               	return	
 12412  00E5CA                     __end_of_system_calculate_output_current:
 12413                           	opt stack 0
 12414                           tblptru	equ	0xFF8
 12415                           tblptrh	equ	0xFF7
 12416                           tblptrl	equ	0xFF6
 12417                           tablat	equ	0xFF5
 12418                           prodh	equ	0xFF4
 12419                           prodl	equ	0xFF3
 12420                           intcon	equ	0xFF2
 12421                           intcon2	equ	0xFF1
 12422                           intcon3	equ	0xFF0
 12423                           postinc0	equ	0xFEE
 12424                           wreg	equ	0xFE8
 12425                           postdec1	equ	0xFE5
 12426                           plusw1	equ	0xFE3
 12427                           fsr1h	equ	0xFE2
 12428                           fsr1l	equ	0xFE1
 12429                           indf2	equ	0xFDF
 12430                           postinc2	equ	0xFDE
 12431                           postdec2	equ	0xFDD
 12432                           plusw2	equ	0xFDB
 12433                           fsr2h	equ	0xFDA
 12434                           fsr2l	equ	0xFD9
 12435                           status	equ	0xFD8
 12436                           
 12437 ;; *************** function _system_calculate_input_voltage *****************
 12438 ;; Defined at:
 12439 ;;		line 570 in file "os.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;		None
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;  tmp             4   16[BANK0 ] long 
 12444 ;; Return value:  Size  Location     Type
 12445 ;;                  1    wreg      void 
 12446 ;; Registers used:
 12447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12448 ;; Tracked objects:
 12449 ;;		On entry : 0/0
 12450 ;;		On exit  : 0/0
 12451 ;;		Unchanged: 0/0
 12452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12455 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12456 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12457 ;;Total ram usage:        8 bytes
 12458 ;; Hardware stack levels used:    1
 12459 ;; Hardware stack levels required when called:   11
 12460 ;; This function calls:
 12461 ;;		___lmul
 12462 ;; This function is called by:
 12463 ;;		_main
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text48
 12468  00FC3A                     __ptext48:
 12469                           	opt stack 0
 12470  00FC3A                     _system_calculate_input_voltage:
 12471                           	opt stack 19
 12472                           
 12473                           ;os.c: 572: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 12474                           
 12475                           ;incstack = 0
 12476  00FC3A  0102               	movlb	2	; () banked
 12477  00FC3C  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 12478  00FC3E  0102               	movlb	2	; () banked
 12479  00FC40  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 12480  00FC42  0100               	movlb	0	; () banked
 12481  00FC44  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 12482  00FC46  0102               	movlb	2	; () banked
 12483  00FC48  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 12484  00FC4A  0102               	movlb	2	; () banked
 12485  00FC4C  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 12486  00FC4E  0100               	movlb	0	; () banked
 12487  00FC50  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12488  00FC52  0102               	movlb	2	; () banked
 12489  00FC54  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 12490  00FC56  0100               	movlb	0	; () banked
 12491  00FC58  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12492  00FC5A  0102               	movlb	2	; () banked
 12493  00FC5C  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 12494  00FC5E  0100               	movlb	0	; () banked
 12495  00FC60  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12496  00FC62  0102               	movlb	2	; () banked
 12497  00FC64  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 12498  00FC66  0100               	movlb	0	; () banked
 12499  00FC68  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12500  00FC6A  0102               	movlb	2	; () banked
 12501  00FC6C  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 12502  00FC6E  0100               	movlb	0	; () banked
 12503  00FC70  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12504  00FC72  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 12505  00FC76  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 12506  00FC7A  0100               	movlb	0	; () banked
 12507  00FC7C  0E00               	movlw	0
 12508  00FC7E  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 12509  00FC80  0EFF               	movlw	-1
 12510  00FC82  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 12511  00FC84  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 12512                           
 12513                           ;os.c: 573: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 12514  00FC86  C305  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 12515  00FC8A  C306  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 12516  00FC8E  0E00               	movlw	0
 12517  00FC90  0100               	movlb	0	; () banked
 12518  00FC92  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 12519  00FC94  0EFF               	movlw	255
 12520  00FC96  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 12521  00FC98  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 12522  00FC9A  0100               	movlb	0	; () banked
 12523  00FC9C  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 12524  00FC9E  0100               	movlb	0	; () banked
 12525  00FCA0  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12526  00FCA2  0100               	movlb	0	; () banked
 12527  00FCA4  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 12528  00FCA6  0100               	movlb	0	; () banked
 12529  00FCA8  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12530  00FCAA  0100               	movlb	0	; () banked
 12531  00FCAC  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 12532  00FCAE  0100               	movlb	0	; () banked
 12533  00FCB0  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12534  00FCB2  0100               	movlb	0	; () banked
 12535  00FCB4  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 12536  00FCB6  0100               	movlb	0	; () banked
 12537  00FCB8  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;os.c: 574: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 12541  00FCBA  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 12542  00FCBE  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 12543  00FCC2  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 12544  00FCC6  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 12545  00FCCA  EE23  F007         	lfsr	2,_calibrationParameters+7
 12546  00FCCE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12547  00FCD2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12548  00FCD6  0100               	movlb	0	; () banked
 12549  00FCD8  0E00               	movlw	0
 12550  00FCDA  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12551  00FCDC  0EFF               	movlw	-1
 12552  00FCDE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12553  00FCE0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12554  00FCE2  ECC3  F092         	call	___lmul	;wreg free
 12555  00FCE6  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 12556  00FCEA  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 12557  00FCEE  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 12558  00FCF2  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 12559                           
 12560                           ;os.c: 575: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 12561  00FCF6  C309  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 12562  00FCFA  0EFF               	movlw	-1
 12563  00FCFC  0100               	movlb	0	; () banked
 12564  00FCFE  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12565  00FD00  0100               	movlb	0	; () banked
 12566  00FD02  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 12567  00FD04  0100               	movlb	0	; () banked
 12568  00FD06  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12569  00FD08  D006               	goto	u22470
 12570  00FD0A                     u22475:
 12571  00FD0A  0100               	movlb	0	; () banked
 12572  00FD0C  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12573  00FD0E  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12574  00FD10  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12575  00FD12  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12576  00FD14  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12577  00FD16                     u22470:
 12578  00FD16  0100               	movlb	0	; () banked
 12579  00FD18  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12580  00FD1A  D7F7               	goto	u22475
 12581                           
 12582                           ;os.c: 576: tmp += 1;
 12583  00FD1C  0E01               	movlw	1
 12584  00FD1E  0100               	movlb	0	; () banked
 12585  00FD20  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12586  00FD22  0E00               	movlw	0
 12587  00FD24  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12588  00FD26  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12589  00FD28  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;os.c: 577: tmp >>= 1;
 12593  00FD2A  0100               	movlb	0	; () banked
 12594  00FD2C  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12595  00FD2E  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12596  00FD30  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12597  00FD32  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12598  00FD34  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;os.c: 578: os.input_voltage = (int16_t) tmp;
 12602  00FD36  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 12603  00FD3A  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 12604                           
 12605                           ; BSR set to: 0
 12606  00FD3E  0012               	return		;funcret
 12607  00FD40                     __end_of_system_calculate_input_voltage:
 12608                           	opt stack 0
 12609                           tblptru	equ	0xFF8
 12610                           tblptrh	equ	0xFF7
 12611                           tblptrl	equ	0xFF6
 12612                           tablat	equ	0xFF5
 12613                           prodh	equ	0xFF4
 12614                           prodl	equ	0xFF3
 12615                           intcon	equ	0xFF2
 12616                           intcon2	equ	0xFF1
 12617                           intcon3	equ	0xFF0
 12618                           postinc0	equ	0xFEE
 12619                           wreg	equ	0xFE8
 12620                           postdec1	equ	0xFE5
 12621                           plusw1	equ	0xFE3
 12622                           fsr1h	equ	0xFE2
 12623                           fsr1l	equ	0xFE1
 12624                           indf2	equ	0xFDF
 12625                           postinc2	equ	0xFDE
 12626                           postdec2	equ	0xFDD
 12627                           plusw2	equ	0xFDB
 12628                           fsr2h	equ	0xFDA
 12629                           fsr2l	equ	0xFD9
 12630                           status	equ	0xFD8
 12631                           
 12632 ;; *************** function _system_calculate_input_current *****************
 12633 ;; Defined at:
 12634 ;;		line 604 in file "os.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;		None
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;  tmp             4   16[BANK0 ] long 
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  1    wreg      void 
 12641 ;; Registers used:
 12642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12649 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12650 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12651 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12652 ;;Total ram usage:        8 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:   11
 12655 ;; This function calls:
 12656 ;;		___lmul
 12657 ;;		_buck_get_mode
 12658 ;; This function is called by:
 12659 ;;		_main
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           	psect	text49
 12664  00E5CA                     __ptext49:
 12665                           	opt stack 0
 12666  00E5CA                     _system_calculate_input_current:
 12667                           	opt stack 19
 12668                           
 12669                           ;os.c: 606: int32_t tmp;
 12670                           ;os.c: 608: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;incstack = 0
 12674  00E5CA  EC7F  F0A1         	call	_buck_get_mode	;wreg free
 12675  00E5CE  0900               	iorlw	0
 12676  00E5D0  B4D8               	btfsc	status,2,c
 12677  00E5D2  D005               	goto	l22713
 12678  00E5D4  EC7F  F0A1         	call	_buck_get_mode	;wreg free
 12679  00E5D8  0A80               	xorlw	128
 12680  00E5DA  A4D8               	btfss	status,2,c
 12681  00E5DC  D006               	goto	l22715
 12682  00E5DE                     l22713:
 12683                           
 12684                           ;os.c: 609: {
 12685                           ;os.c: 610: os.input_current = 0;
 12686  00E5DE  0E00               	movlw	0
 12687  00E5E0  0102               	movlb	2	; () banked
 12688  00E5E2  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 12689  00E5E4  0E00               	movlw	0
 12690  00E5E6  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 12691                           
 12692                           ;os.c: 611: }
 12693  00E5E8  0012               	return	
 12694  00E5EA                     l22715:
 12695                           
 12696                           ;os.c: 612: else
 12697                           ;os.c: 613: {
 12698                           ;os.c: 614: tmp = (int32_t) (os.input_current_adc[0] + os.input_current_adc[1] + os.inpu
      +                          t_current_adc[2] + os.input_current_adc[3]);
 12699  00E5EA  0102               	movlb	2	; () banked
 12700  00E5EC  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 12701  00E5EE  0102               	movlb	2	; () banked
 12702  00E5F0  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 12703  00E5F2  0100               	movlb	0	; () banked
 12704  00E5F4  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 12705  00E5F6  0102               	movlb	2	; () banked
 12706  00E5F8  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 12707  00E5FA  0102               	movlb	2	; () banked
 12708  00E5FC  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 12709  00E5FE  0100               	movlb	0	; () banked
 12710  00E600  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12711  00E602  0102               	movlb	2	; () banked
 12712  00E604  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 12713  00E606  0100               	movlb	0	; () banked
 12714  00E608  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12715  00E60A  0102               	movlb	2	; () banked
 12716  00E60C  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 12717  00E60E  0100               	movlb	0	; () banked
 12718  00E610  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12719  00E612  0102               	movlb	2	; () banked
 12720  00E614  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 12721  00E616  0100               	movlb	0	; () banked
 12722  00E618  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12723  00E61A  0102               	movlb	2	; () banked
 12724  00E61C  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 12725  00E61E  0100               	movlb	0	; () banked
 12726  00E620  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12727  00E622  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 12728  00E626  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 12729  00E62A  0100               	movlb	0	; () banked
 12730  00E62C  0E00               	movlw	0
 12731  00E62E  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 12732  00E630  0EFF               	movlw	-1
 12733  00E632  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 12734  00E634  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 12735                           
 12736                           ;os.c: 615: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 12737  00E636  C322  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 12738  00E63A  C323  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 12739  00E63E  0E00               	movlw	0
 12740  00E640  0100               	movlb	0	; () banked
 12741  00E642  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12742  00E644  0EFF               	movlw	255
 12743  00E646  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12744  00E648  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12745  00E64A  0100               	movlb	0	; () banked
 12746  00E64C  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12747  00E64E  0100               	movlb	0	; () banked
 12748  00E650  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12749  00E652  0100               	movlb	0	; () banked
 12750  00E654  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12751  00E656  0100               	movlb	0	; () banked
 12752  00E658  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12753  00E65A  0100               	movlb	0	; () banked
 12754  00E65C  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12755  00E65E  0100               	movlb	0	; () banked
 12756  00E660  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12757  00E662  0100               	movlb	0	; () banked
 12758  00E664  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12759  00E666  0100               	movlb	0	; () banked
 12760  00E668  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12761                           
 12762                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 12763  00E66A  C31D  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 12764  00E66E  C31E  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 12765  00E672  0E00               	movlw	0
 12766  00E674  0100               	movlb	0	; () banked
 12767  00E676  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12768  00E678  0EFF               	movlw	255
 12769  00E67A  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12770  00E67C  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12771  00E67E  0100               	movlb	0	; () banked
 12772  00E680  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12773  00E682  0100               	movlb	0	; () banked
 12774  00E684  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12775  00E686  0100               	movlb	0	; () banked
 12776  00E688  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12777  00E68A  0100               	movlb	0	; () banked
 12778  00E68C  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12779  00E68E  0100               	movlb	0	; () banked
 12780  00E690  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12781  00E692  0100               	movlb	0	; () banked
 12782  00E694  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12783  00E696  0100               	movlb	0	; () banked
 12784  00E698  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12785  00E69A  0100               	movlb	0	; () banked
 12786  00E69C  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;os.c: 617: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 12790  00E69E  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 12791  00E6A2  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 12792  00E6A6  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 12793  00E6AA  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 12794  00E6AE  EE23  F01F         	lfsr	2,_calibrationParameters+31
 12795  00E6B2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12796  00E6B6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12797  00E6BA  0100               	movlb	0	; () banked
 12798  00E6BC  0E00               	movlw	0
 12799  00E6BE  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12800  00E6C0  0EFF               	movlw	-1
 12801  00E6C2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12802  00E6C4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12803  00E6C6  ECC3  F092         	call	___lmul	;wreg free
 12804  00E6CA  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 12805  00E6CE  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 12806  00E6D2  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 12807  00E6D6  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 12808                           
 12809                           ;os.c: 618: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 12810  00E6DA  C321  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 12811  00E6DE  0EFF               	movlw	-1
 12812  00E6E0  0100               	movlb	0	; () banked
 12813  00E6E2  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12814  00E6E4  0100               	movlb	0	; () banked
 12815  00E6E6  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 12816  00E6E8  0100               	movlb	0	; () banked
 12817  00E6EA  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12818  00E6EC  D006               	goto	u22630
 12819  00E6EE                     u22635:
 12820  00E6EE  0100               	movlb	0	; () banked
 12821  00E6F0  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12822  00E6F2  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12823  00E6F4  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12824  00E6F6  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12825  00E6F8  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12826  00E6FA                     u22630:
 12827  00E6FA  0100               	movlb	0	; () banked
 12828  00E6FC  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 12829  00E6FE  D7F7               	goto	u22635
 12830                           
 12831                           ;os.c: 619: tmp += 1;
 12832  00E700  0E01               	movlw	1
 12833  00E702  0100               	movlb	0	; () banked
 12834  00E704  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12835  00E706  0E00               	movlw	0
 12836  00E708  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12837  00E70A  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12838  00E70C  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;os.c: 620: tmp >>= 1;
 12842  00E70E  0100               	movlb	0	; () banked
 12843  00E710  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12844  00E712  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12845  00E714  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12846  00E716  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12847  00E718  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;os.c: 621: os.input_current = (int16_t) tmp;
 12851  00E71A  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 12852  00E71E  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 12853  00E722  0012               	return	
 12854  00E724                     __end_of_system_calculate_input_current:
 12855                           	opt stack 0
 12856                           tblptru	equ	0xFF8
 12857                           tblptrh	equ	0xFF7
 12858                           tblptrl	equ	0xFF6
 12859                           tablat	equ	0xFF5
 12860                           prodh	equ	0xFF4
 12861                           prodl	equ	0xFF3
 12862                           intcon	equ	0xFF2
 12863                           intcon2	equ	0xFF1
 12864                           intcon3	equ	0xFF0
 12865                           postinc0	equ	0xFEE
 12866                           wreg	equ	0xFE8
 12867                           postdec1	equ	0xFE5
 12868                           plusw1	equ	0xFE3
 12869                           fsr1h	equ	0xFE2
 12870                           fsr1l	equ	0xFE1
 12871                           indf2	equ	0xFDF
 12872                           postinc2	equ	0xFDE
 12873                           postdec2	equ	0xFDD
 12874                           plusw2	equ	0xFDB
 12875                           fsr2h	equ	0xFDA
 12876                           fsr2l	equ	0xFD9
 12877                           status	equ	0xFD8
 12878                           
 12879 ;; *************** function _log_write_to_disk *****************
 12880 ;; Defined at:
 12881 ;;		line 199 in file "log.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;		None
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  log_entry      32    1[BANK1 ] struct .
 12886 ;;  file_number     1    0[BANK1 ] unsigned char 
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12897 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12900 ;;Total ram usage:       33 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; Hardware stack levels required when called:   17
 12903 ;; This function calls:
 12904 ;;		_fat_append_to_file
 12905 ;;		_fat_create_file
 12906 ;;		_fat_find_file
 12907 ;;		_log_generate_entry
 12908 ;; This function is called by:
 12909 ;;		_main
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913                           	psect	text50
 12914  011CE4                     __ptext50:
 12915                           	opt stack 0
 12916  011CE4                     _log_write_to_disk:
 12917                           	opt stack 13
 12918                           
 12919                           ;log.c: 201: uint8_t file_number;
 12920                           ;log.c: 202: logEntry_t log_entry;
 12921                           ;log.c: 205: log_generate_entry(&log_entry);
 12922                           
 12923                           ;incstack = 0
 12924  011CE4  0E01               	movlw	low log_write_to_disk@log_entry
 12925  011CE6  0100               	movlb	0	; () banked
 12926  011CE8  6F78               	movwf	log_generate_entry@log_entry& (0+255),b
 12927  011CEA  0E01               	movlw	high log_write_to_disk@log_entry
 12928  011CEC  0100               	movlb	0	; () banked
 12929  011CEE  6F79               	movwf	(log_generate_entry@log_entry+1)& (0+255),b
 12930  011CF0  EC62  F058         	call	_log_generate_entry	;wreg free
 12931                           
 12932                           ;log.c: 208: file_number = fat_find_file(filename, extension);
 12933  011CF4  0EEB               	movlw	low _filename
 12934  011CF6  0100               	movlb	0	; () banked
 12935  011CF8  6F87               	movwf	fat_find_file@name& (0+255),b
 12936  011CFA  0E02               	movlw	high _filename
 12937  011CFC  0100               	movlb	0	; () banked
 12938  011CFE  6F88               	movwf	(fat_find_file@name+1)& (0+255),b
 12939  011D00  0EF4               	movlw	low _extension
 12940  011D02  0100               	movlb	0	; () banked
 12941  011D04  6F89               	movwf	fat_find_file@extension& (0+255),b
 12942  011D06  0E02               	movlw	high _extension
 12943  011D08  0100               	movlb	0	; () banked
 12944  011D0A  6F8A               	movwf	(fat_find_file@extension+1)& (0+255),b
 12945  011D0C  EC27  F080         	call	_fat_find_file	;wreg free
 12946  011D10  0101               	movlb	1	; () banked
 12947  011D12  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12948                           
 12949                           ; BSR set to: 1
 12950                           ;log.c: 209: if(file_number==0xFF)
 12951  011D14  0101               	movlb	1	; () banked
 12952  011D16  2900               	incf	log_write_to_disk@file_number& (0+255),w,b
 12953  011D18  A4D8               	btfss	status,2,c
 12954  011D1A  D019               	goto	l22707
 12955                           
 12956                           ; BSR set to: 1
 12957                           ;log.c: 210: {
 12958                           ;log.c: 212: file_number = fat_create_file(filename, extension, 0);
 12959  011D1C  0EEB               	movlw	low _filename
 12960  011D1E  0100               	movlb	0	; () banked
 12961  011D20  6F9B               	movwf	fat_create_file@name& (0+255),b
 12962  011D22  0E02               	movlw	high _filename
 12963  011D24  0100               	movlb	0	; () banked
 12964  011D26  6F9C               	movwf	(fat_create_file@name+1)& (0+255),b
 12965  011D28  0EF4               	movlw	low _extension
 12966  011D2A  0100               	movlb	0	; () banked
 12967  011D2C  6F9D               	movwf	fat_create_file@extension& (0+255),b
 12968  011D2E  0E02               	movlw	high _extension
 12969  011D30  0100               	movlb	0	; () banked
 12970  011D32  6F9E               	movwf	(fat_create_file@extension+1)& (0+255),b
 12971  011D34  0E00               	movlw	0
 12972  011D36  0100               	movlb	0	; () banked
 12973  011D38  6F9F               	movwf	fat_create_file@size& (0+255),b
 12974  011D3A  0E00               	movlw	0
 12975  011D3C  6FA0               	movwf	(fat_create_file@size+1)& (0+255),b
 12976  011D3E  0E00               	movlw	0
 12977  011D40  6FA1               	movwf	(fat_create_file@size+2)& (0+255),b
 12978  011D42  0E00               	movlw	0
 12979  011D44  6FA2               	movwf	(fat_create_file@size+3)& (0+255),b
 12980  011D46  EC52  F06D         	call	_fat_create_file	;wreg free
 12981  011D4A  0101               	movlb	1	; () banked
 12982  011D4C  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12983  011D4E                     l22707:
 12984                           
 12985                           ; BSR set to: 1
 12986                           ;log.c: 213: }
 12987                           ;log.c: 216: fat_append_to_file(file_number, sizeof(logEntry_t), &log_entry);
 12988  011D4E  0E00               	movlw	0
 12989  011D50  0100               	movlb	0	; () banked
 12990  011D52  6F92               	movwf	(fat_append_to_file@number_of_bytes+1)& (0+255),b
 12991  011D54  0E20               	movlw	32
 12992  011D56  6F91               	movwf	fat_append_to_file@number_of_bytes& (0+255),b
 12993  011D58  0E01               	movlw	low log_write_to_disk@log_entry
 12994  011D5A  0100               	movlb	0	; () banked
 12995  011D5C  6F93               	movwf	fat_append_to_file@data& (0+255),b
 12996  011D5E  0E01               	movlw	high log_write_to_disk@log_entry
 12997  011D60  0100               	movlb	0	; () banked
 12998  011D62  6F94               	movwf	(fat_append_to_file@data+1)& (0+255),b
 12999  011D64  0101               	movlb	1	; () banked
 13000  011D66  5100               	movf	log_write_to_disk@file_number& (0+255),w,b
 13001  011D68  EC5F  F062         	call	_fat_append_to_file
 13002  011D6C  0012               	return		;funcret
 13003  011D6E                     __end_of_log_write_to_disk:
 13004                           	opt stack 0
 13005                           tblptru	equ	0xFF8
 13006                           tblptrh	equ	0xFF7
 13007                           tblptrl	equ	0xFF6
 13008                           tablat	equ	0xFF5
 13009                           prodh	equ	0xFF4
 13010                           prodl	equ	0xFF3
 13011                           intcon	equ	0xFF2
 13012                           intcon2	equ	0xFF1
 13013                           intcon3	equ	0xFF0
 13014                           postinc0	equ	0xFEE
 13015                           wreg	equ	0xFE8
 13016                           postdec1	equ	0xFE5
 13017                           plusw1	equ	0xFE3
 13018                           fsr1h	equ	0xFE2
 13019                           fsr1l	equ	0xFE1
 13020                           indf2	equ	0xFDF
 13021                           postinc2	equ	0xFDE
 13022                           postdec2	equ	0xFDD
 13023                           plusw2	equ	0xFDB
 13024                           fsr2h	equ	0xFDA
 13025                           fsr2l	equ	0xFD9
 13026                           status	equ	0xFD8
 13027                           
 13028 ;; *************** function _log_generate_entry *****************
 13029 ;; Defined at:
 13030 ;;		line 174 in file "log.c"
 13031 ;; Parameters:    Size  Location     Type
 13032 ;;  log_entry       2   24[BANK0 ] PTR struct .
 13033 ;;		 -> log_write_to_disk@log_entry(32), 
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;		None
 13036 ;; Return value:  Size  Location     Type
 13037 ;;                  1    wreg      void 
 13038 ;; Registers used:
 13039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13040 ;; Tracked objects:
 13041 ;;		On entry : 0/0
 13042 ;;		On exit  : 0/0
 13043 ;;		Unchanged: 0/0
 13044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13048 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13049 ;;Total ram usage:        4 bytes
 13050 ;; Hardware stack levels used:    1
 13051 ;; Hardware stack levels required when called:   13
 13052 ;; This function calls:
 13053 ;;		___aldiv
 13054 ;;		___lldiv
 13055 ;;		__get_checksum
 13056 ;;		__get_dateTime
 13057 ;;		__get_temperature
 13058 ;; This function is called by:
 13059 ;;		_log_write_to_disk
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           
 13063                           	psect	text51
 13064  00B0C4                     __ptext51:
 13065                           	opt stack 0
 13066  00B0C4                     _log_generate_entry:
 13067                           	opt stack 16
 13068                           
 13069                           ;log.c: 176: log_entry->dateTime = _get_dateTime();
 13070                           
 13071                           ;incstack = 0
 13072  00B0C4  EC4D  F06E         	call	__get_dateTime	;wreg free
 13073  00B0C8  C078  FFD9         	movff	log_generate_entry@log_entry,fsr2l
 13074  00B0CC  C079  FFDA         	movff	log_generate_entry@log_entry+1,fsr2h
 13075  00B0D0  0100               	movlb	0	; () banked
 13076  00B0D2  C064  FFDE         	movff	?__get_dateTime,postinc2
 13077  00B0D6  0100               	movlb	0	; () banked
 13078  00B0D8  C065  FFDE         	movff	?__get_dateTime+1,postinc2
 13079  00B0DC  0100               	movlb	0	; () banked
 13080  00B0DE  C066  FFDE         	movff	?__get_dateTime+2,postinc2
 13081  00B0E2  0100               	movlb	0	; () banked
 13082  00B0E4  C067  FFDE         	movff	?__get_dateTime+3,postinc2
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;log.c: 177: log_entry->inputVoltage = inputVoltageSum / averageCount;
 13086  00B0E8  C29A  F060         	movff	_inputVoltageSum,___lldiv@dividend
 13087  00B0EC  C29B  F061         	movff	_inputVoltageSum+1,___lldiv@dividend+1
 13088  00B0F0  C29C  F062         	movff	_inputVoltageSum+2,___lldiv@dividend+2
 13089  00B0F4  C29D  F063         	movff	_inputVoltageSum+3,___lldiv@dividend+3
 13090  00B0F8  C016  F064         	movff	_averageCount,___lldiv@divisor
 13091  00B0FC  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13092  00B100  0100               	movlb	0	; () banked
 13093  00B102  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13094  00B104  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13095  00B106  EC78  F088         	call	___lldiv	;wreg free
 13096  00B10A  0100               	movlb	0	; () banked
 13097  00B10C  EE20 F004          	lfsr	2,4
 13098  00B110  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13099  00B112  26D9               	addwf	fsr2l,f,c
 13100  00B114  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13101  00B116  22DA               	addwfc	fsr2h,f,c
 13102  00B118  0100               	movlb	0	; () banked
 13103  00B11A  C060  FFDE         	movff	?___lldiv,postinc2
 13104  00B11E  0100               	movlb	0	; () banked
 13105  00B120  C061  FFDD         	movff	?___lldiv+1,postdec2
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;log.c: 178: log_entry->inputCurrent = inputCurrentSum / averageCount;
 13109  00B124  C296  F060         	movff	_inputCurrentSum,___lldiv@dividend
 13110  00B128  C297  F061         	movff	_inputCurrentSum+1,___lldiv@dividend+1
 13111  00B12C  C298  F062         	movff	_inputCurrentSum+2,___lldiv@dividend+2
 13112  00B130  C299  F063         	movff	_inputCurrentSum+3,___lldiv@dividend+3
 13113  00B134  C016  F064         	movff	_averageCount,___lldiv@divisor
 13114  00B138  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13115  00B13C  0100               	movlb	0	; () banked
 13116  00B13E  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13117  00B140  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13118  00B142  EC78  F088         	call	___lldiv	;wreg free
 13119  00B146  0100               	movlb	0	; () banked
 13120  00B148  EE20 F006          	lfsr	2,6
 13121  00B14C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13122  00B14E  26D9               	addwf	fsr2l,f,c
 13123  00B150  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13124  00B152  22DA               	addwfc	fsr2h,f,c
 13125  00B154  0100               	movlb	0	; () banked
 13126  00B156  C060  FFDE         	movff	?___lldiv,postinc2
 13127  00B15A  0100               	movlb	0	; () banked
 13128  00B15C  C061  FFDD         	movff	?___lldiv+1,postdec2
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;log.c: 179: log_entry->outputVoltage = outputVoltageSum / averageCount;
 13132  00B160  C292  F060         	movff	_outputVoltageSum,___lldiv@dividend
 13133  00B164  C293  F061         	movff	_outputVoltageSum+1,___lldiv@dividend+1
 13134  00B168  C294  F062         	movff	_outputVoltageSum+2,___lldiv@dividend+2
 13135  00B16C  C295  F063         	movff	_outputVoltageSum+3,___lldiv@dividend+3
 13136  00B170  C016  F064         	movff	_averageCount,___lldiv@divisor
 13137  00B174  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13138  00B178  0100               	movlb	0	; () banked
 13139  00B17A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13140  00B17C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13141  00B17E  EC78  F088         	call	___lldiv	;wreg free
 13142  00B182  0100               	movlb	0	; () banked
 13143  00B184  EE20 F008          	lfsr	2,8
 13144  00B188  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13145  00B18A  26D9               	addwf	fsr2l,f,c
 13146  00B18C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13147  00B18E  22DA               	addwfc	fsr2h,f,c
 13148  00B190  0100               	movlb	0	; () banked
 13149  00B192  C060  FFDE         	movff	?___lldiv,postinc2
 13150  00B196  0100               	movlb	0	; () banked
 13151  00B198  C061  FFDD         	movff	?___lldiv+1,postdec2
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;log.c: 180: log_entry->outputCurrent = outputCurrentSum / averageCount;
 13155  00B19C  C28E  F060         	movff	_outputCurrentSum,___lldiv@dividend
 13156  00B1A0  C28F  F061         	movff	_outputCurrentSum+1,___lldiv@dividend+1
 13157  00B1A4  C290  F062         	movff	_outputCurrentSum+2,___lldiv@dividend+2
 13158  00B1A8  C291  F063         	movff	_outputCurrentSum+3,___lldiv@dividend+3
 13159  00B1AC  C016  F064         	movff	_averageCount,___lldiv@divisor
 13160  00B1B0  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13161  00B1B4  0100               	movlb	0	; () banked
 13162  00B1B6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13163  00B1B8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13164  00B1BA  EC78  F088         	call	___lldiv	;wreg free
 13165  00B1BE  0100               	movlb	0	; () banked
 13166  00B1C0  EE20 F00A          	lfsr	2,10
 13167  00B1C4  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13168  00B1C6  26D9               	addwf	fsr2l,f,c
 13169  00B1C8  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13170  00B1CA  22DA               	addwfc	fsr2h,f,c
 13171  00B1CC  0100               	movlb	0	; () banked
 13172  00B1CE  C060  FFDE         	movff	?___lldiv,postinc2
 13173  00B1D2  0100               	movlb	0	; () banked
 13174  00B1D4  C061  FFDD         	movff	?___lldiv+1,postdec2
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;log.c: 181: log_entry->inputPower = inputPowerSum / averageCount;
 13178  00B1D8  C28A  F060         	movff	_inputPowerSum,___lldiv@dividend
 13179  00B1DC  C28B  F061         	movff	_inputPowerSum+1,___lldiv@dividend+1
 13180  00B1E0  C28C  F062         	movff	_inputPowerSum+2,___lldiv@dividend+2
 13181  00B1E4  C28D  F063         	movff	_inputPowerSum+3,___lldiv@dividend+3
 13182  00B1E8  C016  F064         	movff	_averageCount,___lldiv@divisor
 13183  00B1EC  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13184  00B1F0  0100               	movlb	0	; () banked
 13185  00B1F2  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13186  00B1F4  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13187  00B1F6  EC78  F088         	call	___lldiv	;wreg free
 13188  00B1FA  0100               	movlb	0	; () banked
 13189  00B1FC  EE20 F00C          	lfsr	2,12
 13190  00B200  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13191  00B202  26D9               	addwf	fsr2l,f,c
 13192  00B204  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13193  00B206  22DA               	addwfc	fsr2h,f,c
 13194  00B208  0100               	movlb	0	; () banked
 13195  00B20A  C060  FFDE         	movff	?___lldiv,postinc2
 13196  00B20E  0100               	movlb	0	; () banked
 13197  00B210  C061  FFDD         	movff	?___lldiv+1,postdec2
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;log.c: 182: log_entry->outputPower = outputPowerSum / averageCount;
 13201  00B214  C286  F060         	movff	_outputPowerSum,___lldiv@dividend
 13202  00B218  C287  F061         	movff	_outputPowerSum+1,___lldiv@dividend+1
 13203  00B21C  C288  F062         	movff	_outputPowerSum+2,___lldiv@dividend+2
 13204  00B220  C289  F063         	movff	_outputPowerSum+3,___lldiv@dividend+3
 13205  00B224  C016  F064         	movff	_averageCount,___lldiv@divisor
 13206  00B228  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 13207  00B22C  0100               	movlb	0	; () banked
 13208  00B22E  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13209  00B230  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13210  00B232  EC78  F088         	call	___lldiv	;wreg free
 13211  00B236  0100               	movlb	0	; () banked
 13212  00B238  EE20 F00E          	lfsr	2,14
 13213  00B23C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13214  00B23E  26D9               	addwf	fsr2l,f,c
 13215  00B240  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13216  00B242  22DA               	addwfc	fsr2h,f,c
 13217  00B244  0100               	movlb	0	; () banked
 13218  00B246  C060  FFDE         	movff	?___lldiv,postinc2
 13219  00B24A  0100               	movlb	0	; () banked
 13220  00B24C  C061  FFDD         	movff	?___lldiv+1,postdec2
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;log.c: 183: log_entry->inputCapacity = (inputCapacitySum+500) / 1000;
 13224  00B250  0EF4               	movlw	244
 13225  00B252  0102               	movlb	2	; () banked
 13226  00B254  2582               	addwf	_inputCapacitySum& (0+255),w,b
 13227  00B256  0100               	movlb	0	; () banked
 13228  00B258  6F60               	movwf	___lldiv@dividend& (0+255),b
 13229  00B25A  0E01               	movlw	1
 13230  00B25C  0102               	movlb	2	; () banked
 13231  00B25E  2183               	addwfc	(_inputCapacitySum+1)& (0+255),w,b
 13232  00B260  0100               	movlb	0	; () banked
 13233  00B262  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 13234  00B264  0E00               	movlw	0
 13235  00B266  0102               	movlb	2	; () banked
 13236  00B268  2184               	addwfc	(_inputCapacitySum+2)& (0+255),w,b
 13237  00B26A  0100               	movlb	0	; () banked
 13238  00B26C  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 13239  00B26E  0E00               	movlw	0
 13240  00B270  0102               	movlb	2	; () banked
 13241  00B272  2185               	addwfc	(_inputCapacitySum+3)& (0+255),w,b
 13242  00B274  0100               	movlb	0	; () banked
 13243  00B276  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 13244  00B278  0EE8               	movlw	232
 13245  00B27A  0100               	movlb	0	; () banked
 13246  00B27C  6F64               	movwf	___lldiv@divisor& (0+255),b
 13247  00B27E  0E03               	movlw	3
 13248  00B280  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13249  00B282  0E00               	movlw	0
 13250  00B284  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13251  00B286  0E00               	movlw	0
 13252  00B288  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13253  00B28A  EC78  F088         	call	___lldiv	;wreg free
 13254  00B28E  0100               	movlb	0	; () banked
 13255  00B290  EE20 F010          	lfsr	2,16
 13256  00B294  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13257  00B296  26D9               	addwf	fsr2l,f,c
 13258  00B298  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13259  00B29A  22DA               	addwfc	fsr2h,f,c
 13260  00B29C  0100               	movlb	0	; () banked
 13261  00B29E  C060  FFDE         	movff	?___lldiv,postinc2
 13262  00B2A2  0100               	movlb	0	; () banked
 13263  00B2A4  C061  FFDD         	movff	?___lldiv+1,postdec2
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;log.c: 184: log_entry->outputCapacity = (outputCapacitySum+500) / 1000;
 13267  00B2A8  0EF4               	movlw	244
 13268  00B2AA  0102               	movlb	2	; () banked
 13269  00B2AC  257E               	addwf	_outputCapacitySum& (0+255),w,b
 13270  00B2AE  0100               	movlb	0	; () banked
 13271  00B2B0  6F60               	movwf	___lldiv@dividend& (0+255),b
 13272  00B2B2  0E01               	movlw	1
 13273  00B2B4  0102               	movlb	2	; () banked
 13274  00B2B6  217F               	addwfc	(_outputCapacitySum+1)& (0+255),w,b
 13275  00B2B8  0100               	movlb	0	; () banked
 13276  00B2BA  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 13277  00B2BC  0E00               	movlw	0
 13278  00B2BE  0102               	movlb	2	; () banked
 13279  00B2C0  2180               	addwfc	(_outputCapacitySum+2)& (0+255),w,b
 13280  00B2C2  0100               	movlb	0	; () banked
 13281  00B2C4  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 13282  00B2C6  0E00               	movlw	0
 13283  00B2C8  0102               	movlb	2	; () banked
 13284  00B2CA  2181               	addwfc	(_outputCapacitySum+3)& (0+255),w,b
 13285  00B2CC  0100               	movlb	0	; () banked
 13286  00B2CE  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 13287  00B2D0  0EE8               	movlw	232
 13288  00B2D2  0100               	movlb	0	; () banked
 13289  00B2D4  6F64               	movwf	___lldiv@divisor& (0+255),b
 13290  00B2D6  0E03               	movlw	3
 13291  00B2D8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13292  00B2DA  0E00               	movlw	0
 13293  00B2DC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13294  00B2DE  0E00               	movlw	0
 13295  00B2E0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13296  00B2E2  EC78  F088         	call	___lldiv	;wreg free
 13297  00B2E6  0100               	movlb	0	; () banked
 13298  00B2E8  EE20 F012          	lfsr	2,18
 13299  00B2EC  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13300  00B2EE  26D9               	addwf	fsr2l,f,c
 13301  00B2F0  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13302  00B2F2  22DA               	addwfc	fsr2h,f,c
 13303  00B2F4  0100               	movlb	0	; () banked
 13304  00B2F6  C060  FFDE         	movff	?___lldiv,postinc2
 13305  00B2FA  0100               	movlb	0	; () banked
 13306  00B2FC  C061  FFDD         	movff	?___lldiv+1,postdec2
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;log.c: 185: log_entry->temperatureOnboard = _get_temperature(temperatureOnboardSum/aver
      +                          ageCount);
 13310  00B300  0100               	movlb	0	; () banked
 13311  00B302  EE20 F014          	lfsr	2,20
 13312  00B306  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13313  00B308  26D9               	addwf	fsr2l,f,c
 13314  00B30A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13315  00B30C  22DA               	addwfc	fsr2h,f,c
 13316  00B30E  C27A  F060         	movff	_temperatureOnboardSum,___aldiv@dividend
 13317  00B312  C27B  F061         	movff	_temperatureOnboardSum+1,___aldiv@dividend+1
 13318  00B316  C27C  F062         	movff	_temperatureOnboardSum+2,___aldiv@dividend+2
 13319  00B31A  C27D  F063         	movff	_temperatureOnboardSum+3,___aldiv@dividend+3
 13320  00B31E  C016  F064         	movff	_averageCount,___aldiv@divisor
 13321  00B322  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 13322  00B326  0100               	movlb	0	; () banked
 13323  00B328  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 13324  00B32A  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 13325  00B32C  ECEC  F07A         	call	___aldiv	;wreg free
 13326  00B330  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 13327  00B334  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 13328  00B338  EC5F  F09D         	call	__get_temperature	;wreg free
 13329  00B33C  6EDF               	movwf	indf2,c
 13330                           
 13331                           ;log.c: 186: log_entry->temperatureExternal1 = _get_temperature(temperatureExternal1Sum/
      +                          averageCount);
 13332  00B33E  0100               	movlb	0	; () banked
 13333  00B340  EE20 F015          	lfsr	2,21
 13334  00B344  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13335  00B346  26D9               	addwf	fsr2l,f,c
 13336  00B348  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13337  00B34A  22DA               	addwfc	fsr2h,f,c
 13338  00B34C  C276  F060         	movff	_temperatureExternal1Sum,___aldiv@dividend
 13339  00B350  C277  F061         	movff	_temperatureExternal1Sum+1,___aldiv@dividend+1
 13340  00B354  C278  F062         	movff	_temperatureExternal1Sum+2,___aldiv@dividend+2
 13341  00B358  C279  F063         	movff	_temperatureExternal1Sum+3,___aldiv@dividend+3
 13342  00B35C  C016  F064         	movff	_averageCount,___aldiv@divisor
 13343  00B360  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 13344  00B364  0100               	movlb	0	; () banked
 13345  00B366  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 13346  00B368  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 13347  00B36A  ECEC  F07A         	call	___aldiv	;wreg free
 13348  00B36E  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 13349  00B372  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 13350  00B376  EC5F  F09D         	call	__get_temperature	;wreg free
 13351  00B37A  6EDF               	movwf	indf2,c
 13352                           
 13353                           ;log.c: 187: log_entry->temperatureExternal2 = _get_temperature(temperatureExternal2Sum/
      +                          averageCount);
 13354  00B37C  0100               	movlb	0	; () banked
 13355  00B37E  EE20 F016          	lfsr	2,22
 13356  00B382  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13357  00B384  26D9               	addwf	fsr2l,f,c
 13358  00B386  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13359  00B388  22DA               	addwfc	fsr2h,f,c
 13360  00B38A  C272  F060         	movff	_temperatureExternal2Sum,___aldiv@dividend
 13361  00B38E  C273  F061         	movff	_temperatureExternal2Sum+1,___aldiv@dividend+1
 13362  00B392  C274  F062         	movff	_temperatureExternal2Sum+2,___aldiv@dividend+2
 13363  00B396  C275  F063         	movff	_temperatureExternal2Sum+3,___aldiv@dividend+3
 13364  00B39A  C016  F064         	movff	_averageCount,___aldiv@divisor
 13365  00B39E  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 13366  00B3A2  0100               	movlb	0	; () banked
 13367  00B3A4  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 13368  00B3A6  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 13369  00B3A8  ECEC  F07A         	call	___aldiv	;wreg free
 13370  00B3AC  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 13371  00B3B0  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 13372  00B3B4  EC5F  F09D         	call	__get_temperature	;wreg free
 13373  00B3B8  6EDF               	movwf	indf2,c
 13374                           
 13375                           ;log.c: 188: log_entry->chargerOnTime = chargerOnTime >> 1;
 13376  00B3BA  0100               	movlb	0	; () banked
 13377  00B3BC  EE20 F017          	lfsr	2,23
 13378  00B3C0  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13379  00B3C2  26D9               	addwf	fsr2l,f,c
 13380  00B3C4  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13381  00B3C6  22DA               	addwfc	fsr2h,f,c
 13382  00B3C8  90D8               	bcf	status,0,c
 13383  00B3CA  0102               	movlb	2	; () banked
 13384  00B3CC  31B1               	rrcf	(_chargerOnTime+1)& (0+255),w,b
 13385  00B3CE  0100               	movlb	0	; () banked
 13386  00B3D0  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 13387  00B3D2  0102               	movlb	2	; () banked
 13388  00B3D4  31B0               	rrcf	_chargerOnTime& (0+255),w,b
 13389  00B3D6  0100               	movlb	0	; () banked
 13390  00B3D8  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13391  00B3DA  0100               	movlb	0	; () banked
 13392  00B3DC  517A               	movf	??_log_generate_entry& (0+255),w,b
 13393  00B3DE  6EDF               	movwf	indf2,c
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;log.c: 189: log_entry->lowPowerTime = lowPowerTime >> 1;
 13397  00B3E0  0100               	movlb	0	; () banked
 13398  00B3E2  EE20 F018          	lfsr	2,24
 13399  00B3E6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13400  00B3E8  26D9               	addwf	fsr2l,f,c
 13401  00B3EA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13402  00B3EC  22DA               	addwfc	fsr2h,f,c
 13403  00B3EE  90D8               	bcf	status,0,c
 13404  00B3F0  0102               	movlb	2	; () banked
 13405  00B3F2  31AF               	rrcf	(_lowPowerTime+1)& (0+255),w,b
 13406  00B3F4  0100               	movlb	0	; () banked
 13407  00B3F6  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 13408  00B3F8  0102               	movlb	2	; () banked
 13409  00B3FA  31AE               	rrcf	_lowPowerTime& (0+255),w,b
 13410  00B3FC  0100               	movlb	0	; () banked
 13411  00B3FE  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13412  00B400  0100               	movlb	0	; () banked
 13413  00B402  517A               	movf	??_log_generate_entry& (0+255),w,b
 13414  00B404  6EDF               	movwf	indf2,c
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;log.c: 190: log_entry->unused[0] = 0x00;
 13418  00B406  0100               	movlb	0	; () banked
 13419  00B408  EE20 F019          	lfsr	2,25
 13420  00B40C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13421  00B40E  26D9               	addwf	fsr2l,f,c
 13422  00B410  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13423  00B412  22DA               	addwfc	fsr2h,f,c
 13424  00B414  0E00               	movlw	0
 13425  00B416  6EDF               	movwf	indf2,c
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;log.c: 191: log_entry->unused[1] = 0x00;
 13429  00B418  0100               	movlb	0	; () banked
 13430  00B41A  EE20 F01A          	lfsr	2,26
 13431  00B41E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13432  00B420  26D9               	addwf	fsr2l,f,c
 13433  00B422  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13434  00B424  22DA               	addwfc	fsr2h,f,c
 13435  00B426  0E00               	movlw	0
 13436  00B428  6EDF               	movwf	indf2,c
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;log.c: 192: log_entry->unused[2] = 0x00;
 13440  00B42A  0100               	movlb	0	; () banked
 13441  00B42C  EE20 F01B          	lfsr	2,27
 13442  00B430  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13443  00B432  26D9               	addwf	fsr2l,f,c
 13444  00B434  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13445  00B436  22DA               	addwfc	fsr2h,f,c
 13446  00B438  0E00               	movlw	0
 13447  00B43A  6EDF               	movwf	indf2,c
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;log.c: 193: log_entry->unused[3] = 0x00;
 13451  00B43C  0100               	movlb	0	; () banked
 13452  00B43E  EE20 F01C          	lfsr	2,28
 13453  00B442  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13454  00B444  26D9               	addwf	fsr2l,f,c
 13455  00B446  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13456  00B448  22DA               	addwfc	fsr2h,f,c
 13457  00B44A  0E00               	movlw	0
 13458  00B44C  6EDF               	movwf	indf2,c
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;log.c: 194: log_entry->unused[4] = 0x00;
 13462  00B44E  0100               	movlb	0	; () banked
 13463  00B450  EE20 F01D          	lfsr	2,29
 13464  00B454  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13465  00B456  26D9               	addwf	fsr2l,f,c
 13466  00B458  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13467  00B45A  22DA               	addwfc	fsr2h,f,c
 13468  00B45C  0E00               	movlw	0
 13469  00B45E  6EDF               	movwf	indf2,c
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;log.c: 195: log_entry->status = status;
 13473  00B460  0100               	movlb	0	; () banked
 13474  00B462  EE20 F01E          	lfsr	2,30
 13475  00B466  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13476  00B468  26D9               	addwf	fsr2l,f,c
 13477  00B46A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13478  00B46C  22DA               	addwfc	fsr2h,f,c
 13479  00B46E  C1F0  FFDF         	movff	_status,indf2
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;log.c: 196: log_entry->checksum = _get_checksum(log_entry);
 13483  00B472  C078  F060         	movff	log_generate_entry@log_entry,__get_checksum@log_entry
 13484  00B476  C079  F061         	movff	log_generate_entry@log_entry+1,__get_checksum@log_entry+1
 13485  00B47A  ECCA  F09A         	call	__get_checksum	;wreg free
 13486  00B47E  0100               	movlb	0	; () banked
 13487  00B480  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13488  00B482  0100               	movlb	0	; () banked
 13489  00B484  EE20 F01F          	lfsr	2,31
 13490  00B488  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13491  00B48A  26D9               	addwf	fsr2l,f,c
 13492  00B48C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13493  00B48E  22DA               	addwfc	fsr2h,f,c
 13494  00B490  C07A  FFDF         	movff	??_log_generate_entry,indf2
 13495                           
 13496                           ; BSR set to: 0
 13497  00B494  0012               	return		;funcret
 13498  00B496                     __end_of_log_generate_entry:
 13499                           	opt stack 0
 13500                           tblptru	equ	0xFF8
 13501                           tblptrh	equ	0xFF7
 13502                           tblptrl	equ	0xFF6
 13503                           tablat	equ	0xFF5
 13504                           prodh	equ	0xFF4
 13505                           prodl	equ	0xFF3
 13506                           intcon	equ	0xFF2
 13507                           intcon2	equ	0xFF1
 13508                           intcon3	equ	0xFF0
 13509                           postinc0	equ	0xFEE
 13510                           wreg	equ	0xFE8
 13511                           postdec1	equ	0xFE5
 13512                           plusw1	equ	0xFE3
 13513                           fsr1h	equ	0xFE2
 13514                           fsr1l	equ	0xFE1
 13515                           indf2	equ	0xFDF
 13516                           postinc2	equ	0xFDE
 13517                           postdec2	equ	0xFDD
 13518                           plusw2	equ	0xFDB
 13519                           fsr2h	equ	0xFDA
 13520                           fsr2l	equ	0xFD9
 13521                           status	equ	0xFD8
 13522                           
 13523 ;; *************** function __get_temperature *****************
 13524 ;; Defined at:
 13525 ;;		line 107 in file "log.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;  temperature     2   14[BANK0 ] int 
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;		None
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  1    wreg      unsigned char 
 13532 ;; Registers used:
 13533 ;;		wreg, status,2, status,0, cstack
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;Total ram usage:        2 bytes
 13544 ;; Hardware stack levels used:    1
 13545 ;; Hardware stack levels required when called:   11
 13546 ;; This function calls:
 13547 ;;		___awdiv
 13548 ;; This function is called by:
 13549 ;;		_log_generate_entry
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           	psect	text52
 13554  013ABE                     __ptext52:
 13555                           	opt stack 0
 13556  013ABE                     __get_temperature:
 13557                           	opt stack 17
 13558                           
 13559                           ;log.c: 109: temperature += 4025;
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;incstack = 0
 13563  013ABE  0100               	movlb	0	; () banked
 13564  013AC0  0EB9               	movlw	185
 13565  013AC2  276E               	addwf	__get_temperature@temperature& (0+255),f,b
 13566  013AC4  0E0F               	movlw	15
 13567  013AC6  236F               	addwfc	(__get_temperature@temperature+1)& (0+255),f,b
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;log.c: 110: temperature /= 50;
 13571  013AC8  C06E  F060         	movff	__get_temperature@temperature,___awdiv@dividend
 13572  013ACC  C06F  F061         	movff	__get_temperature@temperature+1,___awdiv@dividend+1
 13573  013AD0  0E00               	movlw	0
 13574  013AD2  0100               	movlb	0	; () banked
 13575  013AD4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 13576  013AD6  0E32               	movlw	50
 13577  013AD8  6F62               	movwf	___awdiv@divisor& (0+255),b
 13578  013ADA  EC5C  F087         	call	___awdiv	;wreg free
 13579  013ADE  C060  F06E         	movff	?___awdiv,__get_temperature@temperature
 13580  013AE2  C061  F06F         	movff	?___awdiv+1,__get_temperature@temperature+1
 13581                           
 13582                           ;log.c: 111: return (uint8_t) temperature;
 13583  013AE6  0100               	movlb	0	; () banked
 13584  013AE8  516E               	movf	__get_temperature@temperature& (0+255),w,b
 13585  013AEA  0012               	return	
 13586  013AEC                     __end_of__get_temperature:
 13587                           	opt stack 0
 13588                           tblptru	equ	0xFF8
 13589                           tblptrh	equ	0xFF7
 13590                           tblptrl	equ	0xFF6
 13591                           tablat	equ	0xFF5
 13592                           prodh	equ	0xFF4
 13593                           prodl	equ	0xFF3
 13594                           intcon	equ	0xFF2
 13595                           intcon2	equ	0xFF1
 13596                           intcon3	equ	0xFF0
 13597                           postinc0	equ	0xFEE
 13598                           wreg	equ	0xFE8
 13599                           postdec1	equ	0xFE5
 13600                           plusw1	equ	0xFE3
 13601                           fsr1h	equ	0xFE2
 13602                           fsr1l	equ	0xFE1
 13603                           indf2	equ	0xFDF
 13604                           postinc2	equ	0xFDE
 13605                           postdec2	equ	0xFDD
 13606                           plusw2	equ	0xFDB
 13607                           fsr2h	equ	0xFDA
 13608                           fsr2l	equ	0xFD9
 13609                           status	equ	0xFD8
 13610                           
 13611 ;; *************** function ___awdiv *****************
 13612 ;; Defined at:
 13613 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;  dividend        2    0[BANK0 ] int 
 13616 ;;  divisor         2    2[BANK0 ] int 
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;  quotient        2    6[BANK0 ] int 
 13619 ;;  sign            1    5[BANK0 ] unsigned char 
 13620 ;;  counter         1    4[BANK0 ] unsigned char 
 13621 ;; Return value:  Size  Location     Type
 13622 ;;                  2    0[BANK0 ] int 
 13623 ;; Registers used:
 13624 ;;		wreg, status,2, status,0
 13625 ;; Tracked objects:
 13626 ;;		On entry : 0/0
 13627 ;;		On exit  : 0/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13631 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13633 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13634 ;;Total ram usage:        8 bytes
 13635 ;; Hardware stack levels used:    1
 13636 ;; Hardware stack levels required when called:   10
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		__get_temperature
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text53
 13645  010EB8                     __ptext53:
 13646                           	opt stack 0
 13647  010EB8                     ___awdiv:
 13648                           	opt stack 17
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;incstack = 0
 13652  010EB8  0E00               	movlw	0
 13653  010EBA  0100               	movlb	0	; () banked
 13654  010EBC  6F65               	movwf	___awdiv@sign& (0+255),b
 13655                           
 13656                           ; BSR set to: 0
 13657  010EBE  0100               	movlb	0	; () banked
 13658  010EC0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13659  010EC2  D008               	goto	l19349
 13660                           
 13661                           ; BSR set to: 0
 13662  010EC4  0100               	movlb	0	; () banked
 13663  010EC6  6D62               	negf	___awdiv@divisor& (0+255),b
 13664  010EC8  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13665  010ECA  B0D8               	btfsc	status,0,c
 13666  010ECC  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13667                           
 13668                           ; BSR set to: 0
 13669  010ECE  0E01               	movlw	1
 13670  010ED0  0100               	movlb	0	; () banked
 13671  010ED2  6F65               	movwf	___awdiv@sign& (0+255),b
 13672  010ED4                     l19349:
 13673                           
 13674                           ; BSR set to: 0
 13675  010ED4  0100               	movlb	0	; () banked
 13676  010ED6  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13677  010ED8  D008               	goto	l19355
 13678                           
 13679                           ; BSR set to: 0
 13680  010EDA  0100               	movlb	0	; () banked
 13681  010EDC  6D60               	negf	___awdiv@dividend& (0+255),b
 13682  010EDE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13683  010EE0  B0D8               	btfsc	status,0,c
 13684  010EE2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13685                           
 13686                           ; BSR set to: 0
 13687  010EE4  0E01               	movlw	1
 13688  010EE6  0100               	movlb	0	; () banked
 13689  010EE8  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13690  010EEA                     l19355:
 13691                           
 13692                           ; BSR set to: 0
 13693  010EEA  0E00               	movlw	0
 13694  010EEC  0100               	movlb	0	; () banked
 13695  010EEE  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13696  010EF0  0E00               	movlw	0
 13697  010EF2  6F66               	movwf	___awdiv@quotient& (0+255),b
 13698                           
 13699                           ; BSR set to: 0
 13700  010EF4  0100               	movlb	0	; () banked
 13701  010EF6  5162               	movf	___awdiv@divisor& (0+255),w,b
 13702  010EF8  0100               	movlb	0	; () banked
 13703  010EFA  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13704  010EFC  B4D8               	btfsc	status,2,c
 13705  010EFE  D02C               	goto	l19377
 13706                           
 13707                           ; BSR set to: 0
 13708  010F00  0E01               	movlw	1
 13709  010F02  0100               	movlb	0	; () banked
 13710  010F04  6F64               	movwf	___awdiv@counter& (0+255),b
 13711  010F06  D006               	goto	l19363
 13712  010F08                     l19361:
 13713                           
 13714                           ; BSR set to: 0
 13715  010F08  0100               	movlb	0	; () banked
 13716  010F0A  90D8               	bcf	status,0,c
 13717  010F0C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13718  010F0E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13719  010F10  0100               	movlb	0	; () banked
 13720  010F12  2B64               	incf	___awdiv@counter& (0+255),f,b
 13721  010F14                     l19363:
 13722                           
 13723                           ; BSR set to: 0
 13724  010F14  0100               	movlb	0	; () banked
 13725  010F16  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13726  010F18  D7F7               	goto	l19361
 13727  010F1A                     l19365:
 13728                           
 13729                           ; BSR set to: 0
 13730  010F1A  0100               	movlb	0	; () banked
 13731  010F1C  90D8               	bcf	status,0,c
 13732  010F1E  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13733  010F20  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13734                           
 13735                           ; BSR set to: 0
 13736  010F22  0100               	movlb	0	; () banked
 13737  010F24  5162               	movf	___awdiv@divisor& (0+255),w,b
 13738  010F26  0100               	movlb	0	; () banked
 13739  010F28  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13740  010F2A  0100               	movlb	0	; () banked
 13741  010F2C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13742  010F2E  0100               	movlb	0	; () banked
 13743  010F30  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13744  010F32  A0D8               	btfss	status,0,c
 13745  010F34  D00A               	goto	l19373
 13746                           
 13747                           ; BSR set to: 0
 13748  010F36  0100               	movlb	0	; () banked
 13749  010F38  5162               	movf	___awdiv@divisor& (0+255),w,b
 13750  010F3A  0100               	movlb	0	; () banked
 13751  010F3C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13752  010F3E  0100               	movlb	0	; () banked
 13753  010F40  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13754  010F42  0100               	movlb	0	; () banked
 13755  010F44  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13756                           
 13757                           ; BSR set to: 0
 13758  010F46  0100               	movlb	0	; () banked
 13759  010F48  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13760  010F4A                     l19373:
 13761                           
 13762                           ; BSR set to: 0
 13763  010F4A  0100               	movlb	0	; () banked
 13764  010F4C  90D8               	bcf	status,0,c
 13765  010F4E  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13766  010F50  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13767                           
 13768                           ; BSR set to: 0
 13769  010F52  0100               	movlb	0	; () banked
 13770  010F54  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13771  010F56  D7E1               	goto	l19365
 13772  010F58                     l19377:
 13773                           
 13774                           ; BSR set to: 0
 13775  010F58  0100               	movlb	0	; () banked
 13776  010F5A  5165               	movf	___awdiv@sign& (0+255),w,b
 13777  010F5C  0100               	movlb	0	; () banked
 13778  010F5E  B4D8               	btfsc	status,2,c
 13779  010F60  D005               	goto	l19381
 13780                           
 13781                           ; BSR set to: 0
 13782  010F62  0100               	movlb	0	; () banked
 13783  010F64  6D66               	negf	___awdiv@quotient& (0+255),b
 13784  010F66  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13785  010F68  B0D8               	btfsc	status,0,c
 13786  010F6A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13787  010F6C                     l19381:
 13788                           
 13789                           ; BSR set to: 0
 13790  010F6C  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13791  010F70  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13792  010F74  0012               	return	
 13793  010F76                     __end_of___awdiv:
 13794                           	opt stack 0
 13795                           tblptru	equ	0xFF8
 13796                           tblptrh	equ	0xFF7
 13797                           tblptrl	equ	0xFF6
 13798                           tablat	equ	0xFF5
 13799                           prodh	equ	0xFF4
 13800                           prodl	equ	0xFF3
 13801                           intcon	equ	0xFF2
 13802                           intcon2	equ	0xFF1
 13803                           intcon3	equ	0xFF0
 13804                           postinc0	equ	0xFEE
 13805                           wreg	equ	0xFE8
 13806                           postdec1	equ	0xFE5
 13807                           plusw1	equ	0xFE3
 13808                           fsr1h	equ	0xFE2
 13809                           fsr1l	equ	0xFE1
 13810                           indf2	equ	0xFDF
 13811                           postinc2	equ	0xFDE
 13812                           postdec2	equ	0xFDD
 13813                           plusw2	equ	0xFDB
 13814                           fsr2h	equ	0xFDA
 13815                           fsr2l	equ	0xFD9
 13816                           status	equ	0xFD8
 13817                           
 13818 ;; *************** function __get_dateTime *****************
 13819 ;; Defined at:
 13820 ;;		line 39 in file "log.c"
 13821 ;; Parameters:    Size  Location     Type
 13822 ;;		None
 13823 ;; Auto vars:     Size  Location     Type
 13824 ;;  datetime        4   20[BANK0 ] unsigned long 
 13825 ;;  seconds         1   19[BANK0 ] unsigned char 
 13826 ;;  minutes         1   18[BANK0 ] unsigned char 
 13827 ;;  hours           1   17[BANK0 ] unsigned char 
 13828 ;;  day             1   16[BANK0 ] unsigned char 
 13829 ;;  month           1   15[BANK0 ] unsigned char 
 13830 ;;  year            1   14[BANK0 ] unsigned char 
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  4    4[BANK0 ] unsigned long 
 13833 ;; Registers used:
 13834 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13841 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13842 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13843 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13844 ;;Total ram usage:       20 bytes
 13845 ;; Hardware stack levels used:    1
 13846 ;; Hardware stack levels required when called:   12
 13847 ;; This function calls:
 13848 ;;		_rtcc_get_day_decimal
 13849 ;;		_rtcc_get_hours_decimal
 13850 ;;		_rtcc_get_minutes_decimal
 13851 ;;		_rtcc_get_month_decimal
 13852 ;;		_rtcc_get_seconds_decimal
 13853 ;;		_rtcc_get_year_decimal
 13854 ;; This function is called by:
 13855 ;;		_log_generate_entry
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           
 13859                           	psect	text54
 13860  00DC9A                     __ptext54:
 13861                           	opt stack 0
 13862  00DC9A                     __get_dateTime:
 13863                           	opt stack 16
 13864                           
 13865                           ;log.c: 41: uint32_t datetime;
 13866                           ;log.c: 42: uint8_t year = rtcc_get_year_decimal();
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;incstack = 0
 13870  00DC9A  ECF5  F0A0         	call	_rtcc_get_year_decimal	;wreg free
 13871  00DC9E  0100               	movlb	0	; () banked
 13872  00DCA0  6F6E               	movwf	__get_dateTime@year& (0+255),b
 13873                           
 13874                           ;log.c: 43: uint8_t month = rtcc_get_month_decimal();
 13875  00DCA2  ECFE  F0A0         	call	_rtcc_get_month_decimal	;wreg free
 13876  00DCA6  0100               	movlb	0	; () banked
 13877  00DCA8  6F6F               	movwf	__get_dateTime@month& (0+255),b
 13878                           
 13879                           ;log.c: 44: uint8_t day = rtcc_get_day_decimal();
 13880  00DCAA  EC07  F0A1         	call	_rtcc_get_day_decimal	;wreg free
 13881  00DCAE  0100               	movlb	0	; () banked
 13882  00DCB0  6F70               	movwf	__get_dateTime@day& (0+255),b
 13883                           
 13884                           ;log.c: 45: uint8_t hours = rtcc_get_hours_decimal();
 13885  00DCB2  ECEC  F0A0         	call	_rtcc_get_hours_decimal	;wreg free
 13886  00DCB6  0100               	movlb	0	; () banked
 13887  00DCB8  6F71               	movwf	__get_dateTime@hours& (0+255),b
 13888                           
 13889                           ;log.c: 46: uint8_t minutes = rtcc_get_minutes_decimal();
 13890  00DCBA  ECE3  F0A0         	call	_rtcc_get_minutes_decimal	;wreg free
 13891  00DCBE  0100               	movlb	0	; () banked
 13892  00DCC0  6F72               	movwf	__get_dateTime@minutes& (0+255),b
 13893                           
 13894                           ;log.c: 47: uint8_t seconds = rtcc_get_seconds_decimal();
 13895  00DCC2  EC10  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
 13896  00DCC6  0100               	movlb	0	; () banked
 13897  00DCC8  6F73               	movwf	__get_dateTime@seconds& (0+255),b
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;log.c: 48: datetime = (((uint32_t)(year&0b111111)) << 26);
 13901  00DCCA  C06E  F068         	movff	__get_dateTime@year,??__get_dateTime
 13902  00DCCE  0E3F               	movlw	63
 13903  00DCD0  0100               	movlb	0	; () banked
 13904  00DCD2  1768               	andwf	??__get_dateTime& (0+255),f,b
 13905  00DCD4  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13906  00DCD8  0100               	movlb	0	; () banked
 13907  00DCDA  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13908  00DCDC  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13909  00DCDE  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13910  00DCE0  0E1A               	movlw	26
 13911  00DCE2                     u19245:
 13912  00DCE2  90D8               	bcf	status,0,c
 13913  00DCE4  0100               	movlb	0	; () banked
 13914  00DCE6  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13915  00DCE8  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13916  00DCEA  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13917  00DCEC  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13918  00DCEE  2EE8               	decfsz	wreg,f,c
 13919  00DCF0  D7F8               	goto	u19245
 13920  00DCF2  C069  F074         	movff	??__get_dateTime+1,__get_dateTime@datetime
 13921  00DCF6  C06A  F075         	movff	??__get_dateTime+2,__get_dateTime@datetime+1
 13922  00DCFA  C06B  F076         	movff	??__get_dateTime+3,__get_dateTime@datetime+2
 13923  00DCFE  C06C  F077         	movff	??__get_dateTime+4,__get_dateTime@datetime+3
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;log.c: 49: datetime |= (((uint32_t)(month&0b1111)) << 22);
 13927  00DD02  C06F  F068         	movff	__get_dateTime@month,??__get_dateTime
 13928  00DD06  0E0F               	movlw	15
 13929  00DD08  0100               	movlb	0	; () banked
 13930  00DD0A  1768               	andwf	??__get_dateTime& (0+255),f,b
 13931  00DD0C  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13932  00DD10  0100               	movlb	0	; () banked
 13933  00DD12  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13934  00DD14  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13935  00DD16  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13936  00DD18  0E16               	movlw	22
 13937  00DD1A                     u19255:
 13938  00DD1A  90D8               	bcf	status,0,c
 13939  00DD1C  0100               	movlb	0	; () banked
 13940  00DD1E  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13941  00DD20  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13942  00DD22  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13943  00DD24  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13944  00DD26  2EE8               	decfsz	wreg,f,c
 13945  00DD28  D7F8               	goto	u19255
 13946  00DD2A  0100               	movlb	0	; () banked
 13947  00DD2C  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13948  00DD2E  0100               	movlb	0	; () banked
 13949  00DD30  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13950  00DD32  0100               	movlb	0	; () banked
 13951  00DD34  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13952  00DD36  0100               	movlb	0	; () banked
 13953  00DD38  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13954  00DD3A  0100               	movlb	0	; () banked
 13955  00DD3C  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13956  00DD3E  0100               	movlb	0	; () banked
 13957  00DD40  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13958  00DD42  0100               	movlb	0	; () banked
 13959  00DD44  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13960  00DD46  0100               	movlb	0	; () banked
 13961  00DD48  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13962                           
 13963                           ; BSR set to: 0
 13964                           ;log.c: 50: datetime |= (((uint32_t)day&0b11111)) << 17;
 13965  00DD4A  C070  F068         	movff	__get_dateTime@day,??__get_dateTime
 13966  00DD4E  0E1F               	movlw	31
 13967  00DD50  0100               	movlb	0	; () banked
 13968  00DD52  1768               	andwf	??__get_dateTime& (0+255),f,b
 13969  00DD54  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13970  00DD58  0100               	movlb	0	; () banked
 13971  00DD5A  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13972  00DD5C  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13973  00DD5E  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13974  00DD60  0E11               	movlw	17
 13975  00DD62                     u19265:
 13976  00DD62  90D8               	bcf	status,0,c
 13977  00DD64  0100               	movlb	0	; () banked
 13978  00DD66  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13979  00DD68  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13980  00DD6A  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13981  00DD6C  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13982  00DD6E  2EE8               	decfsz	wreg,f,c
 13983  00DD70  D7F8               	goto	u19265
 13984  00DD72  0100               	movlb	0	; () banked
 13985  00DD74  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13986  00DD76  0100               	movlb	0	; () banked
 13987  00DD78  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13988  00DD7A  0100               	movlb	0	; () banked
 13989  00DD7C  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13990  00DD7E  0100               	movlb	0	; () banked
 13991  00DD80  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13992  00DD82  0100               	movlb	0	; () banked
 13993  00DD84  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13994  00DD86  0100               	movlb	0	; () banked
 13995  00DD88  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13996  00DD8A  0100               	movlb	0	; () banked
 13997  00DD8C  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13998  00DD8E  0100               	movlb	0	; () banked
 13999  00DD90  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;log.c: 51: datetime |= (((uint32_t)(hours&0b11111)) << 12);
 14003  00DD92  C071  F068         	movff	__get_dateTime@hours,??__get_dateTime
 14004  00DD96  0E1F               	movlw	31
 14005  00DD98  0100               	movlb	0	; () banked
 14006  00DD9A  1768               	andwf	??__get_dateTime& (0+255),f,b
 14007  00DD9C  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 14008  00DDA0  0100               	movlb	0	; () banked
 14009  00DDA2  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 14010  00DDA4  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 14011  00DDA6  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 14012  00DDA8  0E0C               	movlw	12
 14013  00DDAA                     u19275:
 14014  00DDAA  90D8               	bcf	status,0,c
 14015  00DDAC  0100               	movlb	0	; () banked
 14016  00DDAE  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 14017  00DDB0  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 14018  00DDB2  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 14019  00DDB4  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 14020  00DDB6  2EE8               	decfsz	wreg,f,c
 14021  00DDB8  D7F8               	goto	u19275
 14022  00DDBA  0100               	movlb	0	; () banked
 14023  00DDBC  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 14024  00DDBE  0100               	movlb	0	; () banked
 14025  00DDC0  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 14026  00DDC2  0100               	movlb	0	; () banked
 14027  00DDC4  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 14028  00DDC6  0100               	movlb	0	; () banked
 14029  00DDC8  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 14030  00DDCA  0100               	movlb	0	; () banked
 14031  00DDCC  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 14032  00DDCE  0100               	movlb	0	; () banked
 14033  00DDD0  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 14034  00DDD2  0100               	movlb	0	; () banked
 14035  00DDD4  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 14036  00DDD6  0100               	movlb	0	; () banked
 14037  00DDD8  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;log.c: 52: datetime |= (((uint16_t)(minutes&0b111111)) << 6);
 14041  00DDDA  0100               	movlb	0	; () banked
 14042  00DDDC  5172               	movf	__get_dateTime@minutes& (0+255),w,b
 14043  00DDDE  0B3F               	andlw	63
 14044  00DDE0  0100               	movlb	0	; () banked
 14045  00DDE2  6F68               	movwf	??__get_dateTime& (0+255),b
 14046  00DDE4  6B69               	clrf	(??__get_dateTime+1)& (0+255),b
 14047  00DDE6  0E06               	movlw	6
 14048  00DDE8                     u19285:
 14049  00DDE8  90D8               	bcf	status,0,c
 14050  00DDEA  0100               	movlb	0	; () banked
 14051  00DDEC  3768               	rlcf	??__get_dateTime& (0+255),f,b
 14052  00DDEE  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 14053  00DDF0  2EE8               	decfsz	wreg,f,c
 14054  00DDF2  D7FA               	goto	u19285
 14055  00DDF4  0100               	movlb	0	; () banked
 14056  00DDF6  5168               	movf	??__get_dateTime& (0+255),w,b
 14057  00DDF8  0100               	movlb	0	; () banked
 14058  00DDFA  6F6A               	movwf	(??__get_dateTime+2)& (0+255),b
 14059  00DDFC  0100               	movlb	0	; () banked
 14060  00DDFE  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 14061  00DE00  0100               	movlb	0	; () banked
 14062  00DE02  6F6B               	movwf	(??__get_dateTime+3)& (0+255),b
 14063  00DE04  0100               	movlb	0	; () banked
 14064  00DE06  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 14065  00DE08  0100               	movlb	0	; () banked
 14066  00DE0A  6B6D               	clrf	(??__get_dateTime+5)& (0+255),b
 14067  00DE0C  0100               	movlb	0	; () banked
 14068  00DE0E  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 14069  00DE10  0100               	movlb	0	; () banked
 14070  00DE12  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 14071  00DE14  0100               	movlb	0	; () banked
 14072  00DE16  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 14073  00DE18  0100               	movlb	0	; () banked
 14074  00DE1A  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 14075  00DE1C  0100               	movlb	0	; () banked
 14076  00DE1E  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 14077  00DE20  0100               	movlb	0	; () banked
 14078  00DE22  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 14079  00DE24  0100               	movlb	0	; () banked
 14080  00DE26  516D               	movf	(??__get_dateTime+5)& (0+255),w,b
 14081  00DE28  0100               	movlb	0	; () banked
 14082  00DE2A  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;log.c: 53: datetime |= (seconds&0b111111);
 14086  00DE2C  C073  F068         	movff	__get_dateTime@seconds,??__get_dateTime
 14087  00DE30  0E3F               	movlw	63
 14088  00DE32  0100               	movlb	0	; () banked
 14089  00DE34  1768               	andwf	??__get_dateTime& (0+255),f,b
 14090  00DE36  0100               	movlb	0	; () banked
 14091  00DE38  5168               	movf	??__get_dateTime& (0+255),w,b
 14092  00DE3A  0100               	movlb	0	; () banked
 14093  00DE3C  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;log.c: 54: return datetime;
 14097  00DE3E  C074  F064         	movff	__get_dateTime@datetime,?__get_dateTime
 14098  00DE42  C075  F065         	movff	__get_dateTime@datetime+1,?__get_dateTime+1
 14099  00DE46  C076  F066         	movff	__get_dateTime@datetime+2,?__get_dateTime+2
 14100  00DE4A  C077  F067         	movff	__get_dateTime@datetime+3,?__get_dateTime+3
 14101  00DE4E  0012               	return	
 14102  00DE50                     __end_of__get_dateTime:
 14103                           	opt stack 0
 14104                           tblptru	equ	0xFF8
 14105                           tblptrh	equ	0xFF7
 14106                           tblptrl	equ	0xFF6
 14107                           tablat	equ	0xFF5
 14108                           prodh	equ	0xFF4
 14109                           prodl	equ	0xFF3
 14110                           intcon	equ	0xFF2
 14111                           intcon2	equ	0xFF1
 14112                           intcon3	equ	0xFF0
 14113                           postinc0	equ	0xFEE
 14114                           wreg	equ	0xFE8
 14115                           postdec1	equ	0xFE5
 14116                           plusw1	equ	0xFE3
 14117                           fsr1h	equ	0xFE2
 14118                           fsr1l	equ	0xFE1
 14119                           indf2	equ	0xFDF
 14120                           postinc2	equ	0xFDE
 14121                           postdec2	equ	0xFDD
 14122                           plusw2	equ	0xFDB
 14123                           fsr2h	equ	0xFDA
 14124                           fsr2l	equ	0xFD9
 14125                           status	equ	0xFD8
 14126                           
 14127 ;; *************** function __get_checksum *****************
 14128 ;; Defined at:
 14129 ;;		line 57 in file "log.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  log_entry       2    0[BANK0 ] PTR struct .
 14132 ;;		 -> log_write_to_disk@log_entry(32), 
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;  byte_array      2    2[BANK0 ] PTR unsigned char 
 14135 ;;		 -> log_write_to_disk@log_entry(32), 
 14136 ;;  cntr            1    5[BANK0 ] unsigned char 
 14137 ;;  checksum        1    4[BANK0 ] unsigned char 
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      unsigned char 
 14140 ;; Registers used:
 14141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14148 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14150 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14151 ;;Total ram usage:        6 bytes
 14152 ;; Hardware stack levels used:    1
 14153 ;; Hardware stack levels required when called:   10
 14154 ;; This function calls:
 14155 ;;		Nothing
 14156 ;; This function is called by:
 14157 ;;		_log_generate_entry
 14158 ;; This function uses a non-reentrant model
 14159 ;;
 14160                           
 14161                           	psect	text55
 14162  013594                     __ptext55:
 14163                           	opt stack 0
 14164  013594                     __get_checksum:
 14165                           	opt stack 18
 14166                           
 14167                           ;log.c: 59: uint8_t checksum;
 14168                           ;log.c: 60: uint8_t *byte_array;
 14169                           ;log.c: 61: uint8_t cntr;
 14170                           ;log.c: 62: byte_array = (uint8_t*) log_entry;
 14171                           
 14172                           ; BSR set to: 0
 14173                           ;incstack = 0
 14174  013594  C060  F062         	movff	__get_checksum@log_entry,__get_checksum@byte_array
 14175  013598  C061  F063         	movff	__get_checksum@log_entry+1,__get_checksum@byte_array+1
 14176                           
 14177                           ;log.c: 63: checksum = 0x00;
 14178  01359C  0E00               	movlw	0
 14179  01359E  0100               	movlb	0	; () banked
 14180  0135A0  6F64               	movwf	__get_checksum@checksum& (0+255),b
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;log.c: 64: for(cntr=0; cntr<31; ++cntr)
 14184  0135A2  0E00               	movlw	0
 14185  0135A4  0100               	movlb	0	; () banked
 14186  0135A6  6F65               	movwf	__get_checksum@cntr& (0+255),b
 14187  0135A8  0E1E               	movlw	30
 14188  0135AA  0100               	movlb	0	; () banked
 14189  0135AC  6565               	cpfsgt	__get_checksum@cntr& (0+255),b
 14190  0135AE  D001               	goto	l20145
 14191  0135B0  D011               	goto	l20151
 14192  0135B2                     l20145:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;log.c: 65: {
 14196                           ;log.c: 66: checksum ^= byte_array[cntr];
 14197  0135B2  0100               	movlb	0	; () banked
 14198  0135B4  5165               	movf	__get_checksum@cntr& (0+255),w,b
 14199  0135B6  0D01               	mullw	1
 14200  0135B8  50F3               	movf	prodl,w,c
 14201  0135BA  0100               	movlb	0	; () banked
 14202  0135BC  2562               	addwf	__get_checksum@byte_array& (0+255),w,b
 14203  0135BE  6ED9               	movwf	fsr2l,c
 14204  0135C0  50F4               	movf	prodh,w,c
 14205  0135C2  0100               	movlb	0	; () banked
 14206  0135C4  2163               	addwfc	(__get_checksum@byte_array+1)& (0+255),w,b
 14207  0135C6  6EDA               	movwf	fsr2h,c
 14208  0135C8  50DF               	movf	indf2,w,c
 14209  0135CA  0100               	movlb	0	; () banked
 14210  0135CC  1B64               	xorwf	__get_checksum@checksum& (0+255),f,b
 14211                           
 14212                           ; BSR set to: 0
 14213  0135CE  0100               	movlb	0	; () banked
 14214  0135D0  2B65               	incf	__get_checksum@cntr& (0+255),f,b
 14215  0135D2  D7EA               	goto	L9
 14216  0135D4                     l20151:
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;log.c: 67: }
 14220                           ;log.c: 68: return checksum;
 14221  0135D4  0100               	movlb	0	; () banked
 14222  0135D6  5164               	movf	__get_checksum@checksum& (0+255),w,b
 14223  0135D8  0012               	return	
 14224  0135DA                     __end_of__get_checksum:
 14225                           	opt stack 0
 14226                           tblptru	equ	0xFF8
 14227                           tblptrh	equ	0xFF7
 14228                           tblptrl	equ	0xFF6
 14229                           tablat	equ	0xFF5
 14230                           prodh	equ	0xFF4
 14231                           prodl	equ	0xFF3
 14232                           intcon	equ	0xFF2
 14233                           intcon2	equ	0xFF1
 14234                           intcon3	equ	0xFF0
 14235                           postinc0	equ	0xFEE
 14236                           wreg	equ	0xFE8
 14237                           postdec1	equ	0xFE5
 14238                           plusw1	equ	0xFE3
 14239                           fsr1h	equ	0xFE2
 14240                           fsr1l	equ	0xFE1
 14241                           indf2	equ	0xFDF
 14242                           postinc2	equ	0xFDE
 14243                           postdec2	equ	0xFDD
 14244                           plusw2	equ	0xFDB
 14245                           fsr2h	equ	0xFDA
 14246                           fsr2l	equ	0xFD9
 14247                           status	equ	0xFD8
 14248                           
 14249 ;; *************** function _fat_create_file *****************
 14250 ;; Defined at:
 14251 ;;		line 321 in file "fat16.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  name            2   59[BANK0 ] PTR unsigned char 
 14254 ;;		 -> filename(9), 
 14255 ;;  extension       2   61[BANK0 ] PTR unsigned char 
 14256 ;;		 -> extension(4), 
 14257 ;;  size            4   63[BANK0 ] unsigned long 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  root_entry     32   80[BANK0 ] struct .
 14260 ;;  cluster         2   78[BANK0 ] unsigned int 
 14261 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 14262 ;;  cluster_coun    2   73[BANK0 ] unsigned int 
 14263 ;;  next_cluster    2   71[BANK0 ] unsigned int 
 14264 ;;  root_slot       1   75[BANK0 ] unsigned char 
 14265 ;; Return value:  Size  Location     Type
 14266 ;;                  1    wreg      unsigned char 
 14267 ;; Registers used:
 14268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14269 ;; Tracked objects:
 14270 ;;		On entry : 0/0
 14271 ;;		On exit  : 0/0
 14272 ;;		Unchanged: 0/0
 14273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14274 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14275 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14276 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14277 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14278 ;;Total ram usage:       53 bytes
 14279 ;; Hardware stack levels used:    1
 14280 ;; Hardware stack levels required when called:   16
 14281 ;; This function calls:
 14282 ;;		__get_available_root_entry
 14283 ;;		__get_date
 14284 ;;		__get_empty_cluster
 14285 ;;		__get_time
 14286 ;;		__write_fat
 14287 ;;		__write_root
 14288 ;;		_fat_find_file
 14289 ;;		_fat_get_empty_clusters
 14290 ;;		_memcpy
 14291 ;; This function is called by:
 14292 ;;		_log_write_to_disk
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text56
 14297  00DAA4                     __ptext56:
 14298                           	opt stack 0
 14299  00DAA4                     _fat_create_file:
 14300                           	opt stack 13
 14301                           
 14302                           ;fat16.c: 323: uint8_t root_slot;
 14303                           ;fat16.c: 324: rootEntry_t root_entry;
 14304                           ;fat16.c: 325: uint16_t cluster;
 14305                           ;fat16.c: 326: uint16_t next_cluster;
 14306                           ;fat16.c: 327: uint16_t number_of_clusters;
 14307                           ;fat16.c: 328: uint16_t cluster_count;
 14308                           ;fat16.c: 332: if(fat_find_file(name, extension) != 0xFF)
 14309                           
 14310                           ; BSR set to: 0
 14311                           ;incstack = 0
 14312  00DAA4  C09B  F087         	movff	fat_create_file@name,fat_find_file@name
 14313  00DAA8  C09C  F088         	movff	fat_create_file@name+1,fat_find_file@name+1
 14314  00DAAC  C09D  F089         	movff	fat_create_file@extension,fat_find_file@extension
 14315  00DAB0  C09E  F08A         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 14316  00DAB4  EC27  F080         	call	_fat_find_file	;wreg free
 14317  00DAB8  0AFF               	xorlw	255
 14318  00DABA  B4D8               	btfsc	status,2,c
 14319  00DABC  D002               	goto	l21809
 14320                           
 14321                           ;fat16.c: 333: {
 14322                           ;fat16.c: 336: return 0xFF;
 14323  00DABE  0EFF               	movlw	255
 14324  00DAC0  0012               	return	
 14325  00DAC2                     l21809:
 14326                           
 14327                           ;fat16.c: 337: }
 14328                           ;fat16.c: 341: root_slot = _get_available_root_entry();
 14329  00DAC2  EC76  F09D         	call	__get_available_root_entry	;wreg free
 14330  00DAC6  0100               	movlb	0	; () banked
 14331  00DAC8  6FAB               	movwf	fat_create_file@root_slot& (0+255),b
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;fat16.c: 342: if(root_slot == 0xFF)
 14335  00DACA  0100               	movlb	0	; () banked
 14336  00DACC  29AB               	incf	fat_create_file@root_slot& (0+255),w,b
 14337  00DACE  A4D8               	btfss	status,2,c
 14338  00DAD0  D002               	goto	l21817
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;fat16.c: 343: {
 14342                           ;fat16.c: 346: return 0xFE;
 14343  00DAD2  0EFE               	movlw	254
 14344                           
 14345                           ; BSR set to: 0
 14346  00DAD4  0012               	return	
 14347  00DAD6                     l21817:
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;fat16.c: 347: }
 14351                           ;fat16.c: 350: number_of_clusters = (size>>9) + 1;
 14352  00DAD6  C09F  F0A3         	movff	fat_create_file@size,??_fat_create_file
 14353  00DADA  C0A0  F0A4         	movff	fat_create_file@size+1,??_fat_create_file+1
 14354  00DADE  C0A1  F0A5         	movff	fat_create_file@size+2,??_fat_create_file+2
 14355  00DAE2  C0A2  F0A6         	movff	fat_create_file@size+3,??_fat_create_file+3
 14356  00DAE6  0E0A               	movlw	10
 14357  00DAE8  D006               	goto	u21710
 14358  00DAEA                     u21715:
 14359  00DAEA  0100               	movlb	0	; () banked
 14360  00DAEC  90D8               	bcf	status,0,c
 14361  00DAEE  33A6               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 14362  00DAF0  33A5               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 14363  00DAF2  33A4               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 14364  00DAF4  33A3               	rrcf	??_fat_create_file& (0+255),f,b
 14365  00DAF6                     u21710:
 14366  00DAF6  2EE8               	decfsz	wreg,f,c
 14367  00DAF8  D7F8               	goto	u21715
 14368  00DAFA  0E01               	movlw	1
 14369  00DAFC  0100               	movlb	0	; () banked
 14370  00DAFE  25A3               	addwf	??_fat_create_file& (0+255),w,b
 14371  00DB00  0100               	movlb	0	; () banked
 14372  00DB02  6FAC               	movwf	fat_create_file@number_of_clusters& (0+255),b
 14373  00DB04  0E00               	movlw	0
 14374  00DB06  0100               	movlb	0	; () banked
 14375  00DB08  21A4               	addwfc	(??_fat_create_file+1)& (0+255),w,b
 14376  00DB0A  0100               	movlb	0	; () banked
 14377  00DB0C  6FAD               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;fat16.c: 351: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 14381  00DB0E  C0AC  F087         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 14382  00DB12  C0AD  F088         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 14383  00DB16  EC34  F089         	call	_fat_get_empty_clusters	;wreg free
 14384  00DB1A  0100               	movlb	0	; () banked
 14385  00DB1C  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 14386  00DB1E  0100               	movlb	0	; () banked
 14387  00DB20  1987               	xorwf	?_fat_get_empty_clusters& (0+255),w,b
 14388  00DB22  E106               	bnz	u21720
 14389  00DB24  0100               	movlb	0	; () banked
 14390  00DB26  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14391  00DB28  0100               	movlb	0	; () banked
 14392  00DB2A  1988               	xorwf	(?_fat_get_empty_clusters+1)& (0+255),w,b
 14393  00DB2C  B4D8               	btfsc	status,2,c
 14394  00DB2E  D002               	goto	l21825
 14395  00DB30                     u21720:
 14396                           
 14397                           ; BSR set to: 0
 14398                           ;fat16.c: 352: {
 14399                           ;fat16.c: 355: return 0xFD;
 14400  00DB30  0EFD               	movlw	253
 14401                           
 14402                           ; BSR set to: 0
 14403  00DB32  0012               	return	
 14404  00DB34                     l21825:
 14405                           
 14406                           ; BSR set to: 0
 14407                           ;fat16.c: 356: }
 14408                           ;fat16.c: 359: cluster = _get_empty_cluster(2);
 14409  00DB34  0E00               	movlw	0
 14410  00DB36  0100               	movlb	0	; () banked
 14411  00DB38  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14412  00DB3A  0E02               	movlw	2
 14413  00DB3C  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14414  00DB3E  EC9A  F08D         	call	__get_empty_cluster	;wreg free
 14415  00DB42  C087  F0AE         	movff	?__get_empty_cluster,fat_create_file@cluster
 14416  00DB46  C088  F0AF         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 14417                           
 14418                           ;fat16.c: 362: memcpy(root_entry.fileName, name, 8);
 14419  00DB4A  0EB0               	movlw	low fat_create_file@root_entry
 14420  00DB4C  0100               	movlb	0	; () banked
 14421  00DB4E  6F60               	movwf	memcpy@d1& (0+255),b
 14422  00DB50  0E00               	movlw	high fat_create_file@root_entry
 14423  00DB52  0100               	movlb	0	; () banked
 14424  00DB54  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14425  00DB56  C09B  F062         	movff	fat_create_file@name,memcpy@s1
 14426  00DB5A  C09C  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 14427  00DB5E  0E00               	movlw	0
 14428  00DB60  0100               	movlb	0	; () banked
 14429  00DB62  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14430  00DB64  0E08               	movlw	8
 14431  00DB66  6F64               	movwf	memcpy@n& (0+255),b
 14432  00DB68  EC5C  F095         	call	_memcpy	;wreg free
 14433                           
 14434                           ;fat16.c: 363: memcpy(root_entry.fileExtension, extension, 3);
 14435  00DB6C  0EB8               	movlw	low (fat_create_file@root_entry+8)
 14436  00DB6E  0100               	movlb	0	; () banked
 14437  00DB70  6F60               	movwf	memcpy@d1& (0+255),b
 14438  00DB72  0E00               	movlw	high (fat_create_file@root_entry+8)
 14439  00DB74  0100               	movlb	0	; () banked
 14440  00DB76  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14441  00DB78  C09D  F062         	movff	fat_create_file@extension,memcpy@s1
 14442  00DB7C  C09E  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 14443  00DB80  0E00               	movlw	0
 14444  00DB82  0100               	movlb	0	; () banked
 14445  00DB84  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14446  00DB86  0E03               	movlw	3
 14447  00DB88  6F64               	movwf	memcpy@n& (0+255),b
 14448  00DB8A  EC5C  F095         	call	_memcpy	;wreg free
 14449                           
 14450                           ;fat16.c: 364: root_entry.attributes = 0x00;
 14451  00DB8E  0E00               	movlw	0
 14452  00DB90  0100               	movlb	0	; () banked
 14453  00DB92  6FBB               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 14454                           
 14455                           ; BSR set to: 0
 14456                           ;fat16.c: 365: root_entry.reserved1 = 0x00;
 14457  00DB94  0E00               	movlw	0
 14458  00DB96  0100               	movlb	0	; () banked
 14459  00DB98  6FBC               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;fat16.c: 366: root_entry.secondFractions = 0x00;
 14463  00DB9A  0E00               	movlw	0
 14464  00DB9C  0100               	movlb	0	; () banked
 14465  00DB9E  6FBD               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;fat16.c: 367: root_entry.createdTime = _get_time();
 14469  00DBA0  EC84  F08F         	call	__get_time	;wreg free
 14470  00DBA4  C064  F0BE         	movff	?__get_time,fat_create_file@root_entry+14
 14471  00DBA8  C065  F0BF         	movff	?__get_time+1,fat_create_file@root_entry+15
 14472                           
 14473                           ;fat16.c: 368: root_entry.createdDate = _get_date();
 14474  00DBAC  EC14  F091         	call	__get_date	;wreg free
 14475  00DBB0  C064  F0C0         	movff	?__get_date,fat_create_file@root_entry+16
 14476  00DBB4  C065  F0C1         	movff	?__get_date+1,fat_create_file@root_entry+17
 14477                           
 14478                           ;fat16.c: 369: root_entry.lastAccessDate = root_entry.createdDate;
 14479  00DBB8  C0C0  F0C2         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 14480  00DBBC  C0C1  F0C3         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 14481                           
 14482                           ;fat16.c: 370: root_entry.reserved2 = 0x00;
 14483  00DBC0  0E00               	movlw	0
 14484  00DBC2  0100               	movlb	0	; () banked
 14485  00DBC4  6FC5               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 14486  00DBC6  0E00               	movlw	0
 14487  00DBC8  6FC4               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;fat16.c: 371: root_entry.modifiedTime = root_entry.createdTime;
 14491  00DBCA  C0BE  F0C6         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 14492  00DBCE  C0BF  F0C7         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 14493                           
 14494                           ; BSR set to: 0
 14495                           ;fat16.c: 372: root_entry.modifiedDate = root_entry.createdDate;
 14496  00DBD2  C0C0  F0C8         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 14497  00DBD6  C0C1  F0C9         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;fat16.c: 373: root_entry.firstCluster = cluster;
 14501  00DBDA  C0AE  F0CA         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 14502  00DBDE  C0AF  F0CB         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;fat16.c: 374: root_entry.fileSize = size;
 14506  00DBE2  C09F  F0CC         	movff	fat_create_file@size,fat_create_file@root_entry+28
 14507  00DBE6  C0A0  F0CD         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 14508  00DBEA  C0A1  F0CE         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 14509  00DBEE  C0A2  F0CF         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 14510                           
 14511                           ;fat16.c: 377: _write_root(root_slot, &root_entry);
 14512  00DBF2  0EB0               	movlw	low fat_create_file@root_entry
 14513  00DBF4  0100               	movlb	0	; () banked
 14514  00DBF6  6F88               	movwf	__write_root@data& (0+255),b
 14515  00DBF8  0E00               	movlw	high fat_create_file@root_entry
 14516  00DBFA  0100               	movlb	0	; () banked
 14517  00DBFC  6F89               	movwf	(__write_root@data+1)& (0+255),b
 14518  00DBFE  0100               	movlb	0	; () banked
 14519  00DC00  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 14520  00DC02  EC52  F094         	call	__write_root
 14521                           
 14522                           ;fat16.c: 382: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 14523  00DC06  0E00               	movlw	0
 14524  00DC08  0100               	movlb	0	; () banked
 14525  00DC0A  6FAA               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 14526  00DC0C  0E01               	movlw	1
 14527  00DC0E  6FA9               	movwf	fat_create_file@cluster_count& (0+255),b
 14528  00DC10  D037               	goto	l21865
 14529  00DC12                     l21855:
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;fat16.c: 383: {
 14533                           ;fat16.c: 385: if(cluster_count==number_of_clusters)
 14534  00DC12  0100               	movlb	0	; () banked
 14535  00DC14  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 14536  00DC16  0100               	movlb	0	; () banked
 14537  00DC18  19A9               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 14538  00DC1A  E111               	bnz	l21859
 14539  00DC1C  0100               	movlb	0	; () banked
 14540  00DC1E  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14541  00DC20  0100               	movlb	0	; () banked
 14542  00DC22  19AA               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 14543  00DC24  A4D8               	btfss	status,2,c
 14544  00DC26  D00B               	goto	l21859
 14545                           
 14546                           ; BSR set to: 0
 14547                           ;fat16.c: 386: {
 14548                           ;fat16.c: 388: _write_fat(cluster, 0xFFFF);
 14549  00DC28  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 14550  00DC2C  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 14551  00DC30  0EFF               	movlw	255
 14552  00DC32  0100               	movlb	0	; () banked
 14553  00DC34  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 14554  00DC36  698A               	setf	__write_fat@value& (0+255),b
 14555  00DC38  EC98  F099         	call	__write_fat	;wreg free
 14556                           
 14557                           ;fat16.c: 389: }
 14558  00DC3C  D01E               	goto	l21863
 14559  00DC3E                     l21859:
 14560                           
 14561                           ;fat16.c: 390: else
 14562                           ;fat16.c: 391: {
 14563                           ;fat16.c: 393: next_cluster = _get_empty_cluster(cluster+1);
 14564  00DC3E  0E01               	movlw	1
 14565  00DC40  0100               	movlb	0	; () banked
 14566  00DC42  25AE               	addwf	fat_create_file@cluster& (0+255),w,b
 14567  00DC44  0100               	movlb	0	; () banked
 14568  00DC46  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14569  00DC48  0E00               	movlw	0
 14570  00DC4A  0100               	movlb	0	; () banked
 14571  00DC4C  21AF               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 14572  00DC4E  0100               	movlb	0	; () banked
 14573  00DC50  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14574  00DC52  EC9A  F08D         	call	__get_empty_cluster	;wreg free
 14575  00DC56  C087  F0A7         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 14576  00DC5A  C088  F0A8         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 14577                           
 14578                           ;fat16.c: 395: _write_fat(cluster, next_cluster);
 14579  00DC5E  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 14580  00DC62  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 14581  00DC66  C0A7  F08A         	movff	fat_create_file@next_cluster,__write_fat@value
 14582  00DC6A  C0A8  F08B         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 14583  00DC6E  EC98  F099         	call	__write_fat	;wreg free
 14584                           
 14585                           ;fat16.c: 397: cluster = next_cluster;
 14586  00DC72  C0A7  F0AE         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 14587  00DC76  C0A8  F0AF         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 14588  00DC7A                     l21863:
 14589  00DC7A  0100               	movlb	0	; () banked
 14590  00DC7C  4BA9               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 14591  00DC7E  2BAA               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 14592  00DC80                     l21865:
 14593                           
 14594                           ; BSR set to: 0
 14595  00DC80  0100               	movlb	0	; () banked
 14596  00DC82  51A9               	movf	fat_create_file@cluster_count& (0+255),w,b
 14597  00DC84  0100               	movlb	0	; () banked
 14598  00DC86  5DAC               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 14599  00DC88  0100               	movlb	0	; () banked
 14600  00DC8A  51AA               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 14601  00DC8C  0100               	movlb	0	; () banked
 14602  00DC8E  59AD               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14603  00DC90  B0D8               	btfsc	status,0,c
 14604  00DC92  D7BF               	goto	l21855
 14605                           
 14606                           ; BSR set to: 0
 14607                           ;fat16.c: 398: }
 14608                           ;fat16.c: 399: }
 14609                           ;fat16.c: 400: return root_slot;
 14610                           
 14611                           ; BSR set to: 0
 14612  00DC94  0100               	movlb	0	; () banked
 14613  00DC96  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 14614  00DC98  0012               	return	
 14615  00DC9A                     __end_of_fat_create_file:
 14616                           	opt stack 0
 14617                           tblptru	equ	0xFF8
 14618                           tblptrh	equ	0xFF7
 14619                           tblptrl	equ	0xFF6
 14620                           tablat	equ	0xFF5
 14621                           prodh	equ	0xFF4
 14622                           prodl	equ	0xFF3
 14623                           intcon	equ	0xFF2
 14624                           intcon2	equ	0xFF1
 14625                           intcon3	equ	0xFF0
 14626                           postinc0	equ	0xFEE
 14627                           wreg	equ	0xFE8
 14628                           postdec1	equ	0xFE5
 14629                           plusw1	equ	0xFE3
 14630                           fsr1h	equ	0xFE2
 14631                           fsr1l	equ	0xFE1
 14632                           indf2	equ	0xFDF
 14633                           postinc2	equ	0xFDE
 14634                           postdec2	equ	0xFDD
 14635                           plusw2	equ	0xFDB
 14636                           fsr2h	equ	0xFDA
 14637                           fsr2l	equ	0xFD9
 14638                           status	equ	0xFD8
 14639                           
 14640 ;; *************** function _fat_get_empty_clusters *****************
 14641 ;; Defined at:
 14642 ;;		line 132 in file "fat16.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;  maximum         2   39[BANK0 ] unsigned int 
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;  cluster         2   49[BANK0 ] unsigned int 
 14647 ;;  empty_cluste    2   47[BANK0 ] unsigned int 
 14648 ;;  value           2   45[BANK0 ] unsigned int 
 14649 ;;  offset          2   43[BANK0 ] unsigned int 
 14650 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  2   39[BANK0 ] unsigned int 
 14653 ;; Registers used:
 14654 ;;		wreg, status,2, status,0, cstack
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14661 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14663 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14664 ;;Total ram usage:       12 bytes
 14665 ;; Hardware stack levels used:    1
 14666 ;; Hardware stack levels required when called:   14
 14667 ;; This function calls:
 14668 ;;		_flash_partial_read
 14669 ;; This function is called by:
 14670 ;;		_fat_create_file
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text57
 14675  011268                     __ptext57:
 14676                           	opt stack 0
 14677  011268                     _fat_get_empty_clusters:
 14678                           	opt stack 14
 14679                           
 14680                           ;fat16.c: 134: uint16_t empty_clusters = 0;
 14681                           
 14682                           ;incstack = 0
 14683  011268  0E00               	movlw	0
 14684  01126A  0100               	movlb	0	; () banked
 14685  01126C  6F90               	movwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),b
 14686  01126E  0E00               	movlw	0
 14687  011270  6F8F               	movwf	fat_get_empty_clusters@empty_clusters& (0+255),b
 14688                           
 14689                           ;fat16.c: 135: uint16_t cluster;
 14690                           ;fat16.c: 136: uint16_t fat_sector;
 14691                           ;fat16.c: 137: uint16_t offset;
 14692                           ;fat16.c: 138: uint16_t value;
 14693                           ;fat16.c: 141: for(cluster=2; cluster<(8170+2); ++cluster)
 14694  011272  0E00               	movlw	0
 14695  011274  0100               	movlb	0	; () banked
 14696  011276  6F92               	movwf	(fat_get_empty_clusters@cluster+1)& (0+255),b
 14697  011278  0E02               	movlw	2
 14698  01127A  6F91               	movwf	fat_get_empty_clusters@cluster& (0+255),b
 14699  01127C                     l20009:
 14700                           
 14701                           ; BSR set to: 0
 14702  01127C  0EEC               	movlw	236
 14703  01127E  0100               	movlb	0	; () banked
 14704  011280  5D91               	subwf	fat_get_empty_clusters@cluster& (0+255),w,b
 14705  011282  0E1F               	movlw	31
 14706  011284  0100               	movlb	0	; () banked
 14707  011286  5992               	subwfb	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14708  011288  B0D8               	btfsc	status,0,c
 14709  01128A  D045               	goto	l2968
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;fat16.c: 142: {
 14713                           ;fat16.c: 143: fat_sector = cluster>>8;
 14714                           
 14715                           ; BSR set to: 0
 14716                           
 14717                           ; BSR set to: 0
 14718  01128C  0100               	movlb	0	; () banked
 14719  01128E  5192               	movf	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14720  011290  0100               	movlb	0	; () banked
 14721  011292  6F89               	movwf	fat_get_empty_clusters@fat_sector& (0+255),b
 14722  011294  6B8A               	clrf	(fat_get_empty_clusters@fat_sector+1)& (0+255),b
 14723                           
 14724                           ; BSR set to: 0
 14725                           ;fat16.c: 144: fat_sector += 2;
 14726  011296  0E02               	movlw	2
 14727  011298  0100               	movlb	0	; () banked
 14728  01129A  2789               	addwf	fat_get_empty_clusters@fat_sector& (0+255),f,b
 14729  01129C  0E00               	movlw	0
 14730  01129E  238A               	addwfc	(fat_get_empty_clusters@fat_sector+1)& (0+255),f,b
 14731                           
 14732                           ; BSR set to: 0
 14733                           ;fat16.c: 145: offset = cluster & 0xFF;
 14734  0112A0  0100               	movlb	0	; () banked
 14735  0112A2  5191               	movf	fat_get_empty_clusters@cluster& (0+255),w,b
 14736  0112A4  0100               	movlb	0	; () banked
 14737  0112A6  6F8B               	movwf	fat_get_empty_clusters@offset& (0+255),b
 14738  0112A8  6B8C               	clrf	(fat_get_empty_clusters@offset+1)& (0+255),b
 14739                           
 14740                           ; BSR set to: 0
 14741                           ;fat16.c: 146: offset <<= 1;
 14742  0112AA  0100               	movlb	0	; () banked
 14743  0112AC  90D8               	bcf	status,0,c
 14744  0112AE  378B               	rlcf	fat_get_empty_clusters@offset& (0+255),f,b
 14745  0112B0  378C               	rlcf	(fat_get_empty_clusters@offset+1)& (0+255),f,b
 14746                           
 14747                           ; BSR set to: 0
 14748                           ;fat16.c: 147: flash_partial_read(fat_sector, offset, 2, &value);
 14749  0112B2  C089  F073         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 14750  0112B6  C08A  F074         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 14751  0112BA  C08B  F075         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 14752  0112BE  C08C  F076         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 14753  0112C2  0E00               	movlw	0
 14754  0112C4  0100               	movlb	0	; () banked
 14755  0112C6  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14756  0112C8  0E02               	movlw	2
 14757  0112CA  6F77               	movwf	flash_partial_read@length& (0+255),b
 14758  0112CC  0E8D               	movlw	low fat_get_empty_clusters@value
 14759  0112CE  0100               	movlb	0	; () banked
 14760  0112D0  6F79               	movwf	flash_partial_read@data& (0+255),b
 14761  0112D2  0E00               	movlw	high fat_get_empty_clusters@value
 14762  0112D4  0100               	movlb	0	; () banked
 14763  0112D6  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14764  0112D8  EC95  F08A         	call	_flash_partial_read	;wreg free
 14765                           
 14766                           ;fat16.c: 148: if(value==0x0000)
 14767  0112DC  0100               	movlb	0	; () banked
 14768  0112DE  518D               	movf	fat_get_empty_clusters@value& (0+255),w,b
 14769  0112E0  0100               	movlb	0	; () banked
 14770  0112E2  118E               	iorwf	(fat_get_empty_clusters@value+1)& (0+255),w,b
 14771  0112E4  A4D8               	btfss	status,2,c
 14772  0112E6  D013               	goto	l20031
 14773                           
 14774                           ; BSR set to: 0
 14775                           ;fat16.c: 149: {
 14776                           ;fat16.c: 150: ++empty_clusters;
 14777  0112E8  0100               	movlb	0	; () banked
 14778  0112EA  4B8F               	infsnz	fat_get_empty_clusters@empty_clusters& (0+255),f,b
 14779  0112EC  2B90               	incf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),f,b
 14780                           
 14781                           ; BSR set to: 0
 14782                           ;fat16.c: 151: if(empty_clusters==maximum)
 14783  0112EE  0100               	movlb	0	; () banked
 14784  0112F0  5187               	movf	fat_get_empty_clusters@maximum& (0+255),w,b
 14785  0112F2  0100               	movlb	0	; () banked
 14786  0112F4  198F               	xorwf	fat_get_empty_clusters@empty_clusters& (0+255),w,b
 14787  0112F6  E10B               	bnz	l20031
 14788  0112F8  0100               	movlb	0	; () banked
 14789  0112FA  5188               	movf	(fat_get_empty_clusters@maximum+1)& (0+255),w,b
 14790  0112FC  0100               	movlb	0	; () banked
 14791  0112FE  1990               	xorwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),w,b
 14792  011300  A4D8               	btfss	status,2,c
 14793  011302  D005               	goto	l20031
 14794                           
 14795                           ; BSR set to: 0
 14796                           ;fat16.c: 152: {
 14797                           ;fat16.c: 153: return empty_clusters;
 14798  011304  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14799  011308  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14800  01130C  0012               	return	
 14801  01130E                     l20031:
 14802                           
 14803                           ; BSR set to: 0
 14804  01130E  0100               	movlb	0	; () banked
 14805  011310  4B91               	infsnz	fat_get_empty_clusters@cluster& (0+255),f,b
 14806  011312  2B92               	incf	(fat_get_empty_clusters@cluster+1)& (0+255),f,b
 14807  011314  D7B3               	goto	l20009
 14808  011316                     l2968:
 14809                           
 14810                           ; BSR set to: 0
 14811                           ;fat16.c: 154: }
 14812                           ;fat16.c: 155: }
 14813                           ;fat16.c: 156: }
 14814                           ;fat16.c: 157: return empty_clusters;
 14815  011316  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14816  01131A  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14817                           
 14818                           ; BSR set to: 0
 14819  01131E  0012               	return		;funcret
 14820  011320                     __end_of_fat_get_empty_clusters:
 14821                           	opt stack 0
 14822                           tblptru	equ	0xFF8
 14823                           tblptrh	equ	0xFF7
 14824                           tblptrl	equ	0xFF6
 14825                           tablat	equ	0xFF5
 14826                           prodh	equ	0xFF4
 14827                           prodl	equ	0xFF3
 14828                           intcon	equ	0xFF2
 14829                           intcon2	equ	0xFF1
 14830                           intcon3	equ	0xFF0
 14831                           postinc0	equ	0xFEE
 14832                           wreg	equ	0xFE8
 14833                           postdec1	equ	0xFE5
 14834                           plusw1	equ	0xFE3
 14835                           fsr1h	equ	0xFE2
 14836                           fsr1l	equ	0xFE1
 14837                           indf2	equ	0xFDF
 14838                           postinc2	equ	0xFDE
 14839                           postdec2	equ	0xFDD
 14840                           plusw2	equ	0xFDB
 14841                           fsr2h	equ	0xFDA
 14842                           fsr2l	equ	0xFD9
 14843                           status	equ	0xFD8
 14844                           
 14845 ;; *************** function _fat_find_file *****************
 14846 ;; Defined at:
 14847 ;;		line 262 in file "fat16.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  name            2   39[BANK0 ] PTR unsigned char 
 14850 ;;		 -> filename(9), 
 14851 ;;  extension       2   41[BANK0 ] PTR unsigned char 
 14852 ;;		 -> extension(4), 
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;  buffer         11   43[BANK0 ] unsigned char [11]
 14855 ;;  offset          2   57[BANK0 ] unsigned int 
 14856 ;;  sector          2   55[BANK0 ] unsigned int 
 14857 ;;  slot            1   54[BANK0 ] unsigned char 
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  1    wreg      unsigned char 
 14860 ;; Registers used:
 14861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : 0/0
 14864 ;;		On exit  : 0/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14867 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14868 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14870 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14871 ;;Total ram usage:       20 bytes
 14872 ;; Hardware stack levels used:    1
 14873 ;; Hardware stack levels required when called:   14
 14874 ;; This function calls:
 14875 ;;		_flash_partial_read
 14876 ;;		_strncmp
 14877 ;; This function is called by:
 14878 ;;		_fat_create_file
 14879 ;;		_log_write_to_disk
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text58
 14884  01004E                     __ptext58:
 14885                           	opt stack 0
 14886  01004E                     _fat_find_file:
 14887                           	opt stack 15
 14888                           
 14889                           ;fat16.c: 264: uint8_t slot;
 14890                           ;fat16.c: 265: uint16_t sector;
 14891                           ;fat16.c: 266: uint16_t offset;
 14892                           ;fat16.c: 267: uint8_t buffer[11];
 14893                           ;fat16.c: 268: slot = 0;
 14894                           
 14895                           ; BSR set to: 0
 14896                           ;incstack = 0
 14897  01004E  0E00               	movlw	0
 14898  010050  0100               	movlb	0	; () banked
 14899  010052  6F96               	movwf	fat_find_file@slot& (0+255),b
 14900                           
 14901                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 14902  010054  0E00               	movlw	0
 14903  010056  0100               	movlb	0	; () banked
 14904  010058  6F98               	movwf	(fat_find_file@sector+1)& (0+255),b
 14905  01005A  0E12               	movlw	18
 14906  01005C  6F97               	movwf	fat_find_file@sector& (0+255),b
 14907  01005E                     l20069:
 14908                           
 14909                           ; BSR set to: 0
 14910  01005E  0100               	movlb	0	; () banked
 14911  010060  5198               	movf	(fat_find_file@sector+1)& (0+255),w,b
 14912  010062  E16D               	bnz	l20111
 14913  010064  0E16               	movlw	22
 14914  010066  0100               	movlb	0	; () banked
 14915  010068  5D97               	subwf	fat_find_file@sector& (0+255),w,b
 14916  01006A  B0D8               	btfsc	status,0,c
 14917  01006C  D068               	goto	l20111
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;fat16.c: 270: {
 14921                           ;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 14922                           
 14923                           ; BSR set to: 0
 14924                           
 14925                           ; BSR set to: 0
 14926  01006E  0E00               	movlw	0
 14927  010070  0100               	movlb	0	; () banked
 14928  010072  6F9A               	movwf	(fat_find_file@offset+1)& (0+255),b
 14929  010074  0E00               	movlw	0
 14930  010076  6F99               	movwf	fat_find_file@offset& (0+255),b
 14931  010078                     l20075:
 14932                           
 14933                           ; BSR set to: 0
 14934  010078  0E02               	movlw	2
 14935  01007A  0100               	movlb	0	; () banked
 14936  01007C  5D9A               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 14937  01007E  B0D8               	btfsc	status,0,c
 14938  010080  D05A               	goto	l20107
 14939                           
 14940                           ; BSR set to: 0
 14941                           ;fat16.c: 272: {
 14942                           ;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 14943                           
 14944                           ; BSR set to: 0
 14945                           
 14946                           ; BSR set to: 0
 14947  010082  C097  F073         	movff	fat_find_file@sector,flash_partial_read@page
 14948  010086  C098  F074         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 14949  01008A  C099  F075         	movff	fat_find_file@offset,flash_partial_read@start
 14950  01008E  C09A  F076         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 14951  010092  0E00               	movlw	0
 14952  010094  0100               	movlb	0	; () banked
 14953  010096  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14954  010098  0E0B               	movlw	11
 14955  01009A  6F77               	movwf	flash_partial_read@length& (0+255),b
 14956  01009C  0E8B               	movlw	low fat_find_file@buffer
 14957  01009E  0100               	movlb	0	; () banked
 14958  0100A0  6F79               	movwf	flash_partial_read@data& (0+255),b
 14959  0100A2  0E00               	movlw	high fat_find_file@buffer
 14960  0100A4  0100               	movlb	0	; () banked
 14961  0100A6  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14962  0100A8  EC95  F08A         	call	_flash_partial_read	;wreg free
 14963                           
 14964                           ;fat16.c: 274: if(buffer[0]==0x00)
 14965  0100AC  0100               	movlb	0	; () banked
 14966  0100AE  518B               	movf	fat_find_file@buffer& (0+255),w,b
 14967  0100B0  0100               	movlb	0	; () banked
 14968  0100B2  A4D8               	btfss	status,2,c
 14969  0100B4  D002               	goto	l20089
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;fat16.c: 275: {
 14973                           ;fat16.c: 278: return 0xFF;
 14974  0100B6  0EFF               	movlw	255
 14975                           
 14976                           ; BSR set to: 0
 14977  0100B8  0012               	return	
 14978  0100BA                     l20089:
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 14982  0100BA  0EE5               	movlw	229
 14983  0100BC  0100               	movlb	0	; () banked
 14984  0100BE  198B               	xorwf	fat_find_file@buffer& (0+255),w,b
 14985  0100C0  B4D8               	btfsc	status,2,c
 14986  0100C2  D031               	goto	l20101
 14987                           
 14988                           ; BSR set to: 0
 14989                           ;fat16.c: 286: else
 14990                           ;fat16.c: 287: {
 14991                           ;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 14992                           
 14993                           ; BSR set to: 0
 14994                           
 14995                           ; BSR set to: 0
 14996                           ;fat16.c: 281: {
 14997                           ;fat16.c: 285: }
 14998  0100C4  C087  F060         	movff	fat_find_file@name,strncmp@s1
 14999  0100C8  C088  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 15000  0100CC  0E8B               	movlw	low fat_find_file@buffer
 15001  0100CE  0100               	movlb	0	; () banked
 15002  0100D0  6F62               	movwf	strncmp@s2& (0+255),b
 15003  0100D2  0E00               	movlw	high fat_find_file@buffer
 15004  0100D4  0100               	movlb	0	; () banked
 15005  0100D6  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 15006  0100D8  0E00               	movlw	0
 15007  0100DA  0100               	movlb	0	; () banked
 15008  0100DC  6F65               	movwf	(strncmp@len+1)& (0+255),b
 15009  0100DE  0E08               	movlw	8
 15010  0100E0  6F64               	movwf	strncmp@len& (0+255),b
 15011  0100E2  EC6F  F08C         	call	_strncmp	;wreg free
 15012  0100E6  0100               	movlb	0	; () banked
 15013  0100E8  5160               	movf	?_strncmp& (0+255),w,b
 15014  0100EA  0100               	movlb	0	; () banked
 15015  0100EC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 15016  0100EE  A4D8               	btfss	status,2,c
 15017  0100F0  D01A               	goto	l20101
 15018                           
 15019                           ; BSR set to: 0
 15020                           ;fat16.c: 290: {
 15021                           ;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 15022  0100F2  C089  F060         	movff	fat_find_file@extension,strncmp@s1
 15023  0100F6  C08A  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 15024  0100FA  0E93               	movlw	low (fat_find_file@buffer+8)
 15025  0100FC  0100               	movlb	0	; () banked
 15026  0100FE  6F62               	movwf	strncmp@s2& (0+255),b
 15027  010100  0E00               	movlw	high (fat_find_file@buffer+8)
 15028  010102  0100               	movlb	0	; () banked
 15029  010104  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 15030  010106  0E00               	movlw	0
 15031  010108  0100               	movlb	0	; () banked
 15032  01010A  6F65               	movwf	(strncmp@len+1)& (0+255),b
 15033  01010C  0E03               	movlw	3
 15034  01010E  6F64               	movwf	strncmp@len& (0+255),b
 15035  010110  EC6F  F08C         	call	_strncmp	;wreg free
 15036  010114  0100               	movlb	0	; () banked
 15037  010116  5160               	movf	?_strncmp& (0+255),w,b
 15038  010118  0100               	movlb	0	; () banked
 15039  01011A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 15040  01011C  A4D8               	btfss	status,2,c
 15041  01011E  D003               	goto	l20101
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;fat16.c: 293: {
 15045                           ;fat16.c: 296: return slot;
 15046  010120  0100               	movlb	0	; () banked
 15047  010122  5196               	movf	fat_find_file@slot& (0+255),w,b
 15048                           
 15049                           ; BSR set to: 0
 15050  010124  0012               	return	
 15051  010126                     l20101:
 15052                           
 15053                           ; BSR set to: 0
 15054                           ;fat16.c: 297: }
 15055                           ;fat16.c: 298: }
 15056                           ;fat16.c: 299: }
 15057                           ;fat16.c: 300: ++slot;
 15058  010126  0100               	movlb	0	; () banked
 15059  010128  2B96               	incf	fat_find_file@slot& (0+255),f,b
 15060                           
 15061                           ; BSR set to: 0
 15062  01012A  0E20               	movlw	32
 15063  01012C  0100               	movlb	0	; () banked
 15064  01012E  2799               	addwf	fat_find_file@offset& (0+255),f,b
 15065  010130  0E00               	movlw	0
 15066  010132  239A               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 15067  010134  D7A1               	goto	l20075
 15068  010136                     l20107:
 15069                           
 15070                           ; BSR set to: 0
 15071  010136  0100               	movlb	0	; () banked
 15072  010138  4B97               	infsnz	fat_find_file@sector& (0+255),f,b
 15073  01013A  2B98               	incf	(fat_find_file@sector+1)& (0+255),f,b
 15074  01013C  D790               	goto	l20069
 15075  01013E                     l20111:
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;fat16.c: 301: }
 15079                           ;fat16.c: 302: }
 15080                           ;fat16.c: 303: return 0xFF;
 15081  01013E  0EFF               	movlw	255
 15082  010140  0012               	return	
 15083  010142                     __end_of_fat_find_file:
 15084                           	opt stack 0
 15085                           tblptru	equ	0xFF8
 15086                           tblptrh	equ	0xFF7
 15087                           tblptrl	equ	0xFF6
 15088                           tablat	equ	0xFF5
 15089                           prodh	equ	0xFF4
 15090                           prodl	equ	0xFF3
 15091                           intcon	equ	0xFF2
 15092                           intcon2	equ	0xFF1
 15093                           intcon3	equ	0xFF0
 15094                           postinc0	equ	0xFEE
 15095                           wreg	equ	0xFE8
 15096                           postdec1	equ	0xFE5
 15097                           plusw1	equ	0xFE3
 15098                           fsr1h	equ	0xFE2
 15099                           fsr1l	equ	0xFE1
 15100                           indf2	equ	0xFDF
 15101                           postinc2	equ	0xFDE
 15102                           postdec2	equ	0xFDD
 15103                           plusw2	equ	0xFDB
 15104                           fsr2h	equ	0xFDA
 15105                           fsr2l	equ	0xFD9
 15106                           status	equ	0xFD8
 15107                           
 15108 ;; *************** function _strncmp *****************
 15109 ;; Defined at:
 15110 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strncmp.c"
 15111 ;; Parameters:    Size  Location     Type
 15112 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 15113 ;;		 -> extension(4), filename(9), 
 15114 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 15115 ;;		 -> fat_find_file@buffer(11), 
 15116 ;;  len             2    4[BANK0 ] unsigned int 
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  2    0[BANK0 ] int 
 15121 ;; Registers used:
 15122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15128 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15130 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15131 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15132 ;;Total ram usage:        9 bytes
 15133 ;; Hardware stack levels used:    1
 15134 ;; Hardware stack levels required when called:   10
 15135 ;; This function calls:
 15136 ;;		Nothing
 15137 ;; This function is called by:
 15138 ;;		_fat_find_file
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text59
 15143  0118DE                     __ptext59:
 15144                           	opt stack 0
 15145  0118DE                     _strncmp:
 15146                           	opt stack 18
 15147                           
 15148                           ; BSR set to: 0
 15149                           ;incstack = 0
 15150  0118DE  D039               	goto	l19299
 15151  0118E0                     l19289:
 15152  0118E0  C060  FFD9         	movff	strncmp@s1,fsr2l
 15153  0118E4  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 15154  0118E8  50DF               	movf	indf2,w,c
 15155  0118EA  B4D8               	btfsc	status,2,c
 15156  0118EC  D00C               	goto	l19293
 15157  0118EE  C062  FFD9         	movff	strncmp@s2,fsr2l
 15158  0118F2  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 15159  0118F6  C060  FFE1         	movff	strncmp@s1,fsr1l
 15160  0118FA  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 15161  0118FE  50DE               	movf	postinc2,w,c
 15162  011900  18E6               	xorwf	postinc1,w,c
 15163  011902  B4D8               	btfsc	status,2,c
 15164  011904  D020               	goto	l19297
 15165  011906                     l19293:
 15166  011906  C062  FFD9         	movff	strncmp@s2,fsr2l
 15167  01190A  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 15168  01190E  50DF               	movf	indf2,w,c
 15169  011910  0100               	movlb	0	; () banked
 15170  011912  6F66               	movwf	??_strncmp& (0+255),b
 15171  011914  6B67               	clrf	(??_strncmp+1)& (0+255),b
 15172  011916  0100               	movlb	0	; () banked
 15173  011918  1F66               	comf	??_strncmp& (0+255),f,b
 15174  01191A  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 15175  01191C  4B66               	infsnz	??_strncmp& (0+255),f,b
 15176  01191E  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 15177  011920  C060  FFD9         	movff	strncmp@s1,fsr2l
 15178  011924  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 15179  011928  50DF               	movf	indf2,w,c
 15180  01192A  0100               	movlb	0	; () banked
 15181  01192C  6F68               	movwf	(??_strncmp+2)& (0+255),b
 15182  01192E  0100               	movlb	0	; () banked
 15183  011930  5168               	movf	(??_strncmp+2)& (0+255),w,b
 15184  011932  0100               	movlb	0	; () banked
 15185  011934  2566               	addwf	??_strncmp& (0+255),w,b
 15186  011936  0100               	movlb	0	; () banked
 15187  011938  6F60               	movwf	?_strncmp& (0+255),b
 15188  01193A  0E00               	movlw	0
 15189  01193C  0100               	movlb	0	; () banked
 15190  01193E  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 15191  011940  0100               	movlb	0	; () banked
 15192  011942  6F61               	movwf	(?_strncmp+1)& (0+255),b
 15193                           
 15194                           ; BSR set to: 0
 15195  011944  0012               	return	
 15196  011946                     l19297:
 15197  011946  0100               	movlb	0	; () banked
 15198  011948  4B60               	infsnz	strncmp@s1& (0+255),f,b
 15199  01194A  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 15200  01194C  0100               	movlb	0	; () banked
 15201  01194E  4B62               	infsnz	strncmp@s2& (0+255),f,b
 15202  011950  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 15203  011952                     l19299:
 15204  011952  0100               	movlb	0	; () banked
 15205  011954  0764               	decf	strncmp@len& (0+255),f,b
 15206  011956  A0D8               	btfss	status,0,c
 15207  011958  0765               	decf	(strncmp@len+1)& (0+255),f,b
 15208  01195A  0100               	movlb	0	; () banked
 15209  01195C  2964               	incf	strncmp@len& (0+255),w,b
 15210  01195E  E1C0               	bnz	l19289
 15211  011960  0100               	movlb	0	; () banked
 15212  011962  2965               	incf	(strncmp@len+1)& (0+255),w,b
 15213  011964  A4D8               	btfss	status,2,c
 15214  011966  D7BC               	goto	l19289
 15215                           
 15216                           ; BSR set to: 0
 15217                           
 15218                           ; BSR set to: 0
 15219  011968  0E00               	movlw	0
 15220  01196A  0100               	movlb	0	; () banked
 15221  01196C  6F61               	movwf	(?_strncmp+1)& (0+255),b
 15222  01196E  0E00               	movlw	0
 15223  011970  6F60               	movwf	?_strncmp& (0+255),b
 15224  011972  0012               	return	
 15225  011974                     __end_of_strncmp:
 15226                           	opt stack 0
 15227                           tblptru	equ	0xFF8
 15228                           tblptrh	equ	0xFF7
 15229                           tblptrl	equ	0xFF6
 15230                           tablat	equ	0xFF5
 15231                           prodh	equ	0xFF4
 15232                           prodl	equ	0xFF3
 15233                           intcon	equ	0xFF2
 15234                           intcon2	equ	0xFF1
 15235                           intcon3	equ	0xFF0
 15236                           postinc0	equ	0xFEE
 15237                           wreg	equ	0xFE8
 15238                           postinc1	equ	0xFE6
 15239                           postdec1	equ	0xFE5
 15240                           plusw1	equ	0xFE3
 15241                           fsr1h	equ	0xFE2
 15242                           fsr1l	equ	0xFE1
 15243                           indf2	equ	0xFDF
 15244                           postinc2	equ	0xFDE
 15245                           postdec2	equ	0xFDD
 15246                           plusw2	equ	0xFDB
 15247                           fsr2h	equ	0xFDA
 15248                           fsr2l	equ	0xFD9
 15249                           status	equ	0xFD8
 15250                           
 15251 ;; *************** function __get_available_root_entry *****************
 15252 ;; Defined at:
 15253 ;;		line 96 in file "fat16.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;		None
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;  file_number     1   46[BANK0 ] unsigned char 
 15258 ;; Return value:  Size  Location     Type
 15259 ;;                  1    wreg      unsigned char 
 15260 ;; Registers used:
 15261 ;;		wreg, status,2, status,0, cstack
 15262 ;; Tracked objects:
 15263 ;;		On entry : 0/0
 15264 ;;		On exit  : 0/0
 15265 ;;		Unchanged: 0/0
 15266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15270 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15271 ;;Total ram usage:        1 bytes
 15272 ;; Hardware stack levels used:    1
 15273 ;; Hardware stack levels required when called:   15
 15274 ;; This function calls:
 15275 ;;		__root_is_available
 15276 ;; This function is called by:
 15277 ;;		_fat_create_file
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281                           	psect	text60
 15282  013AEC                     __ptext60:
 15283                           	opt stack 0
 15284  013AEC                     __get_available_root_entry:
 15285                           	opt stack 13
 15286                           
 15287                           ;fat16.c: 98: uint8_t file_number;
 15288                           ;fat16.c: 99: for(file_number=0; file_number<64; ++file_number)
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;incstack = 0
 15292  013AEC  0E00               	movlw	0
 15293  013AEE  0100               	movlb	0	; () banked
 15294  013AF0  6F8E               	movwf	__get_available_root_entry@file_number& (0+255),b
 15295  013AF2                     l19961:
 15296                           
 15297                           ; BSR set to: 0
 15298  013AF2  0E3F               	movlw	63
 15299  013AF4  0100               	movlb	0	; () banked
 15300  013AF6  658E               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 15301  013AF8  D001               	goto	l19965
 15302  013AFA  D00D               	goto	l19975
 15303  013AFC                     l19965:
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;fat16.c: 100: {
 15307                           ;fat16.c: 101: if(_root_is_available(file_number))
 15308  013AFC  0100               	movlb	0	; () banked
 15309  013AFE  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15310  013B00  ECBA  F08C         	call	__root_is_available
 15311  013B04  0900               	iorlw	0
 15312  013B06  B4D8               	btfsc	status,2,c
 15313  013B08  D003               	goto	l19971
 15314                           
 15315                           ;fat16.c: 102: {
 15316                           ;fat16.c: 103: return file_number;
 15317  013B0A  0100               	movlb	0	; () banked
 15318  013B0C  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15319                           
 15320                           ; BSR set to: 0
 15321  013B0E  0012               	return	
 15322  013B10                     l19971:
 15323  013B10  0100               	movlb	0	; () banked
 15324  013B12  2B8E               	incf	__get_available_root_entry@file_number& (0+255),f,b
 15325  013B14  D7EE               	goto	l19961
 15326  013B16                     l19975:
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;fat16.c: 104: }
 15330                           ;fat16.c: 105: }
 15331                           ;fat16.c: 106: return 0xFF;
 15332  013B16  0EFF               	movlw	255
 15333  013B18  0012               	return	
 15334  013B1A                     __end_of__get_available_root_entry:
 15335                           	opt stack 0
 15336                           tblptru	equ	0xFF8
 15337                           tblptrh	equ	0xFF7
 15338                           tblptrl	equ	0xFF6
 15339                           tablat	equ	0xFF5
 15340                           prodh	equ	0xFF4
 15341                           prodl	equ	0xFF3
 15342                           intcon	equ	0xFF2
 15343                           intcon2	equ	0xFF1
 15344                           intcon3	equ	0xFF0
 15345                           postinc0	equ	0xFEE
 15346                           wreg	equ	0xFE8
 15347                           postinc1	equ	0xFE6
 15348                           postdec1	equ	0xFE5
 15349                           plusw1	equ	0xFE3
 15350                           fsr1h	equ	0xFE2
 15351                           fsr1l	equ	0xFE1
 15352                           indf2	equ	0xFDF
 15353                           postinc2	equ	0xFDE
 15354                           postdec2	equ	0xFDD
 15355                           plusw2	equ	0xFDB
 15356                           fsr2h	equ	0xFDA
 15357                           fsr2l	equ	0xFD9
 15358                           status	equ	0xFD8
 15359                           
 15360 ;; *************** function _fat_append_to_file *****************
 15361 ;; Defined at:
 15362 ;;		line 460 in file "fat16.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;  file_number     1    wreg     unsigned char 
 15365 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 15366 ;;  data            2   51[BANK0 ] PTR unsigned char 
 15367 ;;		 -> log_write_to_disk@log_entry(32), 
 15368 ;; Auto vars:     Size  Location     Type
 15369 ;;  file_number     1   73[BANK0 ] unsigned char 
 15370 ;;  root           32   80[BANK0 ] struct .
 15371 ;;  position        4   76[BANK0 ] unsigned long 
 15372 ;;  file_size       4   63[BANK0 ] unsigned long 
 15373 ;;  length          2   74[BANK0 ] unsigned int 
 15374 ;;  offset          2   71[BANK0 ] unsigned int 
 15375 ;;  fat_cluster     2   69[BANK0 ] unsigned int 
 15376 ;;  new_cluster     2   67[BANK0 ] unsigned int 
 15377 ;;  sector          2   61[BANK0 ] unsigned int 
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  1    wreg      unsigned char 
 15380 ;; Registers used:
 15381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15382 ;; Tracked objects:
 15383 ;;		On entry : 0/0
 15384 ;;		On exit  : 0/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15388 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15389 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15390 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15391 ;;Total ram usage:       63 bytes
 15392 ;; Hardware stack levels used:    1
 15393 ;; Hardware stack levels required when called:   16
 15394 ;; This function calls:
 15395 ;;		__get_empty_cluster
 15396 ;;		__read_fat
 15397 ;;		__read_root
 15398 ;;		__root_is_available
 15399 ;;		__sector_from_cluster
 15400 ;;		__update_modified_time
 15401 ;;		__write_fat
 15402 ;;		__write_root
 15403 ;;		_flash_partial_write
 15404 ;; This function is called by:
 15405 ;;		_log_write_to_disk
 15406 ;; This function uses a non-reentrant model
 15407 ;;
 15408                           
 15409                           	psect	text61
 15410  00C4BE                     __ptext61:
 15411                           	opt stack 0
 15412  00C4BE                     _fat_append_to_file:
 15413                           	opt stack 13
 15414                           
 15415                           ; BSR set to: 0
 15416                           ;incstack = 0
 15417                           ;fat_append_to_file@file_number stored from wreg
 15418  00C4BE  0100               	movlb	0	; () banked
 15419  00C4C0  6FA9               	movwf	fat_append_to_file@file_number& (0+255),b
 15420                           
 15421                           ;fat16.c: 462: rootEntry_t root;
 15422                           ;fat16.c: 463: uint32_t file_size;
 15423                           ;fat16.c: 464: uint16_t fat_cluster;
 15424                           ;fat16.c: 465: uint16_t new_cluster;
 15425                           ;fat16.c: 466: uint32_t position;
 15426                           ;fat16.c: 467: uint16_t offset;
 15427                           ;fat16.c: 468: uint16_t sector;
 15428                           ;fat16.c: 469: uint16_t length;
 15429                           ;fat16.c: 472: if(file_number>=64)
 15430  00C4C2  0E3F               	movlw	63
 15431  00C4C4  0100               	movlb	0	; () banked
 15432  00C4C6  65A9               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 15433  00C4C8  D001               	goto	l21875
 15434  00C4CA  0012               	return	
 15435  00C4CC                     l21875:
 15436                           
 15437                           ; BSR set to: 0
 15438                           ;fat16.c: 476: }
 15439                           ;fat16.c: 479: if(_root_is_available(file_number))
 15440  00C4CC  0100               	movlb	0	; () banked
 15441  00C4CE  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15442  00C4D0  ECBA  F08C         	call	__root_is_available
 15443  00C4D4  0900               	iorlw	0
 15444  00C4D6  A4D8               	btfss	status,2,c
 15445  00C4D8  0012               	return	
 15446                           
 15447                           ;fat16.c: 483: }
 15448                           ;fat16.c: 486: _read_root(file_number, &root);
 15449                           
 15450                           ;fat16.c: 480: {
 15451                           ;fat16.c: 482: return 0xFE;
 15452                           ;	Return value of _fat_append_to_file is never used
 15453  00C4DA  0EB0               	movlw	low fat_append_to_file@root
 15454  00C4DC  0100               	movlb	0	; () banked
 15455  00C4DE  6F87               	movwf	__read_root@data& (0+255),b
 15456  00C4E0  0E00               	movlw	high fat_append_to_file@root
 15457  00C4E2  0100               	movlb	0	; () banked
 15458  00C4E4  6F88               	movwf	(__read_root@data+1)& (0+255),b
 15459  00C4E6  0100               	movlb	0	; () banked
 15460  00C4E8  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15461  00C4EA  EC88  F094         	call	__read_root
 15462                           
 15463                           ;fat16.c: 487: file_size = root.fileSize;
 15464  00C4EE  C0CC  F09F         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 15465  00C4F2  C0CD  F0A0         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 15466  00C4F6  C0CE  F0A1         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 15467  00C4FA  C0CF  F0A2         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 15468                           
 15469                           ;fat16.c: 488: fat_cluster = root.firstCluster;
 15470  00C4FE  C0CA  F0A5         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 15471  00C502  C0CB  F0A6         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 15472                           
 15473                           ;fat16.c: 491: position = 0;
 15474  00C506  0E00               	movlw	0
 15475  00C508  0100               	movlb	0	; () banked
 15476  00C50A  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 15477  00C50C  0E00               	movlw	0
 15478  00C50E  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 15479  00C510  0E00               	movlw	0
 15480  00C512  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 15481  00C514  0E00               	movlw	0
 15482  00C516  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 15483                           
 15484                           ;fat16.c: 492: while((file_size-position)>512)
 15485  00C518  D013               	goto	l21891
 15486  00C51A                     l21887:
 15487                           
 15488                           ; BSR set to: 0
 15489                           ;fat16.c: 493: {
 15490                           ;fat16.c: 494: fat_cluster = _read_fat(fat_cluster);
 15491  00C51A  C0A5  F087         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 15492  00C51E  C0A6  F088         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 15493  00C522  EC66  F098         	call	__read_fat	;wreg free
 15494  00C526  C087  F0A5         	movff	?__read_fat,fat_append_to_file@fat_cluster
 15495  00C52A  C088  F0A6         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 15496                           
 15497                           ;fat16.c: 495: position += 512;
 15498  00C52E  0E00               	movlw	0
 15499  00C530  0100               	movlb	0	; () banked
 15500  00C532  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 15501  00C534  0E02               	movlw	2
 15502  00C536  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 15503  00C538  0E00               	movlw	0
 15504  00C53A  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 15505  00C53C  0E00               	movlw	0
 15506  00C53E  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 15507  00C540                     l21891:
 15508                           
 15509                           ; BSR set to: 0
 15510  00C540  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 15511  00C544  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 15512  00C548  C0AE  F097         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 15513  00C54C  C0AF  F098         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 15514  00C550  0100               	movlb	0	; () banked
 15515  00C552  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15516  00C554  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15517  00C556  1F97               	comf	(??_fat_append_to_file+2)& (0+255),f,b
 15518  00C558  1F98               	comf	(??_fat_append_to_file+3)& (0+255),f,b
 15519  00C55A  2B95               	incf	??_fat_append_to_file& (0+255),f,b
 15520  00C55C  0E00               	movlw	0
 15521  00C55E  2396               	addwfc	(??_fat_append_to_file+1)& (0+255),f,b
 15522  00C560  2397               	addwfc	(??_fat_append_to_file+2)& (0+255),f,b
 15523  00C562  2398               	addwfc	(??_fat_append_to_file+3)& (0+255),f,b
 15524  00C564  0100               	movlb	0	; () banked
 15525  00C566  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 15526  00C568  0100               	movlb	0	; () banked
 15527  00C56A  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15528  00C56C  0100               	movlb	0	; () banked
 15529  00C56E  6F99               	movwf	(??_fat_append_to_file+4)& (0+255),b
 15530  00C570  0100               	movlb	0	; () banked
 15531  00C572  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 15532  00C574  0100               	movlb	0	; () banked
 15533  00C576  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15534  00C578  0100               	movlb	0	; () banked
 15535  00C57A  6F9A               	movwf	(??_fat_append_to_file+5)& (0+255),b
 15536  00C57C  0100               	movlb	0	; () banked
 15537  00C57E  51A1               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 15538  00C580  0100               	movlb	0	; () banked
 15539  00C582  2197               	addwfc	(??_fat_append_to_file+2)& (0+255),w,b
 15540  00C584  0100               	movlb	0	; () banked
 15541  00C586  6F9B               	movwf	(??_fat_append_to_file+6)& (0+255),b
 15542  00C588  0100               	movlb	0	; () banked
 15543  00C58A  51A2               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 15544  00C58C  0100               	movlb	0	; () banked
 15545  00C58E  2198               	addwfc	(??_fat_append_to_file+3)& (0+255),w,b
 15546  00C590  0100               	movlb	0	; () banked
 15547  00C592  6F9C               	movwf	(??_fat_append_to_file+7)& (0+255),b
 15548  00C594  0100               	movlb	0	; () banked
 15549  00C596  519C               	movf	(??_fat_append_to_file+7)& (0+255),w,b
 15550  00C598  0100               	movlb	0	; () banked
 15551  00C59A  119B               	iorwf	(??_fat_append_to_file+6)& (0+255),w,b
 15552  00C59C  E1BE               	bnz	l21887
 15553  00C59E  0100               	movlb	0	; () banked
 15554  00C5A0  0599               	decf	(??_fat_append_to_file+4)& (0+255),w,b
 15555  00C5A2  0E02               	movlw	2
 15556  00C5A4  0100               	movlb	0	; () banked
 15557  00C5A6  599A               	subwfb	(??_fat_append_to_file+5)& (0+255),w,b
 15558  00C5A8  B0D8               	btfsc	status,0,c
 15559  00C5AA  D7B7               	goto	l21887
 15560                           
 15561                           ; BSR set to: 0
 15562                           ;fat16.c: 496: }
 15563                           ;fat16.c: 499: offset = file_size - position;
 15564                           
 15565                           ; BSR set to: 0
 15566  00C5AC  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 15567  00C5B0  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 15568  00C5B4  0100               	movlb	0	; () banked
 15569  00C5B6  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15570  00C5B8  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15571  00C5BA  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 15572  00C5BC  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 15573  00C5BE  0100               	movlb	0	; () banked
 15574  00C5C0  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 15575  00C5C2  0100               	movlb	0	; () banked
 15576  00C5C4  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15577  00C5C6  0100               	movlb	0	; () banked
 15578  00C5C8  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 15579  00C5CA  0100               	movlb	0	; () banked
 15580  00C5CC  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 15581  00C5CE  0100               	movlb	0	; () banked
 15582  00C5D0  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15583  00C5D2  0100               	movlb	0	; () banked
 15584  00C5D4  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 15585                           
 15586                           ; BSR set to: 0
 15587                           ;fat16.c: 502: position = 0;
 15588  00C5D6  0E00               	movlw	0
 15589  00C5D8  0100               	movlb	0	; () banked
 15590  00C5DA  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 15591  00C5DC  0E00               	movlw	0
 15592  00C5DE  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 15593  00C5E0  0E00               	movlw	0
 15594  00C5E2  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 15595  00C5E4  0E00               	movlw	0
 15596  00C5E6  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 15597                           
 15598                           ;fat16.c: 503: while(position < number_of_bytes)
 15599  00C5E8  D08A               	goto	l21919
 15600  00C5EA                     l21897:
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;fat16.c: 504: {
 15604                           ;fat16.c: 506: if(offset==512)
 15605  00C5EA  0E02               	movlw	2
 15606  00C5EC  0100               	movlb	0	; () banked
 15607  00C5EE  19A8               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 15608  00C5F0  0100               	movlb	0	; () banked
 15609  00C5F2  11A7               	iorwf	fat_append_to_file@offset& (0+255),w,b
 15610  00C5F4  A4D8               	btfss	status,2,c
 15611  00C5F6  D028               	goto	l21905
 15612                           
 15613                           ; BSR set to: 0
 15614                           ;fat16.c: 507: {
 15615                           ;fat16.c: 510: new_cluster = _get_empty_cluster(0x0000);
 15616  00C5F8  0E00               	movlw	0
 15617  00C5FA  0100               	movlb	0	; () banked
 15618  00C5FC  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 15619  00C5FE  0E00               	movlw	0
 15620  00C600  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 15621  00C602  EC9A  F08D         	call	__get_empty_cluster	;wreg free
 15622  00C606  C087  F0A3         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 15623  00C60A  C088  F0A4         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 15624                           
 15625                           ;fat16.c: 512: _write_fat(fat_cluster, new_cluster);
 15626  00C60E  C0A5  F088         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 15627  00C612  C0A6  F089         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 15628  00C616  C0A3  F08A         	movff	fat_append_to_file@new_cluster,__write_fat@value
 15629  00C61A  C0A4  F08B         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 15630  00C61E  EC98  F099         	call	__write_fat	;wreg free
 15631                           
 15632                           ;fat16.c: 514: _write_fat(new_cluster, 0xFFFF);
 15633  00C622  C0A3  F088         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 15634  00C626  C0A4  F089         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 15635  00C62A  0EFF               	movlw	255
 15636  00C62C  0100               	movlb	0	; () banked
 15637  00C62E  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 15638  00C630  698A               	setf	__write_fat@value& (0+255),b
 15639  00C632  EC98  F099         	call	__write_fat	;wreg free
 15640                           
 15641                           ;fat16.c: 516: fat_cluster = new_cluster;
 15642  00C636  C0A3  F0A5         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 15643  00C63A  C0A4  F0A6         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 15644                           
 15645                           ;fat16.c: 517: offset = 0;
 15646  00C63E  0E00               	movlw	0
 15647  00C640  0100               	movlb	0	; () banked
 15648  00C642  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 15649  00C644  0E00               	movlw	0
 15650  00C646  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 15651  00C648                     l21905:
 15652                           
 15653                           ; BSR set to: 0
 15654                           ;fat16.c: 518: }
 15655                           ;fat16.c: 521: sector = _sector_from_cluster(fat_cluster);
 15656  00C648  C0A5  F060         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 15657  00C64C  C0A6  F061         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 15658  00C650  EC72  F0A0         	call	__sector_from_cluster	;wreg free
 15659  00C654  C060  F09D         	movff	?__sector_from_cluster,fat_append_to_file@sector
 15660  00C658  C061  F09E         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 15661                           
 15662                           ;fat16.c: 524: length = 512 - offset;
 15663  00C65C  C0A7  F095         	movff	fat_append_to_file@offset,??_fat_append_to_file
 15664  00C660  C0A8  F096         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 15665  00C664  0100               	movlb	0	; () banked
 15666  00C666  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15667  00C668  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15668  00C66A  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 15669  00C66C  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 15670  00C66E  0E00               	movlw	0
 15671  00C670  0100               	movlb	0	; () banked
 15672  00C672  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15673  00C674  0100               	movlb	0	; () banked
 15674  00C676  6FAA               	movwf	fat_append_to_file@length& (0+255),b
 15675  00C678  0E02               	movlw	2
 15676  00C67A  0100               	movlb	0	; () banked
 15677  00C67C  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15678  00C67E  0100               	movlb	0	; () banked
 15679  00C680  6FAB               	movwf	(fat_append_to_file@length+1)& (0+255),b
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;fat16.c: 525: if(length>number_of_bytes)
 15683  00C682  0100               	movlb	0	; () banked
 15684  00C684  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15685  00C686  0100               	movlb	0	; () banked
 15686  00C688  5D91               	subwf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15687  00C68A  0100               	movlb	0	; () banked
 15688  00C68C  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15689  00C68E  0100               	movlb	0	; () banked
 15690  00C690  5992               	subwfb	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15691  00C692  B0D8               	btfsc	status,0,c
 15692  00C694  D004               	goto	l21913
 15693                           
 15694                           ; BSR set to: 0
 15695                           ;fat16.c: 526: {
 15696                           ;fat16.c: 527: length = number_of_bytes;
 15697  00C696  C091  F0AA         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 15698  00C69A  C092  F0AB         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 15699  00C69E                     l21913:
 15700                           
 15701                           ; BSR set to: 0
 15702                           ;fat16.c: 528: }
 15703                           ;fat16.c: 531: flash_partial_write(sector, offset, length, &data[position]);
 15704  00C69E  C09D  F07F         	movff	fat_append_to_file@sector,flash_partial_write@page
 15705  00C6A2  C09E  F080         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 15706  00C6A6  C0A7  F081         	movff	fat_append_to_file@offset,flash_partial_write@start
 15707  00C6AA  C0A8  F082         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 15708  00C6AE  C0AA  F083         	movff	fat_append_to_file@length,flash_partial_write@length
 15709  00C6B2  C0AB  F084         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 15710  00C6B6  0100               	movlb	0	; () banked
 15711  00C6B8  51AC               	movf	fat_append_to_file@position& (0+255),w,b
 15712  00C6BA  0100               	movlb	0	; () banked
 15713  00C6BC  2593               	addwf	fat_append_to_file@data& (0+255),w,b
 15714  00C6BE  0100               	movlb	0	; () banked
 15715  00C6C0  6F85               	movwf	flash_partial_write@data& (0+255),b
 15716  00C6C2  0100               	movlb	0	; () banked
 15717  00C6C4  51AD               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 15718  00C6C6  0100               	movlb	0	; () banked
 15719  00C6C8  2194               	addwfc	(fat_append_to_file@data+1)& (0+255),w,b
 15720  00C6CA  0100               	movlb	0	; () banked
 15721  00C6CC  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15722  00C6CE  EC73  F093         	call	_flash_partial_write	;wreg free
 15723                           
 15724                           ;fat16.c: 534: position += length;
 15725  00C6D2  0100               	movlb	0	; () banked
 15726  00C6D4  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15727  00C6D6  0100               	movlb	0	; () banked
 15728  00C6D8  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 15729  00C6DA  0100               	movlb	0	; () banked
 15730  00C6DC  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15731  00C6DE  0100               	movlb	0	; () banked
 15732  00C6E0  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 15733  00C6E2  0E00               	movlw	0
 15734  00C6E4  0100               	movlb	0	; () banked
 15735  00C6E6  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 15736  00C6E8  0E00               	movlw	0
 15737  00C6EA  0100               	movlb	0	; () banked
 15738  00C6EC  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 15739                           
 15740                           ; BSR set to: 0
 15741                           ;fat16.c: 535: offset += length;
 15742  00C6EE  0100               	movlb	0	; () banked
 15743  00C6F0  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15744  00C6F2  0100               	movlb	0	; () banked
 15745  00C6F4  27A7               	addwf	fat_append_to_file@offset& (0+255),f,b
 15746  00C6F6  0100               	movlb	0	; () banked
 15747  00C6F8  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15748  00C6FA  0100               	movlb	0	; () banked
 15749  00C6FC  23A8               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 15750  00C6FE                     l21919:
 15751                           
 15752                           ; BSR set to: 0
 15753  00C6FE  0100               	movlb	0	; () banked
 15754  00C700  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15755  00C702  0100               	movlb	0	; () banked
 15756  00C704  6F95               	movwf	??_fat_append_to_file& (0+255),b
 15757  00C706  0100               	movlb	0	; () banked
 15758  00C708  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15759  00C70A  0100               	movlb	0	; () banked
 15760  00C70C  6F96               	movwf	(??_fat_append_to_file+1)& (0+255),b
 15761  00C70E  0100               	movlb	0	; () banked
 15762  00C710  6B97               	clrf	(??_fat_append_to_file+2)& (0+255),b
 15763  00C712  0100               	movlb	0	; () banked
 15764  00C714  6B98               	clrf	(??_fat_append_to_file+3)& (0+255),b
 15765  00C716  0100               	movlb	0	; () banked
 15766  00C718  5195               	movf	??_fat_append_to_file& (0+255),w,b
 15767  00C71A  0100               	movlb	0	; () banked
 15768  00C71C  5DAC               	subwf	fat_append_to_file@position& (0+255),w,b
 15769  00C71E  0100               	movlb	0	; () banked
 15770  00C720  5196               	movf	(??_fat_append_to_file+1)& (0+255),w,b
 15771  00C722  0100               	movlb	0	; () banked
 15772  00C724  59AD               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 15773  00C726  0100               	movlb	0	; () banked
 15774  00C728  5197               	movf	(??_fat_append_to_file+2)& (0+255),w,b
 15775  00C72A  0100               	movlb	0	; () banked
 15776  00C72C  59AE               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 15777  00C72E  0100               	movlb	0	; () banked
 15778  00C730  5198               	movf	(??_fat_append_to_file+3)& (0+255),w,b
 15779  00C732  0100               	movlb	0	; () banked
 15780  00C734  59AF               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 15781  00C736  A0D8               	btfss	status,0,c
 15782  00C738  D758               	goto	l21897
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;fat16.c: 536: }
 15786                           ;fat16.c: 540: root.fileSize += number_of_bytes;
 15787                           
 15788                           ; BSR set to: 0
 15789  00C73A  0100               	movlb	0	; () banked
 15790  00C73C  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15791  00C73E  0100               	movlb	0	; () banked
 15792  00C740  27CC               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 15793  00C742  0100               	movlb	0	; () banked
 15794  00C744  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15795  00C746  0100               	movlb	0	; () banked
 15796  00C748  23CD               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 15797  00C74A  0E00               	movlw	0
 15798  00C74C  0100               	movlb	0	; () banked
 15799  00C74E  23CE               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 15800  00C750  0E00               	movlw	0
 15801  00C752  0100               	movlb	0	; () banked
 15802  00C754  23CF               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;fat16.c: 541: _update_modified_time(&root);
 15806  00C756  0EB0               	movlw	low fat_append_to_file@root
 15807  00C758  0100               	movlb	0	; () banked
 15808  00C75A  6F6D               	movwf	__update_modified_time@root& (0+255),b
 15809  00C75C  0E00               	movlw	high fat_append_to_file@root
 15810  00C75E  0100               	movlb	0	; () banked
 15811  00C760  6F6E               	movwf	(__update_modified_time@root+1)& (0+255),b
 15812  00C762  EC8E  F09B         	call	__update_modified_time	;wreg free
 15813                           
 15814                           ;fat16.c: 542: _write_root(file_number, &root);
 15815  00C766  0EB0               	movlw	low fat_append_to_file@root
 15816  00C768  0100               	movlb	0	; () banked
 15817  00C76A  6F88               	movwf	__write_root@data& (0+255),b
 15818  00C76C  0E00               	movlw	high fat_append_to_file@root
 15819  00C76E  0100               	movlb	0	; () banked
 15820  00C770  6F89               	movwf	(__write_root@data+1)& (0+255),b
 15821  00C772  0100               	movlb	0	; () banked
 15822  00C774  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15823  00C776  EC52  F094         	call	__write_root
 15824  00C77A  0012               	return	
 15825  00C77C                     __end_of_fat_append_to_file:
 15826                           	opt stack 0
 15827                           tblptru	equ	0xFF8
 15828                           tblptrh	equ	0xFF7
 15829                           tblptrl	equ	0xFF6
 15830                           tablat	equ	0xFF5
 15831                           prodh	equ	0xFF4
 15832                           prodl	equ	0xFF3
 15833                           intcon	equ	0xFF2
 15834                           intcon2	equ	0xFF1
 15835                           intcon3	equ	0xFF0
 15836                           postinc0	equ	0xFEE
 15837                           wreg	equ	0xFE8
 15838                           postinc1	equ	0xFE6
 15839                           postdec1	equ	0xFE5
 15840                           plusw1	equ	0xFE3
 15841                           fsr1h	equ	0xFE2
 15842                           fsr1l	equ	0xFE1
 15843                           indf2	equ	0xFDF
 15844                           postinc2	equ	0xFDE
 15845                           postdec2	equ	0xFDD
 15846                           plusw2	equ	0xFDB
 15847                           fsr2h	equ	0xFDA
 15848                           fsr2l	equ	0xFD9
 15849                           status	equ	0xFD8
 15850                           
 15851 ;; *************** function __write_root *****************
 15852 ;; Defined at:
 15853 ;;		line 184 in file "fat16.c"
 15854 ;; Parameters:    Size  Location     Type
 15855 ;;  slot            1    wreg     unsigned char 
 15856 ;;  data            2   40[BANK0 ] PTR struct .
 15857 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 15858 ;; Auto vars:     Size  Location     Type
 15859 ;;  slot            1   47[BANK0 ] unsigned char 
 15860 ;;  offset          2   45[BANK0 ] unsigned int 
 15861 ;;  root_sector     2   43[BANK0 ] unsigned int 
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		wreg, status,2, status,0, cstack
 15866 ;; Tracked objects:
 15867 ;;		On entry : 0/0
 15868 ;;		On exit  : 0/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15872 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15874 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15875 ;;Total ram usage:        8 bytes
 15876 ;; Hardware stack levels used:    1
 15877 ;; Hardware stack levels required when called:   15
 15878 ;; This function calls:
 15879 ;;		_flash_partial_write
 15880 ;; This function is called by:
 15881 ;;		_fat_create_file
 15882 ;;		_fat_append_to_file
 15883 ;;		_fat_rename_file
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text62
 15888  0128A4                     __ptext62:
 15889                           	opt stack 0
 15890  0128A4                     __write_root:
 15891                           	opt stack 13
 15892                           
 15893                           ;incstack = 0
 15894                           ;__write_root@slot stored from wreg
 15895  0128A4  0100               	movlb	0	; () banked
 15896  0128A6  6F8F               	movwf	__write_root@slot& (0+255),b
 15897                           
 15898                           ;fat16.c: 186: uint16_t root_sector;
 15899                           ;fat16.c: 187: uint16_t offset;
 15900                           ;fat16.c: 188: root_sector = (slot >> 4) + 18;
 15901  0128A8  C08F  F08A         	movff	__write_root@slot,??__write_root
 15902  0128AC  0100               	movlb	0	; () banked
 15903  0128AE  3B8A               	swapf	??__write_root& (0+255),f,b
 15904  0128B0  0E0F               	movlw	15
 15905  0128B2  178A               	andwf	??__write_root& (0+255),f,b
 15906  0128B4  0E12               	movlw	18
 15907  0128B6  0100               	movlb	0	; () banked
 15908  0128B8  258A               	addwf	??__write_root& (0+255),w,b
 15909  0128BA  0100               	movlb	0	; () banked
 15910  0128BC  6F8B               	movwf	__write_root@root_sector& (0+255),b
 15911  0128BE  0100               	movlb	0	; () banked
 15912  0128C0  6B8C               	clrf	(__write_root@root_sector+1)& (0+255),b
 15913  0128C2  0E00               	movlw	0
 15914  0128C4  238C               	addwfc	(__write_root@root_sector+1)& (0+255),f,b
 15915                           
 15916                           ;fat16.c: 189: offset = (slot & 0b1111);
 15917  0128C6  C08F  F08A         	movff	__write_root@slot,??__write_root
 15918  0128CA  0E0F               	movlw	15
 15919  0128CC  0100               	movlb	0	; () banked
 15920  0128CE  178A               	andwf	??__write_root& (0+255),f,b
 15921  0128D0  0100               	movlb	0	; () banked
 15922  0128D2  518A               	movf	??__write_root& (0+255),w,b
 15923  0128D4  0100               	movlb	0	; () banked
 15924  0128D6  6F8D               	movwf	__write_root@offset& (0+255),b
 15925  0128D8  6B8E               	clrf	(__write_root@offset+1)& (0+255),b
 15926                           
 15927                           ;fat16.c: 190: offset <<= 5;
 15928  0128DA  0100               	movlb	0	; () banked
 15929  0128DC  0E05               	movlw	5
 15930  0128DE                     u19145:
 15931  0128DE  90D8               	bcf	status,0,c
 15932  0128E0  378D               	rlcf	__write_root@offset& (0+255),f,b
 15933  0128E2  378E               	rlcf	(__write_root@offset+1)& (0+255),f,b
 15934  0128E4  2EE8               	decfsz	wreg,f,c
 15935  0128E6  D7FB               	goto	u19145
 15936                           
 15937                           ; BSR set to: 0
 15938                           ;fat16.c: 191: flash_partial_write(root_sector, offset, 32, data);
 15939  0128E8  C08B  F07F         	movff	__write_root@root_sector,flash_partial_write@page
 15940  0128EC  C08C  F080         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 15941  0128F0  C08D  F081         	movff	__write_root@offset,flash_partial_write@start
 15942  0128F4  C08E  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 15943  0128F8  0E00               	movlw	0
 15944  0128FA  0100               	movlb	0	; () banked
 15945  0128FC  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15946  0128FE  0E20               	movlw	32
 15947  012900  6F83               	movwf	flash_partial_write@length& (0+255),b
 15948  012902  C088  F085         	movff	__write_root@data,flash_partial_write@data
 15949  012906  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 15950  01290A  EC73  F093         	call	_flash_partial_write	;wreg free
 15951  01290E  0012               	return		;funcret
 15952  012910                     __end_of__write_root:
 15953                           	opt stack 0
 15954                           tblptru	equ	0xFF8
 15955                           tblptrh	equ	0xFF7
 15956                           tblptrl	equ	0xFF6
 15957                           tablat	equ	0xFF5
 15958                           prodh	equ	0xFF4
 15959                           prodl	equ	0xFF3
 15960                           intcon	equ	0xFF2
 15961                           intcon2	equ	0xFF1
 15962                           intcon3	equ	0xFF0
 15963                           postinc0	equ	0xFEE
 15964                           wreg	equ	0xFE8
 15965                           postinc1	equ	0xFE6
 15966                           postdec1	equ	0xFE5
 15967                           plusw1	equ	0xFE3
 15968                           fsr1h	equ	0xFE2
 15969                           fsr1l	equ	0xFE1
 15970                           indf2	equ	0xFDF
 15971                           postinc2	equ	0xFDE
 15972                           postdec2	equ	0xFDD
 15973                           plusw2	equ	0xFDB
 15974                           fsr2h	equ	0xFDA
 15975                           fsr2l	equ	0xFD9
 15976                           status	equ	0xFD8
 15977                           
 15978 ;; *************** function __write_fat *****************
 15979 ;; Defined at:
 15980 ;;		line 160 in file "fat16.c"
 15981 ;; Parameters:    Size  Location     Type
 15982 ;;  cluster         2   40[BANK0 ] unsigned int 
 15983 ;;  value           2   42[BANK0 ] unsigned int 
 15984 ;; Auto vars:     Size  Location     Type
 15985 ;;  offset          2   46[BANK0 ] unsigned int 
 15986 ;;  fat_sector      2   44[BANK0 ] unsigned int 
 15987 ;; Return value:  Size  Location     Type
 15988 ;;                  1    wreg      void 
 15989 ;; Registers used:
 15990 ;;		wreg, status,2, status,0, cstack
 15991 ;; Tracked objects:
 15992 ;;		On entry : 0/0
 15993 ;;		On exit  : 0/0
 15994 ;;		Unchanged: 0/0
 15995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15996 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15997 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16000 ;;Total ram usage:        8 bytes
 16001 ;; Hardware stack levels used:    1
 16002 ;; Hardware stack levels required when called:   15
 16003 ;; This function calls:
 16004 ;;		_flash_partial_write
 16005 ;; This function is called by:
 16006 ;;		_fat_create_file
 16007 ;;		_fat_append_to_file
 16008 ;;		_fat_delete_file
 16009 ;; This function uses a non-reentrant model
 16010 ;;
 16011                           
 16012                           	psect	text63
 16013  013330                     __ptext63:
 16014                           	opt stack 0
 16015  013330                     __write_fat:
 16016                           	opt stack 13
 16017                           
 16018                           ;fat16.c: 162: uint16_t fat_sector;
 16019                           ;fat16.c: 163: uint16_t offset;
 16020                           ;fat16.c: 164: fat_sector = cluster>>8;
 16021                           
 16022                           ;incstack = 0
 16023  013330  0100               	movlb	0	; () banked
 16024  013332  5189               	movf	(__write_fat@cluster+1)& (0+255),w,b
 16025  013334  0100               	movlb	0	; () banked
 16026  013336  6F8C               	movwf	__write_fat@fat_sector& (0+255),b
 16027  013338  6B8D               	clrf	(__write_fat@fat_sector+1)& (0+255),b
 16028                           
 16029                           ; BSR set to: 0
 16030                           ;fat16.c: 165: fat_sector += 2;
 16031  01333A  0E02               	movlw	2
 16032  01333C  0100               	movlb	0	; () banked
 16033  01333E  278C               	addwf	__write_fat@fat_sector& (0+255),f,b
 16034  013340  0E00               	movlw	0
 16035  013342  238D               	addwfc	(__write_fat@fat_sector+1)& (0+255),f,b
 16036                           
 16037                           ; BSR set to: 0
 16038                           ;fat16.c: 166: offset = cluster & 0xFF;
 16039  013344  0100               	movlb	0	; () banked
 16040  013346  5188               	movf	__write_fat@cluster& (0+255),w,b
 16041  013348  0100               	movlb	0	; () banked
 16042  01334A  6F8E               	movwf	__write_fat@offset& (0+255),b
 16043  01334C  6B8F               	clrf	(__write_fat@offset+1)& (0+255),b
 16044                           
 16045                           ; BSR set to: 0
 16046                           ;fat16.c: 167: offset <<= 1;
 16047  01334E  0100               	movlb	0	; () banked
 16048  013350  90D8               	bcf	status,0,c
 16049  013352  378E               	rlcf	__write_fat@offset& (0+255),f,b
 16050  013354  378F               	rlcf	(__write_fat@offset+1)& (0+255),f,b
 16051                           
 16052                           ; BSR set to: 0
 16053                           ;fat16.c: 168: flash_partial_write(fat_sector, offset, 2, &value);
 16054  013356  C08C  F07F         	movff	__write_fat@fat_sector,flash_partial_write@page
 16055  01335A  C08D  F080         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 16056  01335E  C08E  F081         	movff	__write_fat@offset,flash_partial_write@start
 16057  013362  C08F  F082         	movff	__write_fat@offset+1,flash_partial_write@start+1
 16058  013366  0E00               	movlw	0
 16059  013368  0100               	movlb	0	; () banked
 16060  01336A  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 16061  01336C  0E02               	movlw	2
 16062  01336E  6F83               	movwf	flash_partial_write@length& (0+255),b
 16063  013370  0E8A               	movlw	low __write_fat@value
 16064  013372  0100               	movlb	0	; () banked
 16065  013374  6F85               	movwf	flash_partial_write@data& (0+255),b
 16066  013376  0E00               	movlw	high __write_fat@value
 16067  013378  0100               	movlb	0	; () banked
 16068  01337A  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 16069  01337C  EC73  F093         	call	_flash_partial_write	;wreg free
 16070  013380  0012               	return		;funcret
 16071  013382                     __end_of__write_fat:
 16072                           	opt stack 0
 16073                           tblptru	equ	0xFF8
 16074                           tblptrh	equ	0xFF7
 16075                           tblptrl	equ	0xFF6
 16076                           tablat	equ	0xFF5
 16077                           prodh	equ	0xFF4
 16078                           prodl	equ	0xFF3
 16079                           intcon	equ	0xFF2
 16080                           intcon2	equ	0xFF1
 16081                           intcon3	equ	0xFF0
 16082                           postinc0	equ	0xFEE
 16083                           wreg	equ	0xFE8
 16084                           postinc1	equ	0xFE6
 16085                           postdec1	equ	0xFE5
 16086                           plusw1	equ	0xFE3
 16087                           fsr1h	equ	0xFE2
 16088                           fsr1l	equ	0xFE1
 16089                           indf2	equ	0xFDF
 16090                           postinc2	equ	0xFDE
 16091                           postdec2	equ	0xFDD
 16092                           plusw2	equ	0xFDB
 16093                           fsr2h	equ	0xFDA
 16094                           fsr2l	equ	0xFD9
 16095                           status	equ	0xFD8
 16096                           
 16097 ;; *************** function _flash_partial_write *****************
 16098 ;; Defined at:
 16099 ;;		line 589 in file "flash.c"
 16100 ;; Parameters:    Size  Location     Type
 16101 ;;  page            2   31[BANK0 ] unsigned int 
 16102 ;;  start           2   33[BANK0 ] unsigned int 
 16103 ;;  length          2   35[BANK0 ] unsigned int 
 16104 ;;  data            2   37[BANK0 ] PTR unsigned char 
 16105 ;;		 -> log_write_to_disk@log_entry(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_ent
      +ry(32), 
 16106 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), 
 16107 ;; Auto vars:     Size  Location     Type
 16108 ;;  match           1   39[BANK0 ] enum E8335
 16109 ;; Return value:  Size  Location     Type
 16110 ;;                  1    wreg      void 
 16111 ;; Registers used:
 16112 ;;		wreg, status,2, status,0, cstack
 16113 ;; Tracked objects:
 16114 ;;		On entry : 0/0
 16115 ;;		On exit  : 0/0
 16116 ;;		Unchanged: 0/0
 16117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16121 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16122 ;;Total ram usage:        9 bytes
 16123 ;; Hardware stack levels used:    1
 16124 ;; Hardware stack levels required when called:   14
 16125 ;; This function calls:
 16126 ;;		__flash_compare_page_to_buffer
 16127 ;;		__flash_copy_page_to_buffer
 16128 ;;		__flash_write_page_from_buffer
 16129 ;;		__flash_write_to_buffer
 16130 ;;		_flash_is_busy
 16131 ;; This function is called by:
 16132 ;;		__write_fat
 16133 ;;		__write_root
 16134 ;;		_fat_append_to_file
 16135 ;;		__delete_root
 16136 ;;		__write_file_size
 16137 ;; This function uses a non-reentrant model
 16138 ;;
 16139                           
 16140                           	psect	text64
 16141  0126E6                     __ptext64:
 16142                           	opt stack 0
 16143  0126E6                     _flash_partial_write:
 16144                           	opt stack 13
 16145  0126E6                     l19219:
 16146  0126E6  EC85  F09F         	call	_flash_is_busy	;wreg free
 16147  0126EA  0900               	iorlw	0
 16148  0126EC  A4D8               	btfss	status,2,c
 16149  0126EE  D7FB               	goto	l19219
 16150                           
 16151                           ;flash.c: 597: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 16152  0126F0  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 16153  0126F4  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 16154  0126F8  0E00               	movlw	0
 16155  0126FA  0100               	movlb	0	; () banked
 16156  0126FC  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 16157  0126FE  EC0F  F092         	call	__flash_copy_page_to_buffer	;wreg free
 16158                           
 16159                           ;flash.c: 600: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 16160  012702  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 16161  012706  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 16162  01270A  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 16163  01270E  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 16164  012712  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 16165  012716  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 16166  01271A  0E00               	movlw	0
 16167  01271C  0100               	movlb	0	; () banked
 16168  01271E  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 16169  012720  ECC3  F095         	call	__flash_write_to_buffer	;wreg free
 16170                           
 16171                           ;flash.c: 603: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 16172  012724  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 16173  012728  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 16174  01272C  0E00               	movlw	0
 16175  01272E  0100               	movlb	0	; () banked
 16176  012730  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 16177  012732  ECD5  F08B         	call	__flash_compare_page_to_buffer	;wreg free
 16178  012736  0100               	movlb	0	; () banked
 16179  012738  6F87               	movwf	flash_partial_write@match& (0+255),b
 16180                           
 16181                           ; BSR set to: 0
 16182                           ;flash.c: 606: if(match==DATA_DOES_NOT_MATCH)
 16183  01273A  0100               	movlb	0	; () banked
 16184  01273C  0587               	decf	flash_partial_write@match& (0+255),w,b
 16185  01273E  A4D8               	btfss	status,2,c
 16186  012740  0012               	return	
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;flash.c: 607: {
 16190                           ;flash.c: 608: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 16191  012742  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 16192  012746  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 16193  01274A  0E00               	movlw	0
 16194  01274C  0100               	movlb	0	; () banked
 16195  01274E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 16196  012750  EC87  F092         	call	__flash_write_page_from_buffer	;wreg free
 16197  012754  0012               	return	
 16198  012756                     __end_of_flash_partial_write:
 16199                           	opt stack 0
 16200                           tblptru	equ	0xFF8
 16201                           tblptrh	equ	0xFF7
 16202                           tblptrl	equ	0xFF6
 16203                           tablat	equ	0xFF5
 16204                           prodh	equ	0xFF4
 16205                           prodl	equ	0xFF3
 16206                           intcon	equ	0xFF2
 16207                           intcon2	equ	0xFF1
 16208                           intcon3	equ	0xFF0
 16209                           postinc0	equ	0xFEE
 16210                           wreg	equ	0xFE8
 16211                           postinc1	equ	0xFE6
 16212                           postdec1	equ	0xFE5
 16213                           plusw1	equ	0xFE3
 16214                           fsr1h	equ	0xFE2
 16215                           fsr1l	equ	0xFE1
 16216                           indf2	equ	0xFDF
 16217                           postinc2	equ	0xFDE
 16218                           postdec2	equ	0xFDD
 16219                           plusw2	equ	0xFDB
 16220                           fsr2h	equ	0xFDA
 16221                           fsr2l	equ	0xFD9
 16222                           status	equ	0xFD8
 16223                           
 16224 ;; *************** function __flash_copy_page_to_buffer *****************
 16225 ;; Defined at:
 16226 ;;		line 315 in file "flash.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;  page            2   19[BANK0 ] unsigned int 
 16229 ;;  buffer          1   21[BANK0 ] enum E8331
 16230 ;; Auto vars:     Size  Location     Type
 16231 ;;  command         4   25[BANK0 ] unsigned char [4]
 16232 ;; Return value:  Size  Location     Type
 16233 ;;                  1    wreg      void 
 16234 ;; Registers used:
 16235 ;;		wreg, status,2, status,0, cstack
 16236 ;; Tracked objects:
 16237 ;;		On entry : 0/0
 16238 ;;		On exit  : 0/0
 16239 ;;		Unchanged: 0/0
 16240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16241 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16242 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16243 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16244 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16245 ;;Total ram usage:       10 bytes
 16246 ;; Hardware stack levels used:    1
 16247 ;; Hardware stack levels required when called:   13
 16248 ;; This function calls:
 16249 ;;		__flash_spi_tx
 16250 ;;		_flash_is_busy
 16251 ;; This function is called by:
 16252 ;;		_flash_partial_write
 16253 ;; This function uses a non-reentrant model
 16254 ;;
 16255                           
 16256                           	psect	text65
 16257  01241E                     __ptext65:
 16258                           	opt stack 0
 16259  01241E                     __flash_copy_page_to_buffer:
 16260                           	opt stack 13
 16261  01241E                     l18887:
 16262  01241E  EC85  F09F         	call	_flash_is_busy	;wreg free
 16263  012422  0900               	iorlw	0
 16264  012424  A4D8               	btfss	status,2,c
 16265  012426  D7FB               	goto	l18887
 16266                           
 16267                           ;flash.c: 323: if(buffer==FLASH_BUFFER_1)
 16268  012428  0100               	movlb	0	; () banked
 16269  01242A  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 16270  01242C  0100               	movlb	0	; () banked
 16271  01242E  A4D8               	btfss	status,2,c
 16272  012430  D003               	goto	l18893
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;flash.c: 324: command[0] = 0x53;
 16276  012432  0E53               	movlw	83
 16277  012434  0100               	movlb	0	; () banked
 16278  012436  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 16279  012438                     l18893:
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;flash.c: 325: if(buffer==FLASH_BUFFER_2)
 16283  012438  0100               	movlb	0	; () banked
 16284  01243A  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 16285  01243C  A4D8               	btfss	status,2,c
 16286  01243E  D003               	goto	l18897
 16287                           
 16288                           ; BSR set to: 0
 16289                           ;flash.c: 326: command[0] = 0x55;
 16290  012440  0E55               	movlw	85
 16291  012442  0100               	movlb	0	; () banked
 16292  012444  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 16293  012446                     l18897:
 16294                           
 16295                           ; BSR set to: 0
 16296                           ;flash.c: 328: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 16297  012446  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 16298  01244A  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 16299  01244E  0E07               	movlw	7
 16300  012450  0100               	movlb	0	; () banked
 16301  012452  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 16302  012454                     u17965:
 16303  012454  0100               	movlb	0	; () banked
 16304  012456  90D8               	bcf	status,0,c
 16305  012458  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 16306  01245A  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 16307  01245C  0100               	movlb	0	; () banked
 16308  01245E  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 16309  012460  D7F9               	goto	u17965
 16310  012462  0100               	movlb	0	; () banked
 16311  012464  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 16312  012466  0100               	movlb	0	; () banked
 16313  012468  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 16314                           
 16315                           ; BSR set to: 0
 16316                           ;flash.c: 329: command[2] = ((unsigned char)((page<<1)&0xFF));
 16317  01246A  0100               	movlb	0	; () banked
 16318  01246C  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 16319  01246E  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 16320  012470  0100               	movlb	0	; () banked
 16321  012472  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 16322                           
 16323                           ;flash.c: 330: command[3] = 0x00;
 16324  012474  0E00               	movlw	0
 16325  012476  0100               	movlb	0	; () banked
 16326  012478  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 16327                           
 16328                           ; BSR set to: 0
 16329                           ;flash.c: 333: _flash_spi_tx(command, 4);
 16330  01247A  0E79               	movlw	low __flash_copy_page_to_buffer@command
 16331  01247C  0100               	movlb	0	; () banked
 16332  01247E  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 16333  012480  0E00               	movlw	high __flash_copy_page_to_buffer@command
 16334  012482  0100               	movlb	0	; () banked
 16335  012484  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 16336  012486  0E00               	movlw	0
 16337  012488  0100               	movlb	0	; () banked
 16338  01248A  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 16339  01248C  0E04               	movlw	4
 16340  01248E  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 16341  012490  ECBE  F094         	call	__flash_spi_tx	;wreg free
 16342  012494  0012               	return		;funcret
 16343  012496                     __end_of__flash_copy_page_to_buffer:
 16344                           	opt stack 0
 16345                           tblptru	equ	0xFF8
 16346                           tblptrh	equ	0xFF7
 16347                           tblptrl	equ	0xFF6
 16348                           tablat	equ	0xFF5
 16349                           prodh	equ	0xFF4
 16350                           prodl	equ	0xFF3
 16351                           intcon	equ	0xFF2
 16352                           intcon2	equ	0xFF1
 16353                           intcon3	equ	0xFF0
 16354                           postinc0	equ	0xFEE
 16355                           wreg	equ	0xFE8
 16356                           postinc1	equ	0xFE6
 16357                           postdec1	equ	0xFE5
 16358                           plusw1	equ	0xFE3
 16359                           fsr1h	equ	0xFE2
 16360                           fsr1l	equ	0xFE1
 16361                           indf2	equ	0xFDF
 16362                           postinc2	equ	0xFDE
 16363                           postdec2	equ	0xFDD
 16364                           plusw2	equ	0xFDB
 16365                           fsr2h	equ	0xFDA
 16366                           fsr2l	equ	0xFD9
 16367                           status	equ	0xFD8
 16368                           
 16369 ;; *************** function __update_modified_time *****************
 16370 ;; Defined at:
 16371 ;;		line 55 in file "fat16.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  root            2   13[BANK0 ] PTR struct .
 16374 ;;		 -> fat_append_to_file@root(32), 
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;		None
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      void 
 16379 ;; Registers used:
 16380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16386 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16390 ;;Total ram usage:        2 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; Hardware stack levels required when called:   13
 16393 ;; This function calls:
 16394 ;;		__get_date
 16395 ;;		__get_time
 16396 ;; This function is called by:
 16397 ;;		_fat_append_to_file
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           	psect	text66
 16402  01371C                     __ptext66:
 16403                           	opt stack 0
 16404  01371C                     __update_modified_time:
 16405                           	opt stack 15
 16406                           
 16407                           ;fat16.c: 57: root->modifiedDate = _get_date();
 16408                           
 16409                           ;incstack = 0
 16410  01371C  EC14  F091         	call	__get_date	;wreg free
 16411  013720  0100               	movlb	0	; () banked
 16412  013722  EE20 F018          	lfsr	2,24
 16413  013726  516D               	movf	__update_modified_time@root& (0+255),w,b
 16414  013728  26D9               	addwf	fsr2l,f,c
 16415  01372A  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 16416  01372C  22DA               	addwfc	fsr2h,f,c
 16417  01372E  0100               	movlb	0	; () banked
 16418  013730  C064  FFDE         	movff	?__get_date,postinc2
 16419  013734  0100               	movlb	0	; () banked
 16420  013736  C065  FFDD         	movff	?__get_date+1,postdec2
 16421                           
 16422                           ;fat16.c: 58: root->modifiedTime = _get_time();
 16423  01373A  EC84  F08F         	call	__get_time	;wreg free
 16424  01373E  0100               	movlb	0	; () banked
 16425  013740  EE20 F016          	lfsr	2,22
 16426  013744  516D               	movf	__update_modified_time@root& (0+255),w,b
 16427  013746  26D9               	addwf	fsr2l,f,c
 16428  013748  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 16429  01374A  22DA               	addwfc	fsr2h,f,c
 16430  01374C  0100               	movlb	0	; () banked
 16431  01374E  C064  FFDE         	movff	?__get_time,postinc2
 16432  013752  0100               	movlb	0	; () banked
 16433  013754  C065  FFDD         	movff	?__get_time+1,postdec2
 16434                           
 16435                           ; BSR set to: 0
 16436  013758  0012               	return		;funcret
 16437  01375A                     __end_of__update_modified_time:
 16438                           	opt stack 0
 16439                           tblptru	equ	0xFF8
 16440                           tblptrh	equ	0xFF7
 16441                           tblptrl	equ	0xFF6
 16442                           tablat	equ	0xFF5
 16443                           prodh	equ	0xFF4
 16444                           prodl	equ	0xFF3
 16445                           intcon	equ	0xFF2
 16446                           intcon2	equ	0xFF1
 16447                           intcon3	equ	0xFF0
 16448                           postinc0	equ	0xFEE
 16449                           wreg	equ	0xFE8
 16450                           postinc1	equ	0xFE6
 16451                           postdec1	equ	0xFE5
 16452                           plusw1	equ	0xFE3
 16453                           fsr1h	equ	0xFE2
 16454                           fsr1l	equ	0xFE1
 16455                           indf2	equ	0xFDF
 16456                           postinc2	equ	0xFDE
 16457                           postdec2	equ	0xFDD
 16458                           plusw2	equ	0xFDB
 16459                           fsr2h	equ	0xFDA
 16460                           fsr2l	equ	0xFD9
 16461                           status	equ	0xFD8
 16462                           
 16463 ;; *************** function __get_time *****************
 16464 ;; Defined at:
 16465 ;;		line 31 in file "fat16.c"
 16466 ;; Parameters:    Size  Location     Type
 16467 ;;		None
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;  time            2   11[BANK0 ] unsigned int 
 16470 ;;  seconds         1   10[BANK0 ] unsigned char 
 16471 ;;  minutes         1    9[BANK0 ] unsigned char 
 16472 ;;  hours           1    8[BANK0 ] unsigned char 
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  2    4[BANK0 ] unsigned int 
 16475 ;; Registers used:
 16476 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16483 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16485 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16486 ;;Total ram usage:        9 bytes
 16487 ;; Hardware stack levels used:    1
 16488 ;; Hardware stack levels required when called:   12
 16489 ;; This function calls:
 16490 ;;		_rtcc_get_hours_decimal
 16491 ;;		_rtcc_get_minutes_decimal
 16492 ;;		_rtcc_get_seconds_decimal
 16493 ;; This function is called by:
 16494 ;;		__update_modified_time
 16495 ;;		_fat_create_file
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           	psect	text67
 16500  011F08                     __ptext67:
 16501                           	opt stack 0
 16502  011F08                     __get_time:
 16503                           	opt stack 16
 16504                           
 16505                           ;fat16.c: 33: uint16_t time;
 16506                           ;fat16.c: 34: uint8_t hours = rtcc_get_hours_decimal();
 16507                           
 16508                           ; BSR set to: 0
 16509                           ;incstack = 0
 16510  011F08  ECEC  F0A0         	call	_rtcc_get_hours_decimal	;wreg free
 16511  011F0C  0100               	movlb	0	; () banked
 16512  011F0E  6F68               	movwf	__get_time@hours& (0+255),b
 16513                           
 16514                           ;fat16.c: 35: uint8_t minutes = rtcc_get_minutes_decimal();
 16515  011F10  ECE3  F0A0         	call	_rtcc_get_minutes_decimal	;wreg free
 16516  011F14  0100               	movlb	0	; () banked
 16517  011F16  6F69               	movwf	__get_time@minutes& (0+255),b
 16518                           
 16519                           ;fat16.c: 36: uint8_t seconds = rtcc_get_seconds_decimal();
 16520  011F18  EC10  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
 16521  011F1C  0100               	movlb	0	; () banked
 16522  011F1E  6F6A               	movwf	__get_time@seconds& (0+255),b
 16523                           
 16524                           ; BSR set to: 0
 16525                           ;fat16.c: 37: time = ((hours&0b11111) << 11);
 16526  011F20  0100               	movlb	0	; () banked
 16527  011F22  5168               	movf	__get_time@hours& (0+255),w,b
 16528  011F24  0B1F               	andlw	31
 16529  011F26  0100               	movlb	0	; () banked
 16530  011F28  6F66               	movwf	??__get_time& (0+255),b
 16531  011F2A  6B67               	clrf	(??__get_time+1)& (0+255),b
 16532  011F2C  0E0B               	movlw	11
 16533  011F2E                     u18235:
 16534  011F2E  90D8               	bcf	status,0,c
 16535  011F30  0100               	movlb	0	; () banked
 16536  011F32  3766               	rlcf	??__get_time& (0+255),f,b
 16537  011F34  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 16538  011F36  2EE8               	decfsz	wreg,f,c
 16539  011F38  D7FA               	goto	u18235
 16540  011F3A  C066  F06B         	movff	??__get_time,__get_time@time
 16541  011F3E  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 16542                           
 16543                           ; BSR set to: 0
 16544                           ;fat16.c: 38: time |= ((minutes&0b111111) << 5);
 16545  011F42  0100               	movlb	0	; () banked
 16546  011F44  5169               	movf	__get_time@minutes& (0+255),w,b
 16547  011F46  0B3F               	andlw	63
 16548  011F48  0100               	movlb	0	; () banked
 16549  011F4A  6F66               	movwf	??__get_time& (0+255),b
 16550  011F4C  6B67               	clrf	(??__get_time+1)& (0+255),b
 16551  011F4E  0E05               	movlw	5
 16552  011F50                     u18245:
 16553  011F50  90D8               	bcf	status,0,c
 16554  011F52  0100               	movlb	0	; () banked
 16555  011F54  3766               	rlcf	??__get_time& (0+255),f,b
 16556  011F56  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 16557  011F58  2EE8               	decfsz	wreg,f,c
 16558  011F5A  D7FA               	goto	u18245
 16559  011F5C  0100               	movlb	0	; () banked
 16560  011F5E  5166               	movf	??__get_time& (0+255),w,b
 16561  011F60  0100               	movlb	0	; () banked
 16562  011F62  136B               	iorwf	__get_time@time& (0+255),f,b
 16563  011F64  0100               	movlb	0	; () banked
 16564  011F66  5167               	movf	(??__get_time+1)& (0+255),w,b
 16565  011F68  0100               	movlb	0	; () banked
 16566  011F6A  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 16567                           
 16568                           ; BSR set to: 0
 16569                           ;fat16.c: 39: time |= ((seconds>>1)&0b11111);
 16570  011F6C  C06A  F066         	movff	__get_time@seconds,??__get_time
 16571  011F70  0100               	movlb	0	; () banked
 16572  011F72  90D8               	bcf	status,0,c
 16573  011F74  3366               	rrcf	??__get_time& (0+255),f,b
 16574  011F76  0E1F               	movlw	31
 16575  011F78  0100               	movlb	0	; () banked
 16576  011F7A  1766               	andwf	??__get_time& (0+255),f,b
 16577  011F7C  0100               	movlb	0	; () banked
 16578  011F7E  5166               	movf	??__get_time& (0+255),w,b
 16579  011F80  0100               	movlb	0	; () banked
 16580  011F82  136B               	iorwf	__get_time@time& (0+255),f,b
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;fat16.c: 40: return time;
 16584  011F84  C06B  F064         	movff	__get_time@time,?__get_time
 16585  011F88  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 16586  011F8C  0012               	return	
 16587  011F8E                     __end_of__get_time:
 16588                           	opt stack 0
 16589                           tblptru	equ	0xFF8
 16590                           tblptrh	equ	0xFF7
 16591                           tblptrl	equ	0xFF6
 16592                           tablat	equ	0xFF5
 16593                           prodh	equ	0xFF4
 16594                           prodl	equ	0xFF3
 16595                           intcon	equ	0xFF2
 16596                           intcon2	equ	0xFF1
 16597                           intcon3	equ	0xFF0
 16598                           postinc0	equ	0xFEE
 16599                           wreg	equ	0xFE8
 16600                           postinc1	equ	0xFE6
 16601                           postdec1	equ	0xFE5
 16602                           plusw1	equ	0xFE3
 16603                           fsr1h	equ	0xFE2
 16604                           fsr1l	equ	0xFE1
 16605                           indf2	equ	0xFDF
 16606                           postinc2	equ	0xFDE
 16607                           postdec2	equ	0xFDD
 16608                           plusw2	equ	0xFDB
 16609                           fsr2h	equ	0xFDA
 16610                           fsr2l	equ	0xFD9
 16611                           status	equ	0xFD8
 16612                           
 16613 ;; *************** function _rtcc_get_minutes_decimal *****************
 16614 ;; Defined at:
 16615 ;;		line 287 in file "rtcc.c"
 16616 ;; Parameters:    Size  Location     Type
 16617 ;;		None
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 16620 ;; Return value:  Size  Location     Type
 16621 ;;                  1    wreg      unsigned char 
 16622 ;; Registers used:
 16623 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16624 ;; Tracked objects:
 16625 ;;		On entry : 0/0
 16626 ;;		On exit  : 0/0
 16627 ;;		Unchanged: 0/0
 16628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16632 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16633 ;;Total ram usage:        1 bytes
 16634 ;; Hardware stack levels used:    1
 16635 ;; Hardware stack levels required when called:   11
 16636 ;; This function calls:
 16637 ;;		__rtcc_bcd_to_decimal
 16638 ;;		_rtcc_get_minutes
 16639 ;; This function is called by:
 16640 ;;		__get_time
 16641 ;;		__get_dateTime
 16642 ;; This function uses a non-reentrant model
 16643 ;;
 16644                           
 16645                           	psect	text68
 16646  0141C6                     __ptext68:
 16647                           	opt stack 0
 16648  0141C6                     _rtcc_get_minutes_decimal:
 16649                           	opt stack 16
 16650                           
 16651                           ;rtcc.c: 289: uint8_t bcd_minutes = rtcc_get_minutes();
 16652                           
 16653                           ; BSR set to: 0
 16654                           ;incstack = 0
 16655  0141C6  ECC5  F0A0         	call	_rtcc_get_minutes	;wreg free
 16656  0141CA  0100               	movlb	0	; () banked
 16657  0141CC  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;rtcc.c: 290: return _rtcc_bcd_to_decimal(bcd_minutes);
 16661  0141CE  0100               	movlb	0	; () banked
 16662  0141D0  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 16663  0141D2  EC24  F09F         	call	__rtcc_bcd_to_decimal
 16664  0141D6  0012               	return	
 16665  0141D8                     __end_of_rtcc_get_minutes_decimal:
 16666                           	opt stack 0
 16667                           tblptru	equ	0xFF8
 16668                           tblptrh	equ	0xFF7
 16669                           tblptrl	equ	0xFF6
 16670                           tablat	equ	0xFF5
 16671                           prodh	equ	0xFF4
 16672                           prodl	equ	0xFF3
 16673                           intcon	equ	0xFF2
 16674                           intcon2	equ	0xFF1
 16675                           intcon3	equ	0xFF0
 16676                           postinc0	equ	0xFEE
 16677                           wreg	equ	0xFE8
 16678                           postinc1	equ	0xFE6
 16679                           postdec1	equ	0xFE5
 16680                           plusw1	equ	0xFE3
 16681                           fsr1h	equ	0xFE2
 16682                           fsr1l	equ	0xFE1
 16683                           indf2	equ	0xFDF
 16684                           postinc2	equ	0xFDE
 16685                           postdec2	equ	0xFDD
 16686                           plusw2	equ	0xFDB
 16687                           fsr2h	equ	0xFDA
 16688                           fsr2l	equ	0xFD9
 16689                           status	equ	0xFD8
 16690                           
 16691 ;; *************** function _rtcc_get_hours_decimal *****************
 16692 ;; Defined at:
 16693 ;;		line 249 in file "rtcc.c"
 16694 ;; Parameters:    Size  Location     Type
 16695 ;;		None
 16696 ;; Auto vars:     Size  Location     Type
 16697 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 16698 ;; Return value:  Size  Location     Type
 16699 ;;                  1    wreg      unsigned char 
 16700 ;; Registers used:
 16701 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16702 ;; Tracked objects:
 16703 ;;		On entry : 0/0
 16704 ;;		On exit  : 0/0
 16705 ;;		Unchanged: 0/0
 16706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16711 ;;Total ram usage:        1 bytes
 16712 ;; Hardware stack levels used:    1
 16713 ;; Hardware stack levels required when called:   11
 16714 ;; This function calls:
 16715 ;;		__rtcc_bcd_to_decimal
 16716 ;;		_rtcc_get_hours
 16717 ;; This function is called by:
 16718 ;;		__get_time
 16719 ;;		__get_dateTime
 16720 ;; This function uses a non-reentrant model
 16721 ;;
 16722                           
 16723                           	psect	text69
 16724  0141D8                     __ptext69:
 16725                           	opt stack 0
 16726  0141D8                     _rtcc_get_hours_decimal:
 16727                           	opt stack 16
 16728                           
 16729                           ;rtcc.c: 251: uint8_t bcd_hours = rtcc_get_hours();
 16730                           
 16731                           ;incstack = 0
 16732  0141D8  ECCF  F0A0         	call	_rtcc_get_hours	;wreg free
 16733  0141DC  0100               	movlb	0	; () banked
 16734  0141DE  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 16735                           
 16736                           ; BSR set to: 0
 16737                           ;rtcc.c: 252: return _rtcc_bcd_to_decimal(bcd_hours);
 16738  0141E0  0100               	movlb	0	; () banked
 16739  0141E2  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 16740  0141E4  EC24  F09F         	call	__rtcc_bcd_to_decimal
 16741  0141E8  0012               	return	
 16742  0141EA                     __end_of_rtcc_get_hours_decimal:
 16743                           	opt stack 0
 16744                           tblptru	equ	0xFF8
 16745                           tblptrh	equ	0xFF7
 16746                           tblptrl	equ	0xFF6
 16747                           tablat	equ	0xFF5
 16748                           prodh	equ	0xFF4
 16749                           prodl	equ	0xFF3
 16750                           intcon	equ	0xFF2
 16751                           intcon2	equ	0xFF1
 16752                           intcon3	equ	0xFF0
 16753                           postinc0	equ	0xFEE
 16754                           wreg	equ	0xFE8
 16755                           postinc1	equ	0xFE6
 16756                           postdec1	equ	0xFE5
 16757                           plusw1	equ	0xFE3
 16758                           fsr1h	equ	0xFE2
 16759                           fsr1l	equ	0xFE1
 16760                           indf2	equ	0xFDF
 16761                           postinc2	equ	0xFDE
 16762                           postdec2	equ	0xFDD
 16763                           plusw2	equ	0xFDB
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function __get_date *****************
 16769 ;; Defined at:
 16770 ;;		line 43 in file "fat16.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;		None
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;  date            2   11[BANK0 ] unsigned int 
 16775 ;;  day             1   10[BANK0 ] unsigned char 
 16776 ;;  month           1    9[BANK0 ] unsigned char 
 16777 ;;  year            1    8[BANK0 ] unsigned char 
 16778 ;; Return value:  Size  Location     Type
 16779 ;;                  2    4[BANK0 ] unsigned int 
 16780 ;; Registers used:
 16781 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16782 ;; Tracked objects:
 16783 ;;		On entry : 0/0
 16784 ;;		On exit  : 0/0
 16785 ;;		Unchanged: 0/0
 16786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16787 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16788 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16790 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16791 ;;Total ram usage:        9 bytes
 16792 ;; Hardware stack levels used:    1
 16793 ;; Hardware stack levels required when called:   12
 16794 ;; This function calls:
 16795 ;;		_rtcc_get_day_decimal
 16796 ;;		_rtcc_get_month_decimal
 16797 ;;		_rtcc_get_year_decimal
 16798 ;; This function is called by:
 16799 ;;		__update_modified_time
 16800 ;;		_fat_create_file
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text70
 16805  012228                     __ptext70:
 16806                           	opt stack 0
 16807  012228                     __get_date:
 16808                           	opt stack 16
 16809                           
 16810                           ;fat16.c: 45: uint16_t date;
 16811                           ;fat16.c: 46: uint8_t year = rtcc_get_year_decimal();
 16812                           
 16813                           ;incstack = 0
 16814  012228  ECF5  F0A0         	call	_rtcc_get_year_decimal	;wreg free
 16815  01222C  0100               	movlb	0	; () banked
 16816  01222E  6F68               	movwf	__get_date@year& (0+255),b
 16817                           
 16818                           ;fat16.c: 47: uint8_t month = rtcc_get_month_decimal();
 16819  012230  ECFE  F0A0         	call	_rtcc_get_month_decimal	;wreg free
 16820  012234  0100               	movlb	0	; () banked
 16821  012236  6F69               	movwf	__get_date@month& (0+255),b
 16822                           
 16823                           ;fat16.c: 48: uint8_t day = rtcc_get_day_decimal();
 16824  012238  EC07  F0A1         	call	_rtcc_get_day_decimal	;wreg free
 16825  01223C  0100               	movlb	0	; () banked
 16826  01223E  6F6A               	movwf	__get_date@day& (0+255),b
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;fat16.c: 49: date = (((year+20)&0b1111111) << 9);
 16830  012240  0100               	movlb	0	; () banked
 16831  012242  5168               	movf	__get_date@year& (0+255),w,b
 16832  012244  0F14               	addlw	20
 16833  012246  0B7F               	andlw	127
 16834  012248  0100               	movlb	0	; () banked
 16835  01224A  6F66               	movwf	??__get_date& (0+255),b
 16836  01224C  6B67               	clrf	(??__get_date+1)& (0+255),b
 16837  01224E  0E09               	movlw	9
 16838  012250                     u18255:
 16839  012250  90D8               	bcf	status,0,c
 16840  012252  0100               	movlb	0	; () banked
 16841  012254  3766               	rlcf	??__get_date& (0+255),f,b
 16842  012256  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16843  012258  2EE8               	decfsz	wreg,f,c
 16844  01225A  D7FA               	goto	u18255
 16845  01225C  C066  F06B         	movff	??__get_date,__get_date@date
 16846  012260  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;fat16.c: 50: date |= ((month&0b1111) << 5);
 16850  012264  0100               	movlb	0	; () banked
 16851  012266  5169               	movf	__get_date@month& (0+255),w,b
 16852  012268  0B0F               	andlw	15
 16853  01226A  0100               	movlb	0	; () banked
 16854  01226C  6F66               	movwf	??__get_date& (0+255),b
 16855  01226E  6B67               	clrf	(??__get_date+1)& (0+255),b
 16856  012270  0E05               	movlw	5
 16857  012272                     u18265:
 16858  012272  90D8               	bcf	status,0,c
 16859  012274  0100               	movlb	0	; () banked
 16860  012276  3766               	rlcf	??__get_date& (0+255),f,b
 16861  012278  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16862  01227A  2EE8               	decfsz	wreg,f,c
 16863  01227C  D7FA               	goto	u18265
 16864  01227E  0100               	movlb	0	; () banked
 16865  012280  5166               	movf	??__get_date& (0+255),w,b
 16866  012282  0100               	movlb	0	; () banked
 16867  012284  136B               	iorwf	__get_date@date& (0+255),f,b
 16868  012286  0100               	movlb	0	; () banked
 16869  012288  5167               	movf	(??__get_date+1)& (0+255),w,b
 16870  01228A  0100               	movlb	0	; () banked
 16871  01228C  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 16872                           
 16873                           ; BSR set to: 0
 16874                           ;fat16.c: 51: date |= (day&0b11111);
 16875  01228E  C06A  F066         	movff	__get_date@day,??__get_date
 16876  012292  0E1F               	movlw	31
 16877  012294  0100               	movlb	0	; () banked
 16878  012296  1766               	andwf	??__get_date& (0+255),f,b
 16879  012298  0100               	movlb	0	; () banked
 16880  01229A  5166               	movf	??__get_date& (0+255),w,b
 16881  01229C  0100               	movlb	0	; () banked
 16882  01229E  136B               	iorwf	__get_date@date& (0+255),f,b
 16883                           
 16884                           ; BSR set to: 0
 16885                           ;fat16.c: 52: return date;
 16886  0122A0  C06B  F064         	movff	__get_date@date,?__get_date
 16887  0122A4  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 16888  0122A8  0012               	return	
 16889  0122AA                     __end_of__get_date:
 16890                           	opt stack 0
 16891                           tblptru	equ	0xFF8
 16892                           tblptrh	equ	0xFF7
 16893                           tblptrl	equ	0xFF6
 16894                           tablat	equ	0xFF5
 16895                           prodh	equ	0xFF4
 16896                           prodl	equ	0xFF3
 16897                           intcon	equ	0xFF2
 16898                           intcon2	equ	0xFF1
 16899                           intcon3	equ	0xFF0
 16900                           postinc0	equ	0xFEE
 16901                           wreg	equ	0xFE8
 16902                           postinc1	equ	0xFE6
 16903                           postdec1	equ	0xFE5
 16904                           plusw1	equ	0xFE3
 16905                           fsr1h	equ	0xFE2
 16906                           fsr1l	equ	0xFE1
 16907                           indf2	equ	0xFDF
 16908                           postinc2	equ	0xFDE
 16909                           postdec2	equ	0xFDD
 16910                           plusw2	equ	0xFDB
 16911                           fsr2h	equ	0xFDA
 16912                           fsr2l	equ	0xFD9
 16913                           status	equ	0xFD8
 16914                           
 16915 ;; *************** function _rtcc_get_year_decimal *****************
 16916 ;; Defined at:
 16917 ;;		line 135 in file "rtcc.c"
 16918 ;; Parameters:    Size  Location     Type
 16919 ;;		None
 16920 ;; Auto vars:     Size  Location     Type
 16921 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 16922 ;; Return value:  Size  Location     Type
 16923 ;;                  1    wreg      unsigned char 
 16924 ;; Registers used:
 16925 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16926 ;; Tracked objects:
 16927 ;;		On entry : 0/0
 16928 ;;		On exit  : 0/0
 16929 ;;		Unchanged: 0/0
 16930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16935 ;;Total ram usage:        1 bytes
 16936 ;; Hardware stack levels used:    1
 16937 ;; Hardware stack levels required when called:   11
 16938 ;; This function calls:
 16939 ;;		__rtcc_bcd_to_decimal
 16940 ;;		_rtcc_get_year
 16941 ;; This function is called by:
 16942 ;;		__get_date
 16943 ;;		__get_dateTime
 16944 ;; This function uses a non-reentrant model
 16945 ;;
 16946                           
 16947                           	psect	text71
 16948  0141EA                     __ptext71:
 16949                           	opt stack 0
 16950  0141EA                     _rtcc_get_year_decimal:
 16951                           	opt stack 16
 16952                           
 16953                           ;rtcc.c: 137: uint8_t bcd_year = rtcc_get_year();
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;incstack = 0
 16957  0141EA  ECA7  F0A0         	call	_rtcc_get_year	;wreg free
 16958  0141EE  0100               	movlb	0	; () banked
 16959  0141F0  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;rtcc.c: 138: return _rtcc_bcd_to_decimal(bcd_year);
 16963  0141F2  0100               	movlb	0	; () banked
 16964  0141F4  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 16965  0141F6  EC24  F09F         	call	__rtcc_bcd_to_decimal
 16966  0141FA  0012               	return	
 16967  0141FC                     __end_of_rtcc_get_year_decimal:
 16968                           	opt stack 0
 16969                           tblptru	equ	0xFF8
 16970                           tblptrh	equ	0xFF7
 16971                           tblptrl	equ	0xFF6
 16972                           tablat	equ	0xFF5
 16973                           prodh	equ	0xFF4
 16974                           prodl	equ	0xFF3
 16975                           intcon	equ	0xFF2
 16976                           intcon2	equ	0xFF1
 16977                           intcon3	equ	0xFF0
 16978                           postinc0	equ	0xFEE
 16979                           wreg	equ	0xFE8
 16980                           postinc1	equ	0xFE6
 16981                           postdec1	equ	0xFE5
 16982                           plusw1	equ	0xFE3
 16983                           fsr1h	equ	0xFE2
 16984                           fsr1l	equ	0xFE1
 16985                           indf2	equ	0xFDF
 16986                           postinc2	equ	0xFDE
 16987                           postdec2	equ	0xFDD
 16988                           plusw2	equ	0xFDB
 16989                           fsr2h	equ	0xFDA
 16990                           fsr2l	equ	0xFD9
 16991                           status	equ	0xFD8
 16992                           
 16993 ;; *************** function _rtcc_get_month_decimal *****************
 16994 ;; Defined at:
 16995 ;;		line 173 in file "rtcc.c"
 16996 ;; Parameters:    Size  Location     Type
 16997 ;;		None
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 17000 ;; Return value:  Size  Location     Type
 17001 ;;                  1    wreg      unsigned char 
 17002 ;; Registers used:
 17003 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17004 ;; Tracked objects:
 17005 ;;		On entry : 0/0
 17006 ;;		On exit  : 0/0
 17007 ;;		Unchanged: 0/0
 17008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17012 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17013 ;;Total ram usage:        1 bytes
 17014 ;; Hardware stack levels used:    1
 17015 ;; Hardware stack levels required when called:   11
 17016 ;; This function calls:
 17017 ;;		__rtcc_bcd_to_decimal
 17018 ;;		_rtcc_get_month
 17019 ;; This function is called by:
 17020 ;;		__get_date
 17021 ;;		__get_dateTime
 17022 ;; This function uses a non-reentrant model
 17023 ;;
 17024                           
 17025                           	psect	text72
 17026  0141FC                     __ptext72:
 17027                           	opt stack 0
 17028  0141FC                     _rtcc_get_month_decimal:
 17029                           	opt stack 16
 17030                           
 17031                           ;rtcc.c: 175: uint8_t bcd_month = rtcc_get_month();
 17032                           
 17033                           ;incstack = 0
 17034  0141FC  ECBB  F0A0         	call	_rtcc_get_month	;wreg free
 17035  014200  0100               	movlb	0	; () banked
 17036  014202  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;rtcc.c: 176: return _rtcc_bcd_to_decimal(bcd_month);
 17040  014204  0100               	movlb	0	; () banked
 17041  014206  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 17042  014208  EC24  F09F         	call	__rtcc_bcd_to_decimal
 17043  01420C  0012               	return	
 17044  01420E                     __end_of_rtcc_get_month_decimal:
 17045                           	opt stack 0
 17046                           tblptru	equ	0xFF8
 17047                           tblptrh	equ	0xFF7
 17048                           tblptrl	equ	0xFF6
 17049                           tablat	equ	0xFF5
 17050                           prodh	equ	0xFF4
 17051                           prodl	equ	0xFF3
 17052                           intcon	equ	0xFF2
 17053                           intcon2	equ	0xFF1
 17054                           intcon3	equ	0xFF0
 17055                           postinc0	equ	0xFEE
 17056                           wreg	equ	0xFE8
 17057                           postinc1	equ	0xFE6
 17058                           postdec1	equ	0xFE5
 17059                           plusw1	equ	0xFE3
 17060                           fsr1h	equ	0xFE2
 17061                           fsr1l	equ	0xFE1
 17062                           indf2	equ	0xFDF
 17063                           postinc2	equ	0xFDE
 17064                           postdec2	equ	0xFDD
 17065                           plusw2	equ	0xFDB
 17066                           fsr2h	equ	0xFDA
 17067                           fsr2l	equ	0xFD9
 17068                           status	equ	0xFD8
 17069                           
 17070 ;; *************** function _rtcc_get_day_decimal *****************
 17071 ;; Defined at:
 17072 ;;		line 211 in file "rtcc.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;		None
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 17077 ;; Return value:  Size  Location     Type
 17078 ;;                  1    wreg      unsigned char 
 17079 ;; Registers used:
 17080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17081 ;; Tracked objects:
 17082 ;;		On entry : 0/0
 17083 ;;		On exit  : 0/0
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17090 ;;Total ram usage:        1 bytes
 17091 ;; Hardware stack levels used:    1
 17092 ;; Hardware stack levels required when called:   11
 17093 ;; This function calls:
 17094 ;;		__rtcc_bcd_to_decimal
 17095 ;;		_rtcc_get_day
 17096 ;; This function is called by:
 17097 ;;		__get_date
 17098 ;;		__get_dateTime
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           	psect	text73
 17103  01420E                     __ptext73:
 17104                           	opt stack 0
 17105  01420E                     _rtcc_get_day_decimal:
 17106                           	opt stack 16
 17107                           
 17108                           ;rtcc.c: 213: uint8_t bcd_day = rtcc_get_day();
 17109                           
 17110                           ;incstack = 0
 17111  01420E  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
 17112  014212  0100               	movlb	0	; () banked
 17113  014214  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 17114                           
 17115                           ; BSR set to: 0
 17116                           ;rtcc.c: 214: return _rtcc_bcd_to_decimal(bcd_day);
 17117  014216  0100               	movlb	0	; () banked
 17118  014218  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 17119  01421A  EC24  F09F         	call	__rtcc_bcd_to_decimal
 17120  01421E  0012               	return	
 17121  014220                     __end_of_rtcc_get_day_decimal:
 17122                           	opt stack 0
 17123                           tblptru	equ	0xFF8
 17124                           tblptrh	equ	0xFF7
 17125                           tblptrl	equ	0xFF6
 17126                           tablat	equ	0xFF5
 17127                           prodh	equ	0xFF4
 17128                           prodl	equ	0xFF3
 17129                           intcon	equ	0xFF2
 17130                           intcon2	equ	0xFF1
 17131                           intcon3	equ	0xFF0
 17132                           postinc0	equ	0xFEE
 17133                           wreg	equ	0xFE8
 17134                           postinc1	equ	0xFE6
 17135                           postdec1	equ	0xFE5
 17136                           plusw1	equ	0xFE3
 17137                           fsr1h	equ	0xFE2
 17138                           fsr1l	equ	0xFE1
 17139                           indf2	equ	0xFDF
 17140                           postinc2	equ	0xFDE
 17141                           postdec2	equ	0xFDD
 17142                           plusw2	equ	0xFDB
 17143                           fsr2h	equ	0xFDA
 17144                           fsr2l	equ	0xFD9
 17145                           status	equ	0xFD8
 17146                           
 17147 ;; *************** function __sector_from_cluster *****************
 17148 ;; Defined at:
 17149 ;;		line 455 in file "fat16.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;		None
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  2    0[BANK0 ] unsigned int 
 17156 ;; Registers used:
 17157 ;;		wreg, status,2, status,0
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17167 ;;Total ram usage:        2 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:   10
 17170 ;; This function calls:
 17171 ;;		Nothing
 17172 ;; This function is called by:
 17173 ;;		_fat_append_to_file
 17174 ;;		_fat_read_from_file
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           
 17178                           	psect	text74
 17179  0140E4                     __ptext74:
 17180                           	opt stack 0
 17181  0140E4                     __sector_from_cluster:
 17182                           	opt stack 18
 17183                           
 17184                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 17185                           
 17186                           ;incstack = 0
 17187  0140E4  0E14               	movlw	20
 17188  0140E6  0100               	movlb	0	; () banked
 17189  0140E8  2560               	addwf	__sector_from_cluster@fat_cluster& (0+255),w,b
 17190  0140EA  0100               	movlb	0	; () banked
 17191  0140EC  6F60               	movwf	?__sector_from_cluster& (0+255),b
 17192  0140EE  0E00               	movlw	0
 17193  0140F0  0100               	movlb	0	; () banked
 17194  0140F2  2161               	addwfc	(__sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17195  0140F4  0100               	movlb	0	; () banked
 17196  0140F6  6F61               	movwf	(?__sector_from_cluster+1)& (0+255),b
 17197  0140F8  0012               	return	
 17198  0140FA                     __end_of__sector_from_cluster:
 17199                           	opt stack 0
 17200                           tblptru	equ	0xFF8
 17201                           tblptrh	equ	0xFF7
 17202                           tblptrl	equ	0xFF6
 17203                           tablat	equ	0xFF5
 17204                           prodh	equ	0xFF4
 17205                           prodl	equ	0xFF3
 17206                           intcon	equ	0xFF2
 17207                           intcon2	equ	0xFF1
 17208                           intcon3	equ	0xFF0
 17209                           postinc0	equ	0xFEE
 17210                           wreg	equ	0xFE8
 17211                           postinc1	equ	0xFE6
 17212                           postdec1	equ	0xFE5
 17213                           plusw1	equ	0xFE3
 17214                           fsr1h	equ	0xFE2
 17215                           fsr1l	equ	0xFE1
 17216                           indf2	equ	0xFDF
 17217                           postinc2	equ	0xFDE
 17218                           postdec2	equ	0xFDD
 17219                           plusw2	equ	0xFDB
 17220                           fsr2h	equ	0xFDA
 17221                           fsr2l	equ	0xFD9
 17222                           status	equ	0xFD8
 17223                           
 17224 ;; *************** function __root_is_available *****************
 17225 ;; Defined at:
 17226 ;;		line 61 in file "fat16.c"
 17227 ;; Parameters:    Size  Location     Type
 17228 ;;  file_number     1    wreg     unsigned char 
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;  file_number     1   44[BANK0 ] unsigned char 
 17231 ;;  offset          2   42[BANK0 ] unsigned int 
 17232 ;;  root_sector     2   40[BANK0 ] unsigned int 
 17233 ;;  first_byte      1   45[BANK0 ] unsigned char 
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  1    wreg      unsigned char 
 17236 ;; Registers used:
 17237 ;;		wreg, status,2, status,0, cstack
 17238 ;; Tracked objects:
 17239 ;;		On entry : 0/0
 17240 ;;		On exit  : 0/0
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17244 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17246 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17247 ;;Total ram usage:        7 bytes
 17248 ;; Hardware stack levels used:    1
 17249 ;; Hardware stack levels required when called:   14
 17250 ;; This function calls:
 17251 ;;		_flash_partial_read
 17252 ;; This function is called by:
 17253 ;;		__get_available_root_entry
 17254 ;;		_fat_append_to_file
 17255 ;;		_fat_delete_file
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           	psect	text75
 17260  011974                     __ptext75:
 17261                           	opt stack 0
 17262  011974                     __root_is_available:
 17263                           	opt stack 13
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;incstack = 0
 17267                           ;__root_is_available@file_number stored from wreg
 17268  011974  0100               	movlb	0	; () banked
 17269  011976  6F8C               	movwf	__root_is_available@file_number& (0+255),b
 17270                           
 17271                           ;fat16.c: 63: uint16_t root_sector;
 17272                           ;fat16.c: 64: uint16_t offset;
 17273                           ;fat16.c: 65: uint8_t first_byte;
 17274                           ;fat16.c: 69: if(file_number>=64)
 17275  011978  0E3F               	movlw	63
 17276  01197A  0100               	movlb	0	; () banked
 17277  01197C  658C               	cpfsgt	__root_is_available@file_number& (0+255),b
 17278  01197E  D002               	goto	l19269
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;fat16.c: 70: {
 17282                           ;fat16.c: 72: return 0;
 17283  011980  0E00               	movlw	0
 17284                           
 17285                           ; BSR set to: 0
 17286  011982  0012               	return	
 17287  011984                     l19269:
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;fat16.c: 73: }
 17291                           ;fat16.c: 76: root_sector = (file_number >> 4) + 18;
 17292  011984  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 17293  011988  0100               	movlb	0	; () banked
 17294  01198A  3B87               	swapf	??__root_is_available& (0+255),f,b
 17295  01198C  0E0F               	movlw	15
 17296  01198E  1787               	andwf	??__root_is_available& (0+255),f,b
 17297  011990  0E12               	movlw	18
 17298  011992  0100               	movlb	0	; () banked
 17299  011994  2587               	addwf	??__root_is_available& (0+255),w,b
 17300  011996  0100               	movlb	0	; () banked
 17301  011998  6F88               	movwf	__root_is_available@root_sector& (0+255),b
 17302  01199A  0100               	movlb	0	; () banked
 17303  01199C  6B89               	clrf	(__root_is_available@root_sector+1)& (0+255),b
 17304  01199E  0E00               	movlw	0
 17305  0119A0  2389               	addwfc	(__root_is_available@root_sector+1)& (0+255),f,b
 17306                           
 17307                           ;fat16.c: 77: offset = (file_number & 0b1111);
 17308  0119A2  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 17309  0119A6  0E0F               	movlw	15
 17310  0119A8  0100               	movlb	0	; () banked
 17311  0119AA  1787               	andwf	??__root_is_available& (0+255),f,b
 17312  0119AC  0100               	movlb	0	; () banked
 17313  0119AE  5187               	movf	??__root_is_available& (0+255),w,b
 17314  0119B0  0100               	movlb	0	; () banked
 17315  0119B2  6F8A               	movwf	__root_is_available@offset& (0+255),b
 17316  0119B4  6B8B               	clrf	(__root_is_available@offset+1)& (0+255),b
 17317                           
 17318                           ;fat16.c: 78: offset <<= 5;
 17319  0119B6  0100               	movlb	0	; () banked
 17320  0119B8  0E05               	movlw	5
 17321  0119BA                     u18285:
 17322  0119BA  90D8               	bcf	status,0,c
 17323  0119BC  378A               	rlcf	__root_is_available@offset& (0+255),f,b
 17324  0119BE  378B               	rlcf	(__root_is_available@offset+1)& (0+255),f,b
 17325  0119C0  2EE8               	decfsz	wreg,f,c
 17326  0119C2  D7FB               	goto	u18285
 17327                           
 17328                           ; BSR set to: 0
 17329                           ;fat16.c: 81: flash_partial_read(root_sector, offset, 1, &first_byte);
 17330  0119C4  C088  F073         	movff	__root_is_available@root_sector,flash_partial_read@page
 17331  0119C8  C089  F074         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17332  0119CC  C08A  F075         	movff	__root_is_available@offset,flash_partial_read@start
 17333  0119D0  C08B  F076         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17334  0119D4  0E00               	movlw	0
 17335  0119D6  0100               	movlb	0	; () banked
 17336  0119D8  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17337  0119DA  0E01               	movlw	1
 17338  0119DC  6F77               	movwf	flash_partial_read@length& (0+255),b
 17339  0119DE  0E8D               	movlw	low __root_is_available@first_byte
 17340  0119E0  0100               	movlb	0	; () banked
 17341  0119E2  6F79               	movwf	flash_partial_read@data& (0+255),b
 17342  0119E4  0E00               	movlw	high __root_is_available@first_byte
 17343  0119E6  0100               	movlb	0	; () banked
 17344  0119E8  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17345  0119EA  EC95  F08A         	call	_flash_partial_read	;wreg free
 17346                           
 17347                           ;fat16.c: 84: if((first_byte==0x00) || (first_byte==0xE5))
 17348  0119EE  0100               	movlb	0	; () banked
 17349  0119F0  518D               	movf	__root_is_available@first_byte& (0+255),w,b
 17350  0119F2  0100               	movlb	0	; () banked
 17351  0119F4  B4D8               	btfsc	status,2,c
 17352  0119F6  D005               	goto	l19277
 17353                           
 17354                           ; BSR set to: 0
 17355  0119F8  0EE5               	movlw	229
 17356  0119FA  0100               	movlb	0	; () banked
 17357  0119FC  198D               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17358  0119FE  A4D8               	btfss	status,2,c
 17359  011A00  D002               	goto	l19283
 17360  011A02                     l19277:
 17361                           
 17362                           ; BSR set to: 0
 17363                           ;fat16.c: 85: {
 17364                           ;fat16.c: 87: return 1;
 17365  011A02  0E01               	movlw	1
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;fat16.c: 88: }
 17369                           
 17370                           ; BSR set to: 0
 17371  011A04  0012               	return	
 17372  011A06                     l19283:
 17373                           
 17374                           ; BSR set to: 0
 17375                           ;fat16.c: 89: else
 17376                           ;fat16.c: 90: {
 17377                           ;fat16.c: 92: return 0;
 17378  011A06  0E00               	movlw	0
 17379                           
 17380                           ; BSR set to: 0
 17381  011A08  0012               	return	
 17382  011A0A                     __end_of__root_is_available:
 17383                           	opt stack 0
 17384                           tblptru	equ	0xFF8
 17385                           tblptrh	equ	0xFF7
 17386                           tblptrl	equ	0xFF6
 17387                           tablat	equ	0xFF5
 17388                           prodh	equ	0xFF4
 17389                           prodl	equ	0xFF3
 17390                           intcon	equ	0xFF2
 17391                           intcon2	equ	0xFF1
 17392                           intcon3	equ	0xFF0
 17393                           postinc0	equ	0xFEE
 17394                           wreg	equ	0xFE8
 17395                           postinc1	equ	0xFE6
 17396                           postdec1	equ	0xFE5
 17397                           plusw1	equ	0xFE3
 17398                           fsr1h	equ	0xFE2
 17399                           fsr1l	equ	0xFE1
 17400                           indf2	equ	0xFDF
 17401                           postinc2	equ	0xFDE
 17402                           postdec2	equ	0xFDD
 17403                           plusw2	equ	0xFDB
 17404                           fsr2h	equ	0xFDA
 17405                           fsr2l	equ	0xFD9
 17406                           status	equ	0xFD8
 17407                           
 17408 ;; *************** function __read_root *****************
 17409 ;; Defined at:
 17410 ;;		line 194 in file "fat16.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;  slot            1    wreg     unsigned char 
 17413 ;;  data            2   39[BANK0 ] PTR struct .
 17414 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 17415 ;; Auto vars:     Size  Location     Type
 17416 ;;  slot            1   46[BANK0 ] unsigned char 
 17417 ;;  offset          2   44[BANK0 ] unsigned int 
 17418 ;;  root_sector     2   42[BANK0 ] unsigned int 
 17419 ;; Return value:  Size  Location     Type
 17420 ;;                  1    wreg      void 
 17421 ;; Registers used:
 17422 ;;		wreg, status,2, status,0, cstack
 17423 ;; Tracked objects:
 17424 ;;		On entry : 0/0
 17425 ;;		On exit  : 0/0
 17426 ;;		Unchanged: 0/0
 17427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17429 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17431 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17432 ;;Total ram usage:        8 bytes
 17433 ;; Hardware stack levels used:    1
 17434 ;; Hardware stack levels required when called:   14
 17435 ;; This function calls:
 17436 ;;		_flash_partial_read
 17437 ;; This function is called by:
 17438 ;;		_fat_append_to_file
 17439 ;;		_fat_rename_file
 17440 ;;		_fat_read_from_file
 17441 ;; This function uses a non-reentrant model
 17442 ;;
 17443                           
 17444                           	psect	text76
 17445  012910                     __ptext76:
 17446                           	opt stack 0
 17447  012910                     __read_root:
 17448                           	opt stack 14
 17449                           
 17450                           ; BSR set to: 0
 17451                           ;incstack = 0
 17452                           ;__read_root@slot stored from wreg
 17453  012910  0100               	movlb	0	; () banked
 17454  012912  6F8E               	movwf	__read_root@slot& (0+255),b
 17455                           
 17456                           ;fat16.c: 196: uint16_t root_sector;
 17457                           ;fat16.c: 197: uint16_t offset;
 17458                           ;fat16.c: 198: root_sector = (slot >> 4) + 18;
 17459  012914  C08E  F089         	movff	__read_root@slot,??__read_root
 17460  012918  0100               	movlb	0	; () banked
 17461  01291A  3B89               	swapf	??__read_root& (0+255),f,b
 17462  01291C  0E0F               	movlw	15
 17463  01291E  1789               	andwf	??__read_root& (0+255),f,b
 17464  012920  0E12               	movlw	18
 17465  012922  0100               	movlb	0	; () banked
 17466  012924  2589               	addwf	??__read_root& (0+255),w,b
 17467  012926  0100               	movlb	0	; () banked
 17468  012928  6F8A               	movwf	__read_root@root_sector& (0+255),b
 17469  01292A  0100               	movlb	0	; () banked
 17470  01292C  6B8B               	clrf	(__read_root@root_sector+1)& (0+255),b
 17471  01292E  0E00               	movlw	0
 17472  012930  238B               	addwfc	(__read_root@root_sector+1)& (0+255),f,b
 17473                           
 17474                           ;fat16.c: 199: offset = (slot & 0b1111);
 17475  012932  C08E  F089         	movff	__read_root@slot,??__read_root
 17476  012936  0E0F               	movlw	15
 17477  012938  0100               	movlb	0	; () banked
 17478  01293A  1789               	andwf	??__read_root& (0+255),f,b
 17479  01293C  0100               	movlb	0	; () banked
 17480  01293E  5189               	movf	??__read_root& (0+255),w,b
 17481  012940  0100               	movlb	0	; () banked
 17482  012942  6F8C               	movwf	__read_root@offset& (0+255),b
 17483  012944  6B8D               	clrf	(__read_root@offset+1)& (0+255),b
 17484                           
 17485                           ;fat16.c: 200: offset <<= 5;
 17486  012946  0100               	movlb	0	; () banked
 17487  012948  0E05               	movlw	5
 17488  01294A                     u19155:
 17489  01294A  90D8               	bcf	status,0,c
 17490  01294C  378C               	rlcf	__read_root@offset& (0+255),f,b
 17491  01294E  378D               	rlcf	(__read_root@offset+1)& (0+255),f,b
 17492  012950  2EE8               	decfsz	wreg,f,c
 17493  012952  D7FB               	goto	u19155
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 17497  012954  C08A  F073         	movff	__read_root@root_sector,flash_partial_read@page
 17498  012958  C08B  F074         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 17499  01295C  C08C  F075         	movff	__read_root@offset,flash_partial_read@start
 17500  012960  C08D  F076         	movff	__read_root@offset+1,flash_partial_read@start+1
 17501  012964  0E00               	movlw	0
 17502  012966  0100               	movlb	0	; () banked
 17503  012968  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17504  01296A  0E20               	movlw	32
 17505  01296C  6F77               	movwf	flash_partial_read@length& (0+255),b
 17506  01296E  C087  F079         	movff	__read_root@data,flash_partial_read@data
 17507  012972  C088  F07A         	movff	__read_root@data+1,flash_partial_read@data+1
 17508  012976  EC95  F08A         	call	_flash_partial_read	;wreg free
 17509  01297A  0012               	return		;funcret
 17510  01297C                     __end_of__read_root:
 17511                           	opt stack 0
 17512                           tblptru	equ	0xFF8
 17513                           tblptrh	equ	0xFF7
 17514                           tblptrl	equ	0xFF6
 17515                           tablat	equ	0xFF5
 17516                           prodh	equ	0xFF4
 17517                           prodl	equ	0xFF3
 17518                           intcon	equ	0xFF2
 17519                           intcon2	equ	0xFF1
 17520                           intcon3	equ	0xFF0
 17521                           postinc0	equ	0xFEE
 17522                           wreg	equ	0xFE8
 17523                           postinc1	equ	0xFE6
 17524                           postdec1	equ	0xFE5
 17525                           plusw1	equ	0xFE3
 17526                           fsr1h	equ	0xFE2
 17527                           fsr1l	equ	0xFE1
 17528                           indf2	equ	0xFDF
 17529                           postinc2	equ	0xFDE
 17530                           postdec2	equ	0xFDD
 17531                           plusw2	equ	0xFDB
 17532                           fsr2h	equ	0xFDA
 17533                           fsr2l	equ	0xFD9
 17534                           status	equ	0xFD8
 17535                           
 17536 ;; *************** function __read_fat *****************
 17537 ;; Defined at:
 17538 ;;		line 171 in file "fat16.c"
 17539 ;; Parameters:    Size  Location     Type
 17540 ;;  cluster         2   39[BANK0 ] unsigned int 
 17541 ;; Auto vars:     Size  Location     Type
 17542 ;;  value           2   45[BANK0 ] unsigned int 
 17543 ;;  offset          2   43[BANK0 ] unsigned int 
 17544 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 17545 ;; Return value:  Size  Location     Type
 17546 ;;                  2   39[BANK0 ] unsigned int 
 17547 ;; Registers used:
 17548 ;;		wreg, status,2, status,0, cstack
 17549 ;; Tracked objects:
 17550 ;;		On entry : 0/0
 17551 ;;		On exit  : 0/0
 17552 ;;		Unchanged: 0/0
 17553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17557 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17558 ;;Total ram usage:        8 bytes
 17559 ;; Hardware stack levels used:    1
 17560 ;; Hardware stack levels required when called:   14
 17561 ;; This function calls:
 17562 ;;		_flash_partial_read
 17563 ;; This function is called by:
 17564 ;;		_fat_append_to_file
 17565 ;;		_fat_delete_file
 17566 ;;		_fat_read_from_file
 17567 ;; This function uses a non-reentrant model
 17568 ;;
 17569                           
 17570                           	psect	text77
 17571  0130CC                     __ptext77:
 17572                           	opt stack 0
 17573  0130CC                     __read_fat:
 17574                           	opt stack 14
 17575                           
 17576                           ;fat16.c: 173: uint16_t fat_sector;
 17577                           ;fat16.c: 174: uint16_t offset;
 17578                           ;fat16.c: 175: uint16_t value;
 17579                           ;fat16.c: 176: fat_sector = cluster>>8;
 17580                           
 17581                           ;incstack = 0
 17582  0130CC  0100               	movlb	0	; () banked
 17583  0130CE  5188               	movf	(__read_fat@cluster+1)& (0+255),w,b
 17584  0130D0  0100               	movlb	0	; () banked
 17585  0130D2  6F89               	movwf	__read_fat@fat_sector& (0+255),b
 17586  0130D4  6B8A               	clrf	(__read_fat@fat_sector+1)& (0+255),b
 17587                           
 17588                           ; BSR set to: 0
 17589                           ;fat16.c: 177: fat_sector += 2;
 17590  0130D6  0E02               	movlw	2
 17591  0130D8  0100               	movlb	0	; () banked
 17592  0130DA  2789               	addwf	__read_fat@fat_sector& (0+255),f,b
 17593  0130DC  0E00               	movlw	0
 17594  0130DE  238A               	addwfc	(__read_fat@fat_sector+1)& (0+255),f,b
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;fat16.c: 178: offset = cluster & 0xFF;
 17598  0130E0  0100               	movlb	0	; () banked
 17599  0130E2  5187               	movf	__read_fat@cluster& (0+255),w,b
 17600  0130E4  0100               	movlb	0	; () banked
 17601  0130E6  6F8B               	movwf	__read_fat@offset& (0+255),b
 17602  0130E8  6B8C               	clrf	(__read_fat@offset+1)& (0+255),b
 17603                           
 17604                           ; BSR set to: 0
 17605                           ;fat16.c: 179: offset <<= 1;
 17606  0130EA  0100               	movlb	0	; () banked
 17607  0130EC  90D8               	bcf	status,0,c
 17608  0130EE  378B               	rlcf	__read_fat@offset& (0+255),f,b
 17609  0130F0  378C               	rlcf	(__read_fat@offset+1)& (0+255),f,b
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 17613  0130F2  C089  F073         	movff	__read_fat@fat_sector,flash_partial_read@page
 17614  0130F6  C08A  F074         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 17615  0130FA  C08B  F075         	movff	__read_fat@offset,flash_partial_read@start
 17616  0130FE  C08C  F076         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17617  013102  0E00               	movlw	0
 17618  013104  0100               	movlb	0	; () banked
 17619  013106  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17620  013108  0E02               	movlw	2
 17621  01310A  6F77               	movwf	flash_partial_read@length& (0+255),b
 17622  01310C  0E8D               	movlw	low __read_fat@value
 17623  01310E  0100               	movlb	0	; () banked
 17624  013110  6F79               	movwf	flash_partial_read@data& (0+255),b
 17625  013112  0E00               	movlw	high __read_fat@value
 17626  013114  0100               	movlb	0	; () banked
 17627  013116  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17628  013118  EC95  F08A         	call	_flash_partial_read	;wreg free
 17629                           
 17630                           ;fat16.c: 181: return value;
 17631  01311C  C08D  F087         	movff	__read_fat@value,?__read_fat
 17632  013120  C08E  F088         	movff	__read_fat@value+1,?__read_fat+1
 17633  013124  0012               	return	
 17634  013126                     __end_of__read_fat:
 17635                           	opt stack 0
 17636                           tblptru	equ	0xFF8
 17637                           tblptrh	equ	0xFF7
 17638                           tblptrl	equ	0xFF6
 17639                           tablat	equ	0xFF5
 17640                           prodh	equ	0xFF4
 17641                           prodl	equ	0xFF3
 17642                           intcon	equ	0xFF2
 17643                           intcon2	equ	0xFF1
 17644                           intcon3	equ	0xFF0
 17645                           postinc0	equ	0xFEE
 17646                           wreg	equ	0xFE8
 17647                           postinc1	equ	0xFE6
 17648                           postdec1	equ	0xFE5
 17649                           plusw1	equ	0xFE3
 17650                           fsr1h	equ	0xFE2
 17651                           fsr1l	equ	0xFE1
 17652                           indf2	equ	0xFDF
 17653                           postinc2	equ	0xFDE
 17654                           postdec2	equ	0xFDD
 17655                           plusw2	equ	0xFDB
 17656                           fsr2h	equ	0xFDA
 17657                           fsr2l	equ	0xFD9
 17658                           status	equ	0xFD8
 17659                           
 17660 ;; *************** function __get_empty_cluster *****************
 17661 ;; Defined at:
 17662 ;;		line 109 in file "fat16.c"
 17663 ;; Parameters:    Size  Location     Type
 17664 ;;  first_cluste    2   39[BANK0 ] unsigned int 
 17665 ;; Auto vars:     Size  Location     Type
 17666 ;;  cluster         2   47[BANK0 ] unsigned int 
 17667 ;;  value           2   45[BANK0 ] unsigned int 
 17668 ;;  offset          2   43[BANK0 ] unsigned int 
 17669 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 17670 ;; Return value:  Size  Location     Type
 17671 ;;                  2   39[BANK0 ] unsigned int 
 17672 ;; Registers used:
 17673 ;;		wreg, status,2, status,0, cstack
 17674 ;; Tracked objects:
 17675 ;;		On entry : 0/0
 17676 ;;		On exit  : 0/0
 17677 ;;		Unchanged: 0/0
 17678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17680 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17682 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17683 ;;Total ram usage:       10 bytes
 17684 ;; Hardware stack levels used:    1
 17685 ;; Hardware stack levels required when called:   14
 17686 ;; This function calls:
 17687 ;;		_flash_partial_read
 17688 ;; This function is called by:
 17689 ;;		_fat_create_file
 17690 ;;		_fat_append_to_file
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694                           	psect	text78
 17695  011B34                     __ptext78:
 17696                           	opt stack 0
 17697  011B34                     __get_empty_cluster:
 17698                           	opt stack 14
 17699                           
 17700                           ;fat16.c: 111: uint16_t cluster;
 17701                           ;fat16.c: 112: uint16_t fat_sector;
 17702                           ;fat16.c: 113: uint16_t offset;
 17703                           ;fat16.c: 114: uint16_t value;
 17704                           ;fat16.c: 117: for(cluster=first_cluster; cluster<(8170+2); ++cluster)
 17705                           
 17706                           ;incstack = 0
 17707  011B34  C087  F08F         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 17708  011B38  C088  F090         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 17709  011B3C                     l19981:
 17710  011B3C  0EEC               	movlw	236
 17711  011B3E  0100               	movlb	0	; () banked
 17712  011B40  5D8F               	subwf	__get_empty_cluster@cluster& (0+255),w,b
 17713  011B42  0E1F               	movlw	31
 17714  011B44  0100               	movlb	0	; () banked
 17715  011B46  5990               	subwfb	(__get_empty_cluster@cluster+1)& (0+255),w,b
 17716  011B48  B0D8               	btfsc	status,0,c
 17717  011B4A  D037               	goto	l20003
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;fat16.c: 118: {
 17721                           ;fat16.c: 119: fat_sector = cluster>>8;
 17722                           
 17723                           ; BSR set to: 0
 17724                           
 17725                           ; BSR set to: 0
 17726  011B4C  0100               	movlb	0	; () banked
 17727  011B4E  5190               	movf	(__get_empty_cluster@cluster+1)& (0+255),w,b
 17728  011B50  0100               	movlb	0	; () banked
 17729  011B52  6F89               	movwf	__get_empty_cluster@fat_sector& (0+255),b
 17730  011B54  6B8A               	clrf	(__get_empty_cluster@fat_sector+1)& (0+255),b
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;fat16.c: 120: fat_sector += 2;
 17734  011B56  0E02               	movlw	2
 17735  011B58  0100               	movlb	0	; () banked
 17736  011B5A  2789               	addwf	__get_empty_cluster@fat_sector& (0+255),f,b
 17737  011B5C  0E00               	movlw	0
 17738  011B5E  238A               	addwfc	(__get_empty_cluster@fat_sector+1)& (0+255),f,b
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;fat16.c: 121: offset = cluster & 0xFF;
 17742  011B60  0100               	movlb	0	; () banked
 17743  011B62  518F               	movf	__get_empty_cluster@cluster& (0+255),w,b
 17744  011B64  0100               	movlb	0	; () banked
 17745  011B66  6F8B               	movwf	__get_empty_cluster@offset& (0+255),b
 17746  011B68  6B8C               	clrf	(__get_empty_cluster@offset+1)& (0+255),b
 17747                           
 17748                           ; BSR set to: 0
 17749                           ;fat16.c: 122: offset <<= 1;
 17750  011B6A  0100               	movlb	0	; () banked
 17751  011B6C  90D8               	bcf	status,0,c
 17752  011B6E  378B               	rlcf	__get_empty_cluster@offset& (0+255),f,b
 17753  011B70  378C               	rlcf	(__get_empty_cluster@offset+1)& (0+255),f,b
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;fat16.c: 123: flash_partial_read(fat_sector, offset, 2, &value);
 17757  011B72  C089  F073         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 17758  011B76  C08A  F074         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 17759  011B7A  C08B  F075         	movff	__get_empty_cluster@offset,flash_partial_read@start
 17760  011B7E  C08C  F076         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 17761  011B82  0E00               	movlw	0
 17762  011B84  0100               	movlb	0	; () banked
 17763  011B86  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17764  011B88  0E02               	movlw	2
 17765  011B8A  6F77               	movwf	flash_partial_read@length& (0+255),b
 17766  011B8C  0E8D               	movlw	low __get_empty_cluster@value
 17767  011B8E  0100               	movlb	0	; () banked
 17768  011B90  6F79               	movwf	flash_partial_read@data& (0+255),b
 17769  011B92  0E00               	movlw	high __get_empty_cluster@value
 17770  011B94  0100               	movlb	0	; () banked
 17771  011B96  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17772  011B98  EC95  F08A         	call	_flash_partial_read	;wreg free
 17773                           
 17774                           ;fat16.c: 124: if(value==0x0000)
 17775  011B9C  0100               	movlb	0	; () banked
 17776  011B9E  518D               	movf	__get_empty_cluster@value& (0+255),w,b
 17777  011BA0  0100               	movlb	0	; () banked
 17778  011BA2  118E               	iorwf	(__get_empty_cluster@value+1)& (0+255),w,b
 17779  011BA4  A4D8               	btfss	status,2,c
 17780  011BA6  D005               	goto	l19999
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;fat16.c: 125: {
 17784                           ;fat16.c: 126: return cluster;
 17785  011BA8  C08F  F087         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 17786  011BAC  C090  F088         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 17787  011BB0  0012               	return	
 17788  011BB2                     l19999:
 17789                           
 17790                           ; BSR set to: 0
 17791  011BB2  0100               	movlb	0	; () banked
 17792  011BB4  4B8F               	infsnz	__get_empty_cluster@cluster& (0+255),f,b
 17793  011BB6  2B90               	incf	(__get_empty_cluster@cluster+1)& (0+255),f,b
 17794  011BB8  D7C1               	goto	l19981
 17795  011BBA                     l20003:
 17796                           
 17797                           ; BSR set to: 0
 17798                           ;fat16.c: 127: }
 17799                           ;fat16.c: 128: }
 17800                           ;fat16.c: 129: return 0x0000;
 17801  011BBA  0E00               	movlw	0
 17802  011BBC  0100               	movlb	0	; () banked
 17803  011BBE  6F88               	movwf	(?__get_empty_cluster+1)& (0+255),b
 17804  011BC0  0E00               	movlw	0
 17805  011BC2  6F87               	movwf	?__get_empty_cluster& (0+255),b
 17806  011BC4  0012               	return	
 17807  011BC6                     __end_of__get_empty_cluster:
 17808                           	opt stack 0
 17809                           tblptru	equ	0xFF8
 17810                           tblptrh	equ	0xFF7
 17811                           tblptrl	equ	0xFF6
 17812                           tablat	equ	0xFF5
 17813                           prodh	equ	0xFF4
 17814                           prodl	equ	0xFF3
 17815                           intcon	equ	0xFF2
 17816                           intcon2	equ	0xFF1
 17817                           intcon3	equ	0xFF0
 17818                           postinc0	equ	0xFEE
 17819                           wreg	equ	0xFE8
 17820                           postinc1	equ	0xFE6
 17821                           postdec1	equ	0xFE5
 17822                           plusw1	equ	0xFE3
 17823                           fsr1h	equ	0xFE2
 17824                           fsr1l	equ	0xFE1
 17825                           indf2	equ	0xFDF
 17826                           postinc2	equ	0xFDE
 17827                           postdec2	equ	0xFDD
 17828                           plusw2	equ	0xFDB
 17829                           fsr2h	equ	0xFDA
 17830                           fsr2l	equ	0xFD9
 17831                           status	equ	0xFD8
 17832                           
 17833 ;; *************** function _log_get_number_of_samples *****************
 17834 ;; Defined at:
 17835 ;;		line 169 in file "log.c"
 17836 ;; Parameters:    Size  Location     Type
 17837 ;;		None
 17838 ;; Auto vars:     Size  Location     Type
 17839 ;;		None
 17840 ;; Return value:  Size  Location     Type
 17841 ;;                  2    0[BANK0 ] unsigned int 
 17842 ;; Registers used:
 17843 ;;		None
 17844 ;; Tracked objects:
 17845 ;;		On entry : 0/0
 17846 ;;		On exit  : 0/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17852 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17853 ;;Total ram usage:        2 bytes
 17854 ;; Hardware stack levels used:    1
 17855 ;; Hardware stack levels required when called:   10
 17856 ;; This function calls:
 17857 ;;		Nothing
 17858 ;; This function is called by:
 17859 ;;		_main
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           
 17863                           	psect	text79
 17864  014296                     __ptext79:
 17865                           	opt stack 0
 17866  014296                     _log_get_number_of_samples:
 17867                           	opt stack 20
 17868                           
 17869                           ;log.c: 171: return averageCount;
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;incstack = 0
 17873  014296  C016  F060         	movff	_averageCount,?_log_get_number_of_samples
 17874  01429A  C017  F061         	movff	_averageCount+1,?_log_get_number_of_samples+1
 17875  01429E  0012               	return		;funcret
 17876  0142A0                     __end_of_log_get_number_of_samples:
 17877                           	opt stack 0
 17878                           tblptru	equ	0xFF8
 17879                           tblptrh	equ	0xFF7
 17880                           tblptrl	equ	0xFF6
 17881                           tablat	equ	0xFF5
 17882                           prodh	equ	0xFF4
 17883                           prodl	equ	0xFF3
 17884                           intcon	equ	0xFF2
 17885                           intcon2	equ	0xFF1
 17886                           intcon3	equ	0xFF0
 17887                           postinc0	equ	0xFEE
 17888                           wreg	equ	0xFE8
 17889                           postinc1	equ	0xFE6
 17890                           postdec1	equ	0xFE5
 17891                           plusw1	equ	0xFE3
 17892                           fsr1h	equ	0xFE2
 17893                           fsr1l	equ	0xFE1
 17894                           indf2	equ	0xFDF
 17895                           postinc2	equ	0xFDE
 17896                           postdec2	equ	0xFDD
 17897                           plusw2	equ	0xFDB
 17898                           fsr2h	equ	0xFDA
 17899                           fsr2l	equ	0xFD9
 17900                           status	equ	0xFD8
 17901                           
 17902 ;; *************** function _log_collect_data *****************
 17903 ;; Defined at:
 17904 ;;		line 114 in file "log.c"
 17905 ;; Parameters:    Size  Location     Type
 17906 ;;		None
 17907 ;; Auto vars:     Size  Location     Type
 17908 ;;  temp            2   24[BANK0 ] unsigned int 
 17909 ;; Return value:  Size  Location     Type
 17910 ;;                  1    wreg      void 
 17911 ;; Registers used:
 17912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17913 ;; Tracked objects:
 17914 ;;		On entry : 0/0
 17915 ;;		On exit  : 0/0
 17916 ;;		Unchanged: 0/0
 17917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17920 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17921 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17922 ;;Total ram usage:        6 bytes
 17923 ;; Hardware stack levels used:    1
 17924 ;; Hardware stack levels required when called:   12
 17925 ;; This function calls:
 17926 ;;		__get_input_power
 17927 ;;		__get_output_power
 17928 ;;		_buck_get_mode
 17929 ;;		_rtcc_get_seconds_decimal
 17930 ;;		_system_output_is_on
 17931 ;; This function is called by:
 17932 ;;		_main
 17933 ;; This function uses a non-reentrant model
 17934 ;;
 17935                           
 17936                           	psect	text80
 17937  00C1E0                     __ptext80:
 17938                           	opt stack 0
 17939  00C1E0                     _log_collect_data:
 17940                           	opt stack 18
 17941                           
 17942                           ;log.c: 116: uint16_t temp;
 17943                           ;log.c: 119: temp = rtcc_get_seconds_decimal();
 17944                           
 17945                           ;incstack = 0
 17946  00C1E0  EC10  F0A1         	call	_rtcc_get_seconds_decimal	;wreg free
 17947  00C1E4  0100               	movlb	0	; () banked
 17948  00C1E6  6F74               	movwf	??_log_collect_data& (0+255),b
 17949  00C1E8  0100               	movlb	0	; () banked
 17950  00C1EA  5174               	movf	??_log_collect_data& (0+255),w,b
 17951  00C1EC  0100               	movlb	0	; () banked
 17952  00C1EE  6F78               	movwf	log_collect_data@temp& (0+255),b
 17953  00C1F0  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;log.c: 120: if(lastSecond==temp)
 17957  00C1F2  0101               	movlb	1	; () banked
 17958  00C1F4  51EF               	movf	_lastSecond& (0+255),w,b
 17959  00C1F6  0100               	movlb	0	; () banked
 17960  00C1F8  6F74               	movwf	??_log_collect_data& (0+255),b
 17961  00C1FA  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 17962  00C1FC  0100               	movlb	0	; () banked
 17963  00C1FE  5178               	movf	log_collect_data@temp& (0+255),w,b
 17964  00C200  0100               	movlb	0	; () banked
 17965  00C202  1974               	xorwf	??_log_collect_data& (0+255),w,b
 17966  00C204  E106               	bnz	l3297
 17967  00C206  0100               	movlb	0	; () banked
 17968  00C208  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17969  00C20A  0100               	movlb	0	; () banked
 17970  00C20C  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 17971  00C20E  B4D8               	btfsc	status,2,c
 17972  00C210  0012               	return	
 17973  00C212                     l3297:
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;log.c: 123: }
 17977                           ;log.c: 126: lastSecond = (uint8_t) temp;
 17978  00C212  C078  F1EF         	movff	log_collect_data@temp,_lastSecond
 17979                           
 17980                           ; BSR set to: 0
 17981                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 17982  00C216  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 17983  00C21A  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 17984  00C21E  0E00               	movlw	0
 17985  00C220  0100               	movlb	0	; () banked
 17986  00C222  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17987  00C224  0EFF               	movlw	255
 17988  00C226  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17989  00C228  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17990  00C22A  0100               	movlb	0	; () banked
 17991  00C22C  5174               	movf	??_log_collect_data& (0+255),w,b
 17992  00C22E  0102               	movlb	2	; () banked
 17993  00C230  279A               	addwf	_inputVoltageSum& (0+255),f,b
 17994  00C232  0100               	movlb	0	; () banked
 17995  00C234  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17996  00C236  0102               	movlb	2	; () banked
 17997  00C238  239B               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 17998  00C23A  0100               	movlb	0	; () banked
 17999  00C23C  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18000  00C23E  0102               	movlb	2	; () banked
 18001  00C240  239C               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 18002  00C242  0100               	movlb	0	; () banked
 18003  00C244  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18004  00C246  0102               	movlb	2	; () banked
 18005  00C248  239D               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 18006                           
 18007                           ;log.c: 130: inputCurrentSum += os.input_current;
 18008  00C24A  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 18009  00C24E  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 18010  00C252  0E00               	movlw	0
 18011  00C254  0100               	movlb	0	; () banked
 18012  00C256  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18013  00C258  0EFF               	movlw	255
 18014  00C25A  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18015  00C25C  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18016  00C25E  0100               	movlb	0	; () banked
 18017  00C260  5174               	movf	??_log_collect_data& (0+255),w,b
 18018  00C262  0102               	movlb	2	; () banked
 18019  00C264  2796               	addwf	_inputCurrentSum& (0+255),f,b
 18020  00C266  0100               	movlb	0	; () banked
 18021  00C268  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18022  00C26A  0102               	movlb	2	; () banked
 18023  00C26C  2397               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 18024  00C26E  0100               	movlb	0	; () banked
 18025  00C270  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18026  00C272  0102               	movlb	2	; () banked
 18027  00C274  2398               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 18028  00C276  0100               	movlb	0	; () banked
 18029  00C278  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18030  00C27A  0102               	movlb	2	; () banked
 18031  00C27C  2399               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 18032                           
 18033                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 18034  00C27E  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 18035  00C282  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 18036  00C286  0E00               	movlw	0
 18037  00C288  0100               	movlb	0	; () banked
 18038  00C28A  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18039  00C28C  0EFF               	movlw	255
 18040  00C28E  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18041  00C290  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18042  00C292  0100               	movlb	0	; () banked
 18043  00C294  5174               	movf	??_log_collect_data& (0+255),w,b
 18044  00C296  0102               	movlb	2	; () banked
 18045  00C298  2792               	addwf	_outputVoltageSum& (0+255),f,b
 18046  00C29A  0100               	movlb	0	; () banked
 18047  00C29C  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18048  00C29E  0102               	movlb	2	; () banked
 18049  00C2A0  2393               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 18050  00C2A2  0100               	movlb	0	; () banked
 18051  00C2A4  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18052  00C2A6  0102               	movlb	2	; () banked
 18053  00C2A8  2394               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 18054  00C2AA  0100               	movlb	0	; () banked
 18055  00C2AC  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18056  00C2AE  0102               	movlb	2	; () banked
 18057  00C2B0  2395               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 18058                           
 18059                           ;log.c: 132: outputCurrentSum += os.output_current;
 18060  00C2B2  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 18061  00C2B6  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 18062  00C2BA  0E00               	movlw	0
 18063  00C2BC  0100               	movlb	0	; () banked
 18064  00C2BE  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18065  00C2C0  0EFF               	movlw	255
 18066  00C2C2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18067  00C2C4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18068  00C2C6  0100               	movlb	0	; () banked
 18069  00C2C8  5174               	movf	??_log_collect_data& (0+255),w,b
 18070  00C2CA  0102               	movlb	2	; () banked
 18071  00C2CC  278E               	addwf	_outputCurrentSum& (0+255),f,b
 18072  00C2CE  0100               	movlb	0	; () banked
 18073  00C2D0  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18074  00C2D2  0102               	movlb	2	; () banked
 18075  00C2D4  238F               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 18076  00C2D6  0100               	movlb	0	; () banked
 18077  00C2D8  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18078  00C2DA  0102               	movlb	2	; () banked
 18079  00C2DC  2390               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 18080  00C2DE  0100               	movlb	0	; () banked
 18081  00C2E0  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18082  00C2E2  0102               	movlb	2	; () banked
 18083  00C2E4  2391               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 18084                           
 18085                           ; BSR set to: 2
 18086                           ;log.c: 133: temp = _get_input_power();
 18087  00C2E6  ECD2  F090         	call	__get_input_power	;wreg free
 18088  00C2EA  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 18089  00C2EE  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 18090                           
 18091                           ;log.c: 134: inputPowerSum += temp>>1;
 18092  00C2F2  90D8               	bcf	status,0,c
 18093  00C2F4  0100               	movlb	0	; () banked
 18094  00C2F6  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 18095  00C2F8  0100               	movlb	0	; () banked
 18096  00C2FA  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 18097  00C2FC  0100               	movlb	0	; () banked
 18098  00C2FE  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 18099  00C300  0100               	movlb	0	; () banked
 18100  00C302  6F74               	movwf	??_log_collect_data& (0+255),b
 18101  00C304  0100               	movlb	0	; () banked
 18102  00C306  5174               	movf	??_log_collect_data& (0+255),w,b
 18103  00C308  0102               	movlb	2	; () banked
 18104  00C30A  278A               	addwf	_inputPowerSum& (0+255),f,b
 18105  00C30C  0100               	movlb	0	; () banked
 18106  00C30E  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18107  00C310  0102               	movlb	2	; () banked
 18108  00C312  238B               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 18109  00C314  0E00               	movlw	0
 18110  00C316  0102               	movlb	2	; () banked
 18111  00C318  238C               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 18112  00C31A  0E00               	movlw	0
 18113  00C31C  0102               	movlb	2	; () banked
 18114  00C31E  238D               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 18115                           
 18116                           ; BSR set to: 2
 18117                           ;log.c: 135: inputCapacitySum += temp;
 18118  00C320  0100               	movlb	0	; () banked
 18119  00C322  5178               	movf	log_collect_data@temp& (0+255),w,b
 18120  00C324  0102               	movlb	2	; () banked
 18121  00C326  2782               	addwf	_inputCapacitySum& (0+255),f,b
 18122  00C328  0100               	movlb	0	; () banked
 18123  00C32A  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 18124  00C32C  0102               	movlb	2	; () banked
 18125  00C32E  2383               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 18126  00C330  0E00               	movlw	0
 18127  00C332  0102               	movlb	2	; () banked
 18128  00C334  2384               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 18129  00C336  0E00               	movlw	0
 18130  00C338  0102               	movlb	2	; () banked
 18131  00C33A  2385               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 18132                           
 18133                           ; BSR set to: 2
 18134                           ;log.c: 136: temp = _get_output_power();
 18135  00C33C  EC90  F090         	call	__get_output_power	;wreg free
 18136  00C340  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 18137  00C344  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 18138                           
 18139                           ;log.c: 137: outputPowerSum += temp>>1;
 18140  00C348  90D8               	bcf	status,0,c
 18141  00C34A  0100               	movlb	0	; () banked
 18142  00C34C  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 18143  00C34E  0100               	movlb	0	; () banked
 18144  00C350  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 18145  00C352  0100               	movlb	0	; () banked
 18146  00C354  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 18147  00C356  0100               	movlb	0	; () banked
 18148  00C358  6F74               	movwf	??_log_collect_data& (0+255),b
 18149  00C35A  0100               	movlb	0	; () banked
 18150  00C35C  5174               	movf	??_log_collect_data& (0+255),w,b
 18151  00C35E  0102               	movlb	2	; () banked
 18152  00C360  2786               	addwf	_outputPowerSum& (0+255),f,b
 18153  00C362  0100               	movlb	0	; () banked
 18154  00C364  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18155  00C366  0102               	movlb	2	; () banked
 18156  00C368  2387               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 18157  00C36A  0E00               	movlw	0
 18158  00C36C  0102               	movlb	2	; () banked
 18159  00C36E  2388               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 18160  00C370  0E00               	movlw	0
 18161  00C372  0102               	movlb	2	; () banked
 18162  00C374  2389               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 18163                           
 18164                           ; BSR set to: 2
 18165                           ;log.c: 138: outputCapacitySum += temp;
 18166  00C376  0100               	movlb	0	; () banked
 18167  00C378  5178               	movf	log_collect_data@temp& (0+255),w,b
 18168  00C37A  0102               	movlb	2	; () banked
 18169  00C37C  277E               	addwf	_outputCapacitySum& (0+255),f,b
 18170  00C37E  0100               	movlb	0	; () banked
 18171  00C380  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 18172  00C382  0102               	movlb	2	; () banked
 18173  00C384  237F               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 18174  00C386  0E00               	movlw	0
 18175  00C388  0102               	movlb	2	; () banked
 18176  00C38A  2380               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 18177  00C38C  0E00               	movlw	0
 18178  00C38E  0102               	movlb	2	; () banked
 18179  00C390  2381               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 18180                           
 18181                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 18182  00C392  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 18183  00C396  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 18184  00C39A  0E00               	movlw	0
 18185  00C39C  0100               	movlb	0	; () banked
 18186  00C39E  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18187  00C3A0  0EFF               	movlw	255
 18188  00C3A2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18189  00C3A4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18190  00C3A6  0100               	movlb	0	; () banked
 18191  00C3A8  5174               	movf	??_log_collect_data& (0+255),w,b
 18192  00C3AA  0102               	movlb	2	; () banked
 18193  00C3AC  277A               	addwf	_temperatureOnboardSum& (0+255),f,b
 18194  00C3AE  0100               	movlb	0	; () banked
 18195  00C3B0  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18196  00C3B2  0102               	movlb	2	; () banked
 18197  00C3B4  237B               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 18198  00C3B6  0100               	movlb	0	; () banked
 18199  00C3B8  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18200  00C3BA  0102               	movlb	2	; () banked
 18201  00C3BC  237C               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 18202  00C3BE  0100               	movlb	0	; () banked
 18203  00C3C0  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18204  00C3C2  0102               	movlb	2	; () banked
 18205  00C3C4  237D               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 18206                           
 18207                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 18208  00C3C6  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 18209  00C3CA  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 18210  00C3CE  0E00               	movlw	0
 18211  00C3D0  0100               	movlb	0	; () banked
 18212  00C3D2  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18213  00C3D4  0EFF               	movlw	255
 18214  00C3D6  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18215  00C3D8  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18216  00C3DA  0100               	movlb	0	; () banked
 18217  00C3DC  5174               	movf	??_log_collect_data& (0+255),w,b
 18218  00C3DE  0102               	movlb	2	; () banked
 18219  00C3E0  2776               	addwf	_temperatureExternal1Sum& (0+255),f,b
 18220  00C3E2  0100               	movlb	0	; () banked
 18221  00C3E4  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18222  00C3E6  0102               	movlb	2	; () banked
 18223  00C3E8  2377               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 18224  00C3EA  0100               	movlb	0	; () banked
 18225  00C3EC  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18226  00C3EE  0102               	movlb	2	; () banked
 18227  00C3F0  2378               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 18228  00C3F2  0100               	movlb	0	; () banked
 18229  00C3F4  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18230  00C3F6  0102               	movlb	2	; () banked
 18231  00C3F8  2379               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 18232                           
 18233                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 18234  00C3FA  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 18235  00C3FE  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 18236  00C402  0E00               	movlw	0
 18237  00C404  0100               	movlb	0	; () banked
 18238  00C406  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 18239  00C408  0EFF               	movlw	255
 18240  00C40A  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 18241  00C40C  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 18242  00C40E  0100               	movlb	0	; () banked
 18243  00C410  5174               	movf	??_log_collect_data& (0+255),w,b
 18244  00C412  0102               	movlb	2	; () banked
 18245  00C414  2772               	addwf	_temperatureExternal2Sum& (0+255),f,b
 18246  00C416  0100               	movlb	0	; () banked
 18247  00C418  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 18248  00C41A  0102               	movlb	2	; () banked
 18249  00C41C  2373               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 18250  00C41E  0100               	movlb	0	; () banked
 18251  00C420  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 18252  00C422  0102               	movlb	2	; () banked
 18253  00C424  2374               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 18254  00C426  0100               	movlb	0	; () banked
 18255  00C428  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 18256  00C42A  0102               	movlb	2	; () banked
 18257  00C42C  2375               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 18258                           
 18259                           ; BSR set to: 2
 18260                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 18261  00C42E  EC7F  F0A1         	call	_buck_get_mode	;wreg free
 18262  00C432  0100               	movlb	0	; () banked
 18263  00C434  6F74               	movwf	??_log_collect_data& (0+255),b
 18264  00C436  0E7F               	movlw	127
 18265  00C438  0100               	movlb	0	; () banked
 18266  00C43A  1774               	andwf	??_log_collect_data& (0+255),f,b
 18267  00C43C  B4D8               	btfsc	status,2,c
 18268  00C43E  D003               	goto	l22669
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;log.c: 143: {
 18272                           ;log.c: 144: ++chargerOnTime;
 18273  00C440  0102               	movlb	2	; () banked
 18274  00C442  4BB0               	infsnz	_chargerOnTime& (0+255),f,b
 18275  00C444  2BB1               	incf	(_chargerOnTime+1)& (0+255),f,b
 18276  00C446                     l22669:
 18277                           
 18278                           ;log.c: 145: }
 18279                           ;log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 18280  00C446  0102               	movlb	2	; () banked
 18281  00C448  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 18282  00C44A  A4D8               	btfss	status,2,c
 18283  00C44C  D003               	goto	l22673
 18284                           
 18285                           ; BSR set to: 2
 18286                           ;log.c: 147: {
 18287                           ;log.c: 148: ++lowPowerTime;
 18288  00C44E  0102               	movlb	2	; () banked
 18289  00C450  4BAE               	infsnz	_lowPowerTime& (0+255),f,b
 18290  00C452  2BAF               	incf	(_lowPowerTime+1)& (0+255),f,b
 18291  00C454                     l22673:
 18292                           
 18293                           ; BSR set to: 2
 18294                           ;log.c: 149: }
 18295                           ;log.c: 150: if(system_output_is_on(OUTPUT_1))
 18296  00C454  0E01               	movlw	1
 18297  00C456  ECFF  F09F         	call	_system_output_is_on
 18298  00C45A  0900               	iorlw	0
 18299  00C45C  B4D8               	btfsc	status,2,c
 18300  00C45E  D002               	goto	l22677
 18301                           
 18302                           ;log.c: 151: status |= 0b10000000;
 18303  00C460  0101               	movlb	1	; () banked
 18304  00C462  8FF0               	bsf	_status& (0+255),7,b
 18305  00C464                     l22677:
 18306                           
 18307                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 18308  00C464  0E02               	movlw	2
 18309  00C466  ECFF  F09F         	call	_system_output_is_on
 18310  00C46A  0900               	iorlw	0
 18311  00C46C  B4D8               	btfsc	status,2,c
 18312  00C46E  D002               	goto	l22681
 18313                           
 18314                           ;log.c: 153: status |= 0b01000000;
 18315  00C470  0101               	movlb	1	; () banked
 18316  00C472  8DF0               	bsf	_status& (0+255),6,b
 18317  00C474                     l22681:
 18318                           
 18319                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 18320  00C474  0E04               	movlw	4
 18321  00C476  ECFF  F09F         	call	_system_output_is_on
 18322  00C47A  0900               	iorlw	0
 18323  00C47C  B4D8               	btfsc	status,2,c
 18324  00C47E  D002               	goto	l22685
 18325                           
 18326                           ;log.c: 155: status |= 0b00100000;
 18327  00C480  0101               	movlb	1	; () banked
 18328  00C482  8BF0               	bsf	_status& (0+255),5,b
 18329  00C484                     l22685:
 18330                           
 18331                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 18332  00C484  0E08               	movlw	8
 18333  00C486  ECFF  F09F         	call	_system_output_is_on
 18334  00C48A  0900               	iorlw	0
 18335  00C48C  B4D8               	btfsc	status,2,c
 18336  00C48E  D002               	goto	l22689
 18337                           
 18338                           ;log.c: 157: status |= 0b00010000;
 18339  00C490  0101               	movlb	1	; () banked
 18340  00C492  89F0               	bsf	_status& (0+255),4,b
 18341  00C494                     l22689:
 18342                           
 18343                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 18344  00C494  0E10               	movlw	16
 18345  00C496  ECFF  F09F         	call	_system_output_is_on
 18346  00C49A  0900               	iorlw	0
 18347  00C49C  B4D8               	btfsc	status,2,c
 18348  00C49E  D002               	goto	l22693
 18349                           
 18350                           ;log.c: 159: status |= 0b00001000;
 18351  00C4A0  0101               	movlb	1	; () banked
 18352  00C4A2  87F0               	bsf	_status& (0+255),3,b
 18353  00C4A4                     l22693:
 18354                           
 18355                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 18356  00C4A4  0E20               	movlw	32
 18357  00C4A6  ECFF  F09F         	call	_system_output_is_on
 18358  00C4AA  0900               	iorlw	0
 18359  00C4AC  B4D8               	btfsc	status,2,c
 18360  00C4AE  D002               	goto	l3306
 18361                           
 18362                           ;log.c: 161: status |= 0b00000100;
 18363  00C4B0  0101               	movlb	1	; () banked
 18364  00C4B2  85F0               	bsf	_status& (0+255),2,b
 18365  00C4B4                     l3306:
 18366                           
 18367                           ;log.c: 163: status |= 0b00000010;
 18368  00C4B4  0101               	movlb	1	; () banked
 18369  00C4B6  83F0               	bsf	_status& (0+255),1,b
 18370                           
 18371                           ;log.c: 164: ++averageCount;
 18372  00C4B8  4A16               	infsnz	_averageCount,f,c
 18373  00C4BA  2A17               	incf	_averageCount+1,f,c
 18374  00C4BC  0012               	return		;funcret
 18375  00C4BE                     __end_of_log_collect_data:
 18376                           	opt stack 0
 18377                           tblptru	equ	0xFF8
 18378                           tblptrh	equ	0xFF7
 18379                           tblptrl	equ	0xFF6
 18380                           tablat	equ	0xFF5
 18381                           prodh	equ	0xFF4
 18382                           prodl	equ	0xFF3
 18383                           intcon	equ	0xFF2
 18384                           intcon2	equ	0xFF1
 18385                           intcon3	equ	0xFF0
 18386                           postinc0	equ	0xFEE
 18387                           wreg	equ	0xFE8
 18388                           postinc1	equ	0xFE6
 18389                           postdec1	equ	0xFE5
 18390                           plusw1	equ	0xFE3
 18391                           fsr1h	equ	0xFE2
 18392                           fsr1l	equ	0xFE1
 18393                           indf2	equ	0xFDF
 18394                           postinc2	equ	0xFDE
 18395                           postdec2	equ	0xFDD
 18396                           plusw2	equ	0xFDB
 18397                           fsr2h	equ	0xFDA
 18398                           fsr2l	equ	0xFD9
 18399                           status	equ	0xFD8
 18400                           
 18401 ;; *************** function _system_output_is_on *****************
 18402 ;; Defined at:
 18403 ;;		line 491 in file "os.c"
 18404 ;; Parameters:    Size  Location     Type
 18405 ;;  output          1    wreg     enum E8129
 18406 ;; Auto vars:     Size  Location     Type
 18407 ;;  output          1    0[BANK0 ] enum E8129
 18408 ;; Return value:  Size  Location     Type
 18409 ;;                  1    wreg      unsigned char 
 18410 ;; Registers used:
 18411 ;;		wreg, status,2, status,0
 18412 ;; Tracked objects:
 18413 ;;		On entry : 0/0
 18414 ;;		On exit  : 0/0
 18415 ;;		Unchanged: 0/0
 18416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18420 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18421 ;;Total ram usage:        1 bytes
 18422 ;; Hardware stack levels used:    1
 18423 ;; Hardware stack levels required when called:   10
 18424 ;; This function calls:
 18425 ;;		Nothing
 18426 ;; This function is called by:
 18427 ;;		_system_output_toggle
 18428 ;;		_log_collect_data
 18429 ;; This function uses a non-reentrant model
 18430 ;;
 18431                           
 18432                           	psect	text81
 18433  013FFE                     __ptext81:
 18434                           	opt stack 0
 18435  013FFE                     _system_output_is_on:
 18436                           	opt stack 17
 18437                           
 18438                           ;incstack = 0
 18439                           ;system_output_is_on@output stored from wreg
 18440  013FFE  0100               	movlb	0	; () banked
 18441  014000  6F60               	movwf	system_output_is_on@output& (0+255),b
 18442                           
 18443                           ;os.c: 493: if(os.outputs&output)
 18444  014002  0102               	movlb	2	; () banked
 18445  014004  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 18446  014006  0100               	movlb	0	; () banked
 18447  014008  1560               	andwf	system_output_is_on@output& (0+255),w,b
 18448  01400A  0900               	iorlw	0
 18449  01400C  B4D8               	btfsc	status,2,c
 18450  01400E  D002               	goto	l19087
 18451                           
 18452                           ; BSR set to: 0
 18453                           ;os.c: 494: return 1;
 18454  014010  0E01               	movlw	1
 18455                           
 18456                           ; BSR set to: 0
 18457                           
 18458                           ; BSR set to: 0
 18459  014012  0012               	return	
 18460  014014                     l19087:
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;os.c: 495: else
 18464                           ;os.c: 496: return 0;
 18465  014014  0E00               	movlw	0
 18466                           
 18467                           ; BSR set to: 0
 18468  014016  0012               	return	
 18469  014018                     __end_of_system_output_is_on:
 18470                           	opt stack 0
 18471                           tblptru	equ	0xFF8
 18472                           tblptrh	equ	0xFF7
 18473                           tblptrl	equ	0xFF6
 18474                           tablat	equ	0xFF5
 18475                           prodh	equ	0xFF4
 18476                           prodl	equ	0xFF3
 18477                           intcon	equ	0xFF2
 18478                           intcon2	equ	0xFF1
 18479                           intcon3	equ	0xFF0
 18480                           postinc0	equ	0xFEE
 18481                           wreg	equ	0xFE8
 18482                           postinc1	equ	0xFE6
 18483                           postdec1	equ	0xFE5
 18484                           plusw1	equ	0xFE3
 18485                           fsr1h	equ	0xFE2
 18486                           fsr1l	equ	0xFE1
 18487                           indf2	equ	0xFDF
 18488                           postinc2	equ	0xFDE
 18489                           postdec2	equ	0xFDD
 18490                           plusw2	equ	0xFDB
 18491                           fsr2h	equ	0xFDA
 18492                           fsr2l	equ	0xFD9
 18493                           status	equ	0xFD8
 18494                           
 18495 ;; *************** function _rtcc_get_seconds_decimal *****************
 18496 ;; Defined at:
 18497 ;;		line 325 in file "rtcc.c"
 18498 ;; Parameters:    Size  Location     Type
 18499 ;;		None
 18500 ;; Auto vars:     Size  Location     Type
 18501 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 18502 ;; Return value:  Size  Location     Type
 18503 ;;                  1    wreg      unsigned char 
 18504 ;; Registers used:
 18505 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18506 ;; Tracked objects:
 18507 ;;		On entry : 0/0
 18508 ;;		On exit  : 0/0
 18509 ;;		Unchanged: 0/0
 18510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18514 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18515 ;;Total ram usage:        1 bytes
 18516 ;; Hardware stack levels used:    1
 18517 ;; Hardware stack levels required when called:   11
 18518 ;; This function calls:
 18519 ;;		__rtcc_bcd_to_decimal
 18520 ;;		_rtcc_get_seconds
 18521 ;; This function is called by:
 18522 ;;		__get_time
 18523 ;;		__get_dateTime
 18524 ;;		_log_start_new
 18525 ;;		_log_collect_data
 18526 ;; This function uses a non-reentrant model
 18527 ;;
 18528                           
 18529                           	psect	text82
 18530  014220                     __ptext82:
 18531                           	opt stack 0
 18532  014220                     _rtcc_get_seconds_decimal:
 18533                           	opt stack 17
 18534                           
 18535                           ;rtcc.c: 327: uint8_t bcd_seconds = rtcc_get_seconds();
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;incstack = 0
 18539  014220  ECB1  F0A0         	call	_rtcc_get_seconds	;wreg free
 18540  014224  0100               	movlb	0	; () banked
 18541  014226  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;rtcc.c: 328: return _rtcc_bcd_to_decimal(bcd_seconds);
 18545  014228  0100               	movlb	0	; () banked
 18546  01422A  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 18547  01422C  EC24  F09F         	call	__rtcc_bcd_to_decimal
 18548  014230  0012               	return	
 18549  014232                     __end_of_rtcc_get_seconds_decimal:
 18550                           	opt stack 0
 18551                           tblptru	equ	0xFF8
 18552                           tblptrh	equ	0xFF7
 18553                           tblptrl	equ	0xFF6
 18554                           tablat	equ	0xFF5
 18555                           prodh	equ	0xFF4
 18556                           prodl	equ	0xFF3
 18557                           intcon	equ	0xFF2
 18558                           intcon2	equ	0xFF1
 18559                           intcon3	equ	0xFF0
 18560                           postinc0	equ	0xFEE
 18561                           wreg	equ	0xFE8
 18562                           postinc1	equ	0xFE6
 18563                           postdec1	equ	0xFE5
 18564                           plusw1	equ	0xFE3
 18565                           fsr1h	equ	0xFE2
 18566                           fsr1l	equ	0xFE1
 18567                           indf2	equ	0xFDF
 18568                           postinc2	equ	0xFDE
 18569                           postdec2	equ	0xFDD
 18570                           plusw2	equ	0xFDB
 18571                           fsr2h	equ	0xFDA
 18572                           fsr2l	equ	0xFD9
 18573                           status	equ	0xFD8
 18574                           
 18575 ;; *************** function __rtcc_bcd_to_decimal *****************
 18576 ;; Defined at:
 18577 ;;		line 7 in file "rtcc.c"
 18578 ;; Parameters:    Size  Location     Type
 18579 ;;  input           1    wreg     unsigned char 
 18580 ;; Auto vars:     Size  Location     Type
 18581 ;;  input           1    2[BANK0 ] unsigned char 
 18582 ;;  ones            1    1[BANK0 ] unsigned char 
 18583 ;;  tens            1    0[BANK0 ] unsigned char 
 18584 ;; Return value:  Size  Location     Type
 18585 ;;                  1    wreg      unsigned char 
 18586 ;; Registers used:
 18587 ;;		wreg, status,2, status,0, prodl, prodh
 18588 ;; Tracked objects:
 18589 ;;		On entry : 0/0
 18590 ;;		On exit  : 0/0
 18591 ;;		Unchanged: 0/0
 18592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18596 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18597 ;;Total ram usage:        3 bytes
 18598 ;; Hardware stack levels used:    1
 18599 ;; Hardware stack levels required when called:   10
 18600 ;; This function calls:
 18601 ;;		Nothing
 18602 ;; This function is called by:
 18603 ;;		_rtcc_get_year_decimal
 18604 ;;		_rtcc_get_month_decimal
 18605 ;;		_rtcc_get_day_decimal
 18606 ;;		_rtcc_get_hours_decimal
 18607 ;;		_rtcc_get_minutes_decimal
 18608 ;;		_rtcc_get_seconds_decimal
 18609 ;; This function uses a non-reentrant model
 18610 ;;
 18611                           
 18612                           	psect	text83
 18613  013E48                     __ptext83:
 18614                           	opt stack 0
 18615  013E48                     __rtcc_bcd_to_decimal:
 18616                           	opt stack 17
 18617                           
 18618                           ;incstack = 0
 18619                           ;__rtcc_bcd_to_decimal@input stored from wreg
 18620  013E48  0100               	movlb	0	; () banked
 18621  013E4A  6F62               	movwf	__rtcc_bcd_to_decimal@input& (0+255),b
 18622                           
 18623                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 18624  013E4C  0100               	movlb	0	; () banked
 18625  013E4E  3962               	swapf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 18626  013E50  0B0F               	andlw	15
 18627  013E52  0B0F               	andlw	15
 18628  013E54  0100               	movlb	0	; () banked
 18629  013E56  6F60               	movwf	__rtcc_bcd_to_decimal@tens& (0+255),b
 18630                           
 18631                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 18632  013E58  0100               	movlb	0	; () banked
 18633  013E5A  5162               	movf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 18634  013E5C  0B0F               	andlw	15
 18635  013E5E  0100               	movlb	0	; () banked
 18636  013E60  6F61               	movwf	__rtcc_bcd_to_decimal@ones& (0+255),b
 18637                           
 18638                           ; BSR set to: 0
 18639                           ;rtcc.c: 11: return ((10*tens) + ones);
 18640  013E62  0100               	movlb	0	; () banked
 18641  013E64  5160               	movf	__rtcc_bcd_to_decimal@tens& (0+255),w,b
 18642  013E66  0D0A               	mullw	10
 18643  013E68  50F3               	movf	prodl,w,c
 18644  013E6A  0100               	movlb	0	; () banked
 18645  013E6C  2561               	addwf	__rtcc_bcd_to_decimal@ones& (0+255),w,b
 18646  013E6E  0012               	return	
 18647  013E70                     __end_of__rtcc_bcd_to_decimal:
 18648                           	opt stack 0
 18649                           tblptru	equ	0xFF8
 18650                           tblptrh	equ	0xFF7
 18651                           tblptrl	equ	0xFF6
 18652                           tablat	equ	0xFF5
 18653                           prodh	equ	0xFF4
 18654                           prodl	equ	0xFF3
 18655                           intcon	equ	0xFF2
 18656                           intcon2	equ	0xFF1
 18657                           intcon3	equ	0xFF0
 18658                           postinc0	equ	0xFEE
 18659                           wreg	equ	0xFE8
 18660                           postinc1	equ	0xFE6
 18661                           postdec1	equ	0xFE5
 18662                           plusw1	equ	0xFE3
 18663                           fsr1h	equ	0xFE2
 18664                           fsr1l	equ	0xFE1
 18665                           indf2	equ	0xFDF
 18666                           postinc2	equ	0xFDE
 18667                           postdec2	equ	0xFDD
 18668                           plusw2	equ	0xFDB
 18669                           fsr2h	equ	0xFDA
 18670                           fsr2l	equ	0xFD9
 18671                           status	equ	0xFD8
 18672                           
 18673 ;; *************** function __get_output_power *****************
 18674 ;; Defined at:
 18675 ;;		line 99 in file "log.c"
 18676 ;; Parameters:    Size  Location     Type
 18677 ;;		None
 18678 ;; Auto vars:     Size  Location     Type
 18679 ;;  pwr             4   15[BANK0 ] unsigned long 
 18680 ;; Return value:  Size  Location     Type
 18681 ;;                  2   13[BANK0 ] unsigned int 
 18682 ;; Registers used:
 18683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18684 ;; Tracked objects:
 18685 ;;		On entry : 0/0
 18686 ;;		On exit  : 0/0
 18687 ;;		Unchanged: 0/0
 18688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18690 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18692 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18693 ;;Total ram usage:        6 bytes
 18694 ;; Hardware stack levels used:    1
 18695 ;; Hardware stack levels required when called:   11
 18696 ;; This function calls:
 18697 ;;		___lldiv
 18698 ;;		___lmul
 18699 ;; This function is called by:
 18700 ;;		_log_collect_data
 18701 ;; This function uses a non-reentrant model
 18702 ;;
 18703                           
 18704                           	psect	text84
 18705  012120                     __ptext84:
 18706                           	opt stack 0
 18707  012120                     __get_output_power:
 18708                           	opt stack 18
 18709                           
 18710                           ;log.c: 101: uint32_t pwr;
 18711                           ;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) os.output_current);
 18712                           
 18713                           ; BSR set to: 0
 18714                           ;incstack = 0
 18715  012120  EE22  F027         	lfsr	2,_os+39	;volatile
 18716  012124  CFDE F060          	movff	postinc2,___lmul@multiplier
 18717  012128  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 18718  01212C  0100               	movlb	0	; () banked
 18719  01212E  0E00               	movlw	0
 18720  012130  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18721  012132  0EFF               	movlw	-1
 18722  012134  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18723  012136  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18724  012138  EE22  F032         	lfsr	2,_os+50	;volatile
 18725  01213C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18726  012140  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 18727  012144  0100               	movlb	0	; () banked
 18728  012146  0E00               	movlw	0
 18729  012148  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18730  01214A  0EFF               	movlw	-1
 18731  01214C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18732  01214E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18733  012150  ECC3  F092         	call	___lmul	;wreg free
 18734  012154  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 18735  012158  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 18736  01215C  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 18737  012160  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 18738                           
 18739                           ;log.c: 103: pwr /= 1000;
 18740  012164  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 18741  012168  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 18742  01216C  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 18743  012170  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 18744  012174  0EE8               	movlw	232
 18745  012176  0100               	movlb	0	; () banked
 18746  012178  6F64               	movwf	___lldiv@divisor& (0+255),b
 18747  01217A  0E03               	movlw	3
 18748  01217C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 18749  01217E  0E00               	movlw	0
 18750  012180  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 18751  012182  0E00               	movlw	0
 18752  012184  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 18753  012186  EC78  F088         	call	___lldiv	;wreg free
 18754  01218A  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 18755  01218E  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 18756  012192  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 18757  012196  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 18758                           
 18759                           ;log.c: 104: return (uint16_t) pwr;
 18760  01219A  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 18761  01219E  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 18762  0121A2  0012               	return	
 18763  0121A4                     __end_of__get_output_power:
 18764                           	opt stack 0
 18765                           tblptru	equ	0xFF8
 18766                           tblptrh	equ	0xFF7
 18767                           tblptrl	equ	0xFF6
 18768                           tablat	equ	0xFF5
 18769                           prodh	equ	0xFF4
 18770                           prodl	equ	0xFF3
 18771                           intcon	equ	0xFF2
 18772                           intcon2	equ	0xFF1
 18773                           intcon3	equ	0xFF0
 18774                           postinc0	equ	0xFEE
 18775                           wreg	equ	0xFE8
 18776                           postinc1	equ	0xFE6
 18777                           postdec1	equ	0xFE5
 18778                           plusw1	equ	0xFE3
 18779                           fsr1h	equ	0xFE2
 18780                           fsr1l	equ	0xFE1
 18781                           indf2	equ	0xFDF
 18782                           postinc2	equ	0xFDE
 18783                           postdec2	equ	0xFDD
 18784                           plusw2	equ	0xFDB
 18785                           fsr2h	equ	0xFDA
 18786                           fsr2l	equ	0xFD9
 18787                           status	equ	0xFD8
 18788                           
 18789 ;; *************** function __get_input_power *****************
 18790 ;; Defined at:
 18791 ;;		line 91 in file "log.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;		None
 18794 ;; Auto vars:     Size  Location     Type
 18795 ;;  pwr             4   16[BANK0 ] long 
 18796 ;; Return value:  Size  Location     Type
 18797 ;;                  2   14[BANK0 ] unsigned int 
 18798 ;; Registers used:
 18799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18800 ;; Tracked objects:
 18801 ;;		On entry : 0/0
 18802 ;;		On exit  : 0/0
 18803 ;;		Unchanged: 0/0
 18804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18806 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18809 ;;Total ram usage:        6 bytes
 18810 ;; Hardware stack levels used:    1
 18811 ;; Hardware stack levels required when called:   11
 18812 ;; This function calls:
 18813 ;;		___aldiv
 18814 ;;		___lmul
 18815 ;; This function is called by:
 18816 ;;		_log_collect_data
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text85
 18821  0121A4                     __ptext85:
 18822                           	opt stack 0
 18823  0121A4                     __get_input_power:
 18824                           	opt stack 18
 18825                           
 18826                           ;log.c: 93: int32_t pwr;
 18827                           ;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.input_current);
 18828                           
 18829                           ;incstack = 0
 18830  0121A4  EE22  F012         	lfsr	2,_os+18	;volatile
 18831  0121A8  CFDE F060          	movff	postinc2,___lmul@multiplier
 18832  0121AC  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 18833  0121B0  0100               	movlb	0	; () banked
 18834  0121B2  0E00               	movlw	0
 18835  0121B4  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18836  0121B6  0EFF               	movlw	-1
 18837  0121B8  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18838  0121BA  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18839  0121BC  EE22  F01D         	lfsr	2,_os+29	;volatile
 18840  0121C0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18841  0121C4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 18842  0121C8  0100               	movlb	0	; () banked
 18843  0121CA  0E00               	movlw	0
 18844  0121CC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18845  0121CE  0EFF               	movlw	-1
 18846  0121D0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18847  0121D2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18848  0121D4  ECC3  F092         	call	___lmul	;wreg free
 18849  0121D8  C060  F070         	movff	?___lmul,__get_input_power@pwr
 18850  0121DC  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 18851  0121E0  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 18852  0121E4  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 18853                           
 18854                           ;log.c: 95: pwr /= 1000;
 18855  0121E8  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 18856  0121EC  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 18857  0121F0  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 18858  0121F4  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 18859  0121F8  0EE8               	movlw	232
 18860  0121FA  0100               	movlb	0	; () banked
 18861  0121FC  6F64               	movwf	___aldiv@divisor& (0+255),b
 18862  0121FE  0E03               	movlw	3
 18863  012200  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 18864  012202  0E00               	movlw	0
 18865  012204  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 18866  012206  0E00               	movlw	0
 18867  012208  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 18868  01220A  ECEC  F07A         	call	___aldiv	;wreg free
 18869  01220E  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 18870  012212  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 18871  012216  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 18872  01221A  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 18873                           
 18874                           ;log.c: 96: return (uint16_t) pwr;
 18875  01221E  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 18876  012222  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 18877  012226  0012               	return	
 18878  012228                     __end_of__get_input_power:
 18879                           	opt stack 0
 18880                           tblptru	equ	0xFF8
 18881                           tblptrh	equ	0xFF7
 18882                           tblptrl	equ	0xFF6
 18883                           tablat	equ	0xFF5
 18884                           prodh	equ	0xFF4
 18885                           prodl	equ	0xFF3
 18886                           intcon	equ	0xFF2
 18887                           intcon2	equ	0xFF1
 18888                           intcon3	equ	0xFF0
 18889                           postinc0	equ	0xFEE
 18890                           wreg	equ	0xFE8
 18891                           postinc1	equ	0xFE6
 18892                           postdec1	equ	0xFE5
 18893                           plusw1	equ	0xFE3
 18894                           fsr1h	equ	0xFE2
 18895                           fsr1l	equ	0xFE1
 18896                           indf2	equ	0xFDF
 18897                           postinc2	equ	0xFDE
 18898                           postdec2	equ	0xFDD
 18899                           plusw2	equ	0xFDB
 18900                           fsr2h	equ	0xFDA
 18901                           fsr2l	equ	0xFD9
 18902                           status	equ	0xFD8
 18903                           
 18904 ;; *************** function _i2c_eeprom_tasks *****************
 18905 ;; Defined at:
 18906 ;;		line 779 in file "i2c.c"
 18907 ;; Parameters:    Size  Location     Type
 18908 ;;		None
 18909 ;; Auto vars:     Size  Location     Type
 18910 ;;		None
 18911 ;; Return value:  Size  Location     Type
 18912 ;;                  1    wreg      void 
 18913 ;; Registers used:
 18914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18915 ;; Tracked objects:
 18916 ;;		On entry : 0/0
 18917 ;;		On exit  : 0/0
 18918 ;;		Unchanged: 0/0
 18919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18924 ;;Total ram usage:        0 bytes
 18925 ;; Hardware stack levels used:    1
 18926 ;; Hardware stack levels required when called:   14
 18927 ;; This function calls:
 18928 ;;		__write_calibration
 18929 ;;		_get_next_eeprom_write_task
 18930 ;; This function is called by:
 18931 ;;		_main
 18932 ;; This function uses a non-reentrant model
 18933 ;;
 18934                           
 18935                           	psect	text86
 18936  012756                     __ptext86:
 18937                           	opt stack 0
 18938  012756                     _i2c_eeprom_tasks:
 18939                           	opt stack 16
 18940                           
 18941                           ;i2c.c: 781: switch(get_next_eeprom_write_task())
 18942                           
 18943                           ;incstack = 0
 18944  012756  D01C               	goto	l22345
 18945  012758                     l22329:
 18946                           
 18947                           ;i2c.c: 786: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 18948  012758  0E00               	movlw	0
 18949  01275A  EC1A  F088         	call	__write_calibration
 18950                           
 18951                           ;i2c.c: 787: break;
 18952  01275E  0012               	return	
 18953  012760                     l22331:
 18954                           
 18955                           ;i2c.c: 789: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 18956  012760  0E01               	movlw	1
 18957  012762  EC1A  F088         	call	__write_calibration
 18958                           
 18959                           ;i2c.c: 790: break;
 18960  012766  0012               	return	
 18961  012768                     l22333:
 18962                           
 18963                           ;i2c.c: 792: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 18964  012768  0E02               	movlw	2
 18965  01276A  EC1A  F088         	call	__write_calibration
 18966                           
 18967                           ;i2c.c: 793: break;
 18968  01276E  0012               	return	
 18969  012770                     l22335:
 18970                           
 18971                           ;i2c.c: 795: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 18972  012770  0E03               	movlw	3
 18973  012772  EC1A  F088         	call	__write_calibration
 18974                           
 18975                           ;i2c.c: 796: break;
 18976  012776  0012               	return	
 18977  012778                     l22337:
 18978                           
 18979                           ;i2c.c: 798: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 18980  012778  0E04               	movlw	4
 18981  01277A  EC1A  F088         	call	__write_calibration
 18982                           
 18983                           ;i2c.c: 799: break;
 18984  01277E  0012               	return	
 18985  012780                     l22339:
 18986                           
 18987                           ;i2c.c: 801: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 18988  012780  0E05               	movlw	5
 18989  012782  EC1A  F088         	call	__write_calibration
 18990                           
 18991                           ;i2c.c: 802: break;
 18992  012786  0012               	return	
 18993  012788                     l22341:
 18994                           
 18995                           ;i2c.c: 804: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 18996  012788  0E06               	movlw	6
 18997  01278A  EC1A  F088         	call	__write_calibration
 18998                           
 18999                           ;i2c.c: 806: }
 19000                           
 19001                           ;i2c.c: 805: break;
 19002  01278E  0012               	return	
 19003  012790                     l22345:
 19004  012790  EC8D  F09D         	call	_get_next_eeprom_write_task	;wreg free
 19005                           
 19006                           ; Switch size 1, requested type "space"
 19007                           ; Number of cases is 8, Range of values is 1 to 8
 19008                           ; switch strategies available:
 19009                           ; Name         Instructions Cycles
 19010                           ; simple_byte           25    13 (average)
 19011                           ;	Chosen strategy is simple_byte
 19012  012794  0A01               	xorlw	1	; case 1
 19013  012796  B4D8               	btfsc	status,2,c
 19014  012798  0012               	return	
 19015  01279A  0A03               	xorlw	3	; case 2
 19016  01279C  B4D8               	btfsc	status,2,c
 19017  01279E  D7DC               	goto	l22329
 19018  0127A0  0A01               	xorlw	1	; case 3
 19019  0127A2  B4D8               	btfsc	status,2,c
 19020  0127A4  D7DD               	goto	l22331
 19021  0127A6  0A07               	xorlw	7	; case 4
 19022  0127A8  B4D8               	btfsc	status,2,c
 19023  0127AA  D7DE               	goto	l22333
 19024  0127AC  0A01               	xorlw	1	; case 5
 19025  0127AE  B4D8               	btfsc	status,2,c
 19026  0127B0  D7DF               	goto	l22335
 19027  0127B2  0A03               	xorlw	3	; case 6
 19028  0127B4  B4D8               	btfsc	status,2,c
 19029  0127B6  D7E0               	goto	l22337
 19030  0127B8  0A01               	xorlw	1	; case 7
 19031  0127BA  B4D8               	btfsc	status,2,c
 19032  0127BC  D7E1               	goto	l22339
 19033  0127BE  0A0F               	xorlw	15	; case 8
 19034  0127C0  A4D8               	btfss	status,2,c
 19035  0127C2  0012               	return	
 19036  0127C4  D7E1               	goto	l22341
 19037  0127C6                     __end_of_i2c_eeprom_tasks:
 19038                           	opt stack 0
 19039                           tblptru	equ	0xFF8
 19040                           tblptrh	equ	0xFF7
 19041                           tblptrl	equ	0xFF6
 19042                           tablat	equ	0xFF5
 19043                           prodh	equ	0xFF4
 19044                           prodl	equ	0xFF3
 19045                           intcon	equ	0xFF2
 19046                           intcon2	equ	0xFF1
 19047                           intcon3	equ	0xFF0
 19048                           postinc0	equ	0xFEE
 19049                           wreg	equ	0xFE8
 19050                           postinc1	equ	0xFE6
 19051                           postdec1	equ	0xFE5
 19052                           plusw1	equ	0xFE3
 19053                           fsr1h	equ	0xFE2
 19054                           fsr1l	equ	0xFE1
 19055                           indf2	equ	0xFDF
 19056                           postinc2	equ	0xFDE
 19057                           postdec2	equ	0xFDD
 19058                           plusw2	equ	0xFDB
 19059                           fsr2h	equ	0xFDA
 19060                           fsr2l	equ	0xFD9
 19061                           status	equ	0xFD8
 19062                           
 19063 ;; *************** function _get_next_eeprom_write_task *****************
 19064 ;; Defined at:
 19065 ;;		line 759 in file "i2c.c"
 19066 ;; Parameters:    Size  Location     Type
 19067 ;;		None
 19068 ;; Auto vars:     Size  Location     Type
 19069 ;;  task            1    0[BANK0 ] enum E8252
 19070 ;; Return value:  Size  Location     Type
 19071 ;;                  1    wreg      enum E8252
 19072 ;; Registers used:
 19073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19074 ;; Tracked objects:
 19075 ;;		On entry : 0/0
 19076 ;;		On exit  : 0/0
 19077 ;;		Unchanged: 0/0
 19078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19083 ;;Total ram usage:        1 bytes
 19084 ;; Hardware stack levels used:    1
 19085 ;; Hardware stack levels required when called:   10
 19086 ;; This function calls:
 19087 ;;		Nothing
 19088 ;; This function is called by:
 19089 ;;		_i2c_eeprom_tasks
 19090 ;; This function uses a non-reentrant model
 19091 ;;
 19092                           
 19093                           	psect	text87
 19094  013B1A                     __ptext87:
 19095                           	opt stack 0
 19096  013B1A                     _get_next_eeprom_write_task:
 19097                           	opt stack 19
 19098                           
 19099                           ;i2c.c: 761: eeprom_write_task_t task;
 19100                           ;i2c.c: 762: if (task_list_read_index == task_list_write_index)
 19101                           
 19102                           ;incstack = 0
 19103  013B1A  501D               	movf	_task_list_write_index,w,c
 19104  013B1C  181E               	xorwf	_task_list_read_index,w,c
 19105  013B1E  A4D8               	btfss	status,2,c
 19106  013B20  D002               	goto	l20925
 19107                           
 19108                           ;i2c.c: 763: {
 19109                           ;i2c.c: 765: return EEPROM_WRITE_TASK_NONE;
 19110  013B22  0E00               	movlw	0
 19111                           
 19112                           ;i2c.c: 766: }
 19113  013B24  0012               	return	
 19114  013B26                     l20925:
 19115                           
 19116                           ;i2c.c: 767: else
 19117                           ;i2c.c: 768: {
 19118                           ;i2c.c: 770: task = task_list[task_list_read_index];
 19119  013B26  501E               	movf	_task_list_read_index,w,c
 19120  013B28  0D01               	mullw	1
 19121  013B2A  0E68               	movlw	low _task_list
 19122  013B2C  24F3               	addwf	prodl,w,c
 19123  013B2E  6ED9               	movwf	fsr2l,c
 19124  013B30  0E04               	movlw	high _task_list
 19125  013B32  20F4               	addwfc	prodh,w,c
 19126  013B34  6EDA               	movwf	fsr2h,c
 19127  013B36  50DF               	movf	indf2,w,c
 19128  013B38  0100               	movlb	0	; () banked
 19129  013B3A  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 19130                           
 19131                           ; BSR set to: 0
 19132                           ;i2c.c: 772: ++task_list_read_index;
 19133  013B3C  2A1E               	incf	_task_list_read_index,f,c
 19134                           
 19135                           ; BSR set to: 0
 19136                           ;i2c.c: 773: task_list_read_index &= 0x0F;
 19137  013B3E  0E0F               	movlw	15
 19138  013B40  161E               	andwf	_task_list_read_index,f,c
 19139                           
 19140                           ; BSR set to: 0
 19141                           ;i2c.c: 775: return task;
 19142  013B42  0100               	movlb	0	; () banked
 19143  013B44  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 19144                           
 19145                           ; BSR set to: 0
 19146  013B46  0012               	return	
 19147  013B48                     __end_of_get_next_eeprom_write_task:
 19148                           	opt stack 0
 19149                           tblptru	equ	0xFF8
 19150                           tblptrh	equ	0xFF7
 19151                           tblptrl	equ	0xFF6
 19152                           tablat	equ	0xFF5
 19153                           prodh	equ	0xFF4
 19154                           prodl	equ	0xFF3
 19155                           intcon	equ	0xFF2
 19156                           intcon2	equ	0xFF1
 19157                           intcon3	equ	0xFF0
 19158                           postinc0	equ	0xFEE
 19159                           wreg	equ	0xFE8
 19160                           postinc1	equ	0xFE6
 19161                           postdec1	equ	0xFE5
 19162                           plusw1	equ	0xFE3
 19163                           fsr1h	equ	0xFE2
 19164                           fsr1l	equ	0xFE1
 19165                           indf2	equ	0xFDF
 19166                           postinc2	equ	0xFDE
 19167                           postdec2	equ	0xFDD
 19168                           plusw2	equ	0xFDB
 19169                           fsr2h	equ	0xFDA
 19170                           fsr2l	equ	0xFD9
 19171                           status	equ	0xFD8
 19172                           
 19173 ;; *************** function __write_calibration *****************
 19174 ;; Defined at:
 19175 ;;		line 715 in file "i2c.c"
 19176 ;; Parameters:    Size  Location     Type
 19177 ;;  index           1    wreg     enum E8142
 19178 ;; Auto vars:     Size  Location     Type
 19179 ;;  index           1   59[BANK0 ] enum E8142
 19180 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 19181 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 19182 ;;		 -> calibrationParameters(84), 
 19183 ;;  addr            2   55[BANK0 ] unsigned int 
 19184 ;;  cntr            1   60[BANK0 ] unsigned char 
 19185 ;; Return value:  Size  Location     Type
 19186 ;;                  1    wreg      void 
 19187 ;; Registers used:
 19188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19189 ;; Tracked objects:
 19190 ;;		On entry : 0/0
 19191 ;;		On exit  : 0/0
 19192 ;;		Unchanged: 0/0
 19193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19195 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19196 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19197 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19198 ;;Total ram usage:       24 bytes
 19199 ;; Hardware stack levels used:    1
 19200 ;; Hardware stack levels required when called:   13
 19201 ;; This function calls:
 19202 ;;		_i2c_eeprom_write
 19203 ;; This function is called by:
 19204 ;;		_i2c_eeprom_tasks
 19205 ;; This function uses a non-reentrant model
 19206 ;;
 19207                           
 19208                           	psect	text88
 19209  011034                     __ptext88:
 19210                           	opt stack 0
 19211  011034                     __write_calibration:
 19212                           	opt stack 16
 19213                           
 19214                           ;incstack = 0
 19215                           ;__write_calibration@index stored from wreg
 19216  011034  0100               	movlb	0	; () banked
 19217  011036  6F9B               	movwf	__write_calibration@index& (0+255),b
 19218                           
 19219                           ;i2c.c: 717: uint8_t buffer[16];
 19220                           ;i2c.c: 718: uint8_t *ptr;
 19221                           ;i2c.c: 719: uint8_t cntr;
 19222                           ;i2c.c: 720: uint16_t addr;
 19223                           ;i2c.c: 721: buffer[0] = 0x77;
 19224  011038  0E77               	movlw	119
 19225  01103A  0100               	movlb	0	; () banked
 19226  01103C  6F87               	movwf	__write_calibration@buffer& (0+255),b
 19227                           
 19228                           ;i2c.c: 722: buffer[1] = 0x55;
 19229  01103E  0E55               	movlw	85
 19230  011040  0100               	movlb	0	; () banked
 19231  011042  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 19232                           
 19233                           ;i2c.c: 723: buffer[2] = 0x33;
 19234  011044  0E33               	movlw	51
 19235  011046  0100               	movlb	0	; () banked
 19236  011048  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;i2c.c: 724: buffer[3] = (uint8_t) index;
 19240  01104A  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 19241                           
 19242                           ; BSR set to: 0
 19243                           ;i2c.c: 725: ptr = (uint8_t*) &calibrationParameters[index];
 19244  01104E  0100               	movlb	0	; () banked
 19245  011050  519B               	movf	__write_calibration@index& (0+255),w,b
 19246  011052  0D0C               	mullw	12
 19247  011054  0E00               	movlw	low _calibrationParameters
 19248  011056  24F3               	addwf	prodl,w,c
 19249  011058  0100               	movlb	0	; () banked
 19250  01105A  6F99               	movwf	__write_calibration@ptr& (0+255),b
 19251  01105C  0E03               	movlw	high _calibrationParameters
 19252  01105E  20F4               	addwfc	prodh,w,c
 19253  011060  0100               	movlb	0	; () banked
 19254  011062  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 19255                           
 19256                           ; BSR set to: 0
 19257                           ;i2c.c: 726: for(cntr=4; cntr<16; ++cntr)
 19258  011064  0E04               	movlw	4
 19259  011066  0100               	movlb	0	; () banked
 19260  011068  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 19261  01106A                     l20901:
 19262                           
 19263                           ; BSR set to: 0
 19264  01106A  0E0F               	movlw	15
 19265  01106C  0100               	movlb	0	; () banked
 19266  01106E  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 19267  011070  D001               	goto	l20905
 19268  011072  D015               	goto	l20913
 19269  011074                     l20905:
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;i2c.c: 727: {
 19273                           ;i2c.c: 728: buffer[cntr] = *ptr;
 19274  011074  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 19275  011078  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 19276  01107C  0100               	movlb	0	; () banked
 19277  01107E  519C               	movf	__write_calibration@cntr& (0+255),w,b
 19278  011080  0D01               	mullw	1
 19279  011082  0E87               	movlw	low __write_calibration@buffer
 19280  011084  24F3               	addwf	prodl,w,c
 19281  011086  6EE1               	movwf	fsr1l,c
 19282  011088  0E00               	movlw	high __write_calibration@buffer
 19283  01108A  20F4               	addwfc	prodh,w,c
 19284  01108C  6EE2               	movwf	fsr1h,c
 19285  01108E  CFDF FFE7          	movff	indf2,indf1
 19286                           
 19287                           ; BSR set to: 0
 19288                           ;i2c.c: 729: ++ptr;
 19289  011092  0100               	movlb	0	; () banked
 19290  011094  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 19291  011096  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 19292                           
 19293                           ; BSR set to: 0
 19294  011098  0100               	movlb	0	; () banked
 19295  01109A  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 19296  01109C  D7E6               	goto	l20901
 19297  01109E                     l20913:
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;i2c.c: 730: }
 19301                           ;i2c.c: 731: addr = 0x0200 + (index<<4);
 19302  01109E  0100               	movlb	0	; () banked
 19303  0110A0  519B               	movf	__write_calibration@index& (0+255),w,b
 19304  0110A2  0100               	movlb	0	; () banked
 19305  0110A4  6F85               	movwf	??__write_calibration& (0+255),b
 19306  0110A6  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 19307  0110A8  0100               	movlb	0	; () banked
 19308  0110AA  3B85               	swapf	??__write_calibration& (0+255),f,b
 19309  0110AC  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 19310  0110AE  0EF0               	movlw	240
 19311  0110B0  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 19312  0110B2  5185               	movf	??__write_calibration& (0+255),w,b
 19313  0110B4  0B0F               	andlw	15
 19314  0110B6  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 19315  0110B8  0EF0               	movlw	240
 19316  0110BA  1785               	andwf	??__write_calibration& (0+255),f,b
 19317  0110BC  0E00               	movlw	0
 19318  0110BE  0100               	movlb	0	; () banked
 19319  0110C0  2585               	addwf	??__write_calibration& (0+255),w,b
 19320  0110C2  0100               	movlb	0	; () banked
 19321  0110C4  6F97               	movwf	__write_calibration@addr& (0+255),b
 19322  0110C6  0E02               	movlw	2
 19323  0110C8  0100               	movlb	0	; () banked
 19324  0110CA  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 19325  0110CC  0100               	movlb	0	; () banked
 19326  0110CE  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 19327                           
 19328                           ; BSR set to: 0
 19329                           ;i2c.c: 732: i2c_eeprom_write(addr, &buffer[0], 16);
 19330  0110D0  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 19331  0110D4  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 19332  0110D8  0E87               	movlw	low __write_calibration@buffer
 19333  0110DA  0100               	movlb	0	; () banked
 19334  0110DC  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 19335  0110DE  0E00               	movlw	high __write_calibration@buffer
 19336  0110E0  0100               	movlb	0	; () banked
 19337  0110E2  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 19338  0110E4  0E10               	movlw	16
 19339  0110E6  0100               	movlb	0	; () banked
 19340  0110E8  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 19341  0110EA  ECEA  F089         	call	_i2c_eeprom_write	;wreg free
 19342  0110EE  0012               	return		;funcret
 19343  0110F0                     __end_of__write_calibration:
 19344                           	opt stack 0
 19345                           tblptru	equ	0xFF8
 19346                           tblptrh	equ	0xFF7
 19347                           tblptrl	equ	0xFF6
 19348                           tablat	equ	0xFF5
 19349                           prodh	equ	0xFF4
 19350                           prodl	equ	0xFF3
 19351                           intcon	equ	0xFF2
 19352                           intcon2	equ	0xFF1
 19353                           intcon3	equ	0xFF0
 19354                           postinc0	equ	0xFEE
 19355                           wreg	equ	0xFE8
 19356                           indf1	equ	0xFE7
 19357                           postinc1	equ	0xFE6
 19358                           postdec1	equ	0xFE5
 19359                           plusw1	equ	0xFE3
 19360                           fsr1h	equ	0xFE2
 19361                           fsr1l	equ	0xFE1
 19362                           indf2	equ	0xFDF
 19363                           postinc2	equ	0xFDE
 19364                           postdec2	equ	0xFDD
 19365                           plusw2	equ	0xFDB
 19366                           fsr2h	equ	0xFDA
 19367                           fsr2l	equ	0xFD9
 19368                           status	equ	0xFD8
 19369                           
 19370 ;; *************** function _i2c_adc_start *****************
 19371 ;; Defined at:
 19372 ;;		line 467 in file "i2c.c"
 19373 ;; Parameters:    Size  Location     Type
 19374 ;;  channel         1    wreg     enum E8224
 19375 ;;  resolution      1   10[BANK0 ] enum E8230
 19376 ;;  gain            1   11[BANK0 ] enum E8236
 19377 ;; Auto vars:     Size  Location     Type
 19378 ;;  channel         1   12[BANK0 ] enum E8224
 19379 ;;  configuratio    1   13[BANK0 ] unsigned char 
 19380 ;; Return value:  Size  Location     Type
 19381 ;;                  1    wreg      void 
 19382 ;; Registers used:
 19383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19384 ;; Tracked objects:
 19385 ;;		On entry : 0/0
 19386 ;;		On exit  : 0/0
 19387 ;;		Unchanged: 0/0
 19388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19393 ;;Total ram usage:        4 bytes
 19394 ;; Hardware stack levels used:    1
 19395 ;; Hardware stack levels required when called:   12
 19396 ;; This function calls:
 19397 ;;		__i2c_write
 19398 ;;		_i2c_set_frequency
 19399 ;; This function is called by:
 19400 ;;		_main
 19401 ;; This function uses a non-reentrant model
 19402 ;;
 19403                           
 19404                           	psect	text89
 19405  013470                     __ptext89:
 19406                           	opt stack 0
 19407  013470                     _i2c_adc_start:
 19408                           	opt stack 18
 19409                           
 19410                           ;incstack = 0
 19411                           ;i2c_adc_start@channel stored from wreg
 19412  013470  0100               	movlb	0	; () banked
 19413  013472  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 19414                           
 19415                           ;i2c.c: 469: uint8_t configuration_byte;
 19416                           ;i2c.c: 470: configuration_byte = 0b10000000;
 19417  013474  0E80               	movlw	128
 19418  013476  0100               	movlb	0	; () banked
 19419  013478  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 19420                           
 19421                           ; BSR set to: 0
 19422                           ;i2c.c: 471: configuration_byte |= (channel<<5);
 19423  01347A  0100               	movlb	0	; () banked
 19424  01347C  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 19425  01347E  46E8               	rlncf	wreg,f,c
 19426  013480  0BE0               	andlw	224
 19427  013482  0100               	movlb	0	; () banked
 19428  013484  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;i2c.c: 472: configuration_byte |= (resolution<<2);
 19432  013486  0100               	movlb	0	; () banked
 19433  013488  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 19434  01348A  46E8               	rlncf	wreg,f,c
 19435  01348C  0BFC               	andlw	252
 19436  01348E  0100               	movlb	0	; () banked
 19437  013490  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19438                           
 19439                           ; BSR set to: 0
 19440                           ;i2c.c: 473: configuration_byte |= gain;
 19441  013492  0100               	movlb	0	; () banked
 19442  013494  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 19443  013496  0100               	movlb	0	; () banked
 19444  013498  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;i2c.c: 476: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 19448  01349A  0E02               	movlw	2
 19449  01349C  ECE3  F093         	call	_i2c_set_frequency
 19450                           
 19451                           ;i2c.c: 478: _i2c_write(0b11010000, &configuration_byte, 1);
 19452  0134A0  0E6D               	movlw	low i2c_adc_start@configuration_byte
 19453  0134A2  0100               	movlb	0	; () banked
 19454  0134A4  6F65               	movwf	__i2c_write@data& (0+255),b
 19455  0134A6  0E00               	movlw	high i2c_adc_start@configuration_byte
 19456  0134A8  0100               	movlb	0	; () banked
 19457  0134AA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19458  0134AC  0E01               	movlw	1
 19459  0134AE  0100               	movlb	0	; () banked
 19460  0134B0  6F67               	movwf	__i2c_write@length& (0+255),b
 19461  0134B2  0ED0               	movlw	208
 19462  0134B4  EC93  F098         	call	__i2c_write
 19463  0134B8  0012               	return		;funcret
 19464  0134BA                     __end_of_i2c_adc_start:
 19465                           	opt stack 0
 19466                           tblptru	equ	0xFF8
 19467                           tblptrh	equ	0xFF7
 19468                           tblptrl	equ	0xFF6
 19469                           tablat	equ	0xFF5
 19470                           prodh	equ	0xFF4
 19471                           prodl	equ	0xFF3
 19472                           intcon	equ	0xFF2
 19473                           intcon2	equ	0xFF1
 19474                           intcon3	equ	0xFF0
 19475                           postinc0	equ	0xFEE
 19476                           wreg	equ	0xFE8
 19477                           indf1	equ	0xFE7
 19478                           postinc1	equ	0xFE6
 19479                           postdec1	equ	0xFE5
 19480                           plusw1	equ	0xFE3
 19481                           fsr1h	equ	0xFE2
 19482                           fsr1l	equ	0xFE1
 19483                           indf2	equ	0xFDF
 19484                           postinc2	equ	0xFDE
 19485                           postdec2	equ	0xFDD
 19486                           plusw2	equ	0xFDB
 19487                           fsr2h	equ	0xFDA
 19488                           fsr2l	equ	0xFD9
 19489                           status	equ	0xFD8
 19490                           
 19491 ;; *************** function _i2c_adc_read *****************
 19492 ;; Defined at:
 19493 ;;		line 481 in file "i2c.c"
 19494 ;; Parameters:    Size  Location     Type
 19495 ;;		None
 19496 ;; Auto vars:     Size  Location     Type
 19497 ;;  result          2    8[BANK0 ] int 
 19498 ;; Return value:  Size  Location     Type
 19499 ;;                  2    5[BANK0 ] int 
 19500 ;; Registers used:
 19501 ;;		wreg, status,2, status,0, cstack
 19502 ;; Tracked objects:
 19503 ;;		On entry : 0/0
 19504 ;;		On exit  : 0/0
 19505 ;;		Unchanged: 0/0
 19506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19510 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19511 ;;Total ram usage:        5 bytes
 19512 ;; Hardware stack levels used:    1
 19513 ;; Hardware stack levels required when called:   11
 19514 ;; This function calls:
 19515 ;;		__i2c_acknowledge
 19516 ;;		__i2c_get
 19517 ;;		__i2c_not_acknowledge
 19518 ;;		__i2c_send
 19519 ;;		__i2c_start
 19520 ;;		__i2c_stop
 19521 ;;		__i2c_wait_idle
 19522 ;;		_i2c_set_frequency
 19523 ;; This function is called by:
 19524 ;;		_main
 19525 ;; This function uses a non-reentrant model
 19526 ;;
 19527                           
 19528                           	psect	text90
 19529  012FB8                     __ptext90:
 19530                           	opt stack 0
 19531  012FB8                     _i2c_adc_read:
 19532                           	opt stack 19
 19533                           
 19534                           ;i2c.c: 483: int16_t result;
 19535                           ;i2c.c: 486: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 19536                           
 19537                           ;incstack = 0
 19538  012FB8  0E02               	movlw	2
 19539  012FBA  ECE3  F093         	call	_i2c_set_frequency
 19540                           
 19541                           ;i2c.c: 488: _i2c_wait_idle();
 19542  012FBE  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 19543                           
 19544                           ;i2c.c: 489: _i2c_start();
 19545  012FC2  EC6D  F0A1         	call	__i2c_start	;wreg free
 19546                           
 19547                           ;i2c.c: 490: _i2c_wait_idle();
 19548  012FC6  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 19549                           
 19550                           ;i2c.c: 491: _i2c_send(0b11010000 | 0x01);
 19551  012FCA  0ED1               	movlw	209
 19552  012FCC  EC64  F0A1         	call	__i2c_send
 19553                           
 19554                           ;i2c.c: 492: _i2c_wait_idle();
 19555  012FD0  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 19556                           
 19557                           ;i2c.c: 493: result = _i2c_get();
 19558  012FD4  EC55  F0A1         	call	__i2c_get	;wreg free
 19559  012FD8  0100               	movlb	0	; () banked
 19560  012FDA  6F67               	movwf	??_i2c_adc_read& (0+255),b
 19561  012FDC  0100               	movlb	0	; () banked
 19562  012FDE  5167               	movf	??_i2c_adc_read& (0+255),w,b
 19563  012FE0  0100               	movlb	0	; () banked
 19564  012FE2  6F68               	movwf	i2c_adc_read@result& (0+255),b
 19565  012FE4  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 19566                           
 19567                           ; BSR set to: 0
 19568                           ;i2c.c: 494: result <<= 8;
 19569  012FE6  0100               	movlb	0	; () banked
 19570  012FE8  5168               	movf	i2c_adc_read@result& (0+255),w,b
 19571  012FEA  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 19572  012FEC  6B68               	clrf	i2c_adc_read@result& (0+255),b
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;i2c.c: 495: _i2c_acknowledge();
 19576  012FEE  EC5A  F0A1         	call	__i2c_acknowledge	;wreg free
 19577                           
 19578                           ;i2c.c: 496: result |= _i2c_get();
 19579  012FF2  EC55  F0A1         	call	__i2c_get	;wreg free
 19580  012FF6  0100               	movlb	0	; () banked
 19581  012FF8  6F67               	movwf	??_i2c_adc_read& (0+255),b
 19582  012FFA  0100               	movlb	0	; () banked
 19583  012FFC  5167               	movf	??_i2c_adc_read& (0+255),w,b
 19584  012FFE  0100               	movlb	0	; () banked
 19585  013000  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 19586                           
 19587                           ; BSR set to: 0
 19588                           ;i2c.c: 497: _i2c_not_acknowledge();
 19589  013002  EC50  F0A1         	call	__i2c_not_acknowledge	;wreg free
 19590                           
 19591                           ;i2c.c: 498: _i2c_stop();
 19592  013006  EC69  F0A1         	call	__i2c_stop	;wreg free
 19593                           
 19594                           ;i2c.c: 500: return result;
 19595  01300A  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 19596  01300E  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 19597  013012  0012               	return	
 19598  013014                     __end_of_i2c_adc_read:
 19599                           	opt stack 0
 19600                           tblptru	equ	0xFF8
 19601                           tblptrh	equ	0xFF7
 19602                           tblptrl	equ	0xFF6
 19603                           tablat	equ	0xFF5
 19604                           prodh	equ	0xFF4
 19605                           prodl	equ	0xFF3
 19606                           intcon	equ	0xFF2
 19607                           intcon2	equ	0xFF1
 19608                           intcon3	equ	0xFF0
 19609                           postinc0	equ	0xFEE
 19610                           wreg	equ	0xFE8
 19611                           indf1	equ	0xFE7
 19612                           postinc1	equ	0xFE6
 19613                           postdec1	equ	0xFE5
 19614                           plusw1	equ	0xFE3
 19615                           fsr1h	equ	0xFE2
 19616                           fsr1l	equ	0xFE1
 19617                           indf2	equ	0xFDF
 19618                           postinc2	equ	0xFDE
 19619                           postdec2	equ	0xFDD
 19620                           plusw2	equ	0xFDB
 19621                           fsr2h	equ	0xFDA
 19622                           fsr2l	equ	0xFD9
 19623                           status	equ	0xFD8
 19624                           
 19625 ;; *************** function __i2c_not_acknowledge *****************
 19626 ;; Defined at:
 19627 ;;		line 87 in file "i2c.c"
 19628 ;; Parameters:    Size  Location     Type
 19629 ;;		None
 19630 ;; Auto vars:     Size  Location     Type
 19631 ;;		None
 19632 ;; Return value:  Size  Location     Type
 19633 ;;                  1    wreg      void 
 19634 ;; Registers used:
 19635 ;;		None
 19636 ;; Tracked objects:
 19637 ;;		On entry : 0/0
 19638 ;;		On exit  : 0/0
 19639 ;;		Unchanged: 0/0
 19640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19645 ;;Total ram usage:        0 bytes
 19646 ;; Hardware stack levels used:    1
 19647 ;; Hardware stack levels required when called:   10
 19648 ;; This function calls:
 19649 ;;		Nothing
 19650 ;; This function is called by:
 19651 ;;		__i2c_read
 19652 ;;		_i2c_adc_read
 19653 ;; This function uses a non-reentrant model
 19654 ;;
 19655                           
 19656                           	psect	text91
 19657  0142A0                     __ptext91:
 19658                           	opt stack 0
 19659  0142A0                     __i2c_not_acknowledge:
 19660                           	opt stack 15
 19661                           
 19662                           ;i2c.c: 89: SSP1CON2bits.ACKDT = 1;
 19663                           
 19664                           ;incstack = 0
 19665  0142A0  8AC5               	bsf	4037,5,c	;volatile
 19666                           
 19667                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
 19668  0142A2  88C5               	bsf	4037,4,c	;volatile
 19669  0142A4                     l1521:
 19670  0142A4  A8C5               	btfss	4037,4,c	;volatile
 19671  0142A6  0012               	return	
 19672  0142A8  D7FD               	goto	l1521
 19673  0142AA                     __end_of__i2c_not_acknowledge:
 19674                           	opt stack 0
 19675                           tblptru	equ	0xFF8
 19676                           tblptrh	equ	0xFF7
 19677                           tblptrl	equ	0xFF6
 19678                           tablat	equ	0xFF5
 19679                           prodh	equ	0xFF4
 19680                           prodl	equ	0xFF3
 19681                           intcon	equ	0xFF2
 19682                           intcon2	equ	0xFF1
 19683                           intcon3	equ	0xFF0
 19684                           postinc0	equ	0xFEE
 19685                           wreg	equ	0xFE8
 19686                           indf1	equ	0xFE7
 19687                           postinc1	equ	0xFE6
 19688                           postdec1	equ	0xFE5
 19689                           plusw1	equ	0xFE3
 19690                           fsr1h	equ	0xFE2
 19691                           fsr1l	equ	0xFE1
 19692                           indf2	equ	0xFDF
 19693                           postinc2	equ	0xFDE
 19694                           postdec2	equ	0xFDD
 19695                           plusw2	equ	0xFDB
 19696                           fsr2h	equ	0xFDA
 19697                           fsr2l	equ	0xFD9
 19698                           status	equ	0xFD8
 19699                           
 19700 ;; *************** function __i2c_get *****************
 19701 ;; Defined at:
 19702 ;;		line 64 in file "i2c.c"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;		None
 19705 ;; Auto vars:     Size  Location     Type
 19706 ;;		None
 19707 ;; Return value:  Size  Location     Type
 19708 ;;                  1    wreg      unsigned char 
 19709 ;; Registers used:
 19710 ;;		wreg, status,2
 19711 ;; Tracked objects:
 19712 ;;		On entry : 0/0
 19713 ;;		On exit  : 0/0
 19714 ;;		Unchanged: 0/0
 19715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19720 ;;Total ram usage:        0 bytes
 19721 ;; Hardware stack levels used:    1
 19722 ;; Hardware stack levels required when called:   10
 19723 ;; This function calls:
 19724 ;;		Nothing
 19725 ;; This function is called by:
 19726 ;;		__i2c_read
 19727 ;;		_i2c_adc_read
 19728 ;; This function uses a non-reentrant model
 19729 ;;
 19730                           
 19731                           	psect	text92
 19732  0142AA                     __ptext92:
 19733                           	opt stack 0
 19734  0142AA                     __i2c_get:
 19735                           	opt stack 15
 19736                           
 19737                           ;i2c.c: 66: SSP1CON2bits.RCEN = 1 ;
 19738                           
 19739                           ;incstack = 0
 19740  0142AA  86C5               	bsf	4037,3,c	;volatile
 19741  0142AC                     l1503:
 19742  0142AC  B6C5               	btfsc	4037,3,c	;volatile
 19743  0142AE  D7FE               	goto	l1503
 19744                           
 19745                           ;i2c.c: 68: return SSP1BUF;
 19746  0142B0  50C9               	movf	4041,w,c	;volatile
 19747  0142B2  0012               	return	
 19748  0142B4                     __end_of__i2c_get:
 19749                           	opt stack 0
 19750                           tblptru	equ	0xFF8
 19751                           tblptrh	equ	0xFF7
 19752                           tblptrl	equ	0xFF6
 19753                           tablat	equ	0xFF5
 19754                           prodh	equ	0xFF4
 19755                           prodl	equ	0xFF3
 19756                           intcon	equ	0xFF2
 19757                           intcon2	equ	0xFF1
 19758                           intcon3	equ	0xFF0
 19759                           postinc0	equ	0xFEE
 19760                           wreg	equ	0xFE8
 19761                           indf1	equ	0xFE7
 19762                           postinc1	equ	0xFE6
 19763                           postdec1	equ	0xFE5
 19764                           plusw1	equ	0xFE3
 19765                           fsr1h	equ	0xFE2
 19766                           fsr1l	equ	0xFE1
 19767                           indf2	equ	0xFDF
 19768                           postinc2	equ	0xFDE
 19769                           postdec2	equ	0xFDD
 19770                           plusw2	equ	0xFDB
 19771                           fsr2h	equ	0xFDA
 19772                           fsr2l	equ	0xFD9
 19773                           status	equ	0xFD8
 19774                           
 19775 ;; *************** function __i2c_acknowledge *****************
 19776 ;; Defined at:
 19777 ;;		line 79 in file "i2c.c"
 19778 ;; Parameters:    Size  Location     Type
 19779 ;;		None
 19780 ;; Auto vars:     Size  Location     Type
 19781 ;;		None
 19782 ;; Return value:  Size  Location     Type
 19783 ;;                  1    wreg      void 
 19784 ;; Registers used:
 19785 ;;		None
 19786 ;; Tracked objects:
 19787 ;;		On entry : 0/0
 19788 ;;		On exit  : 0/0
 19789 ;;		Unchanged: 0/0
 19790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19795 ;;Total ram usage:        0 bytes
 19796 ;; Hardware stack levels used:    1
 19797 ;; Hardware stack levels required when called:   10
 19798 ;; This function calls:
 19799 ;;		Nothing
 19800 ;; This function is called by:
 19801 ;;		__i2c_read
 19802 ;;		_i2c_adc_read
 19803 ;; This function uses a non-reentrant model
 19804 ;;
 19805                           
 19806                           	psect	text93
 19807  0142B4                     __ptext93:
 19808                           	opt stack 0
 19809  0142B4                     __i2c_acknowledge:
 19810                           	opt stack 15
 19811                           
 19812                           ;i2c.c: 81: SSP1CON2bits.ACKDT = 0;
 19813                           
 19814                           ;incstack = 0
 19815  0142B4  9AC5               	bcf	4037,5,c	;volatile
 19816                           
 19817                           ;i2c.c: 82: SSP1CON2bits.ACKEN = 1;
 19818  0142B6  88C5               	bsf	4037,4,c	;volatile
 19819  0142B8                     l1515:
 19820  0142B8  A8C5               	btfss	4037,4,c	;volatile
 19821  0142BA  0012               	return	
 19822  0142BC  D7FD               	goto	l1515
 19823  0142BE                     __end_of__i2c_acknowledge:
 19824                           	opt stack 0
 19825                           tblptru	equ	0xFF8
 19826                           tblptrh	equ	0xFF7
 19827                           tblptrl	equ	0xFF6
 19828                           tablat	equ	0xFF5
 19829                           prodh	equ	0xFF4
 19830                           prodl	equ	0xFF3
 19831                           intcon	equ	0xFF2
 19832                           intcon2	equ	0xFF1
 19833                           intcon3	equ	0xFF0
 19834                           postinc0	equ	0xFEE
 19835                           wreg	equ	0xFE8
 19836                           indf1	equ	0xFE7
 19837                           postinc1	equ	0xFE6
 19838                           postdec1	equ	0xFE5
 19839                           plusw1	equ	0xFE3
 19840                           fsr1h	equ	0xFE2
 19841                           fsr1l	equ	0xFE1
 19842                           indf2	equ	0xFDF
 19843                           postinc2	equ	0xFDE
 19844                           postdec2	equ	0xFDD
 19845                           plusw2	equ	0xFDB
 19846                           fsr2h	equ	0xFDA
 19847                           fsr2l	equ	0xFD9
 19848                           status	equ	0xFD8
 19849                           
 19850 ;; *************** function _display_update *****************
 19851 ;; Defined at:
 19852 ;;		line 174 in file "display.c"
 19853 ;; Parameters:    Size  Location     Type
 19854 ;;		None
 19855 ;; Auto vars:     Size  Location     Type
 19856 ;;		None
 19857 ;; Return value:  Size  Location     Type
 19858 ;;                  1    wreg      void 
 19859 ;; Registers used:
 19860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19861 ;; Tracked objects:
 19862 ;;		On entry : 0/0
 19863 ;;		On exit  : 0/0
 19864 ;;		Unchanged: 0/0
 19865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19870 ;;Total ram usage:        0 bytes
 19871 ;; Hardware stack levels used:    1
 19872 ;; Hardware stack levels required when called:   14
 19873 ;; This function calls:
 19874 ;;		_i2c_display_cursor
 19875 ;;		_i2c_display_write_fixed
 19876 ;; This function is called by:
 19877 ;;		_main
 19878 ;; This function uses a non-reentrant model
 19879 ;;
 19880                           
 19881                           	psect	text94
 19882  011D6E                     __ptext94:
 19883                           	opt stack 0
 19884  011D6E                     _display_update:
 19885                           	opt stack 16
 19886                           
 19887                           ;display.c: 176: i2c_display_cursor(0, 0);
 19888                           
 19889                           ;incstack = 0
 19890  011D6E  0E00               	movlw	0
 19891  011D70  0100               	movlb	0	; () banked
 19892  011D72  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19893  011D74  0E00               	movlw	0
 19894  011D76  ECC7  F09C         	call	_i2c_display_cursor
 19895                           
 19896                           ;display.c: 177: i2c_display_write_fixed(&display_content[0][0], 20);
 19897  011D7A  0E54               	movlw	low _display_content
 19898  011D7C  0100               	movlb	0	; () banked
 19899  011D7E  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19900  011D80  0E03               	movlw	high _display_content
 19901  011D82  0100               	movlb	0	; () banked
 19902  011D84  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19903  011D86  0E14               	movlw	20
 19904  011D88  0100               	movlb	0	; () banked
 19905  011D8A  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19906  011D8C  ECF6  F095         	call	_i2c_display_write_fixed	;wreg free
 19907                           
 19908                           ;display.c: 178: i2c_display_cursor(1, 0);
 19909  011D90  0E00               	movlw	0
 19910  011D92  0100               	movlb	0	; () banked
 19911  011D94  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19912  011D96  0E01               	movlw	1
 19913  011D98  ECC7  F09C         	call	_i2c_display_cursor
 19914                           
 19915                           ;display.c: 179: i2c_display_write_fixed(&display_content[1][0], 20);
 19916  011D9C  0E68               	movlw	low (_display_content+20)
 19917  011D9E  0100               	movlb	0	; () banked
 19918  011DA0  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19919  011DA2  0E03               	movlw	high (_display_content+20)
 19920  011DA4  0100               	movlb	0	; () banked
 19921  011DA6  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19922  011DA8  0E14               	movlw	20
 19923  011DAA  0100               	movlb	0	; () banked
 19924  011DAC  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19925  011DAE  ECF6  F095         	call	_i2c_display_write_fixed	;wreg free
 19926                           
 19927                           ;display.c: 180: i2c_display_cursor(2, 0);
 19928  011DB2  0E00               	movlw	0
 19929  011DB4  0100               	movlb	0	; () banked
 19930  011DB6  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19931  011DB8  0E02               	movlw	2
 19932  011DBA  ECC7  F09C         	call	_i2c_display_cursor
 19933                           
 19934                           ;display.c: 181: i2c_display_write_fixed(&display_content[2][0], 20);
 19935  011DBE  0E7C               	movlw	low (_display_content+40)
 19936  011DC0  0100               	movlb	0	; () banked
 19937  011DC2  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19938  011DC4  0E03               	movlw	high (_display_content+40)
 19939  011DC6  0100               	movlb	0	; () banked
 19940  011DC8  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19941  011DCA  0E14               	movlw	20
 19942  011DCC  0100               	movlb	0	; () banked
 19943  011DCE  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19944  011DD0  ECF6  F095         	call	_i2c_display_write_fixed	;wreg free
 19945                           
 19946                           ;display.c: 182: i2c_display_cursor(3, 0);
 19947  011DD4  0E00               	movlw	0
 19948  011DD6  0100               	movlb	0	; () banked
 19949  011DD8  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19950  011DDA  0E03               	movlw	3
 19951  011DDC  ECC7  F09C         	call	_i2c_display_cursor
 19952                           
 19953                           ;display.c: 183: i2c_display_write_fixed(&display_content[3][0], 20);
 19954  011DE0  0E90               	movlw	low (_display_content+60)
 19955  011DE2  0100               	movlb	0	; () banked
 19956  011DE4  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19957  011DE6  0E03               	movlw	high (_display_content+60)
 19958  011DE8  0100               	movlb	0	; () banked
 19959  011DEA  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19960  011DEC  0E14               	movlw	20
 19961  011DEE  0100               	movlb	0	; () banked
 19962  011DF0  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19963  011DF2  ECF6  F095         	call	_i2c_display_write_fixed	;wreg free
 19964  011DF6  0012               	return		;funcret
 19965  011DF8                     __end_of_display_update:
 19966                           	opt stack 0
 19967                           tblptru	equ	0xFF8
 19968                           tblptrh	equ	0xFF7
 19969                           tblptrl	equ	0xFF6
 19970                           tablat	equ	0xFF5
 19971                           prodh	equ	0xFF4
 19972                           prodl	equ	0xFF3
 19973                           intcon	equ	0xFF2
 19974                           intcon2	equ	0xFF1
 19975                           intcon3	equ	0xFF0
 19976                           postinc0	equ	0xFEE
 19977                           wreg	equ	0xFE8
 19978                           indf1	equ	0xFE7
 19979                           postinc1	equ	0xFE6
 19980                           postdec1	equ	0xFE5
 19981                           plusw1	equ	0xFE3
 19982                           fsr1h	equ	0xFE2
 19983                           fsr1l	equ	0xFE1
 19984                           indf2	equ	0xFDF
 19985                           postinc2	equ	0xFDE
 19986                           postdec2	equ	0xFDD
 19987                           plusw2	equ	0xFDB
 19988                           fsr2h	equ	0xFDA
 19989                           fsr2l	equ	0xFD9
 19990                           status	equ	0xFD8
 19991                           
 19992 ;; *************** function _i2c_display_write_fixed *****************
 19993 ;; Defined at:
 19994 ;;		line 364 in file "i2c.c"
 19995 ;; Parameters:    Size  Location     Type
 19996 ;;  data            2    5[BANK0 ] PTR unsigned char 
 19997 ;;		 -> display_content(80), 
 19998 ;;  length          1    7[BANK0 ] unsigned char 
 19999 ;; Auto vars:     Size  Location     Type
 20000 ;;  pos             1    8[BANK0 ] unsigned char 
 20001 ;; Return value:  Size  Location     Type
 20002 ;;                  1    wreg      void 
 20003 ;; Registers used:
 20004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20005 ;; Tracked objects:
 20006 ;;		On entry : 0/0
 20007 ;;		On exit  : 0/0
 20008 ;;		Unchanged: 0/0
 20009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20010 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20013 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20014 ;;Total ram usage:        4 bytes
 20015 ;; Hardware stack levels used:    1
 20016 ;; Hardware stack levels required when called:   11
 20017 ;; This function calls:
 20018 ;;		__i2c_send
 20019 ;;		__i2c_start
 20020 ;;		__i2c_stop
 20021 ;;		__i2c_wait_idle
 20022 ;;		_i2c_set_frequency
 20023 ;; This function is called by:
 20024 ;;		_display_update
 20025 ;; This function uses a non-reentrant model
 20026 ;;
 20027                           
 20028                           	psect	text95
 20029  012BEC                     __ptext95:
 20030                           	opt stack 0
 20031  012BEC                     _i2c_display_write_fixed:
 20032                           	opt stack 18
 20033                           
 20034                           ;i2c.c: 366: uint8_t pos;
 20035                           ;i2c.c: 369: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 20036                           
 20037                           ;incstack = 0
 20038  012BEC  0E00               	movlw	0
 20039  012BEE  ECE3  F093         	call	_i2c_set_frequency
 20040                           
 20041                           ;i2c.c: 371: _i2c_wait_idle();
 20042  012BF2  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 20043                           
 20044                           ;i2c.c: 372: _i2c_start();
 20045  012BF6  EC6D  F0A1         	call	__i2c_start	;wreg free
 20046                           
 20047                           ;i2c.c: 373: _i2c_wait_idle();
 20048  012BFA  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 20049                           
 20050                           ;i2c.c: 374: _i2c_send(0b01111000);
 20051  012BFE  0E78               	movlw	120
 20052  012C00  EC64  F0A1         	call	__i2c_send
 20053                           
 20054                           ;i2c.c: 375: _i2c_wait_idle();
 20055  012C04  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 20056                           
 20057                           ;i2c.c: 376: _i2c_send(0b01000000);
 20058  012C08  0E40               	movlw	64
 20059  012C0A  EC64  F0A1         	call	__i2c_send
 20060                           
 20061                           ;i2c.c: 377: _i2c_wait_idle();
 20062  012C0E  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 20063                           
 20064                           ;i2c.c: 380: for(pos=0; pos<length; ++pos)
 20065  012C12  0E00               	movlw	0
 20066  012C14  0100               	movlb	0	; () banked
 20067  012C16  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 20068  012C18  D012               	goto	l20889
 20069  012C1A                     l20883:
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;i2c.c: 381: {
 20073                           ;i2c.c: 382: _i2c_send(data[pos]);
 20074  012C1A  0100               	movlb	0	; () banked
 20075  012C1C  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 20076  012C1E  0D01               	mullw	1
 20077  012C20  50F3               	movf	prodl,w,c
 20078  012C22  0100               	movlb	0	; () banked
 20079  012C24  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 20080  012C26  6ED9               	movwf	fsr2l,c
 20081  012C28  50F4               	movf	prodh,w,c
 20082  012C2A  0100               	movlb	0	; () banked
 20083  012C2C  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 20084  012C2E  6EDA               	movwf	fsr2h,c
 20085  012C30  50DF               	movf	indf2,w,c
 20086  012C32  EC64  F0A1         	call	__i2c_send
 20087                           
 20088                           ;i2c.c: 383: _i2c_wait_idle();
 20089  012C36  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 20090  012C3A  0100               	movlb	0	; () banked
 20091  012C3C  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 20092  012C3E                     l20889:
 20093                           
 20094                           ; BSR set to: 0
 20095  012C3E  0100               	movlb	0	; () banked
 20096  012C40  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 20097  012C42  0100               	movlb	0	; () banked
 20098  012C44  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 20099  012C46  A0D8               	btfss	status,0,c
 20100  012C48  D7E8               	goto	l20883
 20101                           
 20102                           ; BSR set to: 0
 20103                           ;i2c.c: 384: }
 20104                           ;i2c.c: 386: _i2c_stop();
 20105                           
 20106                           ; BSR set to: 0
 20107  012C4A  EC69  F0A1         	call	__i2c_stop	;wreg free
 20108  012C4E  0012               	return		;funcret
 20109  012C50                     __end_of_i2c_display_write_fixed:
 20110                           	opt stack 0
 20111                           tblptru	equ	0xFF8
 20112                           tblptrh	equ	0xFF7
 20113                           tblptrl	equ	0xFF6
 20114                           tablat	equ	0xFF5
 20115                           prodh	equ	0xFF4
 20116                           prodl	equ	0xFF3
 20117                           intcon	equ	0xFF2
 20118                           intcon2	equ	0xFF1
 20119                           intcon3	equ	0xFF0
 20120                           postinc0	equ	0xFEE
 20121                           wreg	equ	0xFE8
 20122                           indf1	equ	0xFE7
 20123                           postinc1	equ	0xFE6
 20124                           postdec1	equ	0xFE5
 20125                           plusw1	equ	0xFE3
 20126                           fsr1h	equ	0xFE2
 20127                           fsr1l	equ	0xFE1
 20128                           indf2	equ	0xFDF
 20129                           postinc2	equ	0xFDE
 20130                           postdec2	equ	0xFDD
 20131                           plusw2	equ	0xFDB
 20132                           fsr2h	equ	0xFDA
 20133                           fsr2l	equ	0xFD9
 20134                           status	equ	0xFD8
 20135                           
 20136 ;; *************** function _i2c_display_cursor *****************
 20137 ;; Defined at:
 20138 ;;		line 324 in file "i2c.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;  line            1    wreg     unsigned char 
 20141 ;;  position        1   13[BANK0 ] unsigned char 
 20142 ;; Auto vars:     Size  Location     Type
 20143 ;;  line            1   14[BANK0 ] unsigned char 
 20144 ;;  address         1   15[BANK0 ] unsigned char 
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  1    wreg      void 
 20147 ;; Registers used:
 20148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20154 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20158 ;;Total ram usage:        3 bytes
 20159 ;; Hardware stack levels used:    1
 20160 ;; Hardware stack levels required when called:   13
 20161 ;; This function calls:
 20162 ;;		__ic2_display_set_address
 20163 ;;		_i2c_set_frequency
 20164 ;; This function is called by:
 20165 ;;		_display_update
 20166 ;; This function uses a non-reentrant model
 20167 ;;
 20168                           
 20169                           	psect	text96
 20170  01398E                     __ptext96:
 20171                           	opt stack 0
 20172  01398E                     _i2c_display_cursor:
 20173                           	opt stack 16
 20174                           
 20175                           ;incstack = 0
 20176                           ;i2c_display_cursor@line stored from wreg
 20177  01398E  0100               	movlb	0	; () banked
 20178  013990  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 20179                           
 20180                           ;i2c.c: 326: uint8_t address;
 20181                           ;i2c.c: 329: line &= 0b11;
 20182  013992  0E03               	movlw	3
 20183  013994  0100               	movlb	0	; () banked
 20184  013996  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 20185                           
 20186                           ;i2c.c: 330: address = line<<5;
 20187  013998  0100               	movlb	0	; () banked
 20188  01399A  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 20189  01399C  46E8               	rlncf	wreg,f,c
 20190  01399E  0BE0               	andlw	224
 20191  0139A0  0100               	movlb	0	; () banked
 20192  0139A2  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 20193                           
 20194                           ;i2c.c: 331: position &= 0b11111;
 20195  0139A4  0E1F               	movlw	31
 20196  0139A6  0100               	movlb	0	; () banked
 20197  0139A8  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 20198                           
 20199                           ;i2c.c: 332: address |= position;
 20200  0139AA  0100               	movlb	0	; () banked
 20201  0139AC  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 20202  0139AE  0100               	movlb	0	; () banked
 20203  0139B0  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;i2c.c: 335: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 20207  0139B2  0E00               	movlw	0
 20208  0139B4  ECE3  F093         	call	_i2c_set_frequency
 20209                           
 20210                           ;i2c.c: 338: _ic2_display_set_address(address);
 20211  0139B8  0100               	movlb	0	; () banked
 20212  0139BA  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 20213  0139BC  ECE1  F09C         	call	__ic2_display_set_address
 20214  0139C0  0012               	return		;funcret
 20215  0139C2                     __end_of_i2c_display_cursor:
 20216                           	opt stack 0
 20217                           tblptru	equ	0xFF8
 20218                           tblptrh	equ	0xFF7
 20219                           tblptrl	equ	0xFF6
 20220                           tablat	equ	0xFF5
 20221                           prodh	equ	0xFF4
 20222                           prodl	equ	0xFF3
 20223                           intcon	equ	0xFF2
 20224                           intcon2	equ	0xFF1
 20225                           intcon3	equ	0xFF0
 20226                           postinc0	equ	0xFEE
 20227                           wreg	equ	0xFE8
 20228                           indf1	equ	0xFE7
 20229                           postinc1	equ	0xFE6
 20230                           postdec1	equ	0xFE5
 20231                           plusw1	equ	0xFE3
 20232                           fsr1h	equ	0xFE2
 20233                           fsr1l	equ	0xFE1
 20234                           indf2	equ	0xFDF
 20235                           postinc2	equ	0xFDE
 20236                           postdec2	equ	0xFDD
 20237                           plusw2	equ	0xFDB
 20238                           fsr2h	equ	0xFDA
 20239                           fsr2l	equ	0xFD9
 20240                           status	equ	0xFD8
 20241                           
 20242 ;; *************** function __ic2_display_set_address *****************
 20243 ;; Defined at:
 20244 ;;		line 311 in file "i2c.c"
 20245 ;; Parameters:    Size  Location     Type
 20246 ;;  address         1    wreg     unsigned char 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;  address         1   10[BANK0 ] unsigned char 
 20249 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 20250 ;; Return value:  Size  Location     Type
 20251 ;;                  1    wreg      void 
 20252 ;; Registers used:
 20253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20254 ;; Tracked objects:
 20255 ;;		On entry : 0/0
 20256 ;;		On exit  : 0/0
 20257 ;;		Unchanged: 0/0
 20258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20260 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20262 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20263 ;;Total ram usage:        3 bytes
 20264 ;; Hardware stack levels used:    1
 20265 ;; Hardware stack levels required when called:   12
 20266 ;; This function calls:
 20267 ;;		__i2c_write
 20268 ;;		_i2c_set_frequency
 20269 ;; This function is called by:
 20270 ;;		_i2c_display_cursor
 20271 ;; This function uses a non-reentrant model
 20272 ;;
 20273                           
 20274                           	psect	text97
 20275  0139C2                     __ptext97:
 20276                           	opt stack 0
 20277  0139C2                     __ic2_display_set_address:
 20278                           	opt stack 16
 20279                           
 20280                           ;incstack = 0
 20281                           ;__ic2_display_set_address@address stored from wreg
 20282  0139C2  0100               	movlb	0	; () banked
 20283  0139C4  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 20284                           
 20285                           ;i2c.c: 313: uint8_t data_array[2];
 20286                           ;i2c.c: 314: data_array[0] = 0b00000000;
 20287  0139C6  0E00               	movlw	0
 20288  0139C8  0100               	movlb	0	; () banked
 20289  0139CA  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;i2c.c: 315: data_array[1] = 0b10000000 | address;
 20293  0139CC  0100               	movlb	0	; () banked
 20294  0139CE  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 20295  0139D0  0980               	iorlw	128
 20296  0139D2  0100               	movlb	0	; () banked
 20297  0139D4  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 20298                           
 20299                           ; BSR set to: 0
 20300                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 20301  0139D6  0E00               	movlw	0
 20302  0139D8  ECE3  F093         	call	_i2c_set_frequency
 20303                           
 20304                           ;i2c.c: 321: _i2c_write(0b01111000, &data_array[0], 2);
 20305  0139DC  0E6B               	movlw	low __ic2_display_set_address@data_array
 20306  0139DE  0100               	movlb	0	; () banked
 20307  0139E0  6F65               	movwf	__i2c_write@data& (0+255),b
 20308  0139E2  0E00               	movlw	high __ic2_display_set_address@data_array
 20309  0139E4  0100               	movlb	0	; () banked
 20310  0139E6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 20311  0139E8  0E02               	movlw	2
 20312  0139EA  0100               	movlb	0	; () banked
 20313  0139EC  6F67               	movwf	__i2c_write@length& (0+255),b
 20314  0139EE  0E78               	movlw	120
 20315  0139F0  EC93  F098         	call	__i2c_write
 20316  0139F4  0012               	return		;funcret
 20317  0139F6                     __end_of__ic2_display_set_address:
 20318                           	opt stack 0
 20319                           tblptru	equ	0xFF8
 20320                           tblptrh	equ	0xFF7
 20321                           tblptrl	equ	0xFF6
 20322                           tablat	equ	0xFF5
 20323                           prodh	equ	0xFF4
 20324                           prodl	equ	0xFF3
 20325                           intcon	equ	0xFF2
 20326                           intcon2	equ	0xFF1
 20327                           intcon3	equ	0xFF0
 20328                           postinc0	equ	0xFEE
 20329                           wreg	equ	0xFE8
 20330                           indf1	equ	0xFE7
 20331                           postinc1	equ	0xFE6
 20332                           postdec1	equ	0xFE5
 20333                           plusw1	equ	0xFE3
 20334                           fsr1h	equ	0xFE2
 20335                           fsr1l	equ	0xFE1
 20336                           indf2	equ	0xFDF
 20337                           postinc2	equ	0xFDE
 20338                           postdec2	equ	0xFDD
 20339                           plusw2	equ	0xFDB
 20340                           fsr2h	equ	0xFDA
 20341                           fsr2l	equ	0xFD9
 20342                           status	equ	0xFD8
 20343                           
 20344 ;; *************** function _display_prepare *****************
 20345 ;; Defined at:
 20346 ;;		line 108 in file "display.c"
 20347 ;; Parameters:    Size  Location     Type
 20348 ;;  mode            1    wreg     unsigned char 
 20349 ;; Auto vars:     Size  Location     Type
 20350 ;;  mode            1  116[BANK0 ] unsigned char 
 20351 ;; Return value:  Size  Location     Type
 20352 ;;                  1    wreg      void 
 20353 ;; Registers used:
 20354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20355 ;; Tracked objects:
 20356 ;;		On entry : 0/0
 20357 ;;		On exit  : 0/0
 20358 ;;		Unchanged: 0/0
 20359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20363 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20364 ;;Total ram usage:        3 bytes
 20365 ;; Hardware stack levels used:    1
 20366 ;; Hardware stack levels required when called:   15
 20367 ;; This function calls:
 20368 ;;		__display_charger
 20369 ;;		__display_clear
 20370 ;;		__display_efficiency
 20371 ;;		__display_inout
 20372 ;;		__display_outputs
 20373 ;;		__display_temperature
 20374 ;;		__display_time
 20375 ;;		__display_usb
 20376 ;; This function is called by:
 20377 ;;		_main
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381                           	psect	text98
 20382  011E80                     __ptext98:
 20383                           	opt stack 0
 20384  011E80                     _display_prepare:
 20385                           	opt stack 15
 20386                           
 20387                           ;incstack = 0
 20388                           ;display_prepare@mode stored from wreg
 20389  011E80  0100               	movlb	0	; () banked
 20390  011E82  6FD4               	movwf	display_prepare@mode& (0+255),b
 20391                           
 20392                           ;display.c: 110: _display_clear();
 20393  011E84  EC28  F096         	call	__display_clear	;wreg free
 20394                           
 20395                           ;display.c: 112: switch(mode&0xF0)
 20396  011E88  D01C               	goto	l22609
 20397  011E8A                     l22593:
 20398                           
 20399                           ;display.c: 115: _display_inout();
 20400  011E8A  EC3C  F06A         	call	__display_inout	;wreg free
 20401                           
 20402                           ;display.c: 116: break;
 20403  011E8E  0012               	return	
 20404  011E90                     l22595:
 20405                           
 20406                           ;display.c: 118: _display_time(mode);
 20407  011E90  0100               	movlb	0	; () banked
 20408  011E92  51D4               	movf	display_prepare@mode& (0+255),w,b
 20409  011E94  EC33  F04A         	call	__display_time
 20410                           
 20411                           ;display.c: 119: break;
 20412  011E98  0012               	return	
 20413  011E9A                     l22597:
 20414                           
 20415                           ;display.c: 121: _display_usb();
 20416  011E9A  EC28  F06F         	call	__display_usb	;wreg free
 20417                           
 20418                           ;display.c: 122: break;
 20419  011E9E  0012               	return	
 20420  011EA0                     l22599:
 20421                           
 20422                           ;display.c: 124: _display_outputs(mode);
 20423  011EA0  0100               	movlb	0	; () banked
 20424  011EA2  51D4               	movf	display_prepare@mode& (0+255),w,b
 20425  011EA4  EC10  F069         	call	__display_outputs
 20426                           
 20427                           ;display.c: 125: break;
 20428  011EA8  0012               	return	
 20429  011EAA                     l22601:
 20430                           
 20431                           ;display.c: 127: _display_charger();
 20432  011EAA  ECBF  F05D         	call	__display_charger	;wreg free
 20433                           
 20434                           ;display.c: 128: break;
 20435  011EAE  0012               	return	
 20436  011EB0                     l22603:
 20437                           
 20438                           ;display.c: 130: _display_efficiency();
 20439  011EB0  EC4B  F05A         	call	__display_efficiency	;wreg free
 20440                           
 20441                           ;display.c: 131: break;
 20442  011EB4  0012               	return	
 20443  011EB6                     l22605:
 20444                           
 20445                           ;display.c: 133: _display_temperature();
 20446  011EB6  EC54  F06C         	call	__display_temperature	;wreg free
 20447                           
 20448                           ;display.c: 134: break;
 20449  011EBA  0012               	return	
 20450  011EBC                     l22607:
 20451                           
 20452                           ;display.c: 136: _display_inout();
 20453  011EBC  EC3C  F06A         	call	__display_inout	;wreg free
 20454                           
 20455                           ;display.c: 137: }
 20456  011EC0  0012               	return	
 20457  011EC2                     l22609:
 20458  011EC2  0100               	movlb	0	; () banked
 20459  011EC4  51D4               	movf	display_prepare@mode& (0+255),w,b
 20460  011EC6  0BF0               	andlw	240
 20461  011EC8  0100               	movlb	0	; () banked
 20462  011ECA  6FD2               	movwf	??_display_prepare& (0+255),b
 20463  011ECC  6BD3               	clrf	(??_display_prepare+1)& (0+255),b
 20464                           
 20465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20466                           ; Switch size 1, requested type "space"
 20467                           ; Number of cases is 1, Range of values is 0 to 0
 20468                           ; switch strategies available:
 20469                           ; Name         Instructions Cycles
 20470                           ; simple_byte            4     3 (average)
 20471                           ;	Chosen strategy is simple_byte
 20472  011ECE  0100               	movlb	0	; () banked
 20473  011ED0  51D3               	movf	(??_display_prepare+1)& (0+255),w,b
 20474  011ED2  0A00               	xorlw	0	; case 0
 20475  011ED4  A4D8               	btfss	status,2,c
 20476  011ED6  D7F2               	goto	l22607
 20477                           
 20478                           ; BSR set to: 0
 20479                           ; Switch size 1, requested type "space"
 20480                           ; Number of cases is 7, Range of values is 0 to 96
 20481                           ; switch strategies available:
 20482                           ; Name         Instructions Cycles
 20483                           ; simple_byte           22    12 (average)
 20484                           ;	Chosen strategy is simple_byte
 20485  011ED8  0100               	movlb	0	; () banked
 20486  011EDA  51D2               	movf	??_display_prepare& (0+255),w,b
 20487  011EDC  0A00               	xorlw	0	; case 0
 20488  011EDE  B4D8               	btfsc	status,2,c
 20489  011EE0  D7D4               	goto	l22593
 20490  011EE2  0A10               	xorlw	16	; case 16
 20491  011EE4  B4D8               	btfsc	status,2,c
 20492  011EE6  D7D4               	goto	l22595
 20493  011EE8  0A30               	xorlw	48	; case 32
 20494  011EEA  B4D8               	btfsc	status,2,c
 20495  011EEC  D7D6               	goto	l22597
 20496  011EEE  0A10               	xorlw	16	; case 48
 20497  011EF0  B4D8               	btfsc	status,2,c
 20498  011EF2  D7D6               	goto	l22599
 20499  011EF4  0A70               	xorlw	112	; case 64
 20500  011EF6  B4D8               	btfsc	status,2,c
 20501  011EF8  D7D8               	goto	l22601
 20502  011EFA  0A10               	xorlw	16	; case 80
 20503  011EFC  B4D8               	btfsc	status,2,c
 20504  011EFE  D7D8               	goto	l22603
 20505  011F00  0A30               	xorlw	48	; case 96
 20506  011F02  B4D8               	btfsc	status,2,c
 20507  011F04  D7D8               	goto	l22605
 20508  011F06  D7DA               	goto	l22607
 20509  011F08                     __end_of_display_prepare:
 20510                           	opt stack 0
 20511                           tblptru	equ	0xFF8
 20512                           tblptrh	equ	0xFF7
 20513                           tblptrl	equ	0xFF6
 20514                           tablat	equ	0xFF5
 20515                           prodh	equ	0xFF4
 20516                           prodl	equ	0xFF3
 20517                           intcon	equ	0xFF2
 20518                           intcon2	equ	0xFF1
 20519                           intcon3	equ	0xFF0
 20520                           postinc0	equ	0xFEE
 20521                           wreg	equ	0xFE8
 20522                           indf1	equ	0xFE7
 20523                           postinc1	equ	0xFE6
 20524                           postdec1	equ	0xFE5
 20525                           plusw1	equ	0xFE3
 20526                           fsr1h	equ	0xFE2
 20527                           fsr1l	equ	0xFE1
 20528                           indf2	equ	0xFDF
 20529                           postinc2	equ	0xFDE
 20530                           postdec2	equ	0xFDD
 20531                           plusw2	equ	0xFDB
 20532                           fsr2h	equ	0xFDA
 20533                           fsr2l	equ	0xFD9
 20534                           status	equ	0xFD8
 20535                           
 20536 ;; *************** function __display_usb *****************
 20537 ;; Defined at:
 20538 ;;		line 303 in file "display.c"
 20539 ;; Parameters:    Size  Location     Type
 20540 ;;		None
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;  header         20    0[BANK0 ] const unsigned char [20]
 20543 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 20544 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 20545 ;;  low            16   37[BANK0 ] const unsigned char [16]
 20546 ;;  cntr            1   69[BANK0 ] unsigned char 
 20547 ;; Return value:  Size  Location     Type
 20548 ;;                  1    wreg      void 
 20549 ;; Registers used:
 20550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20551 ;; Tracked objects:
 20552 ;;		On entry : 0/0
 20553 ;;		On exit  : 0/0
 20554 ;;		Unchanged: 0/0
 20555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20557 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20559 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20560 ;;Total ram usage:       70 bytes
 20561 ;; Hardware stack levels used:    1
 20562 ;; Hardware stack levels required when called:   10
 20563 ;; This function calls:
 20564 ;;		Nothing
 20565 ;; This function is called by:
 20566 ;;		_display_prepare
 20567 ;; This function uses a non-reentrant model
 20568 ;;
 20569                           
 20570                           	psect	text99
 20571  00DE50                     __ptext99:
 20572                           	opt stack 0
 20573  00DE50                     __display_usb:
 20574                           	opt stack 19
 20575                           
 20576                           ;display.c: 305: uint8_t cntr;
 20577                           ;display.c: 306: const char header[] = "USB Charger Outputs";
 20578                           
 20579                           ;incstack = 0
 20580  00DE50  0E07               	movlw	low __display_usb@F8712
 20581  00DE52  6EF6               	movwf	tblptrl,c
 20582  00DE54                     	if	1	;There is more than 1 active tblptr byte
 20583  00DE54  0E91               	movlw	high __display_usb@F8712
 20584  00DE56  6EF7               	movwf	tblptrh,c
 20585  00DE58                     	endif
 20586  00DE58                     	if	1	;There are 3 active tblptr bytes
 20587  00DE58  0E00               	movlw	low (__display_usb@F8712 shr (0+16))
 20588  00DE5A  6EF8               	movwf	tblptru,c
 20589  00DE5C                     	endif
 20590  00DE5C  EE20  F060         	lfsr	2,__display_usb@header
 20591  00DE60  0E13               	movlw	19
 20592  00DE62                     u20870:
 20593  00DE62  0009               	tblrd		*+
 20594  00DE64  CFF5 FFDE          	movff	tablat,postinc2
 20595  00DE68  06E8               	decf	wreg,f,c
 20596  00DE6A  E2FB               	bc	u20870
 20597                           
 20598                           ;display.c: 307: const char low[] = "Battery too low";
 20599  00DE6C  0E2B               	movlw	low __display_usb@F8714
 20600  00DE6E  6EF6               	movwf	tblptrl,c
 20601  00DE70                     	if	1	;There is more than 1 active tblptr byte
 20602  00DE70  0E92               	movlw	high __display_usb@F8714
 20603  00DE72  6EF7               	movwf	tblptrh,c
 20604  00DE74                     	endif
 20605  00DE74                     	if	1	;There are 3 active tblptr bytes
 20606  00DE74  0E00               	movlw	low (__display_usb@F8714 shr (0+16))
 20607  00DE76  6EF8               	movwf	tblptru,c
 20608  00DE78                     	endif
 20609  00DE78  EE20  F085         	lfsr	2,__display_usb@low
 20610  00DE7C  0E0F               	movlw	15
 20611  00DE7E                     u20880:
 20612  00DE7E  0009               	tblrd		*+
 20613  00DE80  CFF5 FFDE          	movff	tablat,postinc2
 20614  00DE84  06E8               	decf	wreg,f,c
 20615  00DE86  E2FB               	bc	u20880
 20616                           
 20617                           ;display.c: 308: const char usb_on[] = "USB charging on";
 20618  00DE88  0E1B               	movlw	low __display_usb@F8716
 20619  00DE8A  6EF6               	movwf	tblptrl,c
 20620  00DE8C                     	if	1	;There is more than 1 active tblptr byte
 20621  00DE8C  0E92               	movlw	high __display_usb@F8716
 20622  00DE8E  6EF7               	movwf	tblptrh,c
 20623  00DE90                     	endif
 20624  00DE90                     	if	1	;There are 3 active tblptr bytes
 20625  00DE90  0E00               	movlw	low (__display_usb@F8716 shr (0+16))
 20626  00DE92  6EF8               	movwf	tblptru,c
 20627  00DE94                     	endif
 20628  00DE94  EE20  F095         	lfsr	2,__display_usb@usb_on
 20629  00DE98  0E0F               	movlw	15
 20630  00DE9A                     u20890:
 20631  00DE9A  0009               	tblrd		*+
 20632  00DE9C  CFF5 FFDE          	movff	tablat,postinc2
 20633  00DEA0  06E8               	decf	wreg,f,c
 20634  00DEA2  E2FB               	bc	u20890
 20635                           
 20636                           ;display.c: 309: const char usb_off[] = "USB charging off";
 20637  00DEA4  0EEA               	movlw	low __display_usb@F8718
 20638  00DEA6  6EF6               	movwf	tblptrl,c
 20639  00DEA8                     	if	1	;There is more than 1 active tblptr byte
 20640  00DEA8  0E91               	movlw	high __display_usb@F8718
 20641  00DEAA  6EF7               	movwf	tblptrh,c
 20642  00DEAC                     	endif
 20643  00DEAC                     	if	1	;There are 3 active tblptr bytes
 20644  00DEAC  0E00               	movlw	low (__display_usb@F8718 shr (0+16))
 20645  00DEAE  6EF8               	movwf	tblptru,c
 20646  00DEB0                     	endif
 20647  00DEB0  EE20  F074         	lfsr	2,__display_usb@usb_off
 20648  00DEB4  0E10               	movlw	16
 20649  00DEB6                     u20900:
 20650  00DEB6  0009               	tblrd		*+
 20651  00DEB8  CFF5 FFDE          	movff	tablat,postinc2
 20652  00DEBC  06E8               	decf	wreg,f,c
 20653  00DEBE  E2FB               	bc	u20900
 20654                           
 20655                           ;display.c: 312: cntr = 0;
 20656  00DEC0  0E00               	movlw	0
 20657  00DEC2  0100               	movlb	0	; () banked
 20658  00DEC4  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20659                           
 20660                           ;display.c: 313: while(header[cntr])
 20661  00DEC6  D016               	goto	l21393
 20662  00DEC8                     l21389:
 20663                           
 20664                           ; BSR set to: 0
 20665                           ;display.c: 314: display_content[0][cntr] = header[cntr++];
 20666  00DEC8  0100               	movlb	0	; () banked
 20667  00DECA  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20668  00DECC  0D01               	mullw	1
 20669  00DECE  0E60               	movlw	low __display_usb@header
 20670  00DED0  24F3               	addwf	prodl,w,c
 20671  00DED2  6ED9               	movwf	fsr2l,c
 20672  00DED4  0E00               	movlw	high __display_usb@header
 20673  00DED6  20F4               	addwfc	prodh,w,c
 20674  00DED8  6EDA               	movwf	fsr2h,c
 20675  00DEDA  0100               	movlb	0	; () banked
 20676  00DEDC  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20677  00DEDE  0D01               	mullw	1
 20678  00DEE0  0E54               	movlw	low _display_content
 20679  00DEE2  24F3               	addwf	prodl,w,c
 20680  00DEE4  6EE1               	movwf	fsr1l,c
 20681  00DEE6  0E03               	movlw	high _display_content
 20682  00DEE8  20F4               	addwfc	prodh,w,c
 20683  00DEEA  6EE2               	movwf	fsr1h,c
 20684  00DEEC  CFDF FFE7          	movff	indf2,indf1
 20685                           
 20686                           ; BSR set to: 0
 20687  00DEF0  0100               	movlb	0	; () banked
 20688  00DEF2  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20689  00DEF4                     l21393:
 20690                           
 20691                           ; BSR set to: 0
 20692  00DEF4  0100               	movlb	0	; () banked
 20693  00DEF6  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20694  00DEF8  0D01               	mullw	1
 20695  00DEFA  0E60               	movlw	low __display_usb@header
 20696  00DEFC  24F3               	addwf	prodl,w,c
 20697  00DEFE  6ED9               	movwf	fsr2l,c
 20698  00DF00  0E00               	movlw	high __display_usb@header
 20699  00DF02  20F4               	addwfc	prodh,w,c
 20700  00DF04  6EDA               	movwf	fsr2h,c
 20701  00DF06  50DF               	movf	indf2,w,c
 20702  00DF08  A4D8               	btfss	status,2,c
 20703  00DF0A  D7DE               	goto	l21389
 20704                           
 20705                           ; BSR set to: 0
 20706                           ;display.c: 316: if(os.output_voltage<12000)
 20707                           
 20708                           ; BSR set to: 0
 20709  00DF0C  0102               	movlb	2	; () banked
 20710  00DF0E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 20711  00DF10  D008               	goto	l21397
 20712  00DF12  0EE0               	movlw	224
 20713  00DF14  0102               	movlb	2	; () banked
 20714  00DF16  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 20715  00DF18  0E2E               	movlw	46
 20716  00DF1A  0102               	movlb	2	; () banked
 20717  00DF1C  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 20718  00DF1E  B0D8               	btfsc	status,0,c
 20719  00DF20  D026               	goto	l21405
 20720  00DF22                     l21397:
 20721                           
 20722                           ; BSR set to: 2
 20723                           ;display.c: 317: {
 20724                           ;display.c: 318: cntr = 0;
 20725  00DF22  0E00               	movlw	0
 20726  00DF24  0100               	movlb	0	; () banked
 20727  00DF26  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20728                           
 20729                           ;display.c: 319: while(low[cntr])
 20730  00DF28  D016               	goto	l21403
 20731  00DF2A                     l21399:
 20732                           
 20733                           ; BSR set to: 0
 20734                           ;display.c: 320: display_content[2][cntr] = low[cntr++];
 20735  00DF2A  0100               	movlb	0	; () banked
 20736  00DF2C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20737  00DF2E  0D01               	mullw	1
 20738  00DF30  0E85               	movlw	low __display_usb@low
 20739  00DF32  24F3               	addwf	prodl,w,c
 20740  00DF34  6ED9               	movwf	fsr2l,c
 20741  00DF36  0E00               	movlw	high __display_usb@low
 20742  00DF38  20F4               	addwfc	prodh,w,c
 20743  00DF3A  6EDA               	movwf	fsr2h,c
 20744  00DF3C  0100               	movlb	0	; () banked
 20745  00DF3E  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20746  00DF40  0D01               	mullw	1
 20747  00DF42  0E7C               	movlw	low (_display_content+40)
 20748  00DF44  24F3               	addwf	prodl,w,c
 20749  00DF46  6EE1               	movwf	fsr1l,c
 20750  00DF48  0E03               	movlw	high (_display_content+40)
 20751  00DF4A  20F4               	addwfc	prodh,w,c
 20752  00DF4C  6EE2               	movwf	fsr1h,c
 20753  00DF4E  CFDF FFE7          	movff	indf2,indf1
 20754                           
 20755                           ; BSR set to: 0
 20756  00DF52  0100               	movlb	0	; () banked
 20757  00DF54  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20758  00DF56                     l21403:
 20759                           
 20760                           ; BSR set to: 0
 20761  00DF56  0100               	movlb	0	; () banked
 20762  00DF58  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20763  00DF5A  0D01               	mullw	1
 20764  00DF5C  0E85               	movlw	low __display_usb@low
 20765  00DF5E  24F3               	addwf	prodl,w,c
 20766  00DF60  6ED9               	movwf	fsr2l,c
 20767  00DF62  0E00               	movlw	high __display_usb@low
 20768  00DF64  20F4               	addwfc	prodh,w,c
 20769  00DF66  6EDA               	movwf	fsr2h,c
 20770  00DF68  50DF               	movf	indf2,w,c
 20771  00DF6A  A4D8               	btfss	status,2,c
 20772  00DF6C  D7DE               	goto	l21399
 20773  00DF6E                     l21405:
 20774                           
 20775                           ;display.c: 321: }
 20776                           ;display.c: 323: cntr = 0;
 20777  00DF6E  0E00               	movlw	0
 20778  00DF70  0100               	movlb	0	; () banked
 20779  00DF72  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20780                           
 20781                           ; BSR set to: 0
 20782                           ;display.c: 324: if(LATDbits.LD3)
 20783  00DF74  B68C               	btfsc	3980,3,c	;volatile
 20784  00DF76  D017               	goto	l21415
 20785  00DF78  D039               	goto	l21421
 20786  00DF7A                     l21411:
 20787                           
 20788                           ; BSR set to: 0
 20789                           ;display.c: 327: display_content[3][cntr] = usb_on[cntr++];
 20790  00DF7A  0100               	movlb	0	; () banked
 20791  00DF7C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20792  00DF7E  0D01               	mullw	1
 20793  00DF80  0E95               	movlw	low __display_usb@usb_on
 20794  00DF82  24F3               	addwf	prodl,w,c
 20795  00DF84  6ED9               	movwf	fsr2l,c
 20796  00DF86  0E00               	movlw	high __display_usb@usb_on
 20797  00DF88  20F4               	addwfc	prodh,w,c
 20798  00DF8A  6EDA               	movwf	fsr2h,c
 20799  00DF8C  0100               	movlb	0	; () banked
 20800  00DF8E  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20801  00DF90  0D01               	mullw	1
 20802  00DF92  0E90               	movlw	low (_display_content+60)
 20803  00DF94  24F3               	addwf	prodl,w,c
 20804  00DF96  6EE1               	movwf	fsr1l,c
 20805  00DF98  0E03               	movlw	high (_display_content+60)
 20806  00DF9A  20F4               	addwfc	prodh,w,c
 20807  00DF9C  6EE2               	movwf	fsr1h,c
 20808  00DF9E  CFDF FFE7          	movff	indf2,indf1
 20809                           
 20810                           ; BSR set to: 0
 20811  00DFA2  0100               	movlb	0	; () banked
 20812  00DFA4  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20813  00DFA6                     l21415:
 20814                           
 20815                           ; BSR set to: 0
 20816  00DFA6  0100               	movlb	0	; () banked
 20817  00DFA8  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20818  00DFAA  0D01               	mullw	1
 20819  00DFAC  0E95               	movlw	low __display_usb@usb_on
 20820  00DFAE  24F3               	addwf	prodl,w,c
 20821  00DFB0  6ED9               	movwf	fsr2l,c
 20822  00DFB2  0E00               	movlw	high __display_usb@usb_on
 20823  00DFB4  20F4               	addwfc	prodh,w,c
 20824  00DFB6  6EDA               	movwf	fsr2h,c
 20825  00DFB8  50DF               	movf	indf2,w,c
 20826  00DFBA  B4D8               	btfsc	status,2,c
 20827  00DFBC  0012               	return	
 20828  00DFBE  D7DD               	goto	l21411
 20829  00DFC0                     l21417:
 20830                           
 20831                           ; BSR set to: 0
 20832                           ;display.c: 332: display_content[3][cntr] = usb_off[cntr++];
 20833  00DFC0  0100               	movlb	0	; () banked
 20834  00DFC2  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20835  00DFC4  0D01               	mullw	1
 20836  00DFC6  0E74               	movlw	low __display_usb@usb_off
 20837  00DFC8  24F3               	addwf	prodl,w,c
 20838  00DFCA  6ED9               	movwf	fsr2l,c
 20839  00DFCC  0E00               	movlw	high __display_usb@usb_off
 20840  00DFCE  20F4               	addwfc	prodh,w,c
 20841  00DFD0  6EDA               	movwf	fsr2h,c
 20842  00DFD2  0100               	movlb	0	; () banked
 20843  00DFD4  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20844  00DFD6  0D01               	mullw	1
 20845  00DFD8  0E90               	movlw	low (_display_content+60)
 20846  00DFDA  24F3               	addwf	prodl,w,c
 20847  00DFDC  6EE1               	movwf	fsr1l,c
 20848  00DFDE  0E03               	movlw	high (_display_content+60)
 20849  00DFE0  20F4               	addwfc	prodh,w,c
 20850  00DFE2  6EE2               	movwf	fsr1h,c
 20851  00DFE4  CFDF FFE7          	movff	indf2,indf1
 20852                           
 20853                           ; BSR set to: 0
 20854  00DFE8  0100               	movlb	0	; () banked
 20855  00DFEA  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20856  00DFEC                     l21421:
 20857                           
 20858                           ; BSR set to: 0
 20859  00DFEC  0100               	movlb	0	; () banked
 20860  00DFEE  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20861  00DFF0  0D01               	mullw	1
 20862  00DFF2  0E74               	movlw	low __display_usb@usb_off
 20863  00DFF4  24F3               	addwf	prodl,w,c
 20864  00DFF6  6ED9               	movwf	fsr2l,c
 20865  00DFF8  0E00               	movlw	high __display_usb@usb_off
 20866  00DFFA  20F4               	addwfc	prodh,w,c
 20867  00DFFC  6EDA               	movwf	fsr2h,c
 20868  00DFFE  50DF               	movf	indf2,w,c
 20869  00E000  B4D8               	btfsc	status,2,c
 20870  00E002  0012               	return	
 20871  00E004  D7DD               	goto	l21417
 20872  00E006                     __end_of__display_usb:
 20873                           	opt stack 0
 20874                           tblptru	equ	0xFF8
 20875                           tblptrh	equ	0xFF7
 20876                           tblptrl	equ	0xFF6
 20877                           tablat	equ	0xFF5
 20878                           prodh	equ	0xFF4
 20879                           prodl	equ	0xFF3
 20880                           intcon	equ	0xFF2
 20881                           intcon2	equ	0xFF1
 20882                           intcon3	equ	0xFF0
 20883                           postinc0	equ	0xFEE
 20884                           wreg	equ	0xFE8
 20885                           indf1	equ	0xFE7
 20886                           postinc1	equ	0xFE6
 20887                           postdec1	equ	0xFE5
 20888                           plusw1	equ	0xFE3
 20889                           fsr1h	equ	0xFE2
 20890                           fsr1l	equ	0xFE1
 20891                           indf2	equ	0xFDF
 20892                           postinc2	equ	0xFDE
 20893                           postdec2	equ	0xFDD
 20894                           plusw2	equ	0xFDB
 20895                           fsr2h	equ	0xFDA
 20896                           fsr2l	equ	0xFD9
 20897                           status	equ	0xFD8
 20898                           
 20899 ;; *************** function __display_time *****************
 20900 ;; Defined at:
 20901 ;;		line 186 in file "display.c"
 20902 ;; Parameters:    Size  Location     Type
 20903 ;;  mode            1    wreg     unsigned char 
 20904 ;; Auto vars:     Size  Location     Type
 20905 ;;  mode            1  203[BANK1 ] unsigned char 
 20906 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 20907 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 20908 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 20909 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 20910 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 20911 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 20912 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 20913 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 20914 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 20915 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 20916 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 20917 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 20918 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 20919 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 20920 ;;  cntr            1  210[BANK1 ] unsigned char 
 20921 ;;  seconds         1  209[BANK1 ] unsigned char 
 20922 ;;  minutes         1  208[BANK1 ] unsigned char 
 20923 ;;  hours           1  207[BANK1 ] unsigned char 
 20924 ;;  day             1  206[BANK1 ] unsigned char 
 20925 ;;  month           1  205[BANK1 ] unsigned char 
 20926 ;;  year            1  204[BANK1 ] unsigned char 
 20927 ;; Return value:  Size  Location     Type
 20928 ;;                  1    wreg      void 
 20929 ;; Registers used:
 20930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20931 ;; Tracked objects:
 20932 ;;		On entry : 0/0
 20933 ;;		On exit  : 0/0
 20934 ;;		Unchanged: 0/0
 20935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20937 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20939 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20940 ;;Total ram usage:      211 bytes
 20941 ;; Hardware stack levels used:    1
 20942 ;; Hardware stack levels required when called:   11
 20943 ;; This function calls:
 20944 ;;		_rtcc_get_day
 20945 ;;		_rtcc_get_hours
 20946 ;;		_rtcc_get_minutes
 20947 ;;		_rtcc_get_month
 20948 ;;		_rtcc_get_seconds
 20949 ;;		_rtcc_get_year
 20950 ;; This function is called by:
 20951 ;;		_display_prepare
 20952 ;; This function uses a non-reentrant model
 20953 ;;
 20954                           
 20955                           	psect	text100
 20956  009466                     __ptext100:
 20957                           	opt stack 0
 20958  009466                     __display_time:
 20959                           	opt stack 18
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;incstack = 0
 20963                           ;__display_time@mode stored from wreg
 20964  009466  0101               	movlb	1	; () banked
 20965  009468  6FCB               	movwf	__display_time@mode& (0+255),b
 20966                           
 20967                           ;display.c: 188: const char tad[] = "Time and Date";
 20968  00946A  0E77               	movlw	low __display_time@F8675
 20969  00946C  6EF6               	movwf	tblptrl,c
 20970  00946E                     	if	1	;There is more than 1 active tblptr byte
 20971  00946E  0E92               	movlw	high __display_time@F8675
 20972  009470  6EF7               	movwf	tblptrh,c
 20973  009472                     	endif
 20974  009472                     	if	1	;There are 3 active tblptr bytes
 20975  009472  0E00               	movlw	low (__display_time@F8675 shr (0+16))
 20976  009474  6EF8               	movwf	tblptru,c
 20977  009476                     	endif
 20978  009476  EE21  F080         	lfsr	2,__display_time@tad
 20979  00947A  0E0D               	movlw	13
 20980  00947C                     u20590:
 20981  00947C  0009               	tblrd		*+
 20982  00947E  CFF5 FFDE          	movff	tablat,postinc2
 20983  009482  06E8               	decf	wreg,f,c
 20984  009484  E2FB               	bc	u20590
 20985                           
 20986                           ;display.c: 189: const char setyear[] = "Set year";
 20987  009486  0EEE               	movlw	low __display_time@F8677
 20988  009488  6EF6               	movwf	tblptrl,c
 20989  00948A                     	if	1	;There is more than 1 active tblptr byte
 20990  00948A  0E92               	movlw	high __display_time@F8677
 20991  00948C  6EF7               	movwf	tblptrh,c
 20992  00948E                     	endif
 20993  00948E                     	if	1	;There are 3 active tblptr bytes
 20994  00948E  0E00               	movlw	low (__display_time@F8677 shr (0+16))
 20995  009490  6EF8               	movwf	tblptru,c
 20996  009492                     	endif
 20997  009492  EE21  F0BA         	lfsr	2,__display_time@setyear
 20998  009496  0E08               	movlw	8
 20999  009498                     u20600:
 21000  009498  0009               	tblrd		*+
 21001  00949A  CFF5 FFDE          	movff	tablat,postinc2
 21002  00949E  06E8               	decf	wreg,f,c
 21003  0094A0  E2FB               	bc	u20600
 21004                           
 21005                           ;display.c: 190: const char setmonth[] = "Set month";
 21006  0094A2  0EE4               	movlw	low __display_time@F8679
 21007  0094A4  6EF6               	movwf	tblptrl,c
 21008  0094A6                     	if	1	;There is more than 1 active tblptr byte
 21009  0094A6  0E92               	movlw	high __display_time@F8679
 21010  0094A8  6EF7               	movwf	tblptrh,c
 21011  0094AA                     	endif
 21012  0094AA                     	if	1	;There are 3 active tblptr bytes
 21013  0094AA  0E00               	movlw	low (__display_time@F8679 shr (0+16))
 21014  0094AC  6EF8               	movwf	tblptru,c
 21015  0094AE                     	endif
 21016  0094AE  EE21  F0A6         	lfsr	2,__display_time@setmonth
 21017  0094B2  0E09               	movlw	9
 21018  0094B4                     u20610:
 21019  0094B4  0009               	tblrd		*+
 21020  0094B6  CFF5 FFDE          	movff	tablat,postinc2
 21021  0094BA  06E8               	decf	wreg,f,c
 21022  0094BC  E2FB               	bc	u20610
 21023                           
 21024                           ;display.c: 191: const char setday[] = "Set day";
 21025  0094BE  0EFF               	movlw	low __display_time@F8681
 21026  0094C0  6EF6               	movwf	tblptrl,c
 21027  0094C2                     	if	1	;There is more than 1 active tblptr byte
 21028  0094C2  0E92               	movlw	high __display_time@F8681
 21029  0094C4  6EF7               	movwf	tblptrh,c
 21030  0094C6                     	endif
 21031  0094C6                     	if	1	;There are 3 active tblptr bytes
 21032  0094C6  0E00               	movlw	low (__display_time@F8681 shr (0+16))
 21033  0094C8  6EF8               	movwf	tblptru,c
 21034  0094CA                     	endif
 21035  0094CA  EE21  F0C3         	lfsr	2,__display_time@setday
 21036  0094CE  0E07               	movlw	7
 21037  0094D0                     u20620:
 21038  0094D0  0009               	tblrd		*+
 21039  0094D2  CFF5 FFDE          	movff	tablat,postinc2
 21040  0094D6  06E8               	decf	wreg,f,c
 21041  0094D8  E2FB               	bc	u20620
 21042                           
 21043                           ;display.c: 192: const char sethours[] = "Set hours";
 21044  0094DA  0EDA               	movlw	low __display_time@F8683
 21045  0094DC  6EF6               	movwf	tblptrl,c
 21046  0094DE                     	if	1	;There is more than 1 active tblptr byte
 21047  0094DE  0E92               	movlw	high __display_time@F8683
 21048  0094E0  6EF7               	movwf	tblptrh,c
 21049  0094E2                     	endif
 21050  0094E2                     	if	1	;There are 3 active tblptr bytes
 21051  0094E2  0E00               	movlw	low (__display_time@F8683 shr (0+16))
 21052  0094E4  6EF8               	movwf	tblptru,c
 21053  0094E6                     	endif
 21054  0094E6  EE21  F0B0         	lfsr	2,__display_time@sethours
 21055  0094EA  0E09               	movlw	9
 21056  0094EC                     u20630:
 21057  0094EC  0009               	tblrd		*+
 21058  0094EE  CFF5 FFDE          	movff	tablat,postinc2
 21059  0094F2  06E8               	decf	wreg,f,c
 21060  0094F4  E2FB               	bc	u20630
 21061                           
 21062                           ;display.c: 193: const char setminutes[] = "Set minutes";
 21063  0094F6  0EC3               	movlw	low __display_time@F8685
 21064  0094F8  6EF6               	movwf	tblptrl,c
 21065  0094FA                     	if	1	;There is more than 1 active tblptr byte
 21066  0094FA  0E92               	movlw	high __display_time@F8685
 21067  0094FC  6EF7               	movwf	tblptrh,c
 21068  0094FE                     	endif
 21069  0094FE                     	if	1	;There are 3 active tblptr bytes
 21070  0094FE  0E00               	movlw	low (__display_time@F8685 shr (0+16))
 21071  009500  6EF8               	movwf	tblptru,c
 21072  009502                     	endif
 21073  009502  EE21  F08E         	lfsr	2,__display_time@setminutes
 21074  009506  0E0B               	movlw	11
 21075  009508                     u20640:
 21076  009508  0009               	tblrd		*+
 21077  00950A  CFF5 FFDE          	movff	tablat,postinc2
 21078  00950E  06E8               	decf	wreg,f,c
 21079  009510  E2FB               	bc	u20640
 21080                           
 21081                           ;display.c: 194: const char setseconds[] = "Set seconds";
 21082  009512  0EB7               	movlw	low __display_time@F8687
 21083  009514  6EF6               	movwf	tblptrl,c
 21084  009516                     	if	1	;There is more than 1 active tblptr byte
 21085  009516  0E92               	movlw	high __display_time@F8687
 21086  009518  6EF7               	movwf	tblptrh,c
 21087  00951A                     	endif
 21088  00951A                     	if	1	;There are 3 active tblptr bytes
 21089  00951A  0E00               	movlw	low (__display_time@F8687 shr (0+16))
 21090  00951C  6EF8               	movwf	tblptru,c
 21091  00951E                     	endif
 21092  00951E  EE21  F09A         	lfsr	2,__display_time@setseconds
 21093  009522  0E0B               	movlw	11
 21094  009524                     u20650:
 21095  009524  0009               	tblrd		*+
 21096  009526  CFF5 FFDE          	movff	tablat,postinc2
 21097  00952A  06E8               	decf	wreg,f,c
 21098  00952C  E2FB               	bc	u20650
 21099                           
 21100                           ;display.c: 195: const char pts[] = "->Press to set time";
 21101  00952E  0E43               	movlw	low __display_time@F8689
 21102  009530  6EF6               	movwf	tblptrl,c
 21103  009532                     	if	1	;There is more than 1 active tblptr byte
 21104  009532  0E91               	movlw	high __display_time@F8689
 21105  009534  6EF7               	movwf	tblptrh,c
 21106  009536                     	endif
 21107  009536                     	if	1	;There are 3 active tblptr bytes
 21108  009536  0E00               	movlw	low (__display_time@F8689 shr (0+16))
 21109  009538  6EF8               	movwf	tblptru,c
 21110  00953A                     	endif
 21111  00953A  EE21  F000         	lfsr	2,__display_time@pts
 21112  00953E  0E13               	movlw	19
 21113  009540                     u20660:
 21114  009540  0009               	tblrd		*+
 21115  009542  CFF5 FFDE          	movff	tablat,postinc2
 21116  009546  06E8               	decf	wreg,f,c
 21117  009548  E2FB               	bc	u20660
 21118                           
 21119                           ;display.c: 196: const char pressmonth[] = "->Press for month";
 21120  00954A  0EB4               	movlw	low __display_time@F8691
 21121  00954C  6EF6               	movwf	tblptrl,c
 21122  00954E                     	if	1	;There is more than 1 active tblptr byte
 21123  00954E  0E91               	movlw	high __display_time@F8691
 21124  009550  6EF7               	movwf	tblptrh,c
 21125  009552                     	endif
 21126  009552                     	if	1	;There are 3 active tblptr bytes
 21127  009552  0E00               	movlw	low (__display_time@F8691 shr (0+16))
 21128  009554  6EF8               	movwf	tblptru,c
 21129  009556                     	endif
 21130  009556  EE21  F03C         	lfsr	2,__display_time@pressmonth
 21131  00955A  0E11               	movlw	17
 21132  00955C                     u20670:
 21133  00955C  0009               	tblrd		*+
 21134  00955E  CFF5 FFDE          	movff	tablat,postinc2
 21135  009562  06E8               	decf	wreg,f,c
 21136  009564  E2FB               	bc	u20670
 21137                           
 21138                           ;display.c: 197: const char pressday[] = "->Press for day";
 21139  009566  0E4B               	movlw	low __display_time@F8693
 21140  009568  6EF6               	movwf	tblptrl,c
 21141  00956A                     	if	1	;There is more than 1 active tblptr byte
 21142  00956A  0E92               	movlw	high __display_time@F8693
 21143  00956C  6EF7               	movwf	tblptrh,c
 21144  00956E                     	endif
 21145  00956E                     	if	1	;There are 3 active tblptr bytes
 21146  00956E  0E00               	movlw	low (__display_time@F8693 shr (0+16))
 21147  009570  6EF8               	movwf	tblptru,c
 21148  009572                     	endif
 21149  009572  EE21  F060         	lfsr	2,__display_time@pressday
 21150  009576  0E0F               	movlw	15
 21151  009578                     u20680:
 21152  009578  0009               	tblrd		*+
 21153  00957A  CFF5 FFDE          	movff	tablat,postinc2
 21154  00957E  06E8               	decf	wreg,f,c
 21155  009580  E2FB               	bc	u20680
 21156                           
 21157                           ;display.c: 198: const char presshours[] = "->Press for hours";
 21158  009582  0EA2               	movlw	low __display_time@F8695
 21159  009584  6EF6               	movwf	tblptrl,c
 21160  009586                     	if	1	;There is more than 1 active tblptr byte
 21161  009586  0E91               	movlw	high __display_time@F8695
 21162  009588  6EF7               	movwf	tblptrh,c
 21163  00958A                     	endif
 21164  00958A                     	if	1	;There are 3 active tblptr bytes
 21165  00958A  0E00               	movlw	low (__display_time@F8695 shr (0+16))
 21166  00958C  6EF8               	movwf	tblptru,c
 21167  00958E                     	endif
 21168  00958E  EE21  F04E         	lfsr	2,__display_time@presshours
 21169  009592  0E11               	movlw	17
 21170  009594                     u20690:
 21171  009594  0009               	tblrd		*+
 21172  009596  CFF5 FFDE          	movff	tablat,postinc2
 21173  00959A  06E8               	decf	wreg,f,c
 21174  00959C  E2FB               	bc	u20690
 21175                           
 21176                           ;display.c: 199: const char pressminutes[] = "->Press for minutes";
 21177  00959E  0E2F               	movlw	low __display_time@F8697
 21178  0095A0  6EF6               	movwf	tblptrl,c
 21179  0095A2                     	if	1	;There is more than 1 active tblptr byte
 21180  0095A2  0E91               	movlw	high __display_time@F8697
 21181  0095A4  6EF7               	movwf	tblptrh,c
 21182  0095A6                     	endif
 21183  0095A6                     	if	1	;There are 3 active tblptr bytes
 21184  0095A6  0E00               	movlw	low (__display_time@F8697 shr (0+16))
 21185  0095A8  6EF8               	movwf	tblptru,c
 21186  0095AA                     	endif
 21187  0095AA  EE21  F014         	lfsr	2,__display_time@pressminutes
 21188  0095AE  0E13               	movlw	19
 21189  0095B0                     u20700:
 21190  0095B0  0009               	tblrd		*+
 21191  0095B2  CFF5 FFDE          	movff	tablat,postinc2
 21192  0095B6  06E8               	decf	wreg,f,c
 21193  0095B8  E2FB               	bc	u20700
 21194                           
 21195                           ;display.c: 200: const char pressseconds[] = "->Press for seconds";
 21196  0095BA  0E1B               	movlw	low __display_time@F8699
 21197  0095BC  6EF6               	movwf	tblptrl,c
 21198  0095BE                     	if	1	;There is more than 1 active tblptr byte
 21199  0095BE  0E91               	movlw	high __display_time@F8699
 21200  0095C0  6EF7               	movwf	tblptrh,c
 21201  0095C2                     	endif
 21202  0095C2                     	if	1	;There are 3 active tblptr bytes
 21203  0095C2  0E00               	movlw	low (__display_time@F8699 shr (0+16))
 21204  0095C4  6EF8               	movwf	tblptru,c
 21205  0095C6                     	endif
 21206  0095C6  EE21  F028         	lfsr	2,__display_time@pressseconds
 21207  0095CA  0E13               	movlw	19
 21208  0095CC                     u20710:
 21209  0095CC  0009               	tblrd		*+
 21210  0095CE  CFF5 FFDE          	movff	tablat,postinc2
 21211  0095D2  06E8               	decf	wreg,f,c
 21212  0095D4  E2FB               	bc	u20710
 21213                           
 21214                           ;display.c: 201: const char presssave[] = "->Press to save";
 21215  0095D6  0E3B               	movlw	low __display_time@F8701
 21216  0095D8  6EF6               	movwf	tblptrl,c
 21217  0095DA                     	if	1	;There is more than 1 active tblptr byte
 21218  0095DA  0E92               	movlw	high __display_time@F8701
 21219  0095DC  6EF7               	movwf	tblptrh,c
 21220  0095DE                     	endif
 21221  0095DE                     	if	1	;There are 3 active tblptr bytes
 21222  0095DE  0E00               	movlw	low (__display_time@F8701 shr (0+16))
 21223  0095E0  6EF8               	movwf	tblptru,c
 21224  0095E2                     	endif
 21225  0095E2  EE21  F070         	lfsr	2,__display_time@presssave
 21226  0095E6  0E0F               	movlw	15
 21227  0095E8                     u20720:
 21228  0095E8  0009               	tblrd		*+
 21229  0095EA  CFF5 FFDE          	movff	tablat,postinc2
 21230  0095EE  06E8               	decf	wreg,f,c
 21231  0095F0  E2FB               	bc	u20720
 21232                           
 21233                           ;display.c: 203: uint8_t cntr;
 21234                           ;display.c: 204: uint8_t year = rtcc_get_year();
 21235  0095F2  ECA7  F0A0         	call	_rtcc_get_year	;wreg free
 21236  0095F6  0101               	movlb	1	; () banked
 21237  0095F8  6FCC               	movwf	__display_time@year& (0+255),b
 21238                           
 21239                           ; BSR set to: 1
 21240                           ;display.c: 205: uint8_t month = rtcc_get_month();
 21241  0095FA  ECBB  F0A0         	call	_rtcc_get_month	;wreg free
 21242  0095FE  0101               	movlb	1	; () banked
 21243  009600  6FCD               	movwf	__display_time@month& (0+255),b
 21244                           
 21245                           ; BSR set to: 1
 21246                           ;display.c: 206: uint8_t day = rtcc_get_day();
 21247  009602  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
 21248  009606  0101               	movlb	1	; () banked
 21249  009608  6FCE               	movwf	__display_time@day& (0+255),b
 21250                           
 21251                           ; BSR set to: 1
 21252                           ;display.c: 207: uint8_t hours = rtcc_get_hours();
 21253  00960A  ECCF  F0A0         	call	_rtcc_get_hours	;wreg free
 21254  00960E  0101               	movlb	1	; () banked
 21255  009610  6FCF               	movwf	__display_time@hours& (0+255),b
 21256                           
 21257                           ; BSR set to: 1
 21258                           ;display.c: 208: uint8_t minutes = rtcc_get_minutes();
 21259  009612  ECC5  F0A0         	call	_rtcc_get_minutes	;wreg free
 21260  009616  0101               	movlb	1	; () banked
 21261  009618  6FD0               	movwf	__display_time@minutes& (0+255),b
 21262                           
 21263                           ; BSR set to: 1
 21264                           ;display.c: 209: uint8_t seconds = rtcc_get_seconds();
 21265  00961A  ECB1  F0A0         	call	_rtcc_get_seconds	;wreg free
 21266  00961E  0101               	movlb	1	; () banked
 21267  009620  6FD1               	movwf	__display_time@seconds& (0+255),b
 21268                           
 21269                           ;display.c: 211: switch(mode)
 21270  009622  D21B               	goto	l21357
 21271  009624                     l21243:
 21272                           
 21273                           ; BSR set to: 1
 21274                           ;display.c: 214: cntr = 0;
 21275  009624  0E00               	movlw	0
 21276  009626  0101               	movlb	1	; () banked
 21277  009628  6FD2               	movwf	__display_time@cntr& (0+255),b
 21278                           
 21279                           ;display.c: 215: while(tad[cntr])
 21280  00962A  D016               	goto	l21249
 21281  00962C                     l21245:
 21282                           
 21283                           ; BSR set to: 1
 21284                           ;display.c: 216: display_content[0][cntr] = tad[cntr++];
 21285  00962C  0101               	movlb	1	; () banked
 21286  00962E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21287  009630  0D01               	mullw	1
 21288  009632  0E80               	movlw	low __display_time@tad
 21289  009634  24F3               	addwf	prodl,w,c
 21290  009636  6ED9               	movwf	fsr2l,c
 21291  009638  0E01               	movlw	high __display_time@tad
 21292  00963A  20F4               	addwfc	prodh,w,c
 21293  00963C  6EDA               	movwf	fsr2h,c
 21294  00963E  0101               	movlb	1	; () banked
 21295  009640  51D2               	movf	__display_time@cntr& (0+255),w,b
 21296  009642  0D01               	mullw	1
 21297  009644  0E54               	movlw	low _display_content
 21298  009646  24F3               	addwf	prodl,w,c
 21299  009648  6EE1               	movwf	fsr1l,c
 21300  00964A  0E03               	movlw	high _display_content
 21301  00964C  20F4               	addwfc	prodh,w,c
 21302  00964E  6EE2               	movwf	fsr1h,c
 21303  009650  CFDF FFE7          	movff	indf2,indf1
 21304                           
 21305                           ; BSR set to: 1
 21306  009654  0101               	movlb	1	; () banked
 21307  009656  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21308  009658                     l21249:
 21309                           
 21310                           ; BSR set to: 1
 21311  009658  0101               	movlb	1	; () banked
 21312  00965A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21313  00965C  0D01               	mullw	1
 21314  00965E  0E80               	movlw	low __display_time@tad
 21315  009660  24F3               	addwf	prodl,w,c
 21316  009662  6ED9               	movwf	fsr2l,c
 21317  009664  0E01               	movlw	high __display_time@tad
 21318  009666  20F4               	addwfc	prodh,w,c
 21319  009668  6EDA               	movwf	fsr2h,c
 21320  00966A  50DF               	movf	indf2,w,c
 21321  00966C  A4D8               	btfss	status,2,c
 21322  00966E  D7DE               	goto	l21245
 21323                           
 21324                           ; BSR set to: 1
 21325                           ;display.c: 217: cntr = 0;
 21326                           
 21327                           ; BSR set to: 1
 21328  009670  0E00               	movlw	0
 21329  009672  0101               	movlb	1	; () banked
 21330  009674  6FD2               	movwf	__display_time@cntr& (0+255),b
 21331                           
 21332                           ;display.c: 218: while(pts[cntr])
 21333  009676  D016               	goto	l21257
 21334  009678                     l21253:
 21335                           
 21336                           ; BSR set to: 1
 21337                           ;display.c: 219: display_content[3][cntr] = pts[cntr++];
 21338  009678  0101               	movlb	1	; () banked
 21339  00967A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21340  00967C  0D01               	mullw	1
 21341  00967E  0E00               	movlw	low __display_time@pts
 21342  009680  24F3               	addwf	prodl,w,c
 21343  009682  6ED9               	movwf	fsr2l,c
 21344  009684  0E01               	movlw	high __display_time@pts
 21345  009686  20F4               	addwfc	prodh,w,c
 21346  009688  6EDA               	movwf	fsr2h,c
 21347  00968A  0101               	movlb	1	; () banked
 21348  00968C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21349  00968E  0D01               	mullw	1
 21350  009690  0E90               	movlw	low (_display_content+60)
 21351  009692  24F3               	addwf	prodl,w,c
 21352  009694  6EE1               	movwf	fsr1l,c
 21353  009696  0E03               	movlw	high (_display_content+60)
 21354  009698  20F4               	addwfc	prodh,w,c
 21355  00969A  6EE2               	movwf	fsr1h,c
 21356  00969C  CFDF FFE7          	movff	indf2,indf1
 21357                           
 21358                           ; BSR set to: 1
 21359  0096A0  0101               	movlb	1	; () banked
 21360  0096A2  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21361  0096A4                     l21257:
 21362                           
 21363                           ; BSR set to: 1
 21364  0096A4  0101               	movlb	1	; () banked
 21365  0096A6  51D2               	movf	__display_time@cntr& (0+255),w,b
 21366  0096A8  0D01               	mullw	1
 21367  0096AA  0E00               	movlw	low __display_time@pts
 21368  0096AC  24F3               	addwf	prodl,w,c
 21369  0096AE  6ED9               	movwf	fsr2l,c
 21370  0096B0  0E01               	movlw	high __display_time@pts
 21371  0096B2  20F4               	addwfc	prodh,w,c
 21372  0096B4  6EDA               	movwf	fsr2h,c
 21373  0096B6  50DF               	movf	indf2,w,c
 21374  0096B8  B4D8               	btfsc	status,2,c
 21375  0096BA  D1E6               	goto	l21359
 21376  0096BC  D7DD               	goto	l21253
 21377  0096BE                     l21259:
 21378                           
 21379                           ; BSR set to: 1
 21380                           ;display.c: 223: cntr = 0;
 21381  0096BE  0E00               	movlw	0
 21382  0096C0  0101               	movlb	1	; () banked
 21383  0096C2  6FD2               	movwf	__display_time@cntr& (0+255),b
 21384                           
 21385                           ;display.c: 224: while(setyear[cntr])
 21386  0096C4  D016               	goto	l21265
 21387  0096C6                     l21261:
 21388                           
 21389                           ; BSR set to: 1
 21390                           ;display.c: 225: display_content[0][cntr] = setyear[cntr++];
 21391  0096C6  0101               	movlb	1	; () banked
 21392  0096C8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21393  0096CA  0D01               	mullw	1
 21394  0096CC  0EBA               	movlw	low __display_time@setyear
 21395  0096CE  24F3               	addwf	prodl,w,c
 21396  0096D0  6ED9               	movwf	fsr2l,c
 21397  0096D2  0E01               	movlw	high __display_time@setyear
 21398  0096D4  20F4               	addwfc	prodh,w,c
 21399  0096D6  6EDA               	movwf	fsr2h,c
 21400  0096D8  0101               	movlb	1	; () banked
 21401  0096DA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21402  0096DC  0D01               	mullw	1
 21403  0096DE  0E54               	movlw	low _display_content
 21404  0096E0  24F3               	addwf	prodl,w,c
 21405  0096E2  6EE1               	movwf	fsr1l,c
 21406  0096E4  0E03               	movlw	high _display_content
 21407  0096E6  20F4               	addwfc	prodh,w,c
 21408  0096E8  6EE2               	movwf	fsr1h,c
 21409  0096EA  CFDF FFE7          	movff	indf2,indf1
 21410                           
 21411                           ; BSR set to: 1
 21412  0096EE  0101               	movlb	1	; () banked
 21413  0096F0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21414  0096F2                     l21265:
 21415                           
 21416                           ; BSR set to: 1
 21417  0096F2  0101               	movlb	1	; () banked
 21418  0096F4  51D2               	movf	__display_time@cntr& (0+255),w,b
 21419  0096F6  0D01               	mullw	1
 21420  0096F8  0EBA               	movlw	low __display_time@setyear
 21421  0096FA  24F3               	addwf	prodl,w,c
 21422  0096FC  6ED9               	movwf	fsr2l,c
 21423  0096FE  0E01               	movlw	high __display_time@setyear
 21424  009700  20F4               	addwfc	prodh,w,c
 21425  009702  6EDA               	movwf	fsr2h,c
 21426  009704  50DF               	movf	indf2,w,c
 21427  009706  A4D8               	btfss	status,2,c
 21428  009708  D7DE               	goto	l21261
 21429                           
 21430                           ; BSR set to: 1
 21431                           ;display.c: 226: cntr = 0;
 21432                           
 21433                           ; BSR set to: 1
 21434  00970A  0E00               	movlw	0
 21435  00970C  0101               	movlb	1	; () banked
 21436  00970E  6FD2               	movwf	__display_time@cntr& (0+255),b
 21437                           
 21438                           ;display.c: 227: while(pressmonth[cntr])
 21439  009710  D016               	goto	l21273
 21440  009712                     l21269:
 21441                           
 21442                           ; BSR set to: 1
 21443                           ;display.c: 228: display_content[3][cntr] = pressmonth[cntr++];
 21444  009712  0101               	movlb	1	; () banked
 21445  009714  51D2               	movf	__display_time@cntr& (0+255),w,b
 21446  009716  0D01               	mullw	1
 21447  009718  0E3C               	movlw	low __display_time@pressmonth
 21448  00971A  24F3               	addwf	prodl,w,c
 21449  00971C  6ED9               	movwf	fsr2l,c
 21450  00971E  0E01               	movlw	high __display_time@pressmonth
 21451  009720  20F4               	addwfc	prodh,w,c
 21452  009722  6EDA               	movwf	fsr2h,c
 21453  009724  0101               	movlb	1	; () banked
 21454  009726  51D2               	movf	__display_time@cntr& (0+255),w,b
 21455  009728  0D01               	mullw	1
 21456  00972A  0E90               	movlw	low (_display_content+60)
 21457  00972C  24F3               	addwf	prodl,w,c
 21458  00972E  6EE1               	movwf	fsr1l,c
 21459  009730  0E03               	movlw	high (_display_content+60)
 21460  009732  20F4               	addwfc	prodh,w,c
 21461  009734  6EE2               	movwf	fsr1h,c
 21462  009736  CFDF FFE7          	movff	indf2,indf1
 21463                           
 21464                           ; BSR set to: 1
 21465  00973A  0101               	movlb	1	; () banked
 21466  00973C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21467  00973E                     l21273:
 21468                           
 21469                           ; BSR set to: 1
 21470  00973E  0101               	movlb	1	; () banked
 21471  009740  51D2               	movf	__display_time@cntr& (0+255),w,b
 21472  009742  0D01               	mullw	1
 21473  009744  0E3C               	movlw	low __display_time@pressmonth
 21474  009746  24F3               	addwf	prodl,w,c
 21475  009748  6ED9               	movwf	fsr2l,c
 21476  00974A  0E01               	movlw	high __display_time@pressmonth
 21477  00974C  20F4               	addwfc	prodh,w,c
 21478  00974E  6EDA               	movwf	fsr2h,c
 21479  009750  50DF               	movf	indf2,w,c
 21480  009752  B4D8               	btfsc	status,2,c
 21481  009754  D199               	goto	l21359
 21482  009756  D7DD               	goto	l21269
 21483  009758                     l21275:
 21484                           
 21485                           ; BSR set to: 1
 21486                           ;display.c: 232: cntr = 0;
 21487  009758  0E00               	movlw	0
 21488  00975A  0101               	movlb	1	; () banked
 21489  00975C  6FD2               	movwf	__display_time@cntr& (0+255),b
 21490                           
 21491                           ;display.c: 233: while(setmonth[cntr])
 21492  00975E  D016               	goto	l21281
 21493  009760                     l21277:
 21494                           
 21495                           ; BSR set to: 1
 21496                           ;display.c: 234: display_content[0][cntr] = setmonth[cntr++];
 21497  009760  0101               	movlb	1	; () banked
 21498  009762  51D2               	movf	__display_time@cntr& (0+255),w,b
 21499  009764  0D01               	mullw	1
 21500  009766  0EA6               	movlw	low __display_time@setmonth
 21501  009768  24F3               	addwf	prodl,w,c
 21502  00976A  6ED9               	movwf	fsr2l,c
 21503  00976C  0E01               	movlw	high __display_time@setmonth
 21504  00976E  20F4               	addwfc	prodh,w,c
 21505  009770  6EDA               	movwf	fsr2h,c
 21506  009772  0101               	movlb	1	; () banked
 21507  009774  51D2               	movf	__display_time@cntr& (0+255),w,b
 21508  009776  0D01               	mullw	1
 21509  009778  0E54               	movlw	low _display_content
 21510  00977A  24F3               	addwf	prodl,w,c
 21511  00977C  6EE1               	movwf	fsr1l,c
 21512  00977E  0E03               	movlw	high _display_content
 21513  009780  20F4               	addwfc	prodh,w,c
 21514  009782  6EE2               	movwf	fsr1h,c
 21515  009784  CFDF FFE7          	movff	indf2,indf1
 21516                           
 21517                           ; BSR set to: 1
 21518  009788  0101               	movlb	1	; () banked
 21519  00978A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21520  00978C                     l21281:
 21521                           
 21522                           ; BSR set to: 1
 21523  00978C  0101               	movlb	1	; () banked
 21524  00978E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21525  009790  0D01               	mullw	1
 21526  009792  0EA6               	movlw	low __display_time@setmonth
 21527  009794  24F3               	addwf	prodl,w,c
 21528  009796  6ED9               	movwf	fsr2l,c
 21529  009798  0E01               	movlw	high __display_time@setmonth
 21530  00979A  20F4               	addwfc	prodh,w,c
 21531  00979C  6EDA               	movwf	fsr2h,c
 21532  00979E  50DF               	movf	indf2,w,c
 21533  0097A0  A4D8               	btfss	status,2,c
 21534  0097A2  D7DE               	goto	l21277
 21535                           
 21536                           ; BSR set to: 1
 21537                           ;display.c: 235: cntr = 0;
 21538                           
 21539                           ; BSR set to: 1
 21540  0097A4  0E00               	movlw	0
 21541  0097A6  0101               	movlb	1	; () banked
 21542  0097A8  6FD2               	movwf	__display_time@cntr& (0+255),b
 21543                           
 21544                           ;display.c: 236: while(pressday[cntr])
 21545  0097AA  D016               	goto	l21289
 21546  0097AC                     l21285:
 21547                           
 21548                           ; BSR set to: 1
 21549                           ;display.c: 237: display_content[3][cntr] = pressday[cntr++];
 21550  0097AC  0101               	movlb	1	; () banked
 21551  0097AE  51D2               	movf	__display_time@cntr& (0+255),w,b
 21552  0097B0  0D01               	mullw	1
 21553  0097B2  0E60               	movlw	low __display_time@pressday
 21554  0097B4  24F3               	addwf	prodl,w,c
 21555  0097B6  6ED9               	movwf	fsr2l,c
 21556  0097B8  0E01               	movlw	high __display_time@pressday
 21557  0097BA  20F4               	addwfc	prodh,w,c
 21558  0097BC  6EDA               	movwf	fsr2h,c
 21559  0097BE  0101               	movlb	1	; () banked
 21560  0097C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 21561  0097C2  0D01               	mullw	1
 21562  0097C4  0E90               	movlw	low (_display_content+60)
 21563  0097C6  24F3               	addwf	prodl,w,c
 21564  0097C8  6EE1               	movwf	fsr1l,c
 21565  0097CA  0E03               	movlw	high (_display_content+60)
 21566  0097CC  20F4               	addwfc	prodh,w,c
 21567  0097CE  6EE2               	movwf	fsr1h,c
 21568  0097D0  CFDF FFE7          	movff	indf2,indf1
 21569                           
 21570                           ; BSR set to: 1
 21571  0097D4  0101               	movlb	1	; () banked
 21572  0097D6  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21573  0097D8                     l21289:
 21574                           
 21575                           ; BSR set to: 1
 21576  0097D8  0101               	movlb	1	; () banked
 21577  0097DA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21578  0097DC  0D01               	mullw	1
 21579  0097DE  0E60               	movlw	low __display_time@pressday
 21580  0097E0  24F3               	addwf	prodl,w,c
 21581  0097E2  6ED9               	movwf	fsr2l,c
 21582  0097E4  0E01               	movlw	high __display_time@pressday
 21583  0097E6  20F4               	addwfc	prodh,w,c
 21584  0097E8  6EDA               	movwf	fsr2h,c
 21585  0097EA  50DF               	movf	indf2,w,c
 21586  0097EC  B4D8               	btfsc	status,2,c
 21587  0097EE  D14C               	goto	l21359
 21588  0097F0  D7DD               	goto	l21285
 21589  0097F2                     l21291:
 21590                           
 21591                           ; BSR set to: 1
 21592                           ;display.c: 241: cntr = 0;
 21593  0097F2  0E00               	movlw	0
 21594  0097F4  0101               	movlb	1	; () banked
 21595  0097F6  6FD2               	movwf	__display_time@cntr& (0+255),b
 21596                           
 21597                           ;display.c: 242: while(setday[cntr])
 21598  0097F8  D016               	goto	l21297
 21599  0097FA                     l21293:
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;display.c: 243: display_content[0][cntr] = setday[cntr++];
 21603  0097FA  0101               	movlb	1	; () banked
 21604  0097FC  51D2               	movf	__display_time@cntr& (0+255),w,b
 21605  0097FE  0D01               	mullw	1
 21606  009800  0EC3               	movlw	low __display_time@setday
 21607  009802  24F3               	addwf	prodl,w,c
 21608  009804  6ED9               	movwf	fsr2l,c
 21609  009806  0E01               	movlw	high __display_time@setday
 21610  009808  20F4               	addwfc	prodh,w,c
 21611  00980A  6EDA               	movwf	fsr2h,c
 21612  00980C  0101               	movlb	1	; () banked
 21613  00980E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21614  009810  0D01               	mullw	1
 21615  009812  0E54               	movlw	low _display_content
 21616  009814  24F3               	addwf	prodl,w,c
 21617  009816  6EE1               	movwf	fsr1l,c
 21618  009818  0E03               	movlw	high _display_content
 21619  00981A  20F4               	addwfc	prodh,w,c
 21620  00981C  6EE2               	movwf	fsr1h,c
 21621  00981E  CFDF FFE7          	movff	indf2,indf1
 21622                           
 21623                           ; BSR set to: 1
 21624  009822  0101               	movlb	1	; () banked
 21625  009824  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21626  009826                     l21297:
 21627                           
 21628                           ; BSR set to: 1
 21629  009826  0101               	movlb	1	; () banked
 21630  009828  51D2               	movf	__display_time@cntr& (0+255),w,b
 21631  00982A  0D01               	mullw	1
 21632  00982C  0EC3               	movlw	low __display_time@setday
 21633  00982E  24F3               	addwf	prodl,w,c
 21634  009830  6ED9               	movwf	fsr2l,c
 21635  009832  0E01               	movlw	high __display_time@setday
 21636  009834  20F4               	addwfc	prodh,w,c
 21637  009836  6EDA               	movwf	fsr2h,c
 21638  009838  50DF               	movf	indf2,w,c
 21639  00983A  A4D8               	btfss	status,2,c
 21640  00983C  D7DE               	goto	l21293
 21641                           
 21642                           ; BSR set to: 1
 21643                           ;display.c: 244: cntr = 0;
 21644                           
 21645                           ; BSR set to: 1
 21646  00983E  0E00               	movlw	0
 21647  009840  0101               	movlb	1	; () banked
 21648  009842  6FD2               	movwf	__display_time@cntr& (0+255),b
 21649                           
 21650                           ;display.c: 245: while(presshours[cntr])
 21651  009844  D016               	goto	l21305
 21652  009846                     l21301:
 21653                           
 21654                           ; BSR set to: 1
 21655                           ;display.c: 246: display_content[3][cntr] = presshours[cntr++];
 21656  009846  0101               	movlb	1	; () banked
 21657  009848  51D2               	movf	__display_time@cntr& (0+255),w,b
 21658  00984A  0D01               	mullw	1
 21659  00984C  0E4E               	movlw	low __display_time@presshours
 21660  00984E  24F3               	addwf	prodl,w,c
 21661  009850  6ED9               	movwf	fsr2l,c
 21662  009852  0E01               	movlw	high __display_time@presshours
 21663  009854  20F4               	addwfc	prodh,w,c
 21664  009856  6EDA               	movwf	fsr2h,c
 21665  009858  0101               	movlb	1	; () banked
 21666  00985A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21667  00985C  0D01               	mullw	1
 21668  00985E  0E90               	movlw	low (_display_content+60)
 21669  009860  24F3               	addwf	prodl,w,c
 21670  009862  6EE1               	movwf	fsr1l,c
 21671  009864  0E03               	movlw	high (_display_content+60)
 21672  009866  20F4               	addwfc	prodh,w,c
 21673  009868  6EE2               	movwf	fsr1h,c
 21674  00986A  CFDF FFE7          	movff	indf2,indf1
 21675                           
 21676                           ; BSR set to: 1
 21677  00986E  0101               	movlb	1	; () banked
 21678  009870  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21679  009872                     l21305:
 21680                           
 21681                           ; BSR set to: 1
 21682  009872  0101               	movlb	1	; () banked
 21683  009874  51D2               	movf	__display_time@cntr& (0+255),w,b
 21684  009876  0D01               	mullw	1
 21685  009878  0E4E               	movlw	low __display_time@presshours
 21686  00987A  24F3               	addwf	prodl,w,c
 21687  00987C  6ED9               	movwf	fsr2l,c
 21688  00987E  0E01               	movlw	high __display_time@presshours
 21689  009880  20F4               	addwfc	prodh,w,c
 21690  009882  6EDA               	movwf	fsr2h,c
 21691  009884  50DF               	movf	indf2,w,c
 21692  009886  B4D8               	btfsc	status,2,c
 21693  009888  D0FF               	goto	l21359
 21694  00988A  D7DD               	goto	l21301
 21695  00988C                     l21307:
 21696                           
 21697                           ; BSR set to: 1
 21698                           ;display.c: 250: cntr = 0;
 21699  00988C  0E00               	movlw	0
 21700  00988E  0101               	movlb	1	; () banked
 21701  009890  6FD2               	movwf	__display_time@cntr& (0+255),b
 21702                           
 21703                           ;display.c: 251: while(sethours[cntr])
 21704  009892  D016               	goto	l21313
 21705  009894                     l21309:
 21706                           
 21707                           ; BSR set to: 1
 21708                           ;display.c: 252: display_content[0][cntr] = sethours[cntr++];
 21709  009894  0101               	movlb	1	; () banked
 21710  009896  51D2               	movf	__display_time@cntr& (0+255),w,b
 21711  009898  0D01               	mullw	1
 21712  00989A  0EB0               	movlw	low __display_time@sethours
 21713  00989C  24F3               	addwf	prodl,w,c
 21714  00989E  6ED9               	movwf	fsr2l,c
 21715  0098A0  0E01               	movlw	high __display_time@sethours
 21716  0098A2  20F4               	addwfc	prodh,w,c
 21717  0098A4  6EDA               	movwf	fsr2h,c
 21718  0098A6  0101               	movlb	1	; () banked
 21719  0098A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21720  0098AA  0D01               	mullw	1
 21721  0098AC  0E54               	movlw	low _display_content
 21722  0098AE  24F3               	addwf	prodl,w,c
 21723  0098B0  6EE1               	movwf	fsr1l,c
 21724  0098B2  0E03               	movlw	high _display_content
 21725  0098B4  20F4               	addwfc	prodh,w,c
 21726  0098B6  6EE2               	movwf	fsr1h,c
 21727  0098B8  CFDF FFE7          	movff	indf2,indf1
 21728                           
 21729                           ; BSR set to: 1
 21730  0098BC  0101               	movlb	1	; () banked
 21731  0098BE  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21732  0098C0                     l21313:
 21733                           
 21734                           ; BSR set to: 1
 21735  0098C0  0101               	movlb	1	; () banked
 21736  0098C2  51D2               	movf	__display_time@cntr& (0+255),w,b
 21737  0098C4  0D01               	mullw	1
 21738  0098C6  0EB0               	movlw	low __display_time@sethours
 21739  0098C8  24F3               	addwf	prodl,w,c
 21740  0098CA  6ED9               	movwf	fsr2l,c
 21741  0098CC  0E01               	movlw	high __display_time@sethours
 21742  0098CE  20F4               	addwfc	prodh,w,c
 21743  0098D0  6EDA               	movwf	fsr2h,c
 21744  0098D2  50DF               	movf	indf2,w,c
 21745  0098D4  A4D8               	btfss	status,2,c
 21746  0098D6  D7DE               	goto	l21309
 21747                           
 21748                           ; BSR set to: 1
 21749                           ;display.c: 253: cntr = 0;
 21750                           
 21751                           ; BSR set to: 1
 21752  0098D8  0E00               	movlw	0
 21753  0098DA  0101               	movlb	1	; () banked
 21754  0098DC  6FD2               	movwf	__display_time@cntr& (0+255),b
 21755                           
 21756                           ;display.c: 254: while(pressminutes[cntr])
 21757  0098DE  D016               	goto	l21321
 21758  0098E0                     l21317:
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;display.c: 255: display_content[3][cntr] = pressminutes[cntr++];
 21762  0098E0  0101               	movlb	1	; () banked
 21763  0098E2  51D2               	movf	__display_time@cntr& (0+255),w,b
 21764  0098E4  0D01               	mullw	1
 21765  0098E6  0E14               	movlw	low __display_time@pressminutes
 21766  0098E8  24F3               	addwf	prodl,w,c
 21767  0098EA  6ED9               	movwf	fsr2l,c
 21768  0098EC  0E01               	movlw	high __display_time@pressminutes
 21769  0098EE  20F4               	addwfc	prodh,w,c
 21770  0098F0  6EDA               	movwf	fsr2h,c
 21771  0098F2  0101               	movlb	1	; () banked
 21772  0098F4  51D2               	movf	__display_time@cntr& (0+255),w,b
 21773  0098F6  0D01               	mullw	1
 21774  0098F8  0E90               	movlw	low (_display_content+60)
 21775  0098FA  24F3               	addwf	prodl,w,c
 21776  0098FC  6EE1               	movwf	fsr1l,c
 21777  0098FE  0E03               	movlw	high (_display_content+60)
 21778  009900  20F4               	addwfc	prodh,w,c
 21779  009902  6EE2               	movwf	fsr1h,c
 21780  009904  CFDF FFE7          	movff	indf2,indf1
 21781                           
 21782                           ; BSR set to: 1
 21783  009908  0101               	movlb	1	; () banked
 21784  00990A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21785  00990C                     l21321:
 21786                           
 21787                           ; BSR set to: 1
 21788  00990C  0101               	movlb	1	; () banked
 21789  00990E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21790  009910  0D01               	mullw	1
 21791  009912  0E14               	movlw	low __display_time@pressminutes
 21792  009914  24F3               	addwf	prodl,w,c
 21793  009916  6ED9               	movwf	fsr2l,c
 21794  009918  0E01               	movlw	high __display_time@pressminutes
 21795  00991A  20F4               	addwfc	prodh,w,c
 21796  00991C  6EDA               	movwf	fsr2h,c
 21797  00991E  50DF               	movf	indf2,w,c
 21798  009920  B4D8               	btfsc	status,2,c
 21799  009922  D0B2               	goto	l21359
 21800  009924  D7DD               	goto	l21317
 21801  009926                     l21323:
 21802                           
 21803                           ; BSR set to: 1
 21804                           ;display.c: 259: cntr = 0;
 21805  009926  0E00               	movlw	0
 21806  009928  0101               	movlb	1	; () banked
 21807  00992A  6FD2               	movwf	__display_time@cntr& (0+255),b
 21808                           
 21809                           ;display.c: 260: while(setminutes[cntr])
 21810  00992C  D016               	goto	l21329
 21811  00992E                     l21325:
 21812                           
 21813                           ; BSR set to: 1
 21814                           ;display.c: 261: display_content[0][cntr] = setminutes[cntr++];
 21815  00992E  0101               	movlb	1	; () banked
 21816  009930  51D2               	movf	__display_time@cntr& (0+255),w,b
 21817  009932  0D01               	mullw	1
 21818  009934  0E8E               	movlw	low __display_time@setminutes
 21819  009936  24F3               	addwf	prodl,w,c
 21820  009938  6ED9               	movwf	fsr2l,c
 21821  00993A  0E01               	movlw	high __display_time@setminutes
 21822  00993C  20F4               	addwfc	prodh,w,c
 21823  00993E  6EDA               	movwf	fsr2h,c
 21824  009940  0101               	movlb	1	; () banked
 21825  009942  51D2               	movf	__display_time@cntr& (0+255),w,b
 21826  009944  0D01               	mullw	1
 21827  009946  0E54               	movlw	low _display_content
 21828  009948  24F3               	addwf	prodl,w,c
 21829  00994A  6EE1               	movwf	fsr1l,c
 21830  00994C  0E03               	movlw	high _display_content
 21831  00994E  20F4               	addwfc	prodh,w,c
 21832  009950  6EE2               	movwf	fsr1h,c
 21833  009952  CFDF FFE7          	movff	indf2,indf1
 21834                           
 21835                           ; BSR set to: 1
 21836  009956  0101               	movlb	1	; () banked
 21837  009958  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21838  00995A                     l21329:
 21839                           
 21840                           ; BSR set to: 1
 21841  00995A  0101               	movlb	1	; () banked
 21842  00995C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21843  00995E  0D01               	mullw	1
 21844  009960  0E8E               	movlw	low __display_time@setminutes
 21845  009962  24F3               	addwf	prodl,w,c
 21846  009964  6ED9               	movwf	fsr2l,c
 21847  009966  0E01               	movlw	high __display_time@setminutes
 21848  009968  20F4               	addwfc	prodh,w,c
 21849  00996A  6EDA               	movwf	fsr2h,c
 21850  00996C  50DF               	movf	indf2,w,c
 21851  00996E  A4D8               	btfss	status,2,c
 21852  009970  D7DE               	goto	l21325
 21853                           
 21854                           ; BSR set to: 1
 21855                           ;display.c: 262: cntr = 0;
 21856                           
 21857                           ; BSR set to: 1
 21858  009972  0E00               	movlw	0
 21859  009974  0101               	movlb	1	; () banked
 21860  009976  6FD2               	movwf	__display_time@cntr& (0+255),b
 21861                           
 21862                           ;display.c: 263: while(pressseconds[cntr])
 21863  009978  D016               	goto	l21337
 21864  00997A                     l21333:
 21865                           
 21866                           ; BSR set to: 1
 21867                           ;display.c: 264: display_content[3][cntr] = pressseconds[cntr++];
 21868  00997A  0101               	movlb	1	; () banked
 21869  00997C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21870  00997E  0D01               	mullw	1
 21871  009980  0E28               	movlw	low __display_time@pressseconds
 21872  009982  24F3               	addwf	prodl,w,c
 21873  009984  6ED9               	movwf	fsr2l,c
 21874  009986  0E01               	movlw	high __display_time@pressseconds
 21875  009988  20F4               	addwfc	prodh,w,c
 21876  00998A  6EDA               	movwf	fsr2h,c
 21877  00998C  0101               	movlb	1	; () banked
 21878  00998E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21879  009990  0D01               	mullw	1
 21880  009992  0E90               	movlw	low (_display_content+60)
 21881  009994  24F3               	addwf	prodl,w,c
 21882  009996  6EE1               	movwf	fsr1l,c
 21883  009998  0E03               	movlw	high (_display_content+60)
 21884  00999A  20F4               	addwfc	prodh,w,c
 21885  00999C  6EE2               	movwf	fsr1h,c
 21886  00999E  CFDF FFE7          	movff	indf2,indf1
 21887                           
 21888                           ; BSR set to: 1
 21889  0099A2  0101               	movlb	1	; () banked
 21890  0099A4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21891  0099A6                     l21337:
 21892                           
 21893                           ; BSR set to: 1
 21894  0099A6  0101               	movlb	1	; () banked
 21895  0099A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21896  0099AA  0D01               	mullw	1
 21897  0099AC  0E28               	movlw	low __display_time@pressseconds
 21898  0099AE  24F3               	addwf	prodl,w,c
 21899  0099B0  6ED9               	movwf	fsr2l,c
 21900  0099B2  0E01               	movlw	high __display_time@pressseconds
 21901  0099B4  20F4               	addwfc	prodh,w,c
 21902  0099B6  6EDA               	movwf	fsr2h,c
 21903  0099B8  50DF               	movf	indf2,w,c
 21904  0099BA  B4D8               	btfsc	status,2,c
 21905  0099BC  D065               	goto	l21359
 21906  0099BE  D7DD               	goto	l21333
 21907  0099C0                     l21339:
 21908                           
 21909                           ; BSR set to: 1
 21910                           ;display.c: 268: cntr = 0;
 21911  0099C0  0E00               	movlw	0
 21912  0099C2  0101               	movlb	1	; () banked
 21913  0099C4  6FD2               	movwf	__display_time@cntr& (0+255),b
 21914                           
 21915                           ;display.c: 269: while(setseconds[cntr])
 21916  0099C6  D016               	goto	l21345
 21917  0099C8                     l21341:
 21918                           
 21919                           ; BSR set to: 1
 21920                           ;display.c: 270: display_content[0][cntr] = setseconds[cntr++];
 21921  0099C8  0101               	movlb	1	; () banked
 21922  0099CA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21923  0099CC  0D01               	mullw	1
 21924  0099CE  0E9A               	movlw	low __display_time@setseconds
 21925  0099D0  24F3               	addwf	prodl,w,c
 21926  0099D2  6ED9               	movwf	fsr2l,c
 21927  0099D4  0E01               	movlw	high __display_time@setseconds
 21928  0099D6  20F4               	addwfc	prodh,w,c
 21929  0099D8  6EDA               	movwf	fsr2h,c
 21930  0099DA  0101               	movlb	1	; () banked
 21931  0099DC  51D2               	movf	__display_time@cntr& (0+255),w,b
 21932  0099DE  0D01               	mullw	1
 21933  0099E0  0E54               	movlw	low _display_content
 21934  0099E2  24F3               	addwf	prodl,w,c
 21935  0099E4  6EE1               	movwf	fsr1l,c
 21936  0099E6  0E03               	movlw	high _display_content
 21937  0099E8  20F4               	addwfc	prodh,w,c
 21938  0099EA  6EE2               	movwf	fsr1h,c
 21939  0099EC  CFDF FFE7          	movff	indf2,indf1
 21940                           
 21941                           ; BSR set to: 1
 21942  0099F0  0101               	movlb	1	; () banked
 21943  0099F2  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21944  0099F4                     l21345:
 21945                           
 21946                           ; BSR set to: 1
 21947  0099F4  0101               	movlb	1	; () banked
 21948  0099F6  51D2               	movf	__display_time@cntr& (0+255),w,b
 21949  0099F8  0D01               	mullw	1
 21950  0099FA  0E9A               	movlw	low __display_time@setseconds
 21951  0099FC  24F3               	addwf	prodl,w,c
 21952  0099FE  6ED9               	movwf	fsr2l,c
 21953  009A00  0E01               	movlw	high __display_time@setseconds
 21954  009A02  20F4               	addwfc	prodh,w,c
 21955  009A04  6EDA               	movwf	fsr2h,c
 21956  009A06  50DF               	movf	indf2,w,c
 21957  009A08  A4D8               	btfss	status,2,c
 21958  009A0A  D7DE               	goto	l21341
 21959                           
 21960                           ; BSR set to: 1
 21961                           ;display.c: 271: cntr = 0;
 21962                           
 21963                           ; BSR set to: 1
 21964  009A0C  0E00               	movlw	0
 21965  009A0E  0101               	movlb	1	; () banked
 21966  009A10  6FD2               	movwf	__display_time@cntr& (0+255),b
 21967                           
 21968                           ;display.c: 272: while(presssave[cntr])
 21969  009A12  D016               	goto	l21353
 21970  009A14                     l21349:
 21971                           
 21972                           ; BSR set to: 1
 21973                           ;display.c: 273: display_content[3][cntr] = presssave[cntr++];
 21974  009A14  0101               	movlb	1	; () banked
 21975  009A16  51D2               	movf	__display_time@cntr& (0+255),w,b
 21976  009A18  0D01               	mullw	1
 21977  009A1A  0E70               	movlw	low __display_time@presssave
 21978  009A1C  24F3               	addwf	prodl,w,c
 21979  009A1E  6ED9               	movwf	fsr2l,c
 21980  009A20  0E01               	movlw	high __display_time@presssave
 21981  009A22  20F4               	addwfc	prodh,w,c
 21982  009A24  6EDA               	movwf	fsr2h,c
 21983  009A26  0101               	movlb	1	; () banked
 21984  009A28  51D2               	movf	__display_time@cntr& (0+255),w,b
 21985  009A2A  0D01               	mullw	1
 21986  009A2C  0E90               	movlw	low (_display_content+60)
 21987  009A2E  24F3               	addwf	prodl,w,c
 21988  009A30  6EE1               	movwf	fsr1l,c
 21989  009A32  0E03               	movlw	high (_display_content+60)
 21990  009A34  20F4               	addwfc	prodh,w,c
 21991  009A36  6EE2               	movwf	fsr1h,c
 21992  009A38  CFDF FFE7          	movff	indf2,indf1
 21993                           
 21994                           ; BSR set to: 1
 21995  009A3C  0101               	movlb	1	; () banked
 21996  009A3E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21997  009A40                     l21353:
 21998                           
 21999                           ; BSR set to: 1
 22000  009A40  0101               	movlb	1	; () banked
 22001  009A42  51D2               	movf	__display_time@cntr& (0+255),w,b
 22002  009A44  0D01               	mullw	1
 22003  009A46  0E70               	movlw	low __display_time@presssave
 22004  009A48  24F3               	addwf	prodl,w,c
 22005  009A4A  6ED9               	movwf	fsr2l,c
 22006  009A4C  0E01               	movlw	high __display_time@presssave
 22007  009A4E  20F4               	addwfc	prodh,w,c
 22008  009A50  6EDA               	movwf	fsr2h,c
 22009  009A52  50DF               	movf	indf2,w,c
 22010  009A54  B4D8               	btfsc	status,2,c
 22011  009A56  D018               	goto	l21359
 22012  009A58  D7DD               	goto	l21349
 22013  009A5A                     l21357:
 22014                           
 22015                           ; BSR set to: 1
 22016  009A5A  0101               	movlb	1	; () banked
 22017  009A5C  51CB               	movf	__display_time@mode& (0+255),w,b
 22018                           
 22019                           ; Switch size 1, requested type "space"
 22020                           ; Number of cases is 7, Range of values is 16 to 22
 22021                           ; switch strategies available:
 22022                           ; Name         Instructions Cycles
 22023                           ; simple_byte           22    12 (average)
 22024                           ;	Chosen strategy is simple_byte
 22025  009A5E  0A10               	xorlw	16	; case 16
 22026  009A60  B4D8               	btfsc	status,2,c
 22027  009A62  D5E0               	goto	l21243
 22028  009A64  0A01               	xorlw	1	; case 17
 22029  009A66  B4D8               	btfsc	status,2,c
 22030  009A68  D62A               	goto	l21259
 22031  009A6A  0A03               	xorlw	3	; case 18
 22032  009A6C  B4D8               	btfsc	status,2,c
 22033  009A6E  D674               	goto	l21275
 22034  009A70  0A01               	xorlw	1	; case 19
 22035  009A72  B4D8               	btfsc	status,2,c
 22036  009A74  D6BE               	goto	l21291
 22037  009A76  0A07               	xorlw	7	; case 20
 22038  009A78  B4D8               	btfsc	status,2,c
 22039  009A7A  D708               	goto	l21307
 22040  009A7C  0A01               	xorlw	1	; case 21
 22041  009A7E  B4D8               	btfsc	status,2,c
 22042  009A80  D752               	goto	l21323
 22043  009A82  0A03               	xorlw	3	; case 22
 22044  009A84  B4D8               	btfsc	status,2,c
 22045  009A86  D79C               	goto	l21339
 22046  009A88                     l21359:
 22047                           
 22048                           ; BSR set to: 1
 22049                           ;display.c: 278: display_content[1][0] = '2';
 22050  009A88  0E32               	movlw	50
 22051  009A8A  0103               	movlb	3	; () banked
 22052  009A8C  6F68               	movwf	(_display_content+20)& (0+255),b
 22053                           
 22054                           ;display.c: 279: display_content[1][1] = '0';
 22055  009A8E  0E30               	movlw	48
 22056  009A90  0103               	movlb	3	; () banked
 22057  009A92  6F69               	movwf	(_display_content+21)& (0+255),b
 22058                           
 22059                           ; BSR set to: 3
 22060                           ;display.c: 280: display_content[1][2] = (year>>4) + 48;
 22061  009A94  0101               	movlb	1	; () banked
 22062  009A96  39CC               	swapf	__display_time@year& (0+255),w,b
 22063  009A98  0B0F               	andlw	15
 22064  009A9A  0F30               	addlw	48
 22065  009A9C  0103               	movlb	3	; () banked
 22066  009A9E  6F6A               	movwf	(_display_content+22)& (0+255),b
 22067                           
 22068                           ; BSR set to: 3
 22069                           ;display.c: 281: display_content[1][3] = (year&0x0F) + 48;
 22070  009AA0  0101               	movlb	1	; () banked
 22071  009AA2  51CC               	movf	__display_time@year& (0+255),w,b
 22072  009AA4  0B0F               	andlw	15
 22073  009AA6  0F30               	addlw	48
 22074  009AA8  0103               	movlb	3	; () banked
 22075  009AAA  6F6B               	movwf	(_display_content+23)& (0+255),b
 22076                           
 22077                           ;display.c: 283: display_content[1][4] = '-';
 22078  009AAC  0E2D               	movlw	45
 22079  009AAE  0103               	movlb	3	; () banked
 22080  009AB0  6F6C               	movwf	(_display_content+24)& (0+255),b
 22081                           
 22082                           ; BSR set to: 3
 22083                           ;display.c: 284: display_content[1][5] = (month>>4) + 48;
 22084  009AB2  0101               	movlb	1	; () banked
 22085  009AB4  39CD               	swapf	__display_time@month& (0+255),w,b
 22086  009AB6  0B0F               	andlw	15
 22087  009AB8  0F30               	addlw	48
 22088  009ABA  0103               	movlb	3	; () banked
 22089  009ABC  6F6D               	movwf	(_display_content+25)& (0+255),b
 22090                           
 22091                           ; BSR set to: 3
 22092                           ;display.c: 285: display_content[1][6] = (month&0x0F) + 48;
 22093  009ABE  0101               	movlb	1	; () banked
 22094  009AC0  51CD               	movf	__display_time@month& (0+255),w,b
 22095  009AC2  0B0F               	andlw	15
 22096  009AC4  0F30               	addlw	48
 22097  009AC6  0103               	movlb	3	; () banked
 22098  009AC8  6F6E               	movwf	(_display_content+26)& (0+255),b
 22099                           
 22100                           ;display.c: 287: display_content[1][7] = '-';
 22101  009ACA  0E2D               	movlw	45
 22102  009ACC  0103               	movlb	3	; () banked
 22103  009ACE  6F6F               	movwf	(_display_content+27)& (0+255),b
 22104                           
 22105                           ; BSR set to: 3
 22106                           ;display.c: 288: display_content[1][8] = (day>>4) + 48;
 22107  009AD0  0101               	movlb	1	; () banked
 22108  009AD2  39CE               	swapf	__display_time@day& (0+255),w,b
 22109  009AD4  0B0F               	andlw	15
 22110  009AD6  0F30               	addlw	48
 22111  009AD8  0103               	movlb	3	; () banked
 22112  009ADA  6F70               	movwf	(_display_content+28)& (0+255),b
 22113                           
 22114                           ; BSR set to: 3
 22115                           ;display.c: 289: display_content[1][9] = (day&0x0F) + 48;
 22116  009ADC  0101               	movlb	1	; () banked
 22117  009ADE  51CE               	movf	__display_time@day& (0+255),w,b
 22118  009AE0  0B0F               	andlw	15
 22119  009AE2  0F30               	addlw	48
 22120  009AE4  0103               	movlb	3	; () banked
 22121  009AE6  6F71               	movwf	(_display_content+29)& (0+255),b
 22122                           
 22123                           ; BSR set to: 3
 22124                           ;display.c: 291: display_content[2][0] = (hours>>4) + 48;
 22125  009AE8  0101               	movlb	1	; () banked
 22126  009AEA  39CF               	swapf	__display_time@hours& (0+255),w,b
 22127  009AEC  0B0F               	andlw	15
 22128  009AEE  0F30               	addlw	48
 22129  009AF0  0103               	movlb	3	; () banked
 22130  009AF2  6F7C               	movwf	(_display_content+40)& (0+255),b
 22131                           
 22132                           ; BSR set to: 3
 22133                           ;display.c: 292: display_content[2][1] = (hours&0x0F) + 48;
 22134  009AF4  0101               	movlb	1	; () banked
 22135  009AF6  51CF               	movf	__display_time@hours& (0+255),w,b
 22136  009AF8  0B0F               	andlw	15
 22137  009AFA  0F30               	addlw	48
 22138  009AFC  0103               	movlb	3	; () banked
 22139  009AFE  6F7D               	movwf	(_display_content+41)& (0+255),b
 22140                           
 22141                           ;display.c: 294: display_content[2][2] = ':';
 22142  009B00  0E3A               	movlw	58
 22143  009B02  0103               	movlb	3	; () banked
 22144  009B04  6F7E               	movwf	(_display_content+42)& (0+255),b
 22145                           
 22146                           ; BSR set to: 3
 22147                           ;display.c: 295: display_content[2][3] = (minutes>>4) + 48;
 22148  009B06  0101               	movlb	1	; () banked
 22149  009B08  39D0               	swapf	__display_time@minutes& (0+255),w,b
 22150  009B0A  0B0F               	andlw	15
 22151  009B0C  0F30               	addlw	48
 22152  009B0E  0103               	movlb	3	; () banked
 22153  009B10  6F7F               	movwf	(_display_content+43)& (0+255),b
 22154                           
 22155                           ; BSR set to: 3
 22156                           ;display.c: 296: display_content[2][4] = (minutes&0x0F) + 48;
 22157  009B12  0101               	movlb	1	; () banked
 22158  009B14  51D0               	movf	__display_time@minutes& (0+255),w,b
 22159  009B16  0B0F               	andlw	15
 22160  009B18  0F30               	addlw	48
 22161  009B1A  0103               	movlb	3	; () banked
 22162  009B1C  6F80               	movwf	(_display_content+44)& (0+255),b
 22163                           
 22164                           ;display.c: 298: display_content[2][5] = ':';
 22165  009B1E  0E3A               	movlw	58
 22166  009B20  0103               	movlb	3	; () banked
 22167  009B22  6F81               	movwf	(_display_content+45)& (0+255),b
 22168                           
 22169                           ; BSR set to: 3
 22170                           ;display.c: 299: display_content[2][6] = (seconds>>4) + 48;
 22171  009B24  0101               	movlb	1	; () banked
 22172  009B26  39D1               	swapf	__display_time@seconds& (0+255),w,b
 22173  009B28  0B0F               	andlw	15
 22174  009B2A  0F30               	addlw	48
 22175  009B2C  0103               	movlb	3	; () banked
 22176  009B2E  6F82               	movwf	(_display_content+46)& (0+255),b
 22177                           
 22178                           ; BSR set to: 3
 22179                           ;display.c: 300: display_content[2][7] = (seconds&0x0F) + 48;
 22180  009B30  0101               	movlb	1	; () banked
 22181  009B32  51D1               	movf	__display_time@seconds& (0+255),w,b
 22182  009B34  0B0F               	andlw	15
 22183  009B36  0F30               	addlw	48
 22184  009B38  0103               	movlb	3	; () banked
 22185  009B3A  6F83               	movwf	(_display_content+47)& (0+255),b
 22186                           
 22187                           ; BSR set to: 3
 22188  009B3C  0012               	return		;funcret
 22189  009B3E                     __end_of__display_time:
 22190                           	opt stack 0
 22191                           tblptru	equ	0xFF8
 22192                           tblptrh	equ	0xFF7
 22193                           tblptrl	equ	0xFF6
 22194                           tablat	equ	0xFF5
 22195                           prodh	equ	0xFF4
 22196                           prodl	equ	0xFF3
 22197                           intcon	equ	0xFF2
 22198                           intcon2	equ	0xFF1
 22199                           intcon3	equ	0xFF0
 22200                           postinc0	equ	0xFEE
 22201                           wreg	equ	0xFE8
 22202                           indf1	equ	0xFE7
 22203                           postinc1	equ	0xFE6
 22204                           postdec1	equ	0xFE5
 22205                           plusw1	equ	0xFE3
 22206                           fsr1h	equ	0xFE2
 22207                           fsr1l	equ	0xFE1
 22208                           indf2	equ	0xFDF
 22209                           postinc2	equ	0xFDE
 22210                           postdec2	equ	0xFDD
 22211                           plusw2	equ	0xFDB
 22212                           fsr2h	equ	0xFDA
 22213                           fsr2l	equ	0xFD9
 22214                           status	equ	0xFD8
 22215                           
 22216 ;; *************** function __display_temperature *****************
 22217 ;; Defined at:
 22218 ;;		line 513 in file "display.c"
 22219 ;; Parameters:    Size  Location     Type
 22220 ;;		None
 22221 ;; Auto vars:     Size  Location     Type
 22222 ;;  header         20   48[BANK0 ] const unsigned char [20]
 22223 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 22224 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 22225 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 22226 ;;  cntr            1  103[BANK0 ] unsigned char 
 22227 ;; Return value:  Size  Location     Type
 22228 ;;                  1    wreg      void 
 22229 ;; Registers used:
 22230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22231 ;; Tracked objects:
 22232 ;;		On entry : 0/0
 22233 ;;		On exit  : 0/0
 22234 ;;		Unchanged: 0/0
 22235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22237 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22239 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22240 ;;Total ram usage:       56 bytes
 22241 ;; Hardware stack levels used:    1
 22242 ;; Hardware stack levels required when called:   14
 22243 ;; This function calls:
 22244 ;;		__display_itoa
 22245 ;; This function is called by:
 22246 ;;		_display_prepare
 22247 ;; This function uses a non-reentrant model
 22248 ;;
 22249                           
 22250                           	psect	text101
 22251  00D8A8                     __ptext101:
 22252                           	opt stack 0
 22253  00D8A8                     __display_temperature:
 22254                           	opt stack 15
 22255                           
 22256                           ;display.c: 515: uint8_t cntr;
 22257                           ;display.c: 516: const char header[] = "Temperature Monitor";
 22258                           
 22259                           ; BSR set to: 3
 22260                           ;incstack = 0
 22261  00D8A8  0EDF               	movlw	low __display_temperature@F8773
 22262  00D8AA  6EF6               	movwf	tblptrl,c
 22263  00D8AC                     	if	1	;There is more than 1 active tblptr byte
 22264  00D8AC  0E90               	movlw	high __display_temperature@F8773
 22265  00D8AE  6EF7               	movwf	tblptrh,c
 22266  00D8B0                     	endif
 22267  00D8B0                     	if	1	;There are 3 active tblptr bytes
 22268  00D8B0  0E00               	movlw	low (__display_temperature@F8773 shr (0+16))
 22269  00D8B2  6EF8               	movwf	tblptru,c
 22270  00D8B4                     	endif
 22271  00D8B4  EE20  F090         	lfsr	2,__display_temperature@header
 22272  00D8B8  0E13               	movlw	19
 22273  00D8BA                     u21330:
 22274  00D8BA  0009               	tblrd		*+
 22275  00D8BC  CFF5 FFDE          	movff	tablat,postinc2
 22276  00D8C0  06E8               	decf	wreg,f,c
 22277  00D8C2  E2FB               	bc	u21330
 22278                           
 22279                           ;display.c: 517: const char internal[] = "On-board: ";
 22280  00D8C4  0ECF               	movlw	low __display_temperature@F8775
 22281  00D8C6  6EF6               	movwf	tblptrl,c
 22282  00D8C8                     	if	1	;There is more than 1 active tblptr byte
 22283  00D8C8  0E92               	movlw	high __display_temperature@F8775
 22284  00D8CA  6EF7               	movwf	tblptrh,c
 22285  00D8CC                     	endif
 22286  00D8CC                     	if	1	;There are 3 active tblptr bytes
 22287  00D8CC  0E00               	movlw	low (__display_temperature@F8775 shr (0+16))
 22288  00D8CE  6EF8               	movwf	tblptru,c
 22289  00D8D0                     	endif
 22290  00D8D0  EE20  F0BC         	lfsr	2,__display_temperature@internal
 22291  00D8D4  0E0A               	movlw	10
 22292  00D8D6                     u21340:
 22293  00D8D6  0009               	tblrd		*+
 22294  00D8D8  CFF5 FFDE          	movff	tablat,postinc2
 22295  00D8DC  06E8               	decf	wreg,f,c
 22296  00D8DE  E2FB               	bc	u21340
 22297                           
 22298                           ;display.c: 518: const char external1[] = "External 1:";
 22299  00D8E0  0E9F               	movlw	low __display_temperature@F8777
 22300  00D8E2  6EF6               	movwf	tblptrl,c
 22301  00D8E4                     	if	1	;There is more than 1 active tblptr byte
 22302  00D8E4  0E92               	movlw	high __display_temperature@F8777
 22303  00D8E6  6EF7               	movwf	tblptrh,c
 22304  00D8E8                     	endif
 22305  00D8E8                     	if	1	;There are 3 active tblptr bytes
 22306  00D8E8  0E00               	movlw	low (__display_temperature@F8777 shr (0+16))
 22307  00D8EA  6EF8               	movwf	tblptru,c
 22308  00D8EC                     	endif
 22309  00D8EC  EE20  F0A4         	lfsr	2,__display_temperature@external1
 22310  00D8F0  0E0B               	movlw	11
 22311  00D8F2                     u21350:
 22312  00D8F2  0009               	tblrd		*+
 22313  00D8F4  CFF5 FFDE          	movff	tablat,postinc2
 22314  00D8F8  06E8               	decf	wreg,f,c
 22315  00D8FA  E2FB               	bc	u21350
 22316                           
 22317                           ;display.c: 519: const char external2[] = "External 2:";
 22318  00D8FC  0E93               	movlw	low __display_temperature@F8779
 22319  00D8FE  6EF6               	movwf	tblptrl,c
 22320  00D900                     	if	1	;There is more than 1 active tblptr byte
 22321  00D900  0E92               	movlw	high __display_temperature@F8779
 22322  00D902  6EF7               	movwf	tblptrh,c
 22323  00D904                     	endif
 22324  00D904                     	if	1	;There are 3 active tblptr bytes
 22325  00D904  0E00               	movlw	low (__display_temperature@F8779 shr (0+16))
 22326  00D906  6EF8               	movwf	tblptru,c
 22327  00D908                     	endif
 22328  00D908  EE20  F0B0         	lfsr	2,__display_temperature@external2
 22329  00D90C  0E0B               	movlw	11
 22330  00D90E                     u21360:
 22331  00D90E  0009               	tblrd		*+
 22332  00D910  CFF5 FFDE          	movff	tablat,postinc2
 22333  00D914  06E8               	decf	wreg,f,c
 22334  00D916  E2FB               	bc	u21360
 22335                           
 22336                           ;display.c: 521: cntr = 0;
 22337  00D918  0E00               	movlw	0
 22338  00D91A  0100               	movlb	0	; () banked
 22339  00D91C  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22340                           
 22341                           ;display.c: 522: while(header[cntr])
 22342  00D91E  D016               	goto	l21597
 22343  00D920                     l21593:
 22344                           
 22345                           ; BSR set to: 0
 22346                           ;display.c: 523: display_content[0][cntr] = header[cntr++];
 22347  00D920  0100               	movlb	0	; () banked
 22348  00D922  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22349  00D924  0D01               	mullw	1
 22350  00D926  0E90               	movlw	low __display_temperature@header
 22351  00D928  24F3               	addwf	prodl,w,c
 22352  00D92A  6ED9               	movwf	fsr2l,c
 22353  00D92C  0E00               	movlw	high __display_temperature@header
 22354  00D92E  20F4               	addwfc	prodh,w,c
 22355  00D930  6EDA               	movwf	fsr2h,c
 22356  00D932  0100               	movlb	0	; () banked
 22357  00D934  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22358  00D936  0D01               	mullw	1
 22359  00D938  0E54               	movlw	low _display_content
 22360  00D93A  24F3               	addwf	prodl,w,c
 22361  00D93C  6EE1               	movwf	fsr1l,c
 22362  00D93E  0E03               	movlw	high _display_content
 22363  00D940  20F4               	addwfc	prodh,w,c
 22364  00D942  6EE2               	movwf	fsr1h,c
 22365  00D944  CFDF FFE7          	movff	indf2,indf1
 22366                           
 22367                           ; BSR set to: 0
 22368  00D948  0100               	movlb	0	; () banked
 22369  00D94A  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22370  00D94C                     l21597:
 22371                           
 22372                           ; BSR set to: 0
 22373  00D94C  0100               	movlb	0	; () banked
 22374  00D94E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22375  00D950  0D01               	mullw	1
 22376  00D952  0E90               	movlw	low __display_temperature@header
 22377  00D954  24F3               	addwf	prodl,w,c
 22378  00D956  6ED9               	movwf	fsr2l,c
 22379  00D958  0E00               	movlw	high __display_temperature@header
 22380  00D95A  20F4               	addwfc	prodh,w,c
 22381  00D95C  6EDA               	movwf	fsr2h,c
 22382  00D95E  50DF               	movf	indf2,w,c
 22383  00D960  A4D8               	btfss	status,2,c
 22384  00D962  D7DE               	goto	l21593
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;display.c: 525: cntr = 0;
 22388                           
 22389                           ; BSR set to: 0
 22390  00D964  0E00               	movlw	0
 22391  00D966  0100               	movlb	0	; () banked
 22392  00D968  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22393                           
 22394                           ;display.c: 526: while(internal[cntr])
 22395  00D96A  D016               	goto	l21605
 22396  00D96C                     l21601:
 22397                           
 22398                           ; BSR set to: 0
 22399                           ;display.c: 527: display_content[1][cntr] = internal[cntr++];
 22400  00D96C  0100               	movlb	0	; () banked
 22401  00D96E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22402  00D970  0D01               	mullw	1
 22403  00D972  0EBC               	movlw	low __display_temperature@internal
 22404  00D974  24F3               	addwf	prodl,w,c
 22405  00D976  6ED9               	movwf	fsr2l,c
 22406  00D978  0E00               	movlw	high __display_temperature@internal
 22407  00D97A  20F4               	addwfc	prodh,w,c
 22408  00D97C  6EDA               	movwf	fsr2h,c
 22409  00D97E  0100               	movlb	0	; () banked
 22410  00D980  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22411  00D982  0D01               	mullw	1
 22412  00D984  0E68               	movlw	low (_display_content+20)
 22413  00D986  24F3               	addwf	prodl,w,c
 22414  00D988  6EE1               	movwf	fsr1l,c
 22415  00D98A  0E03               	movlw	high (_display_content+20)
 22416  00D98C  20F4               	addwfc	prodh,w,c
 22417  00D98E  6EE2               	movwf	fsr1h,c
 22418  00D990  CFDF FFE7          	movff	indf2,indf1
 22419                           
 22420                           ; BSR set to: 0
 22421  00D994  0100               	movlb	0	; () banked
 22422  00D996  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22423  00D998                     l21605:
 22424                           
 22425                           ; BSR set to: 0
 22426  00D998  0100               	movlb	0	; () banked
 22427  00D99A  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22428  00D99C  0D01               	mullw	1
 22429  00D99E  0EBC               	movlw	low __display_temperature@internal
 22430  00D9A0  24F3               	addwf	prodl,w,c
 22431  00D9A2  6ED9               	movwf	fsr2l,c
 22432  00D9A4  0E00               	movlw	high __display_temperature@internal
 22433  00D9A6  20F4               	addwfc	prodh,w,c
 22434  00D9A8  6EDA               	movwf	fsr2h,c
 22435  00D9AA  50DF               	movf	indf2,w,c
 22436  00D9AC  A4D8               	btfss	status,2,c
 22437  00D9AE  D7DE               	goto	l21601
 22438                           
 22439                           ; BSR set to: 0
 22440                           ;display.c: 529: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 22441                           
 22442                           ; BSR set to: 0
 22443  00D9B0  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 22444  00D9B4  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 22445  00D9B8  0E02               	movlw	2
 22446  00D9BA  0100               	movlb	0	; () banked
 22447  00D9BC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22448  00D9BE  0E74               	movlw	low (_display_content+32)
 22449  00D9C0  0100               	movlb	0	; () banked
 22450  00D9C2  6F7B               	movwf	__display_itoa@text& (0+255),b
 22451  00D9C4  0E03               	movlw	high (_display_content+32)
 22452  00D9C6  0100               	movlb	0	; () banked
 22453  00D9C8  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22454  00D9CA  ECBE  F063         	call	__display_itoa	;wreg free
 22455                           
 22456                           ;display.c: 531: cntr = 0;
 22457  00D9CE  0E00               	movlw	0
 22458  00D9D0  0100               	movlb	0	; () banked
 22459  00D9D2  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22460                           
 22461                           ;display.c: 532: while(external1[cntr])
 22462  00D9D4  D016               	goto	l21615
 22463  00D9D6                     l21611:
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;display.c: 533: display_content[2][cntr] = external1[cntr++];
 22467  00D9D6  0100               	movlb	0	; () banked
 22468  00D9D8  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22469  00D9DA  0D01               	mullw	1
 22470  00D9DC  0EA4               	movlw	low __display_temperature@external1
 22471  00D9DE  24F3               	addwf	prodl,w,c
 22472  00D9E0  6ED9               	movwf	fsr2l,c
 22473  00D9E2  0E00               	movlw	high __display_temperature@external1
 22474  00D9E4  20F4               	addwfc	prodh,w,c
 22475  00D9E6  6EDA               	movwf	fsr2h,c
 22476  00D9E8  0100               	movlb	0	; () banked
 22477  00D9EA  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22478  00D9EC  0D01               	mullw	1
 22479  00D9EE  0E7C               	movlw	low (_display_content+40)
 22480  00D9F0  24F3               	addwf	prodl,w,c
 22481  00D9F2  6EE1               	movwf	fsr1l,c
 22482  00D9F4  0E03               	movlw	high (_display_content+40)
 22483  00D9F6  20F4               	addwfc	prodh,w,c
 22484  00D9F8  6EE2               	movwf	fsr1h,c
 22485  00D9FA  CFDF FFE7          	movff	indf2,indf1
 22486                           
 22487                           ; BSR set to: 0
 22488  00D9FE  0100               	movlb	0	; () banked
 22489  00DA00  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22490  00DA02                     l21615:
 22491                           
 22492                           ; BSR set to: 0
 22493  00DA02  0100               	movlb	0	; () banked
 22494  00DA04  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22495  00DA06  0D01               	mullw	1
 22496  00DA08  0EA4               	movlw	low __display_temperature@external1
 22497  00DA0A  24F3               	addwf	prodl,w,c
 22498  00DA0C  6ED9               	movwf	fsr2l,c
 22499  00DA0E  0E00               	movlw	high __display_temperature@external1
 22500  00DA10  20F4               	addwfc	prodh,w,c
 22501  00DA12  6EDA               	movwf	fsr2h,c
 22502  00DA14  50DF               	movf	indf2,w,c
 22503  00DA16  A4D8               	btfss	status,2,c
 22504  00DA18  D7DE               	goto	l21611
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;display.c: 535: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 22508                           
 22509                           ; BSR set to: 0
 22510  00DA1A  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 22511  00DA1E  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 22512  00DA22  0E02               	movlw	2
 22513  00DA24  0100               	movlb	0	; () banked
 22514  00DA26  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22515  00DA28  0E88               	movlw	low (_display_content+52)
 22516  00DA2A  0100               	movlb	0	; () banked
 22517  00DA2C  6F7B               	movwf	__display_itoa@text& (0+255),b
 22518  00DA2E  0E03               	movlw	high (_display_content+52)
 22519  00DA30  0100               	movlb	0	; () banked
 22520  00DA32  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22521  00DA34  ECBE  F063         	call	__display_itoa	;wreg free
 22522                           
 22523                           ;display.c: 537: cntr = 0;
 22524  00DA38  0E00               	movlw	0
 22525  00DA3A  0100               	movlb	0	; () banked
 22526  00DA3C  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22527                           
 22528                           ;display.c: 538: while(external2[cntr])
 22529  00DA3E  D016               	goto	l21625
 22530  00DA40                     l21621:
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;display.c: 539: display_content[3][cntr] = external2[cntr++];
 22534  00DA40  0100               	movlb	0	; () banked
 22535  00DA42  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22536  00DA44  0D01               	mullw	1
 22537  00DA46  0EB0               	movlw	low __display_temperature@external2
 22538  00DA48  24F3               	addwf	prodl,w,c
 22539  00DA4A  6ED9               	movwf	fsr2l,c
 22540  00DA4C  0E00               	movlw	high __display_temperature@external2
 22541  00DA4E  20F4               	addwfc	prodh,w,c
 22542  00DA50  6EDA               	movwf	fsr2h,c
 22543  00DA52  0100               	movlb	0	; () banked
 22544  00DA54  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22545  00DA56  0D01               	mullw	1
 22546  00DA58  0E90               	movlw	low (_display_content+60)
 22547  00DA5A  24F3               	addwf	prodl,w,c
 22548  00DA5C  6EE1               	movwf	fsr1l,c
 22549  00DA5E  0E03               	movlw	high (_display_content+60)
 22550  00DA60  20F4               	addwfc	prodh,w,c
 22551  00DA62  6EE2               	movwf	fsr1h,c
 22552  00DA64  CFDF FFE7          	movff	indf2,indf1
 22553                           
 22554                           ; BSR set to: 0
 22555  00DA68  0100               	movlb	0	; () banked
 22556  00DA6A  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22557  00DA6C                     l21625:
 22558                           
 22559                           ; BSR set to: 0
 22560  00DA6C  0100               	movlb	0	; () banked
 22561  00DA6E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22562  00DA70  0D01               	mullw	1
 22563  00DA72  0EB0               	movlw	low __display_temperature@external2
 22564  00DA74  24F3               	addwf	prodl,w,c
 22565  00DA76  6ED9               	movwf	fsr2l,c
 22566  00DA78  0E00               	movlw	high __display_temperature@external2
 22567  00DA7A  20F4               	addwfc	prodh,w,c
 22568  00DA7C  6EDA               	movwf	fsr2h,c
 22569  00DA7E  50DF               	movf	indf2,w,c
 22570  00DA80  A4D8               	btfss	status,2,c
 22571  00DA82  D7DE               	goto	l21621
 22572                           
 22573                           ; BSR set to: 0
 22574                           ;display.c: 541: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 22575                           
 22576                           ; BSR set to: 0
 22577  00DA84  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 22578  00DA88  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 22579  00DA8C  0E02               	movlw	2
 22580  00DA8E  0100               	movlb	0	; () banked
 22581  00DA90  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22582  00DA92  0E9C               	movlw	low (_display_content+72)
 22583  00DA94  0100               	movlb	0	; () banked
 22584  00DA96  6F7B               	movwf	__display_itoa@text& (0+255),b
 22585  00DA98  0E03               	movlw	high (_display_content+72)
 22586  00DA9A  0100               	movlb	0	; () banked
 22587  00DA9C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22588  00DA9E  ECBE  F063         	call	__display_itoa	;wreg free
 22589  00DAA2  0012               	return		;funcret
 22590  00DAA4                     __end_of__display_temperature:
 22591                           	opt stack 0
 22592                           tblptru	equ	0xFF8
 22593                           tblptrh	equ	0xFF7
 22594                           tblptrl	equ	0xFF6
 22595                           tablat	equ	0xFF5
 22596                           prodh	equ	0xFF4
 22597                           prodl	equ	0xFF3
 22598                           intcon	equ	0xFF2
 22599                           intcon2	equ	0xFF1
 22600                           intcon3	equ	0xFF0
 22601                           postinc0	equ	0xFEE
 22602                           wreg	equ	0xFE8
 22603                           indf1	equ	0xFE7
 22604                           postinc1	equ	0xFE6
 22605                           postdec1	equ	0xFE5
 22606                           plusw1	equ	0xFE3
 22607                           fsr1h	equ	0xFE2
 22608                           fsr1l	equ	0xFE1
 22609                           indf2	equ	0xFDF
 22610                           postinc2	equ	0xFDE
 22611                           postdec2	equ	0xFDD
 22612                           plusw2	equ	0xFDB
 22613                           fsr2h	equ	0xFDA
 22614                           fsr2l	equ	0xFD9
 22615                           status	equ	0xFD8
 22616                           
 22617 ;; *************** function __display_outputs *****************
 22618 ;; Defined at:
 22619 ;;		line 336 in file "display.c"
 22620 ;; Parameters:    Size  Location     Type
 22621 ;;  mode            1    wreg     unsigned char 
 22622 ;; Auto vars:     Size  Location     Type
 22623 ;;  mode            1   72[BANK0 ] unsigned char 
 22624 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 22625 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 22626 ;;  low            16   42[BANK0 ] const unsigned char [16]
 22627 ;;  header         14   58[BANK0 ] const unsigned char [14]
 22628 ;;  cntr            1   73[BANK0 ] unsigned char 
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  1    wreg      void 
 22631 ;; Registers used:
 22632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22633 ;; Tracked objects:
 22634 ;;		On entry : 0/0
 22635 ;;		On exit  : 0/0
 22636 ;;		Unchanged: 0/0
 22637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22639 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22641 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22642 ;;Total ram usage:       74 bytes
 22643 ;; Hardware stack levels used:    1
 22644 ;; Hardware stack levels required when called:   10
 22645 ;; This function calls:
 22646 ;;		Nothing
 22647 ;; This function is called by:
 22648 ;;		_display_prepare
 22649 ;; This function uses a non-reentrant model
 22650 ;;
 22651                           
 22652                           	psect	text102
 22653  00D220                     __ptext102:
 22654                           	opt stack 0
 22655  00D220                     __display_outputs:
 22656                           	opt stack 19
 22657                           
 22658                           ;incstack = 0
 22659                           ;__display_outputs@mode stored from wreg
 22660  00D220  0100               	movlb	0	; () banked
 22661  00D222  6FA8               	movwf	__display_outputs@mode& (0+255),b
 22662                           
 22663                           ;display.c: 338: uint8_t cntr;
 22664                           ;display.c: 339: const char header[] = "Power Outputs";
 22665  00D224  0E69               	movlw	low __display_outputs@F8722
 22666  00D226  6EF6               	movwf	tblptrl,c
 22667  00D228                     	if	1	;There is more than 1 active tblptr byte
 22668  00D228  0E92               	movlw	high __display_outputs@F8722
 22669  00D22A  6EF7               	movwf	tblptrh,c
 22670  00D22C                     	endif
 22671  00D22C                     	if	1	;There are 3 active tblptr bytes
 22672  00D22C  0E00               	movlw	low (__display_outputs@F8722 shr (0+16))
 22673  00D22E  6EF8               	movwf	tblptru,c
 22674  00D230                     	endif
 22675  00D230  EE20  F09A         	lfsr	2,__display_outputs@header
 22676  00D234  0E0D               	movlw	13
 22677  00D236                     u20970:
 22678  00D236  0009               	tblrd		*+
 22679  00D238  CFF5 FFDE          	movff	tablat,postinc2
 22680  00D23C  06E8               	decf	wreg,f,c
 22681  00D23E  E2FB               	bc	u20970
 22682                           
 22683                           ;display.c: 340: const char low[] = "Battery too low";
 22684  00D240  0E0B               	movlw	low __display_outputs@F8724
 22685  00D242  6EF6               	movwf	tblptrl,c
 22686  00D244                     	if	1	;There is more than 1 active tblptr byte
 22687  00D244  0E92               	movlw	high __display_outputs@F8724
 22688  00D246  6EF7               	movwf	tblptrh,c
 22689  00D248                     	endif
 22690  00D248                     	if	1	;There are 3 active tblptr bytes
 22691  00D248  0E00               	movlw	low (__display_outputs@F8724 shr (0+16))
 22692  00D24A  6EF8               	movwf	tblptru,c
 22693  00D24C                     	endif
 22694  00D24C  EE20  F08A         	lfsr	2,__display_outputs@low
 22695  00D250  0E0F               	movlw	15
 22696  00D252                     u20980:
 22697  00D252  0009               	tblrd		*+
 22698  00D254  CFF5 FFDE          	movff	tablat,postinc2
 22699  00D258  06E8               	decf	wreg,f,c
 22700  00D25A  E2FB               	bc	u20980
 22701                           
 22702                           ;display.c: 341: const char line3[] = "  Out1 off  Out2 off";
 22703  00D25C  0ECA               	movlw	low __display_outputs@F8726
 22704  00D25E  6EF6               	movwf	tblptrl,c
 22705  00D260                     	if	1	;There is more than 1 active tblptr byte
 22706  00D260  0E90               	movlw	high __display_outputs@F8726
 22707  00D262  6EF7               	movwf	tblptrh,c
 22708  00D264                     	endif
 22709  00D264                     	if	1	;There are 3 active tblptr bytes
 22710  00D264  0E00               	movlw	low (__display_outputs@F8726 shr (0+16))
 22711  00D266  6EF8               	movwf	tblptru,c
 22712  00D268                     	endif
 22713  00D268  EE20  F060         	lfsr	2,__display_outputs@line3
 22714  00D26C  0E14               	movlw	20
 22715  00D26E                     u20990:
 22716  00D26E  0009               	tblrd		*+
 22717  00D270  CFF5 FFDE          	movff	tablat,postinc2
 22718  00D274  06E8               	decf	wreg,f,c
 22719  00D276  E2FB               	bc	u20990
 22720                           
 22721                           ;display.c: 342: const char line4[] = "  Out3 off  Out4 off";
 22722  00D278  0EB5               	movlw	low __display_outputs@F8728
 22723  00D27A  6EF6               	movwf	tblptrl,c
 22724  00D27C                     	if	1	;There is more than 1 active tblptr byte
 22725  00D27C  0E90               	movlw	high __display_outputs@F8728
 22726  00D27E  6EF7               	movwf	tblptrh,c
 22727  00D280                     	endif
 22728  00D280                     	if	1	;There are 3 active tblptr bytes
 22729  00D280  0E00               	movlw	low (__display_outputs@F8728 shr (0+16))
 22730  00D282  6EF8               	movwf	tblptru,c
 22731  00D284                     	endif
 22732  00D284  EE20  F075         	lfsr	2,__display_outputs@line4
 22733  00D288  0E14               	movlw	20
 22734  00D28A                     u21000:
 22735  00D28A  0009               	tblrd		*+
 22736  00D28C  CFF5 FFDE          	movff	tablat,postinc2
 22737  00D290  06E8               	decf	wreg,f,c
 22738  00D292  E2FB               	bc	u21000
 22739                           
 22740                           ;display.c: 344: cntr = 0;
 22741  00D294  0E00               	movlw	0
 22742  00D296  0100               	movlb	0	; () banked
 22743  00D298  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22744                           
 22745                           ;display.c: 345: while(header[cntr])
 22746  00D29A  D016               	goto	l21431
 22747  00D29C                     l21427:
 22748                           
 22749                           ; BSR set to: 0
 22750                           ;display.c: 346: display_content[0][cntr] = header[cntr++];
 22751  00D29C  0100               	movlb	0	; () banked
 22752  00D29E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22753  00D2A0  0D01               	mullw	1
 22754  00D2A2  0E9A               	movlw	low __display_outputs@header
 22755  00D2A4  24F3               	addwf	prodl,w,c
 22756  00D2A6  6ED9               	movwf	fsr2l,c
 22757  00D2A8  0E00               	movlw	high __display_outputs@header
 22758  00D2AA  20F4               	addwfc	prodh,w,c
 22759  00D2AC  6EDA               	movwf	fsr2h,c
 22760  00D2AE  0100               	movlb	0	; () banked
 22761  00D2B0  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22762  00D2B2  0D01               	mullw	1
 22763  00D2B4  0E54               	movlw	low _display_content
 22764  00D2B6  24F3               	addwf	prodl,w,c
 22765  00D2B8  6EE1               	movwf	fsr1l,c
 22766  00D2BA  0E03               	movlw	high _display_content
 22767  00D2BC  20F4               	addwfc	prodh,w,c
 22768  00D2BE  6EE2               	movwf	fsr1h,c
 22769  00D2C0  CFDF FFE7          	movff	indf2,indf1
 22770                           
 22771                           ; BSR set to: 0
 22772  00D2C4  0100               	movlb	0	; () banked
 22773  00D2C6  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22774  00D2C8                     l21431:
 22775                           
 22776                           ; BSR set to: 0
 22777  00D2C8  0100               	movlb	0	; () banked
 22778  00D2CA  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22779  00D2CC  0D01               	mullw	1
 22780  00D2CE  0E9A               	movlw	low __display_outputs@header
 22781  00D2D0  24F3               	addwf	prodl,w,c
 22782  00D2D2  6ED9               	movwf	fsr2l,c
 22783  00D2D4  0E00               	movlw	high __display_outputs@header
 22784  00D2D6  20F4               	addwfc	prodh,w,c
 22785  00D2D8  6EDA               	movwf	fsr2h,c
 22786  00D2DA  50DF               	movf	indf2,w,c
 22787  00D2DC  A4D8               	btfss	status,2,c
 22788  00D2DE  D7DE               	goto	l21427
 22789                           
 22790                           ; BSR set to: 0
 22791                           ;display.c: 348: if(os.output_voltage<-1)
 22792                           
 22793                           ; BSR set to: 0
 22794  00D2E0  0102               	movlb	2	; () banked
 22795  00D2E2  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 22796  00D2E4  D02D               	goto	l21443
 22797  00D2E6  0102               	movlb	2	; () banked
 22798  00D2E8  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 22799  00D2EA  0EFF               	movlw	255
 22800  00D2EC  0102               	movlb	2	; () banked
 22801  00D2EE  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 22802  00D2F0  B0D8               	btfsc	status,0,c
 22803  00D2F2  D026               	goto	l21443
 22804                           
 22805                           ; BSR set to: 2
 22806                           ;display.c: 349: {
 22807                           ;display.c: 350: cntr = 0;
 22808  00D2F4  0E00               	movlw	0
 22809  00D2F6  0100               	movlb	0	; () banked
 22810  00D2F8  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22811                           
 22812                           ;display.c: 351: while(low[cntr])
 22813  00D2FA  D016               	goto	l21441
 22814  00D2FC                     l21437:
 22815                           
 22816                           ; BSR set to: 0
 22817                           ;display.c: 352: display_content[1][cntr] = low[cntr++];
 22818  00D2FC  0100               	movlb	0	; () banked
 22819  00D2FE  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22820  00D300  0D01               	mullw	1
 22821  00D302  0E8A               	movlw	low __display_outputs@low
 22822  00D304  24F3               	addwf	prodl,w,c
 22823  00D306  6ED9               	movwf	fsr2l,c
 22824  00D308  0E00               	movlw	high __display_outputs@low
 22825  00D30A  20F4               	addwfc	prodh,w,c
 22826  00D30C  6EDA               	movwf	fsr2h,c
 22827  00D30E  0100               	movlb	0	; () banked
 22828  00D310  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22829  00D312  0D01               	mullw	1
 22830  00D314  0E68               	movlw	low (_display_content+20)
 22831  00D316  24F3               	addwf	prodl,w,c
 22832  00D318  6EE1               	movwf	fsr1l,c
 22833  00D31A  0E03               	movlw	high (_display_content+20)
 22834  00D31C  20F4               	addwfc	prodh,w,c
 22835  00D31E  6EE2               	movwf	fsr1h,c
 22836  00D320  CFDF FFE7          	movff	indf2,indf1
 22837                           
 22838                           ; BSR set to: 0
 22839  00D324  0100               	movlb	0	; () banked
 22840  00D326  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22841  00D328                     l21441:
 22842                           
 22843                           ; BSR set to: 0
 22844  00D328  0100               	movlb	0	; () banked
 22845  00D32A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22846  00D32C  0D01               	mullw	1
 22847  00D32E  0E8A               	movlw	low __display_outputs@low
 22848  00D330  24F3               	addwf	prodl,w,c
 22849  00D332  6ED9               	movwf	fsr2l,c
 22850  00D334  0E00               	movlw	high __display_outputs@low
 22851  00D336  20F4               	addwfc	prodh,w,c
 22852  00D338  6EDA               	movwf	fsr2h,c
 22853  00D33A  50DF               	movf	indf2,w,c
 22854  00D33C  A4D8               	btfss	status,2,c
 22855  00D33E  D7DE               	goto	l21437
 22856  00D340                     l21443:
 22857                           
 22858                           ;display.c: 353: }
 22859                           ;display.c: 355: cntr = 0;
 22860  00D340  0E00               	movlw	0
 22861  00D342  0100               	movlb	0	; () banked
 22862  00D344  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22863                           
 22864                           ;display.c: 356: while(line3[cntr])
 22865  00D346  D016               	goto	l21449
 22866  00D348                     l21445:
 22867                           
 22868                           ; BSR set to: 0
 22869                           ;display.c: 357: display_content[2][cntr] = line3[cntr++];
 22870  00D348  0100               	movlb	0	; () banked
 22871  00D34A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22872  00D34C  0D01               	mullw	1
 22873  00D34E  0E60               	movlw	low __display_outputs@line3
 22874  00D350  24F3               	addwf	prodl,w,c
 22875  00D352  6ED9               	movwf	fsr2l,c
 22876  00D354  0E00               	movlw	high __display_outputs@line3
 22877  00D356  20F4               	addwfc	prodh,w,c
 22878  00D358  6EDA               	movwf	fsr2h,c
 22879  00D35A  0100               	movlb	0	; () banked
 22880  00D35C  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22881  00D35E  0D01               	mullw	1
 22882  00D360  0E7C               	movlw	low (_display_content+40)
 22883  00D362  24F3               	addwf	prodl,w,c
 22884  00D364  6EE1               	movwf	fsr1l,c
 22885  00D366  0E03               	movlw	high (_display_content+40)
 22886  00D368  20F4               	addwfc	prodh,w,c
 22887  00D36A  6EE2               	movwf	fsr1h,c
 22888  00D36C  CFDF FFE7          	movff	indf2,indf1
 22889                           
 22890                           ; BSR set to: 0
 22891  00D370  0100               	movlb	0	; () banked
 22892  00D372  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22893  00D374                     l21449:
 22894                           
 22895                           ; BSR set to: 0
 22896  00D374  0100               	movlb	0	; () banked
 22897  00D376  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22898  00D378  0D01               	mullw	1
 22899  00D37A  0E60               	movlw	low __display_outputs@line3
 22900  00D37C  24F3               	addwf	prodl,w,c
 22901  00D37E  6ED9               	movwf	fsr2l,c
 22902  00D380  0E00               	movlw	high __display_outputs@line3
 22903  00D382  20F4               	addwfc	prodh,w,c
 22904  00D384  6EDA               	movwf	fsr2h,c
 22905  00D386  50DF               	movf	indf2,w,c
 22906  00D388  A4D8               	btfss	status,2,c
 22907  00D38A  D7DE               	goto	l21445
 22908                           
 22909                           ; BSR set to: 0
 22910                           ;display.c: 359: cntr = 0;
 22911                           
 22912                           ; BSR set to: 0
 22913  00D38C  0E00               	movlw	0
 22914  00D38E  0100               	movlb	0	; () banked
 22915  00D390  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22916                           
 22917                           ;display.c: 360: while(line4[cntr])
 22918  00D392  D016               	goto	l21457
 22919  00D394                     l21453:
 22920                           
 22921                           ; BSR set to: 0
 22922                           ;display.c: 361: display_content[3][cntr] = line4[cntr++];
 22923  00D394  0100               	movlb	0	; () banked
 22924  00D396  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22925  00D398  0D01               	mullw	1
 22926  00D39A  0E75               	movlw	low __display_outputs@line4
 22927  00D39C  24F3               	addwf	prodl,w,c
 22928  00D39E  6ED9               	movwf	fsr2l,c
 22929  00D3A0  0E00               	movlw	high __display_outputs@line4
 22930  00D3A2  20F4               	addwfc	prodh,w,c
 22931  00D3A4  6EDA               	movwf	fsr2h,c
 22932  00D3A6  0100               	movlb	0	; () banked
 22933  00D3A8  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22934  00D3AA  0D01               	mullw	1
 22935  00D3AC  0E90               	movlw	low (_display_content+60)
 22936  00D3AE  24F3               	addwf	prodl,w,c
 22937  00D3B0  6EE1               	movwf	fsr1l,c
 22938  00D3B2  0E03               	movlw	high (_display_content+60)
 22939  00D3B4  20F4               	addwfc	prodh,w,c
 22940  00D3B6  6EE2               	movwf	fsr1h,c
 22941  00D3B8  CFDF FFE7          	movff	indf2,indf1
 22942                           
 22943                           ; BSR set to: 0
 22944  00D3BC  0100               	movlb	0	; () banked
 22945  00D3BE  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22946  00D3C0                     l21457:
 22947                           
 22948                           ; BSR set to: 0
 22949  00D3C0  0100               	movlb	0	; () banked
 22950  00D3C2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22951  00D3C4  0D01               	mullw	1
 22952  00D3C6  0E75               	movlw	low __display_outputs@line4
 22953  00D3C8  24F3               	addwf	prodl,w,c
 22954  00D3CA  6ED9               	movwf	fsr2l,c
 22955  00D3CC  0E00               	movlw	high __display_outputs@line4
 22956  00D3CE  20F4               	addwfc	prodh,w,c
 22957  00D3D0  6EDA               	movwf	fsr2h,c
 22958  00D3D2  50DF               	movf	indf2,w,c
 22959  00D3D4  A4D8               	btfss	status,2,c
 22960  00D3D6  D7DE               	goto	l21453
 22961                           
 22962                           ; BSR set to: 0
 22963                           ;display.c: 363: if(os.outputs & OUTPUT_1)
 22964  00D3D8  0102               	movlb	2	; () banked
 22965  00D3DA  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 22966  00D3DC  D006               	goto	l21461
 22967                           
 22968                           ; BSR set to: 2
 22969                           ;display.c: 364: {
 22970                           ;display.c: 365: display_content[2][8] = 'n';
 22971  00D3DE  0E6E               	movlw	110
 22972  00D3E0  0103               	movlb	3	; () banked
 22973  00D3E2  6F84               	movwf	(_display_content+48)& (0+255),b
 22974                           
 22975                           ;display.c: 366: display_content[2][9] = ' ';
 22976  00D3E4  0E20               	movlw	32
 22977  00D3E6  0103               	movlb	3	; () banked
 22978  00D3E8  6F85               	movwf	(_display_content+49)& (0+255),b
 22979  00D3EA                     l21461:
 22980                           
 22981                           ;display.c: 367: }
 22982                           ;display.c: 368: if(os.outputs & OUTPUT_2)
 22983  00D3EA  0102               	movlb	2	; () banked
 22984  00D3EC  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 22985  00D3EE  D006               	goto	l21465
 22986                           
 22987                           ; BSR set to: 2
 22988                           ;display.c: 369: {
 22989                           ;display.c: 370: display_content[2][18] = 'n';
 22990  00D3F0  0E6E               	movlw	110
 22991  00D3F2  0103               	movlb	3	; () banked
 22992  00D3F4  6F8E               	movwf	(_display_content+58)& (0+255),b
 22993                           
 22994                           ;display.c: 371: display_content[2][19] = ' ';
 22995  00D3F6  0E20               	movlw	32
 22996  00D3F8  0103               	movlb	3	; () banked
 22997  00D3FA  6F8F               	movwf	(_display_content+59)& (0+255),b
 22998  00D3FC                     l21465:
 22999                           
 23000                           ;display.c: 372: }
 23001                           ;display.c: 373: if(os.outputs & OUTPUT_3)
 23002  00D3FC  0102               	movlb	2	; () banked
 23003  00D3FE  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 23004  00D400  D006               	goto	l21469
 23005                           
 23006                           ; BSR set to: 2
 23007                           ;display.c: 374: {
 23008                           ;display.c: 375: display_content[3][8] = 'n';
 23009  00D402  0E6E               	movlw	110
 23010  00D404  0103               	movlb	3	; () banked
 23011  00D406  6F98               	movwf	(_display_content+68)& (0+255),b
 23012                           
 23013                           ;display.c: 376: display_content[3][9] = ' ';
 23014  00D408  0E20               	movlw	32
 23015  00D40A  0103               	movlb	3	; () banked
 23016  00D40C  6F99               	movwf	(_display_content+69)& (0+255),b
 23017  00D40E                     l21469:
 23018                           
 23019                           ;display.c: 377: }
 23020                           ;display.c: 378: if(os.outputs & OUTPUT_4)
 23021  00D40E  0102               	movlb	2	; () banked
 23022  00D410  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 23023  00D412  D023               	goto	l21483
 23024                           
 23025                           ; BSR set to: 2
 23026                           ;display.c: 379: {
 23027                           ;display.c: 380: display_content[3][18] = 'n';
 23028  00D414  0E6E               	movlw	110
 23029  00D416  0103               	movlb	3	; () banked
 23030  00D418  6FA2               	movwf	(_display_content+78)& (0+255),b
 23031                           
 23032                           ;display.c: 381: display_content[3][19] = ' ';
 23033  00D41A  0E20               	movlw	32
 23034  00D41C  0103               	movlb	3	; () banked
 23035  00D41E  6FA3               	movwf	(_display_content+79)& (0+255),b
 23036                           
 23037                           ; BSR set to: 3
 23038                           ;display.c: 382: }
 23039                           ;display.c: 384: switch(mode)
 23040  00D420  D01C               	goto	l21483
 23041  00D422                     l21473:
 23042                           
 23043                           ;display.c: 387: display_content[2][0] = '-';
 23044  00D422  0E2D               	movlw	45
 23045  00D424  0103               	movlb	3	; () banked
 23046  00D426  6F7C               	movwf	(_display_content+40)& (0+255),b
 23047                           
 23048                           ;display.c: 388: display_content[2][1] = '>';
 23049  00D428  0E3E               	movlw	62
 23050  00D42A  0103               	movlb	3	; () banked
 23051  00D42C  6F7D               	movwf	(_display_content+41)& (0+255),b
 23052                           
 23053                           ;display.c: 389: break;
 23054  00D42E  0012               	return	
 23055  00D430                     l21475:
 23056                           
 23057                           ;display.c: 391: display_content[2][10] = '-';
 23058  00D430  0E2D               	movlw	45
 23059  00D432  0103               	movlb	3	; () banked
 23060  00D434  6F86               	movwf	(_display_content+50)& (0+255),b
 23061                           
 23062                           ;display.c: 392: display_content[2][11] = '>';
 23063  00D436  0E3E               	movlw	62
 23064  00D438  0103               	movlb	3	; () banked
 23065  00D43A  6F87               	movwf	(_display_content+51)& (0+255),b
 23066                           
 23067                           ;display.c: 393: break;
 23068  00D43C  0012               	return	
 23069  00D43E                     l21477:
 23070                           
 23071                           ;display.c: 395: display_content[3][0] = '-';
 23072  00D43E  0E2D               	movlw	45
 23073  00D440  0103               	movlb	3	; () banked
 23074  00D442  6F90               	movwf	(_display_content+60)& (0+255),b
 23075                           
 23076                           ;display.c: 396: display_content[3][1] = '>';
 23077  00D444  0E3E               	movlw	62
 23078  00D446  0103               	movlb	3	; () banked
 23079  00D448  6F91               	movwf	(_display_content+61)& (0+255),b
 23080                           
 23081                           ;display.c: 397: break;
 23082  00D44A  0012               	return	
 23083  00D44C                     l21479:
 23084                           
 23085                           ;display.c: 399: display_content[3][10] = '-';
 23086  00D44C  0E2D               	movlw	45
 23087  00D44E  0103               	movlb	3	; () banked
 23088  00D450  6F9A               	movwf	(_display_content+70)& (0+255),b
 23089                           
 23090                           ;display.c: 400: display_content[3][11] = '>';
 23091  00D452  0E3E               	movlw	62
 23092  00D454  0103               	movlb	3	; () banked
 23093  00D456  6F9B               	movwf	(_display_content+71)& (0+255),b
 23094                           
 23095                           ; BSR set to: 3
 23096                           ;display.c: 402: }
 23097                           
 23098                           ;display.c: 401: break;
 23099  00D458  0012               	return	
 23100  00D45A                     l21483:
 23101  00D45A  0100               	movlb	0	; () banked
 23102  00D45C  51A8               	movf	__display_outputs@mode& (0+255),w,b
 23103                           
 23104                           ; Switch size 1, requested type "space"
 23105                           ; Number of cases is 4, Range of values is 49 to 52
 23106                           ; switch strategies available:
 23107                           ; Name         Instructions Cycles
 23108                           ; simple_byte           13     7 (average)
 23109                           ;	Chosen strategy is simple_byte
 23110  00D45E  0A31               	xorlw	49	; case 49
 23111  00D460  B4D8               	btfsc	status,2,c
 23112  00D462  D7DF               	goto	l21473
 23113  00D464  0A03               	xorlw	3	; case 50
 23114  00D466  B4D8               	btfsc	status,2,c
 23115  00D468  D7E3               	goto	l21475
 23116  00D46A  0A01               	xorlw	1	; case 51
 23117  00D46C  B4D8               	btfsc	status,2,c
 23118  00D46E  D7E7               	goto	l21477
 23119  00D470  0A07               	xorlw	7	; case 52
 23120  00D472  A4D8               	btfss	status,2,c
 23121  00D474  0012               	return	
 23122  00D476  D7EA               	goto	l21479
 23123  00D478                     __end_of__display_outputs:
 23124                           	opt stack 0
 23125                           tblptru	equ	0xFF8
 23126                           tblptrh	equ	0xFF7
 23127                           tblptrl	equ	0xFF6
 23128                           tablat	equ	0xFF5
 23129                           prodh	equ	0xFF4
 23130                           prodl	equ	0xFF3
 23131                           intcon	equ	0xFF2
 23132                           intcon2	equ	0xFF1
 23133                           intcon3	equ	0xFF0
 23134                           postinc0	equ	0xFEE
 23135                           wreg	equ	0xFE8
 23136                           indf1	equ	0xFE7
 23137                           postinc1	equ	0xFE6
 23138                           postdec1	equ	0xFE5
 23139                           plusw1	equ	0xFE3
 23140                           fsr1h	equ	0xFE2
 23141                           fsr1l	equ	0xFE1
 23142                           indf2	equ	0xFDF
 23143                           postinc2	equ	0xFDE
 23144                           postdec2	equ	0xFDD
 23145                           plusw2	equ	0xFDB
 23146                           fsr2h	equ	0xFDA
 23147                           fsr2l	equ	0xFD9
 23148                           status	equ	0xFD8
 23149                           
 23150 ;; *************** function __display_inout *****************
 23151 ;; Defined at:
 23152 ;;		line 141 in file "display.c"
 23153 ;; Parameters:    Size  Location     Type
 23154 ;;		None
 23155 ;; Auto vars:     Size  Location     Type
 23156 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 23157 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 23158 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 23159 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 23160 ;;  cntr            1  101[BANK0 ] unsigned char 
 23161 ;; Return value:  Size  Location     Type
 23162 ;;                  1    wreg      void 
 23163 ;; Registers used:
 23164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23165 ;; Tracked objects:
 23166 ;;		On entry : 0/0
 23167 ;;		On exit  : 0/0
 23168 ;;		Unchanged: 0/0
 23169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23171 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23173 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23174 ;;Total ram usage:       54 bytes
 23175 ;; Hardware stack levels used:    1
 23176 ;; Hardware stack levels required when called:   14
 23177 ;; This function calls:
 23178 ;;		__display_itoa
 23179 ;;		_buck_get_mode
 23180 ;; This function is called by:
 23181 ;;		_display_prepare
 23182 ;; This function uses a non-reentrant model
 23183 ;;
 23184                           
 23185                           	psect	text103
 23186  00D478                     __ptext103:
 23187                           	opt stack 0
 23188  00D478                     __display_inout:
 23189                           	opt stack 15
 23190                           
 23191                           ;display.c: 143: uint8_t cntr;
 23192                           ;display.c: 144: const char line1[] = "Voltage & Current";
 23193                           
 23194                           ;incstack = 0
 23195  00D478  0ED8               	movlw	low __display_inout@F8665
 23196  00D47A  6EF6               	movwf	tblptrl,c
 23197  00D47C                     	if	1	;There is more than 1 active tblptr byte
 23198  00D47C  0E91               	movlw	high __display_inout@F8665
 23199  00D47E  6EF7               	movwf	tblptrh,c
 23200  00D480                     	endif
 23201  00D480                     	if	1	;There are 3 active tblptr bytes
 23202  00D480  0E00               	movlw	low (__display_inout@F8665 shr (0+16))
 23203  00D482  6EF8               	movwf	tblptru,c
 23204  00D484                     	endif
 23205  00D484  EE20  F090         	lfsr	2,__display_inout@line1
 23206  00D488  0E11               	movlw	17
 23207  00D48A                     u20510:
 23208  00D48A  0009               	tblrd		*+
 23209  00D48C  CFF5 FFDE          	movff	tablat,postinc2
 23210  00D490  06E8               	decf	wreg,f,c
 23211  00D492  E2FB               	bc	u20510
 23212                           
 23213                           ;display.c: 145: const char line2[] = "   Input   Output";
 23214  00D494  0EC6               	movlw	low __display_inout@F8667
 23215  00D496  6EF6               	movwf	tblptrl,c
 23216  00D498                     	if	1	;There is more than 1 active tblptr byte
 23217  00D498  0E91               	movlw	high __display_inout@F8667
 23218  00D49A  6EF7               	movwf	tblptrh,c
 23219  00D49C                     	endif
 23220  00D49C                     	if	1	;There are 3 active tblptr bytes
 23221  00D49C  0E00               	movlw	low (__display_inout@F8667 shr (0+16))
 23222  00D49E  6EF8               	movwf	tblptru,c
 23223  00D4A0                     	endif
 23224  00D4A0  EE20  F0A2         	lfsr	2,__display_inout@line2
 23225  00D4A4  0E11               	movlw	17
 23226  00D4A6                     u20520:
 23227  00D4A6  0009               	tblrd		*+
 23228  00D4A8  CFF5 FFDE          	movff	tablat,postinc2
 23229  00D4AC  06E8               	decf	wreg,f,c
 23230  00D4AE  E2FB               	bc	u20520
 23231                           
 23232                           ;display.c: 146: const char line3[] = "V:";
 23233  00D4B0  0E16               	movlw	low __display_inout@F8669
 23234  00D4B2  6EF6               	movwf	tblptrl,c
 23235  00D4B4                     	if	1	;There is more than 1 active tblptr byte
 23236  00D4B4  0E93               	movlw	high __display_inout@F8669
 23237  00D4B6  6EF7               	movwf	tblptrh,c
 23238  00D4B8                     	endif
 23239  00D4B8                     	if	1	;There are 3 active tblptr bytes
 23240  00D4B8  0E00               	movlw	low (__display_inout@F8669 shr (0+16))
 23241  00D4BA  6EF8               	movwf	tblptru,c
 23242  00D4BC                     	endif
 23243  00D4BC  0009               	tblrd		*+
 23244  00D4BE  CFF5 F0C2          	movff	tablat,__display_inout@line3
 23245  00D4C2  0009               	tblrd		*+
 23246  00D4C4  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 23247  00D4C8  000A               	tblrd		*-
 23248  00D4CA  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 23249                           
 23250                           ;display.c: 147: const char line4[] = "A: --      --";
 23251  00D4CE  0E85               	movlw	low __display_inout@F8671
 23252  00D4D0  6EF6               	movwf	tblptrl,c
 23253  00D4D2                     	if	1	;There is more than 1 active tblptr byte
 23254  00D4D2  0E92               	movlw	high __display_inout@F8671
 23255  00D4D4  6EF7               	movwf	tblptrh,c
 23256  00D4D6                     	endif
 23257  00D4D6                     	if	1	;There are 3 active tblptr bytes
 23258  00D4D6  0E00               	movlw	low (__display_inout@F8671 shr (0+16))
 23259  00D4D8  6EF8               	movwf	tblptru,c
 23260  00D4DA                     	endif
 23261  00D4DA  EE20  F0B4         	lfsr	2,__display_inout@line4
 23262  00D4DE  0E0D               	movlw	13
 23263  00D4E0                     u20530:
 23264  00D4E0  0009               	tblrd		*+
 23265  00D4E2  CFF5 FFDE          	movff	tablat,postinc2
 23266  00D4E6  06E8               	decf	wreg,f,c
 23267  00D4E8  E2FB               	bc	u20530
 23268                           
 23269                           ;display.c: 149: cntr = 0;
 23270  00D4EA  0E00               	movlw	0
 23271  00D4EC  0100               	movlb	0	; () banked
 23272  00D4EE  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23273                           
 23274                           ;display.c: 150: while(line1[cntr])
 23275  00D4F0  D016               	goto	l21197
 23276  00D4F2                     l21193:
 23277                           
 23278                           ; BSR set to: 0
 23279                           ;display.c: 151: display_content[0][cntr] = line1[cntr++];
 23280  00D4F2  0100               	movlb	0	; () banked
 23281  00D4F4  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23282  00D4F6  0D01               	mullw	1
 23283  00D4F8  0E90               	movlw	low __display_inout@line1
 23284  00D4FA  24F3               	addwf	prodl,w,c
 23285  00D4FC  6ED9               	movwf	fsr2l,c
 23286  00D4FE  0E00               	movlw	high __display_inout@line1
 23287  00D500  20F4               	addwfc	prodh,w,c
 23288  00D502  6EDA               	movwf	fsr2h,c
 23289  00D504  0100               	movlb	0	; () banked
 23290  00D506  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23291  00D508  0D01               	mullw	1
 23292  00D50A  0E54               	movlw	low _display_content
 23293  00D50C  24F3               	addwf	prodl,w,c
 23294  00D50E  6EE1               	movwf	fsr1l,c
 23295  00D510  0E03               	movlw	high _display_content
 23296  00D512  20F4               	addwfc	prodh,w,c
 23297  00D514  6EE2               	movwf	fsr1h,c
 23298  00D516  CFDF FFE7          	movff	indf2,indf1
 23299                           
 23300                           ; BSR set to: 0
 23301  00D51A  0100               	movlb	0	; () banked
 23302  00D51C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23303  00D51E                     l21197:
 23304                           
 23305                           ; BSR set to: 0
 23306  00D51E  0100               	movlb	0	; () banked
 23307  00D520  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23308  00D522  0D01               	mullw	1
 23309  00D524  0E90               	movlw	low __display_inout@line1
 23310  00D526  24F3               	addwf	prodl,w,c
 23311  00D528  6ED9               	movwf	fsr2l,c
 23312  00D52A  0E00               	movlw	high __display_inout@line1
 23313  00D52C  20F4               	addwfc	prodh,w,c
 23314  00D52E  6EDA               	movwf	fsr2h,c
 23315  00D530  50DF               	movf	indf2,w,c
 23316  00D532  A4D8               	btfss	status,2,c
 23317  00D534  D7DE               	goto	l21193
 23318                           
 23319                           ; BSR set to: 0
 23320                           ;display.c: 153: cntr = 0;
 23321                           
 23322                           ; BSR set to: 0
 23323  00D536  0E00               	movlw	0
 23324  00D538  0100               	movlb	0	; () banked
 23325  00D53A  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23326                           
 23327                           ;display.c: 154: while(line2[cntr])
 23328  00D53C  D016               	goto	l21205
 23329  00D53E                     l21201:
 23330                           
 23331                           ; BSR set to: 0
 23332                           ;display.c: 155: display_content[1][cntr] = line2[cntr++];
 23333  00D53E  0100               	movlb	0	; () banked
 23334  00D540  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23335  00D542  0D01               	mullw	1
 23336  00D544  0EA2               	movlw	low __display_inout@line2
 23337  00D546  24F3               	addwf	prodl,w,c
 23338  00D548  6ED9               	movwf	fsr2l,c
 23339  00D54A  0E00               	movlw	high __display_inout@line2
 23340  00D54C  20F4               	addwfc	prodh,w,c
 23341  00D54E  6EDA               	movwf	fsr2h,c
 23342  00D550  0100               	movlb	0	; () banked
 23343  00D552  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23344  00D554  0D01               	mullw	1
 23345  00D556  0E68               	movlw	low (_display_content+20)
 23346  00D558  24F3               	addwf	prodl,w,c
 23347  00D55A  6EE1               	movwf	fsr1l,c
 23348  00D55C  0E03               	movlw	high (_display_content+20)
 23349  00D55E  20F4               	addwfc	prodh,w,c
 23350  00D560  6EE2               	movwf	fsr1h,c
 23351  00D562  CFDF FFE7          	movff	indf2,indf1
 23352                           
 23353                           ; BSR set to: 0
 23354  00D566  0100               	movlb	0	; () banked
 23355  00D568  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23356  00D56A                     l21205:
 23357                           
 23358                           ; BSR set to: 0
 23359  00D56A  0100               	movlb	0	; () banked
 23360  00D56C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23361  00D56E  0D01               	mullw	1
 23362  00D570  0EA2               	movlw	low __display_inout@line2
 23363  00D572  24F3               	addwf	prodl,w,c
 23364  00D574  6ED9               	movwf	fsr2l,c
 23365  00D576  0E00               	movlw	high __display_inout@line2
 23366  00D578  20F4               	addwfc	prodh,w,c
 23367  00D57A  6EDA               	movwf	fsr2h,c
 23368  00D57C  50DF               	movf	indf2,w,c
 23369  00D57E  A4D8               	btfss	status,2,c
 23370  00D580  D7DE               	goto	l21201
 23371                           
 23372                           ; BSR set to: 0
 23373                           ;display.c: 157: cntr = 0;
 23374                           
 23375                           ; BSR set to: 0
 23376  00D582  0E00               	movlw	0
 23377  00D584  0100               	movlb	0	; () banked
 23378  00D586  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23379                           
 23380                           ;display.c: 158: while(line3[cntr])
 23381  00D588  D016               	goto	l21213
 23382  00D58A                     l21209:
 23383                           
 23384                           ; BSR set to: 0
 23385                           ;display.c: 159: display_content[2][cntr] = line3[cntr++];
 23386  00D58A  0100               	movlb	0	; () banked
 23387  00D58C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23388  00D58E  0D01               	mullw	1
 23389  00D590  0EC2               	movlw	low __display_inout@line3
 23390  00D592  24F3               	addwf	prodl,w,c
 23391  00D594  6ED9               	movwf	fsr2l,c
 23392  00D596  0E00               	movlw	high __display_inout@line3
 23393  00D598  20F4               	addwfc	prodh,w,c
 23394  00D59A  6EDA               	movwf	fsr2h,c
 23395  00D59C  0100               	movlb	0	; () banked
 23396  00D59E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23397  00D5A0  0D01               	mullw	1
 23398  00D5A2  0E7C               	movlw	low (_display_content+40)
 23399  00D5A4  24F3               	addwf	prodl,w,c
 23400  00D5A6  6EE1               	movwf	fsr1l,c
 23401  00D5A8  0E03               	movlw	high (_display_content+40)
 23402  00D5AA  20F4               	addwfc	prodh,w,c
 23403  00D5AC  6EE2               	movwf	fsr1h,c
 23404  00D5AE  CFDF FFE7          	movff	indf2,indf1
 23405                           
 23406                           ; BSR set to: 0
 23407  00D5B2  0100               	movlb	0	; () banked
 23408  00D5B4  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23409  00D5B6                     l21213:
 23410                           
 23411                           ; BSR set to: 0
 23412  00D5B6  0100               	movlb	0	; () banked
 23413  00D5B8  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23414  00D5BA  0D01               	mullw	1
 23415  00D5BC  0EC2               	movlw	low __display_inout@line3
 23416  00D5BE  24F3               	addwf	prodl,w,c
 23417  00D5C0  6ED9               	movwf	fsr2l,c
 23418  00D5C2  0E00               	movlw	high __display_inout@line3
 23419  00D5C4  20F4               	addwfc	prodh,w,c
 23420  00D5C6  6EDA               	movwf	fsr2h,c
 23421  00D5C8  50DF               	movf	indf2,w,c
 23422  00D5CA  A4D8               	btfss	status,2,c
 23423  00D5CC  D7DE               	goto	l21209
 23424                           
 23425                           ; BSR set to: 0
 23426                           ;display.c: 160: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 23427                           
 23428                           ; BSR set to: 0
 23429  00D5CE  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 23430  00D5D2  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 23431  00D5D6  0E03               	movlw	3
 23432  00D5D8  0100               	movlb	0	; () banked
 23433  00D5DA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23434  00D5DC  0E7F               	movlw	low (_display_content+43)
 23435  00D5DE  0100               	movlb	0	; () banked
 23436  00D5E0  6F7B               	movwf	__display_itoa@text& (0+255),b
 23437  00D5E2  0E03               	movlw	high (_display_content+43)
 23438  00D5E4  0100               	movlb	0	; () banked
 23439  00D5E6  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23440  00D5E8  ECBE  F063         	call	__display_itoa	;wreg free
 23441                           
 23442                           ;display.c: 161: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 23443  00D5EC  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 23444  00D5F0  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 23445  00D5F4  0E03               	movlw	3
 23446  00D5F6  0100               	movlb	0	; () banked
 23447  00D5F8  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23448  00D5FA  0E87               	movlw	low (_display_content+51)
 23449  00D5FC  0100               	movlb	0	; () banked
 23450  00D5FE  6F7B               	movwf	__display_itoa@text& (0+255),b
 23451  00D600  0E03               	movlw	high (_display_content+51)
 23452  00D602  0100               	movlb	0	; () banked
 23453  00D604  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23454  00D606  ECBE  F063         	call	__display_itoa	;wreg free
 23455                           
 23456                           ;display.c: 163: cntr = 0;
 23457  00D60A  0E00               	movlw	0
 23458  00D60C  0100               	movlb	0	; () banked
 23459  00D60E  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23460                           
 23461                           ;display.c: 164: while(line4[cntr])
 23462  00D610  D016               	goto	l21223
 23463  00D612                     l21219:
 23464                           
 23465                           ; BSR set to: 0
 23466                           ;display.c: 165: display_content[3][cntr] = line4[cntr++];
 23467  00D612  0100               	movlb	0	; () banked
 23468  00D614  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23469  00D616  0D01               	mullw	1
 23470  00D618  0EB4               	movlw	low __display_inout@line4
 23471  00D61A  24F3               	addwf	prodl,w,c
 23472  00D61C  6ED9               	movwf	fsr2l,c
 23473  00D61E  0E00               	movlw	high __display_inout@line4
 23474  00D620  20F4               	addwfc	prodh,w,c
 23475  00D622  6EDA               	movwf	fsr2h,c
 23476  00D624  0100               	movlb	0	; () banked
 23477  00D626  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23478  00D628  0D01               	mullw	1
 23479  00D62A  0E90               	movlw	low (_display_content+60)
 23480  00D62C  24F3               	addwf	prodl,w,c
 23481  00D62E  6EE1               	movwf	fsr1l,c
 23482  00D630  0E03               	movlw	high (_display_content+60)
 23483  00D632  20F4               	addwfc	prodh,w,c
 23484  00D634  6EE2               	movwf	fsr1h,c
 23485  00D636  CFDF FFE7          	movff	indf2,indf1
 23486                           
 23487                           ; BSR set to: 0
 23488  00D63A  0100               	movlb	0	; () banked
 23489  00D63C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23490  00D63E                     l21223:
 23491                           
 23492                           ; BSR set to: 0
 23493  00D63E  0100               	movlb	0	; () banked
 23494  00D640  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23495  00D642  0D01               	mullw	1
 23496  00D644  0EB4               	movlw	low __display_inout@line4
 23497  00D646  24F3               	addwf	prodl,w,c
 23498  00D648  6ED9               	movwf	fsr2l,c
 23499  00D64A  0E00               	movlw	high __display_inout@line4
 23500  00D64C  20F4               	addwfc	prodh,w,c
 23501  00D64E  6EDA               	movwf	fsr2h,c
 23502  00D650  50DF               	movf	indf2,w,c
 23503  00D652  A4D8               	btfss	status,2,c
 23504  00D654  D7DE               	goto	l21219
 23505                           
 23506                           ;display.c: 167: {
 23507                           ;display.c: 168: _display_itoa(os.input_current, 3, &display_content[3][3]);
 23508                           
 23509                           ; BSR set to: 0
 23510                           
 23511                           ; BSR set to: 0
 23512                           ;display.c: 166: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 23513  00D656  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 23514  00D65A  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 23515  00D65E  0E03               	movlw	3
 23516  00D660  0100               	movlb	0	; () banked
 23517  00D662  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23518  00D664  0E93               	movlw	low (_display_content+63)
 23519  00D666  0100               	movlb	0	; () banked
 23520  00D668  6F7B               	movwf	__display_itoa@text& (0+255),b
 23521  00D66A  0E03               	movlw	high (_display_content+63)
 23522  00D66C  0100               	movlb	0	; () banked
 23523  00D66E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23524  00D670  ECBE  F063         	call	__display_itoa	;wreg free
 23525                           
 23526                           ;display.c: 169: _display_itoa(os.output_current, 3, &display_content[3][11]);
 23527  00D674  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 23528  00D678  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 23529  00D67C  0E03               	movlw	3
 23530  00D67E  0100               	movlb	0	; () banked
 23531  00D680  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23532  00D682  0E9B               	movlw	low (_display_content+71)
 23533  00D684  0100               	movlb	0	; () banked
 23534  00D686  6F7B               	movwf	__display_itoa@text& (0+255),b
 23535  00D688  0E03               	movlw	high (_display_content+71)
 23536  00D68A  0100               	movlb	0	; () banked
 23537  00D68C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23538  00D68E  ECBE  F063         	call	__display_itoa	;wreg free
 23539  00D692  0012               	return	
 23540  00D694                     __end_of__display_inout:
 23541                           	opt stack 0
 23542                           tblptru	equ	0xFF8
 23543                           tblptrh	equ	0xFF7
 23544                           tblptrl	equ	0xFF6
 23545                           tablat	equ	0xFF5
 23546                           prodh	equ	0xFF4
 23547                           prodl	equ	0xFF3
 23548                           intcon	equ	0xFF2
 23549                           intcon2	equ	0xFF1
 23550                           intcon3	equ	0xFF0
 23551                           postinc0	equ	0xFEE
 23552                           wreg	equ	0xFE8
 23553                           indf1	equ	0xFE7
 23554                           postinc1	equ	0xFE6
 23555                           postdec1	equ	0xFE5
 23556                           plusw1	equ	0xFE3
 23557                           fsr1h	equ	0xFE2
 23558                           fsr1l	equ	0xFE1
 23559                           indf2	equ	0xFDF
 23560                           postinc2	equ	0xFDE
 23561                           postdec2	equ	0xFDD
 23562                           plusw2	equ	0xFDB
 23563                           fsr2h	equ	0xFDA
 23564                           fsr2l	equ	0xFD9
 23565                           status	equ	0xFD8
 23566                           
 23567 ;; *************** function __display_efficiency *****************
 23568 ;; Defined at:
 23569 ;;		line 475 in file "display.c"
 23570 ;; Parameters:    Size  Location     Type
 23571 ;;		None
 23572 ;; Auto vars:     Size  Location     Type
 23573 ;;  source         19   69[BANK0 ] const unsigned char [19]
 23574 ;;  header         19   50[BANK0 ] const unsigned char [19]
 23575 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 23576 ;;  battery         4  109[BANK0 ] long 
 23577 ;;  panel           4  105[BANK0 ] long 
 23578 ;;  efficiency      3  102[BANK0 ] float 
 23579 ;;  cntr            1  113[BANK0 ] unsigned char 
 23580 ;; Return value:  Size  Location     Type
 23581 ;;                  1    wreg      void 
 23582 ;; Registers used:
 23583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23584 ;; Tracked objects:
 23585 ;;		On entry : 0/0
 23586 ;;		On exit  : 0/0
 23587 ;;		Unchanged: 0/0
 23588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23590 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23592 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23593 ;;Total ram usage:       66 bytes
 23594 ;; Hardware stack levels used:    1
 23595 ;; Hardware stack levels required when called:   14
 23596 ;; This function calls:
 23597 ;;		___aldiv
 23598 ;;		___altoft
 23599 ;;		___fttol
 23600 ;;		___lmul
 23601 ;;		__display_itoa
 23602 ;; This function is called by:
 23603 ;;		_display_prepare
 23604 ;; This function uses a non-reentrant model
 23605 ;;
 23606                           
 23607                           	psect	text104
 23608  00B496                     __ptext104:
 23609                           	opt stack 0
 23610  00B496                     __display_efficiency:
 23611                           	opt stack 15
 23612                           
 23613                           ;display.c: 477: uint8_t cntr;
 23614                           ;display.c: 478: const char header[] = "Charger Efficiency";
 23615                           
 23616                           ;incstack = 0
 23617  00B496  0E6A               	movlw	low __display_efficiency@F8753
 23618  00B498  6EF6               	movwf	tblptrl,c
 23619  00B49A                     	if	1	;There is more than 1 active tblptr byte
 23620  00B49A  0E91               	movlw	high __display_efficiency@F8753
 23621  00B49C  6EF7               	movwf	tblptrh,c
 23622  00B49E                     	endif
 23623  00B49E                     	if	1	;There are 3 active tblptr bytes
 23624  00B49E  0E00               	movlw	low (__display_efficiency@F8753 shr (0+16))
 23625  00B4A0  6EF8               	movwf	tblptru,c
 23626  00B4A2                     	endif
 23627  00B4A2  EE20  F092         	lfsr	2,__display_efficiency@header
 23628  00B4A6  0E12               	movlw	18
 23629  00B4A8                     u21270:
 23630  00B4A8  0009               	tblrd		*+
 23631  00B4AA  CFF5 FFDE          	movff	tablat,postinc2
 23632  00B4AE  06E8               	decf	wreg,f,c
 23633  00B4B0  E2FB               	bc	u21270
 23634                           
 23635                           ;display.c: 479: const char source[] = "Panel:    Battery:";
 23636  00B4B2  0E57               	movlw	low __display_efficiency@F8755
 23637  00B4B4  6EF6               	movwf	tblptrl,c
 23638  00B4B6                     	if	1	;There is more than 1 active tblptr byte
 23639  00B4B6  0E91               	movlw	high __display_efficiency@F8755
 23640  00B4B8  6EF7               	movwf	tblptrh,c
 23641  00B4BA                     	endif
 23642  00B4BA                     	if	1	;There are 3 active tblptr bytes
 23643  00B4BA  0E00               	movlw	low (__display_efficiency@F8755 shr (0+16))
 23644  00B4BC  6EF8               	movwf	tblptru,c
 23645  00B4BE                     	endif
 23646  00B4BE  EE20  F0A5         	lfsr	2,__display_efficiency@source
 23647  00B4C2  0E12               	movlw	18
 23648  00B4C4                     u21280:
 23649  00B4C4  0009               	tblrd		*+
 23650  00B4C6  CFF5 FFDE          	movff	tablat,postinc2
 23651  00B4CA  06E8               	decf	wreg,f,c
 23652  00B4CC  E2FB               	bc	u21280
 23653                           
 23654                           ;display.c: 480: const char footer[] = "E:         L:";
 23655  00B4CE  0E5B               	movlw	low __display_efficiency@F8757
 23656  00B4D0  6EF6               	movwf	tblptrl,c
 23657  00B4D2                     	if	1	;There is more than 1 active tblptr byte
 23658  00B4D2  0E92               	movlw	high __display_efficiency@F8757
 23659  00B4D4  6EF7               	movwf	tblptrh,c
 23660  00B4D6                     	endif
 23661  00B4D6                     	if	1	;There are 3 active tblptr bytes
 23662  00B4D6  0E00               	movlw	low (__display_efficiency@F8757 shr (0+16))
 23663  00B4D8  6EF8               	movwf	tblptru,c
 23664  00B4DA                     	endif
 23665  00B4DA  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 23666  00B4DE  0E0D               	movlw	13
 23667  00B4E0                     u21290:
 23668  00B4E0  0009               	tblrd		*+
 23669  00B4E2  CFF5 FFDE          	movff	tablat,postinc2
 23670  00B4E6  06E8               	decf	wreg,f,c
 23671  00B4E8  E2FB               	bc	u21290
 23672                           
 23673                           ;display.c: 481: int32_t panel;
 23674                           ;display.c: 482: int32_t battery = (int32_t) os.output_voltage * (int32_t) os.output_cur
      +                          rent;
 23675  00B4EA  EE22  F027         	lfsr	2,_os+39	;volatile
 23676  00B4EE  CFDE F060          	movff	postinc2,___lmul@multiplier
 23677  00B4F2  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 23678  00B4F6  0100               	movlb	0	; () banked
 23679  00B4F8  0E00               	movlw	0
 23680  00B4FA  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23681  00B4FC  0EFF               	movlw	-1
 23682  00B4FE  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 23683  00B500  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 23684  00B502  EE22  F032         	lfsr	2,_os+50	;volatile
 23685  00B506  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23686  00B50A  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23687  00B50E  0100               	movlb	0	; () banked
 23688  00B510  0E00               	movlw	0
 23689  00B512  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23690  00B514  0EFF               	movlw	-1
 23691  00B516  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23692  00B518  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23693  00B51A  ECC3  F092         	call	___lmul	;wreg free
 23694  00B51E  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 23695  00B522  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 23696  00B526  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 23697  00B52A  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 23698                           
 23699                           ;display.c: 483: float efficiency;
 23700                           ;display.c: 485: panel = (int32_t) os.input_voltage;
 23701  00B52E  EE22  F012         	lfsr	2,_os+18	;volatile
 23702  00B532  CFDE F0C9          	movff	postinc2,__display_efficiency@panel
 23703  00B536  CFDD F0CA          	movff	postdec2,__display_efficiency@panel+1
 23704  00B53A  0100               	movlb	0	; () banked
 23705  00B53C  0E00               	movlw	0
 23706  00B53E  BFCA               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 23707  00B540  0EFF               	movlw	-1
 23708  00B542  6FCB               	movwf	(__display_efficiency@panel+2)& (0+255),b
 23709  00B544  6FCC               	movwf	(__display_efficiency@panel+3)& (0+255),b
 23710                           
 23711                           ; BSR set to: 0
 23712                           ;display.c: 486: panel *= (int32_t) os.input_current;
 23713  00B546  C0C9  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 23714  00B54A  C0CA  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 23715  00B54E  C0CB  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 23716  00B552  C0CC  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 23717  00B556  EE22  F01D         	lfsr	2,_os+29	;volatile
 23718  00B55A  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23719  00B55E  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23720  00B562  0100               	movlb	0	; () banked
 23721  00B564  0E00               	movlw	0
 23722  00B566  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23723  00B568  0EFF               	movlw	-1
 23724  00B56A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23725  00B56C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23726  00B56E  ECC3  F092         	call	___lmul	;wreg free
 23727  00B572  C060  F0C9         	movff	?___lmul,__display_efficiency@panel
 23728  00B576  C061  F0CA         	movff	?___lmul+1,__display_efficiency@panel+1
 23729  00B57A  C062  F0CB         	movff	?___lmul+2,__display_efficiency@panel+2
 23730  00B57E  C063  F0CC         	movff	?___lmul+3,__display_efficiency@panel+3
 23731                           
 23732                           ;display.c: 487: panel /= 1000;
 23733  00B582  C0C9  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 23734  00B586  C0CA  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 23735  00B58A  C0CB  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 23736  00B58E  C0CC  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 23737  00B592  0EE8               	movlw	232
 23738  00B594  0100               	movlb	0	; () banked
 23739  00B596  6F64               	movwf	___aldiv@divisor& (0+255),b
 23740  00B598  0E03               	movlw	3
 23741  00B59A  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 23742  00B59C  0E00               	movlw	0
 23743  00B59E  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 23744  00B5A0  0E00               	movlw	0
 23745  00B5A2  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 23746  00B5A4  ECEC  F07A         	call	___aldiv	;wreg free
 23747  00B5A8  C060  F0C9         	movff	?___aldiv,__display_efficiency@panel
 23748  00B5AC  C061  F0CA         	movff	?___aldiv+1,__display_efficiency@panel+1
 23749  00B5B0  C062  F0CB         	movff	?___aldiv+2,__display_efficiency@panel+2
 23750  00B5B4  C063  F0CC         	movff	?___aldiv+3,__display_efficiency@panel+3
 23751                           
 23752                           ;display.c: 489: battery = (int32_t) os.output_voltage;
 23753  00B5B8  EE22  F027         	lfsr	2,_os+39	;volatile
 23754  00B5BC  CFDE F0CD          	movff	postinc2,__display_efficiency@battery
 23755  00B5C0  CFDD F0CE          	movff	postdec2,__display_efficiency@battery+1
 23756  00B5C4  0100               	movlb	0	; () banked
 23757  00B5C6  0E00               	movlw	0
 23758  00B5C8  BFCE               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 23759  00B5CA  0EFF               	movlw	-1
 23760  00B5CC  6FCF               	movwf	(__display_efficiency@battery+2)& (0+255),b
 23761  00B5CE  6FD0               	movwf	(__display_efficiency@battery+3)& (0+255),b
 23762                           
 23763                           ; BSR set to: 0
 23764                           ;display.c: 490: battery *= os.output_current;
 23765  00B5D0  C0CD  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 23766  00B5D4  C0CE  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 23767  00B5D8  C0CF  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 23768  00B5DC  C0D0  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 23769  00B5E0  EE22  F032         	lfsr	2,_os+50	;volatile
 23770  00B5E4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23771  00B5E8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23772  00B5EC  0100               	movlb	0	; () banked
 23773  00B5EE  0E00               	movlw	0
 23774  00B5F0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23775  00B5F2  0EFF               	movlw	-1
 23776  00B5F4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23777  00B5F6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23778  00B5F8  ECC3  F092         	call	___lmul	;wreg free
 23779  00B5FC  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 23780  00B600  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 23781  00B604  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 23782  00B608  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 23783                           
 23784                           ;display.c: 491: efficiency = battery / panel;
 23785  00B60C  C0C9  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 23786  00B610  C0CA  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 23787  00B614  C0CB  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 23788  00B618  C0CC  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 23789  00B61C  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 23790  00B620  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 23791  00B624  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 23792  00B628  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 23793  00B62C  ECEC  F07A         	call	___aldiv	;wreg free
 23794  00B630  C060  F06E         	movff	?___aldiv,___altoft@c
 23795  00B634  C061  F06F         	movff	?___aldiv+1,___altoft@c+1
 23796  00B638  C062  F070         	movff	?___aldiv+2,___altoft@c+2
 23797  00B63C  C063  F071         	movff	?___aldiv+3,___altoft@c+3
 23798  00B640  EC37  F08B         	call	___altoft	;wreg free
 23799  00B644  C06E  F0C6         	movff	?___altoft,__display_efficiency@efficiency
 23800  00B648  C06F  F0C7         	movff	?___altoft+1,__display_efficiency@efficiency+1
 23801  00B64C  C070  F0C8         	movff	?___altoft+2,__display_efficiency@efficiency+2
 23802                           
 23803                           ;display.c: 492: battery /= 1000;
 23804  00B650  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 23805  00B654  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 23806  00B658  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 23807  00B65C  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 23808  00B660  0EE8               	movlw	232
 23809  00B662  0100               	movlb	0	; () banked
 23810  00B664  6F64               	movwf	___aldiv@divisor& (0+255),b
 23811  00B666  0E03               	movlw	3
 23812  00B668  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 23813  00B66A  0E00               	movlw	0
 23814  00B66C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 23815  00B66E  0E00               	movlw	0
 23816  00B670  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 23817  00B672  ECEC  F07A         	call	___aldiv	;wreg free
 23818  00B676  C060  F0CD         	movff	?___aldiv,__display_efficiency@battery
 23819  00B67A  C061  F0CE         	movff	?___aldiv+1,__display_efficiency@battery+1
 23820  00B67E  C062  F0CF         	movff	?___aldiv+2,__display_efficiency@battery+2
 23821  00B682  C063  F0D0         	movff	?___aldiv+3,__display_efficiency@battery+3
 23822                           
 23823                           ;display.c: 494: cntr = 0;
 23824  00B686  0E00               	movlw	0
 23825  00B688  0100               	movlb	0	; () banked
 23826  00B68A  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23827                           
 23828                           ;display.c: 495: while(header[cntr])
 23829  00B68C  D016               	goto	l21567
 23830  00B68E                     l21563:
 23831                           
 23832                           ; BSR set to: 0
 23833                           ;display.c: 496: display_content[0][cntr] = header[cntr++];
 23834  00B68E  0100               	movlb	0	; () banked
 23835  00B690  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23836  00B692  0D01               	mullw	1
 23837  00B694  0E92               	movlw	low __display_efficiency@header
 23838  00B696  24F3               	addwf	prodl,w,c
 23839  00B698  6ED9               	movwf	fsr2l,c
 23840  00B69A  0E00               	movlw	high __display_efficiency@header
 23841  00B69C  20F4               	addwfc	prodh,w,c
 23842  00B69E  6EDA               	movwf	fsr2h,c
 23843  00B6A0  0100               	movlb	0	; () banked
 23844  00B6A2  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23845  00B6A4  0D01               	mullw	1
 23846  00B6A6  0E54               	movlw	low _display_content
 23847  00B6A8  24F3               	addwf	prodl,w,c
 23848  00B6AA  6EE1               	movwf	fsr1l,c
 23849  00B6AC  0E03               	movlw	high _display_content
 23850  00B6AE  20F4               	addwfc	prodh,w,c
 23851  00B6B0  6EE2               	movwf	fsr1h,c
 23852  00B6B2  CFDF FFE7          	movff	indf2,indf1
 23853                           
 23854                           ; BSR set to: 0
 23855  00B6B6  0100               	movlb	0	; () banked
 23856  00B6B8  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23857  00B6BA                     l21567:
 23858                           
 23859                           ; BSR set to: 0
 23860  00B6BA  0100               	movlb	0	; () banked
 23861  00B6BC  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23862  00B6BE  0D01               	mullw	1
 23863  00B6C0  0E92               	movlw	low __display_efficiency@header
 23864  00B6C2  24F3               	addwf	prodl,w,c
 23865  00B6C4  6ED9               	movwf	fsr2l,c
 23866  00B6C6  0E00               	movlw	high __display_efficiency@header
 23867  00B6C8  20F4               	addwfc	prodh,w,c
 23868  00B6CA  6EDA               	movwf	fsr2h,c
 23869  00B6CC  50DF               	movf	indf2,w,c
 23870  00B6CE  A4D8               	btfss	status,2,c
 23871  00B6D0  D7DE               	goto	l21563
 23872                           
 23873                           ; BSR set to: 0
 23874                           ;display.c: 498: cntr = 0;
 23875                           
 23876                           ; BSR set to: 0
 23877  00B6D2  0E00               	movlw	0
 23878  00B6D4  0100               	movlb	0	; () banked
 23879  00B6D6  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23880                           
 23881                           ;display.c: 499: while(source[cntr])
 23882  00B6D8  D016               	goto	l21575
 23883  00B6DA                     l21571:
 23884                           
 23885                           ; BSR set to: 0
 23886                           ;display.c: 500: display_content[1][cntr] = source[cntr++];
 23887  00B6DA  0100               	movlb	0	; () banked
 23888  00B6DC  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23889  00B6DE  0D01               	mullw	1
 23890  00B6E0  0EA5               	movlw	low __display_efficiency@source
 23891  00B6E2  24F3               	addwf	prodl,w,c
 23892  00B6E4  6ED9               	movwf	fsr2l,c
 23893  00B6E6  0E00               	movlw	high __display_efficiency@source
 23894  00B6E8  20F4               	addwfc	prodh,w,c
 23895  00B6EA  6EDA               	movwf	fsr2h,c
 23896  00B6EC  0100               	movlb	0	; () banked
 23897  00B6EE  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23898  00B6F0  0D01               	mullw	1
 23899  00B6F2  0E68               	movlw	low (_display_content+20)
 23900  00B6F4  24F3               	addwf	prodl,w,c
 23901  00B6F6  6EE1               	movwf	fsr1l,c
 23902  00B6F8  0E03               	movlw	high (_display_content+20)
 23903  00B6FA  20F4               	addwfc	prodh,w,c
 23904  00B6FC  6EE2               	movwf	fsr1h,c
 23905  00B6FE  CFDF FFE7          	movff	indf2,indf1
 23906                           
 23907                           ; BSR set to: 0
 23908  00B702  0100               	movlb	0	; () banked
 23909  00B704  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23910  00B706                     l21575:
 23911                           
 23912                           ; BSR set to: 0
 23913  00B706  0100               	movlb	0	; () banked
 23914  00B708  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23915  00B70A  0D01               	mullw	1
 23916  00B70C  0EA5               	movlw	low __display_efficiency@source
 23917  00B70E  24F3               	addwf	prodl,w,c
 23918  00B710  6ED9               	movwf	fsr2l,c
 23919  00B712  0E00               	movlw	high __display_efficiency@source
 23920  00B714  20F4               	addwfc	prodh,w,c
 23921  00B716  6EDA               	movwf	fsr2h,c
 23922  00B718  50DF               	movf	indf2,w,c
 23923  00B71A  A4D8               	btfss	status,2,c
 23924  00B71C  D7DE               	goto	l21571
 23925                           
 23926                           ; BSR set to: 0
 23927                           ;display.c: 502: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 23928                           
 23929                           ; BSR set to: 0
 23930  00B71E  C0C9  F078         	movff	__display_efficiency@panel,__display_itoa@value
 23931  00B722  C0CA  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 23932  00B726  0E03               	movlw	3
 23933  00B728  0100               	movlb	0	; () banked
 23934  00B72A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23935  00B72C  0E7C               	movlw	low (_display_content+40)
 23936  00B72E  0100               	movlb	0	; () banked
 23937  00B730  6F7B               	movwf	__display_itoa@text& (0+255),b
 23938  00B732  0E03               	movlw	high (_display_content+40)
 23939  00B734  0100               	movlb	0	; () banked
 23940  00B736  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23941  00B738  ECBE  F063         	call	__display_itoa	;wreg free
 23942                           
 23943                           ;display.c: 503: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 23944  00B73C  C0CD  F078         	movff	__display_efficiency@battery,__display_itoa@value
 23945  00B740  C0CE  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 23946  00B744  0E03               	movlw	3
 23947  00B746  0100               	movlb	0	; () banked
 23948  00B748  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23949  00B74A  0E86               	movlw	low (_display_content+50)
 23950  00B74C  0100               	movlb	0	; () banked
 23951  00B74E  6F7B               	movwf	__display_itoa@text& (0+255),b
 23952  00B750  0E03               	movlw	high (_display_content+50)
 23953  00B752  0100               	movlb	0	; () banked
 23954  00B754  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23955  00B756  ECBE  F063         	call	__display_itoa	;wreg free
 23956                           
 23957                           ;display.c: 505: cntr = 0;
 23958  00B75A  0E00               	movlw	0
 23959  00B75C  0100               	movlb	0	; () banked
 23960  00B75E  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23961                           
 23962                           ;display.c: 506: while(footer[cntr])
 23963  00B760  D016               	goto	l21585
 23964  00B762                     l21581:
 23965                           
 23966                           ; BSR set to: 0
 23967                           ;display.c: 507: display_content[3][cntr] = footer[cntr++];
 23968  00B762  0100               	movlb	0	; () banked
 23969  00B764  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23970  00B766  0D01               	mullw	1
 23971  00B768  0EB8               	movlw	low __display_efficiency@footer
 23972  00B76A  24F3               	addwf	prodl,w,c
 23973  00B76C  6ED9               	movwf	fsr2l,c
 23974  00B76E  0E00               	movlw	high __display_efficiency@footer
 23975  00B770  20F4               	addwfc	prodh,w,c
 23976  00B772  6EDA               	movwf	fsr2h,c
 23977  00B774  0100               	movlb	0	; () banked
 23978  00B776  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23979  00B778  0D01               	mullw	1
 23980  00B77A  0E90               	movlw	low (_display_content+60)
 23981  00B77C  24F3               	addwf	prodl,w,c
 23982  00B77E  6EE1               	movwf	fsr1l,c
 23983  00B780  0E03               	movlw	high (_display_content+60)
 23984  00B782  20F4               	addwfc	prodh,w,c
 23985  00B784  6EE2               	movwf	fsr1h,c
 23986  00B786  CFDF FFE7          	movff	indf2,indf1
 23987                           
 23988                           ; BSR set to: 0
 23989  00B78A  0100               	movlb	0	; () banked
 23990  00B78C  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23991  00B78E                     l21585:
 23992                           
 23993                           ; BSR set to: 0
 23994  00B78E  0100               	movlb	0	; () banked
 23995  00B790  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23996  00B792  0D01               	mullw	1
 23997  00B794  0EB8               	movlw	low __display_efficiency@footer
 23998  00B796  24F3               	addwf	prodl,w,c
 23999  00B798  6ED9               	movwf	fsr2l,c
 24000  00B79A  0E00               	movlw	high __display_efficiency@footer
 24001  00B79C  20F4               	addwfc	prodh,w,c
 24002  00B79E  6EDA               	movwf	fsr2h,c
 24003  00B7A0  50DF               	movf	indf2,w,c
 24004  00B7A2  A4D8               	btfss	status,2,c
 24005  00B7A4  D7DE               	goto	l21581
 24006                           
 24007                           ; BSR set to: 0
 24008                           ;display.c: 509: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 24009                           
 24010                           ; BSR set to: 0
 24011  00B7A6  C0C6  F060         	movff	__display_efficiency@efficiency,___fttol@f1
 24012  00B7AA  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fttol@f1+1
 24013  00B7AE  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fttol@f1+2
 24014  00B7B2  EC27  F076         	call	___fttol	;wreg free
 24015  00B7B6  C060  F078         	movff	?___fttol,__display_itoa@value
 24016  00B7BA  C061  F079         	movff	?___fttol+1,__display_itoa@value+1
 24017  00B7BE  0E01               	movlw	1
 24018  00B7C0  0100               	movlb	0	; () banked
 24019  00B7C2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24020  00B7C4  0E93               	movlw	low (_display_content+63)
 24021  00B7C6  0100               	movlb	0	; () banked
 24022  00B7C8  6F7B               	movwf	__display_itoa@text& (0+255),b
 24023  00B7CA  0E03               	movlw	high (_display_content+63)
 24024  00B7CC  0100               	movlb	0	; () banked
 24025  00B7CE  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24026  00B7D0  ECBE  F063         	call	__display_itoa	;wreg free
 24027                           
 24028                           ;display.c: 510: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 24029  00B7D4  C0CD  F090         	movff	__display_efficiency@battery,??__display_efficiency
 24030  00B7D8  C0CE  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 24031  00B7DC  0100               	movlb	0	; () banked
 24032  00B7DE  1F90               	comf	??__display_efficiency& (0+255),f,b
 24033  00B7E0  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 24034  00B7E2  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 24035  00B7E4  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 24036  00B7E6  0100               	movlb	0	; () banked
 24037  00B7E8  51C9               	movf	__display_efficiency@panel& (0+255),w,b
 24038  00B7EA  0100               	movlb	0	; () banked
 24039  00B7EC  2590               	addwf	??__display_efficiency& (0+255),w,b
 24040  00B7EE  0100               	movlb	0	; () banked
 24041  00B7F0  6F78               	movwf	__display_itoa@value& (0+255),b
 24042  00B7F2  0100               	movlb	0	; () banked
 24043  00B7F4  51CA               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 24044  00B7F6  0100               	movlb	0	; () banked
 24045  00B7F8  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 24046  00B7FA  0100               	movlb	0	; () banked
 24047  00B7FC  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 24048  00B7FE  0E03               	movlw	3
 24049  00B800  0100               	movlb	0	; () banked
 24050  00B802  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24051  00B804  0E9E               	movlw	low (_display_content+74)
 24052  00B806  0100               	movlb	0	; () banked
 24053  00B808  6F7B               	movwf	__display_itoa@text& (0+255),b
 24054  00B80A  0E03               	movlw	high (_display_content+74)
 24055  00B80C  0100               	movlb	0	; () banked
 24056  00B80E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24057  00B810  ECBE  F063         	call	__display_itoa	;wreg free
 24058  00B814  0012               	return		;funcret
 24059  00B816                     __end_of__display_efficiency:
 24060                           	opt stack 0
 24061                           tblptru	equ	0xFF8
 24062                           tblptrh	equ	0xFF7
 24063                           tblptrl	equ	0xFF6
 24064                           tablat	equ	0xFF5
 24065                           prodh	equ	0xFF4
 24066                           prodl	equ	0xFF3
 24067                           intcon	equ	0xFF2
 24068                           intcon2	equ	0xFF1
 24069                           intcon3	equ	0xFF0
 24070                           postinc0	equ	0xFEE
 24071                           wreg	equ	0xFE8
 24072                           indf1	equ	0xFE7
 24073                           postinc1	equ	0xFE6
 24074                           postdec1	equ	0xFE5
 24075                           plusw1	equ	0xFE3
 24076                           fsr1h	equ	0xFE2
 24077                           fsr1l	equ	0xFE1
 24078                           indf2	equ	0xFDF
 24079                           postinc2	equ	0xFDE
 24080                           postdec2	equ	0xFDD
 24081                           plusw2	equ	0xFDB
 24082                           fsr2h	equ	0xFDA
 24083                           fsr2l	equ	0xFD9
 24084                           status	equ	0xFD8
 24085                           
 24086 ;; *************** function ___fttol *****************
 24087 ;; Defined at:
 24088 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
 24089 ;; Parameters:    Size  Location     Type
 24090 ;;  f1              3    0[BANK0 ] float 
 24091 ;; Auto vars:     Size  Location     Type
 24092 ;;  lval            4   10[BANK0 ] unsigned long 
 24093 ;;  exp1            1   14[BANK0 ] unsigned char 
 24094 ;;  sign1           1    9[BANK0 ] unsigned char 
 24095 ;; Return value:  Size  Location     Type
 24096 ;;                  4    0[BANK0 ] long 
 24097 ;; Registers used:
 24098 ;;		wreg, status,2, status,0
 24099 ;; Tracked objects:
 24100 ;;		On entry : 0/0
 24101 ;;		On exit  : 0/0
 24102 ;;		Unchanged: 0/0
 24103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24105 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24106 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24107 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24108 ;;Total ram usage:       15 bytes
 24109 ;; Hardware stack levels used:    1
 24110 ;; Hardware stack levels required when called:   10
 24111 ;; This function calls:
 24112 ;;		Nothing
 24113 ;; This function is called by:
 24114 ;;		__display_efficiency
 24115 ;; This function uses a non-reentrant model
 24116 ;;
 24117                           
 24118                           	psect	text105
 24119  00EC4E                     __ptext105:
 24120                           	opt stack 0
 24121  00EC4E                     ___fttol:
 24122                           	opt stack 18
 24123                           
 24124                           ;incstack = 0
 24125  00EC4E  C062  F064         	movff	___fttol@f1+2,??___fttol
 24126  00EC52  0100               	movlb	0	; () banked
 24127  00EC54  6B65               	clrf	(??___fttol+1)& (0+255),b
 24128  00EC56  6B66               	clrf	(??___fttol+2)& (0+255),b
 24129  00EC58  0100               	movlb	0	; () banked
 24130  00EC5A  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
 24131  00EC5C  0100               	movlb	0	; () banked
 24132  00EC5E  3764               	rlcf	??___fttol& (0+255),f,b
 24133  00EC60  E301               	bnc	u19411
 24134  00EC62  8165               	bsf	(??___fttol+1)& (0+255),0,b
 24135  00EC64                     u19411:
 24136  00EC64  0100               	movlb	0	; () banked
 24137  00EC66  5164               	movf	??___fttol& (0+255),w,b
 24138  00EC68  0100               	movlb	0	; () banked
 24139  00EC6A  6F6E               	movwf	___fttol@exp1& (0+255),b
 24140  00EC6C  0100               	movlb	0	; () banked
 24141  00EC6E  516E               	movf	___fttol@exp1& (0+255),w,b
 24142  00EC70  A4D8               	btfss	status,2,c
 24143  00EC72  D00A               	goto	l20239
 24144                           
 24145                           ; BSR set to: 0
 24146  00EC74  0E00               	movlw	0
 24147  00EC76  0100               	movlb	0	; () banked
 24148  00EC78  6F60               	movwf	?___fttol& (0+255),b
 24149  00EC7A  0E00               	movlw	0
 24150  00EC7C  6F61               	movwf	(?___fttol+1)& (0+255),b
 24151  00EC7E  0E00               	movlw	0
 24152  00EC80  6F62               	movwf	(?___fttol+2)& (0+255),b
 24153  00EC82  0E00               	movlw	0
 24154  00EC84  6F63               	movwf	(?___fttol+3)& (0+255),b
 24155                           
 24156                           ; BSR set to: 0
 24157  00EC86  0012               	return	
 24158  00EC88                     l20239:
 24159                           
 24160                           ; BSR set to: 0
 24161  00EC88  0E17               	movlw	23
 24162  00EC8A  0100               	movlb	0	; () banked
 24163  00EC8C  6F64               	movwf	??___fttol& (0+255),b
 24164  00EC8E  C060  F065         	movff	___fttol@f1,??___fttol+1
 24165  00EC92  C061  F066         	movff	___fttol@f1+1,??___fttol+2
 24166  00EC96  C062  F067         	movff	___fttol@f1+2,??___fttol+3
 24167  00EC9A  0100               	movlb	0	; () banked
 24168  00EC9C  2964               	incf	??___fttol& (0+255),w,b
 24169  00EC9E  0100               	movlb	0	; () banked
 24170  00ECA0  6F68               	movwf	(??___fttol+4)& (0+255),b
 24171  00ECA2  D005               	goto	u19430
 24172  00ECA4                     u19435:
 24173  00ECA4  0100               	movlb	0	; () banked
 24174  00ECA6  90D8               	bcf	status,0,c
 24175  00ECA8  3367               	rrcf	(??___fttol+3)& (0+255),f,b
 24176  00ECAA  3366               	rrcf	(??___fttol+2)& (0+255),f,b
 24177  00ECAC  3365               	rrcf	(??___fttol+1)& (0+255),f,b
 24178  00ECAE                     u19430:
 24179  00ECAE  0100               	movlb	0	; () banked
 24180  00ECB0  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
 24181  00ECB2  D7F8               	goto	u19435
 24182  00ECB4  0100               	movlb	0	; () banked
 24183  00ECB6  5165               	movf	(??___fttol+1)& (0+255),w,b
 24184  00ECB8  0100               	movlb	0	; () banked
 24185  00ECBA  6F69               	movwf	___fttol@sign1& (0+255),b
 24186                           
 24187                           ; BSR set to: 0
 24188  00ECBC  0100               	movlb	0	; () banked
 24189  00ECBE  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
 24190                           
 24191                           ; BSR set to: 0
 24192  00ECC0  0EFF               	movlw	255
 24193  00ECC2  0100               	movlb	0	; () banked
 24194  00ECC4  1760               	andwf	___fttol@f1& (0+255),f,b
 24195  00ECC6  0EFF               	movlw	255
 24196  00ECC8  0100               	movlb	0	; () banked
 24197  00ECCA  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
 24198  00ECCC  0E00               	movlw	0
 24199  00ECCE  0100               	movlb	0	; () banked
 24200  00ECD0  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
 24201                           
 24202                           ; BSR set to: 0
 24203  00ECD2  0100               	movlb	0	; () banked
 24204  00ECD4  5160               	movf	___fttol@f1& (0+255),w,b
 24205  00ECD6  0100               	movlb	0	; () banked
 24206  00ECD8  6F6A               	movwf	___fttol@lval& (0+255),b
 24207  00ECDA  0100               	movlb	0	; () banked
 24208  00ECDC  5161               	movf	(___fttol@f1+1)& (0+255),w,b
 24209  00ECDE  0100               	movlb	0	; () banked
 24210  00ECE0  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
 24211  00ECE2  0100               	movlb	0	; () banked
 24212  00ECE4  5162               	movf	(___fttol@f1+2)& (0+255),w,b
 24213  00ECE6  0100               	movlb	0	; () banked
 24214  00ECE8  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
 24215  00ECEA  0100               	movlb	0	; () banked
 24216  00ECEC  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
 24217                           
 24218                           ; BSR set to: 0
 24219  00ECEE  0E8E               	movlw	142
 24220  00ECF0  0100               	movlb	0	; () banked
 24221  00ECF2  5F6E               	subwf	___fttol@exp1& (0+255),f,b
 24222                           
 24223                           ; BSR set to: 0
 24224  00ECF4  0100               	movlb	0	; () banked
 24225  00ECF6  AF6E               	btfss	___fttol@exp1& (0+255),7,b
 24226  00ECF8  D01A               	goto	l20261
 24227                           
 24228                           ; BSR set to: 0
 24229  00ECFA  0100               	movlb	0	; () banked
 24230  00ECFC  516E               	movf	___fttol@exp1& (0+255),w,b
 24231  00ECFE  0A80               	xorlw	128
 24232  00ED00  0F8F               	addlw	143
 24233  00ED02  B0D8               	btfsc	status,0,c
 24234  00ED04  D00A               	goto	l20257
 24235                           
 24236                           ; BSR set to: 0
 24237  00ED06  0E00               	movlw	0
 24238  00ED08  0100               	movlb	0	; () banked
 24239  00ED0A  6F60               	movwf	?___fttol& (0+255),b
 24240  00ED0C  0E00               	movlw	0
 24241  00ED0E  6F61               	movwf	(?___fttol+1)& (0+255),b
 24242  00ED10  0E00               	movlw	0
 24243  00ED12  6F62               	movwf	(?___fttol+2)& (0+255),b
 24244  00ED14  0E00               	movlw	0
 24245  00ED16  6F63               	movwf	(?___fttol+3)& (0+255),b
 24246                           
 24247                           ; BSR set to: 0
 24248  00ED18  0012               	return	
 24249  00ED1A                     l20257:
 24250                           
 24251                           ; BSR set to: 0
 24252  00ED1A  0100               	movlb	0	; () banked
 24253  00ED1C  90D8               	bcf	status,0,c
 24254  00ED1E  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 24255  00ED20  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 24256  00ED22  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 24257  00ED24  336A               	rrcf	___fttol@lval& (0+255),f,b
 24258                           
 24259                           ; BSR set to: 0
 24260  00ED26  0100               	movlb	0	; () banked
 24261  00ED28  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
 24262  00ED2A  D7F7               	goto	l20257
 24263                           
 24264                           ; BSR set to: 0
 24265  00ED2C  D01B               	goto	l20271
 24266  00ED2E                     l20261:
 24267                           
 24268                           ; BSR set to: 0
 24269  00ED2E  0E17               	movlw	23
 24270  00ED30  0100               	movlb	0	; () banked
 24271  00ED32  656E               	cpfsgt	___fttol@exp1& (0+255),b
 24272  00ED34  D012               	goto	l20269
 24273                           
 24274                           ; BSR set to: 0
 24275  00ED36  0E00               	movlw	0
 24276  00ED38  0100               	movlb	0	; () banked
 24277  00ED3A  6F60               	movwf	?___fttol& (0+255),b
 24278  00ED3C  0E00               	movlw	0
 24279  00ED3E  6F61               	movwf	(?___fttol+1)& (0+255),b
 24280  00ED40  0E00               	movlw	0
 24281  00ED42  6F62               	movwf	(?___fttol+2)& (0+255),b
 24282  00ED44  0E00               	movlw	0
 24283  00ED46  6F63               	movwf	(?___fttol+3)& (0+255),b
 24284                           
 24285                           ; BSR set to: 0
 24286  00ED48  0012               	return	
 24287  00ED4A                     l20267:
 24288                           
 24289                           ; BSR set to: 0
 24290  00ED4A  0100               	movlb	0	; () banked
 24291  00ED4C  90D8               	bcf	status,0,c
 24292  00ED4E  376A               	rlcf	___fttol@lval& (0+255),f,b
 24293  00ED50  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 24294  00ED52  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 24295  00ED54  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 24296  00ED56  0100               	movlb	0	; () banked
 24297  00ED58  076E               	decf	___fttol@exp1& (0+255),f,b
 24298  00ED5A                     l20269:
 24299                           
 24300                           ; BSR set to: 0
 24301  00ED5A  0100               	movlb	0	; () banked
 24302  00ED5C  516E               	movf	___fttol@exp1& (0+255),w,b
 24303  00ED5E  0100               	movlb	0	; () banked
 24304  00ED60  A4D8               	btfss	status,2,c
 24305  00ED62  D7F3               	goto	l20267
 24306  00ED64                     l20271:
 24307                           
 24308                           ; BSR set to: 0
 24309  00ED64  0100               	movlb	0	; () banked
 24310  00ED66  5169               	movf	___fttol@sign1& (0+255),w,b
 24311  00ED68  0100               	movlb	0	; () banked
 24312  00ED6A  B4D8               	btfsc	status,2,c
 24313  00ED6C  D009               	goto	l20275
 24314                           
 24315                           ; BSR set to: 0
 24316  00ED6E  0100               	movlb	0	; () banked
 24317  00ED70  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
 24318  00ED72  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
 24319  00ED74  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
 24320  00ED76  6D6A               	negf	___fttol@lval& (0+255),b
 24321  00ED78  0E00               	movlw	0
 24322  00ED7A  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 24323  00ED7C  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 24324  00ED7E  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 24325  00ED80                     l20275:
 24326                           
 24327                           ; BSR set to: 0
 24328  00ED80  C06A  F060         	movff	___fttol@lval,?___fttol
 24329  00ED84  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
 24330  00ED88  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
 24331  00ED8C  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
 24332  00ED90  0012               	return	
 24333  00ED92                     __end_of___fttol:
 24334                           	opt stack 0
 24335                           tblptru	equ	0xFF8
 24336                           tblptrh	equ	0xFF7
 24337                           tblptrl	equ	0xFF6
 24338                           tablat	equ	0xFF5
 24339                           prodh	equ	0xFF4
 24340                           prodl	equ	0xFF3
 24341                           intcon	equ	0xFF2
 24342                           intcon2	equ	0xFF1
 24343                           intcon3	equ	0xFF0
 24344                           postinc0	equ	0xFEE
 24345                           wreg	equ	0xFE8
 24346                           indf1	equ	0xFE7
 24347                           postinc1	equ	0xFE6
 24348                           postdec1	equ	0xFE5
 24349                           plusw1	equ	0xFE3
 24350                           fsr1h	equ	0xFE2
 24351                           fsr1l	equ	0xFE1
 24352                           indf2	equ	0xFDF
 24353                           postinc2	equ	0xFDE
 24354                           postdec2	equ	0xFDD
 24355                           plusw2	equ	0xFDB
 24356                           fsr2h	equ	0xFDA
 24357                           fsr2l	equ	0xFD9
 24358                           status	equ	0xFD8
 24359                           
 24360 ;; *************** function ___altoft *****************
 24361 ;; Defined at:
 24362 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\altoft.c"
 24363 ;; Parameters:    Size  Location     Type
 24364 ;;  c               4   14[BANK0 ] long 
 24365 ;; Auto vars:     Size  Location     Type
 24366 ;;  sign            1   23[BANK0 ] unsigned char 
 24367 ;;  exp             1   22[BANK0 ] unsigned char 
 24368 ;; Return value:  Size  Location     Type
 24369 ;;                  3   14[BANK0 ] float 
 24370 ;; Registers used:
 24371 ;;		wreg, status,2, status,0, cstack
 24372 ;; Tracked objects:
 24373 ;;		On entry : 0/0
 24374 ;;		On exit  : 0/0
 24375 ;;		Unchanged: 0/0
 24376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24378 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24379 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24380 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24381 ;;Total ram usage:       10 bytes
 24382 ;; Hardware stack levels used:    1
 24383 ;; Hardware stack levels required when called:   11
 24384 ;; This function calls:
 24385 ;;		___ftpack
 24386 ;; This function is called by:
 24387 ;;		__display_efficiency
 24388 ;; This function uses a non-reentrant model
 24389 ;;
 24390                           
 24391                           	psect	text106
 24392  01166E                     __ptext106:
 24393                           	opt stack 0
 24394  01166E                     ___altoft:
 24395                           	opt stack 17
 24396                           
 24397                           ; BSR set to: 0
 24398                           ;incstack = 0
 24399  01166E  0E00               	movlw	0
 24400  011670  0100               	movlb	0	; () banked
 24401  011672  6F77               	movwf	___altoft@sign& (0+255),b
 24402  011674  0E8E               	movlw	142
 24403  011676  0100               	movlb	0	; () banked
 24404  011678  6F76               	movwf	___altoft@exp& (0+255),b
 24405                           
 24406                           ; BSR set to: 0
 24407  01167A  0100               	movlb	0	; () banked
 24408  01167C  AF71               	btfss	(___altoft@c+3)& (0+255),7,b
 24409  01167E  D015               	goto	l20227
 24410                           
 24411                           ; BSR set to: 0
 24412  011680  0100               	movlb	0	; () banked
 24413  011682  1F71               	comf	(___altoft@c+3)& (0+255),f,b
 24414  011684  1F70               	comf	(___altoft@c+2)& (0+255),f,b
 24415  011686  1F6F               	comf	(___altoft@c+1)& (0+255),f,b
 24416  011688  6D6E               	negf	___altoft@c& (0+255),b
 24417  01168A  0E00               	movlw	0
 24418  01168C  236F               	addwfc	(___altoft@c+1)& (0+255),f,b
 24419  01168E  2370               	addwfc	(___altoft@c+2)& (0+255),f,b
 24420  011690  2371               	addwfc	(___altoft@c+3)& (0+255),f,b
 24421                           
 24422                           ; BSR set to: 0
 24423  011692  0E01               	movlw	1
 24424  011694  0100               	movlb	0	; () banked
 24425  011696  6F77               	movwf	___altoft@sign& (0+255),b
 24426                           
 24427                           ; BSR set to: 0
 24428  011698  D008               	goto	l20227
 24429  01169A                     l20225:
 24430                           
 24431                           ; BSR set to: 0
 24432  01169A  0100               	movlb	0	; () banked
 24433  01169C  90D8               	bcf	status,0,c
 24434  01169E  3371               	rrcf	(___altoft@c+3)& (0+255),f,b
 24435  0116A0  3370               	rrcf	(___altoft@c+2)& (0+255),f,b
 24436  0116A2  336F               	rrcf	(___altoft@c+1)& (0+255),f,b
 24437  0116A4  336E               	rrcf	___altoft@c& (0+255),f,b
 24438  0116A6  0100               	movlb	0	; () banked
 24439  0116A8  2B76               	incf	___altoft@exp& (0+255),f,b
 24440  0116AA                     l20227:
 24441                           
 24442                           ; BSR set to: 0
 24443  0116AA  0E00               	movlw	0
 24444  0116AC  0100               	movlb	0	; () banked
 24445  0116AE  156E               	andwf	___altoft@c& (0+255),w,b
 24446  0116B0  0100               	movlb	0	; () banked
 24447  0116B2  6F72               	movwf	??___altoft& (0+255),b
 24448  0116B4  0E00               	movlw	0
 24449  0116B6  0100               	movlb	0	; () banked
 24450  0116B8  156F               	andwf	(___altoft@c+1)& (0+255),w,b
 24451  0116BA  0100               	movlb	0	; () banked
 24452  0116BC  6F73               	movwf	(??___altoft+1)& (0+255),b
 24453  0116BE  0E00               	movlw	0
 24454  0116C0  0100               	movlb	0	; () banked
 24455  0116C2  1570               	andwf	(___altoft@c+2)& (0+255),w,b
 24456  0116C4  0100               	movlb	0	; () banked
 24457  0116C6  6F74               	movwf	(??___altoft+2)& (0+255),b
 24458  0116C8  0EFF               	movlw	255
 24459  0116CA  0100               	movlb	0	; () banked
 24460  0116CC  1571               	andwf	(___altoft@c+3)& (0+255),w,b
 24461  0116CE  0100               	movlb	0	; () banked
 24462  0116D0  6F75               	movwf	(??___altoft+3)& (0+255),b
 24463  0116D2  0100               	movlb	0	; () banked
 24464  0116D4  5172               	movf	??___altoft& (0+255),w,b
 24465  0116D6  0100               	movlb	0	; () banked
 24466  0116D8  1173               	iorwf	(??___altoft+1)& (0+255),w,b
 24467  0116DA  0100               	movlb	0	; () banked
 24468  0116DC  1174               	iorwf	(??___altoft+2)& (0+255),w,b
 24469  0116DE  0100               	movlb	0	; () banked
 24470  0116E0  1175               	iorwf	(??___altoft+3)& (0+255),w,b
 24471  0116E2  A4D8               	btfss	status,2,c
 24472  0116E4  D7DA               	goto	l20225
 24473                           
 24474                           ; BSR set to: 0
 24475                           
 24476                           ; BSR set to: 0
 24477  0116E6  C06E  F060         	movff	___altoft@c,___ftpack@arg
 24478  0116EA  C06F  F061         	movff	___altoft@c+1,___ftpack@arg+1
 24479  0116EE  C070  F062         	movff	___altoft@c+2,___ftpack@arg+2
 24480  0116F2  C076  F063         	movff	___altoft@exp,___ftpack@exp
 24481  0116F6  C077  F064         	movff	___altoft@sign,___ftpack@sign
 24482  0116FA  EC8E  F07C         	call	___ftpack	;wreg free
 24483  0116FE  C060  F06E         	movff	?___ftpack,?___altoft
 24484  011702  C061  F06F         	movff	?___ftpack+1,?___altoft+1
 24485  011706  C062  F070         	movff	?___ftpack+2,?___altoft+2
 24486  01170A  0012               	return	
 24487  01170C                     __end_of___altoft:
 24488                           	opt stack 0
 24489                           tblptru	equ	0xFF8
 24490                           tblptrh	equ	0xFF7
 24491                           tblptrl	equ	0xFF6
 24492                           tablat	equ	0xFF5
 24493                           prodh	equ	0xFF4
 24494                           prodl	equ	0xFF3
 24495                           intcon	equ	0xFF2
 24496                           intcon2	equ	0xFF1
 24497                           intcon3	equ	0xFF0
 24498                           postinc0	equ	0xFEE
 24499                           wreg	equ	0xFE8
 24500                           indf1	equ	0xFE7
 24501                           postinc1	equ	0xFE6
 24502                           postdec1	equ	0xFE5
 24503                           plusw1	equ	0xFE3
 24504                           fsr1h	equ	0xFE2
 24505                           fsr1l	equ	0xFE1
 24506                           indf2	equ	0xFDF
 24507                           postinc2	equ	0xFDE
 24508                           postdec2	equ	0xFDD
 24509                           plusw2	equ	0xFDB
 24510                           fsr2h	equ	0xFDA
 24511                           fsr2l	equ	0xFD9
 24512                           status	equ	0xFD8
 24513                           
 24514 ;; *************** function ___ftpack *****************
 24515 ;; Defined at:
 24516 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
 24517 ;; Parameters:    Size  Location     Type
 24518 ;;  arg             3    0[BANK0 ] unsigned um
 24519 ;;  exp             1    3[BANK0 ] unsigned char 
 24520 ;;  sign            1    4[BANK0 ] unsigned char 
 24521 ;; Auto vars:     Size  Location     Type
 24522 ;;		None
 24523 ;; Return value:  Size  Location     Type
 24524 ;;                  3    0[BANK0 ] float 
 24525 ;; Registers used:
 24526 ;;		wreg, status,2, status,0
 24527 ;; Tracked objects:
 24528 ;;		On entry : 0/0
 24529 ;;		On exit  : 0/0
 24530 ;;		Unchanged: 0/0
 24531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24532 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24534 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24535 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24536 ;;Total ram usage:        8 bytes
 24537 ;; Hardware stack levels used:    1
 24538 ;; Hardware stack levels required when called:   10
 24539 ;; This function calls:
 24540 ;;		Nothing
 24541 ;; This function is called by:
 24542 ;;		___altoft
 24543 ;; This function uses a non-reentrant model
 24544 ;;
 24545                           
 24546                           	psect	text107
 24547  00F91C                     __ptext107:
 24548                           	opt stack 0
 24549  00F91C                     ___ftpack:
 24550                           	opt stack 17
 24551                           
 24552                           ;incstack = 0
 24553  00F91C  0100               	movlb	0	; () banked
 24554  00F91E  5163               	movf	___ftpack@exp& (0+255),w,b
 24555  00F920  0100               	movlb	0	; () banked
 24556  00F922  B4D8               	btfsc	status,2,c
 24557  00F924  D008               	goto	l19309
 24558                           
 24559                           ; BSR set to: 0
 24560  00F926  0100               	movlb	0	; () banked
 24561  00F928  5160               	movf	___ftpack@arg& (0+255),w,b
 24562  00F92A  0100               	movlb	0	; () banked
 24563  00F92C  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 24564  00F92E  0100               	movlb	0	; () banked
 24565  00F930  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 24566  00F932  A4D8               	btfss	status,2,c
 24567  00F934  D011               	goto	l19315
 24568  00F936                     l19309:
 24569                           
 24570                           ; BSR set to: 0
 24571  00F936  0E00               	movlw	0
 24572  00F938  0100               	movlb	0	; () banked
 24573  00F93A  6F60               	movwf	?___ftpack& (0+255),b
 24574  00F93C  0E00               	movlw	0
 24575  00F93E  0100               	movlb	0	; () banked
 24576  00F940  6F61               	movwf	(?___ftpack+1)& (0+255),b
 24577  00F942  0E00               	movlw	0
 24578  00F944  0100               	movlb	0	; () banked
 24579  00F946  6F62               	movwf	(?___ftpack+2)& (0+255),b
 24580                           
 24581                           ; BSR set to: 0
 24582  00F948  0012               	return	
 24583  00F94A                     l19313:
 24584                           
 24585                           ; BSR set to: 0
 24586  00F94A  0100               	movlb	0	; () banked
 24587  00F94C  2B63               	incf	___ftpack@exp& (0+255),f,b
 24588  00F94E  0100               	movlb	0	; () banked
 24589  00F950  90D8               	bcf	status,0,c
 24590  00F952  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 24591  00F954  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 24592  00F956  3360               	rrcf	___ftpack@arg& (0+255),f,b
 24593  00F958                     l19315:
 24594                           
 24595                           ; BSR set to: 0
 24596  00F958  0E00               	movlw	0
 24597  00F95A  0100               	movlb	0	; () banked
 24598  00F95C  1560               	andwf	___ftpack@arg& (0+255),w,b
 24599  00F95E  0100               	movlb	0	; () banked
 24600  00F960  6F65               	movwf	??___ftpack& (0+255),b
 24601  00F962  0E00               	movlw	0
 24602  00F964  0100               	movlb	0	; () banked
 24603  00F966  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 24604  00F968  0100               	movlb	0	; () banked
 24605  00F96A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 24606  00F96C  0EFE               	movlw	254
 24607  00F96E  0100               	movlb	0	; () banked
 24608  00F970  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 24609  00F972  0100               	movlb	0	; () banked
 24610  00F974  6F67               	movwf	(??___ftpack+2)& (0+255),b
 24611  00F976  0100               	movlb	0	; () banked
 24612  00F978  5165               	movf	??___ftpack& (0+255),w,b
 24613  00F97A  0100               	movlb	0	; () banked
 24614  00F97C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 24615  00F97E  0100               	movlb	0	; () banked
 24616  00F980  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 24617  00F982  B4D8               	btfsc	status,2,c
 24618  00F984  D011               	goto	l19321
 24619  00F986  D7E1               	goto	l19313
 24620  00F988                     l19317:
 24621                           
 24622                           ; BSR set to: 0
 24623  00F988  0100               	movlb	0	; () banked
 24624  00F98A  2B63               	incf	___ftpack@exp& (0+255),f,b
 24625                           
 24626                           ; BSR set to: 0
 24627  00F98C  0E01               	movlw	1
 24628  00F98E  0100               	movlb	0	; () banked
 24629  00F990  2760               	addwf	___ftpack@arg& (0+255),f,b
 24630  00F992  0E00               	movlw	0
 24631  00F994  0100               	movlb	0	; () banked
 24632  00F996  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 24633  00F998  0E00               	movlw	0
 24634  00F99A  0100               	movlb	0	; () banked
 24635  00F99C  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 24636  00F99E  0100               	movlb	0	; () banked
 24637  00F9A0  90D8               	bcf	status,0,c
 24638  00F9A2  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 24639  00F9A4  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 24640  00F9A6  3360               	rrcf	___ftpack@arg& (0+255),f,b
 24641  00F9A8                     l19321:
 24642                           
 24643                           ; BSR set to: 0
 24644  00F9A8  0E00               	movlw	0
 24645  00F9AA  0100               	movlb	0	; () banked
 24646  00F9AC  1560               	andwf	___ftpack@arg& (0+255),w,b
 24647  00F9AE  0100               	movlb	0	; () banked
 24648  00F9B0  6F65               	movwf	??___ftpack& (0+255),b
 24649  00F9B2  0E00               	movlw	0
 24650  00F9B4  0100               	movlb	0	; () banked
 24651  00F9B6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 24652  00F9B8  0100               	movlb	0	; () banked
 24653  00F9BA  6F66               	movwf	(??___ftpack+1)& (0+255),b
 24654  00F9BC  0EFF               	movlw	255
 24655  00F9BE  0100               	movlb	0	; () banked
 24656  00F9C0  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 24657  00F9C2  0100               	movlb	0	; () banked
 24658  00F9C4  6F67               	movwf	(??___ftpack+2)& (0+255),b
 24659  00F9C6  0100               	movlb	0	; () banked
 24660  00F9C8  5165               	movf	??___ftpack& (0+255),w,b
 24661  00F9CA  0100               	movlb	0	; () banked
 24662  00F9CC  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 24663  00F9CE  0100               	movlb	0	; () banked
 24664  00F9D0  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 24665  00F9D2  B4D8               	btfsc	status,2,c
 24666  00F9D4  D008               	goto	l19325
 24667  00F9D6  D7D8               	goto	l19317
 24668  00F9D8                     l19323:
 24669                           
 24670                           ; BSR set to: 0
 24671  00F9D8  0100               	movlb	0	; () banked
 24672  00F9DA  0763               	decf	___ftpack@exp& (0+255),f,b
 24673  00F9DC  0100               	movlb	0	; () banked
 24674  00F9DE  90D8               	bcf	status,0,c
 24675  00F9E0  3760               	rlcf	___ftpack@arg& (0+255),f,b
 24676  00F9E2  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 24677  00F9E4  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 24678  00F9E6                     l19325:
 24679                           
 24680                           ; BSR set to: 0
 24681  00F9E6  0100               	movlb	0	; () banked
 24682  00F9E8  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 24683  00F9EA  D004               	goto	l3541
 24684                           
 24685                           ; BSR set to: 0
 24686  00F9EC  0E02               	movlw	2
 24687  00F9EE  0100               	movlb	0	; () banked
 24688  00F9F0  6163               	cpfslt	___ftpack@exp& (0+255),b
 24689  00F9F2  D7F2               	goto	l19323
 24690  00F9F4                     l3541:
 24691                           
 24692                           ; BSR set to: 0
 24693  00F9F4  0100               	movlb	0	; () banked
 24694  00F9F6  B163               	btfsc	___ftpack@exp& (0+255),0,b
 24695  00F9F8  D002               	goto	l19331
 24696                           
 24697                           ; BSR set to: 0
 24698  00F9FA  0100               	movlb	0	; () banked
 24699  00F9FC  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 24700  00F9FE                     l19331:
 24701                           
 24702                           ; BSR set to: 0
 24703  00F9FE  0100               	movlb	0	; () banked
 24704  00FA00  90D8               	bcf	status,0,c
 24705  00FA02  3363               	rrcf	___ftpack@exp& (0+255),f,b
 24706  00FA04  0100               	movlb	0	; () banked
 24707  00FA06  5163               	movf	___ftpack@exp& (0+255),w,b
 24708  00FA08  0100               	movlb	0	; () banked
 24709  00FA0A  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 24710                           
 24711                           ; BSR set to: 0
 24712  00FA0C  0100               	movlb	0	; () banked
 24713  00FA0E  5164               	movf	___ftpack@sign& (0+255),w,b
 24714  00FA10  0100               	movlb	0	; () banked
 24715  00FA12  B4D8               	btfsc	status,2,c
 24716  00FA14  D002               	goto	l19337
 24717                           
 24718                           ; BSR set to: 0
 24719  00FA16  0100               	movlb	0	; () banked
 24720  00FA18  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 24721  00FA1A                     l19337:
 24722                           
 24723                           ; BSR set to: 0
 24724  00FA1A  C060  F060         	movff	___ftpack@arg,?___ftpack
 24725  00FA1E  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 24726  00FA22  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 24727  00FA26  0012               	return	
 24728  00FA28                     __end_of___ftpack:
 24729                           	opt stack 0
 24730                           tblptru	equ	0xFF8
 24731                           tblptrh	equ	0xFF7
 24732                           tblptrl	equ	0xFF6
 24733                           tablat	equ	0xFF5
 24734                           prodh	equ	0xFF4
 24735                           prodl	equ	0xFF3
 24736                           intcon	equ	0xFF2
 24737                           intcon2	equ	0xFF1
 24738                           intcon3	equ	0xFF0
 24739                           postinc0	equ	0xFEE
 24740                           wreg	equ	0xFE8
 24741                           indf1	equ	0xFE7
 24742                           postinc1	equ	0xFE6
 24743                           postdec1	equ	0xFE5
 24744                           plusw1	equ	0xFE3
 24745                           fsr1h	equ	0xFE2
 24746                           fsr1l	equ	0xFE1
 24747                           indf2	equ	0xFDF
 24748                           postinc2	equ	0xFDE
 24749                           postdec2	equ	0xFDD
 24750                           plusw2	equ	0xFDB
 24751                           fsr2h	equ	0xFDA
 24752                           fsr2l	equ	0xFD9
 24753                           status	equ	0xFD8
 24754                           
 24755 ;; *************** function ___aldiv *****************
 24756 ;; Defined at:
 24757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
 24758 ;; Parameters:    Size  Location     Type
 24759 ;;  dividend        4    0[BANK0 ] long 
 24760 ;;  divisor         4    4[BANK0 ] long 
 24761 ;; Auto vars:     Size  Location     Type
 24762 ;;  quotient        4   10[BANK0 ] long 
 24763 ;;  sign            1    9[BANK0 ] unsigned char 
 24764 ;;  counter         1    8[BANK0 ] unsigned char 
 24765 ;; Return value:  Size  Location     Type
 24766 ;;                  4    0[BANK0 ] long 
 24767 ;; Registers used:
 24768 ;;		wreg, status,2, status,0
 24769 ;; Tracked objects:
 24770 ;;		On entry : 0/0
 24771 ;;		On exit  : 0/0
 24772 ;;		Unchanged: 0/0
 24773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24774 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24775 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24777 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24778 ;;Total ram usage:       14 bytes
 24779 ;; Hardware stack levels used:    1
 24780 ;; Hardware stack levels required when called:   10
 24781 ;; This function calls:
 24782 ;;		Nothing
 24783 ;; This function is called by:
 24784 ;;		__display_efficiency
 24785 ;;		__get_input_power
 24786 ;;		_log_generate_entry
 24787 ;; This function uses a non-reentrant model
 24788 ;;
 24789                           
 24790                           	psect	text108
 24791  00F5D8                     __ptext108:
 24792                           	opt stack 0
 24793  00F5D8                     ___aldiv:
 24794                           	opt stack 18
 24795                           
 24796                           ; BSR set to: 0
 24797                           ;incstack = 0
 24798  00F5D8  0E00               	movlw	0
 24799  00F5DA  0100               	movlb	0	; () banked
 24800  00F5DC  6F69               	movwf	___aldiv@sign& (0+255),b
 24801                           
 24802                           ; BSR set to: 0
 24803  00F5DE  0100               	movlb	0	; () banked
 24804  00F5E0  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 24805  00F5E2  D00C               	goto	l20181
 24806                           
 24807                           ; BSR set to: 0
 24808  00F5E4  0100               	movlb	0	; () banked
 24809  00F5E6  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 24810  00F5E8  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 24811  00F5EA  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 24812  00F5EC  6D64               	negf	___aldiv@divisor& (0+255),b
 24813  00F5EE  0E00               	movlw	0
 24814  00F5F0  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 24815  00F5F2  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 24816  00F5F4  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 24817                           
 24818                           ; BSR set to: 0
 24819  00F5F6  0E01               	movlw	1
 24820  00F5F8  0100               	movlb	0	; () banked
 24821  00F5FA  6F69               	movwf	___aldiv@sign& (0+255),b
 24822  00F5FC                     l20181:
 24823                           
 24824                           ; BSR set to: 0
 24825  00F5FC  0100               	movlb	0	; () banked
 24826  00F5FE  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 24827  00F600  D00C               	goto	l20187
 24828                           
 24829                           ; BSR set to: 0
 24830  00F602  0100               	movlb	0	; () banked
 24831  00F604  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 24832  00F606  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 24833  00F608  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 24834  00F60A  6D60               	negf	___aldiv@dividend& (0+255),b
 24835  00F60C  0E00               	movlw	0
 24836  00F60E  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 24837  00F610  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 24838  00F612  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 24839                           
 24840                           ; BSR set to: 0
 24841  00F614  0E01               	movlw	1
 24842  00F616  0100               	movlb	0	; () banked
 24843  00F618  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 24844  00F61A                     l20187:
 24845                           
 24846                           ; BSR set to: 0
 24847  00F61A  0E00               	movlw	0
 24848  00F61C  0100               	movlb	0	; () banked
 24849  00F61E  6F6A               	movwf	___aldiv@quotient& (0+255),b
 24850  00F620  0E00               	movlw	0
 24851  00F622  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 24852  00F624  0E00               	movlw	0
 24853  00F626  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 24854  00F628  0E00               	movlw	0
 24855  00F62A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 24856                           
 24857                           ; BSR set to: 0
 24858  00F62C  0100               	movlb	0	; () banked
 24859  00F62E  5164               	movf	___aldiv@divisor& (0+255),w,b
 24860  00F630  0100               	movlb	0	; () banked
 24861  00F632  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 24862  00F634  0100               	movlb	0	; () banked
 24863  00F636  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 24864  00F638  0100               	movlb	0	; () banked
 24865  00F63A  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 24866  00F63C  B4D8               	btfsc	status,2,c
 24867  00F63E  D042               	goto	l20209
 24868                           
 24869                           ; BSR set to: 0
 24870  00F640  0E01               	movlw	1
 24871  00F642  0100               	movlb	0	; () banked
 24872  00F644  6F68               	movwf	___aldiv@counter& (0+255),b
 24873  00F646  D008               	goto	l20195
 24874  00F648                     l20193:
 24875                           
 24876                           ; BSR set to: 0
 24877  00F648  0100               	movlb	0	; () banked
 24878  00F64A  90D8               	bcf	status,0,c
 24879  00F64C  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 24880  00F64E  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 24881  00F650  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 24882  00F652  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 24883  00F654  0100               	movlb	0	; () banked
 24884  00F656  2B68               	incf	___aldiv@counter& (0+255),f,b
 24885  00F658                     l20195:
 24886                           
 24887                           ; BSR set to: 0
 24888  00F658  0100               	movlb	0	; () banked
 24889  00F65A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 24890  00F65C  D7F5               	goto	l20193
 24891  00F65E                     l20197:
 24892                           
 24893                           ; BSR set to: 0
 24894  00F65E  0100               	movlb	0	; () banked
 24895  00F660  90D8               	bcf	status,0,c
 24896  00F662  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 24897  00F664  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 24898  00F666  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 24899  00F668  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 24900                           
 24901                           ; BSR set to: 0
 24902  00F66A  0100               	movlb	0	; () banked
 24903  00F66C  5164               	movf	___aldiv@divisor& (0+255),w,b
 24904  00F66E  0100               	movlb	0	; () banked
 24905  00F670  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 24906  00F672  0100               	movlb	0	; () banked
 24907  00F674  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 24908  00F676  0100               	movlb	0	; () banked
 24909  00F678  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 24910  00F67A  0100               	movlb	0	; () banked
 24911  00F67C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 24912  00F67E  0100               	movlb	0	; () banked
 24913  00F680  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 24914  00F682  0100               	movlb	0	; () banked
 24915  00F684  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 24916  00F686  0100               	movlb	0	; () banked
 24917  00F688  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 24918  00F68A  A0D8               	btfss	status,0,c
 24919  00F68C  D012               	goto	l20205
 24920                           
 24921                           ; BSR set to: 0
 24922  00F68E  0100               	movlb	0	; () banked
 24923  00F690  5164               	movf	___aldiv@divisor& (0+255),w,b
 24924  00F692  0100               	movlb	0	; () banked
 24925  00F694  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 24926  00F696  0100               	movlb	0	; () banked
 24927  00F698  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 24928  00F69A  0100               	movlb	0	; () banked
 24929  00F69C  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 24930  00F69E  0100               	movlb	0	; () banked
 24931  00F6A0  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 24932  00F6A2  0100               	movlb	0	; () banked
 24933  00F6A4  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 24934  00F6A6  0100               	movlb	0	; () banked
 24935  00F6A8  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 24936  00F6AA  0100               	movlb	0	; () banked
 24937  00F6AC  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 24938                           
 24939                           ; BSR set to: 0
 24940  00F6AE  0100               	movlb	0	; () banked
 24941  00F6B0  816A               	bsf	___aldiv@quotient& (0+255),0,b
 24942  00F6B2                     l20205:
 24943                           
 24944                           ; BSR set to: 0
 24945  00F6B2  0100               	movlb	0	; () banked
 24946  00F6B4  90D8               	bcf	status,0,c
 24947  00F6B6  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 24948  00F6B8  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 24949  00F6BA  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 24950  00F6BC  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 24951                           
 24952                           ; BSR set to: 0
 24953  00F6BE  0100               	movlb	0	; () banked
 24954  00F6C0  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 24955  00F6C2  D7CD               	goto	l20197
 24956  00F6C4                     l20209:
 24957                           
 24958                           ; BSR set to: 0
 24959  00F6C4  0100               	movlb	0	; () banked
 24960  00F6C6  5169               	movf	___aldiv@sign& (0+255),w,b
 24961  00F6C8  0100               	movlb	0	; () banked
 24962  00F6CA  B4D8               	btfsc	status,2,c
 24963  00F6CC  D009               	goto	l20213
 24964                           
 24965                           ; BSR set to: 0
 24966  00F6CE  0100               	movlb	0	; () banked
 24967  00F6D0  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 24968  00F6D2  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 24969  00F6D4  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 24970  00F6D6  6D6A               	negf	___aldiv@quotient& (0+255),b
 24971  00F6D8  0E00               	movlw	0
 24972  00F6DA  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 24973  00F6DC  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 24974  00F6DE  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 24975  00F6E0                     l20213:
 24976                           
 24977                           ; BSR set to: 0
 24978  00F6E0  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 24979  00F6E4  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 24980  00F6E8  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 24981  00F6EC  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 24982  00F6F0  0012               	return	
 24983  00F6F2                     __end_of___aldiv:
 24984                           	opt stack 0
 24985                           tblptru	equ	0xFF8
 24986                           tblptrh	equ	0xFF7
 24987                           tblptrl	equ	0xFF6
 24988                           tablat	equ	0xFF5
 24989                           prodh	equ	0xFF4
 24990                           prodl	equ	0xFF3
 24991                           intcon	equ	0xFF2
 24992                           intcon2	equ	0xFF1
 24993                           intcon3	equ	0xFF0
 24994                           postinc0	equ	0xFEE
 24995                           wreg	equ	0xFE8
 24996                           indf1	equ	0xFE7
 24997                           postinc1	equ	0xFE6
 24998                           postdec1	equ	0xFE5
 24999                           plusw1	equ	0xFE3
 25000                           fsr1h	equ	0xFE2
 25001                           fsr1l	equ	0xFE1
 25002                           indf2	equ	0xFDF
 25003                           postinc2	equ	0xFDE
 25004                           postdec2	equ	0xFDD
 25005                           plusw2	equ	0xFDB
 25006                           fsr2h	equ	0xFDA
 25007                           fsr2l	equ	0xFD9
 25008                           status	equ	0xFD8
 25009                           
 25010 ;; *************** function __display_clear *****************
 25011 ;; Defined at:
 25012 ;;		line 28 in file "display.c"
 25013 ;; Parameters:    Size  Location     Type
 25014 ;;		None
 25015 ;; Auto vars:     Size  Location     Type
 25016 ;;  col             1    3[BANK0 ] unsigned char 
 25017 ;;  row             1    2[BANK0 ] unsigned char 
 25018 ;; Return value:  Size  Location     Type
 25019 ;;                  1    wreg      void 
 25020 ;; Registers used:
 25021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25022 ;; Tracked objects:
 25023 ;;		On entry : 0/0
 25024 ;;		On exit  : 0/0
 25025 ;;		Unchanged: 0/0
 25026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25030 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25031 ;;Total ram usage:        4 bytes
 25032 ;; Hardware stack levels used:    1
 25033 ;; Hardware stack levels required when called:   10
 25034 ;; This function calls:
 25035 ;;		Nothing
 25036 ;; This function is called by:
 25037 ;;		_display_prepare
 25038 ;; This function uses a non-reentrant model
 25039 ;;
 25040                           
 25041                           	psect	text109
 25042  012C50                     __ptext109:
 25043                           	opt stack 0
 25044  012C50                     __display_clear:
 25045                           	opt stack 19
 25046                           
 25047                           ;display.c: 30: uint8_t row;
 25048                           ;display.c: 31: uint8_t col;
 25049                           ;display.c: 32: for(row=0;row<4;++row)
 25050                           
 25051                           ; BSR set to: 0
 25052                           ;incstack = 0
 25053  012C50  0E00               	movlw	0
 25054  012C52  0100               	movlb	0	; () banked
 25055  012C54  6F62               	movwf	__display_clear@row& (0+255),b
 25056  012C56                     l21165:
 25057                           
 25058                           ; BSR set to: 0
 25059  012C56  0E03               	movlw	3
 25060  012C58  0100               	movlb	0	; () banked
 25061  012C5A  6562               	cpfsgt	__display_clear@row& (0+255),b
 25062  012C5C  D001               	goto	l21169
 25063  012C5E  0012               	return	
 25064  012C60                     l21169:
 25065                           
 25066                           ; BSR set to: 0
 25067                           ;display.c: 33: {
 25068                           ;display.c: 34: for(col=0;col<20;++col)
 25069  012C60  0E00               	movlw	0
 25070  012C62  0100               	movlb	0	; () banked
 25071  012C64  6F63               	movwf	__display_clear@col& (0+255),b
 25072  012C66                     l21171:
 25073                           
 25074                           ; BSR set to: 0
 25075  012C66  0E13               	movlw	19
 25076  012C68  0100               	movlb	0	; () banked
 25077  012C6A  6563               	cpfsgt	__display_clear@col& (0+255),b
 25078  012C6C  D001               	goto	l21175
 25079  012C6E  D01F               	goto	l21181
 25080  012C70                     l21175:
 25081                           
 25082                           ; BSR set to: 0
 25083                           ;display.c: 35: {
 25084                           ;display.c: 36: display_content[row][col] = ' ';
 25085  012C70  0100               	movlb	0	; () banked
 25086  012C72  5162               	movf	__display_clear@row& (0+255),w,b
 25087  012C74  0D14               	mullw	20
 25088  012C76  0E54               	movlw	low _display_content
 25089  012C78  0100               	movlb	0	; () banked
 25090  012C7A  6F60               	movwf	??__display_clear& (0+255),b
 25091  012C7C  0E03               	movlw	high _display_content
 25092  012C7E  0100               	movlb	0	; () banked
 25093  012C80  6F61               	movwf	(??__display_clear+1)& (0+255),b
 25094  012C82  50F3               	movf	prodl,w,c
 25095  012C84  0100               	movlb	0	; () banked
 25096  012C86  2760               	addwf	??__display_clear& (0+255),f,b
 25097  012C88  50F4               	movf	prodh,w,c
 25098  012C8A  0100               	movlb	0	; () banked
 25099  012C8C  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 25100  012C8E  0100               	movlb	0	; () banked
 25101  012C90  5163               	movf	__display_clear@col& (0+255),w,b
 25102  012C92  0D01               	mullw	1
 25103  012C94  50F3               	movf	prodl,w,c
 25104  012C96  0100               	movlb	0	; () banked
 25105  012C98  2560               	addwf	??__display_clear& (0+255),w,b
 25106  012C9A  6ED9               	movwf	fsr2l,c
 25107  012C9C  50F4               	movf	prodh,w,c
 25108  012C9E  0100               	movlb	0	; () banked
 25109  012CA0  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 25110  012CA2  6EDA               	movwf	fsr2h,c
 25111  012CA4  0E20               	movlw	32
 25112  012CA6  6EDF               	movwf	indf2,c
 25113                           
 25114                           ; BSR set to: 0
 25115  012CA8  0100               	movlb	0	; () banked
 25116  012CAA  2B63               	incf	__display_clear@col& (0+255),f,b
 25117  012CAC  D7DC               	goto	l21171
 25118  012CAE                     l21181:
 25119                           
 25120                           ; BSR set to: 0
 25121  012CAE  0100               	movlb	0	; () banked
 25122  012CB0  2B62               	incf	__display_clear@row& (0+255),f,b
 25123  012CB2  D7D1               	goto	l21165
 25124  012CB4                     __end_of__display_clear:
 25125                           	opt stack 0
 25126                           tblptru	equ	0xFF8
 25127                           tblptrh	equ	0xFF7
 25128                           tblptrl	equ	0xFF6
 25129                           tablat	equ	0xFF5
 25130                           prodh	equ	0xFF4
 25131                           prodl	equ	0xFF3
 25132                           intcon	equ	0xFF2
 25133                           intcon2	equ	0xFF1
 25134                           intcon3	equ	0xFF0
 25135                           postinc0	equ	0xFEE
 25136                           wreg	equ	0xFE8
 25137                           indf1	equ	0xFE7
 25138                           postinc1	equ	0xFE6
 25139                           postdec1	equ	0xFE5
 25140                           plusw1	equ	0xFE3
 25141                           fsr1h	equ	0xFE2
 25142                           fsr1l	equ	0xFE1
 25143                           indf2	equ	0xFDF
 25144                           postinc2	equ	0xFDE
 25145                           postdec2	equ	0xFDD
 25146                           plusw2	equ	0xFDB
 25147                           fsr2h	equ	0xFDA
 25148                           fsr2l	equ	0xFD9
 25149                           status	equ	0xFD8
 25150                           
 25151 ;; *************** function __display_charger *****************
 25152 ;; Defined at:
 25153 ;;		line 405 in file "display.c"
 25154 ;; Parameters:    Size  Location     Type
 25155 ;;		None
 25156 ;; Auto vars:     Size  Location     Type
 25157 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 25158 ;;  header         21   15[BANK1 ] const unsigned char [21]
 25159 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 25160 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 25161 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 25162 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 25163 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 25164 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 25165 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 25166 ;;  cntr            1  142[BANK1 ] unsigned char 
 25167 ;; Return value:  Size  Location     Type
 25168 ;;                  1    wreg      void 
 25169 ;; Registers used:
 25170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25171 ;; Tracked objects:
 25172 ;;		On entry : 0/0
 25173 ;;		On exit  : 0/0
 25174 ;;		Unchanged: 0/0
 25175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25177 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25179 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25180 ;;Total ram usage:      144 bytes
 25181 ;; Hardware stack levels used:    1
 25182 ;; Hardware stack levels required when called:   14
 25183 ;; This function calls:
 25184 ;;		__display_itoa
 25185 ;;		_buck_get_dutycycle
 25186 ;;		_buck_get_mode
 25187 ;; This function is called by:
 25188 ;;		_display_prepare
 25189 ;; This function uses a non-reentrant model
 25190 ;;
 25191                           
 25192                           	psect	text110
 25193  00BB7E                     __ptext110:
 25194                           	opt stack 0
 25195  00BB7E                     __display_charger:
 25196                           	opt stack 15
 25197                           
 25198                           ;display.c: 407: uint8_t cntr;
 25199                           ;display.c: 408: const char header[] = "MPPT Charger Details";
 25200                           
 25201                           ; BSR set to: 0
 25202                           ;incstack = 0
 25203  00BB7E  0EA0               	movlw	low __display_charger@F8732
 25204  00BB80  6EF6               	movwf	tblptrl,c
 25205  00BB82                     	if	1	;There is more than 1 active tblptr byte
 25206  00BB82  0E90               	movlw	high __display_charger@F8732
 25207  00BB84  6EF7               	movwf	tblptrh,c
 25208  00BB86                     	endif
 25209  00BB86                     	if	1	;There are 3 active tblptr bytes
 25210  00BB86  0E00               	movlw	low (__display_charger@F8732 shr (0+16))
 25211  00BB88  6EF8               	movwf	tblptru,c
 25212  00BB8A                     	endif
 25213  00BB8A  EE21  F00F         	lfsr	2,__display_charger@header
 25214  00BB8E  0E14               	movlw	20
 25215  00BB90                     u21100:
 25216  00BB90  0009               	tblrd		*+
 25217  00BB92  CFF5 FFDE          	movff	tablat,postinc2
 25218  00BB96  06E8               	decf	wreg,f,c
 25219  00BB98  E2FB               	bc	u21100
 25220                           
 25221                           ;display.c: 409: const char supply_on[] = "Charger supply on";
 25222  00BB9A  0E90               	movlw	low __display_charger@F8734
 25223  00BB9C  6EF6               	movwf	tblptrl,c
 25224  00BB9E                     	if	1	;There is more than 1 active tblptr byte
 25225  00BB9E  0E91               	movlw	high __display_charger@F8734
 25226  00BBA0  6EF7               	movwf	tblptrh,c
 25227  00BBA2                     	endif
 25228  00BBA2                     	if	1	;There are 3 active tblptr bytes
 25229  00BBA2  0E00               	movlw	low (__display_charger@F8734 shr (0+16))
 25230  00BBA4  6EF8               	movwf	tblptru,c
 25231  00BBA6                     	endif
 25232  00BBA6  EE21  F060         	lfsr	2,__display_charger@supply_on
 25233  00BBAA  0E11               	movlw	17
 25234  00BBAC                     u21110:
 25235  00BBAC  0009               	tblrd		*+
 25236  00BBAE  CFF5 FFDE          	movff	tablat,postinc2
 25237  00BBB2  06E8               	decf	wreg,f,c
 25238  00BBB4  E2FB               	bc	u21110
 25239                           
 25240                           ;display.c: 410: const char supply_off[] = "Charger supply off";
 25241  00BBB6  0E7D               	movlw	low __display_charger@F8736
 25242  00BBB8  6EF6               	movwf	tblptrl,c
 25243  00BBBA                     	if	1	;There is more than 1 active tblptr byte
 25244  00BBBA  0E91               	movlw	high __display_charger@F8736
 25245  00BBBC  6EF7               	movwf	tblptrh,c
 25246  00BBBE                     	endif
 25247  00BBBE                     	if	1	;There are 3 active tblptr bytes
 25248  00BBBE  0E00               	movlw	low (__display_charger@F8736 shr (0+16))
 25249  00BBC0  6EF8               	movwf	tblptru,c
 25250  00BBC2                     	endif
 25251  00BBC2  EE21  F04D         	lfsr	2,__display_charger@supply_off
 25252  00BBC6  0E12               	movlw	18
 25253  00BBC8                     u21120:
 25254  00BBC8  0009               	tblrd		*+
 25255  00BBCA  CFF5 FFDE          	movff	tablat,postinc2
 25256  00BBCE  06E8               	decf	wreg,f,c
 25257  00BBD0  E2FB               	bc	u21120
 25258                           
 25259                           ;display.c: 411: const char fan_on[] = "Fan on";
 25260  00BBD2  0E0F               	movlw	low __display_charger@F8738
 25261  00BBD4  6EF6               	movwf	tblptrl,c
 25262  00BBD6                     	if	1	;There is more than 1 active tblptr byte
 25263  00BBD6  0E93               	movlw	high __display_charger@F8738
 25264  00BBD8  6EF7               	movwf	tblptrh,c
 25265  00BBDA                     	endif
 25266  00BBDA                     	if	1	;There are 3 active tblptr bytes
 25267  00BBDA  0E00               	movlw	low (__display_charger@F8738 shr (0+16))
 25268  00BBDC  6EF8               	movwf	tblptru,c
 25269  00BBDE                     	endif
 25270  00BBDE  EE21  F008         	lfsr	2,__display_charger@fan_on
 25271  00BBE2  0E06               	movlw	6
 25272  00BBE4                     u21130:
 25273  00BBE4  0009               	tblrd		*+
 25274  00BBE6  CFF5 FFDE          	movff	tablat,postinc2
 25275  00BBEA  06E8               	decf	wreg,f,c
 25276  00BBEC  E2FB               	bc	u21130
 25277                           
 25278                           ;display.c: 412: const char fan_off[] = "Fan off";
 25279  00BBEE  0EF7               	movlw	low __display_charger@F8740
 25280  00BBF0  6EF6               	movwf	tblptrl,c
 25281  00BBF2                     	if	1	;There is more than 1 active tblptr byte
 25282  00BBF2  0E92               	movlw	high __display_charger@F8740
 25283  00BBF4  6EF7               	movwf	tblptrh,c
 25284  00BBF6                     	endif
 25285  00BBF6                     	if	1	;There are 3 active tblptr bytes
 25286  00BBF6  0E00               	movlw	low (__display_charger@F8740 shr (0+16))
 25287  00BBF8  6EF8               	movwf	tblptru,c
 25288  00BBFA                     	endif
 25289  00BBFA  EE21  F000         	lfsr	2,__display_charger@fan_off
 25290  00BBFE  0E07               	movlw	7
 25291  00BC00                     u21140:
 25292  00BC00  0009               	tblrd		*+
 25293  00BC02  CFF5 FFDE          	movff	tablat,postinc2
 25294  00BC06  06E8               	decf	wreg,f,c
 25295  00BC08  E2FB               	bc	u21140
 25296                           
 25297                           ;display.c: 414: const char charger_off[] = "Charger off";
 25298  00BC0A  0EAB               	movlw	low __display_charger@F8742
 25299  00BC0C  6EF6               	movwf	tblptrl,c
 25300  00BC0E                     	if	1	;There is more than 1 active tblptr byte
 25301  00BC0E  0E92               	movlw	high __display_charger@F8742
 25302  00BC10  6EF7               	movwf	tblptrh,c
 25303  00BC12                     	endif
 25304  00BC12                     	if	1	;There are 3 active tblptr bytes
 25305  00BC12  0E00               	movlw	low (__display_charger@F8742 shr (0+16))
 25306  00BC14  6EF8               	movwf	tblptru,c
 25307  00BC16                     	endif
 25308  00BC16  EE21  F082         	lfsr	2,__display_charger@charger_off
 25309  00BC1A  0E0B               	movlw	11
 25310  00BC1C                     u21150:
 25311  00BC1C  0009               	tblrd		*+
 25312  00BC1E  CFF5 FFDE          	movff	tablat,postinc2
 25313  00BC22  06E8               	decf	wreg,f,c
 25314  00BC24  E2FB               	bc	u21150
 25315                           
 25316                           ;display.c: 415: const char charger_startup[] = "Charger Startup";
 25317  00BC26  0EFB               	movlw	low __display_charger@F8744
 25318  00BC28  6EF6               	movwf	tblptrl,c
 25319  00BC2A                     	if	1	;There is more than 1 active tblptr byte
 25320  00BC2A  0E91               	movlw	high __display_charger@F8744
 25321  00BC2C  6EF7               	movwf	tblptrh,c
 25322  00BC2E                     	endif
 25323  00BC2E                     	if	1	;There are 3 active tblptr bytes
 25324  00BC2E  0E00               	movlw	low (__display_charger@F8744 shr (0+16))
 25325  00BC30  6EF8               	movwf	tblptru,c
 25326  00BC32                     	endif
 25327  00BC32  EE21  F072         	lfsr	2,__display_charger@charger_startup
 25328  00BC36  0E0F               	movlw	15
 25329  00BC38                     u21160:
 25330  00BC38  0009               	tblrd		*+
 25331  00BC3A  CFF5 FFDE          	movff	tablat,postinc2
 25332  00BC3E  06E8               	decf	wreg,f,c
 25333  00BC40  E2FB               	bc	u21160
 25334                           
 25335                           ;display.c: 416: const char charger_async[] = "Charger Asynchronous";
 25336  00BC42  0E8B               	movlw	low __display_charger@F8746
 25337  00BC44  6EF6               	movwf	tblptrl,c
 25338  00BC46                     	if	1	;There is more than 1 active tblptr byte
 25339  00BC46  0E90               	movlw	high __display_charger@F8746
 25340  00BC48  6EF7               	movwf	tblptrh,c
 25341  00BC4A                     	endif
 25342  00BC4A                     	if	1	;There are 3 active tblptr bytes
 25343  00BC4A  0E00               	movlw	low (__display_charger@F8746 shr (0+16))
 25344  00BC4C  6EF8               	movwf	tblptru,c
 25345  00BC4E                     	endif
 25346  00BC4E  EE21  F024         	lfsr	2,__display_charger@charger_async
 25347  00BC52  0E14               	movlw	20
 25348  00BC54                     u21170:
 25349  00BC54  0009               	tblrd		*+
 25350  00BC56  CFF5 FFDE          	movff	tablat,postinc2
 25351  00BC5A  06E8               	decf	wreg,f,c
 25352  00BC5C  E2FB               	bc	u21170
 25353                           
 25354                           ;display.c: 417: const char charger_sync[] = "Charger Synchronous";
 25355  00BC5E  0EF3               	movlw	low __display_charger@F8748
 25356  00BC60  6EF6               	movwf	tblptrl,c
 25357  00BC62                     	if	1	;There is more than 1 active tblptr byte
 25358  00BC62  0E90               	movlw	high __display_charger@F8748
 25359  00BC64  6EF7               	movwf	tblptrh,c
 25360  00BC66                     	endif
 25361  00BC66                     	if	1	;There are 3 active tblptr bytes
 25362  00BC66  0E00               	movlw	low (__display_charger@F8748 shr (0+16))
 25363  00BC68  6EF8               	movwf	tblptru,c
 25364  00BC6A                     	endif
 25365  00BC6A  EE21  F039         	lfsr	2,__display_charger@charger_sync
 25366  00BC6E  0E13               	movlw	19
 25367  00BC70                     u21180:
 25368  00BC70  0009               	tblrd		*+
 25369  00BC72  CFF5 FFDE          	movff	tablat,postinc2
 25370  00BC76  06E8               	decf	wreg,f,c
 25371  00BC78  E2FB               	bc	u21180
 25372                           
 25373                           ;display.c: 419: cntr = 0;
 25374  00BC7A  0E00               	movlw	0
 25375  00BC7C  0101               	movlb	1	; () banked
 25376  00BC7E  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25377                           
 25378                           ;display.c: 420: while(header[cntr])
 25379  00BC80  D016               	goto	l21493
 25380  00BC82                     l21489:
 25381                           
 25382                           ; BSR set to: 1
 25383                           ;display.c: 421: display_content[0][cntr] = header[cntr++];
 25384  00BC82  0101               	movlb	1	; () banked
 25385  00BC84  518E               	movf	__display_charger@cntr& (0+255),w,b
 25386  00BC86  0D01               	mullw	1
 25387  00BC88  0E0F               	movlw	low __display_charger@header
 25388  00BC8A  24F3               	addwf	prodl,w,c
 25389  00BC8C  6ED9               	movwf	fsr2l,c
 25390  00BC8E  0E01               	movlw	high __display_charger@header
 25391  00BC90  20F4               	addwfc	prodh,w,c
 25392  00BC92  6EDA               	movwf	fsr2h,c
 25393  00BC94  0101               	movlb	1	; () banked
 25394  00BC96  518E               	movf	__display_charger@cntr& (0+255),w,b
 25395  00BC98  0D01               	mullw	1
 25396  00BC9A  0E54               	movlw	low _display_content
 25397  00BC9C  24F3               	addwf	prodl,w,c
 25398  00BC9E  6EE1               	movwf	fsr1l,c
 25399  00BCA0  0E03               	movlw	high _display_content
 25400  00BCA2  20F4               	addwfc	prodh,w,c
 25401  00BCA4  6EE2               	movwf	fsr1h,c
 25402  00BCA6  CFDF FFE7          	movff	indf2,indf1
 25403                           
 25404                           ; BSR set to: 1
 25405  00BCAA  0101               	movlb	1	; () banked
 25406  00BCAC  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25407  00BCAE                     l21493:
 25408                           
 25409                           ; BSR set to: 1
 25410  00BCAE  0101               	movlb	1	; () banked
 25411  00BCB0  518E               	movf	__display_charger@cntr& (0+255),w,b
 25412  00BCB2  0D01               	mullw	1
 25413  00BCB4  0E0F               	movlw	low __display_charger@header
 25414  00BCB6  24F3               	addwf	prodl,w,c
 25415  00BCB8  6ED9               	movwf	fsr2l,c
 25416  00BCBA  0E01               	movlw	high __display_charger@header
 25417  00BCBC  20F4               	addwfc	prodh,w,c
 25418  00BCBE  6EDA               	movwf	fsr2h,c
 25419  00BCC0  50DF               	movf	indf2,w,c
 25420  00BCC2  A4D8               	btfss	status,2,c
 25421  00BCC4  D7DE               	goto	l21489
 25422                           
 25423                           ; BSR set to: 1
 25424                           ;display.c: 423: cntr = 0;
 25425                           
 25426                           ; BSR set to: 1
 25427  00BCC6  0E00               	movlw	0
 25428  00BCC8  0101               	movlb	1	; () banked
 25429  00BCCA  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25430                           
 25431                           ;display.c: 424: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 25432  00BCCC  D016               	goto	l21503
 25433  00BCCE                     l21499:
 25434                           
 25435                           ;display.c: 427: display_content[1][cntr] = supply_on[cntr++];
 25436  00BCCE  0101               	movlb	1	; () banked
 25437  00BCD0  518E               	movf	__display_charger@cntr& (0+255),w,b
 25438  00BCD2  0D01               	mullw	1
 25439  00BCD4  0E60               	movlw	low __display_charger@supply_on
 25440  00BCD6  24F3               	addwf	prodl,w,c
 25441  00BCD8  6ED9               	movwf	fsr2l,c
 25442  00BCDA  0E01               	movlw	high __display_charger@supply_on
 25443  00BCDC  20F4               	addwfc	prodh,w,c
 25444  00BCDE  6EDA               	movwf	fsr2h,c
 25445  00BCE0  0101               	movlb	1	; () banked
 25446  00BCE2  518E               	movf	__display_charger@cntr& (0+255),w,b
 25447  00BCE4  0D01               	mullw	1
 25448  00BCE6  0E68               	movlw	low (_display_content+20)
 25449  00BCE8  24F3               	addwf	prodl,w,c
 25450  00BCEA  6EE1               	movwf	fsr1l,c
 25451  00BCEC  0E03               	movlw	high (_display_content+20)
 25452  00BCEE  20F4               	addwfc	prodh,w,c
 25453  00BCF0  6EE2               	movwf	fsr1h,c
 25454  00BCF2  CFDF FFE7          	movff	indf2,indf1
 25455                           
 25456                           ; BSR set to: 1
 25457  00BCF6  0101               	movlb	1	; () banked
 25458  00BCF8  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25459  00BCFA                     l21503:
 25460  00BCFA  0101               	movlb	1	; () banked
 25461  00BCFC  518E               	movf	__display_charger@cntr& (0+255),w,b
 25462  00BCFE  0D01               	mullw	1
 25463  00BD00  0E60               	movlw	low __display_charger@supply_on
 25464  00BD02  24F3               	addwf	prodl,w,c
 25465  00BD04  6ED9               	movwf	fsr2l,c
 25466  00BD06  0E01               	movlw	high __display_charger@supply_on
 25467  00BD08  20F4               	addwfc	prodh,w,c
 25468  00BD0A  6EDA               	movwf	fsr2h,c
 25469  00BD0C  50DF               	movf	indf2,w,c
 25470  00BD0E  B4D8               	btfsc	status,2,c
 25471  00BD10  D023               	goto	l21511
 25472  00BD12  D7DD               	goto	l21499
 25473  00BD14                     l21505:
 25474                           
 25475                           ; BSR set to: 1
 25476                           ;display.c: 432: display_content[1][cntr] = supply_off[cntr++];
 25477  00BD14  0101               	movlb	1	; () banked
 25478  00BD16  518E               	movf	__display_charger@cntr& (0+255),w,b
 25479  00BD18  0D01               	mullw	1
 25480  00BD1A  0E4D               	movlw	low __display_charger@supply_off
 25481  00BD1C  24F3               	addwf	prodl,w,c
 25482  00BD1E  6ED9               	movwf	fsr2l,c
 25483  00BD20  0E01               	movlw	high __display_charger@supply_off
 25484  00BD22  20F4               	addwfc	prodh,w,c
 25485  00BD24  6EDA               	movwf	fsr2h,c
 25486  00BD26  0101               	movlb	1	; () banked
 25487  00BD28  518E               	movf	__display_charger@cntr& (0+255),w,b
 25488  00BD2A  0D01               	mullw	1
 25489  00BD2C  0E68               	movlw	low (_display_content+20)
 25490  00BD2E  24F3               	addwf	prodl,w,c
 25491  00BD30  6EE1               	movwf	fsr1l,c
 25492  00BD32  0E03               	movlw	high (_display_content+20)
 25493  00BD34  20F4               	addwfc	prodh,w,c
 25494  00BD36  6EE2               	movwf	fsr1h,c
 25495  00BD38  CFDF FFE7          	movff	indf2,indf1
 25496                           
 25497                           ; BSR set to: 1
 25498  00BD3C  0101               	movlb	1	; () banked
 25499  00BD3E  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25500                           
 25501                           ; BSR set to: 1
 25502  00BD40  0101               	movlb	1	; () banked
 25503  00BD42  518E               	movf	__display_charger@cntr& (0+255),w,b
 25504  00BD44  0D01               	mullw	1
 25505  00BD46  0E4D               	movlw	low __display_charger@supply_off
 25506  00BD48  24F3               	addwf	prodl,w,c
 25507  00BD4A  6ED9               	movwf	fsr2l,c
 25508  00BD4C  0E01               	movlw	high __display_charger@supply_off
 25509  00BD4E  20F4               	addwfc	prodh,w,c
 25510  00BD50  6EDA               	movwf	fsr2h,c
 25511  00BD52  50DF               	movf	indf2,w,c
 25512  00BD54  A4D8               	btfss	status,2,c
 25513  00BD56  D7DE               	goto	l21505
 25514  00BD58                     l21511:
 25515                           
 25516                           ; BSR set to: 1
 25517                           ;display.c: 433: }
 25518                           ;display.c: 435: cntr = 0;
 25519  00BD58  0E00               	movlw	0
 25520  00BD5A  0101               	movlb	1	; () banked
 25521  00BD5C  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25522                           
 25523                           ;display.c: 436: switch(buck_get_mode())
 25524  00BD5E  D08C               	goto	l21539
 25525  00BD60                     l21513:
 25526                           
 25527                           ; BSR set to: 1
 25528                           ;display.c: 440: display_content[2][cntr] = charger_off[cntr++];
 25529  00BD60  0101               	movlb	1	; () banked
 25530  00BD62  518E               	movf	__display_charger@cntr& (0+255),w,b
 25531  00BD64  0D01               	mullw	1
 25532  00BD66  0E82               	movlw	low __display_charger@charger_off
 25533  00BD68  24F3               	addwf	prodl,w,c
 25534  00BD6A  6ED9               	movwf	fsr2l,c
 25535  00BD6C  0E01               	movlw	high __display_charger@charger_off
 25536  00BD6E  20F4               	addwfc	prodh,w,c
 25537  00BD70  6EDA               	movwf	fsr2h,c
 25538  00BD72  0101               	movlb	1	; () banked
 25539  00BD74  518E               	movf	__display_charger@cntr& (0+255),w,b
 25540  00BD76  0D01               	mullw	1
 25541  00BD78  0E7C               	movlw	low (_display_content+40)
 25542  00BD7A  24F3               	addwf	prodl,w,c
 25543  00BD7C  6EE1               	movwf	fsr1l,c
 25544  00BD7E  0E03               	movlw	high (_display_content+40)
 25545  00BD80  20F4               	addwfc	prodh,w,c
 25546  00BD82  6EE2               	movwf	fsr1h,c
 25547  00BD84  CFDF FFE7          	movff	indf2,indf1
 25548                           
 25549                           ; BSR set to: 1
 25550  00BD88  0101               	movlb	1	; () banked
 25551  00BD8A  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25552  00BD8C                     l21517:
 25553  00BD8C  0101               	movlb	1	; () banked
 25554  00BD8E  518E               	movf	__display_charger@cntr& (0+255),w,b
 25555  00BD90  0D01               	mullw	1
 25556  00BD92  0E82               	movlw	low __display_charger@charger_off
 25557  00BD94  24F3               	addwf	prodl,w,c
 25558  00BD96  6ED9               	movwf	fsr2l,c
 25559  00BD98  0E01               	movlw	high __display_charger@charger_off
 25560  00BD9A  20F4               	addwfc	prodh,w,c
 25561  00BD9C  6EDA               	movwf	fsr2h,c
 25562  00BD9E  50DF               	movf	indf2,w,c
 25563  00BDA0  B4D8               	btfsc	status,2,c
 25564  00BDA2  D078               	goto	l21541
 25565  00BDA4  D7DD               	goto	l21513
 25566  00BDA6                     l21519:
 25567                           
 25568                           ; BSR set to: 1
 25569                           ;display.c: 445: display_content[2][cntr] = charger_startup[cntr++];
 25570  00BDA6  0101               	movlb	1	; () banked
 25571  00BDA8  518E               	movf	__display_charger@cntr& (0+255),w,b
 25572  00BDAA  0D01               	mullw	1
 25573  00BDAC  0E72               	movlw	low __display_charger@charger_startup
 25574  00BDAE  24F3               	addwf	prodl,w,c
 25575  00BDB0  6ED9               	movwf	fsr2l,c
 25576  00BDB2  0E01               	movlw	high __display_charger@charger_startup
 25577  00BDB4  20F4               	addwfc	prodh,w,c
 25578  00BDB6  6EDA               	movwf	fsr2h,c
 25579  00BDB8  0101               	movlb	1	; () banked
 25580  00BDBA  518E               	movf	__display_charger@cntr& (0+255),w,b
 25581  00BDBC  0D01               	mullw	1
 25582  00BDBE  0E7C               	movlw	low (_display_content+40)
 25583  00BDC0  24F3               	addwf	prodl,w,c
 25584  00BDC2  6EE1               	movwf	fsr1l,c
 25585  00BDC4  0E03               	movlw	high (_display_content+40)
 25586  00BDC6  20F4               	addwfc	prodh,w,c
 25587  00BDC8  6EE2               	movwf	fsr1h,c
 25588  00BDCA  CFDF FFE7          	movff	indf2,indf1
 25589                           
 25590                           ; BSR set to: 1
 25591  00BDCE  0101               	movlb	1	; () banked
 25592  00BDD0  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25593  00BDD2                     l21523:
 25594  00BDD2  0101               	movlb	1	; () banked
 25595  00BDD4  518E               	movf	__display_charger@cntr& (0+255),w,b
 25596  00BDD6  0D01               	mullw	1
 25597  00BDD8  0E72               	movlw	low __display_charger@charger_startup
 25598  00BDDA  24F3               	addwf	prodl,w,c
 25599  00BDDC  6ED9               	movwf	fsr2l,c
 25600  00BDDE  0E01               	movlw	high __display_charger@charger_startup
 25601  00BDE0  20F4               	addwfc	prodh,w,c
 25602  00BDE2  6EDA               	movwf	fsr2h,c
 25603  00BDE4  50DF               	movf	indf2,w,c
 25604  00BDE6  B4D8               	btfsc	status,2,c
 25605  00BDE8  D055               	goto	l21541
 25606  00BDEA  D7DD               	goto	l21519
 25607  00BDEC                     l21525:
 25608                           
 25609                           ; BSR set to: 1
 25610                           ;display.c: 450: display_content[2][cntr] = charger_async[cntr++];
 25611  00BDEC  0101               	movlb	1	; () banked
 25612  00BDEE  518E               	movf	__display_charger@cntr& (0+255),w,b
 25613  00BDF0  0D01               	mullw	1
 25614  00BDF2  0E24               	movlw	low __display_charger@charger_async
 25615  00BDF4  24F3               	addwf	prodl,w,c
 25616  00BDF6  6ED9               	movwf	fsr2l,c
 25617  00BDF8  0E01               	movlw	high __display_charger@charger_async
 25618  00BDFA  20F4               	addwfc	prodh,w,c
 25619  00BDFC  6EDA               	movwf	fsr2h,c
 25620  00BDFE  0101               	movlb	1	; () banked
 25621  00BE00  518E               	movf	__display_charger@cntr& (0+255),w,b
 25622  00BE02  0D01               	mullw	1
 25623  00BE04  0E7C               	movlw	low (_display_content+40)
 25624  00BE06  24F3               	addwf	prodl,w,c
 25625  00BE08  6EE1               	movwf	fsr1l,c
 25626  00BE0A  0E03               	movlw	high (_display_content+40)
 25627  00BE0C  20F4               	addwfc	prodh,w,c
 25628  00BE0E  6EE2               	movwf	fsr1h,c
 25629  00BE10  CFDF FFE7          	movff	indf2,indf1
 25630                           
 25631                           ; BSR set to: 1
 25632  00BE14  0101               	movlb	1	; () banked
 25633  00BE16  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25634  00BE18                     l21529:
 25635  00BE18  0101               	movlb	1	; () banked
 25636  00BE1A  518E               	movf	__display_charger@cntr& (0+255),w,b
 25637  00BE1C  0D01               	mullw	1
 25638  00BE1E  0E24               	movlw	low __display_charger@charger_async
 25639  00BE20  24F3               	addwf	prodl,w,c
 25640  00BE22  6ED9               	movwf	fsr2l,c
 25641  00BE24  0E01               	movlw	high __display_charger@charger_async
 25642  00BE26  20F4               	addwfc	prodh,w,c
 25643  00BE28  6EDA               	movwf	fsr2h,c
 25644  00BE2A  50DF               	movf	indf2,w,c
 25645  00BE2C  B4D8               	btfsc	status,2,c
 25646  00BE2E  D032               	goto	l21541
 25647  00BE30  D7DD               	goto	l21525
 25648  00BE32                     l21531:
 25649                           
 25650                           ; BSR set to: 1
 25651                           ;display.c: 455: display_content[2][cntr] = charger_sync[cntr++];
 25652  00BE32  0101               	movlb	1	; () banked
 25653  00BE34  518E               	movf	__display_charger@cntr& (0+255),w,b
 25654  00BE36  0D01               	mullw	1
 25655  00BE38  0E39               	movlw	low __display_charger@charger_sync
 25656  00BE3A  24F3               	addwf	prodl,w,c
 25657  00BE3C  6ED9               	movwf	fsr2l,c
 25658  00BE3E  0E01               	movlw	high __display_charger@charger_sync
 25659  00BE40  20F4               	addwfc	prodh,w,c
 25660  00BE42  6EDA               	movwf	fsr2h,c
 25661  00BE44  0101               	movlb	1	; () banked
 25662  00BE46  518E               	movf	__display_charger@cntr& (0+255),w,b
 25663  00BE48  0D01               	mullw	1
 25664  00BE4A  0E7C               	movlw	low (_display_content+40)
 25665  00BE4C  24F3               	addwf	prodl,w,c
 25666  00BE4E  6EE1               	movwf	fsr1l,c
 25667  00BE50  0E03               	movlw	high (_display_content+40)
 25668  00BE52  20F4               	addwfc	prodh,w,c
 25669  00BE54  6EE2               	movwf	fsr1h,c
 25670  00BE56  CFDF FFE7          	movff	indf2,indf1
 25671                           
 25672                           ; BSR set to: 1
 25673  00BE5A  0101               	movlb	1	; () banked
 25674  00BE5C  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25675  00BE5E                     l21535:
 25676  00BE5E  0101               	movlb	1	; () banked
 25677  00BE60  518E               	movf	__display_charger@cntr& (0+255),w,b
 25678  00BE62  0D01               	mullw	1
 25679  00BE64  0E39               	movlw	low __display_charger@charger_sync
 25680  00BE66  24F3               	addwf	prodl,w,c
 25681  00BE68  6ED9               	movwf	fsr2l,c
 25682  00BE6A  0E01               	movlw	high __display_charger@charger_sync
 25683  00BE6C  20F4               	addwfc	prodh,w,c
 25684  00BE6E  6EDA               	movwf	fsr2h,c
 25685  00BE70  50DF               	movf	indf2,w,c
 25686  00BE72  B4D8               	btfsc	status,2,c
 25687  00BE74  D00F               	goto	l21541
 25688  00BE76  D7DD               	goto	l21531
 25689  00BE78                     l21539:
 25690                           
 25691                           ; BSR set to: 1
 25692  00BE78  EC7F  F0A1         	call	_buck_get_mode	;wreg free
 25693                           
 25694                           ; Switch size 1, requested type "space"
 25695                           ; Number of cases is 4, Range of values is 0 to 3
 25696                           ; switch strategies available:
 25697                           ; Name         Instructions Cycles
 25698                           ; simple_byte           13     7 (average)
 25699                           ;	Chosen strategy is simple_byte
 25700  00BE7C  0A00               	xorlw	0	; case 0
 25701  00BE7E  B4D8               	btfsc	status,2,c
 25702  00BE80  D785               	goto	l21517
 25703  00BE82  0A01               	xorlw	1	; case 1
 25704  00BE84  B4D8               	btfsc	status,2,c
 25705  00BE86  D7A5               	goto	l21523
 25706  00BE88  0A03               	xorlw	3	; case 2
 25707  00BE8A  B4D8               	btfsc	status,2,c
 25708  00BE8C  D7C5               	goto	l21529
 25709  00BE8E  0A01               	xorlw	1	; case 3
 25710  00BE90  B4D8               	btfsc	status,2,c
 25711  00BE92  D7E5               	goto	l21535
 25712  00BE94                     l21541:
 25713                           
 25714                           ;display.c: 459: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 25715  00BE94  EC7A  F0A1         	call	_buck_get_dutycycle	;wreg free
 25716  00BE98  0100               	movlb	0	; () banked
 25717  00BE9A  6F90               	movwf	??__display_charger& (0+255),b
 25718  00BE9C  0100               	movlb	0	; () banked
 25719  00BE9E  5190               	movf	??__display_charger& (0+255),w,b
 25720  00BEA0  0100               	movlb	0	; () banked
 25721  00BEA2  6F78               	movwf	__display_itoa@value& (0+255),b
 25722  00BEA4  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 25723  00BEA6  0E00               	movlw	0
 25724  00BEA8  0100               	movlb	0	; () banked
 25725  00BEAA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 25726  00BEAC  0E90               	movlw	low (_display_content+60)
 25727  00BEAE  0100               	movlb	0	; () banked
 25728  00BEB0  6F7B               	movwf	__display_itoa@text& (0+255),b
 25729  00BEB2  0E03               	movlw	high (_display_content+60)
 25730  00BEB4  0100               	movlb	0	; () banked
 25731  00BEB6  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 25732  00BEB8  ECBE  F063         	call	__display_itoa	;wreg free
 25733  00BEBC  0012               	return		;funcret
 25734  00BEBE                     __end_of__display_charger:
 25735                           	opt stack 0
 25736                           tblptru	equ	0xFF8
 25737                           tblptrh	equ	0xFF7
 25738                           tblptrl	equ	0xFF6
 25739                           tablat	equ	0xFF5
 25740                           prodh	equ	0xFF4
 25741                           prodl	equ	0xFF3
 25742                           intcon	equ	0xFF2
 25743                           intcon2	equ	0xFF1
 25744                           intcon3	equ	0xFF0
 25745                           postinc0	equ	0xFEE
 25746                           wreg	equ	0xFE8
 25747                           indf1	equ	0xFE7
 25748                           postinc1	equ	0xFE6
 25749                           postdec1	equ	0xFE5
 25750                           plusw1	equ	0xFE3
 25751                           fsr1h	equ	0xFE2
 25752                           fsr1l	equ	0xFE1
 25753                           indf2	equ	0xFDF
 25754                           postinc2	equ	0xFDE
 25755                           postdec2	equ	0xFDD
 25756                           plusw2	equ	0xFDB
 25757                           fsr2h	equ	0xFDA
 25758                           fsr2l	equ	0xFD9
 25759                           status	equ	0xFD8
 25760                           
 25761 ;; *************** function __display_itoa *****************
 25762 ;; Defined at:
 25763 ;;		line 41 in file "display.c"
 25764 ;; Parameters:    Size  Location     Type
 25765 ;;  value           2   24[BANK0 ] int 
 25766 ;;  decimals        1   26[BANK0 ] unsigned char 
 25767 ;;  text            2   27[BANK0 ] PTR unsigned char 
 25768 ;;		 -> display_content(80), 
 25769 ;; Auto vars:     Size  Location     Type
 25770 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 25771 ;;  pos             1   47[BANK0 ] unsigned char 
 25772 ;;  missing         1   46[BANK0 ] char 
 25773 ;;  len             1   45[BANK0 ] unsigned char 
 25774 ;; Return value:  Size  Location     Type
 25775 ;;                  1    wreg      void 
 25776 ;; Registers used:
 25777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25778 ;; Tracked objects:
 25779 ;;		On entry : 0/0
 25780 ;;		On exit  : 0/0
 25781 ;;		Unchanged: 0/0
 25782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25783 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25784 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25785 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25786 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25787 ;;Total ram usage:       24 bytes
 25788 ;; Hardware stack levels used:    1
 25789 ;; Hardware stack levels required when called:   13
 25790 ;; This function calls:
 25791 ;;		_itoa
 25792 ;;		_strlen
 25793 ;; This function is called by:
 25794 ;;		__display_inout
 25795 ;;		__display_charger
 25796 ;;		__display_efficiency
 25797 ;;		__display_temperature
 25798 ;; This function uses a non-reentrant model
 25799 ;;
 25800                           
 25801                           	psect	text111
 25802  00C77C                     __ptext111:
 25803                           	opt stack 0
 25804  00C77C                     __display_itoa:
 25805                           	opt stack 15
 25806                           
 25807                           ;display.c: 43: uint8_t pos;
 25808                           ;display.c: 44: uint8_t len;
 25809                           ;display.c: 45: int8_t missing;
 25810                           ;display.c: 46: char tmp[10];
 25811                           ;display.c: 47: itoa(tmp, value, 10);
 25812                           
 25813                           ;incstack = 0
 25814  00C77C  0E83               	movlw	low __display_itoa@tmp
 25815  00C77E  0100               	movlb	0	; () banked
 25816  00C780  6F70               	movwf	itoa@buf& (0+255),b
 25817  00C782  0E00               	movlw	high __display_itoa@tmp
 25818  00C784  0100               	movlb	0	; () banked
 25819  00C786  6F71               	movwf	(itoa@buf+1)& (0+255),b
 25820  00C788  C078  F072         	movff	__display_itoa@value,itoa@val
 25821  00C78C  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 25822  00C790  0E00               	movlw	0
 25823  00C792  0100               	movlb	0	; () banked
 25824  00C794  6F75               	movwf	(itoa@base+1)& (0+255),b
 25825  00C796  0E0A               	movlw	10
 25826  00C798  6F74               	movwf	itoa@base& (0+255),b
 25827  00C79A  ECA6  F09A         	call	_itoa	;wreg free
 25828                           
 25829                           ;display.c: 48: len = strlen(tmp);
 25830  00C79E  0E83               	movlw	low __display_itoa@tmp
 25831  00C7A0  0100               	movlb	0	; () banked
 25832  00C7A2  6F60               	movwf	strlen@s& (0+255),b
 25833  00C7A4  0E00               	movlw	high __display_itoa@tmp
 25834  00C7A6  0100               	movlb	0	; () banked
 25835  00C7A8  6F61               	movwf	(strlen@s+1)& (0+255),b
 25836  00C7AA  EC5D  F09A         	call	_strlen	;wreg free
 25837  00C7AE  0100               	movlb	0	; () banked
 25838  00C7B0  5160               	movf	?_strlen& (0+255),w,b
 25839  00C7B2  0100               	movlb	0	; () banked
 25840  00C7B4  6F8D               	movwf	__display_itoa@len& (0+255),b
 25841                           
 25842                           ; BSR set to: 0
 25843                           ;display.c: 50: if(value<0)
 25844  00C7B6  0100               	movlb	0	; () banked
 25845  00C7B8  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 25846  00C7BA  D072               	goto	l19751
 25847                           
 25848                           ; BSR set to: 0
 25849                           ;display.c: 51: {
 25850                           ;display.c: 52: missing = decimals + 2 - len;
 25851  00C7BC  0100               	movlb	0	; () banked
 25852  00C7BE  518D               	movf	__display_itoa@len& (0+255),w,b
 25853  00C7C0  0800               	sublw	0
 25854  00C7C2  0100               	movlb	0	; () banked
 25855  00C7C4  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 25856  00C7C6  0F02               	addlw	2
 25857  00C7C8  0100               	movlb	0	; () banked
 25858  00C7CA  6F8E               	movwf	__display_itoa@missing& (0+255),b
 25859                           
 25860                           ;display.c: 53: if(missing>0)
 25861  00C7CC  0100               	movlb	0	; () banked
 25862  00C7CE  518E               	movf	__display_itoa@missing& (0+255),w,b
 25863  00C7D0  0A80               	xorlw	128
 25864  00C7D2  0F7F               	addlw	-129
 25865  00C7D4  A0D8               	btfss	status,0,c
 25866  00C7D6  D0C2               	goto	l1919
 25867                           
 25868                           ; BSR set to: 0
 25869                           ;display.c: 54: {
 25870                           ;display.c: 55: for(pos=decimals;pos!=0xFF;--pos)
 25871  00C7D8  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 25872  00C7DC                     l19735:
 25873                           
 25874                           ; BSR set to: 0
 25875  00C7DC  0100               	movlb	0	; () banked
 25876  00C7DE  298F               	incf	__display_itoa@pos& (0+255),w,b
 25877  00C7E0  B4D8               	btfsc	status,2,c
 25878  00C7E2  D05A               	goto	l19749
 25879                           
 25880                           ; BSR set to: 0
 25881                           ;display.c: 56: {
 25882                           ;display.c: 57: if(pos>=missing)
 25883                           
 25884                           ; BSR set to: 0
 25885                           
 25886                           ; BSR set to: 0
 25887  00C7E4  0100               	movlb	0	; () banked
 25888  00C7E6  518F               	movf	__display_itoa@pos& (0+255),w,b
 25889  00C7E8  0100               	movlb	0	; () banked
 25890  00C7EA  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 25891  00C7EC  D004               	goto	l19741
 25892  00C7EE  0AFF               	xorlw	255
 25893  00C7F0  258E               	addwf	__display_itoa@missing& (0+255),w,b
 25894  00C7F2  B0D8               	btfsc	status,0,c
 25895  00C7F4  D03A               	goto	l19743
 25896  00C7F6                     l19741:
 25897                           
 25898                           ; BSR set to: 0
 25899                           ;display.c: 58: {
 25900                           ;display.c: 59: tmp[pos+1] = tmp[pos+1-missing];
 25901  00C7F6  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 25902  00C7FA  0100               	movlb	0	; () banked
 25903  00C7FC  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25904  00C7FE  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 25905  00C800  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 25906  00C802  0100               	movlb	0	; () banked
 25907  00C804  1F7D               	comf	??__display_itoa& (0+255),f,b
 25908  00C806  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 25909  00C808  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 25910  00C80A  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 25911  00C80C  0100               	movlb	0	; () banked
 25912  00C80E  518F               	movf	__display_itoa@pos& (0+255),w,b
 25913  00C810  0100               	movlb	0	; () banked
 25914  00C812  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 25915  00C814  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 25916  00C816  0100               	movlb	0	; () banked
 25917  00C818  517D               	movf	??__display_itoa& (0+255),w,b
 25918  00C81A  0100               	movlb	0	; () banked
 25919  00C81C  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25920  00C81E  0100               	movlb	0	; () banked
 25921  00C820  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 25922  00C822  0100               	movlb	0	; () banked
 25923  00C824  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25924  00C826  0E01               	movlw	1
 25925  00C828  0100               	movlb	0	; () banked
 25926  00C82A  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25927  00C82C  0E00               	movlw	0
 25928  00C82E  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25929  00C830  0E83               	movlw	low __display_itoa@tmp
 25930  00C832  0100               	movlb	0	; () banked
 25931  00C834  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 25932  00C836  6ED9               	movwf	fsr2l,c
 25933  00C838  0E00               	movlw	high __display_itoa@tmp
 25934  00C83A  0100               	movlb	0	; () banked
 25935  00C83C  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 25936  00C83E  6EDA               	movwf	fsr2h,c
 25937  00C840  0100               	movlb	0	; () banked
 25938  00C842  518F               	movf	__display_itoa@pos& (0+255),w,b
 25939  00C844  0100               	movlb	0	; () banked
 25940  00C846  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 25941  00C848  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 25942  00C84A  0E01               	movlw	1
 25943  00C84C  0100               	movlb	0	; () banked
 25944  00C84E  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 25945  00C850  0E00               	movlw	0
 25946  00C852  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 25947  00C854  0E83               	movlw	low __display_itoa@tmp
 25948  00C856  0100               	movlb	0	; () banked
 25949  00C858  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 25950  00C85A  6EE1               	movwf	fsr1l,c
 25951  00C85C  0E00               	movlw	high __display_itoa@tmp
 25952  00C85E  0100               	movlb	0	; () banked
 25953  00C860  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 25954  00C862  6EE2               	movwf	fsr1h,c
 25955  00C864  CFDF FFE7          	movff	indf2,indf1
 25956                           
 25957                           ;display.c: 60: }
 25958  00C868  D014               	goto	l19745
 25959  00C86A                     l19743:
 25960                           
 25961                           ; BSR set to: 0
 25962                           ;display.c: 61: else
 25963                           ;display.c: 62: {
 25964                           ;display.c: 63: tmp[pos+1] = '0';
 25965  00C86A  0100               	movlb	0	; () banked
 25966  00C86C  518F               	movf	__display_itoa@pos& (0+255),w,b
 25967  00C86E  0100               	movlb	0	; () banked
 25968  00C870  6F7D               	movwf	??__display_itoa& (0+255),b
 25969  00C872  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25970  00C874  0E01               	movlw	1
 25971  00C876  0100               	movlb	0	; () banked
 25972  00C878  277D               	addwf	??__display_itoa& (0+255),f,b
 25973  00C87A  0E00               	movlw	0
 25974  00C87C  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 25975  00C87E  0E83               	movlw	low __display_itoa@tmp
 25976  00C880  0100               	movlb	0	; () banked
 25977  00C882  257D               	addwf	??__display_itoa& (0+255),w,b
 25978  00C884  6ED9               	movwf	fsr2l,c
 25979  00C886  0E00               	movlw	high __display_itoa@tmp
 25980  00C888  0100               	movlb	0	; () banked
 25981  00C88A  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 25982  00C88C  6EDA               	movwf	fsr2h,c
 25983  00C88E  0E30               	movlw	48
 25984  00C890  6EDF               	movwf	indf2,c
 25985  00C892                     l19745:
 25986                           
 25987                           ; BSR set to: 0
 25988  00C892  0100               	movlb	0	; () banked
 25989  00C894  078F               	decf	__display_itoa@pos& (0+255),f,b
 25990  00C896  D7A2               	goto	l19735
 25991  00C898                     l19749:
 25992                           
 25993                           ; BSR set to: 0
 25994                           ;display.c: 64: }
 25995                           ;display.c: 65: }
 25996                           ;display.c: 66: len = decimals + 2;
 25997  00C898  0100               	movlb	0	; () banked
 25998  00C89A  517A               	movf	__display_itoa@decimals& (0+255),w,b
 25999  00C89C  0F02               	addlw	2
 26000  00C89E  D05C               	goto	L11
 26001  00C8A0                     l19751:
 26002                           
 26003                           ; BSR set to: 0
 26004                           ;display.c: 69: else
 26005                           ;display.c: 70: {
 26006                           ;display.c: 71: missing = decimals + 1 - len;
 26007  00C8A0  0100               	movlb	0	; () banked
 26008  00C8A2  518D               	movf	__display_itoa@len& (0+255),w,b
 26009  00C8A4  0800               	sublw	0
 26010  00C8A6  0100               	movlb	0	; () banked
 26011  00C8A8  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 26012  00C8AA  0100               	movlb	0	; () banked
 26013  00C8AC  6F7D               	movwf	??__display_itoa& (0+255),b
 26014  00C8AE  0100               	movlb	0	; () banked
 26015  00C8B0  297D               	incf	??__display_itoa& (0+255),w,b
 26016  00C8B2  0100               	movlb	0	; () banked
 26017  00C8B4  6F8E               	movwf	__display_itoa@missing& (0+255),b
 26018                           
 26019                           ;display.c: 72: if(missing>0)
 26020  00C8B6  0100               	movlb	0	; () banked
 26021  00C8B8  518E               	movf	__display_itoa@missing& (0+255),w,b
 26022  00C8BA  0A80               	xorlw	128
 26023  00C8BC  0F7F               	addlw	-129
 26024  00C8BE  A0D8               	btfss	status,0,c
 26025  00C8C0  D04D               	goto	l1919
 26026                           
 26027                           ; BSR set to: 0
 26028                           ;display.c: 73: {
 26029                           ;display.c: 74: for(pos=decimals;pos!=0xFF;--pos)
 26030  00C8C2  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 26031  00C8C6                     l19755:
 26032                           
 26033                           ; BSR set to: 0
 26034  00C8C6  0100               	movlb	0	; () banked
 26035  00C8C8  298F               	incf	__display_itoa@pos& (0+255),w,b
 26036  00C8CA  B4D8               	btfsc	status,2,c
 26037  00C8CC  D043               	goto	l19769
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;display.c: 75: {
 26041                           ;display.c: 76: if(pos>=missing)
 26042                           
 26043                           ; BSR set to: 0
 26044                           
 26045                           ; BSR set to: 0
 26046  00C8CE  0100               	movlb	0	; () banked
 26047  00C8D0  518F               	movf	__display_itoa@pos& (0+255),w,b
 26048  00C8D2  0100               	movlb	0	; () banked
 26049  00C8D4  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 26050  00C8D6  D004               	goto	l19761
 26051  00C8D8  0AFF               	xorlw	255
 26052  00C8DA  258E               	addwf	__display_itoa@missing& (0+255),w,b
 26053  00C8DC  B0D8               	btfsc	status,0,c
 26054  00C8DE  D02C               	goto	l19763
 26055  00C8E0                     l19761:
 26056                           
 26057                           ; BSR set to: 0
 26058                           ;display.c: 77: {
 26059                           ;display.c: 78: tmp[pos] = tmp[pos-missing];
 26060  00C8E0  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 26061  00C8E4  0100               	movlb	0	; () banked
 26062  00C8E6  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 26063  00C8E8  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 26064  00C8EA  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 26065  00C8EC  0100               	movlb	0	; () banked
 26066  00C8EE  1F7D               	comf	??__display_itoa& (0+255),f,b
 26067  00C8F0  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 26068  00C8F2  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 26069  00C8F4  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 26070  00C8F6  0100               	movlb	0	; () banked
 26071  00C8F8  518F               	movf	__display_itoa@pos& (0+255),w,b
 26072  00C8FA  0100               	movlb	0	; () banked
 26073  00C8FC  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 26074  00C8FE  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 26075  00C900  0100               	movlb	0	; () banked
 26076  00C902  517D               	movf	??__display_itoa& (0+255),w,b
 26077  00C904  0100               	movlb	0	; () banked
 26078  00C906  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 26079  00C908  0100               	movlb	0	; () banked
 26080  00C90A  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 26081  00C90C  0100               	movlb	0	; () banked
 26082  00C90E  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 26083  00C910  0E83               	movlw	low __display_itoa@tmp
 26084  00C912  0100               	movlb	0	; () banked
 26085  00C914  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 26086  00C916  6ED9               	movwf	fsr2l,c
 26087  00C918  0E00               	movlw	high __display_itoa@tmp
 26088  00C91A  0100               	movlb	0	; () banked
 26089  00C91C  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 26090  00C91E  6EDA               	movwf	fsr2h,c
 26091  00C920  0100               	movlb	0	; () banked
 26092  00C922  518F               	movf	__display_itoa@pos& (0+255),w,b
 26093  00C924  0D01               	mullw	1
 26094  00C926  0E83               	movlw	low __display_itoa@tmp
 26095  00C928  24F3               	addwf	prodl,w,c
 26096  00C92A  6EE1               	movwf	fsr1l,c
 26097  00C92C  0E00               	movlw	high __display_itoa@tmp
 26098  00C92E  20F4               	addwfc	prodh,w,c
 26099  00C930  6EE2               	movwf	fsr1h,c
 26100  00C932  CFDF FFE7          	movff	indf2,indf1
 26101                           
 26102                           ;display.c: 79: }
 26103  00C936  D00B               	goto	l19765
 26104  00C938                     l19763:
 26105                           
 26106                           ; BSR set to: 0
 26107                           ;display.c: 80: else
 26108                           ;display.c: 81: {
 26109                           ;display.c: 82: tmp[pos] = '0';
 26110  00C938  0100               	movlb	0	; () banked
 26111  00C93A  518F               	movf	__display_itoa@pos& (0+255),w,b
 26112  00C93C  0D01               	mullw	1
 26113  00C93E  0E83               	movlw	low __display_itoa@tmp
 26114  00C940  24F3               	addwf	prodl,w,c
 26115  00C942  6ED9               	movwf	fsr2l,c
 26116  00C944  0E00               	movlw	high __display_itoa@tmp
 26117  00C946  20F4               	addwfc	prodh,w,c
 26118  00C948  6EDA               	movwf	fsr2h,c
 26119  00C94A  0E30               	movlw	48
 26120  00C94C  6EDF               	movwf	indf2,c
 26121  00C94E                     l19765:
 26122                           
 26123                           ; BSR set to: 0
 26124  00C94E  0100               	movlb	0	; () banked
 26125  00C950  078F               	decf	__display_itoa@pos& (0+255),f,b
 26126  00C952  D7B9               	goto	l19755
 26127  00C954                     l19769:
 26128                           
 26129                           ; BSR set to: 0
 26130                           ;display.c: 83: }
 26131                           ;display.c: 84: }
 26132                           ;display.c: 85: len = decimals + 1;
 26133  00C954  0100               	movlb	0	; () banked
 26134  00C956  297A               	incf	__display_itoa@decimals& (0+255),w,b
 26135  00C958                     L11:
 26136  00C958  0100               	movlb	0	; () banked
 26137  00C95A  6F8D               	movwf	__display_itoa@len& (0+255),b
 26138  00C95C                     l1919:
 26139                           
 26140                           ; BSR set to: 0
 26141                           ;display.c: 86: }
 26142                           ;display.c: 87: }
 26143                           ;display.c: 89: decimals = len - decimals - 1;
 26144  00C95C  0100               	movlb	0	; () banked
 26145  00C95E  517A               	movf	__display_itoa@decimals& (0+255),w,b
 26146  00C960  0800               	sublw	0
 26147  00C962  0100               	movlb	0	; () banked
 26148  00C964  258D               	addwf	__display_itoa@len& (0+255),w,b
 26149  00C966  0100               	movlb	0	; () banked
 26150  00C968  6F7D               	movwf	??__display_itoa& (0+255),b
 26151  00C96A  0100               	movlb	0	; () banked
 26152  00C96C  057D               	decf	??__display_itoa& (0+255),w,b
 26153  00C96E  0100               	movlb	0	; () banked
 26154  00C970  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 26155                           
 26156                           ; BSR set to: 0
 26157                           ;display.c: 91: for(pos=0;pos<len;++pos)
 26158  00C972  0E00               	movlw	0
 26159  00C974  0100               	movlb	0	; () banked
 26160  00C976  6F8F               	movwf	__display_itoa@pos& (0+255),b
 26161  00C978  D02E               	goto	l19783
 26162  00C97A                     l19773:
 26163                           
 26164                           ; BSR set to: 0
 26165                           ;display.c: 92: {
 26166                           ;display.c: 93: text[pos] = tmp[pos];
 26167  00C97A  0100               	movlb	0	; () banked
 26168  00C97C  518F               	movf	__display_itoa@pos& (0+255),w,b
 26169  00C97E  0D01               	mullw	1
 26170  00C980  0E83               	movlw	low __display_itoa@tmp
 26171  00C982  24F3               	addwf	prodl,w,c
 26172  00C984  6ED9               	movwf	fsr2l,c
 26173  00C986  0E00               	movlw	high __display_itoa@tmp
 26174  00C988  20F4               	addwfc	prodh,w,c
 26175  00C98A  6EDA               	movwf	fsr2h,c
 26176  00C98C  0100               	movlb	0	; () banked
 26177  00C98E  518F               	movf	__display_itoa@pos& (0+255),w,b
 26178  00C990  0D01               	mullw	1
 26179  00C992  50F3               	movf	prodl,w,c
 26180  00C994  0100               	movlb	0	; () banked
 26181  00C996  257B               	addwf	__display_itoa@text& (0+255),w,b
 26182  00C998  6EE1               	movwf	fsr1l,c
 26183  00C99A  50F4               	movf	prodh,w,c
 26184  00C99C  0100               	movlb	0	; () banked
 26185  00C99E  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 26186  00C9A0  6EE2               	movwf	fsr1h,c
 26187  00C9A2  CFDF FFE7          	movff	indf2,indf1
 26188                           
 26189                           ; BSR set to: 0
 26190                           ;display.c: 94: if(pos==decimals)
 26191  00C9A6  0100               	movlb	0	; () banked
 26192  00C9A8  517A               	movf	__display_itoa@decimals& (0+255),w,b
 26193  00C9AA  0100               	movlb	0	; () banked
 26194  00C9AC  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 26195  00C9AE  A4D8               	btfss	status,2,c
 26196  00C9B0  D010               	goto	l19781
 26197                           
 26198                           ; BSR set to: 0
 26199                           ;display.c: 95: {
 26200                           ;display.c: 97: ++pos;
 26201  00C9B2  0100               	movlb	0	; () banked
 26202  00C9B4  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;display.c: 98: text[pos] = '.';
 26206  00C9B6  0100               	movlb	0	; () banked
 26207  00C9B8  518F               	movf	__display_itoa@pos& (0+255),w,b
 26208  00C9BA  0D01               	mullw	1
 26209  00C9BC  50F3               	movf	prodl,w,c
 26210  00C9BE  0100               	movlb	0	; () banked
 26211  00C9C0  257B               	addwf	__display_itoa@text& (0+255),w,b
 26212  00C9C2  6ED9               	movwf	fsr2l,c
 26213  00C9C4  50F4               	movf	prodh,w,c
 26214  00C9C6  0100               	movlb	0	; () banked
 26215  00C9C8  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 26216  00C9CA  6EDA               	movwf	fsr2h,c
 26217  00C9CC  0E2E               	movlw	46
 26218  00C9CE  6EDF               	movwf	indf2,c
 26219                           
 26220                           ;display.c: 99: break;
 26221  00C9D0  D02A               	goto	l19789
 26222  00C9D2                     l19781:
 26223                           
 26224                           ; BSR set to: 0
 26225  00C9D2  0100               	movlb	0	; () banked
 26226  00C9D4  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 26227  00C9D6                     l19783:
 26228                           
 26229                           ; BSR set to: 0
 26230  00C9D6  0100               	movlb	0	; () banked
 26231  00C9D8  518D               	movf	__display_itoa@len& (0+255),w,b
 26232  00C9DA  0100               	movlb	0	; () banked
 26233  00C9DC  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 26234  00C9DE  B0D8               	btfsc	status,0,c
 26235  00C9E0  D022               	goto	l19789
 26236  00C9E2  D7CB               	goto	l19773
 26237  00C9E4                     l19785:
 26238                           
 26239                           ; BSR set to: 0
 26240                           ;display.c: 103: {
 26241                           ;display.c: 104: text[pos+1] = tmp[pos];
 26242  00C9E4  0100               	movlb	0	; () banked
 26243  00C9E6  518F               	movf	__display_itoa@pos& (0+255),w,b
 26244  00C9E8  0D01               	mullw	1
 26245  00C9EA  0E83               	movlw	low __display_itoa@tmp
 26246  00C9EC  24F3               	addwf	prodl,w,c
 26247  00C9EE  6ED9               	movwf	fsr2l,c
 26248  00C9F0  0E00               	movlw	high __display_itoa@tmp
 26249  00C9F2  20F4               	addwfc	prodh,w,c
 26250  00C9F4  6EDA               	movwf	fsr2h,c
 26251  00C9F6  0100               	movlb	0	; () banked
 26252  00C9F8  518F               	movf	__display_itoa@pos& (0+255),w,b
 26253  00C9FA  0100               	movlb	0	; () banked
 26254  00C9FC  6F7D               	movwf	??__display_itoa& (0+255),b
 26255  00C9FE  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 26256  00CA00  0E01               	movlw	1
 26257  00CA02  0100               	movlb	0	; () banked
 26258  00CA04  277D               	addwf	??__display_itoa& (0+255),f,b
 26259  00CA06  0E00               	movlw	0
 26260  00CA08  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 26261  00CA0A  0100               	movlb	0	; () banked
 26262  00CA0C  517D               	movf	??__display_itoa& (0+255),w,b
 26263  00CA0E  0100               	movlb	0	; () banked
 26264  00CA10  257B               	addwf	__display_itoa@text& (0+255),w,b
 26265  00CA12  6EE1               	movwf	fsr1l,c
 26266  00CA14  0100               	movlb	0	; () banked
 26267  00CA16  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 26268  00CA18  0100               	movlb	0	; () banked
 26269  00CA1A  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 26270  00CA1C  6EE2               	movwf	fsr1h,c
 26271  00CA1E  CFDF FFE7          	movff	indf2,indf1
 26272                           
 26273                           ; BSR set to: 0
 26274  00CA22  0100               	movlb	0	; () banked
 26275  00CA24  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 26276  00CA26                     l19789:
 26277                           
 26278                           ; BSR set to: 0
 26279  00CA26  0100               	movlb	0	; () banked
 26280  00CA28  518D               	movf	__display_itoa@len& (0+255),w,b
 26281  00CA2A  0100               	movlb	0	; () banked
 26282  00CA2C  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 26283  00CA2E  B0D8               	btfsc	status,0,c
 26284  00CA30  0012               	return	
 26285  00CA32  D7D8               	goto	l19785
 26286  00CA34                     __end_of__display_itoa:
 26287                           	opt stack 0
 26288                           tblptru	equ	0xFF8
 26289                           tblptrh	equ	0xFF7
 26290                           tblptrl	equ	0xFF6
 26291                           tablat	equ	0xFF5
 26292                           prodh	equ	0xFF4
 26293                           prodl	equ	0xFF3
 26294                           intcon	equ	0xFF2
 26295                           intcon2	equ	0xFF1
 26296                           intcon3	equ	0xFF0
 26297                           postinc0	equ	0xFEE
 26298                           wreg	equ	0xFE8
 26299                           indf1	equ	0xFE7
 26300                           postinc1	equ	0xFE6
 26301                           postdec1	equ	0xFE5
 26302                           plusw1	equ	0xFE3
 26303                           fsr1h	equ	0xFE2
 26304                           fsr1l	equ	0xFE1
 26305                           indf2	equ	0xFDF
 26306                           postinc2	equ	0xFDE
 26307                           postdec2	equ	0xFDD
 26308                           plusw2	equ	0xFDB
 26309                           fsr2h	equ	0xFDA
 26310                           fsr2l	equ	0xFD9
 26311                           status	equ	0xFD8
 26312                           
 26313 ;; *************** function _strlen *****************
 26314 ;; Defined at:
 26315 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
 26316 ;; Parameters:    Size  Location     Type
 26317 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 26318 ;;		 -> _display_itoa@tmp(10), 
 26319 ;; Auto vars:     Size  Location     Type
 26320 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 26321 ;;		 -> _display_itoa@tmp(10), 
 26322 ;; Return value:  Size  Location     Type
 26323 ;;                  2    0[BANK0 ] unsigned int 
 26324 ;; Registers used:
 26325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26326 ;; Tracked objects:
 26327 ;;		On entry : 0/0
 26328 ;;		On exit  : 0/0
 26329 ;;		Unchanged: 0/0
 26330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26332 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26333 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26334 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26335 ;;Total ram usage:        6 bytes
 26336 ;; Hardware stack levels used:    1
 26337 ;; Hardware stack levels required when called:   10
 26338 ;; This function calls:
 26339 ;;		Nothing
 26340 ;; This function is called by:
 26341 ;;		__display_itoa
 26342 ;; This function uses a non-reentrant model
 26343 ;;
 26344                           
 26345                           	psect	text112
 26346  0134BA                     __ptext112:
 26347                           	opt stack 0
 26348  0134BA                     _strlen:
 26349                           	opt stack 17
 26350                           
 26351                           ; BSR set to: 0
 26352                           ;incstack = 0
 26353  0134BA  C060  F064         	movff	strlen@s,strlen@cp
 26354  0134BE  C061  F065         	movff	strlen@s+1,strlen@cp+1
 26355  0134C2  D003               	goto	l19125
 26356  0134C4                     l19123:
 26357  0134C4  0100               	movlb	0	; () banked
 26358  0134C6  4B64               	infsnz	strlen@cp& (0+255),f,b
 26359  0134C8  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 26360  0134CA                     l19125:
 26361  0134CA  C064  FFD9         	movff	strlen@cp,fsr2l
 26362  0134CE  C065  FFDA         	movff	strlen@cp+1,fsr2h
 26363  0134D2  50DF               	movf	indf2,w,c
 26364  0134D4  A4D8               	btfss	status,2,c
 26365  0134D6  D7F6               	goto	l19123
 26366  0134D8  C060  F062         	movff	strlen@s,??_strlen
 26367  0134DC  C061  F063         	movff	strlen@s+1,??_strlen+1
 26368  0134E0  0100               	movlb	0	; () banked
 26369  0134E2  1F62               	comf	??_strlen& (0+255),f,b
 26370  0134E4  1F63               	comf	(??_strlen+1)& (0+255),f,b
 26371  0134E6  4B62               	infsnz	??_strlen& (0+255),f,b
 26372  0134E8  2B63               	incf	(??_strlen+1)& (0+255),f,b
 26373  0134EA  0100               	movlb	0	; () banked
 26374  0134EC  5164               	movf	strlen@cp& (0+255),w,b
 26375  0134EE  0100               	movlb	0	; () banked
 26376  0134F0  2562               	addwf	??_strlen& (0+255),w,b
 26377  0134F2  0100               	movlb	0	; () banked
 26378  0134F4  6F60               	movwf	?_strlen& (0+255),b
 26379  0134F6  0100               	movlb	0	; () banked
 26380  0134F8  5165               	movf	(strlen@cp+1)& (0+255),w,b
 26381  0134FA  0100               	movlb	0	; () banked
 26382  0134FC  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 26383  0134FE  0100               	movlb	0	; () banked
 26384  013500  6F61               	movwf	(?_strlen+1)& (0+255),b
 26385  013502  0012               	return	
 26386  013504                     __end_of_strlen:
 26387                           	opt stack 0
 26388                           tblptru	equ	0xFF8
 26389                           tblptrh	equ	0xFF7
 26390                           tblptrl	equ	0xFF6
 26391                           tablat	equ	0xFF5
 26392                           prodh	equ	0xFF4
 26393                           prodl	equ	0xFF3
 26394                           intcon	equ	0xFF2
 26395                           intcon2	equ	0xFF1
 26396                           intcon3	equ	0xFF0
 26397                           postinc0	equ	0xFEE
 26398                           wreg	equ	0xFE8
 26399                           indf1	equ	0xFE7
 26400                           postinc1	equ	0xFE6
 26401                           postdec1	equ	0xFE5
 26402                           plusw1	equ	0xFE3
 26403                           fsr1h	equ	0xFE2
 26404                           fsr1l	equ	0xFE1
 26405                           indf2	equ	0xFDF
 26406                           postinc2	equ	0xFDE
 26407                           postdec2	equ	0xFDD
 26408                           plusw2	equ	0xFDB
 26409                           fsr2h	equ	0xFDA
 26410                           fsr2l	equ	0xFD9
 26411                           status	equ	0xFD8
 26412                           
 26413 ;; *************** function _itoa *****************
 26414 ;; Defined at:
 26415 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 26416 ;; Parameters:    Size  Location     Type
 26417 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 26418 ;;		 -> _display_itoa@tmp(10), 
 26419 ;;  val             2   18[BANK0 ] int 
 26420 ;;  base            2   20[BANK0 ] int 
 26421 ;; Auto vars:     Size  Location     Type
 26422 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 26423 ;;		 -> _display_itoa@tmp(10), 
 26424 ;; Return value:  Size  Location     Type
 26425 ;;                  2   16[BANK0 ] PTR unsigned char 
 26426 ;; Registers used:
 26427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26428 ;; Tracked objects:
 26429 ;;		On entry : 0/0
 26430 ;;		On exit  : 0/0
 26431 ;;		Unchanged: 0/0
 26432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26433 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26434 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26436 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26437 ;;Total ram usage:        8 bytes
 26438 ;; Hardware stack levels used:    1
 26439 ;; Hardware stack levels required when called:   12
 26440 ;; This function calls:
 26441 ;;		_utoa
 26442 ;; This function is called by:
 26443 ;;		__display_itoa
 26444 ;; This function uses a non-reentrant model
 26445 ;;
 26446                           
 26447                           	psect	text113
 26448  01354C                     __ptext113:
 26449                           	opt stack 0
 26450  01354C                     _itoa:
 26451                           	opt stack 15
 26452                           
 26453                           ; BSR set to: 0
 26454                           ;incstack = 0
 26455  01354C  C070  F076         	movff	itoa@buf,itoa@cp
 26456  013550  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 26457  013554  0100               	movlb	0	; () banked
 26458  013556  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 26459  013558  D00E               	goto	l19117
 26460                           
 26461                           ; BSR set to: 0
 26462  01355A  C070  FFD9         	movff	itoa@buf,fsr2l
 26463  01355E  C071  FFDA         	movff	itoa@buf+1,fsr2h
 26464  013562  0E2D               	movlw	45
 26465  013564  6EDF               	movwf	indf2,c
 26466                           
 26467                           ; BSR set to: 0
 26468  013566  0100               	movlb	0	; () banked
 26469  013568  4B70               	infsnz	itoa@buf& (0+255),f,b
 26470  01356A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 26471                           
 26472                           ; BSR set to: 0
 26473  01356C  0100               	movlb	0	; () banked
 26474  01356E  6D72               	negf	itoa@val& (0+255),b
 26475  013570  1F73               	comf	(itoa@val+1)& (0+255),f,b
 26476  013572  B0D8               	btfsc	status,0,c
 26477  013574  2B73               	incf	(itoa@val+1)& (0+255),f,b
 26478  013576                     l19117:
 26479                           
 26480                           ; BSR set to: 0
 26481  013576  C070  F067         	movff	itoa@buf,utoa@buf
 26482  01357A  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 26483  01357E  C072  F069         	movff	itoa@val,utoa@val
 26484  013582  C073  F06A         	movff	itoa@val+1,utoa@val+1
 26485  013586  C074  F06B         	movff	itoa@base,utoa@base
 26486  01358A  C075  F06C         	movff	itoa@base+1,utoa@base+1
 26487  01358E  ECBB  F087         	call	_utoa	;wreg free
 26488  013592  0012               	return	
 26489  013594                     __end_of_itoa:
 26490                           	opt stack 0
 26491                           tblptru	equ	0xFF8
 26492                           tblptrh	equ	0xFF7
 26493                           tblptrl	equ	0xFF6
 26494                           tablat	equ	0xFF5
 26495                           prodh	equ	0xFF4
 26496                           prodl	equ	0xFF3
 26497                           intcon	equ	0xFF2
 26498                           intcon2	equ	0xFF1
 26499                           intcon3	equ	0xFF0
 26500                           postinc0	equ	0xFEE
 26501                           wreg	equ	0xFE8
 26502                           indf1	equ	0xFE7
 26503                           postinc1	equ	0xFE6
 26504                           postdec1	equ	0xFE5
 26505                           plusw1	equ	0xFE3
 26506                           fsr1h	equ	0xFE2
 26507                           fsr1l	equ	0xFE1
 26508                           indf2	equ	0xFDF
 26509                           postinc2	equ	0xFDE
 26510                           postdec2	equ	0xFDD
 26511                           plusw2	equ	0xFDB
 26512                           fsr2h	equ	0xFDA
 26513                           fsr2l	equ	0xFD9
 26514                           status	equ	0xFD8
 26515                           
 26516 ;; *************** function _utoa *****************
 26517 ;; Defined at:
 26518 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 26519 ;; Parameters:    Size  Location     Type
 26520 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 26521 ;;		 -> _display_itoa@tmp(10), 
 26522 ;;  val             2    9[BANK0 ] unsigned int 
 26523 ;;  base            2   11[BANK0 ] int 
 26524 ;; Auto vars:     Size  Location     Type
 26525 ;;  v               2   13[BANK0 ] unsigned int 
 26526 ;;  c               1   15[BANK0 ] unsigned char 
 26527 ;; Return value:  Size  Location     Type
 26528 ;;                  2    7[BANK0 ] PTR unsigned char 
 26529 ;; Registers used:
 26530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26531 ;; Tracked objects:
 26532 ;;		On entry : 0/0
 26533 ;;		On exit  : 0/0
 26534 ;;		Unchanged: 0/0
 26535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26536 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26537 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26539 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26540 ;;Total ram usage:        9 bytes
 26541 ;; Hardware stack levels used:    1
 26542 ;; Hardware stack levels required when called:   11
 26543 ;; This function calls:
 26544 ;;		___lwdiv
 26545 ;;		___lwmod
 26546 ;; This function is called by:
 26547 ;;		_itoa
 26548 ;; This function uses a non-reentrant model
 26549 ;;
 26550                           
 26551                           	psect	text114
 26552  010F76                     __ptext114:
 26553                           	opt stack 0
 26554  010F76                     _utoa:
 26555                           	opt stack 15
 26556                           
 26557                           ;incstack = 0
 26558  010F76  C069  F06D         	movff	utoa@val,utoa@v
 26559  010F7A  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 26560  010F7E                     l18905:
 26561  010F7E  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 26562  010F82  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 26563  010F86  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 26564  010F8A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 26565  010F8E  EC4B  F092         	call	___lwdiv	;wreg free
 26566  010F92  C060  F06D         	movff	?___lwdiv,utoa@v
 26567  010F96  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 26568  010F9A  0100               	movlb	0	; () banked
 26569  010F9C  4B67               	infsnz	utoa@buf& (0+255),f,b
 26570  010F9E  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 26571                           
 26572                           ; BSR set to: 0
 26573  010FA0  0100               	movlb	0	; () banked
 26574  010FA2  516D               	movf	utoa@v& (0+255),w,b
 26575  010FA4  0100               	movlb	0	; () banked
 26576  010FA6  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 26577  010FA8  A4D8               	btfss	status,2,c
 26578  010FAA  D7E9               	goto	l18905
 26579                           
 26580                           ; BSR set to: 0
 26581                           
 26582                           ; BSR set to: 0
 26583  010FAC  C067  FFD9         	movff	utoa@buf,fsr2l
 26584  010FB0  C068  FFDA         	movff	utoa@buf+1,fsr2h
 26585  010FB4  0E00               	movlw	0
 26586  010FB6  6EDF               	movwf	indf2,c
 26587                           
 26588                           ; BSR set to: 0
 26589  010FB8  0100               	movlb	0	; () banked
 26590  010FBA  0767               	decf	utoa@buf& (0+255),f,b
 26591  010FBC  A0D8               	btfss	status,0,c
 26592  010FBE  0768               	decf	(utoa@buf+1)& (0+255),f,b
 26593  010FC0                     l18915:
 26594                           
 26595                           ; BSR set to: 0
 26596  010FC0  C069  F060         	movff	utoa@val,___lwmod@dividend
 26597  010FC4  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 26598  010FC8  C06B  F062         	movff	utoa@base,___lwmod@divisor
 26599  010FCC  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 26600  010FD0  EC8B  F096         	call	___lwmod	;wreg free
 26601  010FD4  0100               	movlb	0	; () banked
 26602  010FD6  5160               	movf	?___lwmod& (0+255),w,b
 26603  010FD8  0100               	movlb	0	; () banked
 26604  010FDA  6F6F               	movwf	utoa@c& (0+255),b
 26605                           
 26606                           ; BSR set to: 0
 26607  010FDC  C069  F060         	movff	utoa@val,___lwdiv@dividend
 26608  010FE0  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 26609  010FE4  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 26610  010FE8  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 26611  010FEC  EC4B  F092         	call	___lwdiv	;wreg free
 26612  010FF0  C060  F069         	movff	?___lwdiv,utoa@val
 26613  010FF4  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 26614  010FF8  0E09               	movlw	9
 26615  010FFA  0100               	movlb	0	; () banked
 26616  010FFC  656F               	cpfsgt	utoa@c& (0+255),b
 26617  010FFE  D003               	goto	l3654
 26618                           
 26619                           ; BSR set to: 0
 26620  011000  0E07               	movlw	7
 26621  011002  0100               	movlb	0	; () banked
 26622  011004  276F               	addwf	utoa@c& (0+255),f,b
 26623  011006                     l3654:
 26624                           
 26625                           ; BSR set to: 0
 26626  011006  0E30               	movlw	48
 26627  011008  0100               	movlb	0	; () banked
 26628  01100A  276F               	addwf	utoa@c& (0+255),f,b
 26629                           
 26630                           ; BSR set to: 0
 26631  01100C  C067  FFD9         	movff	utoa@buf,fsr2l
 26632  011010  C068  FFDA         	movff	utoa@buf+1,fsr2h
 26633  011014  C06F  FFDF         	movff	utoa@c,indf2
 26634                           
 26635                           ; BSR set to: 0
 26636  011018  0100               	movlb	0	; () banked
 26637  01101A  0767               	decf	utoa@buf& (0+255),f,b
 26638  01101C  A0D8               	btfss	status,0,c
 26639  01101E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 26640                           
 26641                           ; BSR set to: 0
 26642  011020  0100               	movlb	0	; () banked
 26643  011022  5169               	movf	utoa@val& (0+255),w,b
 26644  011024  0100               	movlb	0	; () banked
 26645  011026  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 26646  011028  A4D8               	btfss	status,2,c
 26647  01102A  D7CA               	goto	l18915
 26648                           
 26649                           ; BSR set to: 0
 26650                           ;	Return value of _utoa is never used
 26651                           
 26652                           ; BSR set to: 0
 26653  01102C  0100               	movlb	0	; () banked
 26654  01102E  4B67               	infsnz	utoa@buf& (0+255),f,b
 26655  011030  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 26656  011032  0012               	return	
 26657  011034                     __end_of_utoa:
 26658                           	opt stack 0
 26659                           tblptru	equ	0xFF8
 26660                           tblptrh	equ	0xFF7
 26661                           tblptrl	equ	0xFF6
 26662                           tablat	equ	0xFF5
 26663                           prodh	equ	0xFF4
 26664                           prodl	equ	0xFF3
 26665                           intcon	equ	0xFF2
 26666                           intcon2	equ	0xFF1
 26667                           intcon3	equ	0xFF0
 26668                           postinc0	equ	0xFEE
 26669                           wreg	equ	0xFE8
 26670                           indf1	equ	0xFE7
 26671                           postinc1	equ	0xFE6
 26672                           postdec1	equ	0xFE5
 26673                           plusw1	equ	0xFE3
 26674                           fsr1h	equ	0xFE2
 26675                           fsr1l	equ	0xFE1
 26676                           indf2	equ	0xFDF
 26677                           postinc2	equ	0xFDE
 26678                           postdec2	equ	0xFDD
 26679                           plusw2	equ	0xFDB
 26680                           fsr2h	equ	0xFDA
 26681                           fsr2l	equ	0xFD9
 26682                           status	equ	0xFD8
 26683                           
 26684 ;; *************** function ___lwmod *****************
 26685 ;; Defined at:
 26686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
 26687 ;; Parameters:    Size  Location     Type
 26688 ;;  dividend        2    0[BANK0 ] unsigned int 
 26689 ;;  divisor         2    2[BANK0 ] unsigned int 
 26690 ;; Auto vars:     Size  Location     Type
 26691 ;;  counter         1    4[BANK0 ] unsigned char 
 26692 ;; Return value:  Size  Location     Type
 26693 ;;                  2    0[BANK0 ] unsigned int 
 26694 ;; Registers used:
 26695 ;;		wreg, status,2, status,0
 26696 ;; Tracked objects:
 26697 ;;		On entry : 0/0
 26698 ;;		On exit  : 0/0
 26699 ;;		Unchanged: 0/0
 26700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26701 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26704 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26705 ;;Total ram usage:        5 bytes
 26706 ;; Hardware stack levels used:    1
 26707 ;; Hardware stack levels required when called:   10
 26708 ;; This function calls:
 26709 ;;		Nothing
 26710 ;; This function is called by:
 26711 ;;		_utoa
 26712 ;; This function uses a non-reentrant model
 26713 ;;
 26714                           
 26715                           	psect	text115
 26716  012D16                     __ptext115:
 26717                           	opt stack 0
 26718  012D16                     ___lwmod:
 26719                           	opt stack 15
 26720                           
 26721                           ; BSR set to: 0
 26722                           ;incstack = 0
 26723  012D16  0100               	movlb	0	; () banked
 26724  012D18  5162               	movf	___lwmod@divisor& (0+255),w,b
 26725  012D1A  0100               	movlb	0	; () banked
 26726  012D1C  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 26727  012D1E  B4D8               	btfsc	status,2,c
 26728  012D20  D026               	goto	l3743
 26729                           
 26730                           ; BSR set to: 0
 26731  012D22  0E01               	movlw	1
 26732  012D24  0100               	movlb	0	; () banked
 26733  012D26  6F64               	movwf	___lwmod@counter& (0+255),b
 26734  012D28  D006               	goto	l18449
 26735  012D2A                     l18447:
 26736                           
 26737                           ; BSR set to: 0
 26738  012D2A  0100               	movlb	0	; () banked
 26739  012D2C  90D8               	bcf	status,0,c
 26740  012D2E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 26741  012D30  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 26742  012D32  0100               	movlb	0	; () banked
 26743  012D34  2B64               	incf	___lwmod@counter& (0+255),f,b
 26744  012D36                     l18449:
 26745                           
 26746                           ; BSR set to: 0
 26747  012D36  0100               	movlb	0	; () banked
 26748  012D38  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 26749  012D3A  D7F7               	goto	l18447
 26750  012D3C                     l18451:
 26751                           
 26752                           ; BSR set to: 0
 26753  012D3C  0100               	movlb	0	; () banked
 26754  012D3E  5162               	movf	___lwmod@divisor& (0+255),w,b
 26755  012D40  0100               	movlb	0	; () banked
 26756  012D42  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 26757  012D44  0100               	movlb	0	; () banked
 26758  012D46  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 26759  012D48  0100               	movlb	0	; () banked
 26760  012D4A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 26761  012D4C  A0D8               	btfss	status,0,c
 26762  012D4E  D008               	goto	l18455
 26763                           
 26764                           ; BSR set to: 0
 26765  012D50  0100               	movlb	0	; () banked
 26766  012D52  5162               	movf	___lwmod@divisor& (0+255),w,b
 26767  012D54  0100               	movlb	0	; () banked
 26768  012D56  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 26769  012D58  0100               	movlb	0	; () banked
 26770  012D5A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 26771  012D5C  0100               	movlb	0	; () banked
 26772  012D5E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 26773  012D60                     l18455:
 26774                           
 26775                           ; BSR set to: 0
 26776  012D60  0100               	movlb	0	; () banked
 26777  012D62  90D8               	bcf	status,0,c
 26778  012D64  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 26779  012D66  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 26780                           
 26781                           ; BSR set to: 0
 26782  012D68  0100               	movlb	0	; () banked
 26783  012D6A  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 26784  012D6C  D7E7               	goto	l18451
 26785  012D6E                     l3743:
 26786                           
 26787                           ; BSR set to: 0
 26788  012D6E  C060  F060         	movff	___lwmod@dividend,?___lwmod
 26789  012D72  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 26790                           
 26791                           ; BSR set to: 0
 26792  012D76  0012               	return		;funcret
 26793  012D78                     __end_of___lwmod:
 26794                           	opt stack 0
 26795                           tblptru	equ	0xFF8
 26796                           tblptrh	equ	0xFF7
 26797                           tblptrl	equ	0xFF6
 26798                           tablat	equ	0xFF5
 26799                           prodh	equ	0xFF4
 26800                           prodl	equ	0xFF3
 26801                           intcon	equ	0xFF2
 26802                           intcon2	equ	0xFF1
 26803                           intcon3	equ	0xFF0
 26804                           postinc0	equ	0xFEE
 26805                           wreg	equ	0xFE8
 26806                           indf1	equ	0xFE7
 26807                           postinc1	equ	0xFE6
 26808                           postdec1	equ	0xFE5
 26809                           plusw1	equ	0xFE3
 26810                           fsr1h	equ	0xFE2
 26811                           fsr1l	equ	0xFE1
 26812                           indf2	equ	0xFDF
 26813                           postinc2	equ	0xFDE
 26814                           postdec2	equ	0xFDD
 26815                           plusw2	equ	0xFDB
 26816                           fsr2h	equ	0xFDA
 26817                           fsr2l	equ	0xFD9
 26818                           status	equ	0xFD8
 26819                           
 26820 ;; *************** function ___lwdiv *****************
 26821 ;; Defined at:
 26822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
 26823 ;; Parameters:    Size  Location     Type
 26824 ;;  dividend        2    0[BANK0 ] unsigned int 
 26825 ;;  divisor         2    2[BANK0 ] unsigned int 
 26826 ;; Auto vars:     Size  Location     Type
 26827 ;;  quotient        2    5[BANK0 ] unsigned int 
 26828 ;;  counter         1    4[BANK0 ] unsigned char 
 26829 ;; Return value:  Size  Location     Type
 26830 ;;                  2    0[BANK0 ] unsigned int 
 26831 ;; Registers used:
 26832 ;;		wreg, status,2, status,0
 26833 ;; Tracked objects:
 26834 ;;		On entry : 0/0
 26835 ;;		On exit  : 0/0
 26836 ;;		Unchanged: 0/0
 26837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26839 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26841 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26842 ;;Total ram usage:        7 bytes
 26843 ;; Hardware stack levels used:    1
 26844 ;; Hardware stack levels required when called:   10
 26845 ;; This function calls:
 26846 ;;		Nothing
 26847 ;; This function is called by:
 26848 ;;		_utoa
 26849 ;; This function uses a non-reentrant model
 26850 ;;
 26851                           
 26852                           	psect	text116
 26853  012496                     __ptext116:
 26854                           	opt stack 0
 26855  012496                     ___lwdiv:
 26856                           	opt stack 15
 26857                           
 26858                           ; BSR set to: 0
 26859                           ;incstack = 0
 26860  012496  0E00               	movlw	0
 26861  012498  0100               	movlb	0	; () banked
 26862  01249A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 26863  01249C  0E00               	movlw	0
 26864  01249E  6F65               	movwf	___lwdiv@quotient& (0+255),b
 26865                           
 26866                           ; BSR set to: 0
 26867  0124A0  0100               	movlb	0	; () banked
 26868  0124A2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26869  0124A4  0100               	movlb	0	; () banked
 26870  0124A6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 26871  0124A8  B4D8               	btfsc	status,2,c
 26872  0124AA  D02C               	goto	l3733
 26873                           
 26874                           ; BSR set to: 0
 26875  0124AC  0E01               	movlw	1
 26876  0124AE  0100               	movlb	0	; () banked
 26877  0124B0  6F64               	movwf	___lwdiv@counter& (0+255),b
 26878  0124B2  D006               	goto	l18429
 26879  0124B4                     l18427:
 26880                           
 26881                           ; BSR set to: 0
 26882  0124B4  0100               	movlb	0	; () banked
 26883  0124B6  90D8               	bcf	status,0,c
 26884  0124B8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 26885  0124BA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 26886  0124BC  0100               	movlb	0	; () banked
 26887  0124BE  2B64               	incf	___lwdiv@counter& (0+255),f,b
 26888  0124C0                     l18429:
 26889                           
 26890                           ; BSR set to: 0
 26891  0124C0  0100               	movlb	0	; () banked
 26892  0124C2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 26893  0124C4  D7F7               	goto	l18427
 26894  0124C6                     l18431:
 26895                           
 26896                           ; BSR set to: 0
 26897  0124C6  0100               	movlb	0	; () banked
 26898  0124C8  90D8               	bcf	status,0,c
 26899  0124CA  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 26900  0124CC  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 26901                           
 26902                           ; BSR set to: 0
 26903  0124CE  0100               	movlb	0	; () banked
 26904  0124D0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26905  0124D2  0100               	movlb	0	; () banked
 26906  0124D4  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 26907  0124D6  0100               	movlb	0	; () banked
 26908  0124D8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 26909  0124DA  0100               	movlb	0	; () banked
 26910  0124DC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 26911  0124DE  A0D8               	btfss	status,0,c
 26912  0124E0  D00A               	goto	l18439
 26913                           
 26914                           ; BSR set to: 0
 26915  0124E2  0100               	movlb	0	; () banked
 26916  0124E4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26917  0124E6  0100               	movlb	0	; () banked
 26918  0124E8  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 26919  0124EA  0100               	movlb	0	; () banked
 26920  0124EC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 26921  0124EE  0100               	movlb	0	; () banked
 26922  0124F0  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 26923                           
 26924                           ; BSR set to: 0
 26925  0124F2  0100               	movlb	0	; () banked
 26926  0124F4  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 26927  0124F6                     l18439:
 26928                           
 26929                           ; BSR set to: 0
 26930  0124F6  0100               	movlb	0	; () banked
 26931  0124F8  90D8               	bcf	status,0,c
 26932  0124FA  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 26933  0124FC  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 26934                           
 26935                           ; BSR set to: 0
 26936  0124FE  0100               	movlb	0	; () banked
 26937  012500  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 26938  012502  D7E1               	goto	l18431
 26939  012504                     l3733:
 26940                           
 26941                           ; BSR set to: 0
 26942  012504  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 26943  012508  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 26944                           
 26945                           ; BSR set to: 0
 26946  01250C  0012               	return		;funcret
 26947  01250E                     __end_of___lwdiv:
 26948                           	opt stack 0
 26949                           tblptru	equ	0xFF8
 26950                           tblptrh	equ	0xFF7
 26951                           tblptrl	equ	0xFF6
 26952                           tablat	equ	0xFF5
 26953                           prodh	equ	0xFF4
 26954                           prodl	equ	0xFF3
 26955                           intcon	equ	0xFF2
 26956                           intcon2	equ	0xFF1
 26957                           intcon3	equ	0xFF0
 26958                           postinc0	equ	0xFEE
 26959                           wreg	equ	0xFE8
 26960                           indf1	equ	0xFE7
 26961                           postinc1	equ	0xFE6
 26962                           postdec1	equ	0xFE5
 26963                           plusw1	equ	0xFE3
 26964                           fsr1h	equ	0xFE2
 26965                           fsr1l	equ	0xFE1
 26966                           indf2	equ	0xFDF
 26967                           postinc2	equ	0xFDE
 26968                           postdec2	equ	0xFDD
 26969                           plusw2	equ	0xFDB
 26970                           fsr2h	equ	0xFDA
 26971                           fsr2l	equ	0xFD9
 26972                           status	equ	0xFD8
 26973                           
 26974 ;; *************** function _buck_operate *****************
 26975 ;; Defined at:
 26976 ;;		line 550 in file "buck.c"
 26977 ;; Parameters:    Size  Location     Type
 26978 ;;		None
 26979 ;; Auto vars:     Size  Location     Type
 26980 ;;		None
 26981 ;; Return value:  Size  Location     Type
 26982 ;;                  1    wreg      void 
 26983 ;; Registers used:
 26984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26985 ;; Tracked objects:
 26986 ;;		On entry : 0/0
 26987 ;;		On exit  : 0/0
 26988 ;;		Unchanged: 0/0
 26989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26994 ;;Total ram usage:        0 bytes
 26995 ;; Hardware stack levels used:    1
 26996 ;; Hardware stack levels required when called:   14
 26997 ;; This function calls:
 26998 ;;		__buck_operate_local
 26999 ;;		__buck_operate_remote
 27000 ;; This function is called by:
 27001 ;;		_main
 27002 ;; This function uses a non-reentrant model
 27003 ;;
 27004                           
 27005                           	psect	text117
 27006  012EFC                     __ptext117:
 27007                           	opt stack 0
 27008  012EFC                     _buck_operate:
 27009                           	opt stack 16
 27010                           
 27011                           ;buck.c: 553: if(buck_remote_enable)
 27012                           
 27013                           ; BSR set to: 0
 27014                           ;incstack = 0
 27015  012EFC  0101               	movlb	1	; () banked
 27016  012EFE  51F1               	movf	_buck_remote_enable& (0+255),w,b
 27017  012F00  B4D8               	btfsc	status,2,c
 27018  012F02  D023               	goto	l22747
 27019                           
 27020                           ; BSR set to: 1
 27021                           ;buck.c: 554: {
 27022                           ;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 27023  012F04  0E80               	movlw	128
 27024  012F06  601C               	cpfslt	_buck_status,c
 27025  012F08  D01D               	goto	l22745
 27026  012F0A  D00E               	goto	l22741
 27027  012F0C                     l22733:
 27028                           
 27029                           ;buck.c: 563: buck_remote_on = 0;
 27030  012F0C  0E00               	movlw	0
 27031  012F0E  D001               	goto	L12
 27032  012F10                     l22735:
 27033                           
 27034                           ;buck.c: 567: buck_remote_on = 1;
 27035  012F10  0E01               	movlw	1
 27036  012F12                     L12:
 27037  012F12  0100               	movlb	0	; () banked
 27038  012F14  6FE3               	movwf	_buck_remote_on& (0+255),b
 27039                           
 27040                           ;buck.c: 568: buck_remote_synchronous = 0;
 27041  012F16  0E00               	movlw	0
 27042  012F18  D004               	goto	L13
 27043  012F1A                     l22737:
 27044                           
 27045                           ;buck.c: 571: buck_remote_on = 1;
 27046  012F1A  0E01               	movlw	1
 27047  012F1C  0100               	movlb	0	; () banked
 27048  012F1E  6FE3               	movwf	_buck_remote_on& (0+255),b
 27049                           
 27050                           ;buck.c: 572: buck_remote_synchronous = 1;
 27051  012F20  0E01               	movlw	1
 27052  012F22                     L13:
 27053  012F22  0100               	movlb	0	; () banked
 27054  012F24  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 27055                           
 27056                           ; BSR set to: 0
 27057                           ;buck.c: 574: }
 27058                           
 27059                           ;buck.c: 573: break;
 27060  012F26  D00A               	goto	l2606
 27061  012F28                     l22741:
 27062  012F28  501C               	movf	_buck_status,w,c
 27063                           
 27064                           ; Switch size 1, requested type "space"
 27065                           ; Number of cases is 3, Range of values is 0 to 3
 27066                           ; switch strategies available:
 27067                           ; Name         Instructions Cycles
 27068                           ; simple_byte           10     6 (average)
 27069                           ;	Chosen strategy is simple_byte
 27070  012F2A  0A00               	xorlw	0	; case 0
 27071  012F2C  B4D8               	btfsc	status,2,c
 27072  012F2E  D7EE               	goto	l22733
 27073  012F30  0A02               	xorlw	2	; case 2
 27074  012F32  B4D8               	btfsc	status,2,c
 27075  012F34  D7ED               	goto	l22735
 27076  012F36  0A01               	xorlw	1	; case 3
 27077  012F38  B4D8               	btfsc	status,2,c
 27078  012F3A  D7EF               	goto	l22737
 27079  012F3C                     l2606:
 27080                           
 27081                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 27082  012F3C  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 27083                           
 27084                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 27085  012F40  0E80               	movlw	128
 27086  012F42  261C               	addwf	_buck_status,f,c
 27087  012F44                     l22745:
 27088                           
 27089                           ;buck.c: 577: }
 27090                           ;buck.c: 578: _buck_operate_remote();
 27091  012F44  ECA0  F07E         	call	__buck_operate_remote	;wreg free
 27092                           
 27093                           ;buck.c: 579: }
 27094  012F48  0012               	return	
 27095  012F4A                     l22747:
 27096                           
 27097                           ;buck.c: 580: else
 27098                           ;buck.c: 581: {
 27099                           ;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 27100  012F4A  0E7F               	movlw	127
 27101  012F4C  641C               	cpfsgt	_buck_status,c
 27102  012F4E  D002               	goto	l22751
 27103                           
 27104                           ;buck.c: 583: {
 27105                           ;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 27106  012F50  0E80               	movlw	128
 27107  012F52  5E1C               	subwf	_buck_status,f,c
 27108  012F54                     l22751:
 27109                           
 27110                           ;buck.c: 587: }
 27111                           ;buck.c: 588: _buck_operate_local();
 27112  012F54  EC9F  F04D         	call	__buck_operate_local	;wreg free
 27113  012F58  0012               	return	
 27114  012F5A                     __end_of_buck_operate:
 27115                           	opt stack 0
 27116                           tblptru	equ	0xFF8
 27117                           tblptrh	equ	0xFF7
 27118                           tblptrl	equ	0xFF6
 27119                           tablat	equ	0xFF5
 27120                           prodh	equ	0xFF4
 27121                           prodl	equ	0xFF3
 27122                           intcon	equ	0xFF2
 27123                           intcon2	equ	0xFF1
 27124                           intcon3	equ	0xFF0
 27125                           postinc0	equ	0xFEE
 27126                           wreg	equ	0xFE8
 27127                           indf1	equ	0xFE7
 27128                           postinc1	equ	0xFE6
 27129                           postdec1	equ	0xFE5
 27130                           plusw1	equ	0xFE3
 27131                           fsr1h	equ	0xFE2
 27132                           fsr1l	equ	0xFE1
 27133                           indf2	equ	0xFDF
 27134                           postinc2	equ	0xFDE
 27135                           postdec2	equ	0xFDD
 27136                           plusw2	equ	0xFDB
 27137                           fsr2h	equ	0xFDA
 27138                           fsr2l	equ	0xFD9
 27139                           status	equ	0xFD8
 27140                           
 27141 ;; *************** function __buck_operate_remote *****************
 27142 ;; Defined at:
 27143 ;;		line 453 in file "buck.c"
 27144 ;; Parameters:    Size  Location     Type
 27145 ;;		None
 27146 ;; Auto vars:     Size  Location     Type
 27147 ;;		None
 27148 ;; Return value:  Size  Location     Type
 27149 ;;                  1    wreg      void 
 27150 ;; Registers used:
 27151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27152 ;; Tracked objects:
 27153 ;;		On entry : 0/0
 27154 ;;		On exit  : 0/0
 27155 ;;		Unchanged: 0/0
 27156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27161 ;;Total ram usage:        1 bytes
 27162 ;; Hardware stack levels used:    1
 27163 ;; Hardware stack levels required when called:   13
 27164 ;; This function calls:
 27165 ;;		__buck_initial_dutycycle
 27166 ;;		__buck_prepare
 27167 ;;		__buck_set_dutycycle
 27168 ;;		__buck_set_sync_async
 27169 ;;		__buck_start
 27170 ;;		__buck_stop
 27171 ;; This function is called by:
 27172 ;;		_buck_operate
 27173 ;; This function uses a non-reentrant model
 27174 ;;
 27175                           
 27176                           	psect	text118
 27177  00FD40                     __ptext118:
 27178                           	opt stack 0
 27179  00FD40                     __buck_operate_remote:
 27180                           	opt stack 16
 27181                           
 27182                           ;buck.c: 455: switch(buck_status)
 27183                           
 27184                           ;incstack = 0
 27185  00FD40  D074               	goto	l21801
 27186  00FD42                     l21749:
 27187                           
 27188                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 27189  00FD42  0102               	movlb	2	; () banked
 27190  00FD44  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27191  00FD46  0B30               	andlw	48
 27192  00FD48  0A30               	xorlw	48
 27193  00FD4A  A4D8               	btfss	status,2,c
 27194  00FD4C  0012               	return	
 27195                           
 27196                           ; BSR set to: 2
 27197                           ;buck.c: 459: {
 27198                           ;buck.c: 460: if(buck_remote_on)
 27199  00FD4E  0100               	movlb	0	; () banked
 27200  00FD50  51E3               	movf	_buck_remote_on& (0+255),w,b
 27201  00FD52  B4D8               	btfsc	status,2,c
 27202  00FD54  0012               	return	
 27203                           
 27204                           ; BSR set to: 0
 27205                           ;buck.c: 461: {
 27206                           ;buck.c: 464: _buck_prepare();
 27207  00FD56  EC1B  F094         	call	__buck_prepare	;wreg free
 27208                           
 27209                           ;buck.c: 465: }
 27210                           ;buck.c: 466: }
 27211                           ;buck.c: 467: break;
 27212  00FD5A  0012               	return	
 27213  00FD5C                     l21755:
 27214                           
 27215                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 27216  00FD5C  0102               	movlb	2	; () banked
 27217  00FD5E  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27218  00FD60  0B30               	andlw	48
 27219  00FD62  0A30               	xorlw	48
 27220  00FD64  A4D8               	btfss	status,2,c
 27221  00FD66  0012               	return	
 27222                           
 27223                           ; BSR set to: 2
 27224                           ;buck.c: 471: {
 27225                           ;buck.c: 473: if(buck_remote_synchronous)
 27226  00FD68  0100               	movlb	0	; () banked
 27227  00FD6A  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 27228  00FD6C  B4D8               	btfsc	status,2,c
 27229  00FD6E  D00C               	goto	l21765
 27230                           
 27231                           ; BSR set to: 0
 27232                           ;buck.c: 474: {
 27233                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 27234  00FD70  EC2F  F084         	call	__buck_initial_dutycycle	;wreg free
 27235  00FD74  0100               	movlb	0	; () banked
 27236  00FD76  6F76               	movwf	__buck_operate_remote$8740& (0+255),b
 27237                           
 27238                           ; BSR set to: 0
 27239                           ;buck.c: 474: {
 27240                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 27241  00FD78  C076  F072         	movff	__buck_operate_remote$8740,__buck_start@dutycycle
 27242  00FD7C  0E01               	movlw	1
 27243  00FD7E  ECC3  F083         	call	__buck_start
 27244                           
 27245                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 27246  00FD82  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 27247                           
 27248                           ;buck.c: 478: }
 27249  00FD86  0012               	return	
 27250  00FD88                     l21765:
 27251                           
 27252                           ;buck.c: 479: else
 27253                           ;buck.c: 480: {
 27254                           ;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 27255  00FD88  0E28               	movlw	40
 27256  00FD8A  0100               	movlb	0	; () banked
 27257  00FD8C  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 27258  00FD8E  0E00               	movlw	0
 27259  00FD90  ECC3  F083         	call	__buck_start
 27260                           
 27261                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 27262  00FD94  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 27263                           
 27264                           ;buck.c: 484: }
 27265                           ;buck.c: 485: }
 27266                           ;buck.c: 486: break;
 27267  00FD98  0012               	return	
 27268  00FD9A                     l21769:
 27269                           
 27270                           ;buck.c: 490: if(!buck_remote_on)
 27271  00FD9A  0100               	movlb	0	; () banked
 27272  00FD9C  51E3               	movf	_buck_remote_on& (0+255),w,b
 27273  00FD9E  A4D8               	btfss	status,2,c
 27274  00FDA0  D003               	goto	l21773
 27275                           
 27276                           ; BSR set to: 0
 27277                           ;buck.c: 491: {
 27278                           ;buck.c: 493: _buck_stop();
 27279  00FDA2  ECFC  F09D         	call	__buck_stop	;wreg free
 27280                           
 27281                           ;buck.c: 494: }
 27282  00FDA6  0012               	return	
 27283  00FDA8                     l21773:
 27284                           
 27285                           ;buck.c: 496: else if(buck_remote_synchronous)
 27286  00FDA8  0100               	movlb	0	; () banked
 27287  00FDAA  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 27288  00FDAC  B4D8               	btfsc	status,2,c
 27289  00FDAE  D00A               	goto	l21779
 27290                           
 27291                           ; BSR set to: 0
 27292                           ;buck.c: 497: {
 27293                           ;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 27294  00FDB0  EC2F  F084         	call	__buck_initial_dutycycle	;wreg free
 27295  00FDB4  0100               	movlb	0	; () banked
 27296  00FDB6  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 27297                           
 27298                           ; BSR set to: 0
 27299                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 27300  00FDB8  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 27301  00FDBC  0E01               	movlw	1
 27302  00FDBE  EC39  F093         	call	__buck_set_sync_async
 27303                           
 27304                           ;buck.c: 502: }
 27305  00FDC2  0012               	return	
 27306  00FDC4                     l21779:
 27307                           
 27308                           ;buck.c: 503: else
 27309                           ;buck.c: 504: {
 27310                           ;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 27311  00FDC4  0100               	movlb	0	; () banked
 27312  00FDC6  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27313  00FDC8  0100               	movlb	0	; () banked
 27314  00FDCA  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 27315  00FDCC  B4D8               	btfsc	status,2,c
 27316  00FDCE  0012               	return	
 27317                           
 27318                           ; BSR set to: 0
 27319                           ;buck.c: 507: {
 27320                           ;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 27321  00FDD0  0100               	movlb	0	; () banked
 27322  00FDD2  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27323  00FDD4  EC94  F091         	call	__buck_set_dutycycle
 27324                           
 27325                           ;buck.c: 509: }
 27326                           ;buck.c: 510: }
 27327                           ;buck.c: 511: break;
 27328  00FDD8  0012               	return	
 27329  00FDDA                     l21783:
 27330                           
 27331                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 27332  00FDDA  0100               	movlb	0	; () banked
 27333  00FDDC  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27334  00FDDE  EC94  F091         	call	__buck_set_dutycycle
 27335                           
 27336                           ;buck.c: 515: if(!buck_remote_on)
 27337  00FDE2  0100               	movlb	0	; () banked
 27338  00FDE4  51E3               	movf	_buck_remote_on& (0+255),w,b
 27339  00FDE6  A4D8               	btfss	status,2,c
 27340  00FDE8  D003               	goto	l21789
 27341                           
 27342                           ; BSR set to: 0
 27343                           ;buck.c: 516: {
 27344                           ;buck.c: 518: _buck_stop();
 27345  00FDEA  ECFC  F09D         	call	__buck_stop	;wreg free
 27346                           
 27347                           ;buck.c: 519: }
 27348  00FDEE  0012               	return	
 27349  00FDF0                     l21789:
 27350                           
 27351                           ;buck.c: 521: else if(!buck_remote_synchronous)
 27352  00FDF0  0100               	movlb	0	; () banked
 27353  00FDF2  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 27354  00FDF4  A4D8               	btfss	status,2,c
 27355  00FDF6  D00B               	goto	l21795
 27356                           
 27357                           ; BSR set to: 0
 27358                           ;buck.c: 522: {
 27359                           ;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 27360  00FDF8  EC2F  F084         	call	__buck_initial_dutycycle	;wreg free
 27361  00FDFC  0FFB               	addlw	251
 27362  00FDFE  0100               	movlb	0	; () banked
 27363  00FE00  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 27364                           
 27365                           ; BSR set to: 0
 27366                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 27367  00FE02  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 27368  00FE06  0E00               	movlw	0
 27369  00FE08  EC39  F093         	call	__buck_set_sync_async
 27370                           
 27371                           ;buck.c: 526: }
 27372  00FE0C  0012               	return	
 27373  00FE0E                     l21795:
 27374                           
 27375                           ;buck.c: 527: else
 27376                           ;buck.c: 528: {
 27377                           ;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 27378  00FE0E  0100               	movlb	0	; () banked
 27379  00FE10  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27380  00FE12  0100               	movlb	0	; () banked
 27381  00FE14  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 27382  00FE16  B4D8               	btfsc	status,2,c
 27383  00FE18  0012               	return	
 27384                           
 27385                           ; BSR set to: 0
 27386                           ;buck.c: 531: {
 27387                           ;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 27388  00FE1A  0100               	movlb	0	; () banked
 27389  00FE1C  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 27390  00FE1E  EC94  F091         	call	__buck_set_dutycycle
 27391                           
 27392                           ;buck.c: 533: }
 27393                           ;buck.c: 534: }
 27394                           ;buck.c: 535: break;
 27395  00FE22  0012               	return	
 27396  00FE24                     l21799:
 27397                           
 27398                           ;buck.c: 539: _buck_stop();
 27399  00FE24  ECFC  F09D         	call	__buck_stop	;wreg free
 27400                           
 27401                           ;buck.c: 540: }
 27402  00FE28  0012               	return	
 27403  00FE2A                     l21801:
 27404  00FE2A  501C               	movf	_buck_status,w,c
 27405                           
 27406                           ; Switch size 1, requested type "space"
 27407                           ; Number of cases is 4, Range of values is 128 to 131
 27408                           ; switch strategies available:
 27409                           ; Name         Instructions Cycles
 27410                           ; simple_byte           13     7 (average)
 27411                           ;	Chosen strategy is simple_byte
 27412  00FE2C  0A80               	xorlw	128	; case 128
 27413  00FE2E  B4D8               	btfsc	status,2,c
 27414  00FE30  D788               	goto	l21749
 27415  00FE32  0A01               	xorlw	1	; case 129
 27416  00FE34  B4D8               	btfsc	status,2,c
 27417  00FE36  D792               	goto	l21755
 27418  00FE38  0A03               	xorlw	3	; case 130
 27419  00FE3A  B4D8               	btfsc	status,2,c
 27420  00FE3C  D7AE               	goto	l21769
 27421  00FE3E  0A01               	xorlw	1	; case 131
 27422  00FE40  B4D8               	btfsc	status,2,c
 27423  00FE42  D7CB               	goto	l21783
 27424  00FE44  D7EF               	goto	l21799
 27425  00FE46                     __end_of__buck_operate_remote:
 27426                           	opt stack 0
 27427                           tblptru	equ	0xFF8
 27428                           tblptrh	equ	0xFF7
 27429                           tblptrl	equ	0xFF6
 27430                           tablat	equ	0xFF5
 27431                           prodh	equ	0xFF4
 27432                           prodl	equ	0xFF3
 27433                           intcon	equ	0xFF2
 27434                           intcon2	equ	0xFF1
 27435                           intcon3	equ	0xFF0
 27436                           postinc0	equ	0xFEE
 27437                           wreg	equ	0xFE8
 27438                           indf1	equ	0xFE7
 27439                           postinc1	equ	0xFE6
 27440                           postdec1	equ	0xFE5
 27441                           plusw1	equ	0xFE3
 27442                           fsr1h	equ	0xFE2
 27443                           fsr1l	equ	0xFE1
 27444                           indf2	equ	0xFDF
 27445                           postinc2	equ	0xFDE
 27446                           postdec2	equ	0xFDD
 27447                           plusw2	equ	0xFDB
 27448                           fsr2h	equ	0xFDA
 27449                           fsr2l	equ	0xFD9
 27450                           status	equ	0xFD8
 27451                           
 27452 ;; *************** function __buck_prepare *****************
 27453 ;; Defined at:
 27454 ;;		line 125 in file "buck.c"
 27455 ;; Parameters:    Size  Location     Type
 27456 ;;		None
 27457 ;; Auto vars:     Size  Location     Type
 27458 ;;  cntr            1    0[BANK0 ] unsigned char 
 27459 ;; Return value:  Size  Location     Type
 27460 ;;                  1    wreg      void 
 27461 ;; Registers used:
 27462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27463 ;; Tracked objects:
 27464 ;;		On entry : 0/0
 27465 ;;		On exit  : 0/0
 27466 ;;		Unchanged: 0/0
 27467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27472 ;;Total ram usage:        1 bytes
 27473 ;; Hardware stack levels used:    1
 27474 ;; Hardware stack levels required when called:   10
 27475 ;; This function calls:
 27476 ;;		Nothing
 27477 ;; This function is called by:
 27478 ;;		__buck_operate_remote
 27479 ;; This function uses a non-reentrant model
 27480 ;;
 27481                           
 27482                           	psect	text119
 27483  012836                     __ptext119:
 27484                           	opt stack 0
 27485  012836                     __buck_prepare:
 27486                           	opt stack 18
 27487                           
 27488                           ;buck.c: 127: uint8_t cntr;
 27489                           ;buck.c: 128: LATBbits.LB1 = 1;
 27490                           
 27491                           ;incstack = 0
 27492  012836  828A               	bsf	3978,1,c	;volatile
 27493                           
 27494                           ;buck.c: 129: if(buck_status<0x80)
 27495  012838  0E80               	movlw	128
 27496  01283A  601C               	cpfslt	_buck_status,c
 27497  01283C  D002               	goto	l19877
 27498                           
 27499                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 27500  01283E  0E01               	movlw	1
 27501  012840  D001               	goto	L14
 27502  012842                     l19877:
 27503                           
 27504                           ;buck.c: 131: else
 27505                           ;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 27506  012842  0E81               	movlw	129
 27507  012844                     L14:
 27508  012844  6E1C               	movwf	_buck_status,c
 27509                           
 27510                           ;buck.c: 134: os.input_current = 0;
 27511  012846  0E00               	movlw	0
 27512  012848  0102               	movlb	2	; () banked
 27513  01284A  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 27514  01284C  0E00               	movlw	0
 27515  01284E  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 27516                           
 27517                           ;buck.c: 135: os.output_current = 0;
 27518  012850  0E00               	movlw	0
 27519  012852  0102               	movlb	2	; () banked
 27520  012854  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 27521  012856  0E00               	movlw	0
 27522  012858  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 27523                           
 27524                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 27525  01285A  0E00               	movlw	0
 27526  01285C  0100               	movlb	0	; () banked
 27527  01285E  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 27528  012860                     l19879:
 27529                           
 27530                           ; BSR set to: 0
 27531  012860  0E03               	movlw	3
 27532  012862  0100               	movlb	0	; () banked
 27533  012864  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 27534  012866  D001               	goto	l19883
 27535  012868  0012               	return	
 27536  01286A                     l19883:
 27537                           
 27538                           ; BSR set to: 0
 27539                           ;buck.c: 137: {
 27540                           ;buck.c: 138: os.input_current_adc[cntr] = 0;
 27541  01286A  0100               	movlb	0	; () banked
 27542  01286C  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 27543  01286E  0D02               	mullw	2
 27544  012870  0E14               	movlw	low (_os+20)
 27545  012872  24F3               	addwf	prodl,w,c
 27546  012874  6ED9               	movwf	fsr2l,c
 27547  012876  0E02               	movlw	high (_os+20)
 27548  012878  20F4               	addwfc	prodh,w,c
 27549  01287A  6EDA               	movwf	fsr2h,c
 27550  01287C  0E00               	movlw	0
 27551  01287E  6EDE               	movwf	postinc2,c
 27552  012880  0E00               	movlw	0
 27553  012882  6EDD               	movwf	postdec2,c
 27554                           
 27555                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 27556  012884  0100               	movlb	0	; () banked
 27557  012886  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 27558  012888  0D02               	mullw	2
 27559  01288A  0E29               	movlw	low (_os+41)
 27560  01288C  24F3               	addwf	prodl,w,c
 27561  01288E  6ED9               	movwf	fsr2l,c
 27562  012890  0E02               	movlw	high (_os+41)
 27563  012892  20F4               	addwfc	prodh,w,c
 27564  012894  6EDA               	movwf	fsr2h,c
 27565  012896  0E00               	movlw	0
 27566  012898  6EDE               	movwf	postinc2,c
 27567  01289A  0E00               	movlw	0
 27568  01289C  6EDD               	movwf	postdec2,c
 27569                           
 27570                           ; BSR set to: 0
 27571  01289E  0100               	movlb	0	; () banked
 27572  0128A0  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 27573  0128A2  D7DE               	goto	l19879
 27574  0128A4                     __end_of__buck_prepare:
 27575                           	opt stack 0
 27576                           tblptru	equ	0xFF8
 27577                           tblptrh	equ	0xFF7
 27578                           tblptrl	equ	0xFF6
 27579                           tablat	equ	0xFF5
 27580                           prodh	equ	0xFF4
 27581                           prodl	equ	0xFF3
 27582                           intcon	equ	0xFF2
 27583                           intcon2	equ	0xFF1
 27584                           intcon3	equ	0xFF0
 27585                           postinc0	equ	0xFEE
 27586                           wreg	equ	0xFE8
 27587                           indf1	equ	0xFE7
 27588                           postinc1	equ	0xFE6
 27589                           postdec1	equ	0xFE5
 27590                           plusw1	equ	0xFE3
 27591                           fsr1h	equ	0xFE2
 27592                           fsr1l	equ	0xFE1
 27593                           indf2	equ	0xFDF
 27594                           postinc2	equ	0xFDE
 27595                           postdec2	equ	0xFDD
 27596                           plusw2	equ	0xFDB
 27597                           fsr2h	equ	0xFDA
 27598                           fsr2l	equ	0xFD9
 27599                           status	equ	0xFD8
 27600                           
 27601 ;; *************** function __buck_operate_local *****************
 27602 ;; Defined at:
 27603 ;;		line 308 in file "buck.c"
 27604 ;; Parameters:    Size  Location     Type
 27605 ;;		None
 27606 ;; Auto vars:     Size  Location     Type
 27607 ;;  cntr            1   29[BANK0 ] unsigned char 
 27608 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 27609 ;; Return value:  Size  Location     Type
 27610 ;;                  1    wreg      void 
 27611 ;; Registers used:
 27612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27613 ;; Tracked objects:
 27614 ;;		On entry : 0/0
 27615 ;;		On exit  : 0/0
 27616 ;;		Unchanged: 0/0
 27617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27619 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27620 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27621 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27622 ;;Total ram usage:        8 bytes
 27623 ;; Hardware stack levels used:    1
 27624 ;; Hardware stack levels required when called:   13
 27625 ;; This function calls:
 27626 ;;		___lmul
 27627 ;;		__buck_initial_dutycycle
 27628 ;;		__buck_set_dutycycle
 27629 ;;		__buck_set_sync_async
 27630 ;;		__buck_start
 27631 ;;		__buck_stop
 27632 ;; This function is called by:
 27633 ;;		_buck_operate
 27634 ;; This function uses a non-reentrant model
 27635 ;;
 27636                           
 27637                           	psect	text120
 27638  009B3E                     __ptext120:
 27639                           	opt stack 0
 27640  009B3E                     __buck_operate_local:
 27641                           	opt stack 16
 27642                           
 27643                           ;buck.c: 310: uint8_t cntr;
 27644                           ;buck.c: 311: uint8_t tmp_dutycycle;
 27645                           ;buck.c: 313: switch(buck_status)
 27646                           
 27647                           ; BSR set to: 0
 27648                           ;incstack = 0
 27649  009B3E  D268               	goto	l21745
 27650  009B40                     l21631:
 27651                           
 27652                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 27653  009B40  0102               	movlb	2	; () banked
 27654  009B42  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27655  009B44  0B30               	andlw	48
 27656  009B46  0A30               	xorlw	48
 27657  009B48  A4D8               	btfss	status,2,c
 27658  009B4A  0012               	return	
 27659                           
 27660                           ; BSR set to: 2
 27661                           ;buck.c: 317: {
 27662                           ;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 27663  009B4C  0E0C               	movlw	12
 27664  009B4E  0100               	movlb	0	; () banked
 27665  009B50  6F76               	movwf	??__buck_operate_local& (0+255),b
 27666  009B52  0EFE               	movlw	254
 27667  009B54  0100               	movlb	0	; () banked
 27668  009B56  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 27669  009B58  EE22  F012         	lfsr	2,_os+18	;volatile
 27670  009B5C  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 27671  009B60  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 27672  009B64  0100               	movlb	0	; () banked
 27673  009B66  5176               	movf	??__buck_operate_local& (0+255),w,b
 27674  009B68  0100               	movlb	0	; () banked
 27675  009B6A  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 27676  009B6C  0100               	movlb	0	; () banked
 27677  009B6E  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 27678  009B70  0100               	movlb	0	; () banked
 27679  009B72  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 27680  009B74  0100               	movlb	0	; () banked
 27681  009B76  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 27682  009B78  0102               	movlb	2	; () banked
 27683  009B7A  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 27684  009B7C  0102               	movlb	2	; () banked
 27685  009B7E  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27686  009B80  0A80               	xorlw	128
 27687  009B82  0100               	movlb	0	; () banked
 27688  009B84  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 27689  009B86  0100               	movlb	0	; () banked
 27690  009B88  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 27691  009B8A  0A80               	xorlw	128
 27692  009B8C  0100               	movlb	0	; () banked
 27693  009B8E  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 27694  009B90  B0D8               	btfsc	status,0,c
 27695  009B92  0012               	return	
 27696                           
 27697                           ; BSR set to: 0
 27698                           ;buck.c: 319: {
 27699                           ;buck.c: 320: LATBbits.LB1 = 1;
 27700  009B94  828A               	bsf	3978,1,c	;volatile
 27701                           
 27702                           ; BSR set to: 0
 27703                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 27704  009B96  0E01               	movlw	1
 27705  009B98  6E1C               	movwf	_buck_status,c
 27706                           
 27707                           ;buck.c: 323: os.input_current = 0;
 27708  009B9A  0E00               	movlw	0
 27709  009B9C  0102               	movlb	2	; () banked
 27710  009B9E  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 27711  009BA0  0E00               	movlw	0
 27712  009BA2  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 27713                           
 27714                           ;buck.c: 324: os.output_current = 0;
 27715  009BA4  0E00               	movlw	0
 27716  009BA6  0102               	movlb	2	; () banked
 27717  009BA8  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 27718  009BAA  0E00               	movlw	0
 27719  009BAC  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 27720                           
 27721                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 27722  009BAE  0E00               	movlw	0
 27723  009BB0  0100               	movlb	0	; () banked
 27724  009BB2  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 27725  009BB4                     l21639:
 27726                           
 27727                           ; BSR set to: 0
 27728  009BB4  0E03               	movlw	3
 27729  009BB6  0100               	movlb	0	; () banked
 27730  009BB8  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 27731  009BBA  D001               	goto	l21643
 27732  009BBC  0012               	return	
 27733  009BBE                     l21643:
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;buck.c: 326: {
 27737                           ;buck.c: 327: os.input_current_adc[cntr] = 0;
 27738  009BBE  0100               	movlb	0	; () banked
 27739  009BC0  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27740  009BC2  0D02               	mullw	2
 27741  009BC4  0E14               	movlw	low (_os+20)
 27742  009BC6  24F3               	addwf	prodl,w,c
 27743  009BC8  6ED9               	movwf	fsr2l,c
 27744  009BCA  0E02               	movlw	high (_os+20)
 27745  009BCC  20F4               	addwfc	prodh,w,c
 27746  009BCE  6EDA               	movwf	fsr2h,c
 27747  009BD0  0E00               	movlw	0
 27748  009BD2  6EDE               	movwf	postinc2,c
 27749  009BD4  0E00               	movlw	0
 27750  009BD6  6EDD               	movwf	postdec2,c
 27751                           
 27752                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 27753  009BD8  0100               	movlb	0	; () banked
 27754  009BDA  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27755  009BDC  0D02               	mullw	2
 27756  009BDE  0E29               	movlw	low (_os+41)
 27757  009BE0  24F3               	addwf	prodl,w,c
 27758  009BE2  6ED9               	movwf	fsr2l,c
 27759  009BE4  0E02               	movlw	high (_os+41)
 27760  009BE6  20F4               	addwfc	prodh,w,c
 27761  009BE8  6EDA               	movwf	fsr2h,c
 27762  009BEA  0E00               	movlw	0
 27763  009BEC  6EDE               	movwf	postinc2,c
 27764  009BEE  0E00               	movlw	0
 27765  009BF0  6EDD               	movwf	postdec2,c
 27766                           
 27767                           ; BSR set to: 0
 27768  009BF2  0100               	movlb	0	; () banked
 27769  009BF4  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 27770  009BF6  D7DE               	goto	l21639
 27771  009BF8                     l21649:
 27772                           
 27773                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 27774  009BF8  0102               	movlb	2	; () banked
 27775  009BFA  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27776  009BFC  0B30               	andlw	48
 27777  009BFE  0A30               	xorlw	48
 27778  009C00  A4D8               	btfss	status,2,c
 27779  009C02  0012               	return	
 27780                           
 27781                           ; BSR set to: 2
 27782                           ;buck.c: 336: {
 27783                           ;buck.c: 338: os.input_current_calibration = 0;
 27784  009C04  0E00               	movlw	0
 27785  009C06  0102               	movlb	2	; () banked
 27786  009C08  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 27787                           
 27788                           ;buck.c: 339: os.output_current_calibration = 0;
 27789  009C0A  0E00               	movlw	0
 27790  009C0C  0102               	movlb	2	; () banked
 27791  009C0E  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 27792                           
 27793                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 27794  009C10  0E00               	movlw	0
 27795  009C12  0100               	movlb	0	; () banked
 27796  009C14  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 27797  009C16                     l21653:
 27798                           
 27799                           ; BSR set to: 0
 27800  009C16  0E03               	movlw	3
 27801  009C18  0100               	movlb	0	; () banked
 27802  009C1A  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 27803  009C1C  D001               	goto	l21657
 27804  009C1E  D01B               	goto	l21663
 27805  009C20                     l21657:
 27806                           
 27807                           ; BSR set to: 0
 27808                           ;buck.c: 341: {
 27809                           ;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 27810  009C20  0100               	movlb	0	; () banked
 27811  009C22  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27812  009C24  0D02               	mullw	2
 27813  009C26  0E14               	movlw	low (_os+20)
 27814  009C28  24F3               	addwf	prodl,w,c
 27815  009C2A  6ED9               	movwf	fsr2l,c
 27816  009C2C  0E02               	movlw	high (_os+20)
 27817  009C2E  20F4               	addwfc	prodh,w,c
 27818  009C30  6EDA               	movwf	fsr2h,c
 27819  009C32  50DF               	movf	indf2,w,c
 27820  009C34  0102               	movlb	2	; () banked
 27821  009C36  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 27822                           
 27823                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 27824  009C38  0100               	movlb	0	; () banked
 27825  009C3A  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27826  009C3C  0D02               	mullw	2
 27827  009C3E  0E29               	movlw	low (_os+41)
 27828  009C40  24F3               	addwf	prodl,w,c
 27829  009C42  6ED9               	movwf	fsr2l,c
 27830  009C44  0E02               	movlw	high (_os+41)
 27831  009C46  20F4               	addwfc	prodh,w,c
 27832  009C48  6EDA               	movwf	fsr2h,c
 27833  009C4A  50DF               	movf	indf2,w,c
 27834  009C4C  0102               	movlb	2	; () banked
 27835  009C4E  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 27836                           
 27837                           ; BSR set to: 2
 27838  009C50  0100               	movlb	0	; () banked
 27839  009C52  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 27840  009C54  D7E0               	goto	l21653
 27841  009C56                     l21663:
 27842                           
 27843                           ; BSR set to: 0
 27844                           ;buck.c: 344: }
 27845                           ;buck.c: 346: buck_dutycycle_last_step = 1;
 27846  009C56  0E01               	movlw	1
 27847  009C58  0101               	movlb	1	; () banked
 27848  009C5A  6FF2               	movwf	_buck_dutycycle_last_step& (0+255),b
 27849                           
 27850                           ; BSR set to: 1
 27851                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 27852  009C5C  EC2F  F084         	call	__buck_initial_dutycycle	;wreg free
 27853  009C60  0100               	movlb	0	; () banked
 27854  009C62  6F7B               	movwf	__buck_operate_local$8739& (0+255),b
 27855                           
 27856                           ; BSR set to: 0
 27857                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 27858  009C64  C07B  F072         	movff	__buck_operate_local$8739,__buck_start@dutycycle
 27859  009C68  0E00               	movlw	0
 27860  009C6A  ECC3  F083         	call	__buck_start
 27861                           
 27862                           ;buck.c: 349: }
 27863                           ;buck.c: 350: break;
 27864  009C6E  0012               	return	
 27865  009C70                     l2548:
 27866                           
 27867                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 27868  009C70  0102               	movlb	2	; () banked
 27869  009C72  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 27870  009C74  0012               	return	
 27871                           
 27872                           ; BSR set to: 2
 27873                           ;buck.c: 354: {
 27874                           ;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 27875  009C76  0102               	movlb	2	; () banked
 27876  009C78  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27877  009C7A  0102               	movlb	2	; () banked
 27878  009C7C  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 27879  009C7E  0102               	movlb	2	; () banked
 27880  009C80  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 27881  009C82  0A80               	xorlw	128
 27882  009C84  0100               	movlb	0	; () banked
 27883  009C86  6F76               	movwf	??__buck_operate_local& (0+255),b
 27884  009C88  0102               	movlb	2	; () banked
 27885  009C8A  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27886  009C8C  0A80               	xorlw	128
 27887  009C8E  0100               	movlb	0	; () banked
 27888  009C90  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27889  009C92  B0D8               	btfsc	status,0,c
 27890  009C94  D007               	goto	l21675
 27891                           
 27892                           ; BSR set to: 0
 27893                           ;buck.c: 357: {
 27894                           ;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 27895  009C96  0100               	movlb	0	; () banked
 27896  009C98  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27897  009C9A  EC94  F091         	call	__buck_set_dutycycle
 27898                           
 27899                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 27900  009C9E  0101               	movlb	1	; () banked
 27901  009CA0  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 27902                           
 27903                           ;buck.c: 360: }
 27904  009CA2  0012               	return	
 27905  009CA4                     l21675:
 27906                           
 27907                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 27908  009CA4  0102               	movlb	2	; () banked
 27909  009CA6  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 27910  009CA8  D018               	goto	l21679
 27911  009CAA  0102               	movlb	2	; () banked
 27912  009CAC  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 27913  009CAE  E105               	bnz	u21500
 27914  009CB0  0E05               	movlw	5
 27915  009CB2  0102               	movlb	2	; () banked
 27916  009CB4  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 27917  009CB6  A0D8               	btfss	status,0,c
 27918  009CB8  D010               	goto	l21679
 27919  009CBA                     u21500:
 27920                           
 27921                           ; BSR set to: 2
 27922  009CBA  0102               	movlb	2	; () banked
 27923  009CBC  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27924  009CBE  0102               	movlb	2	; () banked
 27925  009CC0  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27926  009CC2  0102               	movlb	2	; () banked
 27927  009CC4  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27928  009CC6  0A80               	xorlw	128
 27929  009CC8  0100               	movlb	0	; () banked
 27930  009CCA  6F76               	movwf	??__buck_operate_local& (0+255),b
 27931  009CCC  0102               	movlb	2	; () banked
 27932  009CCE  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27933  009CD0  0A80               	xorlw	128
 27934  009CD2  0100               	movlb	0	; () banked
 27935  009CD4  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27936  009CD6  B0D8               	btfsc	status,0,c
 27937  009CD8  D005               	goto	l21683
 27938  009CDA                     l21679:
 27939                           
 27940                           ;buck.c: 363: {
 27941                           ;buck.c: 364: _buck_stop();
 27942  009CDA  ECFC  F09D         	call	__buck_stop	;wreg free
 27943                           
 27944                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 27945  009CDE  0E00               	movlw	0
 27946  009CE0  6E1C               	movwf	_buck_status,c
 27947                           
 27948                           ;buck.c: 366: }
 27949  009CE2  0012               	return	
 27950  009CE4                     l21683:
 27951                           
 27952                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 27953  009CE4  EE22  F027         	lfsr	2,_os+39	;volatile
 27954  009CE8  CFDE F076          	movff	postinc2,??__buck_operate_local
 27955  009CEC  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 27956  009CF0  0100               	movlb	0	; () banked
 27957  009CF2  1F76               	comf	??__buck_operate_local& (0+255),f,b
 27958  009CF4  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 27959  009CF6  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 27960  009CF8  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 27961  009CFA  0102               	movlb	2	; () banked
 27962  009CFC  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 27963  009CFE  0100               	movlb	0	; () banked
 27964  009D00  2776               	addwf	??__buck_operate_local& (0+255),f,b
 27965  009D02  0102               	movlb	2	; () banked
 27966  009D04  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27967  009D06  0100               	movlb	0	; () banked
 27968  009D08  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 27969  009D0A  0100               	movlb	0	; () banked
 27970  009D0C  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 27971  009D0E  D008               	goto	l21685
 27972  009D10  0EE8               	movlw	232
 27973  009D12  0100               	movlb	0	; () banked
 27974  009D14  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 27975  009D16  0E03               	movlw	3
 27976  009D18  0100               	movlb	0	; () banked
 27977  009D1A  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 27978  009D1C  B0D8               	btfsc	status,0,c
 27979  009D1E  D007               	goto	l21689
 27980  009D20                     l21685:
 27981                           
 27982                           ; BSR set to: 0
 27983                           ;buck.c: 369: {
 27984                           ;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 27985  009D20  0100               	movlb	0	; () banked
 27986  009D22  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27987  009D24  EC94  F091         	call	__buck_set_dutycycle
 27988                           
 27989                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 27990  009D28  0101               	movlb	1	; () banked
 27991  009D2A  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 27992                           
 27993                           ;buck.c: 372: }
 27994  009D2C  0012               	return	
 27995  009D2E                     l21689:
 27996                           
 27997                           ;buck.c: 374: else if (os.input_current>600)
 27998  009D2E  0102               	movlb	2	; () banked
 27999  009D30  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 28000  009D32  D013               	goto	l21695
 28001  009D34  0E59               	movlw	89
 28002  009D36  0102               	movlb	2	; () banked
 28003  009D38  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 28004  009D3A  0E02               	movlw	2
 28005  009D3C  0102               	movlb	2	; () banked
 28006  009D3E  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 28007  009D40  A0D8               	btfss	status,0,c
 28008  009D42  D00B               	goto	l21695
 28009                           
 28010                           ; BSR set to: 2
 28011                           ;buck.c: 375: {
 28012                           ;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 28013  009D44  EC2F  F084         	call	__buck_initial_dutycycle	;wreg free
 28014  009D48  0F05               	addlw	5
 28015  009D4A  0100               	movlb	0	; () banked
 28016  009D4C  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 28017                           
 28018                           ; BSR set to: 0
 28019                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 28020  009D4E  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 28021  009D52  0E01               	movlw	1
 28022  009D54  EC39  F093         	call	__buck_set_sync_async
 28023                           
 28024                           ;buck.c: 380: }
 28025  009D58  0012               	return	
 28026  009D5A                     l21695:
 28027                           
 28028                           ;buck.c: 382: else
 28029                           ;buck.c: 383: {
 28030                           ;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000);
 28031  009D5A  0102               	movlb	2	; () banked
 28032  009D5C  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 28033  009D5E  0B30               	andlw	48
 28034  009D60  0100               	movlb	0	; () banked
 28035  009D62  6FE0               	movwf	_idx& (0+255),b
 28036                           
 28037                           ;buck.c: 386: idx >>= 4;
 28038  009D64  0100               	movlb	0	; () banked
 28039  009D66  3BE0               	swapf	_idx& (0+255),f,b
 28040  009D68  0E0F               	movlw	15
 28041  009D6A  17E0               	andwf	_idx& (0+255),f,b
 28042                           
 28043                           ; BSR set to: 0
 28044                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 28045  009D6C  0100               	movlb	0	; () banked
 28046  009D6E  51E0               	movf	_idx& (0+255),w,b
 28047  009D70  0D02               	mullw	2
 28048  009D72  0E0A               	movlw	low (_os+10)
 28049  009D74  24F3               	addwf	prodl,w,c
 28050  009D76  6ED9               	movwf	fsr2l,c
 28051  009D78  0E02               	movlw	high (_os+10)
 28052  009D7A  20F4               	addwfc	prodh,w,c
 28053  009D7C  6EDA               	movwf	fsr2h,c
 28054  009D7E  CFDE F29E          	movff	postinc2,_now
 28055  009D82  CFDD F29F          	movff	postdec2,_now+1
 28056  009D86  0102               	movlb	2	; () banked
 28057  009D88  0E00               	movlw	0
 28058  009D8A  BF9F               	btfsc	(_now+1)& (0+255),7,b
 28059  009D8C  0EFF               	movlw	-1
 28060  009D8E  6FA0               	movwf	(_now+2)& (0+255),b
 28061  009D90  6FA1               	movwf	(_now+3)& (0+255),b
 28062                           
 28063                           ; BSR set to: 2
 28064                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 28065  009D92  C29E  F060         	movff	_now,___lmul@multiplier
 28066  009D96  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 28067  009D9A  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 28068  009D9E  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 28069  009DA2  0100               	movlb	0	; () banked
 28070  009DA4  51E0               	movf	_idx& (0+255),w,b
 28071  009DA6  0D02               	mullw	2
 28072  009DA8  0E14               	movlw	low (_os+20)
 28073  009DAA  24F3               	addwf	prodl,w,c
 28074  009DAC  6ED9               	movwf	fsr2l,c
 28075  009DAE  0E02               	movlw	high (_os+20)
 28076  009DB0  20F4               	addwfc	prodh,w,c
 28077  009DB2  6EDA               	movwf	fsr2h,c
 28078  009DB4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28079  009DB8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28080  009DBC  0100               	movlb	0	; () banked
 28081  009DBE  0E00               	movlw	0
 28082  009DC0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28083  009DC2  0EFF               	movlw	-1
 28084  009DC4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28085  009DC6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28086  009DC8  ECC3  F092         	call	___lmul	;wreg free
 28087  009DCC  C060  F29E         	movff	?___lmul,_now
 28088  009DD0  C061  F29F         	movff	?___lmul+1,_now+1
 28089  009DD4  C062  F2A0         	movff	?___lmul+2,_now+2
 28090  009DD8  C063  F2A1         	movff	?___lmul+3,_now+3
 28091                           
 28092                           ;buck.c: 390: idx += 2;
 28093  009DDC  0E02               	movlw	2
 28094  009DDE  0100               	movlb	0	; () banked
 28095  009DE0  27E0               	addwf	_idx& (0+255),f,b
 28096                           
 28097                           ; BSR set to: 0
 28098                           ;buck.c: 391: idx &= 0b11;
 28099  009DE2  0E03               	movlw	3
 28100  009DE4  0100               	movlb	0	; () banked
 28101  009DE6  17E0               	andwf	_idx& (0+255),f,b
 28102                           
 28103                           ; BSR set to: 0
 28104                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 28105  009DE8  0100               	movlb	0	; () banked
 28106  009DEA  51E0               	movf	_idx& (0+255),w,b
 28107  009DEC  0D02               	mullw	2
 28108  009DEE  0E0A               	movlw	low (_os+10)
 28109  009DF0  24F3               	addwf	prodl,w,c
 28110  009DF2  6ED9               	movwf	fsr2l,c
 28111  009DF4  0E02               	movlw	high (_os+10)
 28112  009DF6  20F4               	addwfc	prodh,w,c
 28113  009DF8  6EDA               	movwf	fsr2h,c
 28114  009DFA  CFDE F2A2          	movff	postinc2,_last
 28115  009DFE  CFDD F2A3          	movff	postdec2,_last+1
 28116  009E02  0102               	movlb	2	; () banked
 28117  009E04  0E00               	movlw	0
 28118  009E06  BFA3               	btfsc	(_last+1)& (0+255),7,b
 28119  009E08  0EFF               	movlw	-1
 28120  009E0A  6FA4               	movwf	(_last+2)& (0+255),b
 28121  009E0C  6FA5               	movwf	(_last+3)& (0+255),b
 28122                           
 28123                           ; BSR set to: 2
 28124                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 28125  009E0E  C2A2  F060         	movff	_last,___lmul@multiplier
 28126  009E12  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 28127  009E16  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 28128  009E1A  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 28129  009E1E  0100               	movlb	0	; () banked
 28130  009E20  51E0               	movf	_idx& (0+255),w,b
 28131  009E22  0D02               	mullw	2
 28132  009E24  0E14               	movlw	low (_os+20)
 28133  009E26  24F3               	addwf	prodl,w,c
 28134  009E28  6ED9               	movwf	fsr2l,c
 28135  009E2A  0E02               	movlw	high (_os+20)
 28136  009E2C  20F4               	addwfc	prodh,w,c
 28137  009E2E  6EDA               	movwf	fsr2h,c
 28138  009E30  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28139  009E34  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28140  009E38  0100               	movlb	0	; () banked
 28141  009E3A  0E00               	movlw	0
 28142  009E3C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28143  009E3E  0EFF               	movlw	-1
 28144  009E40  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28145  009E42  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28146  009E44  ECC3  F092         	call	___lmul	;wreg free
 28147  009E48  C060  F2A2         	movff	?___lmul,_last
 28148  009E4C  C061  F2A3         	movff	?___lmul+1,_last+1
 28149  009E50  C062  F2A4         	movff	?___lmul+2,_last+2
 28150  009E54  C063  F2A5         	movff	?___lmul+3,_last+3
 28151                           
 28152                           ;buck.c: 395: if(os.input_voltage>15185)
 28153  009E58  0102               	movlb	2	; () banked
 28154  009E5A  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 28155  009E5C  D00D               	goto	l21711
 28156  009E5E  0E52               	movlw	82
 28157  009E60  0102               	movlb	2	; () banked
 28158  009E62  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 28159  009E64  0E3B               	movlw	59
 28160  009E66  0102               	movlb	2	; () banked
 28161  009E68  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 28162  009E6A  A0D8               	btfss	status,0,c
 28163  009E6C  D005               	goto	l21711
 28164                           
 28165                           ; BSR set to: 2
 28166                           ;buck.c: 396: {
 28167                           ;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 28168  009E6E  0100               	movlb	0	; () banked
 28169  009E70  29E4               	incf	_buck_dutycycle& (0+255),w,b
 28170  009E72  EC94  F091         	call	__buck_set_dutycycle
 28171                           
 28172                           ;buck.c: 398: }
 28173  009E76  0012               	return	
 28174  009E78                     l21711:
 28175                           
 28176                           ;buck.c: 399: else
 28177                           ;buck.c: 400: {
 28178                           ;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 28179  009E78  0100               	movlb	0	; () banked
 28180  009E7A  05E4               	decf	_buck_dutycycle& (0+255),w,b
 28181  009E7C  EC94  F091         	call	__buck_set_dutycycle
 28182                           
 28183                           ;buck.c: 402: }
 28184                           ;buck.c: 403: }
 28185                           ;buck.c: 404: }
 28186                           ;buck.c: 405: break;
 28187  009E80  0012               	return	
 28188  009E82                     l2562:
 28189                           
 28190                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 28191  009E82  0102               	movlb	2	; () banked
 28192  009E84  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 28193  009E86  0012               	return	
 28194                           
 28195                           ; BSR set to: 2
 28196                           ;buck.c: 409: {
 28197                           ;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 28198  009E88  0102               	movlb	2	; () banked
 28199  009E8A  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 28200  009E8C  0102               	movlb	2	; () banked
 28201  009E8E  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 28202  009E90  0102               	movlb	2	; () banked
 28203  009E92  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 28204  009E94  0A80               	xorlw	128
 28205  009E96  0100               	movlb	0	; () banked
 28206  009E98  6F76               	movwf	??__buck_operate_local& (0+255),b
 28207  009E9A  0102               	movlb	2	; () banked
 28208  009E9C  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 28209  009E9E  0A80               	xorlw	128
 28210  009EA0  0100               	movlb	0	; () banked
 28211  009EA2  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 28212  009EA4  B0D8               	btfsc	status,0,c
 28213  009EA6  D007               	goto	l21719
 28214                           
 28215                           ; BSR set to: 0
 28216                           ;buck.c: 412: {
 28217                           ;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 28218  009EA8  0100               	movlb	0	; () banked
 28219  009EAA  05E4               	decf	_buck_dutycycle& (0+255),w,b
 28220  009EAC  EC94  F091         	call	__buck_set_dutycycle
 28221                           
 28222                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 28223  009EB0  0101               	movlb	1	; () banked
 28224  009EB2  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 28225                           
 28226                           ;buck.c: 415: }
 28227  009EB4  0012               	return	
 28228  009EB6                     l21719:
 28229                           
 28230                           ;buck.c: 417: else if (os.input_current<200)
 28231  009EB6  0102               	movlb	2	; () banked
 28232  009EB8  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 28233  009EBA  D008               	goto	l21721
 28234  009EBC  0102               	movlb	2	; () banked
 28235  009EBE  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 28236  009EC0  E110               	bnz	l21725
 28237  009EC2  0EC8               	movlw	200
 28238  009EC4  0102               	movlb	2	; () banked
 28239  009EC6  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 28240  009EC8  B0D8               	btfsc	status,0,c
 28241  009ECA  D00B               	goto	l21725
 28242  009ECC                     l21721:
 28243                           
 28244                           ; BSR set to: 2
 28245                           ;buck.c: 418: {
 28246                           ;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 28247  009ECC  0100               	movlb	0	; () banked
 28248  009ECE  51E4               	movf	_buck_dutycycle& (0+255),w,b
 28249  009ED0  0FFB               	addlw	251
 28250  009ED2  0100               	movlb	0	; () banked
 28251  009ED4  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 28252                           
 28253                           ; BSR set to: 0
 28254                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 28255  009ED6  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 28256  009EDA  0E00               	movlw	0
 28257  009EDC  EC39  F093         	call	__buck_set_sync_async
 28258                           
 28259                           ;buck.c: 421: }
 28260  009EE0  0012               	return	
 28261  009EE2                     l21725:
 28262                           
 28263                           ;buck.c: 423: else
 28264                           ;buck.c: 424: {
 28265                           ;buck.c: 426: idx = os.timeSlot & 0b00110000;
 28266  009EE2  0102               	movlb	2	; () banked
 28267  009EE4  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 28268  009EE6  0B30               	andlw	48
 28269  009EE8  0100               	movlb	0	; () banked
 28270  009EEA  6FE0               	movwf	_idx& (0+255),b
 28271                           
 28272                           ;buck.c: 427: idx >>= 4;
 28273  009EEC  0100               	movlb	0	; () banked
 28274  009EEE  3BE0               	swapf	_idx& (0+255),f,b
 28275  009EF0  0E0F               	movlw	15
 28276  009EF2  17E0               	andwf	_idx& (0+255),f,b
 28277                           
 28278                           ; BSR set to: 0
 28279                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 28280  009EF4  0100               	movlb	0	; () banked
 28281  009EF6  51E0               	movf	_idx& (0+255),w,b
 28282  009EF8  0D02               	mullw	2
 28283  009EFA  0E0A               	movlw	low (_os+10)
 28284  009EFC  24F3               	addwf	prodl,w,c
 28285  009EFE  6ED9               	movwf	fsr2l,c
 28286  009F00  0E02               	movlw	high (_os+10)
 28287  009F02  20F4               	addwfc	prodh,w,c
 28288  009F04  6EDA               	movwf	fsr2h,c
 28289  009F06  CFDE F29E          	movff	postinc2,_now
 28290  009F0A  CFDD F29F          	movff	postdec2,_now+1
 28291  009F0E  0102               	movlb	2	; () banked
 28292  009F10  0E00               	movlw	0
 28293  009F12  BF9F               	btfsc	(_now+1)& (0+255),7,b
 28294  009F14  0EFF               	movlw	-1
 28295  009F16  6FA0               	movwf	(_now+2)& (0+255),b
 28296  009F18  6FA1               	movwf	(_now+3)& (0+255),b
 28297                           
 28298                           ; BSR set to: 2
 28299                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 28300  009F1A  C29E  F060         	movff	_now,___lmul@multiplier
 28301  009F1E  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 28302  009F22  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 28303  009F26  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 28304  009F2A  0100               	movlb	0	; () banked
 28305  009F2C  51E0               	movf	_idx& (0+255),w,b
 28306  009F2E  0D02               	mullw	2
 28307  009F30  0E14               	movlw	low (_os+20)
 28308  009F32  24F3               	addwf	prodl,w,c
 28309  009F34  6ED9               	movwf	fsr2l,c
 28310  009F36  0E02               	movlw	high (_os+20)
 28311  009F38  20F4               	addwfc	prodh,w,c
 28312  009F3A  6EDA               	movwf	fsr2h,c
 28313  009F3C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28314  009F40  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28315  009F44  0100               	movlb	0	; () banked
 28316  009F46  0E00               	movlw	0
 28317  009F48  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28318  009F4A  0EFF               	movlw	-1
 28319  009F4C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28320  009F4E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28321  009F50  ECC3  F092         	call	___lmul	;wreg free
 28322  009F54  C060  F29E         	movff	?___lmul,_now
 28323  009F58  C061  F29F         	movff	?___lmul+1,_now+1
 28324  009F5C  C062  F2A0         	movff	?___lmul+2,_now+2
 28325  009F60  C063  F2A1         	movff	?___lmul+3,_now+3
 28326                           
 28327                           ;buck.c: 431: idx += 2;
 28328  009F64  0E02               	movlw	2
 28329  009F66  0100               	movlb	0	; () banked
 28330  009F68  27E0               	addwf	_idx& (0+255),f,b
 28331                           
 28332                           ; BSR set to: 0
 28333                           ;buck.c: 432: idx &= 0b11;
 28334  009F6A  0E03               	movlw	3
 28335  009F6C  0100               	movlb	0	; () banked
 28336  009F6E  17E0               	andwf	_idx& (0+255),f,b
 28337                           
 28338                           ; BSR set to: 0
 28339                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 28340  009F70  0100               	movlb	0	; () banked
 28341  009F72  51E0               	movf	_idx& (0+255),w,b
 28342  009F74  0D02               	mullw	2
 28343  009F76  0E0A               	movlw	low (_os+10)
 28344  009F78  24F3               	addwf	prodl,w,c
 28345  009F7A  6ED9               	movwf	fsr2l,c
 28346  009F7C  0E02               	movlw	high (_os+10)
 28347  009F7E  20F4               	addwfc	prodh,w,c
 28348  009F80  6EDA               	movwf	fsr2h,c
 28349  009F82  CFDE F2A2          	movff	postinc2,_last
 28350  009F86  CFDD F2A3          	movff	postdec2,_last+1
 28351  009F8A  0102               	movlb	2	; () banked
 28352  009F8C  0E00               	movlw	0
 28353  009F8E  BFA3               	btfsc	(_last+1)& (0+255),7,b
 28354  009F90  0EFF               	movlw	-1
 28355  009F92  6FA4               	movwf	(_last+2)& (0+255),b
 28356  009F94  6FA5               	movwf	(_last+3)& (0+255),b
 28357                           
 28358                           ; BSR set to: 2
 28359                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 28360  009F96  C2A2  F060         	movff	_last,___lmul@multiplier
 28361  009F9A  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 28362  009F9E  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 28363  009FA2  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 28364  009FA6  0100               	movlb	0	; () banked
 28365  009FA8  51E0               	movf	_idx& (0+255),w,b
 28366  009FAA  0D02               	mullw	2
 28367  009FAC  0E14               	movlw	low (_os+20)
 28368  009FAE  24F3               	addwf	prodl,w,c
 28369  009FB0  6ED9               	movwf	fsr2l,c
 28370  009FB2  0E02               	movlw	high (_os+20)
 28371  009FB4  20F4               	addwfc	prodh,w,c
 28372  009FB6  6EDA               	movwf	fsr2h,c
 28373  009FB8  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28374  009FBC  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28375  009FC0  0100               	movlb	0	; () banked
 28376  009FC2  0E00               	movlw	0
 28377  009FC4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28378  009FC6  0EFF               	movlw	-1
 28379  009FC8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28380  009FCA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28381  009FCC  ECC3  F092         	call	___lmul	;wreg free
 28382  009FD0  C060  F2A2         	movff	?___lmul,_last
 28383  009FD4  C061  F2A3         	movff	?___lmul+1,_last+1
 28384  009FD8  C062  F2A4         	movff	?___lmul+2,_last+2
 28385  009FDC  C063  F2A5         	movff	?___lmul+3,_last+3
 28386                           
 28387                           ;buck.c: 436: if(os.input_voltage>15185)
 28388  009FE0  0102               	movlb	2	; () banked
 28389  009FE2  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 28390  009FE4  D00D               	goto	l21741
 28391  009FE6  0E52               	movlw	82
 28392  009FE8  0102               	movlb	2	; () banked
 28393  009FEA  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 28394  009FEC  0E3B               	movlw	59
 28395  009FEE  0102               	movlb	2	; () banked
 28396  009FF0  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 28397  009FF2  A0D8               	btfss	status,0,c
 28398  009FF4  D005               	goto	l21741
 28399                           
 28400                           ; BSR set to: 2
 28401                           ;buck.c: 437: {
 28402                           ;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 28403  009FF6  0100               	movlb	0	; () banked
 28404  009FF8  29E4               	incf	_buck_dutycycle& (0+255),w,b
 28405  009FFA  EC94  F091         	call	__buck_set_dutycycle
 28406                           
 28407                           ;buck.c: 439: }
 28408  009FFE  0012               	return	
 28409  00A000                     l21741:
 28410                           
 28411                           ;buck.c: 440: else
 28412                           ;buck.c: 441: {
 28413                           ;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 28414  00A000  0100               	movlb	0	; () banked
 28415  00A002  05E4               	decf	_buck_dutycycle& (0+255),w,b
 28416  00A004  EC94  F091         	call	__buck_set_dutycycle
 28417                           
 28418                           ;buck.c: 443: }
 28419                           ;buck.c: 444: }
 28420                           ;buck.c: 445: }
 28421                           ;buck.c: 446: break;
 28422  00A008  0012               	return	
 28423  00A00A                     l21743:
 28424                           
 28425                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 28426  00A00A  0E00               	movlw	0
 28427  00A00C  6E1C               	movwf	_buck_status,c
 28428                           
 28429                           ;buck.c: 450: }
 28430  00A00E  0012               	return	
 28431  00A010                     l21745:
 28432  00A010  501C               	movf	_buck_status,w,c
 28433                           
 28434                           ; Switch size 1, requested type "space"
 28435                           ; Number of cases is 4, Range of values is 0 to 3
 28436                           ; switch strategies available:
 28437                           ; Name         Instructions Cycles
 28438                           ; simple_byte           13     7 (average)
 28439                           ;	Chosen strategy is simple_byte
 28440  00A012  0A00               	xorlw	0	; case 0
 28441  00A014  B4D8               	btfsc	status,2,c
 28442  00A016  D594               	goto	l21631
 28443  00A018  0A01               	xorlw	1	; case 1
 28444  00A01A  B4D8               	btfsc	status,2,c
 28445  00A01C  D5ED               	goto	l21649
 28446  00A01E  0A03               	xorlw	3	; case 2
 28447  00A020  B4D8               	btfsc	status,2,c
 28448  00A022  D626               	goto	l2548
 28449  00A024  0A01               	xorlw	1	; case 3
 28450  00A026  B4D8               	btfsc	status,2,c
 28451  00A028  D72C               	goto	l2562
 28452  00A02A  D7EF               	goto	l21743
 28453  00A02C                     __end_of__buck_operate_local:
 28454                           	opt stack 0
 28455                           tblptru	equ	0xFF8
 28456                           tblptrh	equ	0xFF7
 28457                           tblptrl	equ	0xFF6
 28458                           tablat	equ	0xFF5
 28459                           prodh	equ	0xFF4
 28460                           prodl	equ	0xFF3
 28461                           intcon	equ	0xFF2
 28462                           intcon2	equ	0xFF1
 28463                           intcon3	equ	0xFF0
 28464                           postinc0	equ	0xFEE
 28465                           wreg	equ	0xFE8
 28466                           indf1	equ	0xFE7
 28467                           postinc1	equ	0xFE6
 28468                           postdec1	equ	0xFE5
 28469                           plusw1	equ	0xFE3
 28470                           fsr1h	equ	0xFE2
 28471                           fsr1l	equ	0xFE1
 28472                           indf2	equ	0xFDF
 28473                           postinc2	equ	0xFDE
 28474                           postdec2	equ	0xFDD
 28475                           plusw2	equ	0xFDB
 28476                           fsr2h	equ	0xFDA
 28477                           fsr2l	equ	0xFD9
 28478                           status	equ	0xFD8
 28479                           
 28480 ;; *************** function __buck_stop *****************
 28481 ;; Defined at:
 28482 ;;		line 283 in file "buck.c"
 28483 ;; Parameters:    Size  Location     Type
 28484 ;;		None
 28485 ;; Auto vars:     Size  Location     Type
 28486 ;;		None
 28487 ;; Return value:  Size  Location     Type
 28488 ;;                  1    wreg      void 
 28489 ;; Registers used:
 28490 ;;		wreg, status,2, status,0
 28491 ;; Tracked objects:
 28492 ;;		On entry : 0/0
 28493 ;;		On exit  : 0/0
 28494 ;;		Unchanged: 0/0
 28495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28500 ;;Total ram usage:        0 bytes
 28501 ;; Hardware stack levels used:    1
 28502 ;; Hardware stack levels required when called:   10
 28503 ;; This function calls:
 28504 ;;		Nothing
 28505 ;; This function is called by:
 28506 ;;		__buck_operate_local
 28507 ;;		__buck_operate_remote
 28508 ;; This function uses a non-reentrant model
 28509 ;;
 28510                           
 28511                           	psect	text121
 28512  013BF8                     __ptext121:
 28513                           	opt stack 0
 28514  013BF8                     __buck_stop:
 28515                           	opt stack 18
 28516                           
 28517                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 28518                           
 28519                           ;incstack = 0
 28520  013BF8  96CA               	bcf	4042,3,c	;volatile
 28521  013BFA  98CA               	bcf	4042,4,c	;volatile
 28522  013BFC  9ACA               	bcf	4042,5,c	;volatile
 28523  013BFE  9CCA               	bcf	4042,6,c	;volatile
 28524                           
 28525                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 28526  013C00  929E               	bcf	3998,1,c	;volatile
 28527  013C02                     l2529:
 28528  013C02  A29E               	btfss	3998,1,c	;volatile
 28529  013C04  D7FE               	goto	l2529
 28530                           
 28531                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 28532  013C06  90BA               	bcf	4026,0,c	;volatile
 28533  013C08  92BA               	bcf	4026,1,c	;volatile
 28534  013C0A  94BA               	bcf	4026,2,c	;volatile
 28535  013C0C  96BA               	bcf	4026,3,c	;volatile
 28536                           
 28537                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 28538  013C0E  94CA               	bcf	4042,2,c	;volatile
 28539                           
 28540                           ;buck.c: 295: LATBbits.LB1 = 0;
 28541  013C10  928A               	bcf	3978,1,c	;volatile
 28542                           
 28543                           ;buck.c: 297: if(buck_status<0x80)
 28544  013C12  0E80               	movlw	128
 28545  013C14  601C               	cpfslt	_buck_status,c
 28546  013C16  D003               	goto	l19941
 28547                           
 28548                           ;buck.c: 298: {
 28549                           ;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 28550  013C18  0E00               	movlw	0
 28551  013C1A  6E1C               	movwf	_buck_status,c
 28552                           
 28553                           ;buck.c: 300: }
 28554  013C1C  0012               	return	
 28555  013C1E                     l19941:
 28556                           
 28557                           ;buck.c: 301: else
 28558                           ;buck.c: 302: {
 28559                           ;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 28560  013C1E  0E80               	movlw	128
 28561  013C20  6E1C               	movwf	_buck_status,c
 28562  013C22  0012               	return	
 28563  013C24                     __end_of__buck_stop:
 28564                           	opt stack 0
 28565                           tblptru	equ	0xFF8
 28566                           tblptrh	equ	0xFF7
 28567                           tblptrl	equ	0xFF6
 28568                           tablat	equ	0xFF5
 28569                           prodh	equ	0xFF4
 28570                           prodl	equ	0xFF3
 28571                           intcon	equ	0xFF2
 28572                           intcon2	equ	0xFF1
 28573                           intcon3	equ	0xFF0
 28574                           postinc0	equ	0xFEE
 28575                           wreg	equ	0xFE8
 28576                           indf1	equ	0xFE7
 28577                           postinc1	equ	0xFE6
 28578                           postdec1	equ	0xFE5
 28579                           plusw1	equ	0xFE3
 28580                           fsr1h	equ	0xFE2
 28581                           fsr1l	equ	0xFE1
 28582                           indf2	equ	0xFDF
 28583                           postinc2	equ	0xFDE
 28584                           postdec2	equ	0xFDD
 28585                           plusw2	equ	0xFDB
 28586                           fsr2h	equ	0xFDA
 28587                           fsr2l	equ	0xFD9
 28588                           status	equ	0xFD8
 28589                           
 28590 ;; *************** function __buck_start *****************
 28591 ;; Defined at:
 28592 ;;		line 143 in file "buck.c"
 28593 ;; Parameters:    Size  Location     Type
 28594 ;;  mode            1    wreg     enum E8109
 28595 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 28596 ;; Auto vars:     Size  Location     Type
 28597 ;;  mode            1   19[BANK0 ] enum E8109
 28598 ;;  cntr            1   21[BANK0 ] unsigned char 
 28599 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 28600 ;; Return value:  Size  Location     Type
 28601 ;;                  1    wreg      void 
 28602 ;; Registers used:
 28603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28604 ;; Tracked objects:
 28605 ;;		On entry : 0/0
 28606 ;;		On exit  : 0/0
 28607 ;;		Unchanged: 0/0
 28608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28609 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28610 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28612 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28613 ;;Total ram usage:        4 bytes
 28614 ;; Hardware stack levels used:    1
 28615 ;; Hardware stack levels required when called:   12
 28616 ;; This function calls:
 28617 ;;		__buck_initial_dutycycle
 28618 ;;		__buck_set_dutycycle
 28619 ;;		__buck_set_sync_async
 28620 ;; This function is called by:
 28621 ;;		__buck_operate_local
 28622 ;;		__buck_operate_remote
 28623 ;; This function uses a non-reentrant model
 28624 ;;
 28625                           
 28626                           	psect	text122
 28627  010786                     __ptext122:
 28628                           	opt stack 0
 28629  010786                     __buck_start:
 28630                           	opt stack 16
 28631                           
 28632                           ;incstack = 0
 28633                           ;__buck_start@mode stored from wreg
 28634  010786  0100               	movlb	0	; () banked
 28635  010788  6F73               	movwf	__buck_start@mode& (0+255),b
 28636                           
 28637                           ;buck.c: 145: uint8_t startup_dutycycle;
 28638                           ;buck.c: 146: uint8_t cntr;
 28639                           ;buck.c: 149: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0
      +                          ;
 28640  01078A  0E00               	movlw	0
 28641  01078C  0103               	movlb	3	; () banked
 28642  01078E  6F23               	movwf	(_calibrationParameters+35)& (0+255),b
 28643  010790  0E00               	movlw	0
 28644  010792  6F22               	movwf	(_calibrationParameters+34)& (0+255),b
 28645                           
 28646                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 28647  010794  0E00               	movlw	0
 28648  010796  0103               	movlb	3	; () banked
 28649  010798  6F2F               	movwf	(_calibrationParameters+47)& (0+255),b
 28650  01079A  0E00               	movlw	0
 28651  01079C  6F2E               	movwf	(_calibrationParameters+46)& (0+255),b
 28652                           
 28653                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 28654  01079E  0E00               	movlw	0
 28655  0107A0  0100               	movlb	0	; () banked
 28656  0107A2  6F75               	movwf	__buck_start@cntr& (0+255),b
 28657  0107A4                     l19891:
 28658                           
 28659                           ; BSR set to: 0
 28660  0107A4  0E03               	movlw	3
 28661  0107A6  0100               	movlb	0	; () banked
 28662  0107A8  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 28663  0107AA  D001               	goto	l19895
 28664  0107AC  D021               	goto	l19901
 28665  0107AE                     l19895:
 28666                           
 28667                           ; BSR set to: 0
 28668                           ;buck.c: 154: {
 28669                           ;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration -= 
      +                          os.input_current_adc[cntr];
 28670  0107AE  0100               	movlb	0	; () banked
 28671  0107B0  5175               	movf	__buck_start@cntr& (0+255),w,b
 28672  0107B2  0D02               	mullw	2
 28673  0107B4  0E14               	movlw	low (_os+20)
 28674  0107B6  24F3               	addwf	prodl,w,c
 28675  0107B8  6ED9               	movwf	fsr2l,c
 28676  0107BA  0E02               	movlw	high (_os+20)
 28677  0107BC  20F4               	addwfc	prodh,w,c
 28678  0107BE  6EDA               	movwf	fsr2h,c
 28679  0107C0  50DE               	movf	postinc2,w,c
 28680  0107C2  0103               	movlb	3	; () banked
 28681  0107C4  5F22               	subwf	(_calibrationParameters+34)& (0+255),f,b
 28682  0107C6  50DD               	movf	postdec2,w,c
 28683  0107C8  0103               	movlb	3	; () banked
 28684  0107CA  5B23               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 28685                           
 28686                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 28687  0107CC  0100               	movlb	0	; () banked
 28688  0107CE  5175               	movf	__buck_start@cntr& (0+255),w,b
 28689  0107D0  0D02               	mullw	2
 28690  0107D2  0E29               	movlw	low (_os+41)
 28691  0107D4  24F3               	addwf	prodl,w,c
 28692  0107D6  6ED9               	movwf	fsr2l,c
 28693  0107D8  0E02               	movlw	high (_os+41)
 28694  0107DA  20F4               	addwfc	prodh,w,c
 28695  0107DC  6EDA               	movwf	fsr2h,c
 28696  0107DE  50DE               	movf	postinc2,w,c
 28697  0107E0  0103               	movlb	3	; () banked
 28698  0107E2  5F2E               	subwf	(_calibrationParameters+46)& (0+255),f,b
 28699  0107E4  50DD               	movf	postdec2,w,c
 28700  0107E6  0103               	movlb	3	; () banked
 28701  0107E8  5B2F               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 28702                           
 28703                           ; BSR set to: 3
 28704  0107EA  0100               	movlb	0	; () banked
 28705  0107EC  2B75               	incf	__buck_start@cntr& (0+255),f,b
 28706  0107EE  D7DA               	goto	l19891
 28707  0107F0                     l19901:
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;buck.c: 159: }
 28711                           ;buck.c: 163: PR2 = 63;
 28712  0107F0  0E3F               	movlw	63
 28713  0107F2  6ECB               	movwf	4043,c	;volatile
 28714                           
 28715                           ;buck.c: 165: TMR2 = 0x00;
 28716  0107F4  0E00               	movlw	0
 28717  0107F6  6ECC               	movwf	4044,c	;volatile
 28718                           
 28719                           ; BSR set to: 0
 28720                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 28721  0107F8  86CA               	bsf	4042,3,c	;volatile
 28722  0107FA  88CA               	bsf	4042,4,c	;volatile
 28723  0107FC  8ACA               	bsf	4042,5,c	;volatile
 28724  0107FE  8CCA               	bsf	4042,6,c	;volatile
 28725                           
 28726                           ; BSR set to: 0
 28727                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 28728  010800  929E               	bcf	3998,1,c	;volatile
 28729                           
 28730                           ; BSR set to: 0
 28731                           ;buck.c: 172: if(buck_status<0x80)
 28732  010802  0E80               	movlw	128
 28733  010804  601C               	cpfslt	_buck_status,c
 28734  010806  D002               	goto	l19911
 28735                           
 28736                           ; BSR set to: 0
 28737                           ;buck.c: 173: {
 28738                           ;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 28739  010808  0E03               	movlw	3
 28740  01080A  D001               	goto	L15
 28741  01080C                     l19911:
 28742                           
 28743                           ; BSR set to: 0
 28744                           ;buck.c: 176: else
 28745                           ;buck.c: 177: {
 28746                           ;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 28747  01080C  0E83               	movlw	131
 28748  01080E                     L15:
 28749  01080E  6E1C               	movwf	_buck_status,c
 28750                           
 28751                           ; BSR set to: 0
 28752                           ;buck.c: 179: }
 28753                           ;buck.c: 182: CCP1CON = 0x00;
 28754  010810  0E00               	movlw	0
 28755  010812  6EBA               	movwf	4026,c	;volatile
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 28759  010814  EC2F  F084         	call	__buck_initial_dutycycle	;wreg free
 28760  010818  0100               	movlb	0	; () banked
 28761  01081A  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 28762                           
 28763                           ; BSR set to: 0
 28764                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 28765  01081C  0100               	movlb	0	; () banked
 28766  01081E  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 28767  010820  EC94  F091         	call	__buck_set_dutycycle
 28768                           
 28769                           ;buck.c: 188: INTCONbits.GIE = 0;
 28770  010824  9EF2               	bcf	intcon,7,c	;volatile
 28771                           
 28772                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 28773  010826  84CA               	bsf	4042,2,c	;volatile
 28774                           
 28775                           ;buck.c: 192: CCP1CON |= 0b00001100;
 28776  010828  0E0C               	movlw	12
 28777  01082A  12BA               	iorwf	4026,f,c	;volatile
 28778                           
 28779                           ;buck.c: 194: CCP1CON |= 0b10000000;
 28780  01082C  8EBA               	bsf	4026,7,c	;volatile
 28781                           
 28782                           ;buck.c: 196: INTCONbits.GIE = 1;
 28783  01082E  8EF2               	bsf	intcon,7,c	;volatile
 28784  010830                     l2503:
 28785  010830  A29E               	btfss	3998,1,c	;volatile
 28786  010832  D7FE               	goto	l2503
 28787                           
 28788                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 28789  010834  0100               	movlb	0	; () banked
 28790  010836  0573               	decf	__buck_start@mode& (0+255),w,b
 28791  010838  A4D8               	btfss	status,2,c
 28792  01083A  D00B               	goto	l19933
 28793                           
 28794                           ; BSR set to: 0
 28795                           ;buck.c: 203: {
 28796                           ;buck.c: 205: if(dutycycle!=startup_dutycycle)
 28797  01083C  0100               	movlb	0	; () banked
 28798  01083E  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 28799  010840  0100               	movlb	0	; () banked
 28800  010842  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 28801  010844  B4D8               	btfsc	status,2,c
 28802  010846  0012               	return	
 28803                           
 28804                           ; BSR set to: 0
 28805                           ;buck.c: 206: {
 28806                           ;buck.c: 207: _buck_set_dutycycle(dutycycle);
 28807  010848  0100               	movlb	0	; () banked
 28808  01084A  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 28809  01084C  EC94  F091         	call	__buck_set_dutycycle
 28810                           
 28811                           ;buck.c: 208: }
 28812                           ;buck.c: 209: }
 28813  010850  0012               	return	
 28814  010852                     l19933:
 28815                           
 28816                           ;buck.c: 210: else
 28817                           ;buck.c: 211: {
 28818                           ;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, dutycycle);
 28819  010852  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 28820  010856  0E00               	movlw	0
 28821  010858  EC39  F093         	call	__buck_set_sync_async
 28822  01085C  0012               	return	
 28823  01085E                     __end_of__buck_start:
 28824                           	opt stack 0
 28825                           tblptru	equ	0xFF8
 28826                           tblptrh	equ	0xFF7
 28827                           tblptrl	equ	0xFF6
 28828                           tablat	equ	0xFF5
 28829                           prodh	equ	0xFF4
 28830                           prodl	equ	0xFF3
 28831                           intcon	equ	0xFF2
 28832                           intcon2	equ	0xFF1
 28833                           intcon3	equ	0xFF0
 28834                           postinc0	equ	0xFEE
 28835                           wreg	equ	0xFE8
 28836                           indf1	equ	0xFE7
 28837                           postinc1	equ	0xFE6
 28838                           postdec1	equ	0xFE5
 28839                           plusw1	equ	0xFE3
 28840                           fsr1h	equ	0xFE2
 28841                           fsr1l	equ	0xFE1
 28842                           indf2	equ	0xFDF
 28843                           postinc2	equ	0xFDE
 28844                           postdec2	equ	0xFDD
 28845                           plusw2	equ	0xFDB
 28846                           fsr2h	equ	0xFDA
 28847                           fsr2l	equ	0xFD9
 28848                           status	equ	0xFD8
 28849                           
 28850 ;; *************** function __buck_set_sync_async *****************
 28851 ;; Defined at:
 28852 ;;		line 217 in file "buck.c"
 28853 ;; Parameters:    Size  Location     Type
 28854 ;;  mode            1    wreg     enum E8109
 28855 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 28856 ;; Auto vars:     Size  Location     Type
 28857 ;;  mode            1    3[BANK0 ] enum E8109
 28858 ;; Return value:  Size  Location     Type
 28859 ;;                  1    wreg      void 
 28860 ;; Registers used:
 28861 ;;		wreg, status,2, status,0, cstack
 28862 ;; Tracked objects:
 28863 ;;		On entry : 0/0
 28864 ;;		On exit  : 0/0
 28865 ;;		Unchanged: 0/0
 28866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28867 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28871 ;;Total ram usage:        2 bytes
 28872 ;; Hardware stack levels used:    1
 28873 ;; Hardware stack levels required when called:   11
 28874 ;; This function calls:
 28875 ;;		__buck_set_dutycycle
 28876 ;; This function is called by:
 28877 ;;		__buck_start
 28878 ;;		__buck_operate_local
 28879 ;;		__buck_operate_remote
 28880 ;; This function uses a non-reentrant model
 28881 ;;
 28882                           
 28883                           	psect	text123
 28884  012672                     __ptext123:
 28885                           	opt stack 0
 28886  012672                     __buck_set_sync_async:
 28887                           	opt stack 16
 28888                           
 28889                           ;incstack = 0
 28890                           ;__buck_set_sync_async@mode stored from wreg
 28891  012672  0100               	movlb	0	; () banked
 28892  012674  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 28893                           
 28894                           ;buck.c: 219: switch(mode)
 28895  012676  D02E               	goto	l19215
 28896  012678                     l2513:
 28897                           
 28898                           ; BSR set to: 0
 28899                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 28900  012678  96CA               	bcf	4042,3,c	;volatile
 28901  01267A  98CA               	bcf	4042,4,c	;volatile
 28902  01267C  9ACA               	bcf	4042,5,c	;volatile
 28903  01267E  9CCA               	bcf	4042,6,c	;volatile
 28904                           
 28905                           ;buck.c: 228: INTCONbits.GIE = 0;
 28906  012680  9EF2               	bcf	intcon,7,c	;volatile
 28907                           
 28908                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 28909  012682  929E               	bcf	3998,1,c	;volatile
 28910  012684                     l2514:
 28911  012684  A29E               	btfss	3998,1,c	;volatile
 28912  012686  D7FE               	goto	l2514
 28913                           
 28914                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 28915  012688  9EBA               	bcf	4026,7,c	;volatile
 28916                           
 28917                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 28918  01268A  9CBA               	bcf	4026,6,c	;volatile
 28919                           
 28920                           ;buck.c: 237: if(buck_status<0x80)
 28921  01268C  0E80               	movlw	128
 28922  01268E  601C               	cpfslt	_buck_status,c
 28923  012690  D002               	goto	l19187
 28924                           
 28925                           ;buck.c: 238: {
 28926                           ;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 28927  012692  0E02               	movlw	2
 28928  012694  D001               	goto	L16
 28929  012696                     l19187:
 28930                           
 28931                           ;buck.c: 241: else
 28932                           ;buck.c: 242: {
 28933                           ;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRONOUS;
 28934  012696  0E82               	movlw	130
 28935  012698                     L16:
 28936  012698  6E1C               	movwf	_buck_status,c
 28937                           
 28938                           ;buck.c: 244: }
 28939                           ;buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 28940  01269A  0100               	movlb	0	; () banked
 28941  01269C  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 28942  01269E  EC94  F091         	call	__buck_set_dutycycle
 28943                           
 28944                           ;buck.c: 248: INTCONbits.GIE = 1;
 28945  0126A2  8EF2               	bsf	intcon,7,c	;volatile
 28946                           
 28947                           ;buck.c: 249: break;
 28948  0126A4  0012               	return	
 28949  0126A6                     l19193:
 28950                           
 28951                           ;buck.c: 255: if(buck_status<0x80)
 28952  0126A6  0E80               	movlw	128
 28953  0126A8  601C               	cpfslt	_buck_status,c
 28954  0126AA  D002               	goto	l19197
 28955                           
 28956                           ;buck.c: 256: {
 28957                           ;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 28958  0126AC  0E03               	movlw	3
 28959  0126AE  D001               	goto	L17
 28960  0126B0                     l19197:
 28961                           
 28962                           ;buck.c: 259: else
 28963                           ;buck.c: 260: {
 28964                           ;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 28965  0126B0  0E83               	movlw	131
 28966  0126B2                     L17:
 28967  0126B2  6E1C               	movwf	_buck_status,c
 28968                           
 28969                           ;buck.c: 262: }
 28970                           ;buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 28971  0126B4  96CA               	bcf	4042,3,c	;volatile
 28972  0126B6  98CA               	bcf	4042,4,c	;volatile
 28973  0126B8  9ACA               	bcf	4042,5,c	;volatile
 28974  0126BA  9CCA               	bcf	4042,6,c	;volatile
 28975                           
 28976                           ;buck.c: 267: INTCONbits.GIE = 0;
 28977  0126BC  9EF2               	bcf	intcon,7,c	;volatile
 28978                           
 28979                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 28980  0126BE  929E               	bcf	3998,1,c	;volatile
 28981  0126C0                     l2523:
 28982  0126C0  A29E               	btfss	3998,1,c	;volatile
 28983  0126C2  D7FE               	goto	l2523
 28984                           
 28985                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 28986  0126C4  0100               	movlb	0	; () banked
 28987  0126C6  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 28988  0126C8  EC94  F091         	call	__buck_set_dutycycle
 28989                           
 28990                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 28991  0126CC  8EBA               	bsf	4026,7,c	;volatile
 28992                           
 28993                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 28994  0126CE  9CBA               	bcf	4026,6,c	;volatile
 28995                           
 28996                           ;buck.c: 278: INTCONbits.GIE = 1;
 28997  0126D0  8EF2               	bsf	intcon,7,c	;volatile
 28998                           
 28999                           ;buck.c: 280: }
 29000                           
 29001                           ;buck.c: 279: break;
 29002  0126D2  0012               	return	
 29003  0126D4                     l19215:
 29004  0126D4  0100               	movlb	0	; () banked
 29005  0126D6  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 29006                           
 29007                           ; Switch size 1, requested type "space"
 29008                           ; Number of cases is 2, Range of values is 0 to 1
 29009                           ; switch strategies available:
 29010                           ; Name         Instructions Cycles
 29011                           ; simple_byte            7     4 (average)
 29012                           ;	Chosen strategy is simple_byte
 29013  0126D8  0A00               	xorlw	0	; case 0
 29014  0126DA  B4D8               	btfsc	status,2,c
 29015  0126DC  D7CD               	goto	l2513
 29016  0126DE  0A01               	xorlw	1	; case 1
 29017  0126E0  A4D8               	btfss	status,2,c
 29018  0126E2  0012               	return	
 29019  0126E4  D7E0               	goto	l19193
 29020  0126E6                     __end_of__buck_set_sync_async:
 29021                           	opt stack 0
 29022                           tblptru	equ	0xFF8
 29023                           tblptrh	equ	0xFF7
 29024                           tblptrl	equ	0xFF6
 29025                           tablat	equ	0xFF5
 29026                           prodh	equ	0xFF4
 29027                           prodl	equ	0xFF3
 29028                           intcon	equ	0xFF2
 29029                           intcon2	equ	0xFF1
 29030                           intcon3	equ	0xFF0
 29031                           postinc0	equ	0xFEE
 29032                           wreg	equ	0xFE8
 29033                           indf1	equ	0xFE7
 29034                           postinc1	equ	0xFE6
 29035                           postdec1	equ	0xFE5
 29036                           plusw1	equ	0xFE3
 29037                           fsr1h	equ	0xFE2
 29038                           fsr1l	equ	0xFE1
 29039                           indf2	equ	0xFDF
 29040                           postinc2	equ	0xFDE
 29041                           postdec2	equ	0xFDD
 29042                           plusw2	equ	0xFDB
 29043                           fsr2h	equ	0xFDA
 29044                           fsr2l	equ	0xFD9
 29045                           status	equ	0xFD8
 29046                           
 29047 ;; *************** function __buck_set_dutycycle *****************
 29048 ;; Defined at:
 29049 ;;		line 98 in file "buck.c"
 29050 ;; Parameters:    Size  Location     Type
 29051 ;;  dutyCycle       1    wreg     unsigned char 
 29052 ;; Auto vars:     Size  Location     Type
 29053 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 29054 ;; Return value:  Size  Location     Type
 29055 ;;                  1    wreg      void 
 29056 ;; Registers used:
 29057 ;;		wreg, status,2, status,0
 29058 ;; Tracked objects:
 29059 ;;		On entry : 0/0
 29060 ;;		On exit  : 0/0
 29061 ;;		Unchanged: 0/0
 29062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29067 ;;Total ram usage:        2 bytes
 29068 ;; Hardware stack levels used:    1
 29069 ;; Hardware stack levels required when called:   10
 29070 ;; This function calls:
 29071 ;;		Nothing
 29072 ;; This function is called by:
 29073 ;;		__buck_start
 29074 ;;		__buck_set_sync_async
 29075 ;;		__buck_operate_local
 29076 ;;		__buck_operate_remote
 29077 ;; This function uses a non-reentrant model
 29078 ;;
 29079                           
 29080                           	psect	text124
 29081  012328                     __ptext124:
 29082                           	opt stack 0
 29083  012328                     __buck_set_dutycycle:
 29084                           	opt stack 16
 29085                           
 29086                           ;incstack = 0
 29087                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 29088  012328  0100               	movlb	0	; () banked
 29089  01232A  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29090                           
 29091                           ;buck.c: 101: if(dutyCycle>242)
 29092  01232C  0EF2               	movlw	242
 29093  01232E  0100               	movlb	0	; () banked
 29094  012330  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 29095  012332  D003               	goto	l18859
 29096                           
 29097                           ; BSR set to: 0
 29098                           ;buck.c: 102: dutyCycle = 242;
 29099  012334  0EF2               	movlw	242
 29100  012336  0100               	movlb	0	; () banked
 29101  012338  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29102  01233A                     l18859:
 29103                           
 29104                           ; BSR set to: 0
 29105                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 29106  01233A  0E03               	movlw	3
 29107  01233C  181C               	xorwf	_buck_status,w,c
 29108  01233E  B4D8               	btfsc	status,2,c
 29109  012340  D004               	goto	l18863
 29110                           
 29111                           ; BSR set to: 0
 29112  012342  0E83               	movlw	131
 29113  012344  181C               	xorwf	_buck_status,w,c
 29114  012346  A4D8               	btfss	status,2,c
 29115  012348  D007               	goto	l18867
 29116  01234A                     l18863:
 29117                           
 29118                           ; BSR set to: 0
 29119                           ;buck.c: 104: {
 29120                           ;buck.c: 105: if(dutyCycle<150)
 29121  01234A  0E96               	movlw	150
 29122  01234C  0100               	movlb	0	; () banked
 29123  01234E  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 29124  012350  D003               	goto	l18867
 29125                           
 29126                           ; BSR set to: 0
 29127                           ;buck.c: 106: dutyCycle = 150;
 29128  012352  0E96               	movlw	150
 29129  012354  0100               	movlb	0	; () banked
 29130  012356  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29131  012358                     l18867:
 29132                           
 29133                           ; BSR set to: 0
 29134                           ;buck.c: 107: }
 29135                           ;buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BUCK_STATUS_REMOT
      +                          E_ASYNCHRONOUS)
 29136  012358  0E02               	movlw	2
 29137  01235A  181C               	xorwf	_buck_status,w,c
 29138  01235C  B4D8               	btfsc	status,2,c
 29139  01235E  D004               	goto	l18871
 29140                           
 29141                           ; BSR set to: 0
 29142  012360  0E82               	movlw	130
 29143  012362  181C               	xorwf	_buck_status,w,c
 29144  012364  A4D8               	btfss	status,2,c
 29145  012366  D007               	goto	l18875
 29146  012368                     l18871:
 29147                           
 29148                           ; BSR set to: 0
 29149                           ;buck.c: 109: {
 29150                           ;buck.c: 110: if(dutyCycle<40)
 29151  012368  0E28               	movlw	40
 29152  01236A  0100               	movlb	0	; () banked
 29153  01236C  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 29154  01236E  D003               	goto	l18875
 29155                           
 29156                           ; BSR set to: 0
 29157                           ;buck.c: 111: dutyCycle = 40;
 29158  012370  0E28               	movlw	40
 29159  012372  0100               	movlb	0	; () banked
 29160  012374  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 29161  012376                     l18875:
 29162                           
 29163                           ; BSR set to: 0
 29164                           ;buck.c: 112: }
 29165                           ;buck.c: 114: buck_dutycycle = dutyCycle;
 29166  012376  C061  F0E4         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;buck.c: 116: INTCONbits.GIE = 0;
 29170  01237A  9EF2               	bcf	intcon,7,c	;volatile
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 29174  01237C  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 29175  012380  0E03               	movlw	3
 29176  012382  0100               	movlb	0	; () banked
 29177  012384  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 29178  012386  0100               	movlb	0	; () banked
 29179  012388  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 29180  01238A  50BA               	movf	4026,w,c	;volatile
 29181  01238C  0100               	movlb	0	; () banked
 29182  01238E  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 29183  012390  0BCF               	andlw	-49
 29184  012392  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 29185  012394  6EBA               	movwf	4026,c	;volatile
 29186                           
 29187                           ; BSR set to: 0
 29188                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 29189  012396  0100               	movlb	0	; () banked
 29190  012398  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 29191  01239A  42E8               	rrncf	wreg,f,c
 29192  01239C  0B3F               	andlw	63
 29193  01239E  6EBB               	movwf	4027,c	;volatile
 29194                           
 29195                           ; BSR set to: 0
 29196                           ;buck.c: 122: INTCONbits.GIE = 1;
 29197  0123A0  8EF2               	bsf	intcon,7,c	;volatile
 29198                           
 29199                           ; BSR set to: 0
 29200  0123A2  0012               	return		;funcret
 29201  0123A4                     __end_of__buck_set_dutycycle:
 29202                           	opt stack 0
 29203                           tblptru	equ	0xFF8
 29204                           tblptrh	equ	0xFF7
 29205                           tblptrl	equ	0xFF6
 29206                           tablat	equ	0xFF5
 29207                           prodh	equ	0xFF4
 29208                           prodl	equ	0xFF3
 29209                           intcon	equ	0xFF2
 29210                           intcon2	equ	0xFF1
 29211                           intcon3	equ	0xFF0
 29212                           postinc0	equ	0xFEE
 29213                           wreg	equ	0xFE8
 29214                           indf1	equ	0xFE7
 29215                           postinc1	equ	0xFE6
 29216                           postdec1	equ	0xFE5
 29217                           plusw1	equ	0xFE3
 29218                           fsr1h	equ	0xFE2
 29219                           fsr1l	equ	0xFE1
 29220                           indf2	equ	0xFDF
 29221                           postinc2	equ	0xFDE
 29222                           postdec2	equ	0xFDD
 29223                           plusw2	equ	0xFDB
 29224                           fsr2h	equ	0xFDA
 29225                           fsr2l	equ	0xFD9
 29226                           status	equ	0xFD8
 29227                           
 29228 ;; *************** function __buck_initial_dutycycle *****************
 29229 ;; Defined at:
 29230 ;;		line 81 in file "buck.c"
 29231 ;; Parameters:    Size  Location     Type
 29232 ;;		None
 29233 ;; Auto vars:     Size  Location     Type
 29234 ;;  dc              4   14[BANK0 ] unsigned long 
 29235 ;; Return value:  Size  Location     Type
 29236 ;;                  1    wreg      unsigned char 
 29237 ;; Registers used:
 29238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29239 ;; Tracked objects:
 29240 ;;		On entry : 0/0
 29241 ;;		On exit  : 0/0
 29242 ;;		Unchanged: 0/0
 29243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29245 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29246 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29247 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29248 ;;Total ram usage:        5 bytes
 29249 ;; Hardware stack levels used:    1
 29250 ;; Hardware stack levels required when called:   11
 29251 ;; This function calls:
 29252 ;;		___lldiv
 29253 ;; This function is called by:
 29254 ;;		__buck_start
 29255 ;;		__buck_operate_local
 29256 ;;		__buck_operate_remote
 29257 ;; This function uses a non-reentrant model
 29258 ;;
 29259                           
 29260                           	psect	text125
 29261  01085E                     __ptext125:
 29262                           	opt stack 0
 29263  01085E                     __buck_initial_dutycycle:
 29264                           	opt stack 16
 29265                           
 29266                           ;buck.c: 83: uint32_t dc;
 29267                           ;buck.c: 85: if(os.input_voltage<os.output_voltage)
 29268                           
 29269                           ; BSR set to: 0
 29270                           ;incstack = 0
 29271  01085E  0102               	movlb	2	; () banked
 29272  010860  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 29273  010862  0102               	movlb	2	; () banked
 29274  010864  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 29275  010866  0102               	movlb	2	; () banked
 29276  010868  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 29277  01086A  0A80               	xorlw	128
 29278  01086C  0100               	movlb	0	; () banked
 29279  01086E  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 29280  010870  0102               	movlb	2	; () banked
 29281  010872  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 29282  010874  0A80               	xorlw	128
 29283  010876  0100               	movlb	0	; () banked
 29284  010878  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 29285  01087A  B0D8               	btfsc	status,0,c
 29286  01087C  D002               	goto	l19165
 29287                           
 29288                           ; BSR set to: 0
 29289                           ;buck.c: 86: return 242;
 29290  01087E  0EF2               	movlw	242
 29291                           
 29292                           ; BSR set to: 0
 29293  010880  0012               	return	
 29294  010882                     l19165:
 29295                           
 29296                           ; BSR set to: 0
 29297                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 29298  010882  EE22  F027         	lfsr	2,_os+39	;volatile
 29299  010886  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 29300  01088A  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 29301  01088E  0100               	movlb	0	; () banked
 29302  010890  0E00               	movlw	0
 29303  010892  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 29304  010894  0EFF               	movlw	-1
 29305  010896  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 29306  010898  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 29307                           
 29308                           ; BSR set to: 0
 29309                           ;buck.c: 88: dc <<= 8;
 29310  01089A  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 29311  01089E  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 29312  0108A2  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 29313  0108A6  0100               	movlb	0	; () banked
 29314  0108A8  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 29315                           
 29316                           ; BSR set to: 0
 29317                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 29318  0108AA  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 29319  0108AE  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 29320  0108B2  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 29321  0108B6  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 29322  0108BA  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 29323  0108BE  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 29324  0108C2  0100               	movlb	0	; () banked
 29325  0108C4  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 29326  0108C6  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 29327  0108C8  EC78  F088         	call	___lldiv	;wreg free
 29328  0108CC  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 29329  0108D0  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 29330  0108D4  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 29331  0108D8  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 29332                           
 29333                           ;buck.c: 91: if(dc>242)
 29334  0108DC  0100               	movlb	0	; () banked
 29335  0108DE  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 29336  0108E0  0100               	movlb	0	; () banked
 29337  0108E2  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 29338  0108E4  0100               	movlb	0	; () banked
 29339  0108E6  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 29340  0108E8  E105               	bnz	u18150
 29341  0108EA  0EF3               	movlw	243
 29342  0108EC  0100               	movlb	0	; () banked
 29343  0108EE  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 29344  0108F0  A0D8               	btfss	status,0,c
 29345  0108F2  D009               	goto	l19175
 29346  0108F4                     u18150:
 29347                           
 29348                           ; BSR set to: 0
 29349                           ;buck.c: 92: dc = 242;
 29350  0108F4  0EF2               	movlw	242
 29351  0108F6  0100               	movlb	0	; () banked
 29352  0108F8  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 29353  0108FA  0E00               	movlw	0
 29354  0108FC  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 29355  0108FE  0E00               	movlw	0
 29356  010900  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 29357  010902  0E00               	movlw	0
 29358  010904  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 29359  010906                     l19175:
 29360                           
 29361                           ; BSR set to: 0
 29362                           ;buck.c: 93: if(dc<150)
 29363  010906  0100               	movlb	0	; () banked
 29364  010908  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 29365  01090A  0100               	movlb	0	; () banked
 29366  01090C  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 29367  01090E  0100               	movlb	0	; () banked
 29368  010910  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 29369  010912  E10E               	bnz	l2477
 29370  010914  0E96               	movlw	150
 29371  010916  0100               	movlb	0	; () banked
 29372  010918  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 29373  01091A  B0D8               	btfsc	status,0,c
 29374  01091C  D009               	goto	l2477
 29375                           
 29376                           ; BSR set to: 0
 29377                           ;buck.c: 94: dc = 150;
 29378  01091E  0E96               	movlw	150
 29379  010920  0100               	movlb	0	; () banked
 29380  010922  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 29381  010924  0E00               	movlw	0
 29382  010926  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 29383  010928  0E00               	movlw	0
 29384  01092A  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 29385  01092C  0E00               	movlw	0
 29386  01092E  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 29387  010930                     l2477:
 29388                           
 29389                           ; BSR set to: 0
 29390                           ;buck.c: 95: return (uint8_t) dc;
 29391  010930  0100               	movlb	0	; () banked
 29392  010932  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 29393  010934  0012               	return	
 29394  010936                     __end_of__buck_initial_dutycycle:
 29395                           	opt stack 0
 29396                           tblptru	equ	0xFF8
 29397                           tblptrh	equ	0xFF7
 29398                           tblptrl	equ	0xFF6
 29399                           tablat	equ	0xFF5
 29400                           prodh	equ	0xFF4
 29401                           prodl	equ	0xFF3
 29402                           intcon	equ	0xFF2
 29403                           intcon2	equ	0xFF1
 29404                           intcon3	equ	0xFF0
 29405                           postinc0	equ	0xFEE
 29406                           wreg	equ	0xFE8
 29407                           indf1	equ	0xFE7
 29408                           postinc1	equ	0xFE6
 29409                           postdec1	equ	0xFE5
 29410                           plusw1	equ	0xFE3
 29411                           fsr1h	equ	0xFE2
 29412                           fsr1l	equ	0xFE1
 29413                           indf2	equ	0xFDF
 29414                           postinc2	equ	0xFDE
 29415                           postdec2	equ	0xFDD
 29416                           plusw2	equ	0xFDB
 29417                           fsr2h	equ	0xFDA
 29418                           fsr2l	equ	0xFD9
 29419                           status	equ	0xFD8
 29420                           
 29421 ;; *************** function ___lldiv *****************
 29422 ;; Defined at:
 29423 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 29424 ;; Parameters:    Size  Location     Type
 29425 ;;  dividend        4    0[BANK0 ] unsigned long 
 29426 ;;  divisor         4    4[BANK0 ] unsigned long 
 29427 ;; Auto vars:     Size  Location     Type
 29428 ;;  quotient        4    8[BANK0 ] unsigned long 
 29429 ;;  counter         1   12[BANK0 ] unsigned char 
 29430 ;; Return value:  Size  Location     Type
 29431 ;;                  4    0[BANK0 ] unsigned long 
 29432 ;; Registers used:
 29433 ;;		wreg, status,2, status,0
 29434 ;; Tracked objects:
 29435 ;;		On entry : 0/0
 29436 ;;		On exit  : 0/0
 29437 ;;		Unchanged: 0/0
 29438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29439 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29440 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29442 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29443 ;;Total ram usage:       13 bytes
 29444 ;; Hardware stack levels used:    1
 29445 ;; Hardware stack levels required when called:   10
 29446 ;; This function calls:
 29447 ;;		Nothing
 29448 ;; This function is called by:
 29449 ;;		__buck_initial_dutycycle
 29450 ;;		__get_output_power
 29451 ;;		_log_generate_entry
 29452 ;; This function uses a non-reentrant model
 29453 ;;
 29454                           
 29455                           	psect	text126
 29456  0110F0                     __ptext126:
 29457                           	opt stack 0
 29458  0110F0                     ___lldiv:
 29459                           	opt stack 18
 29460                           
 29461                           ; BSR set to: 0
 29462                           ;incstack = 0
 29463  0110F0  0E00               	movlw	0
 29464  0110F2  0100               	movlb	0	; () banked
 29465  0110F4  6F68               	movwf	___lldiv@quotient& (0+255),b
 29466  0110F6  0E00               	movlw	0
 29467  0110F8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 29468  0110FA  0E00               	movlw	0
 29469  0110FC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 29470  0110FE  0E00               	movlw	0
 29471  011100  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 29472                           
 29473                           ; BSR set to: 0
 29474  011102  0100               	movlb	0	; () banked
 29475  011104  5164               	movf	___lldiv@divisor& (0+255),w,b
 29476  011106  0100               	movlb	0	; () banked
 29477  011108  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29478  01110A  0100               	movlb	0	; () banked
 29479  01110C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29480  01110E  0100               	movlb	0	; () banked
 29481  011110  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29482  011112  B4D8               	btfsc	status,2,c
 29483  011114  D042               	goto	l3680
 29484                           
 29485                           ; BSR set to: 0
 29486  011116  0E01               	movlw	1
 29487  011118  0100               	movlb	0	; () banked
 29488  01111A  6F6C               	movwf	___lldiv@counter& (0+255),b
 29489  01111C  D008               	goto	l18941
 29490  01111E                     l18939:
 29491                           
 29492                           ; BSR set to: 0
 29493  01111E  0100               	movlb	0	; () banked
 29494  011120  90D8               	bcf	status,0,c
 29495  011122  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 29496  011124  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29497  011126  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29498  011128  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29499  01112A  0100               	movlb	0	; () banked
 29500  01112C  2B6C               	incf	___lldiv@counter& (0+255),f,b
 29501  01112E                     l18941:
 29502                           
 29503                           ; BSR set to: 0
 29504  01112E  0100               	movlb	0	; () banked
 29505  011130  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29506  011132  D7F5               	goto	l18939
 29507  011134                     l18943:
 29508                           
 29509                           ; BSR set to: 0
 29510  011134  0100               	movlb	0	; () banked
 29511  011136  90D8               	bcf	status,0,c
 29512  011138  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 29513  01113A  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29514  01113C  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29515  01113E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29516                           
 29517                           ; BSR set to: 0
 29518  011140  0100               	movlb	0	; () banked
 29519  011142  5164               	movf	___lldiv@divisor& (0+255),w,b
 29520  011144  0100               	movlb	0	; () banked
 29521  011146  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 29522  011148  0100               	movlb	0	; () banked
 29523  01114A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29524  01114C  0100               	movlb	0	; () banked
 29525  01114E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29526  011150  0100               	movlb	0	; () banked
 29527  011152  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29528  011154  0100               	movlb	0	; () banked
 29529  011156  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29530  011158  0100               	movlb	0	; () banked
 29531  01115A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29532  01115C  0100               	movlb	0	; () banked
 29533  01115E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29534  011160  A0D8               	btfss	status,0,c
 29535  011162  D012               	goto	l18951
 29536                           
 29537                           ; BSR set to: 0
 29538  011164  0100               	movlb	0	; () banked
 29539  011166  5164               	movf	___lldiv@divisor& (0+255),w,b
 29540  011168  0100               	movlb	0	; () banked
 29541  01116A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 29542  01116C  0100               	movlb	0	; () banked
 29543  01116E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29544  011170  0100               	movlb	0	; () banked
 29545  011172  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29546  011174  0100               	movlb	0	; () banked
 29547  011176  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29548  011178  0100               	movlb	0	; () banked
 29549  01117A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29550  01117C  0100               	movlb	0	; () banked
 29551  01117E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29552  011180  0100               	movlb	0	; () banked
 29553  011182  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29554                           
 29555                           ; BSR set to: 0
 29556  011184  0100               	movlb	0	; () banked
 29557  011186  8168               	bsf	___lldiv@quotient& (0+255),0,b
 29558  011188                     l18951:
 29559                           
 29560                           ; BSR set to: 0
 29561  011188  0100               	movlb	0	; () banked
 29562  01118A  90D8               	bcf	status,0,c
 29563  01118C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29564  01118E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29565  011190  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29566  011192  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 29567                           
 29568                           ; BSR set to: 0
 29569  011194  0100               	movlb	0	; () banked
 29570  011196  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 29571  011198  D7CD               	goto	l18943
 29572  01119A                     l3680:
 29573                           
 29574                           ; BSR set to: 0
 29575  01119A  C068  F060         	movff	___lldiv@quotient,?___lldiv
 29576  01119E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 29577  0111A2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 29578  0111A6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 29579                           
 29580                           ; BSR set to: 0
 29581  0111AA  0012               	return		;funcret
 29582  0111AC                     __end_of___lldiv:
 29583                           	opt stack 0
 29584                           tblptru	equ	0xFF8
 29585                           tblptrh	equ	0xFF7
 29586                           tblptrl	equ	0xFF6
 29587                           tablat	equ	0xFF5
 29588                           prodh	equ	0xFF4
 29589                           prodl	equ	0xFF3
 29590                           intcon	equ	0xFF2
 29591                           intcon2	equ	0xFF1
 29592                           intcon3	equ	0xFF0
 29593                           postinc0	equ	0xFEE
 29594                           wreg	equ	0xFE8
 29595                           indf1	equ	0xFE7
 29596                           postinc1	equ	0xFE6
 29597                           postdec1	equ	0xFE5
 29598                           plusw1	equ	0xFE3
 29599                           fsr1h	equ	0xFE2
 29600                           fsr1l	equ	0xFE1
 29601                           indf2	equ	0xFDF
 29602                           postinc2	equ	0xFDE
 29603                           postdec2	equ	0xFDD
 29604                           plusw2	equ	0xFDB
 29605                           fsr2h	equ	0xFDA
 29606                           fsr2l	equ	0xFD9
 29607                           status	equ	0xFD8
 29608                           
 29609 ;; *************** function _adc_read *****************
 29610 ;; Defined at:
 29611 ;;		line 30 in file "adc.c"
 29612 ;; Parameters:    Size  Location     Type
 29613 ;;  channel         1    wreg     enum E8221
 29614 ;; Auto vars:     Size  Location     Type
 29615 ;;  channel         1    2[BANK0 ] enum E8221
 29616 ;;  adc_value       2    3[BANK0 ] unsigned int 
 29617 ;; Return value:  Size  Location     Type
 29618 ;;                  2    0[BANK0 ] unsigned int 
 29619 ;; Registers used:
 29620 ;;		wreg, status,2, status,0
 29621 ;; Tracked objects:
 29622 ;;		On entry : 0/0
 29623 ;;		On exit  : 0/0
 29624 ;;		Unchanged: 0/0
 29625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29626 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29627 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29629 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29630 ;;Total ram usage:        5 bytes
 29631 ;; Hardware stack levels used:    1
 29632 ;; Hardware stack levels required when called:   10
 29633 ;; This function calls:
 29634 ;;		Nothing
 29635 ;; This function is called by:
 29636 ;;		_main
 29637 ;; This function uses a non-reentrant model
 29638 ;;
 29639                           
 29640                           	psect	text127
 29641  011C56                     __ptext127:
 29642                           	opt stack 0
 29643  011C56                     _adc_read:
 29644                           	opt stack 20
 29645                           
 29646                           ; BSR set to: 0
 29647                           ;incstack = 0
 29648                           ;adc_read@channel stored from wreg
 29649  011C56  0100               	movlb	0	; () banked
 29650  011C58  6F62               	movwf	adc_read@channel& (0+255),b
 29651                           
 29652                           ;adc.c: 32: uint16_t adc_value;
 29653                           ;adc.c: 34: switch(channel)
 29654  011C5A  D011               	goto	l22417
 29655  011C5C                     l22409:
 29656                           
 29657                           ;adc.c: 37: ADCON0bits.CHS = 0b1100;
 29658  011C5C  50C2               	movf	4034,w,c	;volatile
 29659  011C5E  0BC3               	andlw	-61
 29660  011C60  0930               	iorlw	48
 29661  011C62  D007               	goto	L19
 29662  011C64                     l22411:
 29663                           
 29664                           ;adc.c: 40: ADCON0bits.CHS = 0b0001;
 29665  011C64  50C2               	movf	4034,w,c	;volatile
 29666  011C66  0BC3               	andlw	-61
 29667  011C68  0904               	iorlw	4
 29668  011C6A  D003               	goto	L19
 29669  011C6C                     l22413:
 29670                           
 29671                           ;adc.c: 43: ADCON0bits.CHS = 0b0010;
 29672  011C6C  50C2               	movf	4034,w,c	;volatile
 29673  011C6E  0BC3               	andlw	-61
 29674  011C70  0908               	iorlw	8
 29675  011C72                     L19:
 29676  011C72  6EC2               	movwf	4034,c	;volatile
 29677                           
 29678                           ;adc.c: 44: break;
 29679  011C74  D018               	goto	l22425
 29680  011C76                     l2686:
 29681                           
 29682                           ; BSR set to: 0
 29683                           ;adc.c: 46: return 0xFFFF;
 29684  011C76  0100               	movlb	0	; () banked
 29685  011C78  6960               	setf	?_adc_read& (0+255),b
 29686  011C7A  6961               	setf	(?_adc_read+1)& (0+255),b
 29687  011C7C  0012               	return	
 29688  011C7E                     l22417:
 29689  011C7E  0100               	movlb	0	; () banked
 29690  011C80  5162               	movf	adc_read@channel& (0+255),w,b
 29691                           
 29692                           ; Switch size 1, requested type "space"
 29693                           ; Number of cases is 3, Range of values is 0 to 2
 29694                           ; switch strategies available:
 29695                           ; Name         Instructions Cycles
 29696                           ; simple_byte           10     6 (average)
 29697                           ;	Chosen strategy is simple_byte
 29698  011C82  0A00               	xorlw	0	; case 0
 29699  011C84  B4D8               	btfsc	status,2,c
 29700  011C86  D7EA               	goto	l22409
 29701  011C88  0A01               	xorlw	1	; case 1
 29702  011C8A  B4D8               	btfsc	status,2,c
 29703  011C8C  D7EB               	goto	l22411
 29704  011C8E  0A03               	xorlw	3	; case 2
 29705  011C90  B4D8               	btfsc	status,2,c
 29706  011C92  D7EC               	goto	l22413
 29707  011C94  D7F0               	goto	l2686
 29708  011C96                     l22419:
 29709                           
 29710                           ;adc.c: 53: _delay((unsigned long)((15)*(8000000/4000000.0)));
 29711  011C96  0E0A               	movlw	10
 29712  011C98                     u23257:
 29713  011C98  2EE8               	decfsz	wreg,f,c
 29714  011C9A  D7FE               	bra	u23257
 29715                           
 29716                           ;adc.c: 54: break;
 29717  011C9C  D00C               	goto	l2690
 29718  011C9E                     l22421:
 29719                           
 29720                           ;adc.c: 56: _delay((unsigned long)((90)*(8000000/4000000.0)));
 29721  011C9E  0E3C               	movlw	60
 29722  011CA0                     u23267:
 29723  011CA0  2EE8               	decfsz	wreg,f,c
 29724  011CA2  D7FE               	bra	u23267
 29725                           
 29726                           ;adc.c: 58: }
 29727                           
 29728                           ;adc.c: 57: break;
 29729  011CA4  D008               	goto	l2690
 29730  011CA6                     l22425:
 29731  011CA6  0102               	movlb	2	; () banked
 29732  011CA8  5100               	movf	_os& (0+255),w,b	;volatile
 29733                           
 29734                           ; Switch size 1, requested type "space"
 29735                           ; Number of cases is 2, Range of values is 1 to 2
 29736                           ; switch strategies available:
 29737                           ; Name         Instructions Cycles
 29738                           ; simple_byte            7     4 (average)
 29739                           ;	Chosen strategy is simple_byte
 29740  011CAA  0A01               	xorlw	1	; case 1
 29741  011CAC  B4D8               	btfsc	status,2,c
 29742  011CAE  D7F3               	goto	l22419
 29743  011CB0  0A03               	xorlw	3	; case 2
 29744  011CB2  B4D8               	btfsc	status,2,c
 29745  011CB4  D7F4               	goto	l22421
 29746  011CB6                     l2690:
 29747                           
 29748                           ;adc.c: 61: ADCON0bits.GO_NOT_DONE = 1;
 29749  011CB6  82C2               	bsf	4034,1,c	;volatile
 29750  011CB8                     l2692:
 29751  011CB8  B2C2               	btfsc	4034,1,c	;volatile
 29752  011CBA  D7FE               	goto	l2692
 29753                           
 29754                           ;adc.c: 67: adc_value = ADRESH;
 29755  011CBC  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 29756  011CC0  0100               	movlb	0	; () banked
 29757  011CC2  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 29758                           
 29759                           ; BSR set to: 0
 29760                           ;adc.c: 68: adc_value <<= 2;
 29761  011CC4  0100               	movlb	0	; () banked
 29762  011CC6  90D8               	bcf	status,0,c
 29763  011CC8  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 29764  011CCA  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 29765  011CCC  0100               	movlb	0	; () banked
 29766  011CCE  90D8               	bcf	status,0,c
 29767  011CD0  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 29768  011CD2  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 29769                           
 29770                           ; BSR set to: 0
 29771                           ;adc.c: 69: adc_value |= ADRESL;
 29772  011CD4  50C3               	movf	4035,w,c	;volatile
 29773  011CD6  0100               	movlb	0	; () banked
 29774  011CD8  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 29775                           
 29776                           ; BSR set to: 0
 29777                           ;adc.c: 71: return adc_value;
 29778  011CDA  C063  F060         	movff	adc_read@adc_value,?_adc_read
 29779  011CDE  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 29780  011CE2  0012               	return	
 29781  011CE4                     __end_of_adc_read:
 29782                           	opt stack 0
 29783                           tblptru	equ	0xFF8
 29784                           tblptrh	equ	0xFF7
 29785                           tblptrl	equ	0xFF6
 29786                           tablat	equ	0xFF5
 29787                           prodh	equ	0xFF4
 29788                           prodl	equ	0xFF3
 29789                           intcon	equ	0xFF2
 29790                           intcon2	equ	0xFF1
 29791                           intcon3	equ	0xFF0
 29792                           postinc0	equ	0xFEE
 29793                           wreg	equ	0xFE8
 29794                           indf1	equ	0xFE7
 29795                           postinc1	equ	0xFE6
 29796                           postdec1	equ	0xFE5
 29797                           plusw1	equ	0xFE3
 29798                           fsr1h	equ	0xFE2
 29799                           fsr1l	equ	0xFE1
 29800                           indf2	equ	0xFDF
 29801                           postinc2	equ	0xFDE
 29802                           postdec2	equ	0xFDD
 29803                           plusw2	equ	0xFDB
 29804                           fsr2h	equ	0xFDA
 29805                           fsr2l	equ	0xFD9
 29806                           status	equ	0xFD8
 29807                           
 29808 ;; *************** function _adc_calibrate *****************
 29809 ;; Defined at:
 29810 ;;		line 20 in file "adc.c"
 29811 ;; Parameters:    Size  Location     Type
 29812 ;;		None
 29813 ;; Auto vars:     Size  Location     Type
 29814 ;;		None
 29815 ;; Return value:  Size  Location     Type
 29816 ;;                  1    wreg      void 
 29817 ;; Registers used:
 29818 ;;		None
 29819 ;; Tracked objects:
 29820 ;;		On entry : 0/0
 29821 ;;		On exit  : 0/0
 29822 ;;		Unchanged: 0/0
 29823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29828 ;;Total ram usage:        0 bytes
 29829 ;; Hardware stack levels used:    1
 29830 ;; Hardware stack levels required when called:   10
 29831 ;; This function calls:
 29832 ;;		Nothing
 29833 ;; This function is called by:
 29834 ;;		_main
 29835 ;; This function uses a non-reentrant model
 29836 ;;
 29837                           
 29838                           	psect	text128
 29839  01427E                     __ptext128:
 29840                           	opt stack 0
 29841  01427E                     _adc_calibrate:
 29842                           	opt stack 20
 29843                           
 29844                           ;adc.c: 22: ADCON1bits.ADCAL = 1;
 29845                           
 29846                           ; BSR set to: 0
 29847                           ;incstack = 0
 29848  01427E  8CC1               	bsf	4033,6,c	;volatile
 29849                           
 29850                           ;adc.c: 24: ADCON0bits.GO_NOT_DONE = 1;
 29851  014280  82C2               	bsf	4034,1,c	;volatile
 29852  014282                     l2675:
 29853  014282  B2C2               	btfsc	4034,1,c	;volatile
 29854  014284  D7FE               	goto	l2675
 29855                           
 29856                           ;adc.c: 27: ADCON1bits.ADCAL = 0;
 29857  014286  9CC1               	bcf	4033,6,c	;volatile
 29858  014288  0012               	return		;funcret
 29859  01428A                     __end_of_adc_calibrate:
 29860                           	opt stack 0
 29861                           tblptru	equ	0xFF8
 29862                           tblptrh	equ	0xFF7
 29863                           tblptrl	equ	0xFF6
 29864                           tablat	equ	0xFF5
 29865                           prodh	equ	0xFF4
 29866                           prodl	equ	0xFF3
 29867                           intcon	equ	0xFF2
 29868                           intcon2	equ	0xFF1
 29869                           intcon3	equ	0xFF0
 29870                           postinc0	equ	0xFEE
 29871                           wreg	equ	0xFE8
 29872                           indf1	equ	0xFE7
 29873                           postinc1	equ	0xFE6
 29874                           postdec1	equ	0xFE5
 29875                           plusw1	equ	0xFE3
 29876                           fsr1h	equ	0xFE2
 29877                           fsr1l	equ	0xFE1
 29878                           indf2	equ	0xFDF
 29879                           postinc2	equ	0xFDE
 29880                           postdec2	equ	0xFDD
 29881                           plusw2	equ	0xFDB
 29882                           fsr2h	equ	0xFDA
 29883                           fsr2l	equ	0xFD9
 29884                           status	equ	0xFD8
 29885                           
 29886 ;; *************** function _adc_calculate_temperature *****************
 29887 ;; Defined at:
 29888 ;;		line 74 in file "adc.c"
 29889 ;; Parameters:    Size  Location     Type
 29890 ;;  adc_value       2   12[BANK0 ] unsigned int 
 29891 ;;  calibration     1   14[BANK0 ] enum E8142
 29892 ;; Auto vars:     Size  Location     Type
 29893 ;;  tmp             4   21[BANK0 ] long 
 29894 ;; Return value:  Size  Location     Type
 29895 ;;                  2   12[BANK0 ] int 
 29896 ;; Registers used:
 29897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29898 ;; Tracked objects:
 29899 ;;		On entry : 0/0
 29900 ;;		On exit  : 0/0
 29901 ;;		Unchanged: 0/0
 29902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29903 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29904 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29905 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29906 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29907 ;;Total ram usage:       13 bytes
 29908 ;; Hardware stack levels used:    1
 29909 ;; Hardware stack levels required when called:   11
 29910 ;; This function calls:
 29911 ;;		___lmul
 29912 ;; This function is called by:
 29913 ;;		_main
 29914 ;; This function uses a non-reentrant model
 29915 ;;
 29916                           
 29917                           	psect	text129
 29918  00F4BC                     __ptext129:
 29919                           	opt stack 0
 29920  00F4BC                     _adc_calculate_temperature:
 29921                           	opt stack 19
 29922                           
 29923                           ;adc.c: 76: int32_t tmp = (int32_t) adc_value;
 29924                           
 29925                           ;incstack = 0
 29926  00F4BC  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 29927  00F4C0  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 29928  00F4C4  0100               	movlb	0	; () banked
 29929  00F4C6  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 29930  00F4C8  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 29931                           
 29932                           ; BSR set to: 0
 29933                           ;adc.c: 77: tmp += calibrationParameters[calibration].Offset;
 29934  00F4CA  0100               	movlb	0	; () banked
 29935  00F4CC  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29936  00F4CE  0D0C               	mullw	12
 29937  00F4D0  0E05               	movlw	5
 29938  00F4D2  26F3               	addwf	prodl,f,c
 29939  00F4D4  0E00               	movlw	0
 29940  00F4D6  22F4               	addwfc	prodh,f,c
 29941  00F4D8  0E00               	movlw	low _calibrationParameters
 29942  00F4DA  24F3               	addwf	prodl,w,c
 29943  00F4DC  6ED9               	movwf	fsr2l,c
 29944  00F4DE  0E03               	movlw	high _calibrationParameters
 29945  00F4E0  20F4               	addwfc	prodh,w,c
 29946  00F4E2  6EDA               	movwf	fsr2h,c
 29947  00F4E4  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 29948  00F4E8  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 29949  00F4EC  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 29950  00F4F0  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 29951  00F4F4  0E00               	movlw	0
 29952  00F4F6  0100               	movlb	0	; () banked
 29953  00F4F8  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 29954  00F4FA  0EFF               	movlw	255
 29955  00F4FC  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 29956  00F4FE  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 29957  00F500  0100               	movlb	0	; () banked
 29958  00F502  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 29959  00F504  0100               	movlb	0	; () banked
 29960  00F506  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 29961  00F508  0100               	movlb	0	; () banked
 29962  00F50A  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 29963  00F50C  0100               	movlb	0	; () banked
 29964  00F50E  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 29965  00F510  0100               	movlb	0	; () banked
 29966  00F512  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 29967  00F514  0100               	movlb	0	; () banked
 29968  00F516  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 29969  00F518  0100               	movlb	0	; () banked
 29970  00F51A  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 29971  00F51C  0100               	movlb	0	; () banked
 29972  00F51E  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 29973                           
 29974                           ; BSR set to: 0
 29975                           ;adc.c: 78: tmp *= calibrationParameters[calibration].Multiplier;
 29976  00F520  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 29977  00F524  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 29978  00F528  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 29979  00F52C  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 29980  00F530  0100               	movlb	0	; () banked
 29981  00F532  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29982  00F534  0D0C               	mullw	12
 29983  00F536  0E07               	movlw	7
 29984  00F538  26F3               	addwf	prodl,f,c
 29985  00F53A  0E00               	movlw	0
 29986  00F53C  22F4               	addwfc	prodh,f,c
 29987  00F53E  0E00               	movlw	low _calibrationParameters
 29988  00F540  24F3               	addwf	prodl,w,c
 29989  00F542  6ED9               	movwf	fsr2l,c
 29990  00F544  0E03               	movlw	high _calibrationParameters
 29991  00F546  20F4               	addwfc	prodh,w,c
 29992  00F548  6EDA               	movwf	fsr2h,c
 29993  00F54A  CFDE F064          	movff	postinc2,___lmul@multiplicand
 29994  00F54E  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 29995  00F552  0100               	movlb	0	; () banked
 29996  00F554  0E00               	movlw	0
 29997  00F556  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 29998  00F558  0EFF               	movlw	-1
 29999  00F55A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30000  00F55C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30001  00F55E  ECC3  F092         	call	___lmul	;wreg free
 30002  00F562  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 30003  00F566  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 30004  00F56A  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 30005  00F56E  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 30006                           
 30007                           ;adc.c: 79: tmp >>= calibrationParameters[calibration].Shift - 1;
 30008  00F572  0100               	movlb	0	; () banked
 30009  00F574  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 30010  00F576  0D0C               	mullw	12
 30011  00F578  0E09               	movlw	9
 30012  00F57A  26F3               	addwf	prodl,f,c
 30013  00F57C  0E00               	movlw	0
 30014  00F57E  22F4               	addwfc	prodh,f,c
 30015  00F580  0E00               	movlw	low _calibrationParameters
 30016  00F582  24F3               	addwf	prodl,w,c
 30017  00F584  6ED9               	movwf	fsr2l,c
 30018  00F586  0E03               	movlw	high _calibrationParameters
 30019  00F588  20F4               	addwfc	prodh,w,c
 30020  00F58A  6EDA               	movwf	fsr2h,c
 30021  00F58C  50DF               	movf	indf2,w,c
 30022  00F58E  0100               	movlb	0	; () banked
 30023  00F590  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 30024  00F592  0EFF               	movlw	-1
 30025  00F594  0100               	movlb	0	; () banked
 30026  00F596  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 30027  00F598  0100               	movlb	0	; () banked
 30028  00F59A  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 30029  00F59C  0100               	movlb	0	; () banked
 30030  00F59E  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 30031  00F5A0  D006               	goto	u22670
 30032  00F5A2                     u22675:
 30033  00F5A2  0100               	movlb	0	; () banked
 30034  00F5A4  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 30035  00F5A6  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 30036  00F5A8  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 30037  00F5AA  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 30038  00F5AC  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 30039  00F5AE                     u22670:
 30040  00F5AE  0100               	movlb	0	; () banked
 30041  00F5B0  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 30042  00F5B2  D7F7               	goto	u22675
 30043                           
 30044                           ;adc.c: 80: tmp += 1;
 30045  00F5B4  0E01               	movlw	1
 30046  00F5B6  0100               	movlb	0	; () banked
 30047  00F5B8  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 30048  00F5BA  0E00               	movlw	0
 30049  00F5BC  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 30050  00F5BE  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 30051  00F5C0  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 30052                           
 30053                           ; BSR set to: 0
 30054                           ;adc.c: 81: tmp >>= 1;
 30055  00F5C2  0100               	movlb	0	; () banked
 30056  00F5C4  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 30057  00F5C6  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 30058  00F5C8  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 30059  00F5CA  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 30060  00F5CC  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 30061                           
 30062                           ; BSR set to: 0
 30063                           ;adc.c: 82: return (int16_t) tmp;
 30064  00F5CE  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 30065  00F5D2  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 30066  00F5D6  0012               	return	
 30067  00F5D8                     __end_of_adc_calculate_temperature:
 30068                           	opt stack 0
 30069                           tblptru	equ	0xFF8
 30070                           tblptrh	equ	0xFF7
 30071                           tblptrl	equ	0xFF6
 30072                           tablat	equ	0xFF5
 30073                           prodh	equ	0xFF4
 30074                           prodl	equ	0xFF3
 30075                           intcon	equ	0xFF2
 30076                           intcon2	equ	0xFF1
 30077                           intcon3	equ	0xFF0
 30078                           postinc0	equ	0xFEE
 30079                           wreg	equ	0xFE8
 30080                           indf1	equ	0xFE7
 30081                           postinc1	equ	0xFE6
 30082                           postdec1	equ	0xFE5
 30083                           plusw1	equ	0xFE3
 30084                           fsr1h	equ	0xFE2
 30085                           fsr1l	equ	0xFE1
 30086                           indf2	equ	0xFDF
 30087                           postinc2	equ	0xFDE
 30088                           postdec2	equ	0xFDD
 30089                           plusw2	equ	0xFDB
 30090                           fsr2h	equ	0xFDA
 30091                           fsr2l	equ	0xFD9
 30092                           status	equ	0xFD8
 30093                           
 30094 ;; *************** function ___lmul *****************
 30095 ;; Defined at:
 30096 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
 30097 ;; Parameters:    Size  Location     Type
 30098 ;;  multiplier      4    0[BANK0 ] unsigned long 
 30099 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 30100 ;; Auto vars:     Size  Location     Type
 30101 ;;  product         4    8[BANK0 ] unsigned long 
 30102 ;; Return value:  Size  Location     Type
 30103 ;;                  4    0[BANK0 ] unsigned long 
 30104 ;; Registers used:
 30105 ;;		wreg, status,2, status,0
 30106 ;; Tracked objects:
 30107 ;;		On entry : 0/0
 30108 ;;		On exit  : 0/0
 30109 ;;		Unchanged: 0/0
 30110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30111 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30112 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30114 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30115 ;;Total ram usage:       12 bytes
 30116 ;; Hardware stack levels used:    1
 30117 ;; Hardware stack levels required when called:   10
 30118 ;; This function calls:
 30119 ;;		Nothing
 30120 ;; This function is called by:
 30121 ;;		_system_calculate_input_voltage
 30122 ;;		_system_calculate_output_voltage
 30123 ;;		_system_calculate_input_current
 30124 ;;		_system_calculate_output_current
 30125 ;;		__display_efficiency
 30126 ;;		__buck_operate_local
 30127 ;;		_adc_calculate_temperature
 30128 ;;		__get_input_power
 30129 ;;		__get_output_power
 30130 ;; This function uses a non-reentrant model
 30131 ;;
 30132                           
 30133                           	psect	text130
 30134  012586                     __ptext130:
 30135                           	opt stack 0
 30136  012586                     ___lmul:
 30137                           	opt stack 19
 30138                           
 30139                           ; BSR set to: 0
 30140                           ;incstack = 0
 30141  012586  0E00               	movlw	0
 30142  012588  0100               	movlb	0	; () banked
 30143  01258A  6F68               	movwf	___lmul@product& (0+255),b
 30144  01258C  0E00               	movlw	0
 30145  01258E  6F69               	movwf	(___lmul@product+1)& (0+255),b
 30146  012590  0E00               	movlw	0
 30147  012592  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 30148  012594  0E00               	movlw	0
 30149  012596  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 30150  012598                     l20165:
 30151                           
 30152                           ; BSR set to: 0
 30153  012598  0100               	movlb	0	; () banked
 30154  01259A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 30155  01259C  D010               	goto	l20169
 30156                           
 30157                           ; BSR set to: 0
 30158  01259E  0100               	movlb	0	; () banked
 30159  0125A0  5164               	movf	___lmul@multiplicand& (0+255),w,b
 30160  0125A2  0100               	movlb	0	; () banked
 30161  0125A4  2768               	addwf	___lmul@product& (0+255),f,b
 30162  0125A6  0100               	movlb	0	; () banked
 30163  0125A8  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 30164  0125AA  0100               	movlb	0	; () banked
 30165  0125AC  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 30166  0125AE  0100               	movlb	0	; () banked
 30167  0125B0  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 30168  0125B2  0100               	movlb	0	; () banked
 30169  0125B4  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 30170  0125B6  0100               	movlb	0	; () banked
 30171  0125B8  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 30172  0125BA  0100               	movlb	0	; () banked
 30173  0125BC  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 30174  0125BE                     l20169:
 30175                           
 30176                           ; BSR set to: 0
 30177  0125BE  0100               	movlb	0	; () banked
 30178  0125C0  90D8               	bcf	status,0,c
 30179  0125C2  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 30180  0125C4  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 30181  0125C6  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 30182  0125C8  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 30183                           
 30184                           ; BSR set to: 0
 30185  0125CA  0100               	movlb	0	; () banked
 30186  0125CC  90D8               	bcf	status,0,c
 30187  0125CE  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 30188  0125D0  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 30189  0125D2  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 30190  0125D4  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 30191  0125D6  0100               	movlb	0	; () banked
 30192  0125D8  5160               	movf	___lmul@multiplier& (0+255),w,b
 30193  0125DA  0100               	movlb	0	; () banked
 30194  0125DC  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 30195  0125DE  0100               	movlb	0	; () banked
 30196  0125E0  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 30197  0125E2  0100               	movlb	0	; () banked
 30198  0125E4  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 30199  0125E6  A4D8               	btfss	status,2,c
 30200  0125E8  D7D7               	goto	l20165
 30201                           
 30202                           ; BSR set to: 0
 30203  0125EA  C068  F060         	movff	___lmul@product,?___lmul
 30204  0125EE  C069  F061         	movff	___lmul@product+1,?___lmul+1
 30205  0125F2  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 30206  0125F6  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 30207                           
 30208                           ; BSR set to: 0
 30209  0125FA  0012               	return		;funcret
 30210  0125FC                     __end_of___lmul:
 30211                           	opt stack 0
 30212                           tblptru	equ	0xFF8
 30213                           tblptrh	equ	0xFF7
 30214                           tblptrl	equ	0xFF6
 30215                           tablat	equ	0xFF5
 30216                           prodh	equ	0xFF4
 30217                           prodl	equ	0xFF3
 30218                           intcon	equ	0xFF2
 30219                           intcon2	equ	0xFF1
 30220                           intcon3	equ	0xFF0
 30221                           postinc0	equ	0xFEE
 30222                           wreg	equ	0xFE8
 30223                           indf1	equ	0xFE7
 30224                           postinc1	equ	0xFE6
 30225                           postdec1	equ	0xFE5
 30226                           plusw1	equ	0xFE3
 30227                           fsr1h	equ	0xFE2
 30228                           fsr1l	equ	0xFE1
 30229                           indf2	equ	0xFDF
 30230                           postinc2	equ	0xFDE
 30231                           postdec2	equ	0xFDD
 30232                           plusw2	equ	0xFDB
 30233                           fsr2h	equ	0xFDA
 30234                           fsr2l	equ	0xFD9
 30235                           status	equ	0xFD8
 30236                           
 30237 ;; *************** function _USBDeviceInit *****************
 30238 ;; Defined at:
 30239 ;;		line 277 in file "usb_device.c"
 30240 ;; Parameters:    Size  Location     Type
 30241 ;;		None
 30242 ;; Auto vars:     Size  Location     Type
 30243 ;;  i               1    8[BANK0 ] unsigned char 
 30244 ;; Return value:  Size  Location     Type
 30245 ;;                  1    wreg      void 
 30246 ;; Registers used:
 30247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30248 ;; Tracked objects:
 30249 ;;		On entry : 0/0
 30250 ;;		On exit  : 0/0
 30251 ;;		Unchanged: 0/0
 30252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30257 ;;Total ram usage:        1 bytes
 30258 ;; Hardware stack levels used:    1
 30259 ;; Hardware stack levels required when called:   11
 30260 ;; This function calls:
 30261 ;;		_memset
 30262 ;; This function is called by:
 30263 ;;		_main
 30264 ;; This function uses a non-reentrant model
 30265 ;;
 30266                           
 30267                           	psect	text131
 30268  00E1A2                     __ptext131:
 30269                           	opt stack 0
 30270  00E1A2                     _USBDeviceInit:
 30271                           	opt stack 19
 30272                           
 30273                           ;usb_device.c: 279: uint8_t i;
 30274                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 30275                           
 30276                           ; BSR set to: 0
 30277                           ;incstack = 0
 30278  00E1A2  98A0               	bcf	4000,4,c	;volatile
 30279                           
 30280                           ;usb_device.c: 285: ;
 30281                           ;usb_device.c: 288: {UEIR = 0;};
 30282  00E1A4  0E00               	movlw	0
 30283  00E1A6  6E63               	movwf	3939,c	;volatile
 30284                           
 30285                           ;usb_device.c: 291: {UIR = 0;};
 30286  00E1A8  0E00               	movlw	0
 30287  00E1AA  6E62               	movwf	3938,c	;volatile
 30288                           
 30289                           ;usb_device.c: 294: UEP0 = 0;
 30290  00E1AC  0E00               	movlw	0
 30291  00E1AE  010F               	movlb	15	; () banked
 30292  00E1B0  6F26               	movwf	38,b	;volatile
 30293                           
 30294                           ; BSR set to: 15
 30295                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 30296  00E1B2  0E27               	movlw	39
 30297  00E1B4  0100               	movlb	0	; () banked
 30298  00E1B6  6F60               	movwf	memset@p1& (0+255),b
 30299  00E1B8  0E0F               	movlw	15
 30300  00E1BA  0100               	movlb	0	; () banked
 30301  00E1BC  6F61               	movwf	(memset@p1+1)& (0+255),b
 30302  00E1BE  0E00               	movlw	0
 30303  00E1C0  0100               	movlb	0	; () banked
 30304  00E1C2  6F63               	movwf	(memset@c+1)& (0+255),b
 30305  00E1C4  0E00               	movlw	0
 30306  00E1C6  6F62               	movwf	memset@c& (0+255),b
 30307  00E1C8  0E00               	movlw	0
 30308  00E1CA  0100               	movlb	0	; () banked
 30309  00E1CC  6F65               	movwf	(memset@n+1)& (0+255),b
 30310  00E1CE  0E02               	movlw	2
 30311  00E1D0  6F64               	movwf	memset@n& (0+255),b
 30312  00E1D2  ECFB  F09C         	call	_memset	;wreg free
 30313                           
 30314                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 30315  00E1D6  0E16               	movlw	22
 30316  00E1D8  010F               	movlb	15	; () banked
 30317  00E1DA  6F39               	movwf	57,b	;volatile
 30318                           
 30319                           ; BSR set to: 15
 30320  00E1DC  0E9F               	movlw	159
 30321  00E1DE  010F               	movlb	15	; () banked
 30322  00E1E0  6F37               	movwf	55,b	;volatile
 30323                           
 30324                           ; BSR set to: 15
 30325  00E1E2  0E7B               	movlw	123
 30326  00E1E4  010F               	movlb	15	; () banked
 30327  00E1E6  6F36               	movwf	54,b	;volatile
 30328                           
 30329                           ; BSR set to: 15
 30330                           ;usb_device.c: 301: ;
 30331                           ;usb_device.c: 304: ;
 30332                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 30333  00E1E8  0E00               	movlw	0
 30334  00E1EA  0100               	movlb	0	; () banked
 30335  00E1EC  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30336  00E1EE                     l22001:
 30337                           
 30338                           ; BSR set to: 0
 30339  00E1EE  0E0B               	movlw	11
 30340  00E1F0  0100               	movlb	0	; () banked
 30341  00E1F2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30342  00E1F4  D001               	goto	l22005
 30343  00E1F6  D010               	goto	l148
 30344  00E1F8                     l22005:
 30345                           
 30346                           ; BSR set to: 0
 30347                           ;usb_device.c: 308: {
 30348                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 30349  00E1F8  0100               	movlb	0	; () banked
 30350  00E1FA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30351  00E1FC  0D04               	mullw	4
 30352  00E1FE  0E00               	movlw	0
 30353  00E200  24F3               	addwf	prodl,w,c
 30354  00E202  6ED9               	movwf	fsr2l,c
 30355  00E204  0E0D               	movlw	13
 30356  00E206  20F4               	addwfc	prodh,w,c
 30357  00E208  6EDA               	movwf	fsr2h,c
 30358  00E20A  6ADE               	clrf	postinc2,c
 30359  00E20C  6ADE               	clrf	postinc2,c
 30360  00E20E  6ADE               	clrf	postinc2,c
 30361  00E210  6ADD               	clrf	postdec2,c
 30362                           
 30363                           ; BSR set to: 0
 30364  00E212  0100               	movlb	0	; () banked
 30365  00E214  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30366  00E216  D7EB               	goto	l22001
 30367  00E218                     l148:
 30368                           
 30369                           ; BSR set to: 0
 30370                           ;usb_device.c: 310: }
 30371                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 30372  00E218  8C65               	bsf	3941,6,c	;volatile
 30373                           
 30374                           ; BSR set to: 0
 30375                           ;usb_device.c: 316: UADDR = 0x00;
 30376  00E21A  0E00               	movlw	0
 30377  00E21C  010F               	movlb	15	; () banked
 30378  00E21E  6F38               	movwf	56,b	;volatile
 30379                           
 30380                           ; BSR set to: 15
 30381                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 30382  00E220  9865               	bcf	3941,4,c	;volatile
 30383                           
 30384                           ; BSR set to: 15
 30385                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 30386  00E222  9C65               	bcf	3941,6,c	;volatile
 30387  00E224                     l22017:
 30388                           
 30389                           ;usb_device.c: 326: {
 30390                           ;usb_device.c: 327: (UIR &= 0xF7);
 30391  00E224  9662               	bcf	3938,3,c	;volatile
 30392                           
 30393                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 30394  00E226  0E00               	movlw	0
 30395  00E228  6E0D               	movwf	_inPipes+3,c	;volatile
 30396                           
 30397                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 30398  00E22A  0E00               	movlw	0
 30399  00E22C  6E04               	movwf	_outPipes+3,c	;volatile
 30400                           
 30401                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 30402  00E22E  0E00               	movlw	0
 30403  00E230  6E06               	movwf	_outPipes+5,c	;volatile
 30404  00E232  0E00               	movlw	0
 30405  00E234  6E05               	movwf	_outPipes+4,c	;volatile
 30406                           
 30407                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 30408  00E236  B662               	btfsc	3938,3,c	;volatile
 30409  00E238  D7F5               	goto	l22017
 30410                           
 30411                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 30412  00E23A  0E01               	movlw	1
 30413  00E23C  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 30414                           
 30415                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 30416  00E23E  0E01               	movlw	1
 30417  00E240  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 30418                           
 30419                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 30420  00E242  0E00               	movlw	0
 30421  00E244  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 30422                           
 30423                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 30424  00E246  0E00               	movlw	0
 30425  00E248  0101               	movlb	1	; () banked
 30426  00E24A  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 30427                           
 30428                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 30429  00E24C  0E00               	movlw	0
 30430  00E24E  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 30431                           
 30432                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 30433  00E250  0E00               	movlw	0
 30434  00E252  0100               	movlb	0	; () banked
 30435  00E254  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30436  00E256                     l22029:
 30437                           
 30438                           ; BSR set to: 0
 30439  00E256  0E02               	movlw	2
 30440  00E258  0100               	movlb	0	; () banked
 30441  00E25A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30442  00E25C  D001               	goto	l22033
 30443  00E25E  D033               	goto	l22039
 30444  00E260                     l22033:
 30445                           
 30446                           ; BSR set to: 0
 30447                           ;usb_device.c: 346: {
 30448                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 30449  00E260  0100               	movlb	0	; () banked
 30450  00E262  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30451  00E264  0D02               	mullw	2
 30452  00E266  0E10               	movlw	low _pBDTEntryIn
 30453  00E268  24F3               	addwf	prodl,w,c
 30454  00E26A  6ED9               	movwf	fsr2l,c
 30455  00E26C  0E00               	movlw	high _pBDTEntryIn
 30456  00E26E  20F4               	addwfc	prodh,w,c
 30457  00E270  6EDA               	movwf	fsr2h,c
 30458  00E272  0E00               	movlw	0
 30459  00E274  6EDE               	movwf	postinc2,c
 30460  00E276  0E00               	movlw	0
 30461  00E278  6EDD               	movwf	postdec2,c
 30462                           
 30463                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 30464  00E27A  0100               	movlb	0	; () banked
 30465  00E27C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30466  00E27E  0D02               	mullw	2
 30467  00E280  0ED3               	movlw	low _pBDTEntryOut
 30468  00E282  24F3               	addwf	prodl,w,c
 30469  00E284  6ED9               	movwf	fsr2l,c
 30470  00E286  0E01               	movlw	high _pBDTEntryOut
 30471  00E288  20F4               	addwfc	prodh,w,c
 30472  00E28A  6EDA               	movwf	fsr2h,c
 30473  00E28C  0E00               	movlw	0
 30474  00E28E  6EDE               	movwf	postinc2,c
 30475  00E290  0E00               	movlw	0
 30476  00E292  6EDD               	movwf	postdec2,c
 30477                           
 30478                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 30479  00E294  0100               	movlb	0	; () banked
 30480  00E296  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30481  00E298  0D01               	mullw	1
 30482  00E29A  0EE4               	movlw	low _ep_data_in
 30483  00E29C  24F3               	addwf	prodl,w,c
 30484  00E29E  6ED9               	movwf	fsr2l,c
 30485  00E2A0  0E01               	movlw	high _ep_data_in
 30486  00E2A2  20F4               	addwfc	prodh,w,c
 30487  00E2A4  6EDA               	movwf	fsr2h,c
 30488  00E2A6  0E00               	movlw	0
 30489  00E2A8  6EDF               	movwf	indf2,c
 30490                           
 30491                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 30492  00E2AA  0100               	movlb	0	; () banked
 30493  00E2AC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30494  00E2AE  0D01               	mullw	1
 30495  00E2B0  0EE1               	movlw	low _ep_data_out
 30496  00E2B2  24F3               	addwf	prodl,w,c
 30497  00E2B4  6ED9               	movwf	fsr2l,c
 30498  00E2B6  0E01               	movlw	high _ep_data_out
 30499  00E2B8  20F4               	addwfc	prodh,w,c
 30500  00E2BA  6EDA               	movwf	fsr2h,c
 30501  00E2BC  0E00               	movlw	0
 30502  00E2BE  6EDF               	movwf	indf2,c
 30503                           
 30504                           ; BSR set to: 0
 30505  00E2C0  0100               	movlb	0	; () banked
 30506  00E2C2  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30507  00E2C4  D7C8               	goto	l22029
 30508  00E2C6                     l22039:
 30509                           
 30510                           ; BSR set to: 0
 30511                           ;usb_device.c: 351: }
 30512                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 30513  00E2C6  0E08               	movlw	8
 30514  00E2C8  6E10               	movwf	_pBDTEntryIn,c
 30515  00E2CA  0E0D               	movlw	13
 30516  00E2CC  6E11               	movwf	_pBDTEntryIn+1,c
 30517                           
 30518                           ; BSR set to: 0
 30519                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 30520  00E2CE  0E16               	movlw	22
 30521  00E2D0  010F               	movlb	15	; () banked
 30522  00E2D2  6F26               	movwf	38,b	;volatile
 30523                           
 30524                           ; BSR set to: 15
 30525                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 30526  00E2D4  0E0D               	movlw	13
 30527  00E2D6  010D               	movlb	13	; () banked
 30528  00E2D8  6F03               	movwf	3,b	;volatile
 30529  00E2DA  0E30               	movlw	48
 30530  00E2DC  6F02               	movwf	2,b	;volatile
 30531                           
 30532                           ; BSR set to: 13
 30533                           ;usb_device.c: 359: BDT[0].CNT = 8;
 30534  00E2DE  0E08               	movlw	8
 30535  00E2E0  010D               	movlb	13	; () banked
 30536  00E2E2  6F01               	movwf	1,b	;volatile
 30537                           
 30538                           ; BSR set to: 13
 30539                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 30540  00E2E4  0E04               	movlw	4
 30541  00E2E6  010D               	movlb	13	; () banked
 30542  00E2E8  6F00               	movwf	0,b	;volatile
 30543                           
 30544                           ; BSR set to: 13
 30545                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 30546  00E2EA  010D               	movlb	13	; () banked
 30547  00E2EC  8F00               	bsf	0,7,b	;volatile
 30548                           
 30549                           ; BSR set to: 13
 30550                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 30551  00E2EE  0E00               	movlw	0
 30552  00E2F0  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 30553                           
 30554                           ; BSR set to: 13
 30555                           ;usb_device.c: 366: USB1msTickCount = 0;
 30556  00E2F2  0E00               	movlw	0
 30557  00E2F4  0101               	movlb	1	; () banked
 30558  00E2F6  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 30559  00E2F8  0E00               	movlw	0
 30560  00E2FA  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 30561  00E2FC  0E00               	movlw	0
 30562  00E2FE  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 30563  00E300  0E00               	movlw	0
 30564  00E302  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 30565                           
 30566                           ; BSR set to: 1
 30567                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 30568  00E304  0E00               	movlw	0
 30569  00E306  0101               	movlb	1	; () banked
 30570  00E308  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 30571                           
 30572                           ; BSR set to: 1
 30573                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 30574  00E30A  0E00               	movlw	0
 30575  00E30C  6E2B               	movwf	_USBDeviceState,c	;volatile
 30576                           
 30577                           ; BSR set to: 1
 30578  00E30E  0012               	return		;funcret
 30579  00E310                     __end_of_USBDeviceInit:
 30580                           	opt stack 0
 30581                           tblptru	equ	0xFF8
 30582                           tblptrh	equ	0xFF7
 30583                           tblptrl	equ	0xFF6
 30584                           tablat	equ	0xFF5
 30585                           prodh	equ	0xFF4
 30586                           prodl	equ	0xFF3
 30587                           intcon	equ	0xFF2
 30588                           intcon2	equ	0xFF1
 30589                           intcon3	equ	0xFF0
 30590                           postinc0	equ	0xFEE
 30591                           wreg	equ	0xFE8
 30592                           indf1	equ	0xFE7
 30593                           postinc1	equ	0xFE6
 30594                           postdec1	equ	0xFE5
 30595                           plusw1	equ	0xFE3
 30596                           fsr1h	equ	0xFE2
 30597                           fsr1l	equ	0xFE1
 30598                           indf2	equ	0xFDF
 30599                           postinc2	equ	0xFDE
 30600                           postdec2	equ	0xFDD
 30601                           plusw2	equ	0xFDB
 30602                           fsr2h	equ	0xFDA
 30603                           fsr2l	equ	0xFD9
 30604                           status	equ	0xFD8
 30605                           
 30606 ;; *************** function _memset *****************
 30607 ;; Defined at:
 30608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 30609 ;; Parameters:    Size  Location     Type
 30610 ;;  p1              2    0[BANK0 ] PTR void 
 30611 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30612 ;;  c               2    2[BANK0 ] int 
 30613 ;;  n               2    4[BANK0 ] unsigned int 
 30614 ;; Auto vars:     Size  Location     Type
 30615 ;;  p               2    6[BANK0 ] PTR unsigned char 
 30616 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30617 ;; Return value:  Size  Location     Type
 30618 ;;                  2    0[BANK0 ] PTR void 
 30619 ;; Registers used:
 30620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30621 ;; Tracked objects:
 30622 ;;		On entry : 0/0
 30623 ;;		On exit  : 0/0
 30624 ;;		Unchanged: 0/0
 30625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30626 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30629 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30630 ;;Total ram usage:        8 bytes
 30631 ;; Hardware stack levels used:    1
 30632 ;; Hardware stack levels required when called:   10
 30633 ;; This function calls:
 30634 ;;		Nothing
 30635 ;; This function is called by:
 30636 ;;		_USBDeviceInit
 30637 ;; This function uses a non-reentrant model
 30638 ;;
 30639                           
 30640                           	psect	text132
 30641  0139F6                     __ptext132:
 30642                           	opt stack 0
 30643  0139F6                     _memset:
 30644                           	opt stack 19
 30645                           
 30646                           ; BSR set to: 1
 30647                           ;incstack = 0
 30648  0139F6  C060  F066         	movff	memset@p1,memset@p
 30649  0139FA  C061  F067         	movff	memset@p1+1,memset@p+1
 30650  0139FE  D009               	goto	l20285
 30651  013A00                     l20281:
 30652  013A00  C066  FFD9         	movff	memset@p,fsr2l
 30653  013A04  C067  FFDA         	movff	memset@p+1,fsr2h
 30654  013A08  C062  FFDF         	movff	memset@c,indf2
 30655  013A0C  0100               	movlb	0	; () banked
 30656  013A0E  4B66               	infsnz	memset@p& (0+255),f,b
 30657  013A10  2B67               	incf	(memset@p+1)& (0+255),f,b
 30658  013A12                     l20285:
 30659  013A12  0100               	movlb	0	; () banked
 30660  013A14  0764               	decf	memset@n& (0+255),f,b
 30661  013A16  A0D8               	btfss	status,0,c
 30662  013A18  0765               	decf	(memset@n+1)& (0+255),f,b
 30663  013A1A  0100               	movlb	0	; () banked
 30664  013A1C  2964               	incf	memset@n& (0+255),w,b
 30665  013A1E  E1F0               	bnz	l20281
 30666  013A20  0100               	movlb	0	; () banked
 30667  013A22  2965               	incf	(memset@n+1)& (0+255),w,b
 30668  013A24  B4D8               	btfsc	status,2,c
 30669  013A26  0012               	return	
 30670  013A28  D7EB               	goto	l20281
 30671  013A2A                     __end_of_memset:
 30672                           	opt stack 0
 30673                           tblptru	equ	0xFF8
 30674                           tblptrh	equ	0xFF7
 30675                           tblptrl	equ	0xFF6
 30676                           tablat	equ	0xFF5
 30677                           prodh	equ	0xFF4
 30678                           prodl	equ	0xFF3
 30679                           intcon	equ	0xFF2
 30680                           intcon2	equ	0xFF1
 30681                           intcon3	equ	0xFF0
 30682                           postinc0	equ	0xFEE
 30683                           wreg	equ	0xFE8
 30684                           indf1	equ	0xFE7
 30685                           postinc1	equ	0xFE6
 30686                           postdec1	equ	0xFE5
 30687                           plusw1	equ	0xFE3
 30688                           fsr1h	equ	0xFE2
 30689                           fsr1l	equ	0xFE1
 30690                           indf2	equ	0xFDF
 30691                           postinc2	equ	0xFDE
 30692                           postdec2	equ	0xFDD
 30693                           plusw2	equ	0xFDB
 30694                           fsr2h	equ	0xFDA
 30695                           fsr2l	equ	0xFD9
 30696                           status	equ	0xFD8
 30697                           
 30698 ;; *************** function _USBDeviceAttach *****************
 30699 ;; Defined at:
 30700 ;;		line 1354 in file "usb_device.c"
 30701 ;; Parameters:    Size  Location     Type
 30702 ;;		None
 30703 ;; Auto vars:     Size  Location     Type
 30704 ;;		None
 30705 ;; Return value:  Size  Location     Type
 30706 ;;                  1    wreg      void 
 30707 ;; Registers used:
 30708 ;;		wreg, status,2
 30709 ;; Tracked objects:
 30710 ;;		On entry : 0/0
 30711 ;;		On exit  : 0/0
 30712 ;;		Unchanged: 0/0
 30713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30718 ;;Total ram usage:        0 bytes
 30719 ;; Hardware stack levels used:    1
 30720 ;; Hardware stack levels required when called:   10
 30721 ;; This function calls:
 30722 ;;		Nothing
 30723 ;; This function is called by:
 30724 ;;		_main
 30725 ;; This function uses a non-reentrant model
 30726 ;;
 30727                           
 30728                           	psect	text133
 30729  013810                     __ptext133:
 30730                           	opt stack 0
 30731  013810                     _USBDeviceAttach:
 30732                           	opt stack 20
 30733                           
 30734                           ;usb_device.c: 1358: {
 30735                           ;usb_device.c: 1359: if(1 == 1)
 30736                           
 30737                           ; BSR set to: 0
 30738                           ;incstack = 0
 30739  013810  502B               	movf	_USBDeviceState,w,c	;volatile
 30740  013812  A4D8               	btfss	status,2,c
 30741  013814  0012               	return	
 30742                           
 30743                           ;usb_device.c: 1360: {
 30744                           ;usb_device.c: 1362: UCON = 0;
 30745  013816  0E00               	movlw	0
 30746  013818  6E65               	movwf	3941,c	;volatile
 30747                           
 30748                           ;usb_device.c: 1365: UIE = 0;
 30749  01381A  0E00               	movlw	0
 30750  01381C  010F               	movlb	15	; () banked
 30751  01381E  6F36               	movwf	54,b	;volatile
 30752                           
 30753                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 30754  013820  0E16               	movlw	22
 30755  013822  010F               	movlb	15	; () banked
 30756  013824  6F39               	movwf	57,b	;volatile
 30757  013826  0E9F               	movlw	159
 30758  013828  010F               	movlb	15	; () banked
 30759  01382A  6F37               	movwf	55,b	;volatile
 30760  01382C  0E7B               	movlw	123
 30761  01382E  010F               	movlb	15	; () banked
 30762  013830  6F36               	movwf	54,b	;volatile
 30763                           
 30764                           ; BSR set to: 15
 30765                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 30766  013832  8ED0               	bsf	4048,7,c	;volatile
 30767                           
 30768                           ; BSR set to: 15
 30769  013834  88A2               	bsf	4002,4,c	;volatile
 30770                           
 30771                           ; BSR set to: 15
 30772  013836  88A0               	bsf	4000,4,c	;volatile
 30773                           
 30774                           ; BSR set to: 15
 30775  013838  8EF2               	bsf	intcon,7,c	;volatile
 30776                           
 30777                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 30778  01383A  D001               	goto	l208
 30779  01383C                     l209:
 30780  01383C  8665               	bsf	3941,3,c	;volatile
 30781  01383E                     l208:
 30782  01383E  A665               	btfss	3941,3,c	;volatile
 30783  013840  D7FD               	goto	l209
 30784                           
 30785                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 30786  013842  0E01               	movlw	1
 30787  013844  6E2B               	movwf	_USBDeviceState,c	;volatile
 30788  013846  0012               	return	
 30789  013848                     __end_of_USBDeviceAttach:
 30790                           	opt stack 0
 30791                           tblptru	equ	0xFF8
 30792                           tblptrh	equ	0xFF7
 30793                           tblptrl	equ	0xFF6
 30794                           tablat	equ	0xFF5
 30795                           prodh	equ	0xFF4
 30796                           prodl	equ	0xFF3
 30797                           intcon	equ	0xFF2
 30798                           intcon2	equ	0xFF1
 30799                           intcon3	equ	0xFF0
 30800                           postinc0	equ	0xFEE
 30801                           wreg	equ	0xFE8
 30802                           indf1	equ	0xFE7
 30803                           postinc1	equ	0xFE6
 30804                           postdec1	equ	0xFE5
 30805                           plusw1	equ	0xFE3
 30806                           fsr1h	equ	0xFE2
 30807                           fsr1l	equ	0xFE1
 30808                           indf2	equ	0xFDF
 30809                           postinc2	equ	0xFDE
 30810                           postdec2	equ	0xFDD
 30811                           plusw2	equ	0xFDB
 30812                           fsr2h	equ	0xFDA
 30813                           fsr2l	equ	0xFD9
 30814                           status	equ	0xFD8
 30815                           
 30816 ;; *************** function _SYSTEM_Initialize *****************
 30817 ;; Defined at:
 30818 ;;		line 78 in file "system.c"
 30819 ;; Parameters:    Size  Location     Type
 30820 ;;  state           1    wreg     enum E8228
 30821 ;; Auto vars:     Size  Location     Type
 30822 ;;  state           1    0[BANK0 ] enum E8228
 30823 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 30824 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 30825 ;; Return value:  Size  Location     Type
 30826 ;;                  1    wreg      void 
 30827 ;; Registers used:
 30828 ;;		wreg, status,2, status,0
 30829 ;; Tracked objects:
 30830 ;;		On entry : 0/0
 30831 ;;		On exit  : 0/0
 30832 ;;		Unchanged: 0/0
 30833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30835 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30837 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30838 ;;Total ram usage:        5 bytes
 30839 ;; Hardware stack levels used:    1
 30840 ;; Hardware stack levels required when called:   10
 30841 ;; This function calls:
 30842 ;;		Nothing
 30843 ;; This function is called by:
 30844 ;;		_main
 30845 ;; This function uses a non-reentrant model
 30846 ;;
 30847                           
 30848                           	psect	text134
 30849  012A50                     __ptext134:
 30850                           	opt stack 0
 30851  012A50                     _SYSTEM_Initialize:
 30852                           	opt stack 20
 30853                           
 30854                           ;incstack = 0
 30855                           ;SYSTEM_Initialize@state stored from wreg
 30856  012A50  0100               	movlb	0	; () banked
 30857  012A52  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 30858                           
 30859                           ;system.c: 80: switch(state)
 30860  012A54  D025               	goto	l22189
 30861  012A56                     l22177:
 30862                           
 30863                           ;system.c: 89: {
 30864                           ;system.c: 90: unsigned int pll_startup_counter = 600;
 30865  012A56  0E02               	movlw	2
 30866  012A58  0100               	movlb	0	; () banked
 30867  012A5A  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 30868  012A5C  0E58               	movlw	88
 30869  012A5E  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 30870                           
 30871                           ; BSR set to: 0
 30872                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 30873  012A60  8C9B               	bsf	3995,6,c	;volatile
 30874  012A62                     l22181:
 30875                           
 30876                           ; BSR set to: 0
 30877  012A62  0100               	movlb	0	; () banked
 30878  012A64  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 30879  012A66  A0D8               	btfss	status,0,c
 30880  012A68  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 30881  012A6A  0100               	movlb	0	; () banked
 30882  012A6C  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 30883  012A6E  E1F9               	bnz	l22181
 30884  012A70  0100               	movlb	0	; () banked
 30885  012A72  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 30886  012A74  B4D8               	btfsc	status,2,c
 30887  012A76  0012               	return	
 30888  012A78  D7F4               	goto	l22181
 30889  012A7A                     l22183:
 30890                           
 30891                           ; BSR set to: 0
 30892                           ;system.c: 117: OSCCON = 0x70;
 30893  012A7A  0E70               	movlw	112
 30894  012A7C  6ED3               	movwf	4051,c	;volatile
 30895                           
 30896                           ;system.c: 123: {
 30897                           ;system.c: 124: unsigned int pll_startup_counter = 800;
 30898  012A7E  0E03               	movlw	3
 30899  012A80  0100               	movlb	0	; () banked
 30900  012A82  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),b
 30901  012A84  0E20               	movlw	32
 30902  012A86  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),b
 30903  012A88                     l22185:
 30904                           
 30905                           ; BSR set to: 0
 30906  012A88  0100               	movlb	0	; () banked
 30907  012A8A  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),f,b
 30908  012A8C  A0D8               	btfss	status,0,c
 30909  012A8E  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),f,b
 30910  012A90  0100               	movlb	0	; () banked
 30911  012A92  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),w,b
 30912  012A94  E1F9               	bnz	l22185
 30913  012A96  0100               	movlb	0	; () banked
 30914  012A98  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),w,b
 30915  012A9A  B4D8               	btfsc	status,2,c
 30916  012A9C  0012               	return	
 30917  012A9E  D7F4               	goto	l22185
 30918  012AA0                     l22189:
 30919  012AA0  0100               	movlb	0	; () banked
 30920  012AA2  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 30921                           
 30922                           ; Switch size 1, requested type "space"
 30923                           ; Number of cases is 3, Range of values is 0 to 2
 30924                           ; switch strategies available:
 30925                           ; Name         Instructions Cycles
 30926                           ; simple_byte           10     6 (average)
 30927                           ;	Chosen strategy is simple_byte
 30928  012AA4  0A00               	xorlw	0	; case 0
 30929  012AA6  B4D8               	btfsc	status,2,c
 30930  012AA8  D7D6               	goto	l22177
 30931  012AAA  0A01               	xorlw	1	; case 1
 30932  012AAC  B4D8               	btfsc	status,2,c
 30933  012AAE  0012               	return	
 30934  012AB0  0A03               	xorlw	3	; case 2
 30935  012AB2  A4D8               	btfss	status,2,c
 30936  012AB4  0012               	return	
 30937  012AB6  D7E1               	goto	l22183
 30938  012AB8                     __end_of_SYSTEM_Initialize:
 30939                           	opt stack 0
 30940                           tblptru	equ	0xFF8
 30941                           tblptrh	equ	0xFF7
 30942                           tblptrl	equ	0xFF6
 30943                           tablat	equ	0xFF5
 30944                           prodh	equ	0xFF4
 30945                           prodl	equ	0xFF3
 30946                           intcon	equ	0xFF2
 30947                           intcon2	equ	0xFF1
 30948                           intcon3	equ	0xFF0
 30949                           postinc0	equ	0xFEE
 30950                           wreg	equ	0xFE8
 30951                           indf1	equ	0xFE7
 30952                           postinc1	equ	0xFE6
 30953                           postdec1	equ	0xFE5
 30954                           plusw1	equ	0xFE3
 30955                           fsr1h	equ	0xFE2
 30956                           fsr1l	equ	0xFE1
 30957                           indf2	equ	0xFDF
 30958                           postinc2	equ	0xFDE
 30959                           postdec2	equ	0xFDD
 30960                           plusw2	equ	0xFDB
 30961                           fsr2h	equ	0xFDA
 30962                           fsr2l	equ	0xFD9
 30963                           status	equ	0xFD8
 30964                           
 30965 ;; *************** function _APP_DeviceMSDTasks *****************
 30966 ;; Defined at:
 30967 ;;		line 110 in file "app_device_msd.c"
 30968 ;; Parameters:    Size  Location     Type
 30969 ;;		None
 30970 ;; Auto vars:     Size  Location     Type
 30971 ;;		None
 30972 ;; Return value:  Size  Location     Type
 30973 ;;                  1    wreg      void 
 30974 ;; Registers used:
 30975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30976 ;; Tracked objects:
 30977 ;;		On entry : 0/0
 30978 ;;		On exit  : 0/0
 30979 ;;		Unchanged: 0/0
 30980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30985 ;;Total ram usage:        0 bytes
 30986 ;; Hardware stack levels used:    1
 30987 ;; Hardware stack levels required when called:   21
 30988 ;; This function calls:
 30989 ;;		_MSDTasks
 30990 ;; This function is called by:
 30991 ;;		_main
 30992 ;; This function uses a non-reentrant model
 30993 ;;
 30994                           
 30995                           	psect	text135
 30996  014232                     __ptext135:
 30997                           	opt stack 0
 30998  014232                     _APP_DeviceMSDTasks:
 30999                           	opt stack 9
 31000                           
 31001                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 31002                           
 31003                           ; BSR set to: 0
 31004                           ;incstack = 0
 31005  014232  0E20               	movlw	32
 31006  014234  602B               	cpfslt	_USBDeviceState,c	;volatile
 31007  014236  D001               	goto	l1233
 31008  014238  0012               	return	
 31009  01423A                     l1233:
 31010                           
 31011                           ;app_device_msd.c: 118: }
 31012                           ;app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 31013  01423A  B265               	btfsc	3941,1,c	;volatile
 31014  01423C  0012               	return	
 31015                           
 31016                           ;app_device_msd.c: 127: }
 31017                           ;app_device_msd.c: 129: MSDTasks();
 31018                           
 31019                           ;app_device_msd.c: 125: {
 31020                           ;app_device_msd.c: 126: return;
 31021  01423E  EC1A  F065         	call	_MSDTasks	;wreg free
 31022  014242  0012               	return		;funcret
 31023  014244                     __end_of_APP_DeviceMSDTasks:
 31024                           	opt stack 0
 31025                           tblptru	equ	0xFF8
 31026                           tblptrh	equ	0xFF7
 31027                           tblptrl	equ	0xFF6
 31028                           tablat	equ	0xFF5
 31029                           prodh	equ	0xFF4
 31030                           prodl	equ	0xFF3
 31031                           intcon	equ	0xFF2
 31032                           intcon2	equ	0xFF1
 31033                           intcon3	equ	0xFF0
 31034                           postinc0	equ	0xFEE
 31035                           wreg	equ	0xFE8
 31036                           indf1	equ	0xFE7
 31037                           postinc1	equ	0xFE6
 31038                           postdec1	equ	0xFE5
 31039                           plusw1	equ	0xFE3
 31040                           fsr1h	equ	0xFE2
 31041                           fsr1l	equ	0xFE1
 31042                           indf2	equ	0xFDF
 31043                           postinc2	equ	0xFDE
 31044                           postdec2	equ	0xFDD
 31045                           plusw2	equ	0xFDB
 31046                           fsr2h	equ	0xFDA
 31047                           fsr2l	equ	0xFD9
 31048                           status	equ	0xFD8
 31049                           
 31050 ;; *************** function _MSDTasks *****************
 31051 ;; Defined at:
 31052 ;;		line 335 in file "usb_device_msd.c"
 31053 ;; Parameters:    Size  Location     Type
 31054 ;;		None
 31055 ;; Auto vars:     Size  Location     Type
 31056 ;;  i               1   81[BANK0 ] unsigned char 
 31057 ;; Return value:  Size  Location     Type
 31058 ;;                  1    wreg      unsigned char 
 31059 ;; Registers used:
 31060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31061 ;; Tracked objects:
 31062 ;;		On entry : 0/0
 31063 ;;		On exit  : 0/0
 31064 ;;		Unchanged: 0/0
 31065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31067 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31069 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31070 ;;Total ram usage:        6 bytes
 31071 ;; Hardware stack levels used:    1
 31072 ;; Hardware stack levels required when called:   20
 31073 ;; This function calls:
 31074 ;;		_MSDProcessCommand
 31075 ;;		_USBStallEndpoint
 31076 ;;		_USBTransferOnePacket
 31077 ;; This function is called by:
 31078 ;;		_APP_DeviceMSDTasks
 31079 ;; This function uses a non-reentrant model
 31080 ;;
 31081                           
 31082                           	psect	text136
 31083  00CA34                     __ptext136:
 31084                           	opt stack 0
 31085  00CA34                     _MSDTasks:
 31086                           	opt stack 9
 31087                           
 31088                           ;usb_device_msd.c: 337: uint8_t i;
 31089                           ;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURED_STATE)
 31090                           
 31091                           ;incstack = 0
 31092  00CA34  0E20               	movlw	32
 31093  00CA36  182B               	xorwf	_USBDeviceState,w,c	;volatile
 31094  00CA38  A4D8               	btfss	status,2,c
 31095  00CA3A  0012               	return	
 31096                           
 31097                           ;usb_device_msd.c: 345: }
 31098                           ;usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 31099                           
 31100                           ;usb_device_msd.c: 343: {
 31101                           ;usb_device_msd.c: 344: return 0x00;
 31102                           ;	Return value of _MSDTasks is never used
 31103  00CA3C  98A0               	bcf	4000,4,c	;volatile
 31104                           
 31105                           ;usb_device_msd.c: 357: switch(MSD_State)
 31106  00CA3E  D143               	goto	l20437
 31107  00CA40                     l20339:
 31108                           
 31109                           ;usb_device_msd.c: 360: {
 31110                           ;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 31111  00CA40  0100               	movlb	0	; () banked
 31112  00CA42  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31113  00CA44  0100               	movlb	0	; () banked
 31114  00CA46  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31115  00CA48  B4D8               	btfsc	status,2,c
 31116  00CA4A  D007               	goto	l20343
 31117                           
 31118                           ; BSR set to: 0
 31119  00CA4C  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31120  00CA50  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31121  00CA54  0100               	movlb	0	; () banked
 31122  00CA56  BEDF               	btfsc	indf2,7,c
 31123  00CA58  D145               	goto	l590
 31124  00CA5A                     l20343:
 31125                           
 31126                           ; BSR set to: 0
 31127                           ;usb_device_msd.c: 363: {
 31128                           ;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 31129  00CA5A  0E00               	movlw	0
 31130  00CA5C  0100               	movlb	0	; () banked
 31131  00CA5E  6FB1               	movwf	MSDTasks@i& (0+255),b
 31132  00CA60                     l20345:
 31133                           
 31134                           ; BSR set to: 0
 31135  00CA60  0E1E               	movlw	30
 31136  00CA62  0100               	movlb	0	; () banked
 31137  00CA64  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 31138  00CA66  D001               	goto	l20349
 31139  00CA68  D017               	goto	l20355
 31140  00CA6A                     l20349:
 31141                           
 31142                           ; BSR set to: 0
 31143                           ;usb_device_msd.c: 372: {
 31144                           ;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) = *((uint8_t*)&msd_cbw.dC
      +                          BWSignature + i);
 31145  00CA6A  0100               	movlb	0	; () banked
 31146  00CA6C  51B1               	movf	MSDTasks@i& (0+255),w,b
 31147  00CA6E  0D01               	mullw	1
 31148  00CA70  0E40               	movlw	64
 31149  00CA72  24F3               	addwf	prodl,w,c
 31150  00CA74  6ED9               	movwf	fsr2l,c
 31151  00CA76  0E0D               	movlw	13
 31152  00CA78  20F4               	addwfc	prodh,w,c
 31153  00CA7A  6EDA               	movwf	fsr2h,c
 31154  00CA7C  0100               	movlb	0	; () banked
 31155  00CA7E  51B1               	movf	MSDTasks@i& (0+255),w,b
 31156  00CA80  0D01               	mullw	1
 31157  00CA82  0E41               	movlw	low _gblCBW
 31158  00CA84  24F3               	addwf	prodl,w,c
 31159  00CA86  6EE1               	movwf	fsr1l,c
 31160  00CA88  0E02               	movlw	high _gblCBW
 31161  00CA8A  20F4               	addwfc	prodh,w,c
 31162  00CA8C  6EE2               	movwf	fsr1h,c
 31163  00CA8E  CFDF FFE7          	movff	indf2,indf1
 31164                           
 31165                           ; BSR set to: 0
 31166  00CA92  0100               	movlb	0	; () banked
 31167  00CA94  2BB1               	incf	MSDTasks@i& (0+255),f,b
 31168  00CA96  D7E4               	goto	l20345
 31169  00CA98                     l20355:
 31170                           
 31171                           ; BSR set to: 0
 31172                           ;usb_device_msd.c: 374: }
 31173                           ;usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHandle)->CNT) == 0x1f) && (g
      +                          blCBW.dCBWSignature == (uint32_t)0x43425355))
 31174  00CA98  0100               	movlb	0	; () banked
 31175  00CA9A  EE20 F001          	lfsr	2,1
 31176  00CA9E  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31177  00CAA0  26D9               	addwf	fsr2l,f,c
 31178  00CAA2  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31179  00CAA4  22DA               	addwfc	fsr2h,f,c
 31180  00CAA6  0E1F               	movlw	31
 31181  00CAA8  18DE               	xorwf	postinc2,w,c
 31182  00CAAA  A4D8               	btfss	status,2,c
 31183  00CAAC  D085               	goto	l20395
 31184                           
 31185                           ; BSR set to: 0
 31186  00CAAE  0E55               	movlw	85
 31187  00CAB0  0102               	movlb	2	; () banked
 31188  00CAB2  1941               	xorwf	_gblCBW& (0+255),w,b
 31189  00CAB4  E10C               	bnz	u19601
 31190  00CAB6  0E53               	movlw	83
 31191  00CAB8  0102               	movlb	2	; () banked
 31192  00CABA  1942               	xorwf	(_gblCBW+1)& (0+255),w,b
 31193  00CABC  E17D               	bnz	l20395
 31194  00CABE  0E42               	movlw	66
 31195  00CAC0  0102               	movlb	2	; () banked
 31196  00CAC2  1943               	xorwf	(_gblCBW+2)& (0+255),w,b
 31197  00CAC4  E179               	bnz	l20395
 31198  00CAC6  0E43               	movlw	67
 31199  00CAC8  0102               	movlb	2	; () banked
 31200  00CACA  1944               	xorwf	(_gblCBW+3)& (0+255),w,b
 31201  00CACC  A4D8               	btfss	status,2,c
 31202  00CACE                     u19601:
 31203  00CACE  D074               	goto	l20395
 31204                           
 31205                           ; BSR set to: 2
 31206                           ;usb_device_msd.c: 378: {
 31207                           ;usb_device_msd.c: 381: MSDCBWValid = 1;
 31208  00CAD0  0E01               	movlw	1
 31209  00CAD2  0101               	movlb	1	; () banked
 31210  00CAD4  6FF5               	movwf	_MSDCBWValid& (0+255),b
 31211                           
 31212                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u)
 31213                           ;usb_device_msd.c: 385: &&(gblCBW.bCBWCBLength <= 0x10)
 31214                           ;usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01)
 31215                           ;usb_device_msd.c: 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 31216  00CAD6  0102               	movlb	2	; () banked
 31217  00CAD8  514E               	movf	(_gblCBW+13)& (0+255),w,b
 31218  00CADA  A4D8               	btfss	status,2,c
 31219  00CADC  D060               	goto	l20393
 31220                           
 31221                           ; BSR set to: 2
 31222  00CADE  0E11               	movlw	17
 31223  00CAE0  0102               	movlb	2	; () banked
 31224  00CAE2  614F               	cpfslt	(_gblCBW+14)& (0+255),b
 31225  00CAE4  D05C               	goto	l20393
 31226                           
 31227                           ; BSR set to: 2
 31228  00CAE6  0102               	movlb	2	; () banked
 31229  00CAE8  514F               	movf	(_gblCBW+14)& (0+255),w,b
 31230  00CAEA  B4D8               	btfsc	status,2,c
 31231  00CAEC  D058               	goto	l20393
 31232                           
 31233                           ; BSR set to: 2
 31234  00CAEE  C24D  F0AC         	movff	_gblCBW+12,??_MSDTasks
 31235  00CAF2  0E3F               	movlw	63
 31236  00CAF4  0100               	movlb	0	; () banked
 31237  00CAF6  17AC               	andwf	??_MSDTasks& (0+255),f,b
 31238  00CAF8  A4D8               	btfss	status,2,c
 31239  00CAFA  D051               	goto	l20393
 31240                           
 31241                           ; BSR set to: 0
 31242                           ;usb_device_msd.c: 388: {
 31243                           ;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x53425355;
 31244  00CAFC  0E55               	movlw	85
 31245  00CAFE  010D               	movlb	13	; () banked
 31246  00CB00  6F80               	movwf	128,b	;volatile
 31247  00CB02  0E53               	movlw	83
 31248  00CB04  6F81               	movwf	129,b	;volatile
 31249  00CB06  0E42               	movlw	66
 31250  00CB08  6F82               	movwf	130,b	;volatile
 31251  00CB0A  0E53               	movlw	83
 31252  00CB0C  6F83               	movwf	131,b	;volatile
 31253                           
 31254                           ; BSR set to: 13
 31255                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 31256  00CB0E  C245  FD84         	movff	_gblCBW+4,3460	;volatile
 31257  00CB12  C246  FD85         	movff	_gblCBW+5,3461	;volatile
 31258  00CB16  C247  FD86         	movff	_gblCBW+6,3462	;volatile
 31259  00CB1A  C248  FD87         	movff	_gblCBW+7,3463	;volatile
 31260                           
 31261                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 31262  00CB1E  0E00               	movlw	0
 31263  00CB20  010D               	movlb	13	; () banked
 31264  00CB22  6F88               	movwf	136,b	;volatile
 31265  00CB24  0E00               	movlw	0
 31266  00CB26  6F89               	movwf	137,b	;volatile
 31267  00CB28  0E00               	movlw	0
 31268  00CB2A  6F8A               	movwf	138,b	;volatile
 31269  00CB2C  0E00               	movlw	0
 31270  00CB2E  6F8B               	movwf	139,b	;volatile
 31271                           
 31272                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 31273  00CB30  0E00               	movlw	0
 31274  00CB32  010D               	movlb	13	; () banked
 31275  00CB34  6F8C               	movwf	140,b	;volatile
 31276                           
 31277                           ; BSR set to: 13
 31278                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 31279  00CB36  0100               	movlb	0	; () banked
 31280  00CB38  69E6               	setf	_MSDCommandState& (0+255),b
 31281                           
 31282                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 31283  00CB3A  0E00               	movlw	0
 31284  00CB3C  0101               	movlb	1	; () banked
 31285  00CB3E  6FF9               	movwf	_MSDReadState& (0+255),b
 31286                           
 31287                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 31288  00CB40  0E00               	movlw	0
 31289  00CB42  6E1F               	movwf	_MSDWriteState,c
 31290                           
 31291                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 31292  00CB44  0E00               	movlw	0
 31293  00CB46  0101               	movlb	1	; () banked
 31294  00CB48  6FF8               	movwf	_MSDRetryAttempt& (0+255),b
 31295                           
 31296                           ; BSR set to: 1
 31297                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 31298  00CB4A  0E03               	movlw	3
 31299  00CB4C  0102               	movlb	2	; () banked
 31300  00CB4E  1950               	xorwf	(_gblCBW+15)& (0+255),w,b
 31301  00CB50  B4D8               	btfsc	status,2,c
 31302  00CB52  D00B               	goto	l20379
 31303                           
 31304                           ; BSR set to: 2
 31305                           ;usb_device_msd.c: 421: {
 31306                           ;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 31307  00CB54  0102               	movlb	2	; () banked
 31308  00CB56  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 31309  00CB58  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 31310  00CB5A  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 31311  00CB5C  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 31312                           
 31313                           ; BSR set to: 2
 31314                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 31315  00CB5E  0E00               	movlw	0
 31316  00CB60  0102               	movlb	2	; () banked
 31317  00CB62  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31318                           
 31319                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 31320  00CB64  0E00               	movlw	0
 31321  00CB66  0102               	movlb	2	; () banked
 31322  00CB68  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31323  00CB6A                     l20379:
 31324                           
 31325                           ; BSR set to: 2
 31326                           ;usb_device_msd.c: 425: }
 31327                           ;usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 31328  00CB6A  0102               	movlb	2	; () banked
 31329  00CB6C  AF4D               	btfss	(_gblCBW+12)& (0+255),7,b
 31330  00CB6E  D002               	goto	l20383
 31331                           
 31332                           ; BSR set to: 2
 31333                           ;usb_device_msd.c: 432: {
 31334                           ;usb_device_msd.c: 433: MSD_State = 0x01;
 31335  00CB70  0E01               	movlw	1
 31336  00CB72  D001               	goto	L20
 31337  00CB74                     l20383:
 31338                           
 31339                           ;usb_device_msd.c: 435: else
 31340                           ;usb_device_msd.c: 436: {
 31341                           ;usb_device_msd.c: 437: MSD_State = 0x02;
 31342  00CB74  0E02               	movlw	2
 31343  00CB76                     L20:
 31344  00CB76  0100               	movlb	0	; () banked
 31345  00CB78  6FE7               	movwf	_MSD_State& (0+255),b
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;usb_device_msd.c: 438: }
 31349                           ;usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 31350                           
 31351                           ; BSR set to: 0
 31352  00CB7A  0102               	movlb	2	; () banked
 31353  00CB7C  5149               	movf	(_gblCBW+8)& (0+255),w,b
 31354  00CB7E  0102               	movlb	2	; () banked
 31355  00CB80  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 31356  00CB82  0102               	movlb	2	; () banked
 31357  00CB84  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 31358  00CB86  0102               	movlb	2	; () banked
 31359  00CB88  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 31360  00CB8A  B4D8               	btfsc	status,2,c
 31361  00CB8C  D002               	goto	l20389
 31362                           
 31363                           ; BSR set to: 2
 31364                           ;usb_device_msd.c: 443: {
 31365                           ;usb_device_msd.c: 444: MSDHostNoData = 0;
 31366  00CB8E  0E00               	movlw	0
 31367  00CB90  D001               	goto	L21
 31368  00CB92                     l20389:
 31369                           
 31370                           ;usb_device_msd.c: 446: else
 31371                           ;usb_device_msd.c: 447: {
 31372                           ;usb_device_msd.c: 448: MSDHostNoData = 1;
 31373  00CB92  0E01               	movlw	1
 31374  00CB94                     L21:
 31375  00CB94  0100               	movlb	0	; () banked
 31376  00CB96  6FE5               	movwf	_MSDHostNoData& (0+255),b
 31377                           
 31378                           ; BSR set to: 0
 31379                           ;usb_device_msd.c: 449: }
 31380                           ;usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 31381                           
 31382                           ; BSR set to: 0
 31383  00CB98  C250  F0E6         	movff	_gblCBW+15,_MSDCommandState
 31384                           
 31385                           ;usb_device_msd.c: 454: }
 31386  00CB9C  D0A3               	goto	l590
 31387  00CB9E                     l20393:
 31388                           
 31389                           ;usb_device_msd.c: 455: else
 31390                           ;usb_device_msd.c: 456: {
 31391                           ;usb_device_msd.c: 460: USBStallEndpoint(2u, 1);
 31392  00CB9E  0E01               	movlw	1
 31393  00CBA0  0100               	movlb	0	; () banked
 31394  00CBA2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31395  00CBA4  0E02               	movlw	2
 31396  00CBA6  ECC9  F076         	call	_USBStallEndpoint
 31397                           
 31398                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 31399  00CBAA  0E00               	movlw	0
 31400  00CBAC  0100               	movlb	0	; () banked
 31401  00CBAE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31402  00CBB0  0E02               	movlw	2
 31403  00CBB2  ECC9  F076         	call	_USBStallEndpoint
 31404                           
 31405                           ;usb_device_msd.c: 462: }
 31406                           ;usb_device_msd.c: 463: }
 31407  00CBB6  D096               	goto	l590
 31408  00CBB8                     l20395:
 31409                           
 31410                           ;usb_device_msd.c: 464: else
 31411                           ;usb_device_msd.c: 465: {
 31412                           ;usb_device_msd.c: 469: USBStallEndpoint(2u, 1);
 31413  00CBB8  0E01               	movlw	1
 31414  00CBBA  0100               	movlb	0	; () banked
 31415  00CBBC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31416  00CBBE  0E02               	movlw	2
 31417  00CBC0  ECC9  F076         	call	_USBStallEndpoint
 31418                           
 31419                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 31420  00CBC4  0E00               	movlw	0
 31421  00CBC6  0100               	movlb	0	; () banked
 31422  00CBC8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31423  00CBCA  0E02               	movlw	2
 31424  00CBCC  ECC9  F076         	call	_USBStallEndpoint
 31425                           
 31426                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 31427  00CBD0  0E00               	movlw	0
 31428  00CBD2  0101               	movlb	1	; () banked
 31429  00CBD4  6FF5               	movwf	_MSDCBWValid& (0+255),b
 31430                           
 31431                           ; BSR set to: 1
 31432                           ;usb_device_msd.c: 474: }
 31433                           ;usb_device_msd.c: 475: }
 31434                           ;usb_device_msd.c: 476: break;
 31435                           
 31436                           ; BSR set to: 1
 31437  00CBD6  D086               	goto	l590
 31438  00CBD8                     l20399:
 31439                           
 31440                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 31441  00CBD8  EC88  F071         	call	_MSDProcessCommand	;wreg free
 31442  00CBDC  0AFF               	xorlw	255
 31443  00CBDE  A4D8               	btfss	status,2,c
 31444  00CBE0  D081               	goto	l590
 31445  00CBE2  D016               	goto	l595
 31446  00CBE4                     l20403:
 31447                           
 31448                           ; BSR set to: 0
 31449                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 31450  00CBE4  EC88  F071         	call	_MSDProcessCommand	;wreg free
 31451  00CBE8  0AFF               	xorlw	255
 31452  00CBEA  A4D8               	btfss	status,2,c
 31453  00CBEC  D07B               	goto	l590
 31454                           
 31455                           ;usb_device_msd.c: 487: {
 31456                           ;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_csw.dCSWDataResidue!=0))
 31457  00CBEE  010D               	movlb	13	; () banked
 31458  00CBF0  518C               	movf	140,w,b	;volatile
 31459  00CBF2  A4D8               	btfss	status,2,c
 31460  00CBF4  D00D               	goto	l595
 31461                           
 31462                           ; BSR set to: 13
 31463  00CBF6  010D               	movlb	13	; () banked
 31464  00CBF8  5188               	movf	136,w,b	;volatile
 31465  00CBFA  010D               	movlb	13	; () banked
 31466  00CBFC  1189               	iorwf	137,w,b	;volatile
 31467  00CBFE  010D               	movlb	13	; () banked
 31468  00CC00  118A               	iorwf	138,w,b	;volatile
 31469  00CC02  010D               	movlb	13	; () banked
 31470  00CC04  118B               	iorwf	139,w,b	;volatile
 31471  00CC06  B4D8               	btfsc	status,2,c
 31472  00CC08  D003               	goto	l595
 31473                           
 31474                           ; BSR set to: 13
 31475                           ;usb_device_msd.c: 490: {
 31476                           ;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 31477  00CC0A  0E02               	movlw	2
 31478  00CC0C  010D               	movlb	13	; () banked
 31479  00CC0E  6F8C               	movwf	140,b	;volatile
 31480  00CC10                     l595:
 31481                           
 31482                           ; BSR set to: 13
 31483                           ;usb_device_msd.c: 492: }
 31484                           ;usb_device_msd.c: 493: MSD_State = 0x03;
 31485  00CC10  0E03               	movlw	3
 31486  00CC12  D049               	goto	L22
 31487  00CC14                     l20411:
 31488                           
 31489                           ; BSR set to: 0
 31490  00CC14  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2694
 31491  00CC18  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2694+1
 31492                           
 31493                           ; BSR set to: 0
 31494                           
 31495                           ; BSR set to: 0
 31496                           
 31497                           ; BSR set to: 0
 31498  00CC1C  0100               	movlb	0	; () banked
 31499  00CC1E  51AD               	movf	_MSDTasks$2694& (0+255),w,b
 31500  00CC20  0100               	movlb	0	; () banked
 31501  00CC22  11AE               	iorwf	(_MSDTasks$2694+1)& (0+255),w,b
 31502  00CC24  B4D8               	btfsc	status,2,c
 31503  00CC26  D00B               	goto	l20423
 31504                           
 31505                           ; BSR set to: 0
 31506  00CC28  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2695
 31507  00CC2C  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2695+1
 31508                           
 31509                           ; BSR set to: 0
 31510                           
 31511                           ; BSR set to: 0
 31512                           
 31513                           ; BSR set to: 0
 31514                           
 31515                           ; BSR set to: 0
 31516  00CC30  C0AF  FFD9         	movff	_MSDTasks$2695,fsr2l
 31517  00CC34  C0B0  FFDA         	movff	_MSDTasks$2695+1,fsr2h
 31518  00CC38  0100               	movlb	0	; () banked
 31519  00CC3A  BEDF               	btfsc	indf2,7,c
 31520  00CC3C  D053               	goto	l590
 31521  00CC3E                     l20423:
 31522                           
 31523                           ; BSR set to: 0
 31524                           ;usb_device_msd.c: 502: }
 31525                           ;usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_csw,0x
      +                          0d);
 31526  00CC3E  0E01               	movlw	1
 31527  00CC40  0100               	movlb	0	; () banked
 31528  00CC42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31529  00CC44  0E80               	movlw	128
 31530  00CC46  0100               	movlb	0	; () banked
 31531  00CC48  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31532  00CC4A  0E0D               	movlw	13
 31533  00CC4C  0100               	movlb	0	; () banked
 31534  00CC4E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31535  00CC50  0E0D               	movlw	13
 31536  00CC52  0100               	movlb	0	; () banked
 31537  00CC54  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31538  00CC56  0E02               	movlw	2
 31539  00CC58  EC6B  F077         	call	_USBTransferOnePacket
 31540  00CC5C  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31541  00CC60  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31542                           
 31543                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 31544  00CC64  0100               	movlb	0	; () banked
 31545  00CC66  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31546  00CC68  0100               	movlb	0	; () banked
 31547  00CC6A  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31548  00CC6C  B4D8               	btfsc	status,2,c
 31549  00CC6E  D007               	goto	l20429
 31550                           
 31551                           ; BSR set to: 0
 31552  00CC70  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31553  00CC74  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31554  00CC78  0100               	movlb	0	; () banked
 31555  00CC7A  BEDF               	btfsc	indf2,7,c
 31556  00CC7C  D013               	goto	l20431
 31557  00CC7E                     l20429:
 31558                           
 31559                           ; BSR set to: 0
 31560                           ;usb_device_msd.c: 509: {
 31561                           ;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 31562  00CC7E  0E00               	movlw	0
 31563  00CC80  0100               	movlb	0	; () banked
 31564  00CC82  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31565  00CC84  0E40               	movlw	64
 31566  00CC86  0100               	movlb	0	; () banked
 31567  00CC88  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31568  00CC8A  0E0D               	movlw	13
 31569  00CC8C  0100               	movlb	0	; () banked
 31570  00CC8E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31571  00CC90  0E40               	movlw	64
 31572  00CC92  0100               	movlb	0	; () banked
 31573  00CC94  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31574  00CC96  0E02               	movlw	2
 31575  00CC98  EC6B  F077         	call	_USBTransferOnePacket
 31576  00CC9C  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31577  00CCA0  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31578  00CCA4                     l20431:
 31579                           
 31580                           ;usb_device_msd.c: 511: }
 31581                           ;usb_device_msd.c: 512: MSD_State=0x00;
 31582  00CCA4  0E00               	movlw	0
 31583  00CCA6                     L22:
 31584  00CCA6  0100               	movlb	0	; () banked
 31585  00CCA8  6FE7               	movwf	_MSD_State& (0+255),b
 31586                           
 31587                           ;usb_device_msd.c: 513: break;
 31588  00CCAA  D01C               	goto	l590
 31589  00CCAC                     l20433:
 31590                           
 31591                           ; BSR set to: 0
 31592                           ;usb_device_msd.c: 518: MSD_State=0x00;
 31593  00CCAC  0E00               	movlw	0
 31594  00CCAE  0100               	movlb	0	; () banked
 31595  00CCB0  6FE7               	movwf	_MSD_State& (0+255),b
 31596                           
 31597                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 31598  00CCB2  0E02               	movlw	2
 31599  00CCB4  010D               	movlb	13	; () banked
 31600  00CCB6  6F8C               	movwf	140,b	;volatile
 31601                           
 31602                           ; BSR set to: 13
 31603                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 31604  00CCB8  0E00               	movlw	0
 31605  00CCBA  0100               	movlb	0	; () banked
 31606  00CCBC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31607  00CCBE  0E02               	movlw	2
 31608  00CCC0  ECC9  F076         	call	_USBStallEndpoint
 31609                           
 31610                           ;usb_device_msd.c: 521: }
 31611  00CCC4  D00F               	goto	l590
 31612  00CCC6                     l20437:
 31613  00CCC6  0100               	movlb	0	; () banked
 31614  00CCC8  51E7               	movf	_MSD_State& (0+255),w,b
 31615                           
 31616                           ; Switch size 1, requested type "space"
 31617                           ; Number of cases is 4, Range of values is 0 to 3
 31618                           ; switch strategies available:
 31619                           ; Name         Instructions Cycles
 31620                           ; simple_byte           13     7 (average)
 31621                           ;	Chosen strategy is simple_byte
 31622  00CCCA  0A00               	xorlw	0	; case 0
 31623  00CCCC  B4D8               	btfsc	status,2,c
 31624  00CCCE  D6B8               	goto	l20339
 31625  00CCD0  0A01               	xorlw	1	; case 1
 31626  00CCD2  B4D8               	btfsc	status,2,c
 31627  00CCD4  D781               	goto	l20399
 31628  00CCD6  0A03               	xorlw	3	; case 2
 31629  00CCD8  B4D8               	btfsc	status,2,c
 31630  00CCDA  D784               	goto	l20403
 31631  00CCDC  0A01               	xorlw	1	; case 3
 31632  00CCDE  B4D8               	btfsc	status,2,c
 31633  00CCE0  D799               	goto	l20411
 31634  00CCE2  D7E4               	goto	l20433
 31635  00CCE4                     l590:
 31636                           
 31637                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 31638  00CCE4  88A0               	bsf	4000,4,c	;volatile
 31639                           
 31640                           ;usb_device_msd.c: 526: return MSD_State;
 31641                           ;	Return value of _MSDTasks is never used
 31642  00CCE6  0012               	return		;funcret
 31643  00CCE8                     __end_of_MSDTasks:
 31644                           	opt stack 0
 31645                           tblptru	equ	0xFF8
 31646                           tblptrh	equ	0xFF7
 31647                           tblptrl	equ	0xFF6
 31648                           tablat	equ	0xFF5
 31649                           prodh	equ	0xFF4
 31650                           prodl	equ	0xFF3
 31651                           intcon	equ	0xFF2
 31652                           intcon2	equ	0xFF1
 31653                           intcon3	equ	0xFF0
 31654                           postinc0	equ	0xFEE
 31655                           wreg	equ	0xFE8
 31656                           indf1	equ	0xFE7
 31657                           postinc1	equ	0xFE6
 31658                           postdec1	equ	0xFE5
 31659                           plusw1	equ	0xFE3
 31660                           fsr1h	equ	0xFE2
 31661                           fsr1l	equ	0xFE1
 31662                           indf2	equ	0xFDF
 31663                           postinc2	equ	0xFDE
 31664                           postdec2	equ	0xFDD
 31665                           plusw2	equ	0xFDB
 31666                           fsr2h	equ	0xFDA
 31667                           fsr2l	equ	0xFD9
 31668                           status	equ	0xFD8
 31669                           
 31670 ;; *************** function _MSDProcessCommand *****************
 31671 ;; Defined at:
 31672 ;;		line 553 in file "usb_device_msd.c"
 31673 ;; Parameters:    Size  Location     Type
 31674 ;;		None
 31675 ;; Auto vars:     Size  Location     Type
 31676 ;;		None
 31677 ;; Return value:  Size  Location     Type
 31678 ;;                  1    wreg      unsigned char 
 31679 ;; Registers used:
 31680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31681 ;; Tracked objects:
 31682 ;;		On entry : 0/0
 31683 ;;		On exit  : 0/0
 31684 ;;		Unchanged: 0/0
 31685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31688 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31689 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31690 ;;Total ram usage:        5 bytes
 31691 ;; Hardware stack levels used:    1
 31692 ;; Hardware stack levels required when called:   19
 31693 ;; This function calls:
 31694 ;;		_ExternalFlash_MediaDetect
 31695 ;;		_ExternalFlash_MediaInitialize
 31696 ;;		_MSDProcessCommandMediaAbsent
 31697 ;;		_MSDProcessCommandMediaPresent
 31698 ;; This function is called by:
 31699 ;;		_MSDTasks
 31700 ;; This function uses a non-reentrant model
 31701 ;;
 31702                           
 31703                           	psect	text137
 31704  00E310                     __ptext137:
 31705                           	opt stack 0
 31706  00E310                     _MSDProcessCommand:
 31707                           	opt stack 9
 31708                           
 31709                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 31710                           
 31711                           ;incstack = 0
 31712  00E310  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 31713  00E314  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 31714  00E318  EE22  F0C4         	lfsr	2,_LUN+9
 31715  00E31C  D801               	call	u18488
 31716  00E31E  D00A               	goto	u18489
 31717  00E320                     u18488:
 31718  00E320  0005               	push	
 31719  00E322  6EFA               	movwf	pclath,c
 31720  00E324  50DE               	movf	postinc2,w,c
 31721  00E326  6EFD               	movwf	tosl,c
 31722  00E328  50DE               	movf	postinc2,w,c
 31723  00E32A  6EFE               	movwf	tosh,c
 31724  00E32C  50DE               	movf	postinc2,w,c
 31725  00E32E  6EFF               	movwf	tosu,c
 31726  00E330  50FA               	movf	pclath,w,c
 31727  00E332  0012               	return		;indir
 31728  00E334                     u18489:
 31729  00E334  0900               	iorlw	0
 31730  00E336  B4D8               	btfsc	status,2,c
 31731  00E338  D00C               	goto	l19415
 31732  00E33A  0102               	movlb	2	; () banked
 31733  00E33C  514E               	movf	(_gblCBW+13)& (0+255),w,b
 31734  00E33E  0D01               	mullw	1
 31735  00E340  0EF6               	movlw	low _SoftDetach
 31736  00E342  24F3               	addwf	prodl,w,c
 31737  00E344  6ED9               	movwf	fsr2l,c
 31738  00E346  0E01               	movlw	high _SoftDetach
 31739  00E348  20F4               	addwfc	prodh,w,c
 31740  00E34A  6EDA               	movwf	fsr2h,c
 31741  00E34C  04DE               	decf	postinc2,w,c
 31742  00E34E  A4D8               	btfss	status,2,c
 31743  00E350  D025               	goto	l19419
 31744  00E352                     l19415:
 31745                           
 31746                           ;usb_device_msd.c: 558: {
 31747                           ;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCBW.bCBWLUN);
 31748  00E352  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31749  00E356  0E01               	movlw	1
 31750  00E358  0100               	movlb	0	; () banked
 31751  00E35A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31752  00E35C  0E00               	movlw	0
 31753  00E35E  0100               	movlb	0	; () banked
 31754  00E360  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31755  00E362  0100               	movlb	0	; () banked
 31756  00E364  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31757  00E366  D004               	goto	u18514
 31758  00E368                     u18515:
 31759  00E368  90D8               	bcf	status,0,c
 31760  00E36A  0100               	movlb	0	; () banked
 31761  00E36C  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31762  00E36E  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31763  00E370                     u18514:
 31764  00E370  0100               	movlb	0	; () banked
 31765  00E372  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31766  00E374  D7F9               	goto	u18515
 31767  00E376  0100               	movlb	0	; () banked
 31768  00E378  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 31769  00E37A  0100               	movlb	0	; () banked
 31770  00E37C  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 31771  00E37E  0100               	movlb	0	; () banked
 31772  00E380  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 31773  00E382  0100               	movlb	0	; () banked
 31774  00E384  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 31775  00E386  0100               	movlb	0	; () banked
 31776  00E388  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 31777  00E38A  0102               	movlb	2	; () banked
 31778  00E38C  17B2               	andwf	_gblMediaPresent& (0+255),f,b
 31779  00E38E  0100               	movlb	0	; () banked
 31780  00E390  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 31781  00E392  0102               	movlb	2	; () banked
 31782  00E394  17B3               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 31783                           
 31784                           ; BSR set to: 2
 31785                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 31786  00E396  EC90  F095         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31787                           
 31788                           ;usb_device_msd.c: 563: }
 31789  00E39A  D067               	goto	l19439
 31790  00E39C                     l19419:
 31791                           
 31792                           ;usb_device_msd.c: 564: else
 31793                           ;usb_device_msd.c: 565: {
 31794                           ;usb_device_msd.c: 567: if((gblMediaPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 31795  00E39C  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31796  00E3A0  0E01               	movlw	1
 31797  00E3A2  0100               	movlb	0	; () banked
 31798  00E3A4  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31799  00E3A6  0E00               	movlw	0
 31800  00E3A8  0100               	movlb	0	; () banked
 31801  00E3AA  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31802  00E3AC  0100               	movlb	0	; () banked
 31803  00E3AE  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31804  00E3B0  D004               	goto	u18524
 31805  00E3B2                     u18525:
 31806  00E3B2  90D8               	bcf	status,0,c
 31807  00E3B4  0100               	movlb	0	; () banked
 31808  00E3B6  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31809  00E3B8  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31810  00E3BA                     u18524:
 31811  00E3BA  0100               	movlb	0	; () banked
 31812  00E3BC  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31813  00E3BE  D7F9               	goto	u18525
 31814  00E3C0  0102               	movlb	2	; () banked
 31815  00E3C2  51B2               	movf	_gblMediaPresent& (0+255),w,b
 31816  00E3C4  0100               	movlb	0	; () banked
 31817  00E3C6  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 31818  00E3C8  0102               	movlb	2	; () banked
 31819  00E3CA  51B3               	movf	(_gblMediaPresent+1)& (0+255),w,b
 31820  00E3CC  0100               	movlb	0	; () banked
 31821  00E3CE  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 31822  00E3D0  0100               	movlb	0	; () banked
 31823  00E3D2  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31824  00E3D4  0100               	movlb	0	; () banked
 31825  00E3D6  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 31826  00E3D8  A4D8               	btfss	status,2,c
 31827  00E3DA  D045               	goto	l19437
 31828                           
 31829                           ; BSR set to: 0
 31830                           ;usb_device_msd.c: 568: {
 31831                           ;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 31832  00E3DC  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 31833  00E3E0  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 31834  00E3E4  D801               	call	u18548
 31835  00E3E6  D00B               	goto	u18549
 31836  00E3E8                     u18548:
 31837  00E3E8  0005               	push	
 31838  00E3EA  6EFA               	movwf	pclath,c
 31839  00E3EC  0102               	movlb	2	; () banked
 31840  00E3EE  51BB               	movf	_LUN& (0+255),w,b
 31841  00E3F0  6EFD               	movwf	tosl,c
 31842  00E3F2  51BC               	movf	(_LUN+1)& (0+255),w,b
 31843  00E3F4  6EFE               	movwf	tosh,c
 31844  00E3F6  51BD               	movf	(_LUN+2)& (0+255),w,b
 31845  00E3F8  6EFF               	movwf	tosu,c
 31846  00E3FA  50FA               	movf	pclath,w,c
 31847  00E3FC  0012               	return		;indir
 31848  00E3FE                     u18549:
 31849  00E3FE  0100               	movlb	0	; () banked
 31850  00E400  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 31851  00E402  0100               	movlb	0	; () banked
 31852  00E404  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 31853  00E406  B4D8               	btfsc	status,2,c
 31854  00E408  D02B               	goto	l19435
 31855                           
 31856                           ; BSR set to: 0
 31857                           ;usb_device_msd.c: 571: {
 31858                           ;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 31859  00E40A  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31860  00E40E  0E01               	movlw	1
 31861  00E410  0100               	movlb	0	; () banked
 31862  00E412  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31863  00E414  0E00               	movlw	0
 31864  00E416  0100               	movlb	0	; () banked
 31865  00E418  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31866  00E41A  0100               	movlb	0	; () banked
 31867  00E41C  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31868  00E41E  D004               	goto	u18564
 31869  00E420                     u18565:
 31870  00E420  90D8               	bcf	status,0,c
 31871  00E422  0100               	movlb	0	; () banked
 31872  00E424  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31873  00E426  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31874  00E428                     u18564:
 31875  00E428  0100               	movlb	0	; () banked
 31876  00E42A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31877  00E42C  D7F9               	goto	u18565
 31878  00E42E  0100               	movlb	0	; () banked
 31879  00E430  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31880  00E432  0102               	movlb	2	; () banked
 31881  00E434  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 31882  00E436  0100               	movlb	0	; () banked
 31883  00E438  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 31884  00E43A  0102               	movlb	2	; () banked
 31885  00E43C  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 31886                           
 31887                           ; BSR set to: 2
 31888                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 31889  00E43E  0102               	movlb	2	; () banked
 31890  00E440  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31891  00E442  0BF0               	andlw	-16
 31892  00E444  0906               	iorlw	6
 31893  00E446  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31894                           
 31895                           ; BSR set to: 2
 31896                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 31897  00E448  0E28               	movlw	40
 31898  00E44A  0102               	movlb	2	; () banked
 31899  00E44C  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31900                           
 31901                           ; BSR set to: 2
 31902                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 31903  00E44E  0E00               	movlw	0
 31904  00E450  0102               	movlb	2	; () banked
 31905  00E452  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31906                           
 31907                           ; BSR set to: 2
 31908                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 31909  00E454  0E01               	movlw	1
 31910  00E456  010D               	movlb	13	; () banked
 31911  00E458  6F8C               	movwf	140,b	;volatile
 31912                           
 31913                           ; BSR set to: 13
 31914                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 31915  00E45A  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 31916                           
 31917                           ;usb_device_msd.c: 589: }
 31918  00E45E  D005               	goto	l19439
 31919  00E460                     l19435:
 31920                           
 31921                           ;usb_device_msd.c: 590: else
 31922                           ;usb_device_msd.c: 591: {
 31923                           ;usb_device_msd.c: 593: MSDProcessCommandMediaAbsent();
 31924  00E460  EC90  F095         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31925                           
 31926                           ;usb_device_msd.c: 594: }
 31927                           ;usb_device_msd.c: 595: }
 31928  00E464  D002               	goto	l19439
 31929  00E466                     l19437:
 31930                           
 31931                           ;usb_device_msd.c: 596: else
 31932                           ;usb_device_msd.c: 597: {
 31933                           ;usb_device_msd.c: 600: MSDProcessCommandMediaPresent();
 31934  00E466  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 31935  00E46A                     l19439:
 31936                           
 31937                           ;usb_device_msd.c: 601: }
 31938                           ;usb_device_msd.c: 602: }
 31939                           ;usb_device_msd.c: 604: return MSDCommandState;
 31940  00E46A  0100               	movlb	0	; () banked
 31941  00E46C  51E6               	movf	_MSDCommandState& (0+255),w,b
 31942  00E46E  0012               	return	
 31943  00E470                     __end_of_MSDProcessCommand:
 31944                           	opt stack 0
 31945                           tosu	equ	0xFFF
 31946                           tosh	equ	0xFFE
 31947                           tosl	equ	0xFFD
 31948                           pclath	equ	0xFFA
 31949                           tblptru	equ	0xFF8
 31950                           tblptrh	equ	0xFF7
 31951                           tblptrl	equ	0xFF6
 31952                           tablat	equ	0xFF5
 31953                           prodh	equ	0xFF4
 31954                           prodl	equ	0xFF3
 31955                           intcon	equ	0xFF2
 31956                           intcon2	equ	0xFF1
 31957                           intcon3	equ	0xFF0
 31958                           postinc0	equ	0xFEE
 31959                           wreg	equ	0xFE8
 31960                           indf1	equ	0xFE7
 31961                           postinc1	equ	0xFE6
 31962                           postdec1	equ	0xFE5
 31963                           plusw1	equ	0xFE3
 31964                           fsr1h	equ	0xFE2
 31965                           fsr1l	equ	0xFE1
 31966                           indf2	equ	0xFDF
 31967                           postinc2	equ	0xFDE
 31968                           postdec2	equ	0xFDD
 31969                           plusw2	equ	0xFDB
 31970                           fsr2h	equ	0xFDA
 31971                           fsr2l	equ	0xFD9
 31972                           status	equ	0xFD8
 31973                           
 31974 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 31975 ;; Defined at:
 31976 ;;		line 635 in file "usb_device_msd.c"
 31977 ;; Parameters:    Size  Location     Type
 31978 ;;		None
 31979 ;; Auto vars:     Size  Location     Type
 31980 ;;		None
 31981 ;; Return value:  Size  Location     Type
 31982 ;;                  1    wreg      void 
 31983 ;; Registers used:
 31984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31985 ;; Tracked objects:
 31986 ;;		On entry : 0/0
 31987 ;;		On exit  : 0/0
 31988 ;;		Unchanged: 0/0
 31989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31994 ;;Total ram usage:        0 bytes
 31995 ;; Hardware stack levels used:    1
 31996 ;; Hardware stack levels required when called:   18
 31997 ;; This function calls:
 31998 ;;		_MSDErrorHandler
 31999 ;;		_MSDProcessCommandMediaPresent
 32000 ;;		_ResetSenseData
 32001 ;; This function is called by:
 32002 ;;		_MSDProcessCommand
 32003 ;; This function uses a non-reentrant model
 32004 ;;
 32005                           
 32006                           	psect	text138
 32007  012B20                     __ptext138:
 32008                           	opt stack 0
 32009  012B20                     _MSDProcessCommandMediaAbsent:
 32010                           	opt stack 9
 32011                           
 32012                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 32013                           
 32014                           ; BSR set to: 0
 32015                           ;incstack = 0
 32016  012B20  D020               	goto	l19017
 32017  012B22                     l18995:
 32018                           
 32019                           ;usb_device_msd.c: 646: ResetSenseData();
 32020  012B22  ECC7  F08F         	call	_ResetSenseData	;wreg free
 32021                           
 32022                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 32023  012B26  0102               	movlb	2	; () banked
 32024  012B28  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32025  012B2A  0BF0               	andlw	-16
 32026  012B2C  0902               	iorlw	2
 32027  012B2E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32028                           
 32029                           ; BSR set to: 2
 32030                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 32031  012B30  0E3A               	movlw	58
 32032  012B32  0102               	movlb	2	; () banked
 32033  012B34  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32034                           
 32035                           ; BSR set to: 2
 32036                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 32037  012B36  0E00               	movlw	0
 32038  012B38  0102               	movlb	2	; () banked
 32039  012B3A  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32040                           
 32041                           ; BSR set to: 2
 32042                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 32043  012B3C  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 32044                           
 32045                           ;usb_device_msd.c: 655: break;
 32046  012B40  0012               	return	
 32047  012B42                     l19005:
 32048                           
 32049                           ;usb_device_msd.c: 658: case 0x00:
 32050                           ;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 32051  012B42  0E01               	movlw	1
 32052  012B44  010D               	movlb	13	; () banked
 32053  012B46  6F8C               	movwf	140,b	;volatile
 32054                           
 32055                           ; BSR set to: 13
 32056                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 32057  012B48  0100               	movlb	0	; () banked
 32058  012B4A  69E6               	setf	_MSDCommandState& (0+255),b
 32059                           
 32060                           ;usb_device_msd.c: 665: break;
 32061  012B4C  0012               	return	
 32062  012B4E                     l19009:
 32063                           
 32064                           ; BSR set to: 0
 32065                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 32066  012B4E  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 32067                           
 32068                           ;usb_device_msd.c: 671: break;
 32069  012B52  0012               	return	
 32070  012B54                     l19011:
 32071                           
 32072                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 32073  012B54  EC38  F052         	call	_MSDProcessCommandMediaPresent	;wreg free
 32074                           
 32075                           ;usb_device_msd.c: 677: break;
 32076  012B58  0012               	return	
 32077  012B5A                     l19013:
 32078                           
 32079                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 32080  012B5A  0E7F               	movlw	127
 32081  012B5C  EC05  F078         	call	_MSDErrorHandler
 32082                           
 32083                           ;usb_device_msd.c: 685: }
 32084                           
 32085                           ;usb_device_msd.c: 684: break;
 32086  012B60  0012               	return	
 32087  012B62                     l19017:
 32088  012B62  0100               	movlb	0	; () banked
 32089  012B64  51E6               	movf	_MSDCommandState& (0+255),w,b
 32090                           
 32091                           ; Switch size 1, requested type "space"
 32092                           ; Number of cases is 5, Range of values is 0 to 253
 32093                           ; switch strategies available:
 32094                           ; Name         Instructions Cycles
 32095                           ; simple_byte           16     9 (average)
 32096                           ;	Chosen strategy is simple_byte
 32097  012B66  0A00               	xorlw	0	; case 0
 32098  012B68  B4D8               	btfsc	status,2,c
 32099  012B6A  D7EB               	goto	l19005
 32100  012B6C  0A03               	xorlw	3	; case 3
 32101  012B6E  B4D8               	btfsc	status,2,c
 32102  012B70  D7D8               	goto	l18995
 32103  012B72  0A11               	xorlw	17	; case 18
 32104  012B74  B4D8               	btfsc	status,2,c
 32105  012B76  D7EB               	goto	l19009
 32106  012B78  0A0C               	xorlw	12	; case 30
 32107  012B7A  B4D8               	btfsc	status,2,c
 32108  012B7C  D7E2               	goto	l19005
 32109  012B7E  0AE3               	xorlw	227	; case 253
 32110  012B80  B4D8               	btfsc	status,2,c
 32111  012B82  D7E8               	goto	l19011
 32112  012B84  D7EA               	goto	l19013
 32113  012B86                     __end_of_MSDProcessCommandMediaAbsent:
 32114                           	opt stack 0
 32115                           tosu	equ	0xFFF
 32116                           tosh	equ	0xFFE
 32117                           tosl	equ	0xFFD
 32118                           pclath	equ	0xFFA
 32119                           tblptru	equ	0xFF8
 32120                           tblptrh	equ	0xFF7
 32121                           tblptrl	equ	0xFF6
 32122                           tablat	equ	0xFF5
 32123                           prodh	equ	0xFF4
 32124                           prodl	equ	0xFF3
 32125                           intcon	equ	0xFF2
 32126                           intcon2	equ	0xFF1
 32127                           intcon3	equ	0xFF0
 32128                           postinc0	equ	0xFEE
 32129                           wreg	equ	0xFE8
 32130                           indf1	equ	0xFE7
 32131                           postinc1	equ	0xFE6
 32132                           postdec1	equ	0xFE5
 32133                           plusw1	equ	0xFE3
 32134                           fsr1h	equ	0xFE2
 32135                           fsr1l	equ	0xFE1
 32136                           indf2	equ	0xFDF
 32137                           postinc2	equ	0xFDE
 32138                           postdec2	equ	0xFDD
 32139                           plusw2	equ	0xFDB
 32140                           fsr2h	equ	0xFDA
 32141                           fsr2l	equ	0xFD9
 32142                           status	equ	0xFD8
 32143                           
 32144 ;; *************** function _MSDProcessCommandMediaPresent *****************
 32145 ;; Defined at:
 32146 ;;		line 712 in file "usb_device_msd.c"
 32147 ;; Parameters:    Size  Location     Type
 32148 ;;		None
 32149 ;; Auto vars:     Size  Location     Type
 32150 ;;  capacity        4   66[BANK0 ] struct .
 32151 ;;  sectorSize      4   62[BANK0 ] struct .
 32152 ;;  i               1   70[BANK0 ] unsigned char 
 32153 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 32154 ;; Return value:  Size  Location     Type
 32155 ;;                  1    wreg      void 
 32156 ;; Registers used:
 32157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32158 ;; Tracked objects:
 32159 ;;		On entry : 0/0
 32160 ;;		On exit  : 0/0
 32161 ;;		Unchanged: 0/0
 32162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32164 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32165 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32166 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32167 ;;Total ram usage:       14 bytes
 32168 ;; Hardware stack levels used:    1
 32169 ;; Hardware stack levels required when called:   17
 32170 ;; This function calls:
 32171 ;;		_ExternalFlash_CapacityRead
 32172 ;;		_ExternalFlash_SectorSizeRead
 32173 ;;		_ExternalFlash_WriteProtectStateGet
 32174 ;;		_MSDCheckForErrorCases
 32175 ;;		_MSDComputeDeviceInAndResidue
 32176 ;;		_MSDErrorHandler
 32177 ;;		_MSDReadHandler
 32178 ;;		_MSDWriteHandler
 32179 ;;		_ResetSenseData
 32180 ;;		_USBTransferOnePacket
 32181 ;;		_memcpy
 32182 ;; This function is called by:
 32183 ;;		_MSDProcessCommand
 32184 ;;		_MSDProcessCommandMediaAbsent
 32185 ;; This function uses a non-reentrant model
 32186 ;;
 32187                           
 32188                           	psect	text139
 32189  00A470                     __ptext139:
 32190                           	opt stack 0
 32191  00A470                     _MSDProcessCommandMediaPresent:
 32192                           	opt stack 10
 32193                           
 32194                           ;usb_device_msd.c: 714: uint8_t i;
 32195                           ;usb_device_msd.c: 715: uint8_t NumBytesInPacket;
 32196                           ;usb_device_msd.c: 718: switch(MSDCommandState)
 32197                           
 32198                           ;incstack = 0
 32199  00A470  D1F5               	goto	l18729
 32200  00A472                     l18583:
 32201                           
 32202                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 32203  00A472  EC4A  F06B         	call	_MSDReadHandler	;wreg free
 32204  00A476  0900               	iorlw	0
 32205  00A478  A4D8               	btfss	status,2,c
 32206  00A47A  0012               	return	
 32207                           
 32208                           ;usb_device_msd.c: 726: {
 32209                           ;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 32210  00A47C  0100               	movlb	0	; () banked
 32211  00A47E  69E6               	setf	_MSDCommandState& (0+255),b
 32212                           
 32213                           ; BSR set to: 0
 32214                           ;usb_device_msd.c: 728: }
 32215                           ;usb_device_msd.c: 729: break;
 32216  00A480  0012               	return	
 32217  00A482                     l18587:
 32218                           
 32219                           ; BSR set to: 0
 32220                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 32221  00A482  EC5F  F05F         	call	_MSDWriteHandler	;wreg free
 32222  00A486  0900               	iorlw	0
 32223  00A488  A4D8               	btfss	status,2,c
 32224  00A48A  0012               	return	
 32225                           
 32226                           ;usb_device_msd.c: 737: {
 32227                           ;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 32228  00A48C  0100               	movlb	0	; () banked
 32229  00A48E  69E6               	setf	_MSDCommandState& (0+255),b
 32230                           
 32231                           ; BSR set to: 0
 32232                           ;usb_device_msd.c: 739: }
 32233                           ;usb_device_msd.c: 740: break;
 32234  00A490  0012               	return	
 32235  00A492                     l18591:
 32236                           
 32237                           ; BSR set to: 0
 32238                           ;usb_device_msd.c: 743: {
 32239                           ;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 32240  00A492  0100               	movlb	0	; () banked
 32241  00A494  05E5               	decf	_MSDHostNoData& (0+255),w,b
 32242  00A496  A4D8               	btfss	status,2,c
 32243  00A498  D003               	goto	l641
 32244                           
 32245                           ; BSR set to: 0
 32246                           ;usb_device_msd.c: 749: {
 32247                           ;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 32248  00A49A  0100               	movlb	0	; () banked
 32249  00A49C  69E6               	setf	_MSDCommandState& (0+255),b
 32250                           
 32251                           ;usb_device_msd.c: 751: break;
 32252  00A49E  0012               	return	
 32253  00A4A0                     l641:
 32254                           
 32255                           ; BSR set to: 0
 32256                           ;usb_device_msd.c: 752: }
 32257                           ;usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3];
 32258  00A4A0  C253  F0DA         	movff	_gblCBW+18,_TransferLength+1
 32259                           
 32260                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 32261  00A4A4  C254  F0D9         	movff	_gblCBW+19,_TransferLength
 32262                           
 32263                           ; BSR set to: 0
 32264                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 32265  00A4A8  C0D9  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 32266  00A4AC  C0DA  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 32267  00A4B0  0100               	movlb	0	; () banked
 32268  00A4B2  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32269  00A4B4  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32270  00A4B6  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 32271  00A4BA  0900               	iorlw	0
 32272  00A4BC  A4D8               	btfss	status,2,c
 32273  00A4BE  0012               	return	
 32274                           
 32275                           ;usb_device_msd.c: 762: }
 32276                           ;usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(InquiryResponse));
 32277                           
 32278                           ;usb_device_msd.c: 760: {
 32279                           ;usb_device_msd.c: 761: break;
 32280  00A4C0  0E00               	movlw	0
 32281  00A4C2  0100               	movlb	0	; () banked
 32282  00A4C4  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32283  00A4C6  0E24               	movlw	36
 32284  00A4C8  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32285  00A4CA  EC06  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32286                           
 32287                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 32288  00A4CE  0E00               	movlw	0
 32289  00A4D0  0100               	movlb	0	; () banked
 32290  00A4D2  6F60               	movwf	memcpy@d1& (0+255),b
 32291  00A4D4  0E06               	movlw	6
 32292  00A4D6  0100               	movlb	0	; () banked
 32293  00A4D8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32294  00A4DA  0EBD               	movlw	low _inq_resp
 32295  00A4DC  0100               	movlb	0	; () banked
 32296  00A4DE  6F62               	movwf	memcpy@s1& (0+255),b
 32297  00A4E0  0E93               	movlw	high _inq_resp
 32298  00A4E2  0100               	movlb	0	; () banked
 32299  00A4E4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32300  00A4E6  0E00               	movlw	0
 32301  00A4E8  0100               	movlb	0	; () banked
 32302  00A4EA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32303  00A4EC  0E24               	movlw	36
 32304  00A4EE  6F64               	movwf	memcpy@n& (0+255),b
 32305  00A4F0  EC5C  F095         	call	_memcpy	;wreg free
 32306                           
 32307                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 32308  00A4F4  0EFD               	movlw	253
 32309  00A4F6  0100               	movlb	0	; () banked
 32310  00A4F8  6FE6               	movwf	_MSDCommandState& (0+255),b
 32311                           
 32312                           ;usb_device_msd.c: 773: break;
 32313  00A4FA  0012               	return	
 32314  00A4FC                     l18605:
 32315                           
 32316                           ; BSR set to: 0
 32317                           ;usb_device_msd.c: 776: {
 32318                           ;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;
 32319                           ;usb_device_msd.c: 780: USB_MSD_CAPACITY capacity;
 32320                           ;usb_device_msd.c: 783: capacity.Val = LUN[0].ReadCapacity(LUN[0].mediaParameters);
 32321  00A4FC  C2D0  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 32322  00A500  C2D1  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 32323  00A504  EE22  F0BE         	lfsr	2,_LUN+3
 32324  00A508  D801               	call	u17608
 32325  00A50A  D00A               	goto	u17609
 32326  00A50C                     u17608:
 32327  00A50C  0005               	push	
 32328  00A50E  6EFA               	movwf	pclath,c
 32329  00A510  50DE               	movf	postinc2,w,c
 32330  00A512  6EFD               	movwf	tosl,c
 32331  00A514  50DE               	movf	postinc2,w,c
 32332  00A516  6EFE               	movwf	tosh,c
 32333  00A518  50DE               	movf	postinc2,w,c
 32334  00A51A  6EFF               	movwf	tosu,c
 32335  00A51C  50FA               	movf	pclath,w,c
 32336  00A51E  0012               	return		;indir
 32337  00A520                     u17609:
 32338  00A520  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 32339  00A524  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 32340  00A528  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 32341  00A52C  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 32342                           
 32343                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 32344  00A530  C2D0  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 32345  00A534  C2D1  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 32346  00A538  EE22  F0C1         	lfsr	2,_LUN+6
 32347  00A53C  D801               	call	u17618
 32348  00A53E  D00A               	goto	u17619
 32349  00A540                     u17618:
 32350  00A540  0005               	push	
 32351  00A542  6EFA               	movwf	pclath,c
 32352  00A544  50DE               	movf	postinc2,w,c
 32353  00A546  6EFD               	movwf	tosl,c
 32354  00A548  50DE               	movf	postinc2,w,c
 32355  00A54A  6EFE               	movwf	tosh,c
 32356  00A54C  50DE               	movf	postinc2,w,c
 32357  00A54E  6EFF               	movwf	tosu,c
 32358  00A550  50FA               	movf	pclath,w,c
 32359  00A552  0012               	return		;indir
 32360  00A554                     u17619:
 32361  00A554  0100               	movlb	0	; () banked
 32362  00A556  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 32363  00A55A  0100               	movlb	0	; () banked
 32364  00A55C  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 32365  00A560  0100               	movlb	0	; () banked
 32366  00A562  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 32367  00A564  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 32368                           
 32369                           ; BSR set to: 0
 32370                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 32371  00A566  EE26 F000          	lfsr	2,1536
 32372  00A56A  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 32373                           
 32374                           ; BSR set to: 0
 32375                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 32376  00A56E  EE26 F001          	lfsr	2,1537	;volatile
 32377  00A572  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 32378                           
 32379                           ; BSR set to: 0
 32380                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 32381  00A576  EE26 F002          	lfsr	2,1538	;volatile
 32382  00A57A  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 32383                           
 32384                           ; BSR set to: 0
 32385                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 32386  00A57E  EE26 F003          	lfsr	2,1539	;volatile
 32387  00A582  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 32388                           
 32389                           ; BSR set to: 0
 32390                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 32391  00A586  EE26 F004          	lfsr	2,1540	;volatile
 32392  00A58A  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 32393                           
 32394                           ; BSR set to: 0
 32395                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 32396  00A58E  EE26 F005          	lfsr	2,1541	;volatile
 32397  00A592  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 32398                           
 32399                           ; BSR set to: 0
 32400                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 32401  00A596  EE26 F006          	lfsr	2,1542	;volatile
 32402  00A59A  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 32403                           
 32404                           ; BSR set to: 0
 32405                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 32406  00A59E  EE26 F007          	lfsr	2,1543	;volatile
 32407  00A5A2  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 32408                           
 32409                           ; BSR set to: 0
 32410                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 32411  00A5A6  0E00               	movlw	0
 32412  00A5A8  0100               	movlb	0	; () banked
 32413  00A5AA  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32414  00A5AC  0E08               	movlw	8
 32415  00A5AE  6FD9               	movwf	_TransferLength& (0+255),b
 32416                           
 32417                           ; BSR set to: 0
 32418                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 32419  00A5B0  0E00               	movlw	0
 32420  00A5B2  0100               	movlb	0	; () banked
 32421  00A5B4  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32422  00A5B6  0E08               	movlw	8
 32423  00A5B8  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32424  00A5BA  EC06  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32425                           
 32426                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 32427  00A5BE  0EFD               	movlw	253
 32428  00A5C0  0100               	movlb	0	; () banked
 32429  00A5C2  6FE6               	movwf	_MSDCommandState& (0+255),b
 32430                           
 32431                           ;usb_device_msd.c: 802: break;
 32432  00A5C4  0012               	return	
 32433  00A5C6                     l18629:
 32434                           
 32435                           ; BSR set to: 0
 32436                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32437  00A5C6  0100               	movlb	0	; () banked
 32438  00A5C8  05E5               	decf	_MSDHostNoData& (0+255),w,b
 32439  00A5CA  A4D8               	btfss	status,2,c
 32440  00A5CC  D003               	goto	l18633
 32441                           
 32442                           ; BSR set to: 0
 32443                           ;usb_device_msd.c: 812: {
 32444                           ;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32445  00A5CE  0100               	movlb	0	; () banked
 32446  00A5D0  69E6               	setf	_MSDCommandState& (0+255),b
 32447                           
 32448                           ;usb_device_msd.c: 814: break;
 32449  00A5D2  0012               	return	
 32450  00A5D4                     l18633:
 32451                           
 32452                           ; BSR set to: 0
 32453                           ;usb_device_msd.c: 815: }
 32454                           ;usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSenseResponse);
 32455  00A5D4  0E00               	movlw	0
 32456  00A5D6  0100               	movlb	0	; () banked
 32457  00A5D8  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32458  00A5DA  0E12               	movlw	18
 32459  00A5DC  6FD9               	movwf	_TransferLength& (0+255),b
 32460                           
 32461                           ; BSR set to: 0
 32462                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 32463  00A5DE  0E00               	movlw	0
 32464  00A5E0  0100               	movlb	0	; () banked
 32465  00A5E2  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32466  00A5E4  0E12               	movlw	18
 32467  00A5E6  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32468  00A5E8  EC06  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32469                           
 32470                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 32471  00A5EC  0E00               	movlw	0
 32472  00A5EE  0100               	movlb	0	; () banked
 32473  00A5F0  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32474  00A5F2                     l18639:
 32475                           
 32476                           ; BSR set to: 0
 32477  00A5F2  0E11               	movlw	17
 32478  00A5F4  0100               	movlb	0	; () banked
 32479  00A5F6  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 32480  00A5F8  D001               	goto	l18643
 32481  00A5FA  D017               	goto	l18649
 32482  00A5FC                     l18643:
 32483                           
 32484                           ; BSR set to: 0
 32485                           ;usb_device_msd.c: 823: {
 32486                           ;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 32487  00A5FC  0100               	movlb	0	; () banked
 32488  00A5FE  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32489  00A600  0D01               	mullw	1
 32490  00A602  0E60               	movlw	low _gblSenseData
 32491  00A604  24F3               	addwf	prodl,w,c
 32492  00A606  6ED9               	movwf	fsr2l,c
 32493  00A608  0E02               	movlw	high _gblSenseData
 32494  00A60A  20F4               	addwfc	prodh,w,c
 32495  00A60C  6EDA               	movwf	fsr2h,c
 32496  00A60E  0100               	movlb	0	; () banked
 32497  00A610  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32498  00A612  0D01               	mullw	1
 32499  00A614  0E00               	movlw	0
 32500  00A616  24F3               	addwf	prodl,w,c
 32501  00A618  6EE1               	movwf	fsr1l,c
 32502  00A61A  0E06               	movlw	6
 32503  00A61C  20F4               	addwfc	prodh,w,c
 32504  00A61E  6EE2               	movwf	fsr1h,c
 32505  00A620  CFDF FFE7          	movff	indf2,indf1
 32506                           
 32507                           ; BSR set to: 0
 32508  00A624  0100               	movlb	0	; () banked
 32509  00A626  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32510  00A628  D7E4               	goto	l18639
 32511  00A62A                     l18649:
 32512                           
 32513                           ; BSR set to: 0
 32514                           ;usb_device_msd.c: 825: }
 32515                           ;usb_device_msd.c: 826: MSDCommandState = 0xFD;
 32516  00A62A  0EFD               	movlw	253
 32517  00A62C  0100               	movlb	0	; () banked
 32518  00A62E  6FE6               	movwf	_MSDCommandState& (0+255),b
 32519                           
 32520                           ;usb_device_msd.c: 827: break;
 32521  00A630  0012               	return	
 32522  00A632                     l648:
 32523                           
 32524                           ; BSR set to: 0
 32525                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 32526  00A632  0E03               	movlw	3
 32527  00A634  CFE8 F600          	movff	wreg,1536
 32528                           
 32529                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 32530  00A638  0E00               	movlw	0
 32531  00A63A  CFE8 F601          	movff	wreg,1537	;volatile
 32532                           
 32533                           ; BSR set to: 0
 32534                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 32535  00A63E  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32536  00A642  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32537  00A646  EE22  F0CA         	lfsr	2,_LUN+15
 32538  00A64A  D801               	call	u17658
 32539  00A64C  D00A               	goto	u17659
 32540  00A64E                     u17658:
 32541  00A64E  0005               	push	
 32542  00A650  6EFA               	movwf	pclath,c
 32543  00A652  50DE               	movf	postinc2,w,c
 32544  00A654  6EFD               	movwf	tosl,c
 32545  00A656  50DE               	movf	postinc2,w,c
 32546  00A658  6EFE               	movwf	tosh,c
 32547  00A65A  50DE               	movf	postinc2,w,c
 32548  00A65C  6EFF               	movwf	tosu,c
 32549  00A65E  50FA               	movf	pclath,w,c
 32550  00A660  0012               	return		;indir
 32551  00A662                     u17659:
 32552  00A662  0900               	iorlw	0
 32553  00A664  A4D8               	btfss	status,2,c
 32554  00A666  D005               	goto	l18655
 32555  00A668  0E00               	movlw	0
 32556  00A66A  0100               	movlb	0	; () banked
 32557  00A66C  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 32558  00A66E  0E00               	movlw	0
 32559  00A670  D004               	goto	L23
 32560  00A672                     l18655:
 32561  00A672  0E00               	movlw	0
 32562  00A674  0100               	movlb	0	; () banked
 32563  00A676  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 32564  00A678  0E80               	movlw	128
 32565  00A67A                     L23:
 32566  00A67A  6F9B               	movwf	_MSDProcessCommandMediaPresent$2712& (0+255),b
 32567                           
 32568                           ; BSR set to: 0
 32569                           
 32570                           ; BSR set to: 0
 32571  00A67C  EE26 F002          	lfsr	2,1538	;volatile
 32572  00A680  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2712,indf2
 32573                           
 32574                           ; BSR set to: 0
 32575                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 32576  00A684  0E00               	movlw	0
 32577  00A686  CFE8 F603          	movff	wreg,1539	;volatile
 32578                           
 32579                           ; BSR set to: 0
 32580                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 32581  00A68A  0E00               	movlw	0
 32582  00A68C  0100               	movlb	0	; () banked
 32583  00A68E  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32584  00A690  0E04               	movlw	4
 32585  00A692  6FD9               	movwf	_TransferLength& (0+255),b
 32586                           
 32587                           ; BSR set to: 0
 32588                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 32589  00A694  0E00               	movlw	0
 32590  00A696  0100               	movlb	0	; () banked
 32591  00A698  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32592  00A69A  0E04               	movlw	4
 32593  00A69C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32594  00A69E  EC06  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32595                           
 32596                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 32597  00A6A2  0EFD               	movlw	253
 32598  00A6A4  0100               	movlb	0	; () banked
 32599  00A6A6  6FE6               	movwf	_MSDCommandState& (0+255),b
 32600                           
 32601                           ;usb_device_msd.c: 839: break;
 32602  00A6A8  0012               	return	
 32603  00A6AA                     l18667:
 32604                           
 32605                           ; BSR set to: 0
 32606                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 32607  00A6AA  0102               	movlb	2	; () banked
 32608  00A6AC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32609  00A6AE  0BF0               	andlw	-16
 32610  00A6B0  0905               	iorlw	5
 32611  00A6B2  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32612                           
 32613                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 32614  00A6B4  0E20               	movlw	32
 32615  00A6B6  0102               	movlb	2	; () banked
 32616  00A6B8  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32617                           
 32618                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 32619  00A6BA  0E00               	movlw	0
 32620  00A6BC  0102               	movlb	2	; () banked
 32621  00A6BE  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32622                           
 32623                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 32624  00A6C0  0E01               	movlw	1
 32625  00A6C2  010D               	movlb	13	; () banked
 32626  00A6C4  6F8C               	movwf	140,b	;volatile
 32627                           
 32628                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 32629  00A6C6  0E00               	movlw	0
 32630  00A6C8  010D               	movlb	13	; () banked
 32631  00A6CA  6F88               	movwf	136,b	;volatile
 32632  00A6CC  0E00               	movlw	0
 32633  00A6CE  6F89               	movwf	137,b	;volatile
 32634  00A6D0  0E00               	movlw	0
 32635  00A6D2  6F8A               	movwf	138,b	;volatile
 32636  00A6D4  0E00               	movlw	0
 32637  00A6D6  6F8B               	movwf	139,b	;volatile
 32638                           
 32639                           ; BSR set to: 13
 32640                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 32641  00A6D8  0100               	movlb	0	; () banked
 32642  00A6DA  69E6               	setf	_MSDCommandState& (0+255),b
 32643                           
 32644                           ;usb_device_msd.c: 848: break;
 32645  00A6DC  0012               	return	
 32646  00A6DE                     l18671:
 32647                           
 32648                           ; BSR set to: 0
 32649                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 32650  00A6DE  0E00               	movlw	0
 32651  00A6E0  0100               	movlb	0	; () banked
 32652  00A6E2  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 32653  00A6E4  0E00               	movlw	0
 32654  00A6E6  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 32655  00A6E8  0E00               	movlw	0
 32656  00A6EA  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32657  00A6EC  0E00               	movlw	0
 32658  00A6EE  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32659  00A6F0  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 32660  00A6F4  0900               	iorlw	0
 32661  00A6F6  A4D8               	btfss	status,2,c
 32662  00A6F8  0012               	return	
 32663                           
 32664                           ;usb_device_msd.c: 861: }
 32665                           ;usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (msd_csw.bCSWStatus==0x01)
      +                          )
 32666                           
 32667                           ;usb_device_msd.c: 859: {
 32668                           ;usb_device_msd.c: 860: break;
 32669  00A6FA  0102               	movlb	2	; () banked
 32670  00A6FC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32671  00A6FE  0B0F               	andlw	15
 32672  00A700  0A06               	xorlw	6
 32673  00A702  A4D8               	btfss	status,2,c
 32674  00A704  D007               	goto	l18681
 32675                           
 32676                           ; BSR set to: 2
 32677  00A706  010D               	movlb	13	; () banked
 32678  00A708  058C               	decf	140,w,b	;volatile
 32679  00A70A  A4D8               	btfss	status,2,c
 32680  00A70C  D003               	goto	l18681
 32681                           
 32682                           ; BSR set to: 13
 32683                           ;usb_device_msd.c: 868: {
 32684                           ;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 32685  00A70E  0100               	movlb	0	; () banked
 32686  00A710  69E6               	setf	_MSDCommandState& (0+255),b
 32687                           
 32688                           ;usb_device_msd.c: 870: }
 32689  00A712  0012               	return	
 32690  00A714                     l18681:
 32691                           
 32692                           ;usb_device_msd.c: 871: else
 32693                           ;usb_device_msd.c: 872: {
 32694                           ;usb_device_msd.c: 873: ResetSenseData();
 32695  00A714  ECC7  F08F         	call	_ResetSenseData	;wreg free
 32696                           
 32697                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 32698  00A718  0E00               	movlw	0
 32699  00A71A  010D               	movlb	13	; () banked
 32700  00A71C  6F88               	movwf	136,b	;volatile
 32701  00A71E  0E00               	movlw	0
 32702  00A720  6F89               	movwf	137,b	;volatile
 32703  00A722  0E00               	movlw	0
 32704  00A724  6F8A               	movwf	138,b	;volatile
 32705  00A726  0E00               	movlw	0
 32706  00A728  6F8B               	movwf	139,b	;volatile
 32707                           
 32708                           ; BSR set to: 13
 32709                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 32710  00A72A  0100               	movlb	0	; () banked
 32711  00A72C  69E6               	setf	_MSDCommandState& (0+255),b
 32712                           
 32713                           ; BSR set to: 0
 32714                           ;usb_device_msd.c: 876: }
 32715                           ;usb_device_msd.c: 877: break;
 32716  00A72E  0012               	return	
 32717  00A730                     l18687:
 32718                           
 32719                           ; BSR set to: 0
 32720                           ;usb_device_msd.c: 882: case 0x1b:
 32721                           ;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 32722  00A730  0E00               	movlw	0
 32723  00A732  010D               	movlb	13	; () banked
 32724  00A734  6F88               	movwf	136,b	;volatile
 32725  00A736  0E00               	movlw	0
 32726  00A738  6F89               	movwf	137,b	;volatile
 32727  00A73A  0E00               	movlw	0
 32728  00A73C  6F8A               	movwf	138,b	;volatile
 32729  00A73E  0E00               	movlw	0
 32730  00A740  6F8B               	movwf	139,b	;volatile
 32731                           
 32732                           ; BSR set to: 13
 32733                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 32734  00A742  0100               	movlb	0	; () banked
 32735  00A744  69E6               	setf	_MSDCommandState& (0+255),b
 32736                           
 32737                           ;usb_device_msd.c: 885: break;
 32738  00A746  0012               	return	
 32739  00A748                     l18691:
 32740                           
 32741                           ; BSR set to: 0
 32742                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 32743  00A748  0100               	movlb	0	; () banked
 32744  00A74A  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 32745  00A74C  0100               	movlb	0	; () banked
 32746  00A74E  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32747  00A750  B4D8               	btfsc	status,2,c
 32748  00A752  D007               	goto	l18695
 32749                           
 32750                           ; BSR set to: 0
 32751  00A754  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 32752  00A758  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32753  00A75C  0100               	movlb	0	; () banked
 32754  00A75E  BEDF               	btfsc	indf2,7,c
 32755  00A760  0012               	return	
 32756  00A762                     l18695:
 32757                           
 32758                           ; BSR set to: 0
 32759                           ;usb_device_msd.c: 893: {
 32760                           ;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u)
 32761  00A762  0102               	movlb	2	; () banked
 32762  00A764  514C               	movf	(_gblCBW+11)& (0+255),w,b
 32763  00A766  0102               	movlb	2	; () banked
 32764  00A768  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 32765  00A76A  0102               	movlb	2	; () banked
 32766  00A76C  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 32767  00A76E  E105               	bnz	u17720
 32768  00A770  0E40               	movlw	64
 32769  00A772  0102               	movlb	2	; () banked
 32770  00A774  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 32771  00A776  A0D8               	btfss	status,0,c
 32772  00A778  D00B               	goto	l664
 32773  00A77A                     u17720:
 32774                           
 32775                           ; BSR set to: 2
 32776                           ;usb_device_msd.c: 897: {
 32777                           ;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 32778  00A77A  0E40               	movlw	64
 32779  00A77C  0100               	movlb	0	; () banked
 32780  00A77E  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 32781                           
 32782                           ; BSR set to: 0
 32783                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 32784  00A780  0E40               	movlw	64
 32785  00A782  0102               	movlb	2	; () banked
 32786  00A784  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 32787  00A786  0E00               	movlw	0
 32788  00A788  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 32789  00A78A  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 32790  00A78C  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 32791                           
 32792                           ;usb_device_msd.c: 900: }
 32793  00A78E  D00B               	goto	l18703
 32794  00A790                     l664:
 32795                           
 32796                           ; BSR set to: 2
 32797                           ;usb_device_msd.c: 901: else
 32798                           ;usb_device_msd.c: 902: {
 32799                           ;usb_device_msd.c: 905: NumBytesInPacket = gblCBW.dCBWDataTransferLength;
 32800  00A790  C249  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 32801                           
 32802                           ; BSR set to: 2
 32803                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 32804  00A794  0E00               	movlw	0
 32805  00A796  0102               	movlb	2	; () banked
 32806  00A798  6F49               	movwf	(_gblCBW+8)& (0+255),b
 32807  00A79A  0E00               	movlw	0
 32808  00A79C  6F4A               	movwf	(_gblCBW+9)& (0+255),b
 32809  00A79E  0E00               	movlw	0
 32810  00A7A0  6F4B               	movwf	(_gblCBW+10)& (0+255),b
 32811  00A7A2  0E00               	movlw	0
 32812  00A7A4  6F4C               	movwf	(_gblCBW+11)& (0+255),b
 32813  00A7A6                     l18703:
 32814                           
 32815                           ; BSR set to: 2
 32816                           ;usb_device_msd.c: 907: }
 32817                           ;usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPacket)
 32818  00A7A6  0100               	movlb	0	; () banked
 32819  00A7A8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32820  00A7AA  0100               	movlb	0	; () banked
 32821  00A7AC  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 32822  00A7AE  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 32823  00A7B0  0100               	movlb	0	; () banked
 32824  00A7B2  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 32825  00A7B4  0100               	movlb	0	; () banked
 32826  00A7B6  5DD9               	subwf	_TransferLength& (0+255),w,b
 32827  00A7B8  0100               	movlb	0	; () banked
 32828  00A7BA  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 32829  00A7BC  0100               	movlb	0	; () banked
 32830  00A7BE  59DA               	subwfb	(_TransferLength+1)& (0+255),w,b
 32831  00A7C0  A0D8               	btfss	status,0,c
 32832  00A7C2  D007               	goto	l18707
 32833                           
 32834                           ; BSR set to: 0
 32835                           ;usb_device_msd.c: 915: {
 32836                           ;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 32837  00A7C4  0100               	movlb	0	; () banked
 32838  00A7C6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32839  00A7C8  0100               	movlb	0	; () banked
 32840  00A7CA  5FD9               	subwf	_TransferLength& (0+255),f,b
 32841  00A7CC  0E00               	movlw	0
 32842  00A7CE  5BDA               	subwfb	(_TransferLength+1)& (0+255),f,b
 32843                           
 32844                           ;usb_device_msd.c: 918: }
 32845  00A7D0  D022               	goto	l18719
 32846  00A7D2                     l18707:
 32847                           
 32848                           ; BSR set to: 0
 32849                           ;usb_device_msd.c: 919: else
 32850                           ;usb_device_msd.c: 920: {
 32851                           ;usb_device_msd.c: 927: for(i = 0; i < NumBytesInPacket; i++)
 32852  00A7D2  0E00               	movlw	0
 32853  00A7D4  0100               	movlb	0	; () banked
 32854  00A7D6  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32855  00A7D8  D018               	goto	l18717
 32856  00A7DA                     l18709:
 32857                           
 32858                           ; BSR set to: 0
 32859                           ;usb_device_msd.c: 928: {
 32860                           ;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 32861  00A7DA  0100               	movlb	0	; () banked
 32862  00A7DC  51D9               	movf	_TransferLength& (0+255),w,b
 32863  00A7DE  0100               	movlb	0	; () banked
 32864  00A7E0  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 32865  00A7E2  B4D8               	btfsc	status,2,c
 32866  00A7E4  D005               	goto	l18713
 32867                           
 32868                           ; BSR set to: 0
 32869                           ;usb_device_msd.c: 930: {
 32870                           ;usb_device_msd.c: 931: TransferLength.Val--;
 32871  00A7E6  0100               	movlb	0	; () banked
 32872  00A7E8  07D9               	decf	_TransferLength& (0+255),f,b
 32873  00A7EA  A0D8               	btfss	status,0,c
 32874  00A7EC  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 32875                           
 32876                           ;usb_device_msd.c: 932: }
 32877  00A7EE  D00B               	goto	l18715
 32878  00A7F0                     l18713:
 32879                           
 32880                           ; BSR set to: 0
 32881                           ;usb_device_msd.c: 933: else
 32882                           ;usb_device_msd.c: 934: {
 32883                           ;usb_device_msd.c: 935: msd_buffer[i] = 0x00;
 32884  00A7F0  0100               	movlb	0	; () banked
 32885  00A7F2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32886  00A7F4  0D01               	mullw	1
 32887  00A7F6  0E00               	movlw	0
 32888  00A7F8  24F3               	addwf	prodl,w,c
 32889  00A7FA  6ED9               	movwf	fsr2l,c
 32890  00A7FC  0E06               	movlw	6
 32891  00A7FE  20F4               	addwfc	prodh,w,c
 32892  00A800  6EDA               	movwf	fsr2h,c
 32893  00A802  0E00               	movlw	0
 32894  00A804  6EDF               	movwf	indf2,c
 32895  00A806                     l18715:
 32896                           
 32897                           ; BSR set to: 0
 32898  00A806  0100               	movlb	0	; () banked
 32899  00A808  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32900  00A80A                     l18717:
 32901                           
 32902                           ; BSR set to: 0
 32903  00A80A  0100               	movlb	0	; () banked
 32904  00A80C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32905  00A80E  0100               	movlb	0	; () banked
 32906  00A810  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32907  00A812  A0D8               	btfss	status,0,c
 32908  00A814  D7E2               	goto	l18709
 32909  00A816                     l18719:
 32910                           
 32911                           ; BSR set to: 0
 32912                           ;usb_device_msd.c: 936: }
 32913                           ;usb_device_msd.c: 937: }
 32914                           ;usb_device_msd.c: 938: }
 32915                           ;usb_device_msd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer
      +                          [0],NumBytesInPacket);
 32916  00A816  0E01               	movlw	1
 32917  00A818  0100               	movlb	0	; () banked
 32918  00A81A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32919  00A81C  0E00               	movlw	0
 32920  00A81E  0100               	movlb	0	; () banked
 32921  00A820  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32922  00A822  0E06               	movlw	6
 32923  00A824  0100               	movlb	0	; () banked
 32924  00A826  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32925  00A828  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 32926  00A82C  0E02               	movlw	2
 32927  00A82E  EC6B  F077         	call	_USBTransferOnePacket
 32928  00A832  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32929  00A836  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32930                           
 32931                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 32932  00A83A  0102               	movlb	2	; () banked
 32933  00A83C  5149               	movf	(_gblCBW+8)& (0+255),w,b
 32934  00A83E  0102               	movlb	2	; () banked
 32935  00A840  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 32936  00A842  0102               	movlb	2	; () banked
 32937  00A844  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 32938  00A846  0102               	movlb	2	; () banked
 32939  00A848  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 32940  00A84A  A4D8               	btfss	status,2,c
 32941  00A84C  0012               	return	
 32942                           
 32943                           ; BSR set to: 2
 32944                           ;usb_device_msd.c: 945: {
 32945                           ;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 32946  00A84E  0100               	movlb	0	; () banked
 32947  00A850  69E6               	setf	_MSDCommandState& (0+255),b
 32948                           
 32949                           ; BSR set to: 0
 32950                           ;usb_device_msd.c: 950: }
 32951                           ;usb_device_msd.c: 951: }
 32952                           ;usb_device_msd.c: 952: break;
 32953                           
 32954                           ; BSR set to: 0
 32955                           
 32956                           ;usb_device_msd.c: 949: break;
 32957  00A852  0012               	return	
 32958  00A854                     l18725:
 32959                           
 32960                           ; BSR set to: 0
 32961                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 32962  00A854  0E7F               	movlw	127
 32963  00A856  EC05  F078         	call	_MSDErrorHandler
 32964                           
 32965                           ;usb_device_msd.c: 960: }
 32966                           
 32967                           ;usb_device_msd.c: 959: break;
 32968  00A85A  0012               	return	
 32969  00A85C                     l18729:
 32970  00A85C  0100               	movlb	0	; () banked
 32971  00A85E  51E6               	movf	_MSDCommandState& (0+255),w,b
 32972                           
 32973                           ; Switch size 1, requested type "space"
 32974                           ; Number of cases is 12, Range of values is 0 to 254
 32975                           ; switch strategies available:
 32976                           ; Name         Instructions Cycles
 32977                           ; simple_byte           37    19 (average)
 32978                           ;	Chosen strategy is simple_byte
 32979  00A860  0A00               	xorlw	0	; case 0
 32980  00A862  B4D8               	btfsc	status,2,c
 32981  00A864  D73C               	goto	l18671
 32982  00A866  0A03               	xorlw	3	; case 3
 32983  00A868  B4D8               	btfsc	status,2,c
 32984  00A86A  D6AD               	goto	l18629
 32985  00A86C  0A11               	xorlw	17	; case 18
 32986  00A86E  B4D8               	btfsc	status,2,c
 32987  00A870  D610               	goto	l18591
 32988  00A872  0A08               	xorlw	8	; case 26
 32989  00A874  B4D8               	btfsc	status,2,c
 32990  00A876  D6DD               	goto	l648
 32991  00A878  0A01               	xorlw	1	; case 27
 32992  00A87A  B4D8               	btfsc	status,2,c
 32993  00A87C  D759               	goto	l18687
 32994  00A87E  0A05               	xorlw	5	; case 30
 32995  00A880  B4D8               	btfsc	status,2,c
 32996  00A882  D713               	goto	l18667
 32997  00A884  0A3B               	xorlw	59	; case 37
 32998  00A886  B4D8               	btfsc	status,2,c
 32999  00A888  D639               	goto	l18605
 33000  00A88A  0A0D               	xorlw	13	; case 40
 33001  00A88C  B4D8               	btfsc	status,2,c
 33002  00A88E  D5F1               	goto	l18583
 33003  00A890  0A02               	xorlw	2	; case 42
 33004  00A892  B4D8               	btfsc	status,2,c
 33005  00A894  D5F6               	goto	l18587
 33006  00A896  0A05               	xorlw	5	; case 47
 33007  00A898  B4D8               	btfsc	status,2,c
 33008  00A89A  D74A               	goto	l18687
 33009  00A89C  0AD2               	xorlw	210	; case 253
 33010  00A89E  B4D8               	btfsc	status,2,c
 33011  00A8A0  D753               	goto	l18691
 33012  00A8A2  0A03               	xorlw	3	; case 254
 33013  00A8A4  D7D7               	goto	l18725
 33014  00A8A6                     __end_of_MSDProcessCommandMediaPresent:
 33015                           	opt stack 0
 33016                           tosu	equ	0xFFF
 33017                           tosh	equ	0xFFE
 33018                           tosl	equ	0xFFD
 33019                           pclath	equ	0xFFA
 33020                           tblptru	equ	0xFF8
 33021                           tblptrh	equ	0xFF7
 33022                           tblptrl	equ	0xFF6
 33023                           tablat	equ	0xFF5
 33024                           prodh	equ	0xFF4
 33025                           prodl	equ	0xFF3
 33026                           intcon	equ	0xFF2
 33027                           intcon2	equ	0xFF1
 33028                           intcon3	equ	0xFF0
 33029                           postinc0	equ	0xFEE
 33030                           wreg	equ	0xFE8
 33031                           indf1	equ	0xFE7
 33032                           postinc1	equ	0xFE6
 33033                           postdec1	equ	0xFE5
 33034                           plusw1	equ	0xFE3
 33035                           fsr1h	equ	0xFE2
 33036                           fsr1l	equ	0xFE1
 33037                           indf2	equ	0xFDF
 33038                           postinc2	equ	0xFDE
 33039                           postdec2	equ	0xFDD
 33040                           plusw2	equ	0xFDB
 33041                           fsr2h	equ	0xFDA
 33042                           fsr2l	equ	0xFD9
 33043                           status	equ	0xFD8
 33044                           
 33045 ;; *************** function _MSDWriteHandler *****************
 33046 ;; Defined at:
 33047 ;;		line 1188 in file "usb_device_msd.c"
 33048 ;; Parameters:    Size  Location     Type
 33049 ;;		None
 33050 ;; Auto vars:     Size  Location     Type
 33051 ;;		None
 33052 ;; Return value:  Size  Location     Type
 33053 ;;                  1    wreg      unsigned char 
 33054 ;; Registers used:
 33055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33056 ;; Tracked objects:
 33057 ;;		On entry : 0/0
 33058 ;;		On exit  : 0/0
 33059 ;;		Unchanged: 0/0
 33060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33063 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33064 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33065 ;;Total ram usage:        5 bytes
 33066 ;; Hardware stack levels used:    1
 33067 ;; Hardware stack levels required when called:   16
 33068 ;; This function calls:
 33069 ;;		_ExternalFlash_SectorWrite
 33070 ;;		_ExternalFlash_WriteProtectStateGet
 33071 ;;		_MSDCheckForErrorCases
 33072 ;;		_USBStallEndpoint
 33073 ;;		_USBTransferOnePacket
 33074 ;; This function is called by:
 33075 ;;		_MSDProcessCommandMediaPresent
 33076 ;; This function uses a non-reentrant model
 33077 ;;
 33078                           
 33079                           	psect	text140
 33080  00BEBE                     __ptext140:
 33081                           	opt stack 0
 33082  00BEBE                     _MSDWriteHandler:
 33083                           	opt stack 10
 33084                           
 33085                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 33086                           
 33087                           ;incstack = 0
 33088  00BEBE  D17D               	goto	l18277
 33089  00BEC0                     l705:
 33090                           
 33091                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 33092  00BEC0  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 33093                           
 33094                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 33095  00BEC4  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 33096                           
 33097                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 33098  00BEC8  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 33099                           
 33100                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 33101  00BECC  C255  F1D9         	movff	_gblCBW+20,_LBA
 33102                           
 33103                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 33104  00BED0  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 33105                           
 33106                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 33107  00BED4  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 33108                           
 33109                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33110  00BED8  0100               	movlb	0	; () banked
 33111  00BEDA  51D9               	movf	_TransferLength& (0+255),w,b
 33112  00BEDC  0100               	movlb	0	; () banked
 33113  00BEDE  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33114  00BEE0  0100               	movlb	0	; () banked
 33115  00BEE2  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 33116  00BEE4  0100               	movlb	0	; () banked
 33117  00BEE6  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 33118  00BEE8  0100               	movlb	0	; () banked
 33119  00BEEA  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33120  00BEEC  0100               	movlb	0	; () banked
 33121  00BEEE  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33122  00BEF0  0E09               	movlw	9
 33123  00BEF2                     u16975:
 33124  00BEF2  90D8               	bcf	status,0,c
 33125  00BEF4  0100               	movlb	0	; () banked
 33126  00BEF6  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 33127  00BEF8  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 33128  00BEFA  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 33129  00BEFC  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 33130  00BEFE  2EE8               	decfsz	wreg,f,c
 33131  00BF00  D7F8               	goto	u16975
 33132  00BF02  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 33133  00BF06  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33134  00BF0A  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33135  00BF0E  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33136  00BF12  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 33137  00BF16  0900               	iorlw	0
 33138  00BF18  A4D8               	btfss	status,2,c
 33139  00BF1A  D160               	goto	l18279
 33140                           
 33141                           ;usb_device_msd.c: 1208: }
 33142                           ;usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 33143                           
 33144                           ;usb_device_msd.c: 1204: {
 33145                           ;usb_device_msd.c: 1207: break;
 33146  00BF1C  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33147  00BF20  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33148  00BF24  EE22  F0CA         	lfsr	2,_LUN+15
 33149  00BF28  D801               	call	u16998
 33150  00BF2A  D00A               	goto	u16999
 33151  00BF2C                     u16998:
 33152  00BF2C  0005               	push	
 33153  00BF2E  6EFA               	movwf	pclath,c
 33154  00BF30  50DE               	movf	postinc2,w,c
 33155  00BF32  6EFD               	movwf	tosl,c
 33156  00BF34  50DE               	movf	postinc2,w,c
 33157  00BF36  6EFE               	movwf	tosh,c
 33158  00BF38  50DE               	movf	postinc2,w,c
 33159  00BF3A  6EFF               	movwf	tosu,c
 33160  00BF3C  50FA               	movf	pclath,w,c
 33161  00BF3E  0012               	return		;indir
 33162  00BF40                     u16999:
 33163  00BF40  0900               	iorlw	0
 33164  00BF42  B4D8               	btfsc	status,2,c
 33165  00BF44  D018               	goto	l18213
 33166                           
 33167                           ;usb_device_msd.c: 1213: {
 33168                           ;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 33169  00BF46  0E01               	movlw	1
 33170  00BF48  010D               	movlb	13	; () banked
 33171  00BF4A  6F8C               	movwf	140,b	;volatile
 33172                           
 33173                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 33174  00BF4C  0102               	movlb	2	; () banked
 33175  00BF4E  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33176  00BF50  0BF0               	andlw	-16
 33177  00BF52  0907               	iorlw	7
 33178  00BF54  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33179                           
 33180                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 33181  00BF56  0E27               	movlw	39
 33182  00BF58  0102               	movlb	2	; () banked
 33183  00BF5A  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33184                           
 33185                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 33186  00BF5C  0E00               	movlw	0
 33187  00BF5E  0102               	movlb	2	; () banked
 33188  00BF60  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33189                           
 33190                           ; BSR set to: 2
 33191                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 33192  00BF62  0E00               	movlw	0
 33193  00BF64  0100               	movlb	0	; () banked
 33194  00BF66  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33195  00BF68  0E02               	movlw	2
 33196  00BF6A  ECC9  F076         	call	_USBStallEndpoint
 33197                           
 33198                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 33199  00BF6E  0E00               	movlw	0
 33200  00BF70  6E1F               	movwf	_MSDWriteState,c
 33201                           
 33202                           ;usb_device_msd.c: 1228: return MSDWriteState;
 33203  00BF72  501F               	movf	_MSDWriteState,w,c
 33204  00BF74  0012               	return	
 33205  00BF76                     l18213:
 33206                           
 33207                           ;usb_device_msd.c: 1229: }
 33208                           ;usb_device_msd.c: 1231: MSD_State = 0x01;
 33209  00BF76  0E01               	movlw	1
 33210  00BF78  0100               	movlb	0	; () banked
 33211  00BF7A  6FE7               	movwf	_MSD_State& (0+255),b
 33212  00BF7C                     l18215:
 33213                           
 33214                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 33215  00BF7C  0100               	movlb	0	; () banked
 33216  00BF7E  51D9               	movf	_TransferLength& (0+255),w,b
 33217  00BF80  0100               	movlb	0	; () banked
 33218  00BF82  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 33219  00BF84  B4D8               	btfsc	status,2,c
 33220  00BF86  D116               	goto	l18273
 33221                           
 33222                           ; BSR set to: 0
 33223                           ;usb_device_msd.c: 1239: }
 33224                           ;usb_device_msd.c: 1241: MSDWriteState = 0x03;
 33225                           
 33226                           ; BSR set to: 0
 33227                           
 33228                           ;usb_device_msd.c: 1238: break;
 33229                           
 33230                           ; BSR set to: 0
 33231                           ;usb_device_msd.c: 1236: {
 33232                           ;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 33233  00BF88  0E03               	movlw	3
 33234  00BF8A  6E1F               	movwf	_MSDWriteState,c
 33235                           
 33236                           ; BSR set to: 0
 33237                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 33238  00BF8C  0E00               	movlw	0
 33239  00BF8E  0101               	movlb	1	; () banked
 33240  00BF90  6FEB               	movwf	_ptrNextData& (0+255),b
 33241  00BF92  0E06               	movlw	6
 33242  00BF94  0101               	movlb	1	; () banked
 33243  00BF96  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 33244                           
 33245                           ; BSR set to: 1
 33246                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 33247  00BF98  0E00               	movlw	0
 33248  00BF9A  010D               	movlb	13	; () banked
 33249  00BF9C  6F88               	movwf	136,b	;volatile
 33250  00BF9E  0E02               	movlw	2
 33251  00BFA0  6F89               	movwf	137,b	;volatile
 33252  00BFA2  0E00               	movlw	0
 33253  00BFA4  6F8A               	movwf	138,b	;volatile
 33254  00BFA6  0E00               	movlw	0
 33255  00BFA8  6F8B               	movwf	139,b	;volatile
 33256  00BFAA                     l712:
 33257                           
 33258                           ;usb_device_msd.c: 1248: {
 33259                           ;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 33260  00BFAA  010D               	movlb	13	; () banked
 33261  00BFAC  5188               	movf	136,w,b	;volatile
 33262  00BFAE  010D               	movlb	13	; () banked
 33263  00BFB0  1189               	iorwf	137,w,b	;volatile
 33264  00BFB2  010D               	movlb	13	; () banked
 33265  00BFB4  118A               	iorwf	138,w,b	;volatile
 33266  00BFB6  010D               	movlb	13	; () banked
 33267  00BFB8  118B               	iorwf	139,w,b	;volatile
 33268  00BFBA  B4D8               	btfsc	status,2,c
 33269  00BFBC  D021               	goto	l18235
 33270                           
 33271                           ; BSR set to: 13
 33272                           ;usb_device_msd.c: 1251: {
 33273                           ;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33274  00BFBE  0100               	movlb	0	; () banked
 33275  00BFC0  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33276  00BFC2  0100               	movlb	0	; () banked
 33277  00BFC4  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33278  00BFC6  B4D8               	btfsc	status,2,c
 33279  00BFC8  D007               	goto	l18231
 33280                           
 33281                           ; BSR set to: 0
 33282  00BFCA  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33283  00BFCE  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33284  00BFD2  0100               	movlb	0	; () banked
 33285  00BFD4  BEDF               	btfsc	indf2,7,c
 33286  00BFD6  D102               	goto	l18279
 33287  00BFD8                     l18231:
 33288                           
 33289                           ; BSR set to: 0
 33290                           ;usb_device_msd.c: 1255: }
 33291                           ;usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacket(2u,0,ptrNextData,64u);
 33292  00BFD8  0E00               	movlw	0
 33293  00BFDA  0100               	movlb	0	; () banked
 33294  00BFDC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33295  00BFDE  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33296  00BFE2  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33297  00BFE6  0E40               	movlw	64
 33298  00BFE8  0100               	movlb	0	; () banked
 33299  00BFEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33300  00BFEC  0E02               	movlw	2
 33301  00BFEE  EC6B  F077         	call	_USBTransferOnePacket
 33302  00BFF2  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 33303  00BFF6  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 33304                           
 33305                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 33306  00BFFA  0E04               	movlw	4
 33307  00BFFC  6E1F               	movwf	_MSDWriteState,c
 33308                           
 33309                           ;usb_device_msd.c: 1260: }
 33310  00BFFE  D025               	goto	l18239
 33311  00C000                     l18235:
 33312                           
 33313                           ;usb_device_msd.c: 1261: else
 33314                           ;usb_device_msd.c: 1262: {
 33315                           ;usb_device_msd.c: 1266: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 33316  00C000  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33317  00C004  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33318  00C008  EE22  F0CA         	lfsr	2,_LUN+15
 33319  00C00C  D801               	call	u17058
 33320  00C00E  D00A               	goto	u17059
 33321  00C010                     u17058:
 33322  00C010  0005               	push	
 33323  00C012  6EFA               	movwf	pclath,c
 33324  00C014  50DE               	movf	postinc2,w,c
 33325  00C016  6EFD               	movwf	tosl,c
 33326  00C018  50DE               	movf	postinc2,w,c
 33327  00C01A  6EFE               	movwf	tosh,c
 33328  00C01C  50DE               	movf	postinc2,w,c
 33329  00C01E  6EFF               	movwf	tosu,c
 33330  00C020  50FA               	movf	pclath,w,c
 33331  00C022  0012               	return		;indir
 33332  00C024                     u17059:
 33333  00C024  0900               	iorlw	0
 33334  00C026  B4D8               	btfsc	status,2,c
 33335  00C028  D00E               	goto	l716
 33336                           
 33337                           ;usb_device_msd.c: 1267: {
 33338                           ;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 33339  00C02A  0E01               	movlw	1
 33340  00C02C  010D               	movlb	13	; () banked
 33341  00C02E  6F8C               	movwf	140,b	;volatile
 33342                           
 33343                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 33344  00C030  0102               	movlb	2	; () banked
 33345  00C032  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33346  00C034  0BF0               	andlw	-16
 33347  00C036  0902               	iorlw	2
 33348  00C038  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33349                           
 33350                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 33351  00C03A  0E27               	movlw	39
 33352  00C03C  0102               	movlb	2	; () banked
 33353  00C03E  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33354                           
 33355                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 33356  00C040  0E00               	movlw	0
 33357  00C042  0102               	movlb	2	; () banked
 33358  00C044  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33359  00C046                     l716:
 33360                           
 33361                           ;usb_device_msd.c: 1277: }
 33362                           ;usb_device_msd.c: 1279: MSDWriteState = 0x02;
 33363  00C046  0E02               	movlw	2
 33364  00C048  D0B6               	goto	L27
 33365  00C04A                     l18239:
 33366                           
 33367                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33368  00C04A  0100               	movlb	0	; () banked
 33369  00C04C  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33370  00C04E  0100               	movlb	0	; () banked
 33371  00C050  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33372  00C052  B4D8               	btfsc	status,2,c
 33373  00C054  D007               	goto	l18245
 33374                           
 33375                           ; BSR set to: 0
 33376  00C056  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33377  00C05A  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33378  00C05E  0100               	movlb	0	; () banked
 33379  00C060  BEDF               	btfsc	indf2,7,c
 33380  00C062  D0BC               	goto	l18279
 33381  00C064                     l18245:
 33382                           
 33383                           ; BSR set to: 0
 33384                           ;usb_device_msd.c: 1288: }
 33385                           ;usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((volatile BDT_ENTRY*)USBMSDOut
      +                          Handle)->CNT);
 33386  00C064  0100               	movlb	0	; () banked
 33387  00C066  EE20 F001          	lfsr	2,1
 33388  00C06A  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33389  00C06C  26D9               	addwf	fsr2l,f,c
 33390  00C06E  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33391  00C070  22DA               	addwfc	fsr2h,f,c
 33392  00C072  50DF               	movf	indf2,w,c
 33393  00C074  0100               	movlb	0	; () banked
 33394  00C076  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33395  00C078  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33396  00C07C  0100               	movlb	0	; () banked
 33397  00C07E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33398  00C080  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33399  00C082  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33400  00C084  0100               	movlb	0	; () banked
 33401  00C086  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33402  00C088  0102               	movlb	2	; () banked
 33403  00C08A  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 33404  00C08C  0100               	movlb	0	; () banked
 33405  00C08E  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33406  00C090  0102               	movlb	2	; () banked
 33407  00C092  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 33408  00C094  0100               	movlb	0	; () banked
 33409  00C096  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33410  00C098  0102               	movlb	2	; () banked
 33411  00C09A  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 33412  00C09C  0100               	movlb	0	; () banked
 33413  00C09E  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33414  00C0A0  0102               	movlb	2	; () banked
 33415  00C0A2  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 33416                           
 33417                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 33418  00C0A4  0100               	movlb	0	; () banked
 33419  00C0A6  EE20 F001          	lfsr	2,1
 33420  00C0AA  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33421  00C0AC  26D9               	addwf	fsr2l,f,c
 33422  00C0AE  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33423  00C0B0  22DA               	addwfc	fsr2h,f,c
 33424  00C0B2  50DF               	movf	indf2,w,c
 33425  00C0B4  0100               	movlb	0	; () banked
 33426  00C0B6  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33427  00C0B8  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33428  00C0BC  0100               	movlb	0	; () banked
 33429  00C0BE  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33430  00C0C0  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33431  00C0C2  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33432  00C0C4  0100               	movlb	0	; () banked
 33433  00C0C6  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33434  00C0C8  010D               	movlb	13	; () banked
 33435  00C0CA  5F88               	subwf	136,f,b	;volatile
 33436  00C0CC  0100               	movlb	0	; () banked
 33437  00C0CE  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33438  00C0D0  010D               	movlb	13	; () banked
 33439  00C0D2  5B89               	subwfb	137,f,b	;volatile
 33440  00C0D4  0100               	movlb	0	; () banked
 33441  00C0D6  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33442  00C0D8  010D               	movlb	13	; () banked
 33443  00C0DA  5B8A               	subwfb	138,f,b	;volatile
 33444  00C0DC  0100               	movlb	0	; () banked
 33445  00C0DE  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33446  00C0E0  010D               	movlb	13	; () banked
 33447  00C0E2  5B8B               	subwfb	139,f,b	;volatile
 33448                           
 33449                           ; BSR set to: 13
 33450                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33451  00C0E4  0E40               	movlw	64
 33452  00C0E6  0101               	movlb	1	; () banked
 33453  00C0E8  27EB               	addwf	_ptrNextData& (0+255),f,b
 33454  00C0EA  0E00               	movlw	0
 33455  00C0EC  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33456                           
 33457                           ; BSR set to: 1
 33458                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33459  00C0EE  0E03               	movlw	3
 33460  00C0F0  D062               	goto	L27
 33461  00C0F2                     l18251:
 33462                           
 33463                           ;usb_device_msd.c: 1298: {
 33464                           ;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33465  00C0F2  010D               	movlb	13	; () banked
 33466  00C0F4  518C               	movf	140,w,b	;volatile
 33467  00C0F6  A4D8               	btfss	status,2,c
 33468  00C0F8  D047               	goto	l18263
 33469                           
 33470                           ; BSR set to: 13
 33471                           ;usb_device_msd.c: 1306: {
 33472                           ;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaParameters, LBA.Val, (uint8_t
      +                          *)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33473  00C0FA  C2D0  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33474  00C0FE  C2D1  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33475  00C102  C1D9  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33476  00C106  C1DA  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33477  00C10A  C1DB  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33478  00C10E  C1DC  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33479  00C112  0E00               	movlw	0
 33480  00C114  0100               	movlb	0	; () banked
 33481  00C116  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33482  00C118  0E06               	movlw	6
 33483  00C11A  0100               	movlb	0	; () banked
 33484  00C11C  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33485  00C11E  0101               	movlb	1	; () banked
 33486  00C120  51D9               	movf	_LBA& (0+255),w,b
 33487  00C122  0101               	movlb	1	; () banked
 33488  00C124  11DA               	iorwf	(_LBA+1)& (0+255),w,b
 33489  00C126  0101               	movlb	1	; () banked
 33490  00C128  11DB               	iorwf	(_LBA+2)& (0+255),w,b
 33491  00C12A  0101               	movlb	1	; () banked
 33492  00C12C  11DC               	iorwf	(_LBA+3)& (0+255),w,b
 33493  00C12E  A4D8               	btfss	status,2,c
 33494  00C130  D002               	goto	u17100
 33495  00C132  0E01               	movlw	1
 33496  00C134  D001               	goto	u17110
 33497  00C136                     u17100:
 33498  00C136  0E00               	movlw	0
 33499  00C138                     u17110:
 33500  00C138  0100               	movlb	0	; () banked
 33501  00C13A  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 33502  00C13C  EE22  F0CD         	lfsr	2,_LUN+18
 33503  00C140  D801               	call	u17128
 33504  00C142  D00A               	goto	u17129
 33505  00C144                     u17128:
 33506  00C144  0005               	push	
 33507  00C146  6EFA               	movwf	pclath,c
 33508  00C148  50DE               	movf	postinc2,w,c
 33509  00C14A  6EFD               	movwf	tosl,c
 33510  00C14C  50DE               	movf	postinc2,w,c
 33511  00C14E  6EFE               	movwf	tosh,c
 33512  00C150  50DE               	movf	postinc2,w,c
 33513  00C152  6EFF               	movwf	tosu,c
 33514  00C154  50FA               	movf	pclath,w,c
 33515  00C156  0012               	return		;indir
 33516  00C158                     u17129:
 33517  00C158  06E8               	decf	wreg,f,c
 33518  00C15A  B4D8               	btfsc	status,2,c
 33519  00C15C  D015               	goto	l18263
 33520                           
 33521                           ;usb_device_msd.c: 1308: {
 33522                           ;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 33523  00C15E  0E64               	movlw	100
 33524  00C160  0101               	movlb	1	; () banked
 33525  00C162  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 33526  00C164  D003               	goto	l18261
 33527                           
 33528                           ; BSR set to: 1
 33529                           ;usb_device_msd.c: 1312: {
 33530                           ;usb_device_msd.c: 1313: MSDRetryAttempt++;
 33531  00C166  0101               	movlb	1	; () banked
 33532  00C168  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 33533                           
 33534                           ;usb_device_msd.c: 1314: break;
 33535  00C16A  D038               	goto	l18279
 33536  00C16C                     l18261:
 33537                           
 33538                           ; BSR set to: 1
 33539                           ;usb_device_msd.c: 1316: else
 33540                           ;usb_device_msd.c: 1317: {
 33541                           ;usb_device_msd.c: 1320: msd_csw.bCSWStatus = 0x01;
 33542  00C16C  0E01               	movlw	1
 33543  00C16E  010D               	movlb	13	; () banked
 33544  00C170  6F8C               	movwf	140,b	;volatile
 33545                           
 33546                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 33547  00C172  0102               	movlb	2	; () banked
 33548  00C174  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33549  00C176  0BF0               	andlw	-16
 33550  00C178  0903               	iorlw	3
 33551  00C17A  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33552                           
 33553                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 33554  00C17C  0E00               	movlw	0
 33555  00C17E  0102               	movlb	2	; () banked
 33556  00C180  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33557                           
 33558                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 33559  00C182  0E00               	movlw	0
 33560  00C184  0102               	movlb	2	; () banked
 33561  00C186  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33562  00C188                     l18263:
 33563                           
 33564                           ;usb_device_msd.c: 1326: }
 33565                           ;usb_device_msd.c: 1327: }
 33566                           ;usb_device_msd.c: 1328: }
 33567                           ;usb_device_msd.c: 1332: LBA.Val++;
 33568  00C188  0E01               	movlw	1
 33569  00C18A  0101               	movlb	1	; () banked
 33570  00C18C  27D9               	addwf	_LBA& (0+255),f,b
 33571  00C18E  0E00               	movlw	0
 33572  00C190  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 33573  00C192  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 33574  00C194  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 33575                           
 33576                           ; BSR set to: 1
 33577                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 33578  00C196  0100               	movlb	0	; () banked
 33579  00C198  07D9               	decf	_TransferLength& (0+255),f,b
 33580  00C19A  A0D8               	btfss	status,0,c
 33581  00C19C  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 33582                           
 33583                           ; BSR set to: 0
 33584                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 33585  00C19E  0E01               	movlw	1
 33586  00C1A0  D00A               	goto	L27
 33587  00C1A2                     l18269:
 33588                           
 33589                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 33590  00C1A2  0E02               	movlw	2
 33591  00C1A4  010D               	movlb	13	; () banked
 33592  00C1A6  6F8C               	movwf	140,b	;volatile
 33593                           
 33594                           ; BSR set to: 13
 33595                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 33596  00C1A8  0E00               	movlw	0
 33597  00C1AA  0100               	movlb	0	; () banked
 33598  00C1AC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33599  00C1AE  0E02               	movlw	2
 33600  00C1B0  ECC9  F076         	call	_USBStallEndpoint
 33601  00C1B4                     l18273:
 33602                           
 33603                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 33604  00C1B4  0E00               	movlw	0
 33605  00C1B6                     L27:
 33606  00C1B6  6E1F               	movwf	_MSDWriteState,c
 33607                           
 33608                           ;usb_device_msd.c: 1345: }
 33609                           
 33610                           ;usb_device_msd.c: 1344: break;
 33611  00C1B8  D011               	goto	l18279
 33612  00C1BA                     l18277:
 33613  00C1BA  501F               	movf	_MSDWriteState,w,c
 33614                           
 33615                           ; Switch size 1, requested type "space"
 33616                           ; Number of cases is 5, Range of values is 0 to 4
 33617                           ; switch strategies available:
 33618                           ; Name         Instructions Cycles
 33619                           ; simple_byte           16     9 (average)
 33620                           ;	Chosen strategy is simple_byte
 33621  00C1BC  0A00               	xorlw	0	; case 0
 33622  00C1BE  B4D8               	btfsc	status,2,c
 33623  00C1C0  D67F               	goto	l705
 33624  00C1C2  0A01               	xorlw	1	; case 1
 33625  00C1C4  B4D8               	btfsc	status,2,c
 33626  00C1C6  D6DA               	goto	l18215
 33627  00C1C8  0A03               	xorlw	3	; case 2
 33628  00C1CA  B4D8               	btfsc	status,2,c
 33629  00C1CC  D792               	goto	l18251
 33630  00C1CE  0A01               	xorlw	1	; case 3
 33631  00C1D0  B4D8               	btfsc	status,2,c
 33632  00C1D2  D6EB               	goto	l712
 33633  00C1D4  0A07               	xorlw	7	; case 4
 33634  00C1D6  B4D8               	btfsc	status,2,c
 33635  00C1D8  D738               	goto	l18239
 33636  00C1DA  D7E3               	goto	l18269
 33637  00C1DC                     l18279:
 33638                           
 33639                           ;usb_device_msd.c: 1347: return MSDWriteState;
 33640  00C1DC  501F               	movf	_MSDWriteState,w,c
 33641  00C1DE  0012               	return	
 33642  00C1E0                     __end_of_MSDWriteHandler:
 33643                           	opt stack 0
 33644                           tosu	equ	0xFFF
 33645                           tosh	equ	0xFFE
 33646                           tosl	equ	0xFFD
 33647                           pclath	equ	0xFFA
 33648                           tblptru	equ	0xFF8
 33649                           tblptrh	equ	0xFF7
 33650                           tblptrl	equ	0xFF6
 33651                           tablat	equ	0xFF5
 33652                           prodh	equ	0xFF4
 33653                           prodl	equ	0xFF3
 33654                           intcon	equ	0xFF2
 33655                           intcon2	equ	0xFF1
 33656                           intcon3	equ	0xFF0
 33657                           postinc0	equ	0xFEE
 33658                           wreg	equ	0xFE8
 33659                           indf1	equ	0xFE7
 33660                           postinc1	equ	0xFE6
 33661                           postdec1	equ	0xFE5
 33662                           plusw1	equ	0xFE3
 33663                           fsr1h	equ	0xFE2
 33664                           fsr1l	equ	0xFE1
 33665                           indf2	equ	0xFDF
 33666                           postinc2	equ	0xFDE
 33667                           postdec2	equ	0xFDD
 33668                           plusw2	equ	0xFDB
 33669                           fsr2h	equ	0xFDA
 33670                           fsr2l	equ	0xFD9
 33671                           status	equ	0xFD8
 33672                           
 33673 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 33674 ;; Defined at:
 33675 ;;		line 34 in file "external_flash.c"
 33676 ;; Parameters:    Size  Location     Type
 33677 ;;  config          2    0[BANK0 ] PTR void 
 33678 ;;		 -> NULL(0), 
 33679 ;; Auto vars:     Size  Location     Type
 33680 ;;		None
 33681 ;; Return value:  Size  Location     Type
 33682 ;;                  1    wreg      unsigned char 
 33683 ;; Registers used:
 33684 ;;		wreg
 33685 ;; Tracked objects:
 33686 ;;		On entry : 0/0
 33687 ;;		On exit  : 0/0
 33688 ;;		Unchanged: 0/0
 33689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33693 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33694 ;;Total ram usage:        2 bytes
 33695 ;; Hardware stack levels used:    1
 33696 ;; Hardware stack levels required when called:   10
 33697 ;; This function calls:
 33698 ;;		Nothing
 33699 ;; This function is called by:
 33700 ;;		_MSDWriteHandler
 33701 ;;		_MSDProcessCommandMediaPresent
 33702 ;; This function uses a non-reentrant model
 33703 ;;
 33704                           
 33705                           	psect	text141
 33706  0142FA                     __ptext141:
 33707                           	opt stack 0
 33708  0142FA                     _ExternalFlash_WriteProtectStateGet:
 33709                           	opt stack 15
 33710                           
 33711                           ;external_flash.c: 37: return 0;
 33712                           
 33713                           ;incstack = 0
 33714  0142FA  0E00               	movlw	0
 33715  0142FC  0012               	return	
 33716  0142FE                     __end_of_ExternalFlash_WriteProtectStateGet:
 33717                           	opt stack 0
 33718                           tosu	equ	0xFFF
 33719                           tosh	equ	0xFFE
 33720                           tosl	equ	0xFFD
 33721                           pclath	equ	0xFFA
 33722                           tblptru	equ	0xFF8
 33723                           tblptrh	equ	0xFF7
 33724                           tblptrl	equ	0xFF6
 33725                           tablat	equ	0xFF5
 33726                           prodh	equ	0xFF4
 33727                           prodl	equ	0xFF3
 33728                           intcon	equ	0xFF2
 33729                           intcon2	equ	0xFF1
 33730                           intcon3	equ	0xFF0
 33731                           postinc0	equ	0xFEE
 33732                           wreg	equ	0xFE8
 33733                           indf1	equ	0xFE7
 33734                           postinc1	equ	0xFE6
 33735                           postdec1	equ	0xFE5
 33736                           plusw1	equ	0xFE3
 33737                           fsr1h	equ	0xFE2
 33738                           fsr1l	equ	0xFE1
 33739                           indf2	equ	0xFDF
 33740                           postinc2	equ	0xFDE
 33741                           postdec2	equ	0xFDD
 33742                           plusw2	equ	0xFDB
 33743                           fsr2h	equ	0xFDA
 33744                           fsr2l	equ	0xFD9
 33745                           status	equ	0xFD8
 33746                           
 33747 ;; *************** function _ExternalFlash_SectorWrite *****************
 33748 ;; Defined at:
 33749 ;;		line 104 in file "external_flash.c"
 33750 ;; Parameters:    Size  Location     Type
 33751 ;;  config          2   36[BANK0 ] PTR void 
 33752 ;;		 -> NULL(0), 
 33753 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 33754 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 33755 ;;		 -> msd_buffer(512), 
 33756 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 33757 ;; Auto vars:     Size  Location     Type
 33758 ;;  page            2   45[BANK0 ] unsigned int 
 33759 ;; Return value:  Size  Location     Type
 33760 ;;                  1    wreg      unsigned char 
 33761 ;; Registers used:
 33762 ;;		wreg, status,2, status,0, cstack
 33763 ;; Tracked objects:
 33764 ;;		On entry : 0/0
 33765 ;;		On exit  : 0/0
 33766 ;;		Unchanged: 0/0
 33767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33768 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33771 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33772 ;;Total ram usage:       11 bytes
 33773 ;; Hardware stack levels used:    1
 33774 ;; Hardware stack levels required when called:   15
 33775 ;; This function calls:
 33776 ;;		_flash_page_write
 33777 ;; This function is called by:
 33778 ;;		_MSDWriteHandler
 33779 ;; This function uses a non-reentrant model
 33780 ;;
 33781                           
 33782                           	psect	text142
 33783  013848                     __ptext142:
 33784                           	opt stack 0
 33785  013848                     _ExternalFlash_SectorWrite:
 33786                           	opt stack 10
 33787                           
 33788                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 33789                           
 33790                           ;incstack = 0
 33791  013848  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 33792  01384C  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 33793                           
 33794                           ;external_flash.c: 110: if(sector_addr >= 4096)
 33795  013850  0100               	movlb	0	; () banked
 33796  013852  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 33797  013854  0100               	movlb	0	; () banked
 33798  013856  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 33799  013858  E105               	bnz	u16830
 33800  01385A  0E10               	movlw	16
 33801  01385C  0100               	movlb	0	; () banked
 33802  01385E  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 33803  013860  A0D8               	btfss	status,0,c
 33804  013862  D002               	goto	l18071
 33805  013864                     u16830:
 33806                           
 33807                           ; BSR set to: 0
 33808                           ;external_flash.c: 111: {
 33809                           ;external_flash.c: 112: return 0;
 33810  013864  0E00               	movlw	0
 33811                           
 33812                           ; BSR set to: 0
 33813  013866  0012               	return	
 33814  013868                     l18071:
 33815                           
 33816                           ; BSR set to: 0
 33817                           ;external_flash.c: 113: }
 33818                           ;external_flash.c: 141: flash_page_write(page, buffer);
 33819  013868  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 33820  01386C  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 33821  013870  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 33822  013874  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 33823  013878  ECC0  F098         	call	_flash_page_write	;wreg free
 33824                           
 33825                           ;external_flash.c: 143: return 1;
 33826  01387C  0E01               	movlw	1
 33827  01387E  0012               	return	
 33828  013880                     __end_of_ExternalFlash_SectorWrite:
 33829                           	opt stack 0
 33830                           tosu	equ	0xFFF
 33831                           tosh	equ	0xFFE
 33832                           tosl	equ	0xFFD
 33833                           pclath	equ	0xFFA
 33834                           tblptru	equ	0xFF8
 33835                           tblptrh	equ	0xFF7
 33836                           tblptrl	equ	0xFF6
 33837                           tablat	equ	0xFF5
 33838                           prodh	equ	0xFF4
 33839                           prodl	equ	0xFF3
 33840                           intcon	equ	0xFF2
 33841                           intcon2	equ	0xFF1
 33842                           intcon3	equ	0xFF0
 33843                           postinc0	equ	0xFEE
 33844                           wreg	equ	0xFE8
 33845                           indf1	equ	0xFE7
 33846                           postinc1	equ	0xFE6
 33847                           postdec1	equ	0xFE5
 33848                           plusw1	equ	0xFE3
 33849                           fsr1h	equ	0xFE2
 33850                           fsr1l	equ	0xFE1
 33851                           indf2	equ	0xFDF
 33852                           postinc2	equ	0xFDE
 33853                           postdec2	equ	0xFDD
 33854                           plusw2	equ	0xFDB
 33855                           fsr2h	equ	0xFDA
 33856                           fsr2l	equ	0xFD9
 33857                           status	equ	0xFD8
 33858                           
 33859 ;; *************** function _flash_page_write *****************
 33860 ;; Defined at:
 33861 ;;		line 546 in file "flash.c"
 33862 ;; Parameters:    Size  Location     Type
 33863 ;;  page            2   31[BANK0 ] unsigned int 
 33864 ;;  data            2   33[BANK0 ] PTR unsigned char 
 33865 ;;		 -> buffer(512), msd_buffer(512), 
 33866 ;; Auto vars:     Size  Location     Type
 33867 ;;  match           1   35[BANK0 ] enum E8335
 33868 ;; Return value:  Size  Location     Type
 33869 ;;                  1    wreg      void 
 33870 ;; Registers used:
 33871 ;;		wreg, status,2, status,0, cstack
 33872 ;; Tracked objects:
 33873 ;;		On entry : 0/0
 33874 ;;		On exit  : 0/0
 33875 ;;		Unchanged: 0/0
 33876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33877 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33880 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33881 ;;Total ram usage:        5 bytes
 33882 ;; Hardware stack levels used:    1
 33883 ;; Hardware stack levels required when called:   14
 33884 ;; This function calls:
 33885 ;;		__flash_compare_page_to_buffer
 33886 ;;		__flash_write_page_from_buffer
 33887 ;;		__flash_write_to_buffer
 33888 ;; This function is called by:
 33889 ;;		_ExternalFlash_SectorWrite
 33890 ;;		_fat_format
 33891 ;; This function uses a non-reentrant model
 33892 ;;
 33893                           
 33894                           	psect	text143
 33895  013180                     __ptext143:
 33896                           	opt stack 0
 33897  013180                     _flash_page_write:
 33898                           	opt stack 10
 33899                           
 33900                           ;flash.c: 548: flashMatchResult_t match;
 33901                           ;flash.c: 551: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 33902                           
 33903                           ;incstack = 0
 33904  013180  0E00               	movlw	0
 33905  013182  0100               	movlb	0	; () banked
 33906  013184  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 33907  013186  0E00               	movlw	0
 33908  013188  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 33909  01318A  C081  F075         	movff	flash_page_write@data,__flash_write_to_buffer@data
 33910  01318E  C082  F076         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 33911  013192  0E02               	movlw	2
 33912  013194  0100               	movlb	0	; () banked
 33913  013196  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 33914  013198  0E00               	movlw	0
 33915  01319A  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 33916  01319C  0E00               	movlw	0
 33917  01319E  0100               	movlb	0	; () banked
 33918  0131A0  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 33919  0131A2  ECC3  F095         	call	__flash_write_to_buffer	;wreg free
 33920                           
 33921                           ;flash.c: 554: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 33922  0131A6  C07F  F073         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 33923  0131AA  C080  F074         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 33924  0131AE  0E00               	movlw	0
 33925  0131B0  0100               	movlb	0	; () banked
 33926  0131B2  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 33927  0131B4  ECD5  F08B         	call	__flash_compare_page_to_buffer	;wreg free
 33928  0131B8  0100               	movlb	0	; () banked
 33929  0131BA  6F83               	movwf	flash_page_write@match& (0+255),b
 33930                           
 33931                           ; BSR set to: 0
 33932                           ;flash.c: 557: if(match==DATA_DOES_NOT_MATCH)
 33933  0131BC  0100               	movlb	0	; () banked
 33934  0131BE  0583               	decf	flash_page_write@match& (0+255),w,b
 33935  0131C0  A4D8               	btfss	status,2,c
 33936  0131C2  0012               	return	
 33937                           
 33938                           ; BSR set to: 0
 33939                           ;flash.c: 558: {
 33940                           ;flash.c: 559: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 33941  0131C4  C07F  F073         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 33942  0131C8  C080  F074         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 33943  0131CC  0E00               	movlw	0
 33944  0131CE  0100               	movlb	0	; () banked
 33945  0131D0  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 33946  0131D2  EC87  F092         	call	__flash_write_page_from_buffer	;wreg free
 33947  0131D6  0012               	return	
 33948  0131D8                     __end_of_flash_page_write:
 33949                           	opt stack 0
 33950                           tosu	equ	0xFFF
 33951                           tosh	equ	0xFFE
 33952                           tosl	equ	0xFFD
 33953                           pclath	equ	0xFFA
 33954                           tblptru	equ	0xFF8
 33955                           tblptrh	equ	0xFF7
 33956                           tblptrl	equ	0xFF6
 33957                           tablat	equ	0xFF5
 33958                           prodh	equ	0xFF4
 33959                           prodl	equ	0xFF3
 33960                           intcon	equ	0xFF2
 33961                           intcon2	equ	0xFF1
 33962                           intcon3	equ	0xFF0
 33963                           postinc0	equ	0xFEE
 33964                           wreg	equ	0xFE8
 33965                           indf1	equ	0xFE7
 33966                           postinc1	equ	0xFE6
 33967                           postdec1	equ	0xFE5
 33968                           plusw1	equ	0xFE3
 33969                           fsr1h	equ	0xFE2
 33970                           fsr1l	equ	0xFE1
 33971                           indf2	equ	0xFDF
 33972                           postinc2	equ	0xFDE
 33973                           postdec2	equ	0xFDD
 33974                           plusw2	equ	0xFDB
 33975                           fsr2h	equ	0xFDA
 33976                           fsr2l	equ	0xFD9
 33977                           status	equ	0xFD8
 33978                           
 33979 ;; *************** function __flash_write_to_buffer *****************
 33980 ;; Defined at:
 33981 ;;		line 397 in file "flash.c"
 33982 ;; Parameters:    Size  Location     Type
 33983 ;;  start           2   19[BANK0 ] unsigned int 
 33984 ;;  data            2   21[BANK0 ] PTR unsigned char 
 33985 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 33986 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 33987 ;;		 -> msd_buffer(512), 
 33988 ;;  data_length     2   23[BANK0 ] unsigned int 
 33989 ;;  buffer          1   25[BANK0 ] enum E8331
 33990 ;; Auto vars:     Size  Location     Type
 33991 ;;  command         4   26[BANK0 ] unsigned char [4]
 33992 ;; Return value:  Size  Location     Type
 33993 ;;                  1    wreg      void 
 33994 ;; Registers used:
 33995 ;;		wreg, status,2, status,0, cstack
 33996 ;; Tracked objects:
 33997 ;;		On entry : 0/0
 33998 ;;		On exit  : 0/0
 33999 ;;		Unchanged: 0/0
 34000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34001 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34002 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34004 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34005 ;;Total ram usage:       11 bytes
 34006 ;; Hardware stack levels used:    1
 34007 ;; Hardware stack levels required when called:   13
 34008 ;; This function calls:
 34009 ;;		__flash_spi_tx_tx
 34010 ;;		_flash_is_busy
 34011 ;; This function is called by:
 34012 ;;		_flash_page_write
 34013 ;;		_flash_partial_write
 34014 ;; This function uses a non-reentrant model
 34015 ;;
 34016                           
 34017                           	psect	text144
 34018  012B86                     __ptext144:
 34019                           	opt stack 0
 34020  012B86                     __flash_write_to_buffer:
 34021                           	opt stack 13
 34022  012B86                     l17777:
 34023  012B86  EC85  F09F         	call	_flash_is_busy	;wreg free
 34024  012B8A  0900               	iorlw	0
 34025  012B8C  A4D8               	btfss	status,2,c
 34026  012B8E  D7FB               	goto	l17777
 34027                           
 34028                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 34029  012B90  0100               	movlb	0	; () banked
 34030  012B92  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 34031  012B94  0100               	movlb	0	; () banked
 34032  012B96  A4D8               	btfss	status,2,c
 34033  012B98  D003               	goto	l17783
 34034                           
 34035                           ; BSR set to: 0
 34036                           ;flash.c: 406: command[0] = 0x84;
 34037  012B9A  0E84               	movlw	132
 34038  012B9C  0100               	movlb	0	; () banked
 34039  012B9E  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34040  012BA0                     l17783:
 34041                           
 34042                           ; BSR set to: 0
 34043                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 34044  012BA0  0100               	movlb	0	; () banked
 34045  012BA2  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 34046  012BA4  A4D8               	btfss	status,2,c
 34047  012BA6  D003               	goto	l2823
 34048                           
 34049                           ; BSR set to: 0
 34050                           ;flash.c: 408: command[0] = 0x87;
 34051  012BA8  0E87               	movlw	135
 34052  012BAA  0100               	movlb	0	; () banked
 34053  012BAC  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34054  012BAE                     l2823:
 34055                           
 34056                           ; BSR set to: 0
 34057                           ;flash.c: 410: command[1] = 0x00;
 34058  012BAE  0E00               	movlw	0
 34059  012BB0  0100               	movlb	0	; () banked
 34060  012BB2  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 34061                           
 34062                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 34063  012BB4  0100               	movlb	0	; () banked
 34064  012BB6  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 34065  012BB8  0100               	movlb	0	; () banked
 34066  012BBA  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 34067                           
 34068                           ; BSR set to: 0
 34069                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 34070  012BBC  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 34071                           
 34072                           ; BSR set to: 0
 34073                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 34074  012BC0  0E7A               	movlw	low __flash_write_to_buffer@command
 34075  012BC2  0100               	movlb	0	; () banked
 34076  012BC4  6F60               	movwf	__flash_spi_tx_tx@command& (0+255),b
 34077  012BC6  0E00               	movlw	high __flash_write_to_buffer@command
 34078  012BC8  0100               	movlb	0	; () banked
 34079  012BCA  6F61               	movwf	(__flash_spi_tx_tx@command+1)& (0+255),b
 34080  012BCC  0E00               	movlw	0
 34081  012BCE  0100               	movlb	0	; () banked
 34082  012BD0  6F63               	movwf	(__flash_spi_tx_tx@command_length+1)& (0+255),b
 34083  012BD2  0E04               	movlw	4
 34084  012BD4  6F62               	movwf	__flash_spi_tx_tx@command_length& (0+255),b
 34085  012BD6  C075  F064         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 34086  012BDA  C076  F065         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 34087  012BDE  C077  F066         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 34088  012BE2  C078  F067         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 34089  012BE6  EC90  F089         	call	__flash_spi_tx_tx	;wreg free
 34090  012BEA  0012               	return		;funcret
 34091  012BEC                     __end_of__flash_write_to_buffer:
 34092                           	opt stack 0
 34093                           tosu	equ	0xFFF
 34094                           tosh	equ	0xFFE
 34095                           tosl	equ	0xFFD
 34096                           pclath	equ	0xFFA
 34097                           tblptru	equ	0xFF8
 34098                           tblptrh	equ	0xFF7
 34099                           tblptrl	equ	0xFF6
 34100                           tablat	equ	0xFF5
 34101                           prodh	equ	0xFF4
 34102                           prodl	equ	0xFF3
 34103                           intcon	equ	0xFF2
 34104                           intcon2	equ	0xFF1
 34105                           intcon3	equ	0xFF0
 34106                           postinc0	equ	0xFEE
 34107                           wreg	equ	0xFE8
 34108                           indf1	equ	0xFE7
 34109                           postinc1	equ	0xFE6
 34110                           postdec1	equ	0xFE5
 34111                           plusw1	equ	0xFE3
 34112                           fsr1h	equ	0xFE2
 34113                           fsr1l	equ	0xFE1
 34114                           indf2	equ	0xFDF
 34115                           postinc2	equ	0xFDE
 34116                           postdec2	equ	0xFDD
 34117                           plusw2	equ	0xFDB
 34118                           fsr2h	equ	0xFDA
 34119                           fsr2l	equ	0xFD9
 34120                           status	equ	0xFD8
 34121                           
 34122 ;; *************** function __flash_spi_tx_tx *****************
 34123 ;; Defined at:
 34124 ;;		line 141 in file "flash.c"
 34125 ;; Parameters:    Size  Location     Type
 34126 ;;  command         2    0[BANK0 ] PTR unsigned char 
 34127 ;;		 -> _flash_write_to_buffer@command(4), 
 34128 ;;  command_leng    2    2[BANK0 ] unsigned int 
 34129 ;;  data            2    4[BANK0 ] PTR unsigned char 
 34130 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 34131 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 34132 ;;		 -> msd_buffer(512), 
 34133 ;;  data_length     2    6[BANK0 ] unsigned int 
 34134 ;; Auto vars:     Size  Location     Type
 34135 ;;		None
 34136 ;; Return value:  Size  Location     Type
 34137 ;;                  1    wreg      void 
 34138 ;; Registers used:
 34139 ;;		wreg, status,2, status,0
 34140 ;; Tracked objects:
 34141 ;;		On entry : 0/0
 34142 ;;		On exit  : 0/0
 34143 ;;		Unchanged: 0/0
 34144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34145 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34148 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34149 ;;Total ram usage:       12 bytes
 34150 ;; Hardware stack levels used:    1
 34151 ;; Hardware stack levels required when called:   10
 34152 ;; This function calls:
 34153 ;;		Nothing
 34154 ;; This function is called by:
 34155 ;;		__flash_write_to_buffer
 34156 ;; This function uses a non-reentrant model
 34157 ;;
 34158                           
 34159                           	psect	text145
 34160  011320                     __ptext145:
 34161                           	opt stack 0
 34162  011320                     __flash_spi_tx_tx:
 34163                           	opt stack 15
 34164                           
 34165                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 34166                           
 34167                           ;incstack = 0
 34168  011320  9E88               	bcf	3976,7,c	;volatile
 34169                           
 34170                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 34171  011322  9C88               	bcf	3976,6,c	;volatile
 34172                           
 34173                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 34174  011324  8A88               	bsf	3976,5,c	;volatile
 34175                           
 34176                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 34177  011326  9888               	bcf	3976,4,c	;volatile
 34178                           
 34179                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 34180  011328  9688               	bcf	3976,3,c	;volatile
 34181                           
 34182                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 34183  01132A  8488               	bsf	3976,2,c	;volatile
 34184                           
 34185                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 34186  01132C  9288               	bcf	3976,1,c	;volatile
 34187                           
 34188                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 34189  01132E  9886               	bcf	3974,4,c	;volatile
 34190  011330  9A86               	bcf	3974,5,c	;volatile
 34191  011332  9C86               	bcf	3974,6,c	;volatile
 34192  011334  9E86               	bcf	3974,7,c	;volatile
 34193                           
 34194                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 34195  011336  9086               	bcf	3974,0,c	;volatile
 34196  011338  9286               	bcf	3974,1,c	;volatile
 34197  01133A  9486               	bcf	3974,2,c	;volatile
 34198  01133C  9686               	bcf	3974,3,c	;volatile
 34199                           
 34200                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34201  01133E  0100               	movlb	0	; () banked
 34202  011340  5161               	movf	(__flash_spi_tx_tx@command+1)& (0+255),w,b
 34203  011342  6E6A               	movwf	3946,c	;volatile
 34204                           
 34205                           ; BSR set to: 0
 34206                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34207  011344  C060  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34211  011348  0EFF               	movlw	255
 34212  01134A  0100               	movlb	0	; () banked
 34213  01134C  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 34214  01134E  0EFF               	movlw	255
 34215  011350  0100               	movlb	0	; () banked
 34216  011352  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 34217  011354  C062  F06A         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 34218  011358  C063  F06B         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 34219  01135C  0100               	movlb	0	; () banked
 34220  01135E  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 34221  011360  0100               	movlb	0	; () banked
 34222  011362  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 34223  011364  0100               	movlb	0	; () banked
 34224  011366  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 34225  011368  0100               	movlb	0	; () banked
 34226  01136A  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 34227  01136C  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 34228  011370  0100               	movlb	0	; () banked
 34229  011372  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 34230  011374  0100               	movlb	0	; () banked
 34231  011376  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 34232  011378  6E66               	movwf	3942,c	;volatile
 34233                           
 34234                           ; BSR set to: 0
 34235                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34236  01137A  0100               	movlb	0	; () banked
 34237  01137C  0562               	decf	__flash_spi_tx_tx@command_length& (0+255),w,b
 34238  01137E  6E67               	movwf	3943,c	;volatile
 34239                           
 34240                           ; BSR set to: 0
 34241                           ;flash.c: 169: LATDbits.LD7 = 0;
 34242  011380  9E8C               	bcf	3980,7,c	;volatile
 34243                           
 34244                           ; BSR set to: 0
 34245                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 34246  011382  8088               	bsf	3976,0,c	;volatile
 34247  011384                     l2756:
 34248  011384  B088               	btfsc	3976,0,c	;volatile
 34249  011386  D7FE               	goto	l2756
 34250                           
 34251                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34252  011388  0100               	movlb	0	; () banked
 34253  01138A  5165               	movf	(__flash_spi_tx_tx@data+1)& (0+255),w,b
 34254  01138C  6E6A               	movwf	3946,c	;volatile
 34255                           
 34256                           ; BSR set to: 0
 34257                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34258  01138E  C064  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 34259                           
 34260                           ; BSR set to: 0
 34261                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34262  011392  0EFF               	movlw	255
 34263  011394  0100               	movlb	0	; () banked
 34264  011396  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 34265  011398  0EFF               	movlw	255
 34266  01139A  0100               	movlb	0	; () banked
 34267  01139C  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 34268  01139E  C066  F06A         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 34269  0113A2  C067  F06B         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 34270  0113A6  0100               	movlb	0	; () banked
 34271  0113A8  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 34272  0113AA  0100               	movlb	0	; () banked
 34273  0113AC  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 34274  0113AE  0100               	movlb	0	; () banked
 34275  0113B0  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 34276  0113B2  0100               	movlb	0	; () banked
 34277  0113B4  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 34278  0113B6  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 34279  0113BA  0100               	movlb	0	; () banked
 34280  0113BC  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 34281  0113BE  0100               	movlb	0	; () banked
 34282  0113C0  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 34283  0113C2  6E66               	movwf	3942,c	;volatile
 34284                           
 34285                           ; BSR set to: 0
 34286                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34287  0113C4  0100               	movlb	0	; () banked
 34288  0113C6  0566               	decf	__flash_spi_tx_tx@data_length& (0+255),w,b
 34289  0113C8  6E67               	movwf	3943,c	;volatile
 34290                           
 34291                           ; BSR set to: 0
 34292                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 34293  0113CA  8088               	bsf	3976,0,c	;volatile
 34294  0113CC                     l2759:
 34295  0113CC  B088               	btfsc	3976,0,c	;volatile
 34296  0113CE  D7FE               	goto	l2759
 34297                           
 34298                           ;flash.c: 188: LATDbits.LD7 = 1;
 34299  0113D0  8E8C               	bsf	3980,7,c	;volatile
 34300  0113D2  0012               	return		;funcret
 34301  0113D4                     __end_of__flash_spi_tx_tx:
 34302                           	opt stack 0
 34303                           tosu	equ	0xFFF
 34304                           tosh	equ	0xFFE
 34305                           tosl	equ	0xFFD
 34306                           pclath	equ	0xFFA
 34307                           tblptru	equ	0xFF8
 34308                           tblptrh	equ	0xFF7
 34309                           tblptrl	equ	0xFF6
 34310                           tablat	equ	0xFF5
 34311                           prodh	equ	0xFF4
 34312                           prodl	equ	0xFF3
 34313                           intcon	equ	0xFF2
 34314                           intcon2	equ	0xFF1
 34315                           intcon3	equ	0xFF0
 34316                           postinc0	equ	0xFEE
 34317                           wreg	equ	0xFE8
 34318                           indf1	equ	0xFE7
 34319                           postinc1	equ	0xFE6
 34320                           postdec1	equ	0xFE5
 34321                           plusw1	equ	0xFE3
 34322                           fsr1h	equ	0xFE2
 34323                           fsr1l	equ	0xFE1
 34324                           indf2	equ	0xFDF
 34325                           postinc2	equ	0xFDE
 34326                           postdec2	equ	0xFDD
 34327                           plusw2	equ	0xFDB
 34328                           fsr2h	equ	0xFDA
 34329                           fsr2l	equ	0xFD9
 34330                           status	equ	0xFD8
 34331                           
 34332 ;; *************** function __flash_write_page_from_buffer *****************
 34333 ;; Defined at:
 34334 ;;		line 419 in file "flash.c"
 34335 ;; Parameters:    Size  Location     Type
 34336 ;;  page            2   19[BANK0 ] unsigned int 
 34337 ;;  buffer          1   21[BANK0 ] enum E8331
 34338 ;; Auto vars:     Size  Location     Type
 34339 ;;  command         4   25[BANK0 ] unsigned char [4]
 34340 ;; Return value:  Size  Location     Type
 34341 ;;                  1    wreg      void 
 34342 ;; Registers used:
 34343 ;;		wreg, status,2, status,0, cstack
 34344 ;; Tracked objects:
 34345 ;;		On entry : 0/0
 34346 ;;		On exit  : 0/0
 34347 ;;		Unchanged: 0/0
 34348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34349 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34350 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34351 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34352 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34353 ;;Total ram usage:       10 bytes
 34354 ;; Hardware stack levels used:    1
 34355 ;; Hardware stack levels required when called:   13
 34356 ;; This function calls:
 34357 ;;		__flash_spi_tx
 34358 ;;		_flash_is_busy
 34359 ;; This function is called by:
 34360 ;;		_flash_page_write
 34361 ;;		_flash_partial_write
 34362 ;; This function uses a non-reentrant model
 34363 ;;
 34364                           
 34365                           	psect	text146
 34366  01250E                     __ptext146:
 34367                           	opt stack 0
 34368  01250E                     __flash_write_page_from_buffer:
 34369                           	opt stack 13
 34370  01250E                     l17793:
 34371  01250E  EC85  F09F         	call	_flash_is_busy	;wreg free
 34372  012512  0900               	iorlw	0
 34373  012514  A4D8               	btfss	status,2,c
 34374  012516  D7FB               	goto	l17793
 34375                           
 34376                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 34377  012518  0100               	movlb	0	; () banked
 34378  01251A  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34379  01251C  0100               	movlb	0	; () banked
 34380  01251E  A4D8               	btfss	status,2,c
 34381  012520  D003               	goto	l17799
 34382                           
 34383                           ; BSR set to: 0
 34384                           ;flash.c: 428: command[0] = 0x83;
 34385  012522  0E83               	movlw	131
 34386  012524  0100               	movlb	0	; () banked
 34387  012526  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34388  012528                     l17799:
 34389                           
 34390                           ; BSR set to: 0
 34391                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 34392  012528  0100               	movlb	0	; () banked
 34393  01252A  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34394  01252C  A4D8               	btfss	status,2,c
 34395  01252E  D003               	goto	l17803
 34396                           
 34397                           ; BSR set to: 0
 34398                           ;flash.c: 430: command[0] = 0x86;
 34399  012530  0E86               	movlw	134
 34400  012532  0100               	movlb	0	; () banked
 34401  012534  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34402  012536                     l17803:
 34403                           
 34404                           ; BSR set to: 0
 34405                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34406  012536  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34407  01253A  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34408  01253E  0E07               	movlw	7
 34409  012540  0100               	movlb	0	; () banked
 34410  012542  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 34411  012544                     u16435:
 34412  012544  0100               	movlb	0	; () banked
 34413  012546  90D8               	bcf	status,0,c
 34414  012548  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 34415  01254A  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 34416  01254C  0100               	movlb	0	; () banked
 34417  01254E  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 34418  012550  D7F9               	goto	u16435
 34419  012552  0100               	movlb	0	; () banked
 34420  012554  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 34421  012556  0100               	movlb	0	; () banked
 34422  012558  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 34423                           
 34424                           ; BSR set to: 0
 34425                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 34426  01255A  0100               	movlb	0	; () banked
 34427  01255C  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34428  01255E  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34429  012560  0100               	movlb	0	; () banked
 34430  012562  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34431                           
 34432                           ;flash.c: 434: command[3] = 0x00;
 34433  012564  0E00               	movlw	0
 34434  012566  0100               	movlb	0	; () banked
 34435  012568  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34436                           
 34437                           ; BSR set to: 0
 34438                           ;flash.c: 437: _flash_spi_tx(command, 4);
 34439  01256A  0E79               	movlw	low __flash_write_page_from_buffer@command
 34440  01256C  0100               	movlb	0	; () banked
 34441  01256E  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34442  012570  0E00               	movlw	high __flash_write_page_from_buffer@command
 34443  012572  0100               	movlb	0	; () banked
 34444  012574  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34445  012576  0E00               	movlw	0
 34446  012578  0100               	movlb	0	; () banked
 34447  01257A  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34448  01257C  0E04               	movlw	4
 34449  01257E  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34450  012580  ECBE  F094         	call	__flash_spi_tx	;wreg free
 34451  012584  0012               	return		;funcret
 34452  012586                     __end_of__flash_write_page_from_buffer:
 34453                           	opt stack 0
 34454                           tosu	equ	0xFFF
 34455                           tosh	equ	0xFFE
 34456                           tosl	equ	0xFFD
 34457                           pclath	equ	0xFFA
 34458                           tblptru	equ	0xFF8
 34459                           tblptrh	equ	0xFF7
 34460                           tblptrl	equ	0xFF6
 34461                           tablat	equ	0xFF5
 34462                           prodh	equ	0xFF4
 34463                           prodl	equ	0xFF3
 34464                           intcon	equ	0xFF2
 34465                           intcon2	equ	0xFF1
 34466                           intcon3	equ	0xFF0
 34467                           postinc0	equ	0xFEE
 34468                           wreg	equ	0xFE8
 34469                           indf1	equ	0xFE7
 34470                           postinc1	equ	0xFE6
 34471                           postdec1	equ	0xFE5
 34472                           plusw1	equ	0xFE3
 34473                           fsr1h	equ	0xFE2
 34474                           fsr1l	equ	0xFE1
 34475                           indf2	equ	0xFDF
 34476                           postinc2	equ	0xFDE
 34477                           postdec2	equ	0xFDD
 34478                           plusw2	equ	0xFDB
 34479                           fsr2h	equ	0xFDA
 34480                           fsr2l	equ	0xFD9
 34481                           status	equ	0xFD8
 34482                           
 34483 ;; *************** function __flash_compare_page_to_buffer *****************
 34484 ;; Defined at:
 34485 ;;		line 337 in file "flash.c"
 34486 ;; Parameters:    Size  Location     Type
 34487 ;;  page            2   19[BANK0 ] unsigned int 
 34488 ;;  buffer          1   21[BANK0 ] enum E8331
 34489 ;; Auto vars:     Size  Location     Type
 34490 ;;  command         4   27[BANK0 ] unsigned char [4]
 34491 ;;  status          2   25[BANK0 ] unsigned int 
 34492 ;; Return value:  Size  Location     Type
 34493 ;;                  1    wreg      enum E8335
 34494 ;; Registers used:
 34495 ;;		wreg, status,2, status,0, cstack
 34496 ;; Tracked objects:
 34497 ;;		On entry : 0/0
 34498 ;;		On exit  : 0/0
 34499 ;;		Unchanged: 0/0
 34500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34501 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34502 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34503 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34504 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34505 ;;Total ram usage:       12 bytes
 34506 ;; Hardware stack levels used:    1
 34507 ;; Hardware stack levels required when called:   13
 34508 ;; This function calls:
 34509 ;;		__flash_get_status
 34510 ;;		__flash_spi_tx
 34511 ;;		_flash_is_busy
 34512 ;; This function is called by:
 34513 ;;		_flash_page_write
 34514 ;;		_flash_partial_write
 34515 ;; This function uses a non-reentrant model
 34516 ;;
 34517                           
 34518                           	psect	text147
 34519  0117AA                     __ptext147:
 34520                           	opt stack 0
 34521  0117AA                     __flash_compare_page_to_buffer:
 34522                           	opt stack 13
 34523  0117AA                     l17743:
 34524  0117AA  EC85  F09F         	call	_flash_is_busy	;wreg free
 34525  0117AE  0900               	iorlw	0
 34526  0117B0  A4D8               	btfss	status,2,c
 34527  0117B2  D7FB               	goto	l17743
 34528                           
 34529                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 34530  0117B4  0100               	movlb	0	; () banked
 34531  0117B6  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34532  0117B8  0100               	movlb	0	; () banked
 34533  0117BA  A4D8               	btfss	status,2,c
 34534  0117BC  D003               	goto	l17749
 34535                           
 34536                           ; BSR set to: 0
 34537                           ;flash.c: 347: command[0] = 0x60;
 34538  0117BE  0E60               	movlw	96
 34539  0117C0  0100               	movlb	0	; () banked
 34540  0117C2  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34541  0117C4                     l17749:
 34542                           
 34543                           ; BSR set to: 0
 34544                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 34545  0117C4  0100               	movlb	0	; () banked
 34546  0117C6  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34547  0117C8  A4D8               	btfss	status,2,c
 34548  0117CA  D003               	goto	l17753
 34549                           
 34550                           ; BSR set to: 0
 34551                           ;flash.c: 349: command[0] = 0x60;
 34552  0117CC  0E60               	movlw	96
 34553  0117CE  0100               	movlb	0	; () banked
 34554  0117D0  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34555  0117D2                     l17753:
 34556                           
 34557                           ; BSR set to: 0
 34558                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34559  0117D2  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34560  0117D6  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34561  0117DA  0E07               	movlw	7
 34562  0117DC  0100               	movlb	0	; () banked
 34563  0117DE  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 34564  0117E0                     u16345:
 34565  0117E0  0100               	movlb	0	; () banked
 34566  0117E2  90D8               	bcf	status,0,c
 34567  0117E4  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 34568  0117E6  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 34569  0117E8  0100               	movlb	0	; () banked
 34570  0117EA  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 34571  0117EC  D7F9               	goto	u16345
 34572  0117EE  0100               	movlb	0	; () banked
 34573  0117F0  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 34574  0117F2  0100               	movlb	0	; () banked
 34575  0117F4  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 34576                           
 34577                           ; BSR set to: 0
 34578                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 34579  0117F6  0100               	movlb	0	; () banked
 34580  0117F8  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34581  0117FA  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34582  0117FC  0100               	movlb	0	; () banked
 34583  0117FE  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 34584                           
 34585                           ;flash.c: 353: command[3] = 0x00;
 34586  011800  0E00               	movlw	0
 34587  011802  0100               	movlb	0	; () banked
 34588  011804  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 34589                           
 34590                           ; BSR set to: 0
 34591                           ;flash.c: 356: _flash_spi_tx(command, 4);
 34592  011806  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 34593  011808  0100               	movlb	0	; () banked
 34594  01180A  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34595  01180C  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34596  01180E  0100               	movlb	0	; () banked
 34597  011810  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34598  011812  0E00               	movlw	0
 34599  011814  0100               	movlb	0	; () banked
 34600  011816  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34601  011818  0E04               	movlw	4
 34602  01181A  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34603  01181C  ECBE  F094         	call	__flash_spi_tx	;wreg free
 34604  011820                     l17759:
 34605  011820  EC85  F09F         	call	_flash_is_busy	;wreg free
 34606  011824  0900               	iorlw	0
 34607  011826  A4D8               	btfss	status,2,c
 34608  011828  D7FB               	goto	l17759
 34609                           
 34610                           ;flash.c: 362: status = _flash_get_status();
 34611  01182A  EC30  F09B         	call	__flash_get_status	;wreg free
 34612  01182E  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34613  011832  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34614                           
 34615                           ;flash.c: 365: if(status & 0b0000000001000000)
 34616  011836  0100               	movlb	0	; () banked
 34617  011838  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 34618  01183A  D002               	goto	l17771
 34619                           
 34620                           ; BSR set to: 0
 34621                           ;flash.c: 366: {
 34622                           ;flash.c: 368: return DATA_DOES_NOT_MATCH;
 34623  01183C  0E01               	movlw	1
 34624                           
 34625                           ; BSR set to: 0
 34626                           ;flash.c: 369: }
 34627                           
 34628                           ; BSR set to: 0
 34629  01183E  0012               	return	
 34630  011840                     l17771:
 34631                           
 34632                           ; BSR set to: 0
 34633                           ;flash.c: 370: else
 34634                           ;flash.c: 371: {
 34635                           ;flash.c: 373: return DATA_DOES_MATCH;
 34636  011840  0E00               	movlw	0
 34637                           
 34638                           ; BSR set to: 0
 34639  011842  0012               	return	
 34640  011844                     __end_of__flash_compare_page_to_buffer:
 34641                           	opt stack 0
 34642                           tosu	equ	0xFFF
 34643                           tosh	equ	0xFFE
 34644                           tosl	equ	0xFFD
 34645                           pclath	equ	0xFFA
 34646                           tblptru	equ	0xFF8
 34647                           tblptrh	equ	0xFF7
 34648                           tblptrl	equ	0xFF6
 34649                           tablat	equ	0xFF5
 34650                           prodh	equ	0xFF4
 34651                           prodl	equ	0xFF3
 34652                           intcon	equ	0xFF2
 34653                           intcon2	equ	0xFF1
 34654                           intcon3	equ	0xFF0
 34655                           postinc0	equ	0xFEE
 34656                           wreg	equ	0xFE8
 34657                           indf1	equ	0xFE7
 34658                           postinc1	equ	0xFE6
 34659                           postdec1	equ	0xFE5
 34660                           plusw1	equ	0xFE3
 34661                           fsr1h	equ	0xFE2
 34662                           fsr1l	equ	0xFE1
 34663                           indf2	equ	0xFDF
 34664                           postinc2	equ	0xFDE
 34665                           postdec2	equ	0xFDD
 34666                           plusw2	equ	0xFDB
 34667                           fsr2h	equ	0xFDA
 34668                           fsr2l	equ	0xFD9
 34669                           status	equ	0xFD8
 34670                           
 34671 ;; *************** function _MSDReadHandler *****************
 34672 ;; Defined at:
 34673 ;;		line 1038 in file "usb_device_msd.c"
 34674 ;; Parameters:    Size  Location     Type
 34675 ;;		None
 34676 ;; Auto vars:     Size  Location     Type
 34677 ;;		None
 34678 ;; Return value:  Size  Location     Type
 34679 ;;                  1    wreg      unsigned char 
 34680 ;; Registers used:
 34681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34682 ;; Tracked objects:
 34683 ;;		On entry : 0/0
 34684 ;;		On exit  : 0/0
 34685 ;;		Unchanged: 0/0
 34686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34690 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34691 ;;Total ram usage:        4 bytes
 34692 ;; Hardware stack levels used:    1
 34693 ;; Hardware stack levels required when called:   16
 34694 ;; This function calls:
 34695 ;;		_ExternalFlash_SectorRead
 34696 ;;		_MSDCheckForErrorCases
 34697 ;;		_USBStallEndpoint
 34698 ;;		_USBTransferOnePacket
 34699 ;; This function is called by:
 34700 ;;		_MSDProcessCommandMediaPresent
 34701 ;; This function uses a non-reentrant model
 34702 ;;
 34703                           
 34704                           	psect	text148
 34705  00D694                     __ptext148:
 34706                           	opt stack 0
 34707  00D694                     _MSDReadHandler:
 34708                           	opt stack 10
 34709                           
 34710                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 34711                           
 34712                           ; BSR set to: 0
 34713                           ;incstack = 0
 34714  00D694  D0F4               	goto	l18189
 34715  00D696                     l686:
 34716                           
 34717                           ; BSR set to: 1
 34718                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 34719  00D696  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 34720                           
 34721                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 34722  00D69A  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 34723                           
 34724                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 34725  00D69E  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 34726                           
 34727                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 34728  00D6A2  C255  F1D9         	movff	_gblCBW+20,_LBA
 34729                           
 34730                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 34731  00D6A6  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 34732                           
 34733                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 34734  00D6AA  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 34735                           
 34736                           ; BSR set to: 1
 34737                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 34738  00D6AE  0100               	movlb	0	; () banked
 34739  00D6B0  51D9               	movf	_TransferLength& (0+255),w,b
 34740  00D6B2  0100               	movlb	0	; () banked
 34741  00D6B4  6F95               	movwf	??_MSDReadHandler& (0+255),b
 34742  00D6B6  0100               	movlb	0	; () banked
 34743  00D6B8  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 34744  00D6BA  0100               	movlb	0	; () banked
 34745  00D6BC  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 34746  00D6BE  0100               	movlb	0	; () banked
 34747  00D6C0  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 34748  00D6C2  0100               	movlb	0	; () banked
 34749  00D6C4  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 34750  00D6C6  0E09               	movlw	9
 34751  00D6C8                     u16865:
 34752  00D6C8  90D8               	bcf	status,0,c
 34753  00D6CA  0100               	movlb	0	; () banked
 34754  00D6CC  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 34755  00D6CE  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 34756  00D6D0  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 34757  00D6D2  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 34758  00D6D4  2EE8               	decfsz	wreg,f,c
 34759  00D6D6  D7F8               	goto	u16865
 34760  00D6D8  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 34761  00D6DC  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 34762  00D6E0  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 34763  00D6E4  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 34764  00D6E8  EC37  F079         	call	_MSDCheckForErrorCases	;wreg free
 34765  00D6EC  0900               	iorlw	0
 34766  00D6EE  A4D8               	btfss	status,2,c
 34767  00D6F0  D0D8               	goto	l18191
 34768                           
 34769                           ;usb_device_msd.c: 1058: }
 34770                           ;usb_device_msd.c: 1060: MSDReadState = 0x01;
 34771                           
 34772                           ;usb_device_msd.c: 1056: {
 34773                           ;usb_device_msd.c: 1057: break;
 34774  00D6F2  0E01               	movlw	1
 34775  00D6F4  0101               	movlb	1	; () banked
 34776  00D6F6  6FF9               	movwf	_MSDReadState& (0+255),b
 34777  00D6F8                     l18125:
 34778                           
 34779                           ; BSR set to: 1
 34780                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 34781  00D6F8  0100               	movlb	0	; () banked
 34782  00D6FA  51D9               	movf	_TransferLength& (0+255),w,b
 34783  00D6FC  0100               	movlb	0	; () banked
 34784  00D6FE  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 34785  00D700  B4D8               	btfsc	status,2,c
 34786  00D702  D0B9               	goto	l18185
 34787                           
 34788                           ;usb_device_msd.c: 1068: }
 34789                           ;usb_device_msd.c: 1070: TransferLength.Val--;
 34790                           
 34791                           ; BSR set to: 1
 34792                           
 34793                           ;usb_device_msd.c: 1067: break;
 34794                           
 34795                           ; BSR set to: 0
 34796                           ;usb_device_msd.c: 1065: {
 34797                           ;usb_device_msd.c: 1066: MSDReadState = 0x00;
 34798  00D704  0100               	movlb	0	; () banked
 34799  00D706  07D9               	decf	_TransferLength& (0+255),f,b
 34800  00D708  A0D8               	btfss	status,0,c
 34801  00D70A  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 34802                           
 34803                           ; BSR set to: 0
 34804                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 34805  00D70C  0E02               	movlw	2
 34806  00D70E  0101               	movlb	1	; () banked
 34807  00D710  6FF9               	movwf	_MSDReadState& (0+255),b
 34808  00D712                     l18133:
 34809                           
 34810                           ; BSR set to: 1
 34811                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 34812  00D712  0100               	movlb	0	; () banked
 34813  00D714  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 34814  00D716  0100               	movlb	0	; () banked
 34815  00D718  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34816  00D71A  B4D8               	btfsc	status,2,c
 34817  00D71C  D007               	goto	l18139
 34818                           
 34819                           ; BSR set to: 0
 34820  00D71E  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 34821  00D722  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34822  00D726  0100               	movlb	0	; () banked
 34823  00D728  BEDF               	btfsc	indf2,7,c
 34824  00D72A  D0BB               	goto	l18191
 34825  00D72C                     l18139:
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;usb_device_msd.c: 1079: }
 34829                           ;usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaParameters, LBA.Val, (uint8_t*
      +                          )&msd_buffer[0]) != 1)
 34830  00D72C  C2D0  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 34831  00D730  C2D1  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 34832  00D734  C1D9  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 34833  00D738  C1DA  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 34834  00D73C  C1DB  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 34835  00D740  C1DC  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 34836  00D744  0E00               	movlw	0
 34837  00D746  0100               	movlb	0	; () banked
 34838  00D748  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 34839  00D74A  0E06               	movlw	6
 34840  00D74C  0100               	movlb	0	; () banked
 34841  00D74E  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 34842  00D750  EE22  F0C7         	lfsr	2,_LUN+12
 34843  00D754  D801               	call	u16918
 34844  00D756  D00A               	goto	u16919
 34845  00D758                     u16918:
 34846  00D758  0005               	push	
 34847  00D75A  6EFA               	movwf	pclath,c
 34848  00D75C  50DE               	movf	postinc2,w,c
 34849  00D75E  6EFD               	movwf	tosl,c
 34850  00D760  50DE               	movf	postinc2,w,c
 34851  00D762  6EFE               	movwf	tosh,c
 34852  00D764  50DE               	movf	postinc2,w,c
 34853  00D766  6EFF               	movwf	tosu,c
 34854  00D768  50FA               	movf	pclath,w,c
 34855  00D76A  0012               	return		;indir
 34856  00D76C                     u16919:
 34857  00D76C  06E8               	decf	wreg,f,c
 34858  00D76E  B4D8               	btfsc	status,2,c
 34859  00D770  D01C               	goto	l18153
 34860                           
 34861                           ;usb_device_msd.c: 1084: {
 34862                           ;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 34863  00D772  0E64               	movlw	100
 34864  00D774  0101               	movlb	1	; () banked
 34865  00D776  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 34866  00D778  D003               	goto	l18147
 34867                           
 34868                           ; BSR set to: 1
 34869                           ;usb_device_msd.c: 1086: {
 34870                           ;usb_device_msd.c: 1087: MSDRetryAttempt++;
 34871  00D77A  0101               	movlb	1	; () banked
 34872  00D77C  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 34873                           
 34874                           ;usb_device_msd.c: 1088: break;
 34875  00D77E  D091               	goto	l18191
 34876  00D780                     l18147:
 34877                           
 34878                           ; BSR set to: 1
 34879                           ;usb_device_msd.c: 1090: else
 34880                           ;usb_device_msd.c: 1091: {
 34881                           ;usb_device_msd.c: 1100: msd_csw.bCSWStatus=0x02;
 34882  00D780  0E02               	movlw	2
 34883  00D782  010D               	movlb	13	; () banked
 34884  00D784  6F8C               	movwf	140,b	;volatile
 34885                           
 34886                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 34887  00D786  0102               	movlb	2	; () banked
 34888  00D788  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 34889  00D78A  0BF0               	andlw	-16
 34890  00D78C  0903               	iorlw	3
 34891  00D78E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 34892                           
 34893                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 34894  00D790  0E00               	movlw	0
 34895  00D792  0102               	movlb	2	; () banked
 34896  00D794  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34897                           
 34898                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 34899  00D796  0E00               	movlw	0
 34900  00D798  0102               	movlb	2	; () banked
 34901  00D79A  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34902                           
 34903                           ; BSR set to: 2
 34904                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 34905  00D79C  0E01               	movlw	1
 34906  00D79E  0100               	movlb	0	; () banked
 34907  00D7A0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34908  00D7A2  0E02               	movlw	2
 34909  00D7A4  ECC9  F076         	call	_USBStallEndpoint
 34910  00D7A8  D066               	goto	l18185
 34911  00D7AA                     l18153:
 34912                           
 34913                           ;usb_device_msd.c: 1110: }
 34914                           ;usb_device_msd.c: 1111: }
 34915                           ;usb_device_msd.c: 1113: LBA.Val++;
 34916  00D7AA  0E01               	movlw	1
 34917  00D7AC  0101               	movlb	1	; () banked
 34918  00D7AE  27D9               	addwf	_LBA& (0+255),f,b
 34919  00D7B0  0E00               	movlw	0
 34920  00D7B2  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 34921  00D7B4  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 34922  00D7B6  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 34923                           
 34924                           ; BSR set to: 1
 34925                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 34926  00D7B8  0E00               	movlw	0
 34927  00D7BA  010D               	movlb	13	; () banked
 34928  00D7BC  6F88               	movwf	136,b	;volatile
 34929  00D7BE  0E02               	movlw	2
 34930  00D7C0  6F89               	movwf	137,b	;volatile
 34931  00D7C2  0E00               	movlw	0
 34932  00D7C4  6F8A               	movwf	138,b	;volatile
 34933  00D7C6  0E00               	movlw	0
 34934  00D7C8  6F8B               	movwf	139,b	;volatile
 34935                           
 34936                           ; BSR set to: 13
 34937                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 34938  00D7CA  0E00               	movlw	0
 34939  00D7CC  0101               	movlb	1	; () banked
 34940  00D7CE  6FEB               	movwf	_ptrNextData& (0+255),b
 34941  00D7D0  0E06               	movlw	6
 34942  00D7D2  0101               	movlb	1	; () banked
 34943  00D7D4  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 34944                           
 34945                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 34946  00D7D6  0E03               	movlw	3
 34947  00D7D8  0101               	movlb	1	; () banked
 34948  00D7DA  6FF9               	movwf	_MSDReadState& (0+255),b
 34949  00D7DC                     l18159:
 34950                           
 34951                           ; BSR set to: 1
 34952                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 34953  00D7DC  010D               	movlb	13	; () banked
 34954  00D7DE  5188               	movf	136,w,b	;volatile
 34955  00D7E0  010D               	movlb	13	; () banked
 34956  00D7E2  1189               	iorwf	137,w,b	;volatile
 34957  00D7E4  010D               	movlb	13	; () banked
 34958  00D7E6  118A               	iorwf	138,w,b	;volatile
 34959  00D7E8  010D               	movlb	13	; () banked
 34960  00D7EA  118B               	iorwf	139,w,b	;volatile
 34961  00D7EC  A4D8               	btfss	status,2,c
 34962  00D7EE  D002               	goto	l18163
 34963                           
 34964                           ; BSR set to: 13
 34965                           ;usb_device_msd.c: 1124: {
 34966                           ;usb_device_msd.c: 1125: MSDReadState = 0x01;
 34967  00D7F0  0E01               	movlw	1
 34968  00D7F2  D042               	goto	L29
 34969  00D7F4                     l18163:
 34970                           
 34971                           ;usb_device_msd.c: 1127: }
 34972                           ;usb_device_msd.c: 1129: MSDReadState = 0x04;
 34973  00D7F4  0E04               	movlw	4
 34974  00D7F6  0101               	movlb	1	; () banked
 34975  00D7F8  6FF9               	movwf	_MSDReadState& (0+255),b
 34976  00D7FA                     l18165:
 34977                           
 34978                           ; BSR set to: 1
 34979                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 34980  00D7FA  0100               	movlb	0	; () banked
 34981  00D7FC  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 34982  00D7FE  0100               	movlb	0	; () banked
 34983  00D800  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34984  00D802  B4D8               	btfsc	status,2,c
 34985  00D804  D007               	goto	l18171
 34986                           
 34987                           ; BSR set to: 0
 34988  00D806  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 34989  00D80A  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34990  00D80E  0100               	movlb	0	; () banked
 34991  00D810  BEDF               	btfsc	indf2,7,c
 34992  00D812  D047               	goto	l18191
 34993  00D814                     l18171:
 34994                           
 34995                           ; BSR set to: 0
 34996                           ;usb_device_msd.c: 1139: }
 34997                           ;usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket(2u,1,ptrNextData,64u);
 34998  00D814  0E01               	movlw	1
 34999  00D816  0100               	movlb	0	; () banked
 35000  00D818  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35001  00D81A  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35002  00D81E  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35003  00D822  0E40               	movlw	64
 35004  00D824  0100               	movlb	0	; () banked
 35005  00D826  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35006  00D828  0E02               	movlw	2
 35007  00D82A  EC6B  F077         	call	_USBTransferOnePacket
 35008  00D82E  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35009  00D832  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35010                           
 35011                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 35012  00D836  0E03               	movlw	3
 35013  00D838  0101               	movlb	1	; () banked
 35014  00D83A  6FF9               	movwf	_MSDReadState& (0+255),b
 35015                           
 35016                           ; BSR set to: 1
 35017                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 35018  00D83C  0E40               	movlw	64
 35019  00D83E  0102               	movlb	2	; () banked
 35020  00D840  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 35021  00D842  0E00               	movlw	0
 35022  00D844  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 35023  00D846  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 35024  00D848  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 35025                           
 35026                           ; BSR set to: 2
 35027                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 35028  00D84A  0E40               	movlw	64
 35029  00D84C  010D               	movlb	13	; () banked
 35030  00D84E  5F88               	subwf	136,f,b	;volatile
 35031  00D850  0E00               	movlw	0
 35032  00D852  5B89               	subwfb	137,f,b	;volatile
 35033  00D854  5B8A               	subwfb	138,f,b	;volatile
 35034  00D856  5B8B               	subwfb	139,f,b	;volatile
 35035                           
 35036                           ; BSR set to: 13
 35037                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 35038  00D858  0E40               	movlw	64
 35039  00D85A  0101               	movlb	1	; () banked
 35040  00D85C  27EB               	addwf	_ptrNextData& (0+255),f,b
 35041  00D85E  0E00               	movlw	0
 35042  00D860  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35043                           
 35044                           ;usb_device_msd.c: 1149: break;
 35045  00D862  D01F               	goto	l18191
 35046  00D864                     l18181:
 35047                           
 35048                           ; BSR set to: 1
 35049                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 35050  00D864  0E02               	movlw	2
 35051  00D866  010D               	movlb	13	; () banked
 35052  00D868  6F8C               	movwf	140,b	;volatile
 35053                           
 35054                           ; BSR set to: 13
 35055                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 35056  00D86A  0E01               	movlw	1
 35057  00D86C  0100               	movlb	0	; () banked
 35058  00D86E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35059  00D870  0E02               	movlw	2
 35060  00D872  ECC9  F076         	call	_USBStallEndpoint
 35061  00D876                     l18185:
 35062                           
 35063                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 35064  00D876  0E00               	movlw	0
 35065  00D878                     L29:
 35066  00D878  0101               	movlb	1	; () banked
 35067  00D87A  6FF9               	movwf	_MSDReadState& (0+255),b
 35068                           
 35069                           ; BSR set to: 1
 35070                           ;usb_device_msd.c: 1159: }
 35071                           
 35072                           ;usb_device_msd.c: 1158: break;
 35073  00D87C  D012               	goto	l18191
 35074  00D87E                     l18189:
 35075  00D87E  0101               	movlb	1	; () banked
 35076  00D880  51F9               	movf	_MSDReadState& (0+255),w,b
 35077                           
 35078                           ; Switch size 1, requested type "space"
 35079                           ; Number of cases is 5, Range of values is 0 to 4
 35080                           ; switch strategies available:
 35081                           ; Name         Instructions Cycles
 35082                           ; simple_byte           16     9 (average)
 35083                           ;	Chosen strategy is simple_byte
 35084  00D882  0A00               	xorlw	0	; case 0
 35085  00D884  B4D8               	btfsc	status,2,c
 35086  00D886  D707               	goto	l686
 35087  00D888  0A01               	xorlw	1	; case 1
 35088  00D88A  B4D8               	btfsc	status,2,c
 35089  00D88C  D735               	goto	l18125
 35090  00D88E  0A03               	xorlw	3	; case 2
 35091  00D890  B4D8               	btfsc	status,2,c
 35092  00D892  D73F               	goto	l18133
 35093  00D894  0A01               	xorlw	1	; case 3
 35094  00D896  B4D8               	btfsc	status,2,c
 35095  00D898  D7A1               	goto	l18159
 35096  00D89A  0A07               	xorlw	7	; case 4
 35097  00D89C  B4D8               	btfsc	status,2,c
 35098  00D89E  D7AD               	goto	l18165
 35099  00D8A0  D7E1               	goto	l18181
 35100  00D8A2                     l18191:
 35101                           
 35102                           ;usb_device_msd.c: 1161: return MSDReadState;
 35103  00D8A2  0101               	movlb	1	; () banked
 35104  00D8A4  51F9               	movf	_MSDReadState& (0+255),w,b
 35105  00D8A6  0012               	return	
 35106  00D8A8                     __end_of_MSDReadHandler:
 35107                           	opt stack 0
 35108                           tosu	equ	0xFFF
 35109                           tosh	equ	0xFFE
 35110                           tosl	equ	0xFFD
 35111                           pclath	equ	0xFFA
 35112                           tblptru	equ	0xFF8
 35113                           tblptrh	equ	0xFF7
 35114                           tblptrl	equ	0xFF6
 35115                           tablat	equ	0xFF5
 35116                           prodh	equ	0xFF4
 35117                           prodl	equ	0xFF3
 35118                           intcon	equ	0xFF2
 35119                           intcon2	equ	0xFF1
 35120                           intcon3	equ	0xFF0
 35121                           postinc0	equ	0xFEE
 35122                           wreg	equ	0xFE8
 35123                           indf1	equ	0xFE7
 35124                           postinc1	equ	0xFE6
 35125                           postdec1	equ	0xFE5
 35126                           plusw1	equ	0xFE3
 35127                           fsr1h	equ	0xFE2
 35128                           fsr1l	equ	0xFE1
 35129                           indf2	equ	0xFDF
 35130                           postinc2	equ	0xFDE
 35131                           postdec2	equ	0xFDD
 35132                           plusw2	equ	0xFDB
 35133                           fsr2h	equ	0xFDA
 35134                           fsr2l	equ	0xFD9
 35135                           status	equ	0xFD8
 35136                           
 35137 ;; *************** function _MSDCheckForErrorCases *****************
 35138 ;; Defined at:
 35139 ;;		line 1434 in file "usb_device_msd.c"
 35140 ;; Parameters:    Size  Location     Type
 35141 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 35142 ;; Auto vars:     Size  Location     Type
 35143 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 35144 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 35145 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 35146 ;; Return value:  Size  Location     Type
 35147 ;;                  1    wreg      unsigned char 
 35148 ;; Registers used:
 35149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35150 ;; Tracked objects:
 35151 ;;		On entry : 0/0
 35152 ;;		On exit  : 0/0
 35153 ;;		Unchanged: 0/0
 35154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35155 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35156 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35158 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35159 ;;Total ram usage:        7 bytes
 35160 ;; Hardware stack levels used:    1
 35161 ;; Hardware stack levels required when called:   12
 35162 ;; This function calls:
 35163 ;;		_MSDErrorHandler
 35164 ;; This function is called by:
 35165 ;;		_MSDProcessCommandMediaPresent
 35166 ;;		_MSDReadHandler
 35167 ;;		_MSDWriteHandler
 35168 ;; This function uses a non-reentrant model
 35169 ;;
 35170                           
 35171                           	psect	text149
 35172  00F26E                     __ptext149:
 35173                           	opt stack 0
 35174  00F26E                     _MSDCheckForErrorCases:
 35175                           	opt stack 13
 35176                           
 35177                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;
 35178                           ;usb_device_msd.c: 1437: bool HostMoreDataThanDevice;
 35179                           ;usb_device_msd.c: 1438: bool DeviceNoData;
 35180                           ;usb_device_msd.c: 1441: if(DeviceBytes == 0)
 35181                           
 35182                           ; BSR set to: 1
 35183                           ;incstack = 0
 35184  00F26E  0100               	movlb	0	; () banked
 35185  00F270  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35186  00F272  0100               	movlb	0	; () banked
 35187  00F274  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35188  00F276  0100               	movlb	0	; () banked
 35189  00F278  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35190  00F27A  0100               	movlb	0	; () banked
 35191  00F27C  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35192  00F27E  A4D8               	btfss	status,2,c
 35193  00F280  D002               	goto	l17957
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;usb_device_msd.c: 1442: {
 35197                           ;usb_device_msd.c: 1443: DeviceNoData = 1;
 35198  00F282  0E01               	movlw	1
 35199  00F284  D001               	goto	L30
 35200  00F286                     l17957:
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;usb_device_msd.c: 1445: else
 35204                           ;usb_device_msd.c: 1446: {
 35205                           ;usb_device_msd.c: 1447: DeviceNoData = 0;
 35206  00F286  0E00               	movlw	0
 35207  00F288                     L30:
 35208  00F288  0100               	movlb	0	; () banked
 35209  00F28A  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 35210                           
 35211                           ; BSR set to: 0
 35212                           ;usb_device_msd.c: 1448: }
 35213                           ;usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoData == 1))
 35214                           
 35215                           ; BSR set to: 0
 35216  00F28C  0100               	movlb	0	; () banked
 35217  00F28E  05E5               	decf	_MSDHostNoData& (0+255),w,b
 35218  00F290  A4D8               	btfss	status,2,c
 35219  00F292  D006               	goto	l17967
 35220                           
 35221                           ; BSR set to: 0
 35222  00F294  0100               	movlb	0	; () banked
 35223  00F296  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35224  00F298  A4D8               	btfss	status,2,c
 35225  00F29A  D002               	goto	l17967
 35226                           
 35227                           ; BSR set to: 0
 35228                           ;usb_device_msd.c: 1454: {
 35229                           ;usb_device_msd.c: 1455: return 0x00;
 35230  00F29C  0E00               	movlw	0
 35231                           
 35232                           ; BSR set to: 0
 35233  00F29E  0012               	return	
 35234  00F2A0                     l17967:
 35235                           
 35236                           ; BSR set to: 0
 35237                           ;usb_device_msd.c: 1456: }
 35238                           ;usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == DeviceBytes)
 35239  00F2A0  0100               	movlb	0	; () banked
 35240  00F2A2  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35241  00F2A4  0102               	movlb	2	; () banked
 35242  00F2A6  1949               	xorwf	(_gblCBW+8)& (0+255),w,b
 35243  00F2A8  E122               	bnz	l17983
 35244  00F2AA  0100               	movlb	0	; () banked
 35245  00F2AC  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35246  00F2AE  0102               	movlb	2	; () banked
 35247  00F2B0  194A               	xorwf	(_gblCBW+9)& (0+255),w,b
 35248  00F2B2  E11D               	bnz	l17983
 35249  00F2B4  0100               	movlb	0	; () banked
 35250  00F2B6  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35251  00F2B8  0102               	movlb	2	; () banked
 35252  00F2BA  194B               	xorwf	(_gblCBW+10)& (0+255),w,b
 35253  00F2BC  E118               	bnz	l17983
 35254  00F2BE  0100               	movlb	0	; () banked
 35255  00F2C0  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35256  00F2C2  0102               	movlb	2	; () banked
 35257  00F2C4  194C               	xorwf	(_gblCBW+11)& (0+255),w,b
 35258  00F2C6  A4D8               	btfss	status,2,c
 35259  00F2C8  D012               	goto	l17983
 35260                           
 35261                           ; BSR set to: 2
 35262                           ;usb_device_msd.c: 1460: {
 35263                           ;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 35264  00F2CA  0100               	movlb	0	; () banked
 35265  00F2CC  05E7               	decf	_MSD_State& (0+255),w,b
 35266  00F2CE  A4D8               	btfss	status,2,c
 35267  00F2D0  D007               	goto	l17977
 35268                           
 35269                           ; BSR set to: 0
 35270                           ;usb_device_msd.c: 1463: {
 35271                           ;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 35272  00F2D2  0E2A               	movlw	42
 35273  00F2D4  0100               	movlb	0	; () banked
 35274  00F2D6  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35275  00F2D8  B4D8               	btfsc	status,2,c
 35276  00F2DA  D009               	goto	l17983
 35277                           
 35278                           ; BSR set to: 0
 35279                           ;usb_device_msd.c: 1466: {
 35280                           ;usb_device_msd.c: 1467: return 0x00;
 35281  00F2DC  0E00               	movlw	0
 35282                           
 35283                           ; BSR set to: 0
 35284  00F2DE  0012               	return	
 35285  00F2E0                     l17977:
 35286                           
 35287                           ; BSR set to: 0
 35288                           ;usb_device_msd.c: 1470: else
 35289                           ;usb_device_msd.c: 1471: {
 35290                           ;usb_device_msd.c: 1474: if(MSDCommandState == 0x2a)
 35291  00F2E0  0E2A               	movlw	42
 35292  00F2E2  0100               	movlb	0	; () banked
 35293  00F2E4  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35294  00F2E6  A4D8               	btfss	status,2,c
 35295  00F2E8  D002               	goto	l17983
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;usb_device_msd.c: 1475: {
 35299                           ;usb_device_msd.c: 1476: return 0x00;
 35300  00F2EA  0E00               	movlw	0
 35301                           
 35302                           ; BSR set to: 0
 35303  00F2EC  0012               	return	
 35304  00F2EE                     l17983:
 35305                           
 35306                           ;usb_device_msd.c: 1477: }
 35307                           ;usb_device_msd.c: 1478: }
 35308                           ;usb_device_msd.c: 1479: }
 35309                           ;usb_device_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 35310  00F2EE  0102               	movlb	2	; () banked
 35311  00F2F0  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35312  00F2F2  0100               	movlb	0	; () banked
 35313  00F2F4  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35314  00F2F6  0102               	movlb	2	; () banked
 35315  00F2F8  514A               	movf	(_gblCBW+9)& (0+255),w,b
 35316  00F2FA  0100               	movlb	0	; () banked
 35317  00F2FC  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35318  00F2FE  0102               	movlb	2	; () banked
 35319  00F300  514B               	movf	(_gblCBW+10)& (0+255),w,b
 35320  00F302  0100               	movlb	0	; () banked
 35321  00F304  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35322  00F306  0102               	movlb	2	; () banked
 35323  00F308  514C               	movf	(_gblCBW+11)& (0+255),w,b
 35324  00F30A  0100               	movlb	0	; () banked
 35325  00F30C  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35326  00F30E  B0D8               	btfsc	status,0,c
 35327  00F310  D002               	goto	l17987
 35328                           
 35329                           ; BSR set to: 0
 35330                           ;usb_device_msd.c: 1486: {
 35331                           ;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 35332  00F312  0E01               	movlw	1
 35333  00F314  D001               	goto	L31
 35334  00F316                     l17987:
 35335                           
 35336                           ; BSR set to: 0
 35337                           ;usb_device_msd.c: 1489: else
 35338                           ;usb_device_msd.c: 1490: {
 35339                           ;usb_device_msd.c: 1491: HostMoreDataThanDevice = 0;
 35340  00F316  0E00               	movlw	0
 35341  00F318                     L31:
 35342  00F318  0100               	movlb	0	; () banked
 35343  00F31A  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 35344                           
 35345                           ; BSR set to: 0
 35346                           ;usb_device_msd.c: 1492: }
 35347                           ;usb_device_msd.c: 1495: if(MSD_State == 0x02)
 35348                           
 35349                           ; BSR set to: 0
 35350  00F31C  0E02               	movlw	2
 35351  00F31E  0100               	movlb	0	; () banked
 35352  00F320  19E7               	xorwf	_MSD_State& (0+255),w,b
 35353  00F322  A4D8               	btfss	status,2,c
 35354  00F324  D01E               	goto	l18011
 35355                           
 35356                           ; BSR set to: 0
 35357                           ;usb_device_msd.c: 1496: {
 35358                           ;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (DeviceNoData == 0))
 35359  00F326  0E2A               	movlw	42
 35360  00F328  0100               	movlb	0	; () banked
 35361  00F32A  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35362  00F32C  B4D8               	btfsc	status,2,c
 35363  00F32E  D007               	goto	l17997
 35364                           
 35365                           ; BSR set to: 0
 35366  00F330  0100               	movlb	0	; () banked
 35367  00F332  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35368  00F334  0100               	movlb	0	; () banked
 35369  00F336  A4D8               	btfss	status,2,c
 35370  00F338  D002               	goto	l17997
 35371  00F33A                     l17995:
 35372                           
 35373                           ; BSR set to: 0
 35374                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 35375  00F33A  0E05               	movlw	5
 35376  00F33C  D009               	goto	L33
 35377  00F33E                     l17997:
 35378                           
 35379                           ; BSR set to: 0
 35380                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 35381  00F33E  0100               	movlb	0	; () banked
 35382  00F340  05E5               	decf	_MSDHostNoData& (0+255),w,b
 35383  00F342  B4D8               	btfsc	status,2,c
 35384  00F344  D017               	goto	l18017
 35385                           
 35386                           ; BSR set to: 0
 35387                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 35388                           
 35389                           ; BSR set to: 0
 35390                           
 35391                           ; BSR set to: 0
 35392                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 35393  00F346  0100               	movlb	0	; () banked
 35394  00F348  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35395  00F34A  A4D8               	btfss	status,2,c
 35396  00F34C  D004               	goto	l18005
 35397  00F34E  D007               	goto	l18007
 35398  00F350                     L33:
 35399  00F350  0100               	movlb	0	; () banked
 35400  00F352  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 35401  00F354  D01D               	goto	l18029
 35402  00F356                     l18005:
 35403                           
 35404                           ; BSR set to: 0
 35405                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 35406  00F356  0100               	movlb	0	; () banked
 35407  00F358  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35408  00F35A  A4D8               	btfss	status,2,c
 35409  00F35C  D7EE               	goto	l17995
 35410  00F35E                     l18007:
 35411                           
 35412                           ; BSR set to: 0
 35413                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 35414  00F35E  0E04               	movlw	4
 35415  00F360  D7F7               	goto	L33
 35416  00F362                     l18011:
 35417                           
 35418                           ; BSR set to: 0
 35419                           ;usb_device_msd.c: 1513: else
 35420                           ;usb_device_msd.c: 1514: {
 35421                           ;usb_device_msd.c: 1516: if(MSDCommandState == 0x2a)
 35422  00F362  0E2A               	movlw	42
 35423  00F364  0100               	movlb	0	; () banked
 35424  00F366  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 35425  00F368  B4D8               	btfsc	status,2,c
 35426  00F36A  D010               	goto	l18027
 35427                           
 35428                           ; BSR set to: 0
 35429                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35430                           
 35431                           ; BSR set to: 0
 35432                           
 35433                           ; BSR set to: 0
 35434                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35435  00F36C  0100               	movlb	0	; () banked
 35436  00F36E  05E5               	decf	_MSDHostNoData& (0+255),w,b
 35437  00F370  A4D8               	btfss	status,2,c
 35438  00F372  D002               	goto	l18019
 35439  00F374                     l18017:
 35440                           
 35441                           ; BSR set to: 0
 35442                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35443  00F374  0E01               	movlw	1
 35444  00F376  D7EC               	goto	L33
 35445  00F378                     l18019:
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35449  00F378  0100               	movlb	0	; () banked
 35450  00F37A  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35451  00F37C  B4D8               	btfsc	status,2,c
 35452  00F37E  D004               	goto	l18025
 35453                           
 35454                           ; BSR set to: 0
 35455                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35456                           
 35457                           ; BSR set to: 0
 35458                           
 35459                           ; BSR set to: 0
 35460                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35461  00F380  0100               	movlb	0	; () banked
 35462  00F382  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35463  00F384  A4D8               	btfss	status,2,c
 35464  00F386  D002               	goto	l18027
 35465  00F388                     l18025:
 35466                           
 35467                           ; BSR set to: 0
 35468                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35469  00F388  0E02               	movlw	2
 35470  00F38A  D7E2               	goto	L33
 35471  00F38C                     l18027:
 35472                           
 35473                           ; BSR set to: 0
 35474                           ;usb_device_msd.c: 1528: else
 35475                           ;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35476  00F38C  0E03               	movlw	3
 35477  00F38E  D7E0               	goto	L33
 35478  00F390                     l18029:
 35479                           
 35480                           ; BSR set to: 0
 35481                           ;usb_device_msd.c: 1530: }
 35482                           ;usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35483  00F390  0100               	movlb	0	; () banked
 35484  00F392  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35485  00F394  EC05  F078         	call	_MSDErrorHandler
 35486                           
 35487                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35488  00F398  0100               	movlb	0	; () banked
 35489  00F39A  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35490  00F39C  0012               	return	
 35491  00F39E                     __end_of_MSDCheckForErrorCases:
 35492                           	opt stack 0
 35493                           tosu	equ	0xFFF
 35494                           tosh	equ	0xFFE
 35495                           tosl	equ	0xFFD
 35496                           pclath	equ	0xFFA
 35497                           tblptru	equ	0xFF8
 35498                           tblptrh	equ	0xFF7
 35499                           tblptrl	equ	0xFF6
 35500                           tablat	equ	0xFF5
 35501                           prodh	equ	0xFF4
 35502                           prodl	equ	0xFF3
 35503                           intcon	equ	0xFF2
 35504                           intcon2	equ	0xFF1
 35505                           intcon3	equ	0xFF0
 35506                           postinc0	equ	0xFEE
 35507                           wreg	equ	0xFE8
 35508                           indf1	equ	0xFE7
 35509                           postinc1	equ	0xFE6
 35510                           postdec1	equ	0xFE5
 35511                           plusw1	equ	0xFE3
 35512                           fsr1h	equ	0xFE2
 35513                           fsr1l	equ	0xFE1
 35514                           indf2	equ	0xFDF
 35515                           postinc2	equ	0xFDE
 35516                           postdec2	equ	0xFDD
 35517                           plusw2	equ	0xFDB
 35518                           fsr2h	equ	0xFDA
 35519                           fsr2l	equ	0xFD9
 35520                           status	equ	0xFD8
 35521                           
 35522 ;; *************** function _MSDErrorHandler *****************
 35523 ;; Defined at:
 35524 ;;		line 1577 in file "usb_device_msd.c"
 35525 ;; Parameters:    Size  Location     Type
 35526 ;;  ErrorCase       1    wreg     unsigned char 
 35527 ;; Auto vars:     Size  Location     Type
 35528 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35529 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35530 ;; Return value:  Size  Location     Type
 35531 ;;                  1    wreg      void 
 35532 ;; Registers used:
 35533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35534 ;; Tracked objects:
 35535 ;;		On entry : 0/0
 35536 ;;		On exit  : 0/0
 35537 ;;		Unchanged: 0/0
 35538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35540 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35542 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35543 ;;Total ram usage:        2 bytes
 35544 ;; Hardware stack levels used:    1
 35545 ;; Hardware stack levels required when called:   11
 35546 ;; This function calls:
 35547 ;;		_ResetSenseData
 35548 ;;		_USBStallEndpoint
 35549 ;; This function is called by:
 35550 ;;		_MSDProcessCommandMediaAbsent
 35551 ;;		_MSDProcessCommandMediaPresent
 35552 ;;		_MSDCheckForErrorCases
 35553 ;; This function uses a non-reentrant model
 35554 ;;
 35555                           
 35556                           	psect	text150
 35557  00F00A                     __ptext150:
 35558                           	opt stack 0
 35559  00F00A                     _MSDErrorHandler:
 35560                           	opt stack 13
 35561                           
 35562                           ; BSR set to: 0
 35563                           ;incstack = 0
 35564                           ;MSDErrorHandler@ErrorCase stored from wreg
 35565  00F00A  0100               	movlb	0	; () banked
 35566  00F00C  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35567                           
 35568                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;
 35569                           ;usb_device_msd.c: 1583: if((((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          InHandle & 0x80) != 0x00))) || (((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)US
      +                          BMSDOutHandle & 0x80) != 0x00))))
 35570  00F00E  0100               	movlb	0	; () banked
 35571  00F010  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 35572  00F012  0100               	movlb	0	; () banked
 35573  00F014  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35574  00F016  B4D8               	btfsc	status,2,c
 35575  00F018  D007               	goto	l17873
 35576                           
 35577                           ; BSR set to: 0
 35578  00F01A  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 35579  00F01E  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35580  00F022  0100               	movlb	0	; () banked
 35581  00F024  BEDF               	btfsc	indf2,7,c
 35582  00F026  0012               	return	
 35583  00F028                     l17873:
 35584                           
 35585                           ; BSR set to: 0
 35586  00F028  0100               	movlb	0	; () banked
 35587  00F02A  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 35588  00F02C  0100               	movlb	0	; () banked
 35589  00F02E  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35590  00F030  B4D8               	btfsc	status,2,c
 35591  00F032  D007               	goto	l761
 35592                           
 35593                           ; BSR set to: 0
 35594  00F034  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35595  00F038  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35596  00F03C  0100               	movlb	0	; () banked
 35597  00F03E  BEDF               	btfsc	indf2,7,c
 35598  00F040  0012               	return	
 35599  00F042                     l761:
 35600                           
 35601                           ; BSR set to: 0
 35602                           ;usb_device_msd.c: 1586: }
 35603                           ;usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 35604  00F042  C0E7  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 35605                           
 35606                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 35607  00F046  0100               	movlb	0	; () banked
 35608  00F048  69E6               	setf	_MSDCommandState& (0+255),b
 35609                           
 35610                           ; BSR set to: 0
 35611                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 35612  00F04A  0E00               	movlw	0
 35613  00F04C  0101               	movlb	1	; () banked
 35614  00F04E  6FF9               	movwf	_MSDReadState& (0+255),b
 35615                           
 35616                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 35617  00F050  0E00               	movlw	0
 35618  00F052  6E1F               	movwf	_MSDWriteState,c
 35619                           
 35620                           ; BSR set to: 1
 35621                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 35622  00F054  C249  FD88         	movff	_gblCBW+8,3464	;volatile
 35623  00F058  C24A  FD89         	movff	_gblCBW+9,3465	;volatile
 35624  00F05C  C24B  FD8A         	movff	_gblCBW+10,3466	;volatile
 35625  00F060  C24C  FD8B         	movff	_gblCBW+11,3467	;volatile
 35626                           
 35627                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 35628  00F064  0E01               	movlw	1
 35629  00F066  010D               	movlb	13	; () banked
 35630  00F068  6F8C               	movwf	140,b	;volatile
 35631                           
 35632                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 35633  00F06A  0E03               	movlw	3
 35634  00F06C  0100               	movlb	0	; () banked
 35635  00F06E  6FE7               	movwf	_MSD_State& (0+255),b
 35636                           
 35637                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 35638  00F070  D050               	goto	l17913
 35639  00F072                     l17881:
 35640                           
 35641                           ; BSR set to: 0
 35642                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 35643  00F072  0E02               	movlw	2
 35644  00F074  010D               	movlb	13	; () banked
 35645  00F076  6F8C               	movwf	140,b	;volatile
 35646                           
 35647                           ;usb_device_msd.c: 1607: break;
 35648  00F078  0012               	return	
 35649  00F07A                     l17883:
 35650                           
 35651                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 35652  00F07A  0E01               	movlw	1
 35653  00F07C  0100               	movlb	0	; () banked
 35654  00F07E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35655  00F080  0E02               	movlw	2
 35656  00F082  ECC9  F076         	call	_USBStallEndpoint
 35657                           
 35658                           ;usb_device_msd.c: 1611: break;
 35659  00F086  0012               	return	
 35660  00F088                     l17885:
 35661                           
 35662                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 35663  00F088  0E02               	movlw	2
 35664  00F08A  010D               	movlb	13	; () banked
 35665  00F08C  6F8C               	movwf	140,b	;volatile
 35666                           
 35667                           ; BSR set to: 13
 35668                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 35669  00F08E  0E01               	movlw	1
 35670  00F090  0100               	movlb	0	; () banked
 35671  00F092  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35672  00F094  0E02               	movlw	2
 35673  00F096  ECC9  F076         	call	_USBStallEndpoint
 35674                           
 35675                           ;usb_device_msd.c: 1616: break;
 35676  00F09A  0012               	return	
 35677  00F09C                     l17889:
 35678                           
 35679                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 35680  00F09C  0E00               	movlw	0
 35681  00F09E  0100               	movlb	0	; () banked
 35682  00F0A0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35683  00F0A2  0E02               	movlw	2
 35684  00F0A4  ECC9  F076         	call	_USBStallEndpoint
 35685                           
 35686                           ;usb_device_msd.c: 1620: break;
 35687  00F0A8  0012               	return	
 35688  00F0AA                     l17891:
 35689                           
 35690                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 35691  00F0AA  0E02               	movlw	2
 35692  00F0AC  010D               	movlb	13	; () banked
 35693  00F0AE  6F8C               	movwf	140,b	;volatile
 35694                           
 35695                           ; BSR set to: 13
 35696                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 35697  00F0B0  0E00               	movlw	0
 35698  00F0B2  0100               	movlb	0	; () banked
 35699  00F0B4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35700  00F0B6  0E02               	movlw	2
 35701  00F0B8  ECC9  F076         	call	_USBStallEndpoint
 35702                           
 35703                           ;usb_device_msd.c: 1625: break;
 35704  00F0BC  0012               	return	
 35705  00F0BE                     l17895:
 35706                           
 35707                           ;usb_device_msd.c: 1628: ResetSenseData();
 35708  00F0BE  ECC7  F08F         	call	_ResetSenseData	;wreg free
 35709                           
 35710                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 35711  00F0C2  0102               	movlb	2	; () banked
 35712  00F0C4  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 35713  00F0C6  0BF0               	andlw	-16
 35714  00F0C8  0905               	iorlw	5
 35715  00F0CA  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 35716                           
 35717                           ; BSR set to: 2
 35718                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 35719  00F0CC  0E20               	movlw	32
 35720  00F0CE  0102               	movlb	2	; () banked
 35721  00F0D0  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 35722                           
 35723                           ; BSR set to: 2
 35724                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 35725  00F0D2  0E00               	movlw	0
 35726  00F0D4  0102               	movlb	2	; () banked
 35727  00F0D6  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 35728                           
 35729                           ; BSR set to: 2
 35730                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 35731  00F0D8  0E02               	movlw	2
 35732  00F0DA  0100               	movlb	0	; () banked
 35733  00F0DC  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 35734  00F0DE  A4D8               	btfss	status,2,c
 35735  00F0E0  D011               	goto	l17909
 35736                           
 35737                           ; BSR set to: 0
 35738  00F0E2  0102               	movlb	2	; () banked
 35739  00F0E4  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35740  00F0E6  0102               	movlb	2	; () banked
 35741  00F0E8  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 35742  00F0EA  0102               	movlb	2	; () banked
 35743  00F0EC  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 35744  00F0EE  0102               	movlb	2	; () banked
 35745  00F0F0  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 35746  00F0F2  B4D8               	btfsc	status,2,c
 35747  00F0F4  D007               	goto	l17909
 35748                           
 35749                           ; BSR set to: 2
 35750                           ;usb_device_msd.c: 1634: {
 35751                           ;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 35752  00F0F6  0E00               	movlw	0
 35753  00F0F8  0100               	movlb	0	; () banked
 35754  00F0FA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35755  00F0FC  0E02               	movlw	2
 35756  00F0FE  ECC9  F076         	call	_USBStallEndpoint
 35757                           
 35758                           ;usb_device_msd.c: 1636: }
 35759  00F102  0012               	return	
 35760  00F104                     l17909:
 35761                           
 35762                           ;usb_device_msd.c: 1637: else
 35763                           ;usb_device_msd.c: 1638: {
 35764                           ;usb_device_msd.c: 1639: USBStallEndpoint(2u, 1);
 35765  00F104  0E01               	movlw	1
 35766  00F106  0100               	movlb	0	; () banked
 35767  00F108  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35768  00F10A  0E02               	movlw	2
 35769  00F10C  ECC9  F076         	call	_USBStallEndpoint
 35770                           
 35771                           ;usb_device_msd.c: 1644: }
 35772                           
 35773                           ;usb_device_msd.c: 1643: break;
 35774                           
 35775                           ;usb_device_msd.c: 1642: default:
 35776                           
 35777                           ;usb_device_msd.c: 1640: }
 35778                           ;usb_device_msd.c: 1641: break;
 35779  00F110  0012               	return	
 35780  00F112                     l17913:
 35781  00F112  0100               	movlb	0	; () banked
 35782  00F114  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 35783                           
 35784                           ; Switch size 1, requested type "space"
 35785                           ; Number of cases is 6, Range of values is 1 to 127
 35786                           ; switch strategies available:
 35787                           ; Name         Instructions Cycles
 35788                           ; simple_byte           19    10 (average)
 35789                           ;	Chosen strategy is simple_byte
 35790  00F116  0A01               	xorlw	1	; case 1
 35791  00F118  B4D8               	btfsc	status,2,c
 35792  00F11A  D7AB               	goto	l17881
 35793  00F11C  0A03               	xorlw	3	; case 2
 35794  00F11E  B4D8               	btfsc	status,2,c
 35795  00F120  D7AC               	goto	l17883
 35796  00F122  0A01               	xorlw	1	; case 3
 35797  00F124  B4D8               	btfsc	status,2,c
 35798  00F126  D7B0               	goto	l17885
 35799  00F128  0A07               	xorlw	7	; case 4
 35800  00F12A  B4D8               	btfsc	status,2,c
 35801  00F12C  D7B7               	goto	l17889
 35802  00F12E  0A01               	xorlw	1	; case 5
 35803  00F130  B4D8               	btfsc	status,2,c
 35804  00F132  D7BB               	goto	l17891
 35805  00F134  0A7A               	xorlw	122	; case 127
 35806  00F136  A4D8               	btfss	status,2,c
 35807  00F138  0012               	return	
 35808  00F13A  D7C1               	goto	l17895
 35809  00F13C                     __end_of_MSDErrorHandler:
 35810                           	opt stack 0
 35811                           tosu	equ	0xFFF
 35812                           tosh	equ	0xFFE
 35813                           tosl	equ	0xFFD
 35814                           pclath	equ	0xFFA
 35815                           tblptru	equ	0xFF8
 35816                           tblptrh	equ	0xFF7
 35817                           tblptrl	equ	0xFF6
 35818                           tablat	equ	0xFF5
 35819                           prodh	equ	0xFF4
 35820                           prodl	equ	0xFF3
 35821                           intcon	equ	0xFF2
 35822                           intcon2	equ	0xFF1
 35823                           intcon3	equ	0xFF0
 35824                           postinc0	equ	0xFEE
 35825                           wreg	equ	0xFE8
 35826                           indf1	equ	0xFE7
 35827                           postinc1	equ	0xFE6
 35828                           postdec1	equ	0xFE5
 35829                           plusw1	equ	0xFE3
 35830                           fsr1h	equ	0xFE2
 35831                           fsr1l	equ	0xFE1
 35832                           indf2	equ	0xFDF
 35833                           postinc2	equ	0xFDE
 35834                           postdec2	equ	0xFDD
 35835                           plusw2	equ	0xFDB
 35836                           fsr2h	equ	0xFDA
 35837                           fsr2l	equ	0xFD9
 35838                           status	equ	0xFD8
 35839                           
 35840 ;; *************** function _USBStallEndpoint *****************
 35841 ;; Defined at:
 35842 ;;		line 1073 in file "usb_device.c"
 35843 ;; Parameters:    Size  Location     Type
 35844 ;;  ep              1    wreg     unsigned char 
 35845 ;;  dir             1    0[BANK0 ] unsigned char 
 35846 ;; Auto vars:     Size  Location     Type
 35847 ;;  ep              1    5[BANK0 ] unsigned char 
 35848 ;;  p               2    6[BANK0 ] PTR struct __BDT
 35849 ;;		 -> BDT(48), 
 35850 ;; Return value:  Size  Location     Type
 35851 ;;                  1    wreg      void 
 35852 ;; Registers used:
 35853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35854 ;; Tracked objects:
 35855 ;;		On entry : 0/0
 35856 ;;		On exit  : 0/0
 35857 ;;		Unchanged: 0/0
 35858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35859 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35860 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35862 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35863 ;;Total ram usage:        8 bytes
 35864 ;; Hardware stack levels used:    1
 35865 ;; Hardware stack levels required when called:   10
 35866 ;; This function calls:
 35867 ;;		Nothing
 35868 ;; This function is called by:
 35869 ;;		_MSDTasks
 35870 ;;		_MSDReadHandler
 35871 ;;		_MSDWriteHandler
 35872 ;;		_MSDErrorHandler
 35873 ;; This function uses a non-reentrant model
 35874 ;;
 35875                           
 35876                           	psect	text151
 35877  00ED92                     __ptext151:
 35878                           	opt stack 0
 35879  00ED92                     _USBStallEndpoint:
 35880                           	opt stack 18
 35881                           
 35882                           ;incstack = 0
 35883                           ;USBStallEndpoint@ep stored from wreg
 35884  00ED92  0100               	movlb	0	; () banked
 35885  00ED94  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 35886                           
 35887                           ;usb_device.c: 1075: BDT_ENTRY *p;
 35888                           ;usb_device.c: 1077: if(ep == 0)
 35889  00ED96  0100               	movlb	0	; () banked
 35890  00ED98  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35891  00ED9A  0100               	movlb	0	; () banked
 35892  00ED9C  A4D8               	btfss	status,2,c
 35893  00ED9E  D02B               	goto	l17717
 35894                           
 35895                           ; BSR set to: 0
 35896                           ;usb_device.c: 1078: {
 35897                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 35898  00EDA0  EE20 F001          	lfsr	2,1
 35899  00EDA4  5018               	movf	_pBDTEntryEP0OutNext,w,c
 35900  00EDA6  26D9               	addwf	fsr2l,f,c
 35901  00EDA8  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 35902  00EDAA  22DA               	addwfc	fsr2h,f,c
 35903  00EDAC  0E08               	movlw	8
 35904  00EDAE  6EDF               	movwf	indf2,c
 35905                           
 35906                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35907  00EDB0  EE20 F002          	lfsr	2,2
 35908  00EDB4  5018               	movf	_pBDTEntryEP0OutNext,w,c
 35909  00EDB6  26D9               	addwf	fsr2l,f,c
 35910  00EDB8  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 35911  00EDBA  22DA               	addwfc	fsr2h,f,c
 35912  00EDBC  0E30               	movlw	48
 35913  00EDBE  6EDE               	movwf	postinc2,c
 35914  00EDC0  0E0D               	movlw	13
 35915  00EDC2  6EDD               	movwf	postdec2,c
 35916                           
 35917                           ; BSR set to: 0
 35918                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 35919  00EDC4  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35920  00EDC8  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35921  00EDCC  0E0C               	movlw	12
 35922  00EDCE  6EDF               	movwf	indf2,c
 35923                           
 35924                           ; BSR set to: 0
 35925                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35926  00EDD0  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35927  00EDD4  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35928  00EDD8  0E00               	movlw	0
 35929  00EDDA  8EDB               	bsf	plusw2,7,c
 35930                           
 35931                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 35932  00EDDC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35933  00EDE0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35934  00EDE4  0E04               	movlw	4
 35935  00EDE6  6EDF               	movwf	indf2,c
 35936                           
 35937                           ; BSR set to: 0
 35938                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35939  00EDE8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35940  00EDEC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35941  00EDF0  0E00               	movlw	0
 35942  00EDF2  8EDB               	bsf	plusw2,7,c
 35943                           
 35944                           ;usb_device.c: 1089: }
 35945  00EDF4  0012               	return	
 35946  00EDF6                     l17717:
 35947                           
 35948                           ; BSR set to: 0
 35949                           ;usb_device.c: 1090: else
 35950                           ;usb_device.c: 1091: {
 35951                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 35952  00EDF6  0100               	movlb	0	; () banked
 35953  00EDF8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35954  00EDFA  0100               	movlb	0	; () banked
 35955  00EDFC  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 35956  00EDFE  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 35957  00EE00  90D8               	bcf	status,0,c
 35958  00EE02  0100               	movlb	0	; () banked
 35959  00EE04  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35960  00EE06  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35961  00EE08  0100               	movlb	0	; () banked
 35962  00EE0A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35963  00EE0C  0100               	movlb	0	; () banked
 35964  00EE0E  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 35965  00EE10  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 35966  00EE12  0100               	movlb	0	; () banked
 35967  00EE14  90D8               	bcf	status,0,c
 35968  00EE16  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35969  00EE18  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35970  00EE1A  0100               	movlb	0	; () banked
 35971  00EE1C  90D8               	bcf	status,0,c
 35972  00EE1E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35973  00EE20  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35974  00EE22  0100               	movlb	0	; () banked
 35975  00EE24  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 35976  00EE26  0100               	movlb	0	; () banked
 35977  00EE28  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 35978  00EE2A  0100               	movlb	0	; () banked
 35979  00EE2C  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 35980  00EE2E  0100               	movlb	0	; () banked
 35981  00EE30  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 35982  00EE32  0100               	movlb	0	; () banked
 35983  00EE34  90D8               	bcf	status,0,c
 35984  00EE36  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35985  00EE38  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35986  00EE3A  0100               	movlb	0	; () banked
 35987  00EE3C  90D8               	bcf	status,0,c
 35988  00EE3E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35989  00EE40  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35990  00EE42  0E00               	movlw	0
 35991  00EE44  0100               	movlb	0	; () banked
 35992  00EE46  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 35993  00EE48  0100               	movlb	0	; () banked
 35994  00EE4A  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35995  00EE4C  0E0D               	movlw	13
 35996  00EE4E  0100               	movlb	0	; () banked
 35997  00EE50  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 35998  00EE52  0100               	movlb	0	; () banked
 35999  00EE54  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36000                           
 36001                           ; BSR set to: 0
 36002                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 36003  00EE56  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36004  00EE5A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36005  00EE5E  0E00               	movlw	0
 36006  00EE60  84DB               	bsf	plusw2,2,c
 36007                           
 36008                           ; BSR set to: 0
 36009                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 36010  00EE62  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36011  00EE66  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36012  00EE6A  0E00               	movlw	0
 36013  00EE6C  8EDB               	bsf	plusw2,7,c
 36014                           
 36015                           ; BSR set to: 0
 36016                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 36017  00EE6E  0100               	movlb	0	; () banked
 36018  00EE70  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36019  00EE72  0D04               	mullw	4
 36020  00EE74  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 36021  00EE78  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 36022  00EE7C  0100               	movlb	0	; () banked
 36023  00EE7E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36024  00EE80  0D02               	mullw	2
 36025  00EE82  50F3               	movf	prodl,w,c
 36026  00EE84  0100               	movlb	0	; () banked
 36027  00EE86  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36028  00EE88  50F4               	movf	prodh,w,c
 36029  00EE8A  0100               	movlb	0	; () banked
 36030  00EE8C  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36031  00EE8E  0100               	movlb	0	; () banked
 36032  00EE90  90D8               	bcf	status,0,c
 36033  00EE92  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36034  00EE94  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36035  00EE96  0100               	movlb	0	; () banked
 36036  00EE98  90D8               	bcf	status,0,c
 36037  00EE9A  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36038  00EE9C  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36039  00EE9E  0E04               	movlw	4
 36040  00EEA0  0100               	movlb	0	; () banked
 36041  00EEA2  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36042  00EEA4  0E00               	movlw	0
 36043  00EEA6  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36044  00EEA8  0E00               	movlw	0
 36045  00EEAA  0100               	movlb	0	; () banked
 36046  00EEAC  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 36047  00EEAE  0100               	movlb	0	; () banked
 36048  00EEB0  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36049  00EEB2  0E0D               	movlw	13
 36050  00EEB4  0100               	movlb	0	; () banked
 36051  00EEB6  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 36052  00EEB8  0100               	movlb	0	; () banked
 36053  00EEBA  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36054                           
 36055                           ; BSR set to: 0
 36056                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 36057  00EEBC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36058  00EEC0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36059  00EEC4  0E00               	movlw	0
 36060  00EEC6  84DB               	bsf	plusw2,2,c
 36061                           
 36062                           ; BSR set to: 0
 36063                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 36064  00EEC8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36065  00EECC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36066  00EED0  0E00               	movlw	0
 36067  00EED2  8EDB               	bsf	plusw2,7,c
 36068  00EED4  0012               	return	
 36069  00EED6                     __end_of_USBStallEndpoint:
 36070                           	opt stack 0
 36071                           tosu	equ	0xFFF
 36072                           tosh	equ	0xFFE
 36073                           tosl	equ	0xFFD
 36074                           pclath	equ	0xFFA
 36075                           tblptru	equ	0xFF8
 36076                           tblptrh	equ	0xFF7
 36077                           tblptrl	equ	0xFF6
 36078                           tablat	equ	0xFF5
 36079                           prodh	equ	0xFF4
 36080                           prodl	equ	0xFF3
 36081                           intcon	equ	0xFF2
 36082                           intcon2	equ	0xFF1
 36083                           intcon3	equ	0xFF0
 36084                           postinc0	equ	0xFEE
 36085                           wreg	equ	0xFE8
 36086                           indf1	equ	0xFE7
 36087                           postinc1	equ	0xFE6
 36088                           postdec1	equ	0xFE5
 36089                           plusw1	equ	0xFE3
 36090                           fsr1h	equ	0xFE2
 36091                           fsr1l	equ	0xFE1
 36092                           indf2	equ	0xFDF
 36093                           postinc2	equ	0xFDE
 36094                           postdec2	equ	0xFDD
 36095                           plusw2	equ	0xFDB
 36096                           fsr2h	equ	0xFDA
 36097                           fsr2l	equ	0xFD9
 36098                           status	equ	0xFD8
 36099                           
 36100 ;; *************** function _ResetSenseData *****************
 36101 ;; Defined at:
 36102 ;;		line 1373 in file "usb_device_msd.c"
 36103 ;; Parameters:    Size  Location     Type
 36104 ;;		None
 36105 ;; Auto vars:     Size  Location     Type
 36106 ;;		None
 36107 ;; Return value:  Size  Location     Type
 36108 ;;                  1    wreg      void 
 36109 ;; Registers used:
 36110 ;;		wreg, status,2
 36111 ;; Tracked objects:
 36112 ;;		On entry : 0/0
 36113 ;;		On exit  : 0/0
 36114 ;;		Unchanged: 0/0
 36115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36120 ;;Total ram usage:        0 bytes
 36121 ;; Hardware stack levels used:    1
 36122 ;; Hardware stack levels required when called:   10
 36123 ;; This function calls:
 36124 ;;		Nothing
 36125 ;; This function is called by:
 36126 ;;		_MSDProcessCommandMediaAbsent
 36127 ;;		_MSDProcessCommandMediaPresent
 36128 ;;		_MSDErrorHandler
 36129 ;; This function uses a non-reentrant model
 36130 ;;
 36131                           
 36132                           	psect	text152
 36133  011F8E                     __ptext152:
 36134                           	opt stack 0
 36135  011F8E                     _ResetSenseData:
 36136                           	opt stack 16
 36137                           
 36138                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 36139                           
 36140                           ; BSR set to: 0
 36141                           ;incstack = 0
 36142  011F8E  0102               	movlb	2	; () banked
 36143  011F90  9160               	bcf	_gblSenseData& (0+255),0,b
 36144  011F92  9360               	bcf	_gblSenseData& (0+255),1,b
 36145  011F94  9560               	bcf	_gblSenseData& (0+255),2,b
 36146  011F96  9760               	bcf	_gblSenseData& (0+255),3,b
 36147  011F98  8960               	bsf	_gblSenseData& (0+255),4,b
 36148  011F9A  8B60               	bsf	_gblSenseData& (0+255),5,b
 36149  011F9C  8D60               	bsf	_gblSenseData& (0+255),6,b
 36150                           
 36151                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 36152  011F9E  0102               	movlb	2	; () banked
 36153  011FA0  9F60               	bcf	_gblSenseData& (0+255),7,b
 36154                           
 36155                           ; BSR set to: 2
 36156                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 36157  011FA2  0E00               	movlw	0
 36158  011FA4  0102               	movlb	2	; () banked
 36159  011FA6  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 36160                           
 36161                           ; BSR set to: 2
 36162                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 36163  011FA8  0102               	movlb	2	; () banked
 36164  011FAA  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 36165  011FAC  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 36166  011FAE  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 36167  011FB0  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 36168                           
 36169                           ; BSR set to: 2
 36170                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 36171  011FB2  0102               	movlb	2	; () banked
 36172  011FB4  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 36173                           
 36174                           ; BSR set to: 2
 36175                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 36176  011FB6  0102               	movlb	2	; () banked
 36177  011FB8  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 36178                           
 36179                           ; BSR set to: 2
 36180                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 36181  011FBA  0102               	movlb	2	; () banked
 36182  011FBC  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 36183                           
 36184                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 36185  011FBE  0E00               	movlw	0
 36186  011FC0  0102               	movlb	2	; () banked
 36187  011FC2  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 36188                           
 36189                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 36190  011FC4  0E00               	movlw	0
 36191  011FC6  0102               	movlb	2	; () banked
 36192  011FC8  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 36193                           
 36194                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 36195  011FCA  0E00               	movlw	0
 36196  011FCC  0102               	movlb	2	; () banked
 36197  011FCE  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 36198                           
 36199                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 36200  011FD0  0E00               	movlw	0
 36201  011FD2  0102               	movlb	2	; () banked
 36202  011FD4  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 36203                           
 36204                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 36205  011FD6  0E0A               	movlw	10
 36206  011FD8  0102               	movlb	2	; () banked
 36207  011FDA  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 36208                           
 36209                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 36210  011FDC  0E00               	movlw	0
 36211  011FDE  0102               	movlb	2	; () banked
 36212  011FE0  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 36213  011FE2  0E00               	movlw	0
 36214  011FE4  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 36215  011FE6  0E00               	movlw	0
 36216  011FE8  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 36217  011FEA  0E00               	movlw	0
 36218  011FEC  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 36219                           
 36220                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 36221  011FEE  0E00               	movlw	0
 36222  011FF0  0102               	movlb	2	; () banked
 36223  011FF2  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 36224                           
 36225                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 36226  011FF4  0E00               	movlw	0
 36227  011FF6  0102               	movlb	2	; () banked
 36228  011FF8  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 36229                           
 36230                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 36231  011FFA  0E00               	movlw	0
 36232  011FFC  0102               	movlb	2	; () banked
 36233  011FFE  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 36234                           
 36235                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 36236  012000  0E00               	movlw	0
 36237  012002  0102               	movlb	2	; () banked
 36238  012004  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 36239                           
 36240                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 36241  012006  0E00               	movlw	0
 36242  012008  0102               	movlb	2	; () banked
 36243  01200A  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 36244                           
 36245                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 36246  01200C  0E00               	movlw	0
 36247  01200E  0102               	movlb	2	; () banked
 36248  012010  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 36249                           
 36250                           ; BSR set to: 2
 36251  012012  0012               	return		;funcret
 36252  012014                     __end_of_ResetSenseData:
 36253                           	opt stack 0
 36254                           tosu	equ	0xFFF
 36255                           tosh	equ	0xFFE
 36256                           tosl	equ	0xFFD
 36257                           pclath	equ	0xFFA
 36258                           tblptru	equ	0xFF8
 36259                           tblptrh	equ	0xFF7
 36260                           tblptrl	equ	0xFF6
 36261                           tablat	equ	0xFF5
 36262                           prodh	equ	0xFF4
 36263                           prodl	equ	0xFF3
 36264                           intcon	equ	0xFF2
 36265                           intcon2	equ	0xFF1
 36266                           intcon3	equ	0xFF0
 36267                           postinc0	equ	0xFEE
 36268                           wreg	equ	0xFE8
 36269                           indf1	equ	0xFE7
 36270                           postinc1	equ	0xFE6
 36271                           postdec1	equ	0xFE5
 36272                           plusw1	equ	0xFE3
 36273                           fsr1h	equ	0xFE2
 36274                           fsr1l	equ	0xFE1
 36275                           indf2	equ	0xFDF
 36276                           postinc2	equ	0xFDE
 36277                           postdec2	equ	0xFDD
 36278                           plusw2	equ	0xFDB
 36279                           fsr2h	equ	0xFDA
 36280                           fsr2l	equ	0xFD9
 36281                           status	equ	0xFD8
 36282                           
 36283 ;; *************** function _ExternalFlash_SectorRead *****************
 36284 ;; Defined at:
 36285 ;;		line 64 in file "external_flash.c"
 36286 ;; Parameters:    Size  Location     Type
 36287 ;;  config          2   43[BANK0 ] PTR void 
 36288 ;;		 -> NULL(0), 
 36289 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 36290 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 36291 ;;		 -> msd_buffer(512), 
 36292 ;; Auto vars:     Size  Location     Type
 36293 ;;  page            2   51[BANK0 ] unsigned int 
 36294 ;; Return value:  Size  Location     Type
 36295 ;;                  1    wreg      unsigned char 
 36296 ;; Registers used:
 36297 ;;		wreg, status,2, status,0, cstack
 36298 ;; Tracked objects:
 36299 ;;		On entry : 0/0
 36300 ;;		On exit  : 0/0
 36301 ;;		Unchanged: 0/0
 36302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36303 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36306 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36307 ;;Total ram usage:       10 bytes
 36308 ;; Hardware stack levels used:    1
 36309 ;; Hardware stack levels required when called:   15
 36310 ;; This function calls:
 36311 ;;		_flash_page_read
 36312 ;; This function is called by:
 36313 ;;		_MSDReadHandler
 36314 ;; This function uses a non-reentrant model
 36315 ;;
 36316                           
 36317                           	psect	text153
 36318  013880                     __ptext153:
 36319                           	opt stack 0
 36320  013880                     _ExternalFlash_SectorRead:
 36321                           	opt stack 10
 36322                           
 36323                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 36324                           
 36325                           ; BSR set to: 2
 36326                           ;incstack = 0
 36327  013880  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 36328  013884  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 36329                           
 36330                           ;external_flash.c: 70: if(sector_addr >= 4096)
 36331  013888  0100               	movlb	0	; () banked
 36332  01388A  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 36333  01388C  0100               	movlb	0	; () banked
 36334  01388E  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 36335  013890  E105               	bnz	u16820
 36336  013892  0E10               	movlw	16
 36337  013894  0100               	movlb	0	; () banked
 36338  013896  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 36339  013898  A0D8               	btfss	status,0,c
 36340  01389A  D002               	goto	l18057
 36341  01389C                     u16820:
 36342                           
 36343                           ; BSR set to: 0
 36344                           ;external_flash.c: 71: {
 36345                           ;external_flash.c: 72: return 0;
 36346  01389C  0E00               	movlw	0
 36347                           
 36348                           ; BSR set to: 0
 36349  01389E  0012               	return	
 36350  0138A0                     l18057:
 36351                           
 36352                           ; BSR set to: 0
 36353                           ;external_flash.c: 73: }
 36354                           ;external_flash.c: 76: flash_page_read(page, buffer);
 36355  0138A0  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 36356  0138A4  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 36357  0138A8  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 36358  0138AC  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 36359  0138B0  ECFA  F09E         	call	_flash_page_read	;wreg free
 36360                           
 36361                           ;external_flash.c: 78: return 1;
 36362  0138B4  0E01               	movlw	1
 36363  0138B6  0012               	return	
 36364  0138B8                     __end_of_ExternalFlash_SectorRead:
 36365                           	opt stack 0
 36366                           tosu	equ	0xFFF
 36367                           tosh	equ	0xFFE
 36368                           tosl	equ	0xFFD
 36369                           pclath	equ	0xFFA
 36370                           tblptru	equ	0xFF8
 36371                           tblptrh	equ	0xFF7
 36372                           tblptrl	equ	0xFF6
 36373                           tablat	equ	0xFF5
 36374                           prodh	equ	0xFF4
 36375                           prodl	equ	0xFF3
 36376                           intcon	equ	0xFF2
 36377                           intcon2	equ	0xFF1
 36378                           intcon3	equ	0xFF0
 36379                           postinc0	equ	0xFEE
 36380                           wreg	equ	0xFE8
 36381                           indf1	equ	0xFE7
 36382                           postinc1	equ	0xFE6
 36383                           postdec1	equ	0xFE5
 36384                           plusw1	equ	0xFE3
 36385                           fsr1h	equ	0xFE2
 36386                           fsr1l	equ	0xFE1
 36387                           indf2	equ	0xFDF
 36388                           postinc2	equ	0xFDE
 36389                           postdec2	equ	0xFDD
 36390                           plusw2	equ	0xFDB
 36391                           fsr2h	equ	0xFDA
 36392                           fsr2l	equ	0xFD9
 36393                           status	equ	0xFD8
 36394                           
 36395 ;; *************** function _flash_page_read *****************
 36396 ;; Defined at:
 36397 ;;		line 538 in file "flash.c"
 36398 ;; Parameters:    Size  Location     Type
 36399 ;;  page            2   39[BANK0 ] unsigned int 
 36400 ;;  data            2   41[BANK0 ] PTR unsigned char 
 36401 ;;		 -> msd_buffer(512), 
 36402 ;; Auto vars:     Size  Location     Type
 36403 ;;		None
 36404 ;; Return value:  Size  Location     Type
 36405 ;;                  1    wreg      void 
 36406 ;; Registers used:
 36407 ;;		wreg, status,2, status,0, cstack
 36408 ;; Tracked objects:
 36409 ;;		On entry : 0/0
 36410 ;;		On exit  : 0/0
 36411 ;;		Unchanged: 0/0
 36412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36416 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36417 ;;Total ram usage:        4 bytes
 36418 ;; Hardware stack levels used:    1
 36419 ;; Hardware stack levels required when called:   14
 36420 ;; This function calls:
 36421 ;;		_flash_partial_read
 36422 ;; This function is called by:
 36423 ;;		_ExternalFlash_SectorRead
 36424 ;; This function uses a non-reentrant model
 36425 ;;
 36426                           
 36427                           	psect	text154
 36428  013DF4                     __ptext154:
 36429                           	opt stack 0
 36430  013DF4                     _flash_page_read:
 36431                           	opt stack 10
 36432                           
 36433                           ;flash.c: 541: flash_partial_read(page, 0, 512, data);
 36434                           
 36435                           ;incstack = 0
 36436  013DF4  C087  F073         	movff	flash_page_read@page,flash_partial_read@page
 36437  013DF8  C088  F074         	movff	flash_page_read@page+1,flash_partial_read@page+1
 36438  013DFC  0E00               	movlw	0
 36439  013DFE  0100               	movlb	0	; () banked
 36440  013E00  6F76               	movwf	(flash_partial_read@start+1)& (0+255),b
 36441  013E02  0E00               	movlw	0
 36442  013E04  6F75               	movwf	flash_partial_read@start& (0+255),b
 36443  013E06  0E02               	movlw	2
 36444  013E08  0100               	movlb	0	; () banked
 36445  013E0A  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 36446  013E0C  0E00               	movlw	0
 36447  013E0E  6F77               	movwf	flash_partial_read@length& (0+255),b
 36448  013E10  C089  F079         	movff	flash_page_read@data,flash_partial_read@data
 36449  013E14  C08A  F07A         	movff	flash_page_read@data+1,flash_partial_read@data+1
 36450  013E18  EC95  F08A         	call	_flash_partial_read	;wreg free
 36451  013E1C  0012               	return		;funcret
 36452  013E1E                     __end_of_flash_page_read:
 36453                           	opt stack 0
 36454                           tosu	equ	0xFFF
 36455                           tosh	equ	0xFFE
 36456                           tosl	equ	0xFFD
 36457                           pclath	equ	0xFFA
 36458                           tblptru	equ	0xFF8
 36459                           tblptrh	equ	0xFF7
 36460                           tblptrl	equ	0xFF6
 36461                           tablat	equ	0xFF5
 36462                           prodh	equ	0xFF4
 36463                           prodl	equ	0xFF3
 36464                           intcon	equ	0xFF2
 36465                           intcon2	equ	0xFF1
 36466                           intcon3	equ	0xFF0
 36467                           postinc0	equ	0xFEE
 36468                           wreg	equ	0xFE8
 36469                           indf1	equ	0xFE7
 36470                           postinc1	equ	0xFE6
 36471                           postdec1	equ	0xFE5
 36472                           plusw1	equ	0xFE3
 36473                           fsr1h	equ	0xFE2
 36474                           fsr1l	equ	0xFE1
 36475                           indf2	equ	0xFDF
 36476                           postinc2	equ	0xFDE
 36477                           postdec2	equ	0xFDD
 36478                           plusw2	equ	0xFDB
 36479                           fsr2h	equ	0xFDA
 36480                           fsr2l	equ	0xFD9
 36481                           status	equ	0xFD8
 36482                           
 36483 ;; *************** function _flash_partial_read *****************
 36484 ;; Defined at:
 36485 ;;		line 564 in file "flash.c"
 36486 ;; Parameters:    Size  Location     Type
 36487 ;;  page            2   19[BANK0 ] unsigned int 
 36488 ;;  start           2   21[BANK0 ] unsigned int 
 36489 ;;  length          2   23[BANK0 ] unsigned int 
 36490 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36491 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 36492 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 36493 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512),
      + 
 36494 ;; Auto vars:     Size  Location     Type
 36495 ;;  command         4   31[BANK0 ] unsigned char [4]
 36496 ;;  address         4   35[BANK0 ] unsigned long 
 36497 ;; Return value:  Size  Location     Type
 36498 ;;                  1    wreg      void 
 36499 ;; Registers used:
 36500 ;;		wreg, status,2, status,0, cstack
 36501 ;; Tracked objects:
 36502 ;;		On entry : 0/0
 36503 ;;		On exit  : 0/0
 36504 ;;		Unchanged: 0/0
 36505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36506 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36507 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36508 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36509 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36510 ;;Total ram usage:       20 bytes
 36511 ;; Hardware stack levels used:    1
 36512 ;; Hardware stack levels required when called:   13
 36513 ;; This function calls:
 36514 ;;		__flash_spi_tx_rx
 36515 ;;		_flash_is_busy
 36516 ;; This function is called by:
 36517 ;;		_flash_page_read
 36518 ;;		__root_is_available
 36519 ;;		__get_empty_cluster
 36520 ;;		_fat_get_empty_clusters
 36521 ;;		__read_fat
 36522 ;;		__read_root
 36523 ;;		_fat_find_file
 36524 ;;		__get_first_cluster
 36525 ;;		__get_file_size
 36526 ;;		_fat_get_file_size
 36527 ;;		_fat_read_from_file
 36528 ;; This function uses a non-reentrant model
 36529 ;;
 36530                           
 36531                           	psect	text155
 36532  01152A                     __ptext155:
 36533                           	opt stack 0
 36534  01152A                     _flash_partial_read:
 36535                           	opt stack 15
 36536  01152A                     l17811:
 36537  01152A  EC85  F09F         	call	_flash_is_busy	;wreg free
 36538  01152E  0900               	iorlw	0
 36539  011530  A4D8               	btfss	status,2,c
 36540  011532  D7FB               	goto	l17811
 36541                           
 36542                           ;flash.c: 573: address = page;
 36543  011534  C073  F083         	movff	flash_partial_read@page,flash_partial_read@address
 36544  011538  C074  F084         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 36545  01153C  0100               	movlb	0	; () banked
 36546  01153E  6B85               	clrf	(flash_partial_read@address+2)& (0+255),b
 36547  011540  6B86               	clrf	(flash_partial_read@address+3)& (0+255),b
 36548                           
 36549                           ; BSR set to: 0
 36550                           ;flash.c: 574: address <<= 9;
 36551  011542  0100               	movlb	0	; () banked
 36552  011544  0E09               	movlw	9
 36553  011546                     u16455:
 36554  011546  90D8               	bcf	status,0,c
 36555  011548  3783               	rlcf	flash_partial_read@address& (0+255),f,b
 36556  01154A  3784               	rlcf	(flash_partial_read@address+1)& (0+255),f,b
 36557  01154C  3785               	rlcf	(flash_partial_read@address+2)& (0+255),f,b
 36558  01154E  3786               	rlcf	(flash_partial_read@address+3)& (0+255),f,b
 36559  011550  2EE8               	decfsz	wreg,f,c
 36560  011552  D7F9               	goto	u16455
 36561                           
 36562                           ; BSR set to: 0
 36563                           ;flash.c: 575: address |= start;
 36564  011554  0100               	movlb	0	; () banked
 36565  011556  5175               	movf	flash_partial_read@start& (0+255),w,b
 36566  011558  0100               	movlb	0	; () banked
 36567  01155A  6F7B               	movwf	??_flash_partial_read& (0+255),b
 36568  01155C  0100               	movlb	0	; () banked
 36569  01155E  5176               	movf	(flash_partial_read@start+1)& (0+255),w,b
 36570  011560  0100               	movlb	0	; () banked
 36571  011562  6F7C               	movwf	(??_flash_partial_read+1)& (0+255),b
 36572  011564  0100               	movlb	0	; () banked
 36573  011566  6B7D               	clrf	(??_flash_partial_read+2)& (0+255),b
 36574  011568  0100               	movlb	0	; () banked
 36575  01156A  6B7E               	clrf	(??_flash_partial_read+3)& (0+255),b
 36576  01156C  0100               	movlb	0	; () banked
 36577  01156E  517B               	movf	??_flash_partial_read& (0+255),w,b
 36578  011570  0100               	movlb	0	; () banked
 36579  011572  1383               	iorwf	flash_partial_read@address& (0+255),f,b
 36580  011574  0100               	movlb	0	; () banked
 36581  011576  517C               	movf	(??_flash_partial_read+1)& (0+255),w,b
 36582  011578  0100               	movlb	0	; () banked
 36583  01157A  1384               	iorwf	(flash_partial_read@address+1)& (0+255),f,b
 36584  01157C  0100               	movlb	0	; () banked
 36585  01157E  517D               	movf	(??_flash_partial_read+2)& (0+255),w,b
 36586  011580  0100               	movlb	0	; () banked
 36587  011582  1385               	iorwf	(flash_partial_read@address+2)& (0+255),f,b
 36588  011584  0100               	movlb	0	; () banked
 36589  011586  517E               	movf	(??_flash_partial_read+3)& (0+255),w,b
 36590  011588  0100               	movlb	0	; () banked
 36591  01158A  1386               	iorwf	(flash_partial_read@address+3)& (0+255),f,b
 36592                           
 36593                           ; BSR set to: 0
 36594                           ;flash.c: 578: command[0] = 0x03;
 36595  01158C  0E03               	movlw	3
 36596  01158E  0100               	movlb	0	; () banked
 36597  011590  6F7F               	movwf	flash_partial_read@command& (0+255),b
 36598                           
 36599                           ; BSR set to: 0
 36600                           ;flash.c: 579: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36601  011592  C085  F080         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;flash.c: 580: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36605  011596  0100               	movlb	0	; () banked
 36606  011598  5184               	movf	(flash_partial_read@address+1)& (0+255),w,b
 36607  01159A  0100               	movlb	0	; () banked
 36608  01159C  6F81               	movwf	(flash_partial_read@command+2)& (0+255),b
 36609                           
 36610                           ; BSR set to: 0
 36611                           ;flash.c: 581: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36612  01159E  C083  F082         	movff	flash_partial_read@address,flash_partial_read@command+3
 36613                           
 36614                           ; BSR set to: 0
 36615                           ;flash.c: 584: _flash_spi_tx_rx(command, 4, data, length);
 36616  0115A2  0E7F               	movlw	low flash_partial_read@command
 36617  0115A4  0100               	movlb	0	; () banked
 36618  0115A6  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 36619  0115A8  0E00               	movlw	high flash_partial_read@command
 36620  0115AA  0100               	movlb	0	; () banked
 36621  0115AC  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 36622  0115AE  0E00               	movlw	0
 36623  0115B0  0100               	movlb	0	; () banked
 36624  0115B2  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 36625  0115B4  0E04               	movlw	4
 36626  0115B6  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 36627  0115B8  C079  F064         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 36628  0115BC  C07A  F065         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 36629  0115C0  C077  F066         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 36630  0115C4  C078  F067         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 36631  0115C8  ECD6  F088         	call	__flash_spi_tx_rx	;wreg free
 36632  0115CC  0012               	return		;funcret
 36633  0115CE                     __end_of_flash_partial_read:
 36634                           	opt stack 0
 36635                           tosu	equ	0xFFF
 36636                           tosh	equ	0xFFE
 36637                           tosl	equ	0xFFD
 36638                           pclath	equ	0xFFA
 36639                           tblptru	equ	0xFF8
 36640                           tblptrh	equ	0xFF7
 36641                           tblptrl	equ	0xFF6
 36642                           tablat	equ	0xFF5
 36643                           prodh	equ	0xFF4
 36644                           prodl	equ	0xFF3
 36645                           intcon	equ	0xFF2
 36646                           intcon2	equ	0xFF1
 36647                           intcon3	equ	0xFF0
 36648                           postinc0	equ	0xFEE
 36649                           wreg	equ	0xFE8
 36650                           indf1	equ	0xFE7
 36651                           postinc1	equ	0xFE6
 36652                           postdec1	equ	0xFE5
 36653                           plusw1	equ	0xFE3
 36654                           fsr1h	equ	0xFE2
 36655                           fsr1l	equ	0xFE1
 36656                           indf2	equ	0xFDF
 36657                           postinc2	equ	0xFDE
 36658                           postdec2	equ	0xFDD
 36659                           plusw2	equ	0xFDB
 36660                           fsr2h	equ	0xFDA
 36661                           fsr2l	equ	0xFD9
 36662                           status	equ	0xFD8
 36663                           
 36664 ;; *************** function _flash_is_busy *****************
 36665 ;; Defined at:
 36666 ;;		line 475 in file "flash.c"
 36667 ;; Parameters:    Size  Location     Type
 36668 ;;		None
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;  status          2   17[BANK0 ] unsigned int 
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  1    wreg      unsigned char 
 36673 ;; Registers used:
 36674 ;;		wreg, status,2, status,0, cstack
 36675 ;; Tracked objects:
 36676 ;;		On entry : 0/0
 36677 ;;		On exit  : 0/0
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36681 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36684 ;;Total ram usage:        2 bytes
 36685 ;; Hardware stack levels used:    1
 36686 ;; Hardware stack levels required when called:   12
 36687 ;; This function calls:
 36688 ;;		__flash_get_status
 36689 ;;		__flash_wakeup
 36690 ;; This function is called by:
 36691 ;;		__flash_set_page_size
 36692 ;;		__flash_copy_page_to_buffer
 36693 ;;		__flash_compare_page_to_buffer
 36694 ;;		__flash_write_to_buffer
 36695 ;;		__flash_write_page_from_buffer
 36696 ;;		_flash_partial_read
 36697 ;;		_flash_partial_write
 36698 ;;		__flash_erase_page
 36699 ;;		_flash_set_power_state
 36700 ;; This function uses a non-reentrant model
 36701 ;;
 36702                           
 36703                           	psect	text156
 36704  013F0A                     __ptext156:
 36705                           	opt stack 0
 36706  013F0A                     _flash_is_busy:
 36707                           	opt stack 15
 36708                           
 36709                           ;flash.c: 478: if(power_state!=FLASH_POWER_STATE_NORMAL)
 36710                           
 36711                           ;incstack = 0
 36712  013F0A  0100               	movlb	0	; () banked
 36713  013F0C  51DF               	movf	_power_state& (0+255),w,b
 36714  013F0E  A4D8               	btfss	status,2,c
 36715                           
 36716                           ; BSR set to: 0
 36717                           ;flash.c: 479: {
 36718                           ;flash.c: 480: _flash_wakeup();
 36719  013F10  ECAD  F097         	call	__flash_wakeup	;wreg free
 36720                           
 36721                           ;flash.c: 481: }
 36722                           ;flash.c: 484: uint16_t status = _flash_get_status();
 36723  013F14  EC30  F09B         	call	__flash_get_status	;wreg free
 36724  013F18  C06C  F071         	movff	?__flash_get_status,flash_is_busy@status
 36725  013F1C  C06D  F072         	movff	?__flash_get_status+1,flash_is_busy@status+1
 36726                           
 36727                           ;flash.c: 485: if(status & 0b0000000010000000)
 36728  013F20  0100               	movlb	0	; () banked
 36729  013F22  AF71               	btfss	flash_is_busy@status& (0+255),7,b
 36730  013F24  D002               	goto	l17703
 36731                           
 36732                           ; BSR set to: 0
 36733                           ;flash.c: 486: {
 36734                           ;flash.c: 488: return 0;
 36735  013F26  0E00               	movlw	0
 36736                           
 36737                           ; BSR set to: 0
 36738                           ;flash.c: 489: }
 36739                           
 36740                           ; BSR set to: 0
 36741  013F28  0012               	return	
 36742  013F2A                     l17703:
 36743                           
 36744                           ; BSR set to: 0
 36745                           ;flash.c: 490: else
 36746                           ;flash.c: 491: {
 36747                           ;flash.c: 493: return 1;
 36748  013F2A  0E01               	movlw	1
 36749                           
 36750                           ; BSR set to: 0
 36751  013F2C  0012               	return	
 36752  013F2E                     __end_of_flash_is_busy:
 36753                           	opt stack 0
 36754                           tosu	equ	0xFFF
 36755                           tosh	equ	0xFFE
 36756                           tosl	equ	0xFFD
 36757                           pclath	equ	0xFFA
 36758                           tblptru	equ	0xFF8
 36759                           tblptrh	equ	0xFF7
 36760                           tblptrl	equ	0xFF6
 36761                           tablat	equ	0xFF5
 36762                           prodh	equ	0xFF4
 36763                           prodl	equ	0xFF3
 36764                           intcon	equ	0xFF2
 36765                           intcon2	equ	0xFF1
 36766                           intcon3	equ	0xFF0
 36767                           postinc0	equ	0xFEE
 36768                           wreg	equ	0xFE8
 36769                           indf1	equ	0xFE7
 36770                           postinc1	equ	0xFE6
 36771                           postdec1	equ	0xFE5
 36772                           plusw1	equ	0xFE3
 36773                           fsr1h	equ	0xFE2
 36774                           fsr1l	equ	0xFE1
 36775                           indf2	equ	0xFDF
 36776                           postinc2	equ	0xFDE
 36777                           postdec2	equ	0xFDD
 36778                           plusw2	equ	0xFDB
 36779                           fsr2h	equ	0xFDA
 36780                           fsr2l	equ	0xFD9
 36781                           status	equ	0xFD8
 36782                           
 36783 ;; *************** function __flash_wakeup *****************
 36784 ;; Defined at:
 36785 ;;		line 289 in file "flash.c"
 36786 ;; Parameters:    Size  Location     Type
 36787 ;;		None
 36788 ;; Auto vars:     Size  Location     Type
 36789 ;;  command         1    8[BANK0 ] unsigned char 
 36790 ;; Return value:  Size  Location     Type
 36791 ;;                  1    wreg      void 
 36792 ;; Registers used:
 36793 ;;		wreg, status,2, status,0, cstack
 36794 ;; Tracked objects:
 36795 ;;		On entry : 0/0
 36796 ;;		On exit  : 0/0
 36797 ;;		Unchanged: 0/0
 36798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36802 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36803 ;;Total ram usage:        1 bytes
 36804 ;; Hardware stack levels used:    1
 36805 ;; Hardware stack levels required when called:   11
 36806 ;; This function calls:
 36807 ;;		__flash_spi_tx
 36808 ;; This function is called by:
 36809 ;;		_flash_is_busy
 36810 ;;		_flash_set_power_state
 36811 ;; This function uses a non-reentrant model
 36812 ;;
 36813                           
 36814                           	psect	text157
 36815  012F5A                     __ptext157:
 36816                           	opt stack 0
 36817  012F5A                     __flash_wakeup:
 36818                           	opt stack 15
 36819                           
 36820                           ;flash.c: 291: uint8_t command;
 36821                           ;flash.c: 293: switch(power_state)
 36822                           
 36823                           ; BSR set to: 0
 36824                           ;incstack = 0
 36825  012F5A  D025               	goto	l17665
 36826  012F5C                     l17649:
 36827                           
 36828                           ;flash.c: 296: command = 0xAB;
 36829  012F5C  0EAB               	movlw	171
 36830  012F5E  0100               	movlb	0	; () banked
 36831  012F60  6F68               	movwf	__flash_wakeup@command& (0+255),b
 36832                           
 36833                           ; BSR set to: 0
 36834                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 36835  012F62  0E68               	movlw	low __flash_wakeup@command
 36836  012F64  0100               	movlb	0	; () banked
 36837  012F66  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 36838  012F68  0E00               	movlw	high __flash_wakeup@command
 36839  012F6A  0100               	movlb	0	; () banked
 36840  012F6C  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 36841  012F6E  0E00               	movlw	0
 36842  012F70  0100               	movlb	0	; () banked
 36843  012F72  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 36844  012F74  0E01               	movlw	1
 36845  012F76  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 36846  012F78  ECBE  F094         	call	__flash_spi_tx	;wreg free
 36847                           
 36848                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 36849  012F7C  0E17               	movlw	23
 36850  012F7E                     u23277:
 36851  012F7E  2EE8               	decfsz	wreg,f,c
 36852  012F80  D7FE               	bra	u23277
 36853  012F82  F000               	nop	
 36854                           
 36855                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 36856  012F84  0E00               	movlw	0
 36857  012F86  0100               	movlb	0	; () banked
 36858  012F88  6FDF               	movwf	_power_state& (0+255),b
 36859                           
 36860                           ;flash.c: 300: break;
 36861  012F8A  0012               	return	
 36862  012F8C                     l2788:
 36863                           
 36864                           ; BSR set to: 0
 36865                           ;flash.c: 305: LATDbits.LD7 = 0;
 36866  012F8C  9E8C               	bcf	3980,7,c	;volatile
 36867                           
 36868                           ; BSR set to: 0
 36869                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 36870  012F8E  0E0D               	movlw	13
 36871  012F90                     u23287:
 36872  012F90  2EE8               	decfsz	wreg,f,c
 36873  012F92  D7FE               	bra	u23287
 36874  012F94  F000               	nop	
 36875                           
 36876                           ;flash.c: 307: LATDbits.LD7 = 1;
 36877  012F96  8E8C               	bsf	3980,7,c	;volatile
 36878                           
 36879                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 36880  012F98  0E50               	movlw	80
 36881  012F9A                     u23297:
 36882  012F9A  2EE8               	decfsz	wreg,f,c
 36883  012F9C  D7FE               	bra	u23297
 36884                           
 36885                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 36886  012F9E  0E00               	movlw	0
 36887  012FA0  0100               	movlb	0	; () banked
 36888  012FA2  6FDF               	movwf	_power_state& (0+255),b
 36889                           
 36890                           ; BSR set to: 0
 36891                           ;flash.c: 311: }
 36892                           
 36893                           ;flash.c: 310: break;
 36894  012FA4  0012               	return	
 36895  012FA6                     l17665:
 36896  012FA6  0100               	movlb	0	; () banked
 36897  012FA8  51DF               	movf	_power_state& (0+255),w,b
 36898                           
 36899                           ; Switch size 1, requested type "space"
 36900                           ; Number of cases is 2, Range of values is 1 to 2
 36901                           ; switch strategies available:
 36902                           ; Name         Instructions Cycles
 36903                           ; simple_byte            7     4 (average)
 36904                           ;	Chosen strategy is simple_byte
 36905  012FAA  0A01               	xorlw	1	; case 1
 36906  012FAC  B4D8               	btfsc	status,2,c
 36907  012FAE  D7D6               	goto	l17649
 36908  012FB0  0A03               	xorlw	3	; case 2
 36909  012FB2  A4D8               	btfss	status,2,c
 36910  012FB4  0012               	return	
 36911  012FB6  D7EA               	goto	l2788
 36912  012FB8                     __end_of__flash_wakeup:
 36913                           	opt stack 0
 36914                           tosu	equ	0xFFF
 36915                           tosh	equ	0xFFE
 36916                           tosl	equ	0xFFD
 36917                           pclath	equ	0xFFA
 36918                           tblptru	equ	0xFF8
 36919                           tblptrh	equ	0xFF7
 36920                           tblptrl	equ	0xFF6
 36921                           tablat	equ	0xFF5
 36922                           prodh	equ	0xFF4
 36923                           prodl	equ	0xFF3
 36924                           intcon	equ	0xFF2
 36925                           intcon2	equ	0xFF1
 36926                           intcon3	equ	0xFF0
 36927                           postinc0	equ	0xFEE
 36928                           wreg	equ	0xFE8
 36929                           indf1	equ	0xFE7
 36930                           postinc1	equ	0xFE6
 36931                           postdec1	equ	0xFE5
 36932                           plusw1	equ	0xFE3
 36933                           fsr1h	equ	0xFE2
 36934                           fsr1l	equ	0xFE1
 36935                           indf2	equ	0xFDF
 36936                           postinc2	equ	0xFDE
 36937                           postdec2	equ	0xFDD
 36938                           plusw2	equ	0xFDB
 36939                           fsr2h	equ	0xFDA
 36940                           fsr2l	equ	0xFD9
 36941                           status	equ	0xFD8
 36942                           
 36943 ;; *************** function __flash_spi_tx *****************
 36944 ;; Defined at:
 36945 ;;		line 103 in file "flash.c"
 36946 ;; Parameters:    Size  Location     Type
 36947 ;;  data            2    0[BANK0 ] PTR unsigned char 
 36948 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 36949 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 36950 ;;  length          2    2[BANK0 ] unsigned int 
 36951 ;; Auto vars:     Size  Location     Type
 36952 ;;		None
 36953 ;; Return value:  Size  Location     Type
 36954 ;;                  1    wreg      void 
 36955 ;; Registers used:
 36956 ;;		wreg, status,2, status,0
 36957 ;; Tracked objects:
 36958 ;;		On entry : 0/0
 36959 ;;		On exit  : 0/0
 36960 ;;		Unchanged: 0/0
 36961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36965 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36966 ;;Total ram usage:        8 bytes
 36967 ;; Hardware stack levels used:    1
 36968 ;; Hardware stack levels required when called:   10
 36969 ;; This function calls:
 36970 ;;		Nothing
 36971 ;; This function is called by:
 36972 ;;		__flash_set_page_size
 36973 ;;		__flash_wakeup
 36974 ;;		__flash_copy_page_to_buffer
 36975 ;;		__flash_compare_page_to_buffer
 36976 ;;		__flash_write_page_from_buffer
 36977 ;;		__flash_erase_page
 36978 ;;		_flash_set_power_state
 36979 ;; This function uses a non-reentrant model
 36980 ;;
 36981                           
 36982                           	psect	text158
 36983  01297C                     __ptext158:
 36984                           	opt stack 0
 36985  01297C                     __flash_spi_tx:
 36986                           	opt stack 15
 36987                           
 36988                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 36989                           
 36990                           ; BSR set to: 0
 36991                           ;incstack = 0
 36992  01297C  9E88               	bcf	3976,7,c	;volatile
 36993                           
 36994                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 36995  01297E  9C88               	bcf	3976,6,c	;volatile
 36996                           
 36997                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 36998  012980  8A88               	bsf	3976,5,c	;volatile
 36999                           
 37000                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 37001  012982  9888               	bcf	3976,4,c	;volatile
 37002                           
 37003                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 37004  012984  9688               	bcf	3976,3,c	;volatile
 37005                           
 37006                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 37007  012986  8488               	bsf	3976,2,c	;volatile
 37008                           
 37009                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 37010  012988  9288               	bcf	3976,1,c	;volatile
 37011                           
 37012                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 37013  01298A  9886               	bcf	3974,4,c	;volatile
 37014  01298C  9A86               	bcf	3974,5,c	;volatile
 37015  01298E  9C86               	bcf	3974,6,c	;volatile
 37016  012990  9E86               	bcf	3974,7,c	;volatile
 37017                           
 37018                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 37019  012992  9086               	bcf	3974,0,c	;volatile
 37020  012994  9286               	bcf	3974,1,c	;volatile
 37021  012996  9486               	bcf	3974,2,c	;volatile
 37022  012998  9686               	bcf	3974,3,c	;volatile
 37023                           
 37024                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37025  01299A  0100               	movlb	0	; () banked
 37026  01299C  5161               	movf	(__flash_spi_tx@data+1)& (0+255),w,b
 37027  01299E  6E6A               	movwf	3946,c	;volatile
 37028                           
 37029                           ; BSR set to: 0
 37030                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37031  0129A0  C060  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 37032                           
 37033                           ; BSR set to: 0
 37034                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37035  0129A4  0EFF               	movlw	255
 37036  0129A6  0100               	movlb	0	; () banked
 37037  0129A8  6F64               	movwf	??__flash_spi_tx& (0+255),b
 37038  0129AA  0EFF               	movlw	255
 37039  0129AC  0100               	movlb	0	; () banked
 37040  0129AE  6F65               	movwf	(??__flash_spi_tx+1)& (0+255),b
 37041  0129B0  C062  F066         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 37042  0129B4  C063  F067         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 37043  0129B8  0100               	movlb	0	; () banked
 37044  0129BA  5164               	movf	??__flash_spi_tx& (0+255),w,b
 37045  0129BC  0100               	movlb	0	; () banked
 37046  0129BE  2766               	addwf	(??__flash_spi_tx+2)& (0+255),f,b
 37047  0129C0  0100               	movlb	0	; () banked
 37048  0129C2  5165               	movf	(??__flash_spi_tx+1)& (0+255),w,b
 37049  0129C4  0100               	movlb	0	; () banked
 37050  0129C6  2367               	addwfc	(??__flash_spi_tx+3)& (0+255),f,b
 37051  0129C8  C067  F066         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 37052  0129CC  0100               	movlb	0	; () banked
 37053  0129CE  6B67               	clrf	(??__flash_spi_tx+3)& (0+255),b
 37054  0129D0  0100               	movlb	0	; () banked
 37055  0129D2  5166               	movf	(??__flash_spi_tx+2)& (0+255),w,b
 37056  0129D4  6E66               	movwf	3942,c	;volatile
 37057                           
 37058                           ; BSR set to: 0
 37059                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37060  0129D6  0100               	movlb	0	; () banked
 37061  0129D8  0562               	decf	__flash_spi_tx@length& (0+255),w,b
 37062  0129DA  6E67               	movwf	3943,c	;volatile
 37063                           
 37064                           ; BSR set to: 0
 37065                           ;flash.c: 131: LATDbits.LD7 = 0;
 37066  0129DC  9E8C               	bcf	3980,7,c	;volatile
 37067                           
 37068                           ; BSR set to: 0
 37069                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 37070  0129DE  8088               	bsf	3976,0,c	;volatile
 37071  0129E0                     l2750:
 37072  0129E0  B088               	btfsc	3976,0,c	;volatile
 37073  0129E2  D7FE               	goto	l2750
 37074                           
 37075                           ;flash.c: 134: LATDbits.LD7 = 1;
 37076  0129E4  8E8C               	bsf	3980,7,c	;volatile
 37077  0129E6  0012               	return		;funcret
 37078  0129E8                     __end_of__flash_spi_tx:
 37079                           	opt stack 0
 37080                           tosu	equ	0xFFF
 37081                           tosh	equ	0xFFE
 37082                           tosl	equ	0xFFD
 37083                           pclath	equ	0xFFA
 37084                           tblptru	equ	0xFF8
 37085                           tblptrh	equ	0xFF7
 37086                           tblptrl	equ	0xFF6
 37087                           tablat	equ	0xFF5
 37088                           prodh	equ	0xFF4
 37089                           prodl	equ	0xFF3
 37090                           intcon	equ	0xFF2
 37091                           intcon2	equ	0xFF1
 37092                           intcon3	equ	0xFF0
 37093                           postinc0	equ	0xFEE
 37094                           wreg	equ	0xFE8
 37095                           indf1	equ	0xFE7
 37096                           postinc1	equ	0xFE6
 37097                           postdec1	equ	0xFE5
 37098                           plusw1	equ	0xFE3
 37099                           fsr1h	equ	0xFE2
 37100                           fsr1l	equ	0xFE1
 37101                           indf2	equ	0xFDF
 37102                           postinc2	equ	0xFDE
 37103                           postdec2	equ	0xFDD
 37104                           plusw2	equ	0xFDB
 37105                           fsr2h	equ	0xFDA
 37106                           fsr2l	equ	0xFD9
 37107                           status	equ	0xFD8
 37108                           
 37109 ;; *************** function __flash_get_status *****************
 37110 ;; Defined at:
 37111 ;;		line 278 in file "flash.c"
 37112 ;; Parameters:    Size  Location     Type
 37113 ;;		None
 37114 ;; Auto vars:     Size  Location     Type
 37115 ;;  status          2   15[BANK0 ] unsigned int 
 37116 ;;  command         1   14[BANK0 ] unsigned char 
 37117 ;; Return value:  Size  Location     Type
 37118 ;;                  2   12[BANK0 ] unsigned int 
 37119 ;; Registers used:
 37120 ;;		wreg, status,2, status,0, cstack
 37121 ;; Tracked objects:
 37122 ;;		On entry : 0/0
 37123 ;;		On exit  : 0/0
 37124 ;;		Unchanged: 0/0
 37125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37127 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37129 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37130 ;;Total ram usage:        5 bytes
 37131 ;; Hardware stack levels used:    1
 37132 ;; Hardware stack levels required when called:   11
 37133 ;; This function calls:
 37134 ;;		__flash_spi_tx_rx
 37135 ;; This function is called by:
 37136 ;;		__flash_compare_page_to_buffer
 37137 ;;		_flash_is_busy
 37138 ;; This function uses a non-reentrant model
 37139 ;;
 37140                           
 37141                           	psect	text159
 37142  013660                     __ptext159:
 37143                           	opt stack 0
 37144  013660                     __flash_get_status:
 37145                           	opt stack 15
 37146                           
 37147                           ;flash.c: 282: uint8_t command = 0xD7;
 37148                           
 37149                           ;incstack = 0
 37150  013660  0ED7               	movlw	215
 37151  013662  0100               	movlb	0	; () banked
 37152  013664  6F6E               	movwf	__flash_get_status@command& (0+255),b
 37153                           
 37154                           ; BSR set to: 0
 37155                           ;flash.c: 283: uint16_t status;
 37156                           ;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &status, 2);
 37157  013666  0E6E               	movlw	low __flash_get_status@command
 37158  013668  0100               	movlb	0	; () banked
 37159  01366A  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 37160  01366C  0E00               	movlw	high __flash_get_status@command
 37161  01366E  0100               	movlb	0	; () banked
 37162  013670  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 37163  013672  0E00               	movlw	0
 37164  013674  0100               	movlb	0	; () banked
 37165  013676  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 37166  013678  0E01               	movlw	1
 37167  01367A  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 37168  01367C  0E6F               	movlw	low __flash_get_status@status
 37169  01367E  0100               	movlb	0	; () banked
 37170  013680  6F64               	movwf	__flash_spi_tx_rx@data& (0+255),b
 37171  013682  0E00               	movlw	high __flash_get_status@status
 37172  013684  0100               	movlb	0	; () banked
 37173  013686  6F65               	movwf	(__flash_spi_tx_rx@data+1)& (0+255),b
 37174  013688  0E00               	movlw	0
 37175  01368A  0100               	movlb	0	; () banked
 37176  01368C  6F67               	movwf	(__flash_spi_tx_rx@data_length+1)& (0+255),b
 37177  01368E  0E02               	movlw	2
 37178  013690  6F66               	movwf	__flash_spi_tx_rx@data_length& (0+255),b
 37179  013692  ECD6  F088         	call	__flash_spi_tx_rx	;wreg free
 37180                           
 37181                           ;flash.c: 285: return status;
 37182  013696  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 37183  01369A  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37184  01369E  0012               	return	
 37185  0136A0                     __end_of__flash_get_status:
 37186                           	opt stack 0
 37187                           tosu	equ	0xFFF
 37188                           tosh	equ	0xFFE
 37189                           tosl	equ	0xFFD
 37190                           pclath	equ	0xFFA
 37191                           tblptru	equ	0xFF8
 37192                           tblptrh	equ	0xFF7
 37193                           tblptrl	equ	0xFF6
 37194                           tablat	equ	0xFF5
 37195                           prodh	equ	0xFF4
 37196                           prodl	equ	0xFF3
 37197                           intcon	equ	0xFF2
 37198                           intcon2	equ	0xFF1
 37199                           intcon3	equ	0xFF0
 37200                           postinc0	equ	0xFEE
 37201                           wreg	equ	0xFE8
 37202                           indf1	equ	0xFE7
 37203                           postinc1	equ	0xFE6
 37204                           postdec1	equ	0xFE5
 37205                           plusw1	equ	0xFE3
 37206                           fsr1h	equ	0xFE2
 37207                           fsr1l	equ	0xFE1
 37208                           indf2	equ	0xFDF
 37209                           postinc2	equ	0xFDE
 37210                           postdec2	equ	0xFDD
 37211                           plusw2	equ	0xFDB
 37212                           fsr2h	equ	0xFDA
 37213                           fsr2l	equ	0xFD9
 37214                           status	equ	0xFD8
 37215                           
 37216 ;; *************** function __flash_spi_tx_rx *****************
 37217 ;; Defined at:
 37218 ;;		line 194 in file "flash.c"
 37219 ;; Parameters:    Size  Location     Type
 37220 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37221 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 37222 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37223 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37224 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 37225 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 37226 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_statu
      +s@status(2), 
 37227 ;;		 -> msd_buffer(512), 
 37228 ;;  data_length     2    6[BANK0 ] unsigned int 
 37229 ;; Auto vars:     Size  Location     Type
 37230 ;;		None
 37231 ;; Return value:  Size  Location     Type
 37232 ;;                  1    wreg      void 
 37233 ;; Registers used:
 37234 ;;		wreg, status,2, status,0
 37235 ;; Tracked objects:
 37236 ;;		On entry : 0/0
 37237 ;;		On exit  : 0/0
 37238 ;;		Unchanged: 0/0
 37239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37240 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37242 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37243 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37244 ;;Total ram usage:       12 bytes
 37245 ;; Hardware stack levels used:    1
 37246 ;; Hardware stack levels required when called:   10
 37247 ;; This function calls:
 37248 ;;		Nothing
 37249 ;; This function is called by:
 37250 ;;		__flash_get_status
 37251 ;;		_flash_partial_read
 37252 ;; This function uses a non-reentrant model
 37253 ;;
 37254                           
 37255                           	psect	text160
 37256  0111AC                     __ptext160:
 37257                           	opt stack 0
 37258  0111AC                     __flash_spi_tx_rx:
 37259                           	opt stack 15
 37260                           
 37261                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 37262                           
 37263                           ;incstack = 0
 37264  0111AC  9E88               	bcf	3976,7,c	;volatile
 37265                           
 37266                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 37267  0111AE  9C88               	bcf	3976,6,c	;volatile
 37268                           
 37269                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 37270  0111B0  8A88               	bsf	3976,5,c	;volatile
 37271                           
 37272                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 37273  0111B2  9888               	bcf	3976,4,c	;volatile
 37274                           
 37275                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 37276  0111B4  9688               	bcf	3976,3,c	;volatile
 37277                           
 37278                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 37279  0111B6  8488               	bsf	3976,2,c	;volatile
 37280                           
 37281                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 37282  0111B8  9288               	bcf	3976,1,c	;volatile
 37283                           
 37284                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 37285  0111BA  9886               	bcf	3974,4,c	;volatile
 37286  0111BC  9A86               	bcf	3974,5,c	;volatile
 37287  0111BE  9C86               	bcf	3974,6,c	;volatile
 37288  0111C0  9E86               	bcf	3974,7,c	;volatile
 37289                           
 37290                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 37291  0111C2  9086               	bcf	3974,0,c	;volatile
 37292  0111C4  9286               	bcf	3974,1,c	;volatile
 37293  0111C6  9486               	bcf	3974,2,c	;volatile
 37294  0111C8  9686               	bcf	3974,3,c	;volatile
 37295                           
 37296                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37297  0111CA  0100               	movlb	0	; () banked
 37298  0111CC  5161               	movf	(__flash_spi_tx_rx@command+1)& (0+255),w,b
 37299  0111CE  6E6A               	movwf	3946,c	;volatile
 37300                           
 37301                           ; BSR set to: 0
 37302                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37303  0111D0  C060  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 37304                           
 37305                           ; BSR set to: 0
 37306                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37307  0111D4  0EFF               	movlw	255
 37308  0111D6  0100               	movlb	0	; () banked
 37309  0111D8  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 37310  0111DA  0EFF               	movlw	255
 37311  0111DC  0100               	movlb	0	; () banked
 37312  0111DE  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 37313  0111E0  C062  F06A         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 37314  0111E4  C063  F06B         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 37315  0111E8  0100               	movlb	0	; () banked
 37316  0111EA  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 37317  0111EC  0100               	movlb	0	; () banked
 37318  0111EE  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 37319  0111F0  0100               	movlb	0	; () banked
 37320  0111F2  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 37321  0111F4  0100               	movlb	0	; () banked
 37322  0111F6  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 37323  0111F8  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 37324  0111FC  0100               	movlb	0	; () banked
 37325  0111FE  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 37326  011200  0100               	movlb	0	; () banked
 37327  011202  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 37328  011204  6E66               	movwf	3942,c	;volatile
 37329                           
 37330                           ; BSR set to: 0
 37331                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37332  011206  0100               	movlb	0	; () banked
 37333  011208  0562               	decf	__flash_spi_tx_rx@command_length& (0+255),w,b
 37334  01120A  6E67               	movwf	3943,c	;volatile
 37335                           
 37336                           ; BSR set to: 0
 37337                           ;flash.c: 222: LATDbits.LD7 = 0;
 37338  01120C  9E8C               	bcf	3980,7,c	;volatile
 37339                           
 37340                           ; BSR set to: 0
 37341                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 37342  01120E  8088               	bsf	3976,0,c	;volatile
 37343  011210                     l2765:
 37344  011210  B088               	btfsc	3976,0,c	;volatile
 37345  011212  D7FE               	goto	l2765
 37346                           
 37347                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 37348  011214  9A88               	bcf	3976,5,c	;volatile
 37349                           
 37350                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 37351  011216  8888               	bsf	3976,4,c	;volatile
 37352                           
 37353                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 37354  011218  9688               	bcf	3976,3,c	;volatile
 37355                           
 37356                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 37357  01121A  9488               	bcf	3976,2,c	;volatile
 37358                           
 37359                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37360  01121C  0100               	movlb	0	; () banked
 37361  01121E  5165               	movf	(__flash_spi_tx_rx@data+1)& (0+255),w,b
 37362  011220  6E68               	movwf	3944,c	;volatile
 37363                           
 37364                           ; BSR set to: 0
 37365                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37366  011222  C064  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 37367                           
 37368                           ; BSR set to: 0
 37369                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37370  011226  0EFF               	movlw	255
 37371  011228  0100               	movlb	0	; () banked
 37372  01122A  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 37373  01122C  0EFF               	movlw	255
 37374  01122E  0100               	movlb	0	; () banked
 37375  011230  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 37376  011232  C066  F06A         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 37377  011236  C067  F06B         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 37378  01123A  0100               	movlb	0	; () banked
 37379  01123C  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 37380  01123E  0100               	movlb	0	; () banked
 37381  011240  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 37382  011242  0100               	movlb	0	; () banked
 37383  011244  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 37384  011246  0100               	movlb	0	; () banked
 37385  011248  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 37386  01124A  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 37387  01124E  0100               	movlb	0	; () banked
 37388  011250  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 37389  011252  0100               	movlb	0	; () banked
 37390  011254  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 37391  011256  6E66               	movwf	3942,c	;volatile
 37392                           
 37393                           ; BSR set to: 0
 37394                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37395  011258  0100               	movlb	0	; () banked
 37396  01125A  0566               	decf	__flash_spi_tx_rx@data_length& (0+255),w,b
 37397  01125C  6E67               	movwf	3943,c	;volatile
 37398                           
 37399                           ; BSR set to: 0
 37400                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 37401  01125E  8088               	bsf	3976,0,c	;volatile
 37402  011260                     l2768:
 37403  011260  B088               	btfsc	3976,0,c	;volatile
 37404  011262  D7FE               	goto	l2768
 37405                           
 37406                           ;flash.c: 249: LATDbits.LD7 = 1;
 37407  011264  8E8C               	bsf	3980,7,c	;volatile
 37408  011266  0012               	return		;funcret
 37409  011268                     __end_of__flash_spi_tx_rx:
 37410                           	opt stack 0
 37411                           tosu	equ	0xFFF
 37412                           tosh	equ	0xFFE
 37413                           tosl	equ	0xFFD
 37414                           pclath	equ	0xFFA
 37415                           tblptru	equ	0xFF8
 37416                           tblptrh	equ	0xFF7
 37417                           tblptrl	equ	0xFF6
 37418                           tablat	equ	0xFF5
 37419                           prodh	equ	0xFF4
 37420                           prodl	equ	0xFF3
 37421                           intcon	equ	0xFF2
 37422                           intcon2	equ	0xFF1
 37423                           intcon3	equ	0xFF0
 37424                           postinc0	equ	0xFEE
 37425                           wreg	equ	0xFE8
 37426                           indf1	equ	0xFE7
 37427                           postinc1	equ	0xFE6
 37428                           postdec1	equ	0xFE5
 37429                           plusw1	equ	0xFE3
 37430                           fsr1h	equ	0xFE2
 37431                           fsr1l	equ	0xFE1
 37432                           indf2	equ	0xFDF
 37433                           postinc2	equ	0xFDE
 37434                           postdec2	equ	0xFDD
 37435                           plusw2	equ	0xFDB
 37436                           fsr2h	equ	0xFDA
 37437                           fsr2l	equ	0xFD9
 37438                           status	equ	0xFD8
 37439                           
 37440 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37441 ;; Defined at:
 37442 ;;		line 993 in file "usb_device_msd.c"
 37443 ;; Parameters:    Size  Location     Type
 37444 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37445 ;; Auto vars:     Size  Location     Type
 37446 ;;		None
 37447 ;; Return value:  Size  Location     Type
 37448 ;;                  1    wreg      void 
 37449 ;; Registers used:
 37450 ;;		wreg, status,2, status,0
 37451 ;; Tracked objects:
 37452 ;;		On entry : 0/0
 37453 ;;		On exit  : 0/0
 37454 ;;		Unchanged: 0/0
 37455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37458 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37459 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37460 ;;Total ram usage:        6 bytes
 37461 ;; Hardware stack levels used:    1
 37462 ;; Hardware stack levels required when called:   10
 37463 ;; This function calls:
 37464 ;;		Nothing
 37465 ;; This function is called by:
 37466 ;;		_MSDProcessCommandMediaPresent
 37467 ;; This function uses a non-reentrant model
 37468 ;;
 37469                           
 37470                           	psect	text161
 37471  010A0C                     __ptext161:
 37472                           	opt stack 0
 37473  010A0C                     _MSDComputeDeviceInAndResidue:
 37474                           	opt stack 16
 37475                           
 37476                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37477                           
 37478                           ;incstack = 0
 37479  010A0C  0100               	movlb	0	; () banked
 37480  010A0E  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37481  010A10  0100               	movlb	0	; () banked
 37482  010A12  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37483  010A14  0100               	movlb	0	; () banked
 37484  010A16  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37485  010A18  0100               	movlb	0	; () banked
 37486  010A1A  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37487  010A1C  0100               	movlb	0	; () banked
 37488  010A1E  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37489  010A20  0100               	movlb	0	; () banked
 37490  010A22  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37491  010A24  0100               	movlb	0	; () banked
 37492  010A26  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37493  010A28  0102               	movlb	2	; () banked
 37494  010A2A  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 37495  010A2C  0100               	movlb	0	; () banked
 37496  010A2E  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37497  010A30  0102               	movlb	2	; () banked
 37498  010A32  594A               	subwfb	(_gblCBW+9)& (0+255),w,b
 37499  010A34  0100               	movlb	0	; () banked
 37500  010A36  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37501  010A38  0102               	movlb	2	; () banked
 37502  010A3A  594B               	subwfb	(_gblCBW+10)& (0+255),w,b
 37503  010A3C  0100               	movlb	0	; () banked
 37504  010A3E  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37505  010A40  0102               	movlb	2	; () banked
 37506  010A42  594C               	subwfb	(_gblCBW+11)& (0+255),w,b
 37507  010A44  B0D8               	btfsc	status,0,c
 37508  010A46  D00E               	goto	l18289
 37509                           
 37510                           ; BSR set to: 2
 37511                           ;usb_device_msd.c: 997: {
 37512                           ;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37513  010A48  0E00               	movlw	0
 37514  010A4A  010D               	movlb	13	; () banked
 37515  010A4C  6F88               	movwf	136,b	;volatile
 37516  010A4E  0E00               	movlw	0
 37517  010A50  6F89               	movwf	137,b	;volatile
 37518  010A52  0E00               	movlw	0
 37519  010A54  6F8A               	movwf	138,b	;volatile
 37520  010A56  0E00               	movlw	0
 37521  010A58  6F8B               	movwf	139,b	;volatile
 37522                           
 37523                           ; BSR set to: 13
 37524                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37525  010A5A  C249  F0D9         	movff	_gblCBW+8,_TransferLength
 37526  010A5E  C24A  F0DA         	movff	_gblCBW+9,_TransferLength+1
 37527                           
 37528                           ;usb_device_msd.c: 1002: }
 37529  010A62  0012               	return	
 37530  010A64                     l18289:
 37531                           
 37532                           ;usb_device_msd.c: 1003: else
 37533                           ;usb_device_msd.c: 1004: {
 37534                           ;usb_device_msd.c: 1006: if(DiExpected < TransferLength.Val)
 37535  010A64  0100               	movlb	0	; () banked
 37536  010A66  51D9               	movf	_TransferLength& (0+255),w,b
 37537  010A68  0100               	movlb	0	; () banked
 37538  010A6A  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37539  010A6C  0100               	movlb	0	; () banked
 37540  010A6E  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 37541  010A70  0100               	movlb	0	; () banked
 37542  010A72  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37543  010A74  B0D8               	btfsc	status,0,c
 37544  010A76  D004               	goto	l18293
 37545                           
 37546                           ; BSR set to: 0
 37547                           ;usb_device_msd.c: 1007: {
 37548                           ;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37549  010A78  C060  F0D9         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37550  010A7C  C061  F0DA         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37551  010A80                     l18293:
 37552                           
 37553                           ; BSR set to: 0
 37554                           ;usb_device_msd.c: 1009: }
 37555                           ;usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength - Trans
      +                          ferLength.Val;
 37556  010A80  0100               	movlb	0	; () banked
 37557  010A82  51D9               	movf	_TransferLength& (0+255),w,b
 37558  010A84  0100               	movlb	0	; () banked
 37559  010A86  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37560  010A88  0100               	movlb	0	; () banked
 37561  010A8A  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 37562  010A8C  0100               	movlb	0	; () banked
 37563  010A8E  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37564  010A90  0100               	movlb	0	; () banked
 37565  010A92  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37566  010A94  0100               	movlb	0	; () banked
 37567  010A96  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37568  010A98  0100               	movlb	0	; () banked
 37569  010A9A  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37570  010A9C  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37571  010A9E  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37572  010AA0  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37573  010AA2  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37574  010AA4  0E00               	movlw	0
 37575  010AA6  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37576  010AA8  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37577  010AAA  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37578  010AAC  0102               	movlb	2	; () banked
 37579  010AAE  5149               	movf	(_gblCBW+8)& (0+255),w,b
 37580  010AB0  0100               	movlb	0	; () banked
 37581  010AB2  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37582  010AB4  010D               	movlb	13	; () banked
 37583  010AB6  6F88               	movwf	136,b	;volatile
 37584  010AB8  0102               	movlb	2	; () banked
 37585  010ABA  514A               	movf	(_gblCBW+9)& (0+255),w,b
 37586  010ABC  0100               	movlb	0	; () banked
 37587  010ABE  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37588  010AC0  010D               	movlb	13	; () banked
 37589  010AC2  6F89               	movwf	137,b	;volatile
 37590  010AC4  0102               	movlb	2	; () banked
 37591  010AC6  514B               	movf	(_gblCBW+10)& (0+255),w,b
 37592  010AC8  0100               	movlb	0	; () banked
 37593  010ACA  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37594  010ACC  010D               	movlb	13	; () banked
 37595  010ACE  6F8A               	movwf	138,b	;volatile
 37596  010AD0  0102               	movlb	2	; () banked
 37597  010AD2  514C               	movf	(_gblCBW+11)& (0+255),w,b
 37598  010AD4  0100               	movlb	0	; () banked
 37599  010AD6  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37600  010AD8  010D               	movlb	13	; () banked
 37601  010ADA  6F8B               	movwf	139,b	;volatile
 37602  010ADC  0012               	return	
 37603  010ADE                     __end_of_MSDComputeDeviceInAndResidue:
 37604                           	opt stack 0
 37605                           tosu	equ	0xFFF
 37606                           tosh	equ	0xFFE
 37607                           tosl	equ	0xFFD
 37608                           pclath	equ	0xFFA
 37609                           tblptru	equ	0xFF8
 37610                           tblptrh	equ	0xFF7
 37611                           tblptrl	equ	0xFF6
 37612                           tablat	equ	0xFF5
 37613                           prodh	equ	0xFF4
 37614                           prodl	equ	0xFF3
 37615                           intcon	equ	0xFF2
 37616                           intcon2	equ	0xFF1
 37617                           intcon3	equ	0xFF0
 37618                           postinc0	equ	0xFEE
 37619                           wreg	equ	0xFE8
 37620                           indf1	equ	0xFE7
 37621                           postinc1	equ	0xFE6
 37622                           postdec1	equ	0xFE5
 37623                           plusw1	equ	0xFE3
 37624                           fsr1h	equ	0xFE2
 37625                           fsr1l	equ	0xFE1
 37626                           indf2	equ	0xFDF
 37627                           postinc2	equ	0xFDE
 37628                           postdec2	equ	0xFDD
 37629                           plusw2	equ	0xFDB
 37630                           fsr2h	equ	0xFDA
 37631                           fsr2l	equ	0xFD9
 37632                           status	equ	0xFD8
 37633                           
 37634 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37635 ;; Defined at:
 37636 ;;		line 18 in file "external_flash.c"
 37637 ;; Parameters:    Size  Location     Type
 37638 ;;  config          2    0[BANK0 ] PTR void 
 37639 ;;		 -> NULL(0), 
 37640 ;; Auto vars:     Size  Location     Type
 37641 ;;		None
 37642 ;; Return value:  Size  Location     Type
 37643 ;;                  2    0[BANK0 ] unsigned int 
 37644 ;; Registers used:
 37645 ;;		wreg, status,2
 37646 ;; Tracked objects:
 37647 ;;		On entry : 0/0
 37648 ;;		On exit  : 0/0
 37649 ;;		Unchanged: 0/0
 37650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37655 ;;Total ram usage:        2 bytes
 37656 ;; Hardware stack levels used:    1
 37657 ;; Hardware stack levels required when called:   10
 37658 ;; This function calls:
 37659 ;;		Nothing
 37660 ;; This function is called by:
 37661 ;;		_MSDProcessCommandMediaPresent
 37662 ;; This function uses a non-reentrant model
 37663 ;;
 37664                           
 37665                           	psect	text162
 37666  01428A                     __ptext162:
 37667                           	opt stack 0
 37668  01428A                     _ExternalFlash_SectorSizeRead:
 37669                           	opt stack 16
 37670                           
 37671                           ;external_flash.c: 21: return 512;
 37672                           
 37673                           ; BSR set to: 13
 37674                           ;incstack = 0
 37675  01428A  0E02               	movlw	2
 37676  01428C  0100               	movlb	0	; () banked
 37677  01428E  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37678  014290  0E00               	movlw	0
 37679  014292  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37680  014294  0012               	return	
 37681  014296                     __end_of_ExternalFlash_SectorSizeRead:
 37682                           	opt stack 0
 37683                           tosu	equ	0xFFF
 37684                           tosh	equ	0xFFE
 37685                           tosl	equ	0xFFD
 37686                           pclath	equ	0xFFA
 37687                           tblptru	equ	0xFF8
 37688                           tblptrh	equ	0xFF7
 37689                           tblptrl	equ	0xFF6
 37690                           tablat	equ	0xFF5
 37691                           prodh	equ	0xFF4
 37692                           prodl	equ	0xFF3
 37693                           intcon	equ	0xFF2
 37694                           intcon2	equ	0xFF1
 37695                           intcon3	equ	0xFF0
 37696                           postinc0	equ	0xFEE
 37697                           wreg	equ	0xFE8
 37698                           indf1	equ	0xFE7
 37699                           postinc1	equ	0xFE6
 37700                           postdec1	equ	0xFE5
 37701                           plusw1	equ	0xFE3
 37702                           fsr1h	equ	0xFE2
 37703                           fsr1l	equ	0xFE1
 37704                           indf2	equ	0xFDF
 37705                           postinc2	equ	0xFDE
 37706                           postdec2	equ	0xFDD
 37707                           plusw2	equ	0xFDB
 37708                           fsr2h	equ	0xFDA
 37709                           fsr2l	equ	0xFD9
 37710                           status	equ	0xFD8
 37711                           
 37712 ;; *************** function _ExternalFlash_CapacityRead *****************
 37713 ;; Defined at:
 37714 ;;		line 24 in file "external_flash.c"
 37715 ;; Parameters:    Size  Location     Type
 37716 ;;  config          2    0[BANK0 ] PTR void 
 37717 ;;		 -> NULL(0), 
 37718 ;; Auto vars:     Size  Location     Type
 37719 ;;		None
 37720 ;; Return value:  Size  Location     Type
 37721 ;;                  4    0[BANK0 ] unsigned long 
 37722 ;; Registers used:
 37723 ;;		wreg, status,2
 37724 ;; Tracked objects:
 37725 ;;		On entry : 0/0
 37726 ;;		On exit  : 0/0
 37727 ;;		Unchanged: 0/0
 37728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37733 ;;Total ram usage:        4 bytes
 37734 ;; Hardware stack levels used:    1
 37735 ;; Hardware stack levels required when called:   10
 37736 ;; This function calls:
 37737 ;;		Nothing
 37738 ;; This function is called by:
 37739 ;;		_MSDProcessCommandMediaPresent
 37740 ;; This function uses a non-reentrant model
 37741 ;;
 37742                           
 37743                           	psect	text163
 37744  01413A                     __ptext163:
 37745                           	opt stack 0
 37746  01413A                     _ExternalFlash_CapacityRead:
 37747                           	opt stack 16
 37748                           
 37749                           ;external_flash.c: 26: return ((uint32_t) 8196 - 1);
 37750                           
 37751                           ; BSR set to: 0
 37752                           ;incstack = 0
 37753  01413A  0E03               	movlw	3
 37754  01413C  0100               	movlb	0	; () banked
 37755  01413E  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 37756  014140  0E20               	movlw	32
 37757  014142  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 37758  014144  0E00               	movlw	0
 37759  014146  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 37760  014148  0E00               	movlw	0
 37761  01414A  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 37762  01414C  0012               	return	
 37763  01414E                     __end_of_ExternalFlash_CapacityRead:
 37764                           	opt stack 0
 37765                           tosu	equ	0xFFF
 37766                           tosh	equ	0xFFE
 37767                           tosl	equ	0xFFD
 37768                           pclath	equ	0xFFA
 37769                           tblptru	equ	0xFF8
 37770                           tblptrh	equ	0xFF7
 37771                           tblptrl	equ	0xFF6
 37772                           tablat	equ	0xFF5
 37773                           prodh	equ	0xFF4
 37774                           prodl	equ	0xFF3
 37775                           intcon	equ	0xFF2
 37776                           intcon2	equ	0xFF1
 37777                           intcon3	equ	0xFF0
 37778                           postinc0	equ	0xFEE
 37779                           wreg	equ	0xFE8
 37780                           indf1	equ	0xFE7
 37781                           postinc1	equ	0xFE6
 37782                           postdec1	equ	0xFE5
 37783                           plusw1	equ	0xFE3
 37784                           fsr1h	equ	0xFE2
 37785                           fsr1l	equ	0xFE1
 37786                           indf2	equ	0xFDF
 37787                           postinc2	equ	0xFDE
 37788                           postdec2	equ	0xFDD
 37789                           plusw2	equ	0xFDB
 37790                           fsr2h	equ	0xFDA
 37791                           fsr2l	equ	0xFD9
 37792                           status	equ	0xFD8
 37793                           
 37794 ;; *************** function _ExternalFlash_MediaInitialize *****************
 37795 ;; Defined at:
 37796 ;;		line 10 in file "external_flash.c"
 37797 ;; Parameters:    Size  Location     Type
 37798 ;;  config          2    0[BANK0 ] PTR void 
 37799 ;;		 -> NULL(0), 
 37800 ;; Auto vars:     Size  Location     Type
 37801 ;;		None
 37802 ;; Return value:  Size  Location     Type
 37803 ;;                  2    0[BANK0 ] PTR struct .
 37804 ;; Registers used:
 37805 ;;		wreg, status,2, status,0
 37806 ;; Tracked objects:
 37807 ;;		On entry : 0/0
 37808 ;;		On exit  : 0/0
 37809 ;;		Unchanged: 0/0
 37810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37814 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37815 ;;Total ram usage:        2 bytes
 37816 ;; Hardware stack levels used:    1
 37817 ;; Hardware stack levels required when called:   10
 37818 ;; This function calls:
 37819 ;;		Nothing
 37820 ;; This function is called by:
 37821 ;;		_USBMSDInit
 37822 ;;		_MSDProcessCommand
 37823 ;; This function uses a non-reentrant model
 37824 ;;
 37825                           
 37826                           	psect	text164
 37827  013E70                     __ptext164:
 37828                           	opt stack 0
 37829  013E70                     _ExternalFlash_MediaInitialize:
 37830                           	opt stack 0
 37831                           
 37832                           ; BSR set to: 0
 37833                           ;Skip over the trampoline to the duplicate function for level 2
 37834  013E70  B25B               	btfsc	btemp,1,c
 37835  013E72  EFD4  F09F         	goto	i2_ExternalFlash_MediaInitialize
 37836  013E76                     _ExternalFlash_MediaInitialize$intlevel0:
 37837                           	opt stack 17
 37838                           
 37839                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 37840                           
 37841                           ;incstack = 0
 37842  013E76  0102               	movlb	2	; () banked
 37843  013E78  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 37844                           
 37845                           ; BSR set to: 2
 37846                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 37847  013E7A  0E02               	movlw	2
 37848  013E7C  0102               	movlb	2	; () banked
 37849  013E7E  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 37850  013E80  0E00               	movlw	0
 37851  013E82  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 37852                           
 37853                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 37854  013E84  0E00               	movlw	0
 37855  013E86  0102               	movlb	2	; () banked
 37856  013E88  6FB6               	movwf	_mediaInformation& (0+255),b
 37857                           
 37858                           ; BSR set to: 2
 37859                           ;external_flash.c: 15: return &mediaInformation;
 37860  013E8A  0EB6               	movlw	low _mediaInformation
 37861  013E8C  0100               	movlb	0	; () banked
 37862  013E8E  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 37863  013E90  0E02               	movlw	high _mediaInformation
 37864  013E92  0100               	movlb	0	; () banked
 37865  013E94  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 37866  013E96  0012               	return	
 37867  013E98                     __end_of_ExternalFlash_MediaInitialize:
 37868                           	opt stack 0
 37869                           tosu	equ	0xFFF
 37870                           tosh	equ	0xFFE
 37871                           tosl	equ	0xFFD
 37872                           pclath	equ	0xFFA
 37873                           tblptru	equ	0xFF8
 37874                           tblptrh	equ	0xFF7
 37875                           tblptrl	equ	0xFF6
 37876                           tablat	equ	0xFF5
 37877                           prodh	equ	0xFF4
 37878                           prodl	equ	0xFF3
 37879                           intcon	equ	0xFF2
 37880                           intcon2	equ	0xFF1
 37881                           intcon3	equ	0xFF0
 37882                           postinc0	equ	0xFEE
 37883                           wreg	equ	0xFE8
 37884                           indf1	equ	0xFE7
 37885                           postinc1	equ	0xFE6
 37886                           postdec1	equ	0xFE5
 37887                           plusw1	equ	0xFE3
 37888                           fsr1h	equ	0xFE2
 37889                           fsr1l	equ	0xFE1
 37890                           indf2	equ	0xFDF
 37891                           postinc2	equ	0xFDE
 37892                           postdec2	equ	0xFDD
 37893                           plusw2	equ	0xFDB
 37894                           fsr2h	equ	0xFDA
 37895                           fsr2l	equ	0xFD9
 37896                           status	equ	0xFD8
 37897                           
 37898 ;; *************** function _ExternalFlash_MediaDetect *****************
 37899 ;; Defined at:
 37900 ;;		line 29 in file "external_flash.c"
 37901 ;; Parameters:    Size  Location     Type
 37902 ;;  config          2    0[BANK0 ] PTR void 
 37903 ;;		 -> NULL(0), 
 37904 ;; Auto vars:     Size  Location     Type
 37905 ;;		None
 37906 ;; Return value:  Size  Location     Type
 37907 ;;                  1    wreg      unsigned char 
 37908 ;; Registers used:
 37909 ;;		wreg
 37910 ;; Tracked objects:
 37911 ;;		On entry : 0/0
 37912 ;;		On exit  : 0/0
 37913 ;;		Unchanged: 0/0
 37914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37918 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37919 ;;Total ram usage:        2 bytes
 37920 ;; Hardware stack levels used:    1
 37921 ;; Hardware stack levels required when called:   10
 37922 ;; This function calls:
 37923 ;;		Nothing
 37924 ;; This function is called by:
 37925 ;;		_USBMSDInit
 37926 ;;		_MSDProcessCommand
 37927 ;; This function uses a non-reentrant model
 37928 ;;
 37929                           
 37930                           	psect	text165
 37931  0142BE                     __ptext165:
 37932                           	opt stack 0
 37933  0142BE                     _ExternalFlash_MediaDetect:
 37934                           	opt stack 0
 37935                           
 37936                           ; BSR set to: 0
 37937                           ;Skip over the trampoline to the duplicate function for level 2
 37938  0142BE  B25B               	btfsc	btemp,1,c
 37939  0142C0  EF81  F0A1         	goto	i2_ExternalFlash_MediaDetect
 37940  0142C4                     _ExternalFlash_MediaDetect$intlevel0:
 37941                           	opt stack 17
 37942                           
 37943                           ;external_flash.c: 31: return 1;
 37944                           
 37945                           ;incstack = 0
 37946  0142C4  0E01               	movlw	1
 37947  0142C6  0012               	return	
 37948  0142C8                     __end_of_ExternalFlash_MediaDetect:
 37949                           	opt stack 0
 37950                           tosu	equ	0xFFF
 37951                           tosh	equ	0xFFE
 37952                           tosl	equ	0xFFD
 37953                           pclath	equ	0xFFA
 37954                           tblptru	equ	0xFF8
 37955                           tblptrh	equ	0xFF7
 37956                           tblptrl	equ	0xFF6
 37957                           tablat	equ	0xFF5
 37958                           prodh	equ	0xFF4
 37959                           prodl	equ	0xFF3
 37960                           intcon	equ	0xFF2
 37961                           intcon2	equ	0xFF1
 37962                           intcon3	equ	0xFF0
 37963                           postinc0	equ	0xFEE
 37964                           wreg	equ	0xFE8
 37965                           indf1	equ	0xFE7
 37966                           postinc1	equ	0xFE6
 37967                           postdec1	equ	0xFE5
 37968                           plusw1	equ	0xFE3
 37969                           fsr1h	equ	0xFE2
 37970                           fsr1l	equ	0xFE1
 37971                           indf2	equ	0xFDF
 37972                           postinc2	equ	0xFDE
 37973                           postdec2	equ	0xFDD
 37974                           plusw2	equ	0xFDB
 37975                           fsr2h	equ	0xFDA
 37976                           fsr2l	equ	0xFD9
 37977                           status	equ	0xFD8
 37978                           
 37979 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 37980 ;; Defined at:
 37981 ;;		line 108 in file "app_device_custom_hid.c"
 37982 ;; Parameters:    Size  Location     Type
 37983 ;;		None
 37984 ;; Auto vars:     Size  Location     Type
 37985 ;;  return_value    2   52[BANK0 ] unsigned int 
 37986 ;;  idx             1   54[BANK0 ] unsigned char 
 37987 ;; Return value:  Size  Location     Type
 37988 ;;                  1    wreg      void 
 37989 ;; Registers used:
 37990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37991 ;; Tracked objects:
 37992 ;;		On entry : 0/0
 37993 ;;		On exit  : 0/0
 37994 ;;		Unchanged: 0/0
 37995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37997 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37998 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37999 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38000 ;;Total ram usage:       11 bytes
 38001 ;; Hardware stack levels used:    1
 38002 ;; Hardware stack levels required when called:   15
 38003 ;; This function calls:
 38004 ;;		_USBTransferOnePacket
 38005 ;;		__fill_buffer_get_calibration1
 38006 ;;		__fill_buffer_get_calibration2
 38007 ;;		__fill_buffer_get_display1
 38008 ;;		__fill_buffer_get_display2
 38009 ;;		__fill_buffer_get_status
 38010 ;;		__parse_command_calibration
 38011 ;;		__parse_command_long
 38012 ;;		__parse_command_short
 38013 ;; This function is called by:
 38014 ;;		_main
 38015 ;; This function uses a non-reentrant model
 38016 ;;
 38017                           
 38018                           	psect	text166
 38019  00ACBA                     __ptext166:
 38020                           	opt stack 0
 38021  00ACBA                     _APP_DeviceCustomHIDTasks:
 38022                           	opt stack 15
 38023                           
 38024                           ;app_device_custom_hid.c: 110: uint8_t idx;
 38025                           ;app_device_custom_hid.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 38026                           
 38027                           ;incstack = 0
 38028  00ACBA  0E20               	movlw	32
 38029  00ACBC  602B               	cpfslt	_USBDeviceState,c	;volatile
 38030  00ACBE  D001               	goto	l1070
 38031  00ACC0  0012               	return	
 38032  00ACC2                     l1070:
 38033                           
 38034                           ;app_device_custom_hid.c: 118: }
 38035                           ;app_device_custom_hid.c: 124: if( UCONbits.SUSPND== 1 )
 38036  00ACC2  B265               	btfsc	3941,1,c	;volatile
 38037  00ACC4  0012               	return	
 38038                           
 38039                           ;app_device_custom_hid.c: 127: }
 38040                           ;app_device_custom_hid.c: 130: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
 38041                           
 38042                           ;app_device_custom_hid.c: 125: {
 38043                           ;app_device_custom_hid.c: 126: return;
 38044  00ACC6  0101               	movlb	1	; () banked
 38045  00ACC8  51E9               	movf	_USBOutHandle& (0+255),w,b
 38046  00ACCA  0101               	movlb	1	; () banked
 38047  00ACCC  11EA               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 38048  00ACCE  B4D8               	btfsc	status,2,c
 38049  00ACD0  D10C               	goto	l22525
 38050                           
 38051                           ; BSR set to: 1
 38052  00ACD2  C1E9  FFD9         	movff	_USBOutHandle,fsr2l
 38053  00ACD6  C1EA  FFDA         	movff	_USBOutHandle+1,fsr2h
 38054  00ACDA  0101               	movlb	1	; () banked
 38055  00ACDC  BEDF               	btfsc	indf2,7,c
 38056  00ACDE  0012               	return	
 38057  00ACE0  D104               	goto	l22525
 38058  00ACE2                     l22457:
 38059                           
 38060                           ;app_device_custom_hid.c: 140: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38061  00ACE2  0100               	movlb	0	; () banked
 38062  00ACE4  51D7               	movf	_USBInHandle& (0+255),w,b
 38063  00ACE6  0100               	movlb	0	; () banked
 38064  00ACE8  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38065  00ACEA  B4D8               	btfsc	status,2,c
 38066  00ACEC  D007               	goto	l22461
 38067                           
 38068                           ; BSR set to: 0
 38069  00ACEE  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38070  00ACF2  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38071  00ACF6  0100               	movlb	0	; () banked
 38072  00ACF8  BEDF               	btfsc	indf2,7,c
 38073  00ACFA  D111               	goto	l22527
 38074  00ACFC                     l22461:
 38075                           
 38076                           ; BSR set to: 0
 38077                           ;app_device_custom_hid.c: 141: {
 38078                           ;app_device_custom_hid.c: 143: _fill_buffer_get_status();
 38079  00ACFC  EC74  F066         	call	__fill_buffer_get_status	;wreg free
 38080                           
 38081                           ;app_device_custom_hid.c: 145: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38082  00AD00  0E01               	movlw	1
 38083  00AD02  0100               	movlb	0	; () banked
 38084  00AD04  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38085  00AD06  0EA4               	movlw	low _ToSendDataBuffer
 38086  00AD08  0100               	movlb	0	; () banked
 38087  00AD0A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38088  00AD0C  0E03               	movlw	high _ToSendDataBuffer
 38089  00AD0E  0100               	movlb	0	; () banked
 38090  00AD10  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38091  00AD12  0E40               	movlw	64
 38092  00AD14  0100               	movlb	0	; () banked
 38093  00AD16  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38094  00AD18  0E01               	movlw	1
 38095  00AD1A  EC6B  F077         	call	_USBTransferOnePacket
 38096  00AD1E  D0E0               	goto	L40
 38097  00AD20                     l22465:
 38098                           
 38099                           ;app_device_custom_hid.c: 151: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38100  00AD20  0100               	movlb	0	; () banked
 38101  00AD22  51D7               	movf	_USBInHandle& (0+255),w,b
 38102  00AD24  0100               	movlb	0	; () banked
 38103  00AD26  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38104  00AD28  B4D8               	btfsc	status,2,c
 38105  00AD2A  D007               	goto	l22469
 38106                           
 38107                           ; BSR set to: 0
 38108  00AD2C  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38109  00AD30  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38110  00AD34  0100               	movlb	0	; () banked
 38111  00AD36  BEDF               	btfsc	indf2,7,c
 38112  00AD38  D0F2               	goto	l22527
 38113  00AD3A                     l22469:
 38114                           
 38115                           ; BSR set to: 0
 38116                           ;app_device_custom_hid.c: 152: {
 38117                           ;app_device_custom_hid.c: 154: _fill_buffer_get_display1();
 38118  00AD3A  EC1E  F097         	call	__fill_buffer_get_display1	;wreg free
 38119                           
 38120                           ;app_device_custom_hid.c: 156: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38121  00AD3E  0E01               	movlw	1
 38122  00AD40  0100               	movlb	0	; () banked
 38123  00AD42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38124  00AD44  0EA4               	movlw	low _ToSendDataBuffer
 38125  00AD46  0100               	movlb	0	; () banked
 38126  00AD48  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38127  00AD4A  0E03               	movlw	high _ToSendDataBuffer
 38128  00AD4C  0100               	movlb	0	; () banked
 38129  00AD4E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38130  00AD50  0E40               	movlw	64
 38131  00AD52  0100               	movlb	0	; () banked
 38132  00AD54  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38133  00AD56  0E01               	movlw	1
 38134  00AD58  EC6B  F077         	call	_USBTransferOnePacket
 38135  00AD5C  D0C1               	goto	L40
 38136  00AD5E                     l22471:
 38137                           
 38138                           ;app_device_custom_hid.c: 162: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38139  00AD5E  0100               	movlb	0	; () banked
 38140  00AD60  51D7               	movf	_USBInHandle& (0+255),w,b
 38141  00AD62  0100               	movlb	0	; () banked
 38142  00AD64  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38143  00AD66  B4D8               	btfsc	status,2,c
 38144  00AD68  D007               	goto	l22475
 38145                           
 38146                           ; BSR set to: 0
 38147  00AD6A  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38148  00AD6E  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38149  00AD72  0100               	movlb	0	; () banked
 38150  00AD74  BEDF               	btfsc	indf2,7,c
 38151  00AD76  D0D3               	goto	l22527
 38152  00AD78                     l22475:
 38153                           
 38154                           ; BSR set to: 0
 38155                           ;app_device_custom_hid.c: 163: {
 38156                           ;app_device_custom_hid.c: 165: _fill_buffer_get_display2();
 38157  00AD78  ECED  F096         	call	__fill_buffer_get_display2	;wreg free
 38158                           
 38159                           ;app_device_custom_hid.c: 167: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38160  00AD7C  0E01               	movlw	1
 38161  00AD7E  0100               	movlb	0	; () banked
 38162  00AD80  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38163  00AD82  0EA4               	movlw	low _ToSendDataBuffer
 38164  00AD84  0100               	movlb	0	; () banked
 38165  00AD86  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38166  00AD88  0E03               	movlw	high _ToSendDataBuffer
 38167  00AD8A  0100               	movlb	0	; () banked
 38168  00AD8C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38169  00AD8E  0E40               	movlw	64
 38170  00AD90  0100               	movlb	0	; () banked
 38171  00AD92  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38172  00AD94  0E01               	movlw	1
 38173  00AD96  EC6B  F077         	call	_USBTransferOnePacket
 38174  00AD9A  D0A2               	goto	L40
 38175  00AD9C                     l22477:
 38176                           
 38177                           ;app_device_custom_hid.c: 173: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38178  00AD9C  0100               	movlb	0	; () banked
 38179  00AD9E  51D7               	movf	_USBInHandle& (0+255),w,b
 38180  00ADA0  0100               	movlb	0	; () banked
 38181  00ADA2  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38182  00ADA4  B4D8               	btfsc	status,2,c
 38183  00ADA6  D007               	goto	l22481
 38184                           
 38185                           ; BSR set to: 0
 38186  00ADA8  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38187  00ADAC  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38188  00ADB0  0100               	movlb	0	; () banked
 38189  00ADB2  BEDF               	btfsc	indf2,7,c
 38190  00ADB4  D0B4               	goto	l22527
 38191  00ADB6                     l22481:
 38192                           
 38193                           ; BSR set to: 0
 38194                           ;app_device_custom_hid.c: 174: {
 38195                           ;app_device_custom_hid.c: 176: _fill_buffer_get_calibration1();
 38196  00ADB6  ECE7  F08A         	call	__fill_buffer_get_calibration1	;wreg free
 38197                           
 38198                           ;app_device_custom_hid.c: 178: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38199  00ADBA  0E01               	movlw	1
 38200  00ADBC  0100               	movlb	0	; () banked
 38201  00ADBE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38202  00ADC0  0EA4               	movlw	low _ToSendDataBuffer
 38203  00ADC2  0100               	movlb	0	; () banked
 38204  00ADC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38205  00ADC6  0E03               	movlw	high _ToSendDataBuffer
 38206  00ADC8  0100               	movlb	0	; () banked
 38207  00ADCA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38208  00ADCC  0E40               	movlw	64
 38209  00ADCE  0100               	movlb	0	; () banked
 38210  00ADD0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38211  00ADD2  0E01               	movlw	1
 38212  00ADD4  EC6B  F077         	call	_USBTransferOnePacket
 38213  00ADD8  D083               	goto	L40
 38214  00ADDA                     l22485:
 38215                           
 38216                           ;app_device_custom_hid.c: 184: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38217  00ADDA  0100               	movlb	0	; () banked
 38218  00ADDC  51D7               	movf	_USBInHandle& (0+255),w,b
 38219  00ADDE  0100               	movlb	0	; () banked
 38220  00ADE0  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38221  00ADE2  B4D8               	btfsc	status,2,c
 38222  00ADE4  D007               	goto	l22489
 38223                           
 38224                           ; BSR set to: 0
 38225  00ADE6  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38226  00ADEA  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38227  00ADEE  0100               	movlb	0	; () banked
 38228  00ADF0  BEDF               	btfsc	indf2,7,c
 38229  00ADF2  D095               	goto	l22527
 38230  00ADF4                     l22489:
 38231                           
 38232                           ; BSR set to: 0
 38233                           ;app_device_custom_hid.c: 185: {
 38234                           ;app_device_custom_hid.c: 187: _fill_buffer_get_calibration2();
 38235  00ADF4  ECD2  F091         	call	__fill_buffer_get_calibration2	;wreg free
 38236                           
 38237                           ;app_device_custom_hid.c: 189: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38238  00ADF8  0E01               	movlw	1
 38239  00ADFA  0100               	movlb	0	; () banked
 38240  00ADFC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38241  00ADFE  0EA4               	movlw	low _ToSendDataBuffer
 38242  00AE00  0100               	movlb	0	; () banked
 38243  00AE02  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38244  00AE04  0E03               	movlw	high _ToSendDataBuffer
 38245  00AE06  0100               	movlb	0	; () banked
 38246  00AE08  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38247  00AE0A  0E40               	movlw	64
 38248  00AE0C  0100               	movlb	0	; () banked
 38249  00AE0E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38250  00AE10  0E01               	movlw	1
 38251  00AE12  EC6B  F077         	call	_USBTransferOnePacket
 38252  00AE16  D064               	goto	L40
 38253  00AE18                     l22493:
 38254                           
 38255                           ;app_device_custom_hid.c: 195: LATDbits.LD1 ^= 1;
 38256  00AE18  728C               	btg	3980,1,c	;volatile
 38257                           
 38258                           ;app_device_custom_hid.c: 196: break;
 38259  00AE1A  D081               	goto	l22527
 38260  00AE1C                     l22495:
 38261                           
 38262                           ;app_device_custom_hid.c: 200: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38263  00AE1C  0100               	movlb	0	; () banked
 38264  00AE1E  51D7               	movf	_USBInHandle& (0+255),w,b
 38265  00AE20  0100               	movlb	0	; () banked
 38266  00AE22  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38267  00AE24  B4D8               	btfsc	status,2,c
 38268  00AE26  D007               	goto	l22499
 38269                           
 38270                           ; BSR set to: 0
 38271  00AE28  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38272  00AE2C  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38273  00AE30  0100               	movlb	0	; () banked
 38274  00AE32  BEDF               	btfsc	indf2,7,c
 38275  00AE34  D074               	goto	l22527
 38276  00AE36                     l22499:
 38277                           
 38278                           ; BSR set to: 0
 38279                           ;app_device_custom_hid.c: 201: {
 38280                           ;app_device_custom_hid.c: 203: ToSendDataBuffer[0] = COMMAND_GET_BUTTON_STATUS;
 38281  00AE36  0E81               	movlw	129
 38282  00AE38  0103               	movlb	3	; () banked
 38283  00AE3A  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 38284                           
 38285                           ; BSR set to: 3
 38286                           ;app_device_custom_hid.c: 204: if(PORTAbits.RA0)
 38287  00AE3C  A080               	btfss	3968,0,c	;volatile
 38288  00AE3E  D002               	goto	l22505
 38289                           
 38290                           ; BSR set to: 3
 38291                           ;app_device_custom_hid.c: 205: {
 38292                           ;app_device_custom_hid.c: 207: ToSendDataBuffer[1] = 0x01;
 38293  00AE40  0E01               	movlw	1
 38294  00AE42  D001               	goto	L39
 38295  00AE44                     l22505:
 38296                           
 38297                           ; BSR set to: 3
 38298                           ;app_device_custom_hid.c: 209: else
 38299                           ;app_device_custom_hid.c: 210: {
 38300                           ;app_device_custom_hid.c: 212: ToSendDataBuffer[1] = 0x00;
 38301  00AE44  0E00               	movlw	0
 38302  00AE46                     L39:
 38303  00AE46  0103               	movlb	3	; () banked
 38304  00AE48  6FA5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 38305                           
 38306                           ; BSR set to: 3
 38307                           ;app_device_custom_hid.c: 213: }
 38308                           ;app_device_custom_hid.c: 215: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38309                           
 38310                           ; BSR set to: 3
 38311  00AE4A  0E01               	movlw	1
 38312  00AE4C  0100               	movlb	0	; () banked
 38313  00AE4E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38314  00AE50  0EA4               	movlw	low _ToSendDataBuffer
 38315  00AE52  0100               	movlb	0	; () banked
 38316  00AE54  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38317  00AE56  0E03               	movlw	high _ToSendDataBuffer
 38318  00AE58  0100               	movlb	0	; () banked
 38319  00AE5A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38320  00AE5C  0E40               	movlw	64
 38321  00AE5E  0100               	movlb	0	; () banked
 38322  00AE60  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38323  00AE62  0E01               	movlw	1
 38324  00AE64  EC6B  F077         	call	_USBTransferOnePacket
 38325  00AE68  D03B               	goto	L40
 38326  00AE6A                     l22509:
 38327                           
 38328                           ;app_device_custom_hid.c: 220: {
 38329                           ;app_device_custom_hid.c: 221: uint16_t return_value;
 38330                           ;app_device_custom_hid.c: 223: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 38331  00AE6A  0100               	movlb	0	; () banked
 38332  00AE6C  51D7               	movf	_USBInHandle& (0+255),w,b
 38333  00AE6E  0100               	movlb	0	; () banked
 38334  00AE70  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38335  00AE72  B4D8               	btfsc	status,2,c
 38336  00AE74  D007               	goto	l22513
 38337                           
 38338                           ; BSR set to: 0
 38339  00AE76  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 38340  00AE7A  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 38341  00AE7E  0100               	movlb	0	; () banked
 38342  00AE80  BEDF               	btfsc	indf2,7,c
 38343  00AE82  D04D               	goto	l22527
 38344  00AE84                     l22513:
 38345                           
 38346                           ; BSR set to: 0
 38347                           ;app_device_custom_hid.c: 224: {
 38348                           ;app_device_custom_hid.c: 226: ToSendDataBuffer[0] = COMMAND_READ_POTENTIOMETER;
 38349  00AE84  0E37               	movlw	55
 38350  00AE86  0103               	movlb	3	; () banked
 38351  00AE88  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 38352                           
 38353                           ; BSR set to: 3
 38354                           ;app_device_custom_hid.c: 228: return_value = os.temperature_onboard >> 3;
 38355  00AE8A  EE22  F036         	lfsr	2,_os+54	;volatile
 38356  00AE8E  CFDE F08C          	movff	postinc2,??_APP_DeviceCustomHIDTasks
 38357  00AE92  CFDD F08D          	movff	postdec2,??_APP_DeviceCustomHIDTasks+1
 38358  00AE96  0100               	movlb	0	; () banked
 38359  00AE98  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38360  00AE9A  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38361  00AE9C  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38362  00AE9E  0100               	movlb	0	; () banked
 38363  00AEA0  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38364  00AEA2  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38365  00AEA4  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38366  00AEA6  0100               	movlb	0	; () banked
 38367  00AEA8  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38368  00AEAA  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38369  00AEAC  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38370  00AEAE  C08C  F094         	movff	??_APP_DeviceCustomHIDTasks,APP_DeviceCustomHIDTasks@return_value
 38371  00AEB2  C08D  F095         	movff	??_APP_DeviceCustomHIDTasks+1,APP_DeviceCustomHIDTasks@return_value+1
 38372                           
 38373                           ; BSR set to: 0
 38374                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[1] = (uint8_t) return_value;
 38375  00AEB6  C094  F3A5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 38376                           
 38377                           ; BSR set to: 0
 38378                           ;app_device_custom_hid.c: 230: ToSendDataBuffer[2] = return_value >> 8;
 38379  00AEBA  0100               	movlb	0	; () banked
 38380  00AEBC  5195               	movf	(APP_DeviceCustomHIDTasks@return_value+1)& (0+255),w,b
 38381  00AEBE  0103               	movlb	3	; () banked
 38382  00AEC0  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 38383                           
 38384                           ; BSR set to: 3
 38385                           ;app_device_custom_hid.c: 232: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38386  00AEC2  0E01               	movlw	1
 38387  00AEC4  0100               	movlb	0	; () banked
 38388  00AEC6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38389  00AEC8  0EA4               	movlw	low _ToSendDataBuffer
 38390  00AECA  0100               	movlb	0	; () banked
 38391  00AECC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38392  00AECE  0E03               	movlw	high _ToSendDataBuffer
 38393  00AED0  0100               	movlb	0	; () banked
 38394  00AED2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38395  00AED4  0E40               	movlw	64
 38396  00AED6  0100               	movlb	0	; () banked
 38397  00AED8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38398  00AEDA  0E01               	movlw	1
 38399  00AEDC  EC6B  F077         	call	_USBTransferOnePacket
 38400  00AEE0                     L40:
 38401  00AEE0  C060  F0D7         	movff	?_USBTransferOnePacket,_USBInHandle
 38402  00AEE4  C061  F0D8         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 38403                           
 38404                           ;app_device_custom_hid.c: 236: }
 38405                           
 38406                           ;app_device_custom_hid.c: 233: }
 38407                           ;app_device_custom_hid.c: 234: }
 38408                           ;app_device_custom_hid.c: 235: break;
 38409  00AEE8  D01A               	goto	l22527
 38410  00AEEA                     l22525:
 38411  00AEEA  0104               	movlb	4	; () banked
 38412  00AEEC  5178               	movf	_ReceivedDataBuffer& (0+255),w,b
 38413                           
 38414                           ; Switch size 1, requested type "space"
 38415                           ; Number of cases is 8, Range of values is 16 to 129
 38416                           ; switch strategies available:
 38417                           ; Name         Instructions Cycles
 38418                           ; simple_byte           25    13 (average)
 38419                           ;	Chosen strategy is simple_byte
 38420  00AEEE  0A10               	xorlw	16	; case 16
 38421  00AEF0  B4D8               	btfsc	status,2,c
 38422  00AEF2  D6F7               	goto	l22457
 38423  00AEF4  0A01               	xorlw	1	; case 17
 38424  00AEF6  B4D8               	btfsc	status,2,c
 38425  00AEF8  D713               	goto	l22465
 38426  00AEFA  0A03               	xorlw	3	; case 18
 38427  00AEFC  B4D8               	btfsc	status,2,c
 38428  00AEFE  D72F               	goto	l22471
 38429  00AF00  0A01               	xorlw	1	; case 19
 38430  00AF02  B4D8               	btfsc	status,2,c
 38431  00AF04  D74B               	goto	l22477
 38432  00AF06  0A07               	xorlw	7	; case 20
 38433  00AF08  B4D8               	btfsc	status,2,c
 38434  00AF0A  D767               	goto	l22485
 38435  00AF0C  0A23               	xorlw	35	; case 55
 38436  00AF0E  B4D8               	btfsc	status,2,c
 38437  00AF10  D7AC               	goto	l22509
 38438  00AF12  0AB7               	xorlw	183	; case 128
 38439  00AF14  B4D8               	btfsc	status,2,c
 38440  00AF16  D780               	goto	l22493
 38441  00AF18  0A01               	xorlw	1	; case 129
 38442  00AF1A  B4D8               	btfsc	status,2,c
 38443  00AF1C  D77F               	goto	l22495
 38444  00AF1E                     l22527:
 38445                           
 38446                           ;app_device_custom_hid.c: 239: idx = 1;
 38447  00AF1E  0E01               	movlw	1
 38448  00AF20  D097               	goto	L41
 38449  00AF22                     l22529:
 38450                           
 38451                           ; BSR set to: 0
 38452                           ;app_device_custom_hid.c: 245: _parse_command_short(ReceivedDataBuffer[idx]);
 38453  00AF22  0100               	movlb	0	; () banked
 38454  00AF24  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38455  00AF26  0D01               	mullw	1
 38456  00AF28  0E78               	movlw	low _ReceivedDataBuffer
 38457  00AF2A  24F3               	addwf	prodl,w,c
 38458  00AF2C  6ED9               	movwf	fsr2l,c
 38459  00AF2E  0E04               	movlw	high _ReceivedDataBuffer
 38460  00AF30  20F4               	addwfc	prodh,w,c
 38461  00AF32  6EDA               	movwf	fsr2h,c
 38462  00AF34  50DF               	movf	indf2,w,c
 38463  00AF36  EC09  F082         	call	__parse_command_short
 38464                           
 38465                           ;app_device_custom_hid.c: 246: ++idx;
 38466  00AF3A  0100               	movlb	0	; () banked
 38467  00AF3C  2B96               	incf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 38468                           
 38469                           ;app_device_custom_hid.c: 247: break;
 38470  00AF3E  D0AA               	goto	l22545
 38471  00AF40                     l22533:
 38472                           
 38473                           ; BSR set to: 0
 38474                           ;app_device_custom_hid.c: 249: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 38475  00AF40  0100               	movlb	0	; () banked
 38476  00AF42  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38477  00AF44  0100               	movlb	0	; () banked
 38478  00AF46  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38479  00AF48  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38480  00AF4A  0E01               	movlw	1
 38481  00AF4C  0100               	movlb	0	; () banked
 38482  00AF4E  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38483  00AF50  0E00               	movlw	0
 38484  00AF52  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38485  00AF54  0E78               	movlw	low _ReceivedDataBuffer
 38486  00AF56  0100               	movlb	0	; () banked
 38487  00AF58  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38488  00AF5A  6ED9               	movwf	fsr2l,c
 38489  00AF5C  0E04               	movlw	high _ReceivedDataBuffer
 38490  00AF5E  0100               	movlb	0	; () banked
 38491  00AF60  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38492  00AF62  6EDA               	movwf	fsr2h,c
 38493  00AF64  50DF               	movf	indf2,w,c
 38494  00AF66  0100               	movlb	0	; () banked
 38495  00AF68  6F63               	movwf	__parse_command_long@data& (0+255),b
 38496  00AF6A  0100               	movlb	0	; () banked
 38497  00AF6C  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38498  00AF6E  0D01               	mullw	1
 38499  00AF70  0E78               	movlw	low _ReceivedDataBuffer
 38500  00AF72  24F3               	addwf	prodl,w,c
 38501  00AF74  6ED9               	movwf	fsr2l,c
 38502  00AF76  0E04               	movlw	high _ReceivedDataBuffer
 38503  00AF78  20F4               	addwfc	prodh,w,c
 38504  00AF7A  6EDA               	movwf	fsr2h,c
 38505  00AF7C  50DF               	movf	indf2,w,c
 38506  00AF7E  EC93  F081         	call	__parse_command_long
 38507                           
 38508                           ;app_device_custom_hid.c: 250: idx += 2;
 38509  00AF82  0E02               	movlw	2
 38510  00AF84  D061               	goto	L42
 38511  00AF86                     l22537:
 38512                           
 38513                           ; BSR set to: 0
 38514                           ;app_device_custom_hid.c: 253: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 38515  00AF86  0100               	movlb	0	; () banked
 38516  00AF88  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38517  00AF8A  0100               	movlb	0	; () banked
 38518  00AF8C  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38519  00AF8E  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38520  00AF90  0E01               	movlw	1
 38521  00AF92  0100               	movlb	0	; () banked
 38522  00AF94  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38523  00AF96  0E00               	movlw	0
 38524  00AF98  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38525  00AF9A  0E78               	movlw	low _ReceivedDataBuffer
 38526  00AF9C  0100               	movlb	0	; () banked
 38527  00AF9E  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38528  00AFA0  6ED9               	movwf	fsr2l,c
 38529  00AFA2  0E04               	movlw	high _ReceivedDataBuffer
 38530  00AFA4  0100               	movlb	0	; () banked
 38531  00AFA6  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38532  00AFA8  6EDA               	movwf	fsr2h,c
 38533  00AFAA  50DF               	movf	indf2,w,c
 38534  00AFAC  0100               	movlb	0	; () banked
 38535  00AFAE  6F63               	movwf	__parse_command_calibration@item& (0+255),b
 38536  00AFB0  0100               	movlb	0	; () banked
 38537  00AFB2  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38538  00AFB4  0100               	movlb	0	; () banked
 38539  00AFB6  6F8E               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 38540  00AFB8  6B8F               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 38541  00AFBA  0E02               	movlw	2
 38542  00AFBC  0100               	movlb	0	; () banked
 38543  00AFBE  278E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),f,b
 38544  00AFC0  0E00               	movlw	0
 38545  00AFC2  238F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),f,b
 38546  00AFC4  0E78               	movlw	low _ReceivedDataBuffer
 38547  00AFC6  0100               	movlb	0	; () banked
 38548  00AFC8  258E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),w,b
 38549  00AFCA  6ED9               	movwf	fsr2l,c
 38550  00AFCC  0E04               	movlw	high _ReceivedDataBuffer
 38551  00AFCE  0100               	movlb	0	; () banked
 38552  00AFD0  218F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),w,b
 38553  00AFD2  6EDA               	movwf	fsr2h,c
 38554  00AFD4  50DF               	movf	indf2,w,c
 38555  00AFD6  0100               	movlb	0	; () banked
 38556  00AFD8  6F64               	movwf	__parse_command_calibration@dat1& (0+255),b
 38557  00AFDA  0100               	movlb	0	; () banked
 38558  00AFDC  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38559  00AFDE  0100               	movlb	0	; () banked
 38560  00AFE0  6F90               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),b
 38561  00AFE2  6B91               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),b
 38562  00AFE4  0E03               	movlw	3
 38563  00AFE6  0100               	movlb	0	; () banked
 38564  00AFE8  2790               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),f,b
 38565  00AFEA  0E00               	movlw	0
 38566  00AFEC  2391               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),f,b
 38567  00AFEE  0E78               	movlw	low _ReceivedDataBuffer
 38568  00AFF0  0100               	movlb	0	; () banked
 38569  00AFF2  2590               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),w,b
 38570  00AFF4  6ED9               	movwf	fsr2l,c
 38571  00AFF6  0E04               	movlw	high _ReceivedDataBuffer
 38572  00AFF8  0100               	movlb	0	; () banked
 38573  00AFFA  2191               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),w,b
 38574  00AFFC  6EDA               	movwf	fsr2h,c
 38575  00AFFE  50DF               	movf	indf2,w,c
 38576  00B000  0100               	movlb	0	; () banked
 38577  00B002  6F65               	movwf	__parse_command_calibration@dat2& (0+255),b
 38578  00B004  0100               	movlb	0	; () banked
 38579  00B006  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38580  00B008  0100               	movlb	0	; () banked
 38581  00B00A  6F92               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),b
 38582  00B00C  6B93               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),b
 38583  00B00E  0E04               	movlw	4
 38584  00B010  0100               	movlb	0	; () banked
 38585  00B012  2792               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),f,b
 38586  00B014  0E00               	movlw	0
 38587  00B016  2393               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),f,b
 38588  00B018  0E78               	movlw	low _ReceivedDataBuffer
 38589  00B01A  0100               	movlb	0	; () banked
 38590  00B01C  2592               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),w,b
 38591  00B01E  6ED9               	movwf	fsr2l,c
 38592  00B020  0E04               	movlw	high _ReceivedDataBuffer
 38593  00B022  0100               	movlb	0	; () banked
 38594  00B024  2193               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),w,b
 38595  00B026  6EDA               	movwf	fsr2h,c
 38596  00B028  50DF               	movf	indf2,w,c
 38597  00B02A  0100               	movlb	0	; () banked
 38598  00B02C  6F66               	movwf	__parse_command_calibration@dat3& (0+255),b
 38599  00B02E  0100               	movlb	0	; () banked
 38600  00B030  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38601  00B032  0D01               	mullw	1
 38602  00B034  0E78               	movlw	low _ReceivedDataBuffer
 38603  00B036  24F3               	addwf	prodl,w,c
 38604  00B038  6ED9               	movwf	fsr2l,c
 38605  00B03A  0E04               	movlw	high _ReceivedDataBuffer
 38606  00B03C  20F4               	addwfc	prodh,w,c
 38607  00B03E  6EDA               	movwf	fsr2h,c
 38608  00B040  50DF               	movf	indf2,w,c
 38609  00B042  ECDF  F074         	call	__parse_command_calibration
 38610                           
 38611                           ;app_device_custom_hid.c: 254: idx += 5;
 38612  00B046  0E05               	movlw	5
 38613  00B048                     L42:
 38614  00B048  0100               	movlb	0	; () banked
 38615  00B04A  2796               	addwf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 38616                           
 38617                           ;app_device_custom_hid.c: 255: break;
 38618  00B04C  D023               	goto	l22545
 38619  00B04E                     l22541:
 38620                           
 38621                           ; BSR set to: 0
 38622                           ;app_device_custom_hid.c: 257: idx = 65;
 38623  00B04E  0E41               	movlw	65
 38624  00B050                     L41:
 38625  00B050  0100               	movlb	0	; () banked
 38626  00B052  6F96               	movwf	APP_DeviceCustomHIDTasks@idx& (0+255),b
 38627                           
 38628                           ;app_device_custom_hid.c: 258: }
 38629  00B054  D01F               	goto	l22545
 38630  00B056                     l22543:
 38631                           
 38632                           ; BSR set to: 0
 38633  00B056  0100               	movlb	0	; () banked
 38634  00B058  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38635  00B05A  0D01               	mullw	1
 38636  00B05C  0E78               	movlw	low _ReceivedDataBuffer
 38637  00B05E  24F3               	addwf	prodl,w,c
 38638  00B060  6ED9               	movwf	fsr2l,c
 38639  00B062  0E04               	movlw	high _ReceivedDataBuffer
 38640  00B064  20F4               	addwfc	prodh,w,c
 38641  00B066  6EDA               	movwf	fsr2h,c
 38642  00B068  50DF               	movf	indf2,w,c
 38643  00B06A  0BF0               	andlw	240
 38644  00B06C  0100               	movlb	0	; () banked
 38645  00B06E  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38646  00B070  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38647                           
 38648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38649                           ; Switch size 1, requested type "space"
 38650                           ; Number of cases is 1, Range of values is 0 to 0
 38651                           ; switch strategies available:
 38652                           ; Name         Instructions Cycles
 38653                           ; simple_byte            4     3 (average)
 38654                           ;	Chosen strategy is simple_byte
 38655  00B072  0100               	movlb	0	; () banked
 38656  00B074  518D               	movf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38657  00B076  0A00               	xorlw	0	; case 0
 38658  00B078  A4D8               	btfss	status,2,c
 38659  00B07A  D7E9               	goto	l22541
 38660                           
 38661                           ; BSR set to: 0
 38662                           ; Switch size 1, requested type "space"
 38663                           ; Number of cases is 3, Range of values is 48 to 96
 38664                           ; switch strategies available:
 38665                           ; Name         Instructions Cycles
 38666                           ; simple_byte           10     6 (average)
 38667                           ;	Chosen strategy is simple_byte
 38668  00B07C  0100               	movlb	0	; () banked
 38669  00B07E  518C               	movf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38670  00B080  0A30               	xorlw	48	; case 48
 38671  00B082  B4D8               	btfsc	status,2,c
 38672  00B084  D74E               	goto	l22529
 38673  00B086  0A70               	xorlw	112	; case 64
 38674  00B088  B4D8               	btfsc	status,2,c
 38675  00B08A  D75A               	goto	l22533
 38676  00B08C  0A20               	xorlw	32	; case 96
 38677  00B08E  B4D8               	btfsc	status,2,c
 38678  00B090  D77A               	goto	l22537
 38679  00B092  D7DD               	goto	l22541
 38680  00B094                     l22545:
 38681                           
 38682                           ; BSR set to: 0
 38683  00B094  0E3D               	movlw	61
 38684  00B096  0100               	movlb	0	; () banked
 38685  00B098  6596               	cpfsgt	APP_DeviceCustomHIDTasks@idx& (0+255),b
 38686  00B09A  D7DD               	goto	l22543
 38687                           
 38688                           ; BSR set to: 0
 38689                           ;app_device_custom_hid.c: 259: }
 38690                           ;app_device_custom_hid.c: 263: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38691                           
 38692                           ; BSR set to: 0
 38693  00B09C  0E00               	movlw	0
 38694  00B09E  0100               	movlb	0	; () banked
 38695  00B0A0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38696  00B0A2  0E78               	movlw	low _ReceivedDataBuffer
 38697  00B0A4  0100               	movlb	0	; () banked
 38698  00B0A6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38699  00B0A8  0E04               	movlw	high _ReceivedDataBuffer
 38700  00B0AA  0100               	movlb	0	; () banked
 38701  00B0AC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38702  00B0AE  0E40               	movlw	64
 38703  00B0B0  0100               	movlb	0	; () banked
 38704  00B0B2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38705  00B0B4  0E01               	movlw	1
 38706  00B0B6  EC6B  F077         	call	_USBTransferOnePacket
 38707  00B0BA  C060  F1E9         	movff	?_USBTransferOnePacket,_USBOutHandle
 38708  00B0BE  C061  F1EA         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38709  00B0C2  0012               	return	
 38710  00B0C4                     __end_of_APP_DeviceCustomHIDTasks:
 38711                           	opt stack 0
 38712                           tosu	equ	0xFFF
 38713                           tosh	equ	0xFFE
 38714                           tosl	equ	0xFFD
 38715                           pclath	equ	0xFFA
 38716                           tblptru	equ	0xFF8
 38717                           tblptrh	equ	0xFF7
 38718                           tblptrl	equ	0xFF6
 38719                           tablat	equ	0xFF5
 38720                           prodh	equ	0xFF4
 38721                           prodl	equ	0xFF3
 38722                           intcon	equ	0xFF2
 38723                           intcon2	equ	0xFF1
 38724                           intcon3	equ	0xFF0
 38725                           postinc0	equ	0xFEE
 38726                           wreg	equ	0xFE8
 38727                           indf1	equ	0xFE7
 38728                           postinc1	equ	0xFE6
 38729                           postdec1	equ	0xFE5
 38730                           plusw1	equ	0xFE3
 38731                           fsr1h	equ	0xFE2
 38732                           fsr1l	equ	0xFE1
 38733                           indf2	equ	0xFDF
 38734                           postinc2	equ	0xFDE
 38735                           postdec2	equ	0xFDD
 38736                           plusw2	equ	0xFDB
 38737                           fsr2h	equ	0xFDA
 38738                           fsr2l	equ	0xFD9
 38739                           status	equ	0xFD8
 38740                           
 38741 ;; *************** function __parse_command_short *****************
 38742 ;; Defined at:
 38743 ;;		line 398 in file "app_device_custom_hid.c"
 38744 ;; Parameters:    Size  Location     Type
 38745 ;;  cmd             1    wreg     unsigned char 
 38746 ;; Auto vars:     Size  Location     Type
 38747 ;;  cmd             1   43[BANK0 ] unsigned char 
 38748 ;; Return value:  Size  Location     Type
 38749 ;;                  1    wreg      void 
 38750 ;; Registers used:
 38751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38752 ;; Tracked objects:
 38753 ;;		On entry : 0/0
 38754 ;;		On exit  : 0/0
 38755 ;;		Unchanged: 0/0
 38756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38761 ;;Total ram usage:        1 bytes
 38762 ;; Hardware stack levels used:    1
 38763 ;; Hardware stack levels required when called:   14
 38764 ;; This function calls:
 38765 ;;		_rtcc_write_eeprom
 38766 ;;		_system_output_off
 38767 ;;		_system_output_on
 38768 ;; This function is called by:
 38769 ;;		_APP_DeviceCustomHIDTasks
 38770 ;; This function uses a non-reentrant model
 38771 ;;
 38772                           
 38773                           	psect	text167
 38774  010412                     __ptext167:
 38775                           	opt stack 0
 38776  010412                     __parse_command_short:
 38777                           	opt stack 15
 38778                           
 38779                           ;incstack = 0
 38780                           ;__parse_command_short@cmd stored from wreg
 38781  010412  0100               	movlb	0	; () banked
 38782  010414  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 38783                           
 38784                           ;app_device_custom_hid.c: 400: switch(cmd)
 38785  010416  D03C               	goto	l20617
 38786  010418                     l20583:
 38787                           
 38788                           ;app_device_custom_hid.c: 403: system_output_off(OUTPUT_1);
 38789  010418  0E01               	movlw	1
 38790  01041A  ECEC  F098         	call	_system_output_off
 38791                           
 38792                           ;app_device_custom_hid.c: 404: break;
 38793  01041E  0012               	return	
 38794  010420                     l20585:
 38795                           
 38796                           ;app_device_custom_hid.c: 406: system_output_on(OUTPUT_1);
 38797  010420  0E01               	movlw	1
 38798  010422  EC11  F09A         	call	_system_output_on
 38799                           
 38800                           ;app_device_custom_hid.c: 407: break;
 38801  010426  0012               	return	
 38802  010428                     l20587:
 38803                           
 38804                           ;app_device_custom_hid.c: 409: system_output_off(OUTPUT_2);
 38805  010428  0E02               	movlw	2
 38806  01042A  ECEC  F098         	call	_system_output_off
 38807                           
 38808                           ;app_device_custom_hid.c: 410: break;
 38809  01042E  0012               	return	
 38810  010430                     l20589:
 38811                           
 38812                           ;app_device_custom_hid.c: 412: system_output_on(OUTPUT_2);
 38813  010430  0E02               	movlw	2
 38814  010432  EC11  F09A         	call	_system_output_on
 38815                           
 38816                           ;app_device_custom_hid.c: 413: break;
 38817  010436  0012               	return	
 38818  010438                     l20591:
 38819                           
 38820                           ;app_device_custom_hid.c: 415: system_output_off(OUTPUT_3);
 38821  010438  0E04               	movlw	4
 38822  01043A  ECEC  F098         	call	_system_output_off
 38823                           
 38824                           ;app_device_custom_hid.c: 416: break;
 38825  01043E  0012               	return	
 38826  010440                     l20593:
 38827                           
 38828                           ;app_device_custom_hid.c: 418: system_output_on(OUTPUT_3);
 38829  010440  0E04               	movlw	4
 38830  010442  EC11  F09A         	call	_system_output_on
 38831                           
 38832                           ;app_device_custom_hid.c: 419: break;
 38833  010446  0012               	return	
 38834  010448                     l20595:
 38835                           
 38836                           ;app_device_custom_hid.c: 421: system_output_off(OUTPUT_4);
 38837  010448  0E08               	movlw	8
 38838  01044A  ECEC  F098         	call	_system_output_off
 38839                           
 38840                           ;app_device_custom_hid.c: 422: break;
 38841  01044E  0012               	return	
 38842  010450                     l20597:
 38843                           
 38844                           ;app_device_custom_hid.c: 424: system_output_on(OUTPUT_4);
 38845  010450  0E08               	movlw	8
 38846  010452  EC11  F09A         	call	_system_output_on
 38847                           
 38848                           ;app_device_custom_hid.c: 425: break;
 38849  010456  0012               	return	
 38850  010458                     l20599:
 38851                           
 38852                           ;app_device_custom_hid.c: 427: system_output_off(OUTPUT_USB);
 38853  010458  0E10               	movlw	16
 38854  01045A  ECEC  F098         	call	_system_output_off
 38855                           
 38856                           ;app_device_custom_hid.c: 428: break;
 38857  01045E  0012               	return	
 38858  010460                     l20601:
 38859                           
 38860                           ;app_device_custom_hid.c: 430: system_output_on(OUTPUT_USB);
 38861  010460  0E10               	movlw	16
 38862  010462  EC11  F09A         	call	_system_output_on
 38863                           
 38864                           ;app_device_custom_hid.c: 431: break;
 38865  010466  0012               	return	
 38866  010468                     l20603:
 38867                           
 38868                           ;app_device_custom_hid.c: 433: system_output_off(OUTPUT_FAN);
 38869  010468  0E20               	movlw	32
 38870  01046A  ECEC  F098         	call	_system_output_off
 38871                           
 38872                           ;app_device_custom_hid.c: 434: break;
 38873  01046E  0012               	return	
 38874  010470                     l20605:
 38875                           
 38876                           ;app_device_custom_hid.c: 436: system_output_on(OUTPUT_FAN);
 38877  010470  0E20               	movlw	32
 38878  010472  EC11  F09A         	call	_system_output_on
 38879                           
 38880                           ;app_device_custom_hid.c: 437: break;
 38881  010476  0012               	return	
 38882  010478                     l20607:
 38883                           
 38884                           ;app_device_custom_hid.c: 439: --os.encoderCount;
 38885  010478  0102               	movlb	2	; () banked
 38886  01047A  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 38887                           
 38888                           ;app_device_custom_hid.c: 440: break;
 38889  01047C  0012               	return	
 38890  01047E                     l20609:
 38891                           
 38892                           ;app_device_custom_hid.c: 442: ++os.encoderCount;
 38893  01047E  0102               	movlb	2	; () banked
 38894  010480  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 38895                           
 38896                           ;app_device_custom_hid.c: 443: break;
 38897  010482  0012               	return	
 38898  010484                     l20611:
 38899                           
 38900                           ;app_device_custom_hid.c: 445: ++os.buttonCount;
 38901  010484  0102               	movlb	2	; () banked
 38902  010486  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 38903                           
 38904                           ;app_device_custom_hid.c: 446: break;
 38905  010488  0012               	return	
 38906  01048A                     l20613:
 38907                           
 38908                           ;app_device_custom_hid.c: 448: rtcc_write_eeprom();
 38909  01048A  ECC1  F099         	call	_rtcc_write_eeprom	;wreg free
 38910                           
 38911                           ;app_device_custom_hid.c: 450: }
 38912                           
 38913                           ;app_device_custom_hid.c: 449: break;
 38914  01048E  0012               	return	
 38915  010490                     l20617:
 38916  010490  0100               	movlb	0	; () banked
 38917  010492  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 38918                           
 38919                           ; Switch size 1, requested type "space"
 38920                           ; Number of cases is 16, Range of values is 48 to 63
 38921                           ; switch strategies available:
 38922                           ; Name         Instructions Cycles
 38923                           ; simple_byte           49    25 (average)
 38924                           ;	Chosen strategy is simple_byte
 38925  010494  0A30               	xorlw	48	; case 48
 38926  010496  B4D8               	btfsc	status,2,c
 38927  010498  D7BF               	goto	l20583
 38928  01049A  0A01               	xorlw	1	; case 49
 38929  01049C  B4D8               	btfsc	status,2,c
 38930  01049E  D7C0               	goto	l20585
 38931  0104A0  0A03               	xorlw	3	; case 50
 38932  0104A2  B4D8               	btfsc	status,2,c
 38933  0104A4  D7C1               	goto	l20587
 38934  0104A6  0A01               	xorlw	1	; case 51
 38935  0104A8  B4D8               	btfsc	status,2,c
 38936  0104AA  D7C2               	goto	l20589
 38937  0104AC  0A07               	xorlw	7	; case 52
 38938  0104AE  B4D8               	btfsc	status,2,c
 38939  0104B0  D7C3               	goto	l20591
 38940  0104B2  0A01               	xorlw	1	; case 53
 38941  0104B4  B4D8               	btfsc	status,2,c
 38942  0104B6  D7C4               	goto	l20593
 38943  0104B8  0A03               	xorlw	3	; case 54
 38944  0104BA  B4D8               	btfsc	status,2,c
 38945  0104BC  D7C5               	goto	l20595
 38946  0104BE  0A01               	xorlw	1	; case 55
 38947  0104C0  B4D8               	btfsc	status,2,c
 38948  0104C2  D7C6               	goto	l20597
 38949  0104C4  0A0F               	xorlw	15	; case 56
 38950  0104C6  B4D8               	btfsc	status,2,c
 38951  0104C8  D7C7               	goto	l20599
 38952  0104CA  0A01               	xorlw	1	; case 57
 38953  0104CC  B4D8               	btfsc	status,2,c
 38954  0104CE  D7C8               	goto	l20601
 38955  0104D0  0A03               	xorlw	3	; case 58
 38956  0104D2  B4D8               	btfsc	status,2,c
 38957  0104D4  D7C9               	goto	l20603
 38958  0104D6  0A01               	xorlw	1	; case 59
 38959  0104D8  B4D8               	btfsc	status,2,c
 38960  0104DA  D7CA               	goto	l20605
 38961  0104DC  0A07               	xorlw	7	; case 60
 38962  0104DE  B4D8               	btfsc	status,2,c
 38963  0104E0  D7CB               	goto	l20607
 38964  0104E2  0A01               	xorlw	1	; case 61
 38965  0104E4  B4D8               	btfsc	status,2,c
 38966  0104E6  D7CB               	goto	l20609
 38967  0104E8  0A03               	xorlw	3	; case 62
 38968  0104EA  B4D8               	btfsc	status,2,c
 38969  0104EC  D7CB               	goto	l20611
 38970  0104EE  0A01               	xorlw	1	; case 63
 38971  0104F0  A4D8               	btfss	status,2,c
 38972  0104F2  0012               	return	
 38973  0104F4  D7CA               	goto	l20613
 38974  0104F6                     __end_of__parse_command_short:
 38975                           	opt stack 0
 38976                           tosu	equ	0xFFF
 38977                           tosh	equ	0xFFE
 38978                           tosl	equ	0xFFD
 38979                           pclath	equ	0xFFA
 38980                           tblptru	equ	0xFF8
 38981                           tblptrh	equ	0xFF7
 38982                           tblptrl	equ	0xFF6
 38983                           tablat	equ	0xFF5
 38984                           prodh	equ	0xFF4
 38985                           prodl	equ	0xFF3
 38986                           intcon	equ	0xFF2
 38987                           intcon2	equ	0xFF1
 38988                           intcon3	equ	0xFF0
 38989                           postinc0	equ	0xFEE
 38990                           wreg	equ	0xFE8
 38991                           indf1	equ	0xFE7
 38992                           postinc1	equ	0xFE6
 38993                           postdec1	equ	0xFE5
 38994                           plusw1	equ	0xFE3
 38995                           fsr1h	equ	0xFE2
 38996                           fsr1l	equ	0xFE1
 38997                           indf2	equ	0xFDF
 38998                           postinc2	equ	0xFDE
 38999                           postdec2	equ	0xFDD
 39000                           plusw2	equ	0xFDB
 39001                           fsr2h	equ	0xFDA
 39002                           fsr2l	equ	0xFD9
 39003                           status	equ	0xFD8
 39004                           
 39005 ;; *************** function _system_output_on *****************
 39006 ;; Defined at:
 39007 ;;		line 507 in file "os.c"
 39008 ;; Parameters:    Size  Location     Type
 39009 ;;  output          1    wreg     enum E8129
 39010 ;; Auto vars:     Size  Location     Type
 39011 ;;  output          1    0[BANK0 ] enum E8129
 39012 ;; Return value:  Size  Location     Type
 39013 ;;                  1    wreg      void 
 39014 ;; Registers used:
 39015 ;;		wreg, status,2, status,0
 39016 ;; Tracked objects:
 39017 ;;		On entry : 0/0
 39018 ;;		On exit  : 0/0
 39019 ;;		Unchanged: 0/0
 39020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39024 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39025 ;;Total ram usage:        1 bytes
 39026 ;; Hardware stack levels used:    1
 39027 ;; Hardware stack levels required when called:   10
 39028 ;; This function calls:
 39029 ;;		Nothing
 39030 ;; This function is called by:
 39031 ;;		__parse_command_short
 39032 ;;		_system_output_toggle
 39033 ;;		__ui_encoder
 39034 ;; This function uses a non-reentrant model
 39035 ;;
 39036                           
 39037                           	psect	text168
 39038  013422                     __ptext168:
 39039                           	opt stack 0
 39040  013422                     _system_output_on:
 39041                           	opt stack 17
 39042                           
 39043                           ;incstack = 0
 39044                           ;system_output_on@output stored from wreg
 39045  013422  0100               	movlb	0	; () banked
 39046  013424  6F60               	movwf	system_output_on@output& (0+255),b
 39047                           
 39048                           ;os.c: 510: os.outputs |= output;
 39049  013426  0100               	movlb	0	; () banked
 39050  013428  5160               	movf	system_output_on@output& (0+255),w,b
 39051  01342A  0102               	movlb	2	; () banked
 39052  01342C  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 39053                           
 39054                           ;os.c: 513: switch(output)
 39055  01342E  D00E               	goto	l19033
 39056  013430                     l1407:
 39057                           
 39058                           ; BSR set to: 0
 39059                           ;os.c: 516: LATCbits.LC7 = 1;
 39060  013430  8E8B               	bsf	3979,7,c	;volatile
 39061                           
 39062                           ;os.c: 517: LATEbits.LE2 = 0;
 39063  013432  948D               	bcf	3981,2,c	;volatile
 39064                           
 39065                           ;os.c: 518: break;
 39066  013434  0012               	return	
 39067  013436                     l1409:
 39068                           
 39069                           ; BSR set to: 0
 39070                           ;os.c: 520: LATCbits.LC7 = 1;
 39071  013436  8E8B               	bsf	3979,7,c	;volatile
 39072                           
 39073                           ;os.c: 521: LATEbits.LE1 = 0;
 39074  013438  928D               	bcf	3981,1,c	;volatile
 39075                           
 39076                           ;os.c: 522: break;
 39077  01343A  0012               	return	
 39078  01343C                     l1410:
 39079                           
 39080                           ; BSR set to: 0
 39081                           ;os.c: 524: LATCbits.LC7 = 1;
 39082  01343C  8E8B               	bsf	3979,7,c	;volatile
 39083                           
 39084                           ;os.c: 525: LATEbits.LE0 = 0;
 39085  01343E  908D               	bcf	3981,0,c	;volatile
 39086                           
 39087                           ;os.c: 526: break;
 39088  013440  0012               	return	
 39089  013442                     l1411:
 39090                           
 39091                           ; BSR set to: 0
 39092                           ;os.c: 528: LATCbits.LC7 = 1;
 39093  013442  8E8B               	bsf	3979,7,c	;volatile
 39094                           
 39095                           ;os.c: 529: LATAbits.LA5 = 0;
 39096  013444  9A89               	bcf	3977,5,c	;volatile
 39097                           
 39098                           ;os.c: 530: break;
 39099  013446  0012               	return	
 39100  013448                     l1412:
 39101                           
 39102                           ; BSR set to: 0
 39103                           ;os.c: 532: LATDbits.LD3 = 1;
 39104  013448  868C               	bsf	3980,3,c	;volatile
 39105                           
 39106                           ; BSR set to: 0
 39107                           ;os.c: 534: }
 39108                           
 39109                           ;os.c: 533: break;
 39110  01344A  0012               	return	
 39111  01344C                     l19033:
 39112  01344C  0100               	movlb	0	; () banked
 39113  01344E  5160               	movf	system_output_on@output& (0+255),w,b
 39114                           
 39115                           ; Switch size 1, requested type "space"
 39116                           ; Number of cases is 5, Range of values is 1 to 16
 39117                           ; switch strategies available:
 39118                           ; Name         Instructions Cycles
 39119                           ; simple_byte           16     9 (average)
 39120                           ;	Chosen strategy is simple_byte
 39121  013450  0A01               	xorlw	1	; case 1
 39122  013452  B4D8               	btfsc	status,2,c
 39123  013454  D7ED               	goto	l1407
 39124  013456  0A03               	xorlw	3	; case 2
 39125  013458  B4D8               	btfsc	status,2,c
 39126  01345A  D7ED               	goto	l1409
 39127  01345C  0A06               	xorlw	6	; case 4
 39128  01345E  B4D8               	btfsc	status,2,c
 39129  013460  D7ED               	goto	l1410
 39130  013462  0A0C               	xorlw	12	; case 8
 39131  013464  B4D8               	btfsc	status,2,c
 39132  013466  D7ED               	goto	l1411
 39133  013468  0A18               	xorlw	24	; case 16
 39134  01346A  A4D8               	btfss	status,2,c
 39135  01346C  0012               	return	
 39136  01346E  D7EC               	goto	l1412
 39137  013470                     __end_of_system_output_on:
 39138                           	opt stack 0
 39139                           tosu	equ	0xFFF
 39140                           tosh	equ	0xFFE
 39141                           tosl	equ	0xFFD
 39142                           pclath	equ	0xFFA
 39143                           tblptru	equ	0xFF8
 39144                           tblptrh	equ	0xFF7
 39145                           tblptrl	equ	0xFF6
 39146                           tablat	equ	0xFF5
 39147                           prodh	equ	0xFF4
 39148                           prodl	equ	0xFF3
 39149                           intcon	equ	0xFF2
 39150                           intcon2	equ	0xFF1
 39151                           intcon3	equ	0xFF0
 39152                           postinc0	equ	0xFEE
 39153                           wreg	equ	0xFE8
 39154                           indf1	equ	0xFE7
 39155                           postinc1	equ	0xFE6
 39156                           postdec1	equ	0xFE5
 39157                           plusw1	equ	0xFE3
 39158                           fsr1h	equ	0xFE2
 39159                           fsr1l	equ	0xFE1
 39160                           indf2	equ	0xFDF
 39161                           postinc2	equ	0xFDE
 39162                           postdec2	equ	0xFDD
 39163                           plusw2	equ	0xFDB
 39164                           fsr2h	equ	0xFDA
 39165                           fsr2l	equ	0xFD9
 39166                           status	equ	0xFD8
 39167                           
 39168 ;; *************** function _system_output_off *****************
 39169 ;; Defined at:
 39170 ;;		line 537 in file "os.c"
 39171 ;; Parameters:    Size  Location     Type
 39172 ;;  output          1    wreg     enum E8129
 39173 ;; Auto vars:     Size  Location     Type
 39174 ;;  output          1    1[BANK0 ] enum E8129
 39175 ;; Return value:  Size  Location     Type
 39176 ;;                  1    wreg      void 
 39177 ;; Registers used:
 39178 ;;		wreg, status,2, status,0
 39179 ;; Tracked objects:
 39180 ;;		On entry : 0/0
 39181 ;;		On exit  : 0/0
 39182 ;;		Unchanged: 0/0
 39183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39187 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39188 ;;Total ram usage:        2 bytes
 39189 ;; Hardware stack levels used:    1
 39190 ;; Hardware stack levels required when called:   10
 39191 ;; This function calls:
 39192 ;;		Nothing
 39193 ;; This function is called by:
 39194 ;;		_main
 39195 ;;		__parse_command_short
 39196 ;;		_system_output_toggle
 39197 ;;		__ui_encoder
 39198 ;; This function uses a non-reentrant model
 39199 ;;
 39200                           
 39201                           	psect	text169
 39202  0131D8                     __ptext169:
 39203                           	opt stack 0
 39204  0131D8                     _system_output_off:
 39205                           	opt stack 17
 39206                           
 39207                           ; BSR set to: 0
 39208                           ;incstack = 0
 39209                           ;system_output_off@output stored from wreg
 39210  0131D8  0100               	movlb	0	; () banked
 39211  0131DA  6F61               	movwf	system_output_off@output& (0+255),b
 39212                           
 39213                           ;os.c: 540: os.outputs &= (~output);
 39214  0131DC  0100               	movlb	0	; () banked
 39215  0131DE  5161               	movf	system_output_off@output& (0+255),w,b
 39216  0131E0  0AFF               	xorlw	255
 39217  0131E2  0102               	movlb	2	; () banked
 39218  0131E4  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 39219                           
 39220                           ;os.c: 543: switch(output)
 39221  0131E6  D00A               	goto	l19023
 39222  0131E8                     l1417:
 39223                           
 39224                           ; BSR set to: 0
 39225                           ;os.c: 546: LATEbits.LE2 = 1;
 39226  0131E8  848D               	bsf	3981,2,c	;volatile
 39227                           
 39228                           ;os.c: 547: break;
 39229  0131EA  D019               	goto	l19025
 39230  0131EC                     l1419:
 39231                           
 39232                           ; BSR set to: 0
 39233                           ;os.c: 549: LATEbits.LE1 = 1;
 39234  0131EC  828D               	bsf	3981,1,c	;volatile
 39235                           
 39236                           ;os.c: 550: break;
 39237  0131EE  D017               	goto	l19025
 39238  0131F0                     l1420:
 39239                           
 39240                           ; BSR set to: 0
 39241                           ;os.c: 552: LATEbits.LE0 = 1;
 39242  0131F0  808D               	bsf	3981,0,c	;volatile
 39243                           
 39244                           ;os.c: 553: break;
 39245  0131F2  D015               	goto	l19025
 39246  0131F4                     l1421:
 39247                           
 39248                           ; BSR set to: 0
 39249                           ;os.c: 555: LATAbits.LA5 = 1;
 39250  0131F4  8A89               	bsf	3977,5,c	;volatile
 39251                           
 39252                           ;os.c: 556: break;
 39253  0131F6  D013               	goto	l19025
 39254  0131F8                     l1422:
 39255                           
 39256                           ; BSR set to: 0
 39257                           ;os.c: 558: LATDbits.LD3 = 0;
 39258  0131F8  968C               	bcf	3980,3,c	;volatile
 39259                           
 39260                           ; BSR set to: 0
 39261                           ;os.c: 560: }
 39262                           
 39263                           ;os.c: 559: break;
 39264  0131FA  D011               	goto	l19025
 39265  0131FC                     l19023:
 39266  0131FC  0100               	movlb	0	; () banked
 39267  0131FE  5161               	movf	system_output_off@output& (0+255),w,b
 39268                           
 39269                           ; Switch size 1, requested type "space"
 39270                           ; Number of cases is 5, Range of values is 1 to 16
 39271                           ; switch strategies available:
 39272                           ; Name         Instructions Cycles
 39273                           ; simple_byte           16     9 (average)
 39274                           ;	Chosen strategy is simple_byte
 39275  013200  0A01               	xorlw	1	; case 1
 39276  013202  B4D8               	btfsc	status,2,c
 39277  013204  D7F1               	goto	l1417
 39278  013206  0A03               	xorlw	3	; case 2
 39279  013208  B4D8               	btfsc	status,2,c
 39280  01320A  D7F0               	goto	l1419
 39281  01320C  0A06               	xorlw	6	; case 4
 39282  01320E  B4D8               	btfsc	status,2,c
 39283  013210  D7EF               	goto	l1420
 39284  013212  0A0C               	xorlw	12	; case 8
 39285  013214  B4D8               	btfsc	status,2,c
 39286  013216  D7EE               	goto	l1421
 39287  013218  0A18               	xorlw	24	; case 16
 39288  01321A  B4D8               	btfsc	status,2,c
 39289  01321C  D7ED               	goto	l1422
 39290  01321E                     l19025:
 39291                           
 39292                           ; BSR set to: 0
 39293                           ;os.c: 563: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 39294  01321E  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 39295  013222  0E0F               	movlw	15
 39296  013224  0100               	movlb	0	; () banked
 39297  013226  1760               	andwf	??_system_output_off& (0+255),f,b
 39298  013228  A4D8               	btfss	status,2,c
 39299  01322A  0012               	return	
 39300                           
 39301                           ; BSR set to: 0
 39302                           ;os.c: 564: {
 39303                           ;os.c: 565: LATCbits.LC7 = 0;
 39304  01322C  9E8B               	bcf	3979,7,c	;volatile
 39305  01322E  0012               	return	
 39306  013230                     __end_of_system_output_off:
 39307                           	opt stack 0
 39308                           tosu	equ	0xFFF
 39309                           tosh	equ	0xFFE
 39310                           tosl	equ	0xFFD
 39311                           pclath	equ	0xFFA
 39312                           tblptru	equ	0xFF8
 39313                           tblptrh	equ	0xFF7
 39314                           tblptrl	equ	0xFF6
 39315                           tablat	equ	0xFF5
 39316                           prodh	equ	0xFF4
 39317                           prodl	equ	0xFF3
 39318                           intcon	equ	0xFF2
 39319                           intcon2	equ	0xFF1
 39320                           intcon3	equ	0xFF0
 39321                           postinc0	equ	0xFEE
 39322                           wreg	equ	0xFE8
 39323                           indf1	equ	0xFE7
 39324                           postinc1	equ	0xFE6
 39325                           postdec1	equ	0xFE5
 39326                           plusw1	equ	0xFE3
 39327                           fsr1h	equ	0xFE2
 39328                           fsr1l	equ	0xFE1
 39329                           indf2	equ	0xFDF
 39330                           postinc2	equ	0xFDE
 39331                           postdec2	equ	0xFDD
 39332                           plusw2	equ	0xFDB
 39333                           fsr2h	equ	0xFDA
 39334                           fsr2l	equ	0xFD9
 39335                           status	equ	0xFD8
 39336                           
 39337 ;; *************** function _rtcc_write_eeprom *****************
 39338 ;; Defined at:
 39339 ;;		line 436 in file "rtcc.c"
 39340 ;; Parameters:    Size  Location     Type
 39341 ;;		None
 39342 ;; Auto vars:     Size  Location     Type
 39343 ;;  date            6   37[BANK0 ] unsigned char [6]
 39344 ;; Return value:  Size  Location     Type
 39345 ;;                  1    wreg      void 
 39346 ;; Registers used:
 39347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39348 ;; Tracked objects:
 39349 ;;		On entry : 0/0
 39350 ;;		On exit  : 0/0
 39351 ;;		Unchanged: 0/0
 39352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39354 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39356 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39357 ;;Total ram usage:        6 bytes
 39358 ;; Hardware stack levels used:    1
 39359 ;; Hardware stack levels required when called:   13
 39360 ;; This function calls:
 39361 ;;		_i2c_eeprom_write
 39362 ;;		_rtcc_get_day
 39363 ;;		_rtcc_get_hours
 39364 ;;		_rtcc_get_minutes
 39365 ;;		_rtcc_get_month
 39366 ;;		_rtcc_get_seconds
 39367 ;;		_rtcc_get_year
 39368 ;; This function is called by:
 39369 ;;		__parse_command_short
 39370 ;;		__ui_encoder
 39371 ;;		_rtcc_read_eeprom
 39372 ;; This function uses a non-reentrant model
 39373 ;;
 39374                           
 39375                           	psect	text170
 39376  013382                     __ptext170:
 39377                           	opt stack 0
 39378  013382                     _rtcc_write_eeprom:
 39379                           	opt stack 15
 39380                           
 39381                           ;rtcc.c: 438: uint8_t date[6];
 39382                           ;rtcc.c: 439: date[0] = rtcc_get_year();
 39383                           
 39384                           ; BSR set to: 0
 39385                           ;incstack = 0
 39386  013382  ECA7  F0A0         	call	_rtcc_get_year	;wreg free
 39387  013386  0100               	movlb	0	; () banked
 39388  013388  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 39389                           
 39390                           ;rtcc.c: 440: date[1] = rtcc_get_month();
 39391  01338A  ECBB  F0A0         	call	_rtcc_get_month	;wreg free
 39392  01338E  0100               	movlb	0	; () banked
 39393  013390  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 39394                           
 39395                           ;rtcc.c: 441: date[2] = rtcc_get_day();
 39396  013392  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
 39397  013396  0100               	movlb	0	; () banked
 39398  013398  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 39399                           
 39400                           ;rtcc.c: 442: date[3] = rtcc_get_hours();
 39401  01339A  ECCF  F0A0         	call	_rtcc_get_hours	;wreg free
 39402  01339E  0100               	movlb	0	; () banked
 39403  0133A0  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 39404                           
 39405                           ;rtcc.c: 443: date[4] = rtcc_get_minutes();
 39406  0133A2  ECC5  F0A0         	call	_rtcc_get_minutes	;wreg free
 39407  0133A6  0100               	movlb	0	; () banked
 39408  0133A8  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 39409                           
 39410                           ;rtcc.c: 444: date[5] = rtcc_get_seconds();
 39411  0133AA  ECB1  F0A0         	call	_rtcc_get_seconds	;wreg free
 39412  0133AE  0100               	movlb	0	; () banked
 39413  0133B0  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 39414                           
 39415                           ; BSR set to: 0
 39416                           ;rtcc.c: 446: i2c_eeprom_write(0x040, &date[0], 6);
 39417  0133B2  0E00               	movlw	0
 39418  0133B4  0100               	movlb	0	; () banked
 39419  0133B6  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 39420  0133B8  0E40               	movlw	64
 39421  0133BA  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 39422  0133BC  0E85               	movlw	low rtcc_write_eeprom@date
 39423  0133BE  0100               	movlb	0	; () banked
 39424  0133C0  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 39425  0133C2  0E00               	movlw	high rtcc_write_eeprom@date
 39426  0133C4  0100               	movlb	0	; () banked
 39427  0133C6  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 39428  0133C8  0E06               	movlw	6
 39429  0133CA  0100               	movlb	0	; () banked
 39430  0133CC  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 39431  0133CE  ECEA  F089         	call	_i2c_eeprom_write	;wreg free
 39432  0133D2  0012               	return		;funcret
 39433  0133D4                     __end_of_rtcc_write_eeprom:
 39434                           	opt stack 0
 39435                           tosu	equ	0xFFF
 39436                           tosh	equ	0xFFE
 39437                           tosl	equ	0xFFD
 39438                           pclath	equ	0xFFA
 39439                           tblptru	equ	0xFF8
 39440                           tblptrh	equ	0xFF7
 39441                           tblptrl	equ	0xFF6
 39442                           tablat	equ	0xFF5
 39443                           prodh	equ	0xFF4
 39444                           prodl	equ	0xFF3
 39445                           intcon	equ	0xFF2
 39446                           intcon2	equ	0xFF1
 39447                           intcon3	equ	0xFF0
 39448                           postinc0	equ	0xFEE
 39449                           wreg	equ	0xFE8
 39450                           indf1	equ	0xFE7
 39451                           postinc1	equ	0xFE6
 39452                           postdec1	equ	0xFE5
 39453                           plusw1	equ	0xFE3
 39454                           fsr1h	equ	0xFE2
 39455                           fsr1l	equ	0xFE1
 39456                           indf2	equ	0xFDF
 39457                           postinc2	equ	0xFDE
 39458                           postdec2	equ	0xFDD
 39459                           plusw2	equ	0xFDB
 39460                           fsr2h	equ	0xFDA
 39461                           fsr2l	equ	0xFD9
 39462                           status	equ	0xFD8
 39463                           
 39464 ;; *************** function _i2c_eeprom_write *****************
 39465 ;; Defined at:
 39466 ;;		line 542 in file "i2c.c"
 39467 ;; Parameters:    Size  Location     Type
 39468 ;;  address         2   10[BANK0 ] unsigned int 
 39469 ;;  data            2   12[BANK0 ] PTR unsigned char 
 39470 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 39471 ;;  length          1   14[BANK0 ] unsigned char 
 39472 ;; Auto vars:     Size  Location     Type
 39473 ;;  dat            17   18[BANK0 ] unsigned char [17]
 39474 ;;  cntr            1   36[BANK0 ] unsigned char 
 39475 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 39476 ;; Return value:  Size  Location     Type
 39477 ;;                  1    wreg      void 
 39478 ;; Registers used:
 39479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39480 ;; Tracked objects:
 39481 ;;		On entry : 0/0
 39482 ;;		On exit  : 0/0
 39483 ;;		Unchanged: 0/0
 39484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39485 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39486 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39487 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39488 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39489 ;;Total ram usage:       27 bytes
 39490 ;; Hardware stack levels used:    1
 39491 ;; Hardware stack levels required when called:   12
 39492 ;; This function calls:
 39493 ;;		__i2c_write
 39494 ;;		_i2c_set_frequency
 39495 ;; This function is called by:
 39496 ;;		__write_calibration
 39497 ;;		_rtcc_write_eeprom
 39498 ;; This function uses a non-reentrant model
 39499 ;;
 39500                           
 39501                           	psect	text171
 39502  0113D4                     __ptext171:
 39503                           	opt stack 0
 39504  0113D4                     _i2c_eeprom_write:
 39505                           	opt stack 15
 39506                           
 39507                           ;i2c.c: 544: uint8_t cntr;
 39508                           ;i2c.c: 545: uint8_t slave_address;
 39509                           ;i2c.c: 546: uint8_t dat[17];
 39510                           ;i2c.c: 548: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 39511                           
 39512                           ;incstack = 0
 39513  0113D4  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 39514  0113D8  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 39515  0113DC  0E07               	movlw	7
 39516  0113DE  0100               	movlb	0	; () banked
 39517  0113E0  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 39518  0113E2                     u17785:
 39519  0113E2  0100               	movlb	0	; () banked
 39520  0113E4  90D8               	bcf	status,0,c
 39521  0113E6  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 39522  0113E8  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 39523  0113EA  0100               	movlb	0	; () banked
 39524  0113EC  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 39525  0113EE  D7F9               	goto	u17785
 39526  0113F0  0100               	movlb	0	; () banked
 39527  0113F2  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 39528  0113F4  0B0E               	andlw	14
 39529  0113F6  09A0               	iorlw	160
 39530  0113F8  0100               	movlb	0	; () banked
 39531  0113FA  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 39532                           
 39533                           ; BSR set to: 0
 39534                           ;i2c.c: 549: dat[0] = address & 0xFF;
 39535  0113FC  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 39536                           
 39537                           ;i2c.c: 551: length &= 0b00001111;
 39538  011400  0E0F               	movlw	15
 39539  011402  0100               	movlb	0	; () banked
 39540  011404  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 39541                           
 39542                           ; BSR set to: 0
 39543                           ;i2c.c: 552: for(cntr=0; cntr<length; ++cntr)
 39544  011406  0E00               	movlw	0
 39545  011408  0100               	movlb	0	; () banked
 39546  01140A  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 39547  01140C  D021               	goto	l18775
 39548  01140E                     l18771:
 39549                           
 39550                           ; BSR set to: 0
 39551                           ;i2c.c: 553: {
 39552                           ;i2c.c: 554: dat[cntr+1] = data[cntr];
 39553  01140E  0100               	movlb	0	; () banked
 39554  011410  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 39555  011412  0D01               	mullw	1
 39556  011414  50F3               	movf	prodl,w,c
 39557  011416  0100               	movlb	0	; () banked
 39558  011418  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 39559  01141A  6ED9               	movwf	fsr2l,c
 39560  01141C  50F4               	movf	prodh,w,c
 39561  01141E  0100               	movlb	0	; () banked
 39562  011420  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 39563  011422  6EDA               	movwf	fsr2h,c
 39564  011424  0100               	movlb	0	; () banked
 39565  011426  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 39566  011428  0100               	movlb	0	; () banked
 39567  01142A  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 39568  01142C  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 39569  01142E  0E01               	movlw	1
 39570  011430  0100               	movlb	0	; () banked
 39571  011432  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 39572  011434  0E00               	movlw	0
 39573  011436  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 39574  011438  0E72               	movlw	low i2c_eeprom_write@dat
 39575  01143A  0100               	movlb	0	; () banked
 39576  01143C  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 39577  01143E  6EE1               	movwf	fsr1l,c
 39578  011440  0E00               	movlw	high i2c_eeprom_write@dat
 39579  011442  0100               	movlb	0	; () banked
 39580  011444  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 39581  011446  6EE2               	movwf	fsr1h,c
 39582  011448  CFDF FFE7          	movff	indf2,indf1
 39583                           
 39584                           ; BSR set to: 0
 39585  01144C  0100               	movlb	0	; () banked
 39586  01144E  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 39587  011450                     l18775:
 39588                           
 39589                           ; BSR set to: 0
 39590  011450  0100               	movlb	0	; () banked
 39591  011452  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 39592  011454  0100               	movlb	0	; () banked
 39593  011456  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 39594  011458  A0D8               	btfss	status,0,c
 39595  01145A  D7D9               	goto	l18771
 39596                           
 39597                           ; BSR set to: 0
 39598                           ;i2c.c: 555: }
 39599                           ;i2c.c: 558: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 39600                           
 39601                           ; BSR set to: 0
 39602  01145C  0E02               	movlw	2
 39603  01145E  ECE3  F093         	call	_i2c_set_frequency
 39604                           
 39605                           ;i2c.c: 560: _i2c_write(slave_address, &dat[0], length+1);
 39606  011462  0E72               	movlw	low i2c_eeprom_write@dat
 39607  011464  0100               	movlb	0	; () banked
 39608  011466  6F65               	movwf	__i2c_write@data& (0+255),b
 39609  011468  0E00               	movlw	high i2c_eeprom_write@dat
 39610  01146A  0100               	movlb	0	; () banked
 39611  01146C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 39612  01146E  0100               	movlb	0	; () banked
 39613  011470  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 39614  011472  0100               	movlb	0	; () banked
 39615  011474  6F67               	movwf	__i2c_write@length& (0+255),b
 39616  011476  0100               	movlb	0	; () banked
 39617  011478  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 39618  01147A  EC93  F098         	call	__i2c_write
 39619  01147E  0012               	return		;funcret
 39620  011480                     __end_of_i2c_eeprom_write:
 39621                           	opt stack 0
 39622                           tosu	equ	0xFFF
 39623                           tosh	equ	0xFFE
 39624                           tosl	equ	0xFFD
 39625                           pclath	equ	0xFFA
 39626                           tblptru	equ	0xFF8
 39627                           tblptrh	equ	0xFF7
 39628                           tblptrl	equ	0xFF6
 39629                           tablat	equ	0xFF5
 39630                           prodh	equ	0xFF4
 39631                           prodl	equ	0xFF3
 39632                           intcon	equ	0xFF2
 39633                           intcon2	equ	0xFF1
 39634                           intcon3	equ	0xFF0
 39635                           postinc0	equ	0xFEE
 39636                           wreg	equ	0xFE8
 39637                           indf1	equ	0xFE7
 39638                           postinc1	equ	0xFE6
 39639                           postdec1	equ	0xFE5
 39640                           plusw1	equ	0xFE3
 39641                           fsr1h	equ	0xFE2
 39642                           fsr1l	equ	0xFE1
 39643                           indf2	equ	0xFDF
 39644                           postinc2	equ	0xFDE
 39645                           postdec2	equ	0xFDD
 39646                           plusw2	equ	0xFDB
 39647                           fsr2h	equ	0xFDA
 39648                           fsr2l	equ	0xFD9
 39649                           status	equ	0xFD8
 39650                           
 39651 ;; *************** function _i2c_set_frequency *****************
 39652 ;; Defined at:
 39653 ;;		line 107 in file "i2c.c"
 39654 ;; Parameters:    Size  Location     Type
 39655 ;;  frequency       1    wreg     enum E8213
 39656 ;; Auto vars:     Size  Location     Type
 39657 ;;  frequency       1    0[BANK0 ] enum E8213
 39658 ;; Return value:  Size  Location     Type
 39659 ;;                  1    wreg      void 
 39660 ;; Registers used:
 39661 ;;		wreg, status,2, status,0
 39662 ;; Tracked objects:
 39663 ;;		On entry : 0/0
 39664 ;;		On exit  : 0/0
 39665 ;;		Unchanged: 0/0
 39666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39668 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39670 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39671 ;;Total ram usage:        1 bytes
 39672 ;; Hardware stack levels used:    1
 39673 ;; Hardware stack levels required when called:   10
 39674 ;; This function calls:
 39675 ;;		Nothing
 39676 ;; This function is called by:
 39677 ;;		_i2c_init
 39678 ;;		_i2c_display_send_init_sequence
 39679 ;;		__ic2_display_set_address
 39680 ;;		_i2c_display_cursor
 39681 ;;		_i2c_display_write_fixed
 39682 ;;		_i2c_digipot_reset_on
 39683 ;;		_i2c_digipot_reset_off
 39684 ;;		_i2c_digipot_backlight
 39685 ;;		_i2c_adc_start
 39686 ;;		_i2c_adc_read
 39687 ;;		_i2c_eeprom_write
 39688 ;;		_i2c_eeprom_read
 39689 ;;		_i2c_display_init
 39690 ;;		_i2c_display_write
 39691 ;;		_i2c_digipot_set_defaults
 39692 ;;		_i2c_eeprom_writeByte
 39693 ;;		_i2c_eeprom_readByte
 39694 ;; This function uses a non-reentrant model
 39695 ;;
 39696                           
 39697                           	psect	text172
 39698  0127C6                     __ptext172:
 39699                           	opt stack 0
 39700  0127C6                     _i2c_set_frequency:
 39701                           	opt stack 18
 39702                           
 39703                           ;incstack = 0
 39704                           ;i2c_set_frequency@frequency stored from wreg
 39705  0127C6  0100               	movlb	0	; () banked
 39706  0127C8  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 39707                           
 39708                           ;i2c.c: 109: switch(os.clockFrequency)
 39709  0127CA  D027               	goto	l18367
 39710  0127CC                     l18343:
 39711                           
 39712                           ;i2c.c: 112: SSP1ADD = 0;
 39713  0127CC  0E00               	movlw	0
 39714  0127CE  D017               	goto	L48
 39715  0127D0                     l18345:
 39716                           
 39717                           ;i2c.c: 118: SSP1ADD = 19;
 39718  0127D0  0E13               	movlw	19
 39719  0127D2  D015               	goto	L48
 39720  0127D4                     l18347:
 39721                           
 39722                           ;i2c.c: 121: SSP1ADD = 9;
 39723  0127D4  0E09               	movlw	9
 39724  0127D6  D013               	goto	L48
 39725  0127D8                     l18349:
 39726                           
 39727                           ;i2c.c: 124: SSP1ADD = 4;
 39728  0127D8  0E04               	movlw	4
 39729  0127DA  D011               	goto	L48
 39730  0127DC                     l18353:
 39731  0127DC  0100               	movlb	0	; () banked
 39732  0127DE  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 39733                           
 39734                           ; Switch size 1, requested type "space"
 39735                           ; Number of cases is 3, Range of values is 0 to 2
 39736                           ; switch strategies available:
 39737                           ; Name         Instructions Cycles
 39738                           ; simple_byte           10     6 (average)
 39739                           ;	Chosen strategy is simple_byte
 39740  0127E0  0A00               	xorlw	0	; case 0
 39741  0127E2  B4D8               	btfsc	status,2,c
 39742  0127E4  D7F5               	goto	l18345
 39743  0127E6  0A01               	xorlw	1	; case 1
 39744  0127E8  B4D8               	btfsc	status,2,c
 39745  0127EA  D7F4               	goto	l18347
 39746  0127EC  0A03               	xorlw	3	; case 2
 39747  0127EE  B4D8               	btfsc	status,2,c
 39748  0127F0  D7F3               	goto	l18349
 39749                           
 39750                           ; BSR set to: 0
 39751                           ;i2c.c: 127: break;
 39752  0127F2  D01E               	goto	l1535
 39753  0127F4                     l18355:
 39754                           
 39755                           ; BSR set to: 0
 39756                           ;i2c.c: 132: SSP1ADD = 119;
 39757  0127F4  0E77               	movlw	119
 39758  0127F6  D003               	goto	L48
 39759  0127F8                     l18357:
 39760                           
 39761                           ; BSR set to: 0
 39762                           ;i2c.c: 135: SSP1ADD = 59;
 39763  0127F8  0E3B               	movlw	59
 39764  0127FA  D001               	goto	L48
 39765  0127FC                     l18359:
 39766                           
 39767                           ; BSR set to: 0
 39768                           ;i2c.c: 138: SSP1ADD = 29;
 39769  0127FC  0E1D               	movlw	29
 39770  0127FE                     L48:
 39771  0127FE  6EC8               	movwf	4040,c	;volatile
 39772                           
 39773                           ; BSR set to: 0
 39774                           ;i2c.c: 140: }
 39775                           
 39776                           ;i2c.c: 139: break;
 39777  012800  D017               	goto	l1535
 39778  012802                     l18363:
 39779  012802  0100               	movlb	0	; () banked
 39780  012804  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 39781                           
 39782                           ; Switch size 1, requested type "space"
 39783                           ; Number of cases is 3, Range of values is 0 to 2
 39784                           ; switch strategies available:
 39785                           ; Name         Instructions Cycles
 39786                           ; simple_byte           10     6 (average)
 39787                           ;	Chosen strategy is simple_byte
 39788  012806  0A00               	xorlw	0	; case 0
 39789  012808  B4D8               	btfsc	status,2,c
 39790  01280A  D7F4               	goto	l18355
 39791  01280C  0A01               	xorlw	1	; case 1
 39792  01280E  B4D8               	btfsc	status,2,c
 39793  012810  D7F3               	goto	l18357
 39794  012812  0A03               	xorlw	3	; case 2
 39795  012814  B4D8               	btfsc	status,2,c
 39796  012816  D7F2               	goto	l18359
 39797                           
 39798                           ; BSR set to: 0
 39799                           ;i2c.c: 142: }
 39800                           
 39801                           ; BSR set to: 0
 39802                           ;i2c.c: 141: break;
 39803  012818  D00B               	goto	l1535
 39804  01281A                     l18367:
 39805  01281A  0102               	movlb	2	; () banked
 39806  01281C  5100               	movf	_os& (0+255),w,b	;volatile
 39807                           
 39808                           ; Switch size 1, requested type "space"
 39809                           ; Number of cases is 3, Range of values is 0 to 2
 39810                           ; switch strategies available:
 39811                           ; Name         Instructions Cycles
 39812                           ; simple_byte           10     6 (average)
 39813                           ;	Chosen strategy is simple_byte
 39814  01281E  0A00               	xorlw	0	; case 0
 39815  012820  B4D8               	btfsc	status,2,c
 39816  012822  D7D4               	goto	l18343
 39817  012824  0A01               	xorlw	1	; case 1
 39818  012826  B4D8               	btfsc	status,2,c
 39819  012828  D7D9               	goto	l18353
 39820  01282A  0A03               	xorlw	3	; case 2
 39821  01282C  B4D8               	btfsc	status,2,c
 39822  01282E  D7E9               	goto	l18363
 39823  012830                     l1535:
 39824                           
 39825                           ;i2c.c: 144: i2c_frequency = frequency;
 39826  012830  C060  F1F4         	movff	i2c_set_frequency@frequency,_i2c_frequency
 39827  012834  0012               	return		;funcret
 39828  012836                     __end_of_i2c_set_frequency:
 39829                           	opt stack 0
 39830                           tosu	equ	0xFFF
 39831                           tosh	equ	0xFFE
 39832                           tosl	equ	0xFFD
 39833                           pclath	equ	0xFFA
 39834                           tblptru	equ	0xFF8
 39835                           tblptrh	equ	0xFF7
 39836                           tblptrl	equ	0xFF6
 39837                           tablat	equ	0xFF5
 39838                           prodh	equ	0xFF4
 39839                           prodl	equ	0xFF3
 39840                           intcon	equ	0xFF2
 39841                           intcon2	equ	0xFF1
 39842                           intcon3	equ	0xFF0
 39843                           postinc0	equ	0xFEE
 39844                           wreg	equ	0xFE8
 39845                           indf1	equ	0xFE7
 39846                           postinc1	equ	0xFE6
 39847                           postdec1	equ	0xFE5
 39848                           plusw1	equ	0xFE3
 39849                           fsr1h	equ	0xFE2
 39850                           fsr1l	equ	0xFE1
 39851                           indf2	equ	0xFDF
 39852                           postinc2	equ	0xFDE
 39853                           postdec2	equ	0xFDD
 39854                           plusw2	equ	0xFDB
 39855                           fsr2h	equ	0xFDA
 39856                           fsr2l	equ	0xFD9
 39857                           status	equ	0xFD8
 39858                           
 39859 ;; *************** function __i2c_write *****************
 39860 ;; Defined at:
 39861 ;;		line 148 in file "i2c.c"
 39862 ;; Parameters:    Size  Location     Type
 39863 ;;  slave_addres    1    wreg     unsigned char 
 39864 ;;  data            2    5[BANK0 ] PTR unsigned char 
 39865 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 39866 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 39867 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 39868 ;;  length          1    7[BANK0 ] unsigned char 
 39869 ;; Auto vars:     Size  Location     Type
 39870 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 39871 ;;  cntr            1    9[BANK0 ] unsigned char 
 39872 ;; Return value:  Size  Location     Type
 39873 ;;                  1    wreg      void 
 39874 ;; Registers used:
 39875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39876 ;; Tracked objects:
 39877 ;;		On entry : 0/0
 39878 ;;		On exit  : 0/0
 39879 ;;		Unchanged: 0/0
 39880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39881 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39884 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39885 ;;Total ram usage:        5 bytes
 39886 ;; Hardware stack levels used:    1
 39887 ;; Hardware stack levels required when called:   11
 39888 ;; This function calls:
 39889 ;;		__i2c_send
 39890 ;;		__i2c_start
 39891 ;;		__i2c_stop
 39892 ;;		__i2c_wait_idle
 39893 ;; This function is called by:
 39894 ;;		_i2c_display_send_init_sequence
 39895 ;;		__ic2_display_set_address
 39896 ;;		_i2c_digipot_reset_on
 39897 ;;		_i2c_digipot_reset_off
 39898 ;;		_i2c_digipot_backlight
 39899 ;;		_i2c_adc_start
 39900 ;;		_i2c_eeprom_write
 39901 ;;		_i2c_eeprom_read
 39902 ;;		_i2c_display_init
 39903 ;;		_i2c_digipot_set_defaults
 39904 ;;		_i2c_eeprom_writeByte
 39905 ;;		_i2c_eeprom_readByte
 39906 ;; This function uses a non-reentrant model
 39907 ;;
 39908                           
 39909                           	psect	text173
 39910  013126                     __ptext173:
 39911                           	opt stack 0
 39912  013126                     __i2c_write:
 39913                           	opt stack 17
 39914                           
 39915                           ;incstack = 0
 39916                           ;__i2c_write@slave_address stored from wreg
 39917  013126  0100               	movlb	0	; () banked
 39918  013128  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 39919                           
 39920                           ;i2c.c: 150: uint8_t cntr;
 39921                           ;i2c.c: 152: _i2c_wait_idle();
 39922  01312A  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 39923                           
 39924                           ;i2c.c: 153: _i2c_start();
 39925  01312E  EC6D  F0A1         	call	__i2c_start	;wreg free
 39926                           
 39927                           ;i2c.c: 154: _i2c_wait_idle();
 39928  013132  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 39929                           
 39930                           ;i2c.c: 155: _i2c_send(slave_address);
 39931  013136  0100               	movlb	0	; () banked
 39932  013138  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 39933  01313A  EC64  F0A1         	call	__i2c_send
 39934                           
 39935                           ;i2c.c: 156: _i2c_wait_idle();
 39936  01313E  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 39937                           
 39938                           ;i2c.c: 158: for(cntr=0; cntr<length; ++cntr)
 39939  013142  0E00               	movlw	0
 39940  013144  0100               	movlb	0	; () banked
 39941  013146  6F69               	movwf	__i2c_write@cntr& (0+255),b
 39942  013148  D012               	goto	l18387
 39943  01314A                     l18381:
 39944                           
 39945                           ; BSR set to: 0
 39946                           ;i2c.c: 159: {
 39947                           ;i2c.c: 160: _i2c_send(data[cntr]);
 39948  01314A  0100               	movlb	0	; () banked
 39949  01314C  5169               	movf	__i2c_write@cntr& (0+255),w,b
 39950  01314E  0D01               	mullw	1
 39951  013150  50F3               	movf	prodl,w,c
 39952  013152  0100               	movlb	0	; () banked
 39953  013154  2565               	addwf	__i2c_write@data& (0+255),w,b
 39954  013156  6ED9               	movwf	fsr2l,c
 39955  013158  50F4               	movf	prodh,w,c
 39956  01315A  0100               	movlb	0	; () banked
 39957  01315C  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 39958  01315E  6EDA               	movwf	fsr2h,c
 39959  013160  50DF               	movf	indf2,w,c
 39960  013162  EC64  F0A1         	call	__i2c_send
 39961                           
 39962                           ;i2c.c: 161: _i2c_wait_idle();
 39963  013166  ECFE  F092         	call	__i2c_wait_idle	;wreg free
 39964  01316A  0100               	movlb	0	; () banked
 39965  01316C  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 39966  01316E                     l18387:
 39967                           
 39968                           ; BSR set to: 0
 39969  01316E  0100               	movlb	0	; () banked
 39970  013170  5167               	movf	__i2c_write@length& (0+255),w,b
 39971  013172  0100               	movlb	0	; () banked
 39972  013174  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 39973  013176  A0D8               	btfss	status,0,c
 39974  013178  D7E8               	goto	l18381
 39975                           
 39976                           ; BSR set to: 0
 39977                           ;i2c.c: 162: }
 39978                           ;i2c.c: 164: _i2c_stop();
 39979                           
 39980                           ; BSR set to: 0
 39981  01317A  EC69  F0A1         	call	__i2c_stop	;wreg free
 39982  01317E  0012               	return		;funcret
 39983  013180                     __end_of__i2c_write:
 39984                           	opt stack 0
 39985                           tosu	equ	0xFFF
 39986                           tosh	equ	0xFFE
 39987                           tosl	equ	0xFFD
 39988                           pclath	equ	0xFFA
 39989                           tblptru	equ	0xFF8
 39990                           tblptrh	equ	0xFF7
 39991                           tblptrl	equ	0xFF6
 39992                           tablat	equ	0xFF5
 39993                           prodh	equ	0xFF4
 39994                           prodl	equ	0xFF3
 39995                           intcon	equ	0xFF2
 39996                           intcon2	equ	0xFF1
 39997                           intcon3	equ	0xFF0
 39998                           postinc0	equ	0xFEE
 39999                           wreg	equ	0xFE8
 40000                           indf1	equ	0xFE7
 40001                           postinc1	equ	0xFE6
 40002                           postdec1	equ	0xFE5
 40003                           plusw1	equ	0xFE3
 40004                           fsr1h	equ	0xFE2
 40005                           fsr1l	equ	0xFE1
 40006                           indf2	equ	0xFDF
 40007                           postinc2	equ	0xFDE
 40008                           postdec2	equ	0xFDD
 40009                           plusw2	equ	0xFDB
 40010                           fsr2h	equ	0xFDA
 40011                           fsr2l	equ	0xFD9
 40012                           status	equ	0xFD8
 40013                           
 40014 ;; *************** function __i2c_wait_idle *****************
 40015 ;; Defined at:
 40016 ;;		line 45 in file "i2c.c"
 40017 ;; Parameters:    Size  Location     Type
 40018 ;;		None
 40019 ;; Auto vars:     Size  Location     Type
 40020 ;;		None
 40021 ;; Return value:  Size  Location     Type
 40022 ;;                  1    wreg      void 
 40023 ;; Registers used:
 40024 ;;		wreg, status,2, status,0
 40025 ;; Tracked objects:
 40026 ;;		On entry : 0/0
 40027 ;;		On exit  : 0/0
 40028 ;;		Unchanged: 0/0
 40029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40032 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40033 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40034 ;;Total ram usage:        5 bytes
 40035 ;; Hardware stack levels used:    1
 40036 ;; Hardware stack levels required when called:   10
 40037 ;; This function calls:
 40038 ;;		Nothing
 40039 ;; This function is called by:
 40040 ;;		__i2c_write
 40041 ;;		__i2c_read
 40042 ;;		_i2c_display_write_fixed
 40043 ;;		_i2c_adc_read
 40044 ;;		_i2c_display_write
 40045 ;; This function uses a non-reentrant model
 40046 ;;
 40047                           
 40048                           	psect	text174
 40049  0125FC                     __ptext174:
 40050                           	opt stack 0
 40051  0125FC                     __i2c_wait_idle:
 40052                           	opt stack 17
 40053  0125FC                     l11703:
 40054  0125FC  A4C7               	btfss	4039,2,c	;volatile
 40055  0125FE  D004               	goto	u8950
 40056  012600  0100               	movlb	0	; () banked
 40057  012602  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 40058  012604  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 40059  012606  D002               	goto	u8958
 40060  012608                     u8950:
 40061  012608  0100               	movlb	0	; () banked
 40062  01260A  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 40063  01260C                     u8958:
 40064  01260C  A0C5               	btfss	4037,0,c	;volatile
 40065  01260E  D004               	goto	u8960
 40066  012610  0100               	movlb	0	; () banked
 40067  012612  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 40068  012614  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 40069  012616  D002               	goto	u8968
 40070  012618                     u8960:
 40071  012618  0100               	movlb	0	; () banked
 40072  01261A  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 40073  01261C                     u8968:
 40074  01261C  A2C5               	btfss	4037,1,c	;volatile
 40075  01261E  D004               	goto	u8970
 40076  012620  0100               	movlb	0	; () banked
 40077  012622  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 40078  012624  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 40079  012626  D002               	goto	u8978
 40080  012628                     u8970:
 40081  012628  0100               	movlb	0	; () banked
 40082  01262A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 40083  01262C                     u8978:
 40084  01262C  A4C5               	btfss	4037,2,c	;volatile
 40085  01262E  D004               	goto	u8980
 40086  012630  0100               	movlb	0	; () banked
 40087  012632  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 40088  012634  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 40089  012636  D002               	goto	u8988
 40090  012638                     u8980:
 40091  012638  0100               	movlb	0	; () banked
 40092  01263A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 40093  01263C                     u8988:
 40094  01263C  A6C5               	btfss	4037,3,c	;volatile
 40095  01263E  D004               	goto	u8990
 40096  012640  0100               	movlb	0	; () banked
 40097  012642  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 40098  012644  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 40099  012646  D002               	goto	u8998
 40100  012648                     u8990:
 40101  012648  0100               	movlb	0	; () banked
 40102  01264A  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 40103  01264C                     u8998:
 40104  01264C  A8C5               	btfss	4037,4,c	;volatile
 40105  01264E  D002               	goto	u9000
 40106  012650  0E01               	movlw	1
 40107  012652  D001               	goto	u9006
 40108  012654                     u9000:
 40109  012654  0E00               	movlw	0
 40110  012656                     u9006:
 40111  012656  0100               	movlb	0	; () banked
 40112  012658  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 40113  01265A  0100               	movlb	0	; () banked
 40114  01265C  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 40115  01265E  0100               	movlb	0	; () banked
 40116  012660  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 40117  012662  0100               	movlb	0	; () banked
 40118  012664  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 40119  012666  0100               	movlb	0	; () banked
 40120  012668  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 40121  01266A  0900               	iorlw	0
 40122  01266C  B4D8               	btfsc	status,2,c
 40123  01266E  0012               	return	
 40124  012670  D7C5               	goto	l11703
 40125  012672                     __end_of__i2c_wait_idle:
 40126                           	opt stack 0
 40127                           tosu	equ	0xFFF
 40128                           tosh	equ	0xFFE
 40129                           tosl	equ	0xFFD
 40130                           pclath	equ	0xFFA
 40131                           tblptru	equ	0xFF8
 40132                           tblptrh	equ	0xFF7
 40133                           tblptrl	equ	0xFF6
 40134                           tablat	equ	0xFF5
 40135                           prodh	equ	0xFF4
 40136                           prodl	equ	0xFF3
 40137                           intcon	equ	0xFF2
 40138                           intcon2	equ	0xFF1
 40139                           intcon3	equ	0xFF0
 40140                           postinc0	equ	0xFEE
 40141                           wreg	equ	0xFE8
 40142                           indf1	equ	0xFE7
 40143                           postinc1	equ	0xFE6
 40144                           postdec1	equ	0xFE5
 40145                           plusw1	equ	0xFE3
 40146                           fsr1h	equ	0xFE2
 40147                           fsr1l	equ	0xFE1
 40148                           indf2	equ	0xFDF
 40149                           postinc2	equ	0xFDE
 40150                           postdec2	equ	0xFDD
 40151                           plusw2	equ	0xFDB
 40152                           fsr2h	equ	0xFDA
 40153                           fsr2l	equ	0xFD9
 40154                           status	equ	0xFD8
 40155                           
 40156 ;; *************** function __i2c_stop *****************
 40157 ;; Defined at:
 40158 ;;		line 72 in file "i2c.c"
 40159 ;; Parameters:    Size  Location     Type
 40160 ;;		None
 40161 ;; Auto vars:     Size  Location     Type
 40162 ;;		None
 40163 ;; Return value:  Size  Location     Type
 40164 ;;                  1    wreg      void 
 40165 ;; Registers used:
 40166 ;;		None
 40167 ;; Tracked objects:
 40168 ;;		On entry : 0/0
 40169 ;;		On exit  : 0/0
 40170 ;;		Unchanged: 0/0
 40171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40176 ;;Total ram usage:        0 bytes
 40177 ;; Hardware stack levels used:    1
 40178 ;; Hardware stack levels required when called:   10
 40179 ;; This function calls:
 40180 ;;		Nothing
 40181 ;; This function is called by:
 40182 ;;		__i2c_write
 40183 ;;		__i2c_read
 40184 ;;		_i2c_display_write_fixed
 40185 ;;		_i2c_adc_read
 40186 ;;		_i2c_display_write
 40187 ;; This function uses a non-reentrant model
 40188 ;;
 40189                           
 40190                           	psect	text175
 40191  0142D2                     __ptext175:
 40192                           	opt stack 0
 40193  0142D2                     __i2c_stop:
 40194                           	opt stack 17
 40195                           
 40196                           ;i2c.c: 74: SSP1CON2bits.PEN = 1;
 40197                           
 40198                           ; BSR set to: 0
 40199                           ;incstack = 0
 40200  0142D2  84C5               	bsf	4037,2,c	;volatile
 40201  0142D4                     l1509:
 40202  0142D4  A4C5               	btfss	4037,2,c	;volatile
 40203  0142D6  0012               	return	
 40204  0142D8  D7FD               	goto	l1509
 40205  0142DA                     __end_of__i2c_stop:
 40206                           	opt stack 0
 40207                           tosu	equ	0xFFF
 40208                           tosh	equ	0xFFE
 40209                           tosl	equ	0xFFD
 40210                           pclath	equ	0xFFA
 40211                           tblptru	equ	0xFF8
 40212                           tblptrh	equ	0xFF7
 40213                           tblptrl	equ	0xFF6
 40214                           tablat	equ	0xFF5
 40215                           prodh	equ	0xFF4
 40216                           prodl	equ	0xFF3
 40217                           intcon	equ	0xFF2
 40218                           intcon2	equ	0xFF1
 40219                           intcon3	equ	0xFF0
 40220                           postinc0	equ	0xFEE
 40221                           wreg	equ	0xFE8
 40222                           indf1	equ	0xFE7
 40223                           postinc1	equ	0xFE6
 40224                           postdec1	equ	0xFE5
 40225                           plusw1	equ	0xFE3
 40226                           fsr1h	equ	0xFE2
 40227                           fsr1l	equ	0xFE1
 40228                           indf2	equ	0xFDF
 40229                           postinc2	equ	0xFDE
 40230                           postdec2	equ	0xFDD
 40231                           plusw2	equ	0xFDB
 40232                           fsr2h	equ	0xFDA
 40233                           fsr2l	equ	0xFD9
 40234                           status	equ	0xFD8
 40235                           
 40236 ;; *************** function __i2c_start *****************
 40237 ;; Defined at:
 40238 ;;		line 51 in file "i2c.c"
 40239 ;; Parameters:    Size  Location     Type
 40240 ;;		None
 40241 ;; Auto vars:     Size  Location     Type
 40242 ;;		None
 40243 ;; Return value:  Size  Location     Type
 40244 ;;                  1    wreg      void 
 40245 ;; Registers used:
 40246 ;;		None
 40247 ;; Tracked objects:
 40248 ;;		On entry : 0/0
 40249 ;;		On exit  : 0/0
 40250 ;;		Unchanged: 0/0
 40251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40256 ;;Total ram usage:        0 bytes
 40257 ;; Hardware stack levels used:    1
 40258 ;; Hardware stack levels required when called:   10
 40259 ;; This function calls:
 40260 ;;		Nothing
 40261 ;; This function is called by:
 40262 ;;		__i2c_write
 40263 ;;		__i2c_read
 40264 ;;		_i2c_display_write_fixed
 40265 ;;		_i2c_adc_read
 40266 ;;		_i2c_display_write
 40267 ;; This function uses a non-reentrant model
 40268 ;;
 40269                           
 40270                           	psect	text176
 40271  0142DA                     __ptext176:
 40272                           	opt stack 0
 40273  0142DA                     __i2c_start:
 40274                           	opt stack 17
 40275                           
 40276                           ;i2c.c: 53: SSP1CON2bits.SEN=1;
 40277                           
 40278                           ;incstack = 0
 40279  0142DA  80C5               	bsf	4037,0,c	;volatile
 40280  0142DC                     l1494:
 40281  0142DC  A0C5               	btfss	4037,0,c	;volatile
 40282  0142DE  0012               	return	
 40283  0142E0  D7FD               	goto	l1494
 40284  0142E2                     __end_of__i2c_start:
 40285                           	opt stack 0
 40286                           tosu	equ	0xFFF
 40287                           tosh	equ	0xFFE
 40288                           tosl	equ	0xFFD
 40289                           pclath	equ	0xFFA
 40290                           tblptru	equ	0xFF8
 40291                           tblptrh	equ	0xFF7
 40292                           tblptrl	equ	0xFF6
 40293                           tablat	equ	0xFF5
 40294                           prodh	equ	0xFF4
 40295                           prodl	equ	0xFF3
 40296                           intcon	equ	0xFF2
 40297                           intcon2	equ	0xFF1
 40298                           intcon3	equ	0xFF0
 40299                           postinc0	equ	0xFEE
 40300                           wreg	equ	0xFE8
 40301                           indf1	equ	0xFE7
 40302                           postinc1	equ	0xFE6
 40303                           postdec1	equ	0xFE5
 40304                           plusw1	equ	0xFE3
 40305                           fsr1h	equ	0xFE2
 40306                           fsr1l	equ	0xFE1
 40307                           indf2	equ	0xFDF
 40308                           postinc2	equ	0xFDE
 40309                           postdec2	equ	0xFDD
 40310                           plusw2	equ	0xFDB
 40311                           fsr2h	equ	0xFDA
 40312                           fsr2l	equ	0xFD9
 40313                           status	equ	0xFD8
 40314                           
 40315 ;; *************** function __i2c_send *****************
 40316 ;; Defined at:
 40317 ;;		line 58 in file "i2c.c"
 40318 ;; Parameters:    Size  Location     Type
 40319 ;;  dat             1    wreg     unsigned char 
 40320 ;; Auto vars:     Size  Location     Type
 40321 ;;  dat             1    0[BANK0 ] unsigned char 
 40322 ;; Return value:  Size  Location     Type
 40323 ;;                  1    wreg      void 
 40324 ;; Registers used:
 40325 ;;		wreg
 40326 ;; Tracked objects:
 40327 ;;		On entry : 0/0
 40328 ;;		On exit  : 0/0
 40329 ;;		Unchanged: 0/0
 40330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40335 ;;Total ram usage:        1 bytes
 40336 ;; Hardware stack levels used:    1
 40337 ;; Hardware stack levels required when called:   10
 40338 ;; This function calls:
 40339 ;;		Nothing
 40340 ;; This function is called by:
 40341 ;;		__i2c_write
 40342 ;;		__i2c_read
 40343 ;;		_i2c_display_write_fixed
 40344 ;;		_i2c_adc_read
 40345 ;;		_i2c_display_write
 40346 ;; This function uses a non-reentrant model
 40347 ;;
 40348                           
 40349                           	psect	text177
 40350  0142C8                     __ptext177:
 40351                           	opt stack 0
 40352  0142C8                     __i2c_send:
 40353                           	opt stack 17
 40354                           
 40355                           ;incstack = 0
 40356                           ;__i2c_send@dat stored from wreg
 40357  0142C8  0100               	movlb	0	; () banked
 40358  0142CA  6F60               	movwf	__i2c_send@dat& (0+255),b
 40359                           
 40360                           ;i2c.c: 60: SSP1BUF = dat;
 40361  0142CC  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 40362  0142D0  0012               	return		;funcret
 40363  0142D2                     __end_of__i2c_send:
 40364                           	opt stack 0
 40365                           tosu	equ	0xFFF
 40366                           tosh	equ	0xFFE
 40367                           tosl	equ	0xFFD
 40368                           pclath	equ	0xFFA
 40369                           tblptru	equ	0xFF8
 40370                           tblptrh	equ	0xFF7
 40371                           tblptrl	equ	0xFF6
 40372                           tablat	equ	0xFF5
 40373                           prodh	equ	0xFF4
 40374                           prodl	equ	0xFF3
 40375                           intcon	equ	0xFF2
 40376                           intcon2	equ	0xFF1
 40377                           intcon3	equ	0xFF0
 40378                           postinc0	equ	0xFEE
 40379                           wreg	equ	0xFE8
 40380                           indf1	equ	0xFE7
 40381                           postinc1	equ	0xFE6
 40382                           postdec1	equ	0xFE5
 40383                           plusw1	equ	0xFE3
 40384                           fsr1h	equ	0xFE2
 40385                           fsr1l	equ	0xFE1
 40386                           indf2	equ	0xFDF
 40387                           postinc2	equ	0xFDE
 40388                           postdec2	equ	0xFDD
 40389                           plusw2	equ	0xFDB
 40390                           fsr2h	equ	0xFDA
 40391                           fsr2l	equ	0xFD9
 40392                           status	equ	0xFD8
 40393                           
 40394 ;; *************** function __parse_command_long *****************
 40395 ;; Defined at:
 40396 ;;		line 453 in file "app_device_custom_hid.c"
 40397 ;; Parameters:    Size  Location     Type
 40398 ;;  cmd             1    wreg     unsigned char 
 40399 ;;  data            1    3[BANK0 ] unsigned char 
 40400 ;; Auto vars:     Size  Location     Type
 40401 ;;  cmd             1    4[BANK0 ] unsigned char 
 40402 ;; Return value:  Size  Location     Type
 40403 ;;                  1    wreg      void 
 40404 ;; Registers used:
 40405 ;;		wreg, status,2, status,0, cstack
 40406 ;; Tracked objects:
 40407 ;;		On entry : 0/0
 40408 ;;		On exit  : 0/0
 40409 ;;		Unchanged: 0/0
 40410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40411 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40415 ;;Total ram usage:        2 bytes
 40416 ;; Hardware stack levels used:    1
 40417 ;; Hardware stack levels required when called:   12
 40418 ;; This function calls:
 40419 ;;		_buck_remote_change_dutycycle
 40420 ;;		_buck_remote_set_dutycycle
 40421 ;;		_buck_remote_set_enable
 40422 ;;		_buck_remote_set_on
 40423 ;;		_buck_remote_set_synchronous
 40424 ;;		_rtcc_set_day
 40425 ;;		_rtcc_set_hours
 40426 ;;		_rtcc_set_minutes
 40427 ;;		_rtcc_set_month
 40428 ;;		_rtcc_set_seconds
 40429 ;;		_rtcc_set_year
 40430 ;; This function is called by:
 40431 ;;		_APP_DeviceCustomHIDTasks
 40432 ;; This function uses a non-reentrant model
 40433 ;;
 40434                           
 40435                           	psect	text178
 40436  010326                     __ptext178:
 40437                           	opt stack 0
 40438  010326                     __parse_command_long:
 40439                           	opt stack 17
 40440                           
 40441                           ;incstack = 0
 40442                           ;__parse_command_long@cmd stored from wreg
 40443  010326  0100               	movlb	0	; () banked
 40444  010328  6F64               	movwf	__parse_command_long@cmd& (0+255),b
 40445                           
 40446                           ;app_device_custom_hid.c: 455: switch(cmd)
 40447  01032A  D043               	goto	l20653
 40448  01032C                     l20621:
 40449                           
 40450                           ;app_device_custom_hid.c: 458: rtcc_set_year(data);
 40451  01032C  0100               	movlb	0	; () banked
 40452  01032E  5163               	movf	__parse_command_long@data& (0+255),w,b
 40453  010330  EC0C  F0A0         	call	_rtcc_set_year
 40454                           
 40455                           ;app_device_custom_hid.c: 459: break;
 40456  010334  0012               	return	
 40457  010336                     l20623:
 40458                           
 40459                           ;app_device_custom_hid.c: 461: rtcc_set_month(data);
 40460  010336  0100               	movlb	0	; () banked
 40461  010338  5163               	movf	__parse_command_long@data& (0+255),w,b
 40462  01033A  EC26  F0A0         	call	_rtcc_set_month
 40463                           
 40464                           ;app_device_custom_hid.c: 462: break;
 40465  01033E  0012               	return	
 40466  010340                     l20625:
 40467                           
 40468                           ;app_device_custom_hid.c: 464: rtcc_set_day(data);
 40469  010340  0100               	movlb	0	; () banked
 40470  010342  5163               	movf	__parse_command_long@data& (0+255),w,b
 40471  010344  EC4D  F0A0         	call	_rtcc_set_day
 40472                           
 40473                           ;app_device_custom_hid.c: 465: break;
 40474  010348  0012               	return	
 40475  01034A                     l20627:
 40476                           
 40477                           ;app_device_custom_hid.c: 467: rtcc_set_hours(data);
 40478  01034A  0100               	movlb	0	; () banked
 40479  01034C  5163               	movf	__parse_command_long@data& (0+255),w,b
 40480  01034E  EC40  F0A0         	call	_rtcc_set_hours
 40481                           
 40482                           ;app_device_custom_hid.c: 468: break;
 40483  010352  0012               	return	
 40484  010354                     l20629:
 40485                           
 40486                           ;app_device_custom_hid.c: 470: rtcc_set_minutes(data);
 40487  010354  0100               	movlb	0	; () banked
 40488  010356  5163               	movf	__parse_command_long@data& (0+255),w,b
 40489  010358  EC33  F0A0         	call	_rtcc_set_minutes
 40490                           
 40491                           ;app_device_custom_hid.c: 471: break;
 40492  01035C  0012               	return	
 40493  01035E                     l20631:
 40494                           
 40495                           ;app_device_custom_hid.c: 473: rtcc_set_seconds(data);
 40496  01035E  0100               	movlb	0	; () banked
 40497  010360  5163               	movf	__parse_command_long@data& (0+255),w,b
 40498  010362  EC19  F0A0         	call	_rtcc_set_seconds
 40499                           
 40500                           ;app_device_custom_hid.c: 474: break;
 40501  010366  0012               	return	
 40502  010368                     l20633:
 40503                           
 40504                           ;app_device_custom_hid.c: 476: buck_remote_set_enable(1);
 40505  010368  0E01               	movlw	1
 40506  01036A  ECC5  F09F         	call	_buck_remote_set_enable
 40507                           
 40508                           ;app_device_custom_hid.c: 477: break;
 40509  01036E  0012               	return	
 40510  010370                     l20635:
 40511                           
 40512                           ;app_device_custom_hid.c: 479: buck_remote_set_enable(0);
 40513  010370  0E00               	movlw	0
 40514  010372  ECC5  F09F         	call	_buck_remote_set_enable
 40515                           
 40516                           ;app_device_custom_hid.c: 480: break;
 40517  010376  0012               	return	
 40518  010378                     l20637:
 40519                           
 40520                           ;app_device_custom_hid.c: 482: buck_remote_set_on(1);
 40521  010378  0E01               	movlw	1
 40522  01037A  ECB6  F09F         	call	_buck_remote_set_on
 40523                           
 40524                           ;app_device_custom_hid.c: 483: break;
 40525  01037E  0012               	return	
 40526  010380                     l20639:
 40527                           
 40528                           ;app_device_custom_hid.c: 485: buck_remote_set_on(0);
 40529  010380  0E00               	movlw	0
 40530  010382  ECB6  F09F         	call	_buck_remote_set_on
 40531                           
 40532                           ;app_device_custom_hid.c: 486: break;
 40533  010386  0012               	return	
 40534  010388                     l20641:
 40535                           
 40536                           ;app_device_custom_hid.c: 488: buck_remote_set_synchronous(0);
 40537  010388  0E00               	movlw	0
 40538  01038A  ECA7  F09F         	call	_buck_remote_set_synchronous
 40539                           
 40540                           ;app_device_custom_hid.c: 489: break;
 40541  01038E  0012               	return	
 40542  010390                     l20643:
 40543                           
 40544                           ;app_device_custom_hid.c: 491: buck_remote_set_synchronous(1);
 40545  010390  0E01               	movlw	1
 40546  010392  ECA7  F09F         	call	_buck_remote_set_synchronous
 40547                           
 40548                           ;app_device_custom_hid.c: 492: break;
 40549  010396  0012               	return	
 40550  010398                     l20645:
 40551                           
 40552                           ;app_device_custom_hid.c: 494: buck_remote_change_dutycycle(-1);
 40553  010398  0EFF               	movlw	255
 40554  01039A  ECBC  F096         	call	_buck_remote_change_dutycycle
 40555                           
 40556                           ;app_device_custom_hid.c: 495: break;
 40557  01039E  0012               	return	
 40558  0103A0                     l20647:
 40559                           
 40560                           ;app_device_custom_hid.c: 497: buck_remote_change_dutycycle(1);
 40561  0103A0  0E01               	movlw	1
 40562  0103A2  ECBC  F096         	call	_buck_remote_change_dutycycle
 40563                           
 40564                           ;app_device_custom_hid.c: 498: break;
 40565  0103A6  0012               	return	
 40566  0103A8                     l20649:
 40567                           
 40568                           ;app_device_custom_hid.c: 500: buck_remote_set_dutycycle(data);
 40569  0103A8  0100               	movlb	0	; () banked
 40570  0103AA  5163               	movf	__parse_command_long@data& (0+255),w,b
 40571  0103AC  EC0F  F09F         	call	_buck_remote_set_dutycycle
 40572                           
 40573                           ;app_device_custom_hid.c: 502: }
 40574                           
 40575                           ;app_device_custom_hid.c: 501: break;
 40576  0103B0  0012               	return	
 40577  0103B2                     l20653:
 40578  0103B2  0100               	movlb	0	; () banked
 40579  0103B4  5164               	movf	__parse_command_long@cmd& (0+255),w,b
 40580                           
 40581                           ; Switch size 1, requested type "space"
 40582                           ; Number of cases is 15, Range of values is 64 to 78
 40583                           ; switch strategies available:
 40584                           ; Name         Instructions Cycles
 40585                           ; simple_byte           46    24 (average)
 40586                           ;	Chosen strategy is simple_byte
 40587  0103B6  0A40               	xorlw	64	; case 64
 40588  0103B8  B4D8               	btfsc	status,2,c
 40589  0103BA  D7B8               	goto	l20621
 40590  0103BC  0A01               	xorlw	1	; case 65
 40591  0103BE  B4D8               	btfsc	status,2,c
 40592  0103C0  D7BA               	goto	l20623
 40593  0103C2  0A03               	xorlw	3	; case 66
 40594  0103C4  B4D8               	btfsc	status,2,c
 40595  0103C6  D7BC               	goto	l20625
 40596  0103C8  0A01               	xorlw	1	; case 67
 40597  0103CA  B4D8               	btfsc	status,2,c
 40598  0103CC  D7BE               	goto	l20627
 40599  0103CE  0A07               	xorlw	7	; case 68
 40600  0103D0  B4D8               	btfsc	status,2,c
 40601  0103D2  D7C0               	goto	l20629
 40602  0103D4  0A01               	xorlw	1	; case 69
 40603  0103D6  B4D8               	btfsc	status,2,c
 40604  0103D8  D7C2               	goto	l20631
 40605  0103DA  0A03               	xorlw	3	; case 70
 40606  0103DC  B4D8               	btfsc	status,2,c
 40607  0103DE  D7C4               	goto	l20633
 40608  0103E0  0A01               	xorlw	1	; case 71
 40609  0103E2  B4D8               	btfsc	status,2,c
 40610  0103E4  D7C5               	goto	l20635
 40611  0103E6  0A0F               	xorlw	15	; case 72
 40612  0103E8  B4D8               	btfsc	status,2,c
 40613  0103EA  D7C6               	goto	l20637
 40614  0103EC  0A01               	xorlw	1	; case 73
 40615  0103EE  B4D8               	btfsc	status,2,c
 40616  0103F0  D7C7               	goto	l20639
 40617  0103F2  0A03               	xorlw	3	; case 74
 40618  0103F4  B4D8               	btfsc	status,2,c
 40619  0103F6  D7C8               	goto	l20641
 40620  0103F8  0A01               	xorlw	1	; case 75
 40621  0103FA  B4D8               	btfsc	status,2,c
 40622  0103FC  D7C9               	goto	l20643
 40623  0103FE  0A07               	xorlw	7	; case 76
 40624  010400  B4D8               	btfsc	status,2,c
 40625  010402  D7CA               	goto	l20645
 40626  010404  0A01               	xorlw	1	; case 77
 40627  010406  B4D8               	btfsc	status,2,c
 40628  010408  D7CB               	goto	l20647
 40629  01040A  0A03               	xorlw	3	; case 78
 40630  01040C  A4D8               	btfss	status,2,c
 40631  01040E  0012               	return	
 40632  010410  D7CB               	goto	l20649
 40633  010412                     __end_of__parse_command_long:
 40634                           	opt stack 0
 40635                           tosu	equ	0xFFF
 40636                           tosh	equ	0xFFE
 40637                           tosl	equ	0xFFD
 40638                           pclath	equ	0xFFA
 40639                           tblptru	equ	0xFF8
 40640                           tblptrh	equ	0xFF7
 40641                           tblptrl	equ	0xFF6
 40642                           tablat	equ	0xFF5
 40643                           prodh	equ	0xFF4
 40644                           prodl	equ	0xFF3
 40645                           intcon	equ	0xFF2
 40646                           intcon2	equ	0xFF1
 40647                           intcon3	equ	0xFF0
 40648                           postinc0	equ	0xFEE
 40649                           wreg	equ	0xFE8
 40650                           indf1	equ	0xFE7
 40651                           postinc1	equ	0xFE6
 40652                           postdec1	equ	0xFE5
 40653                           plusw1	equ	0xFE3
 40654                           fsr1h	equ	0xFE2
 40655                           fsr1l	equ	0xFE1
 40656                           indf2	equ	0xFDF
 40657                           postinc2	equ	0xFDE
 40658                           postdec2	equ	0xFDD
 40659                           plusw2	equ	0xFDB
 40660                           fsr2h	equ	0xFDA
 40661                           fsr2l	equ	0xFD9
 40662                           status	equ	0xFD8
 40663                           
 40664 ;; *************** function _rtcc_set_year *****************
 40665 ;; Defined at:
 40666 ;;		line 141 in file "rtcc.c"
 40667 ;; Parameters:    Size  Location     Type
 40668 ;;  year            1    wreg     unsigned char 
 40669 ;; Auto vars:     Size  Location     Type
 40670 ;;  year            1    0[BANK0 ] unsigned char 
 40671 ;; Return value:  Size  Location     Type
 40672 ;;                  1    wreg      void 
 40673 ;; Registers used:
 40674 ;;		wreg, status,2, cstack
 40675 ;; Tracked objects:
 40676 ;;		On entry : 0/0
 40677 ;;		On exit  : 0/0
 40678 ;;		Unchanged: 0/0
 40679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40683 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40684 ;;Total ram usage:        1 bytes
 40685 ;; Hardware stack levels used:    1
 40686 ;; Hardware stack levels required when called:   11
 40687 ;; This function calls:
 40688 ;;		__rtcc_write_disable
 40689 ;;		__rtcc_write_enable
 40690 ;; This function is called by:
 40691 ;;		__parse_command_long
 40692 ;;		_rtcc_increment_year
 40693 ;;		_rtcc_decrement_year
 40694 ;;		_rtcc_read_eeprom
 40695 ;; This function uses a non-reentrant model
 40696 ;;
 40697                           
 40698                           	psect	text179
 40699  014018                     __ptext179:
 40700                           	opt stack 0
 40701  014018                     _rtcc_set_year:
 40702                           	opt stack 16
 40703                           
 40704                           ;incstack = 0
 40705                           ;rtcc_set_year@year stored from wreg
 40706  014018  0100               	movlb	0	; () banked
 40707  01401A  6F60               	movwf	rtcc_set_year@year& (0+255),b
 40708                           
 40709                           ;rtcc.c: 143: _rtcc_write_enable();
 40710  01401C  EC7D  F0A0         	call	__rtcc_write_enable	;wreg free
 40711                           
 40712                           ;rtcc.c: 144: RTCCFGbits.RTCPTR1 = 1;
 40713  014020  010F               	movlb	15	; () banked
 40714  014022  833F               	bsf	63,1,b	;volatile
 40715                           
 40716                           ; BSR set to: 15
 40717                           ;rtcc.c: 145: RTCCFGbits.RTCPTR0 = 1;
 40718  014024  010F               	movlb	15	; () banked
 40719  014026  813F               	bsf	63,0,b	;volatile
 40720                           
 40721                           ; BSR set to: 15
 40722                           ;rtcc.c: 146: RTCVALL = year;
 40723  014028  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 40724                           
 40725                           ;rtcc.c: 147: _rtcc_write_disable();
 40726  01402C  EC88  F0A0         	call	__rtcc_write_disable	;wreg free
 40727  014030  0012               	return		;funcret
 40728  014032                     __end_of_rtcc_set_year:
 40729                           	opt stack 0
 40730                           tosu	equ	0xFFF
 40731                           tosh	equ	0xFFE
 40732                           tosl	equ	0xFFD
 40733                           pclath	equ	0xFFA
 40734                           tblptru	equ	0xFF8
 40735                           tblptrh	equ	0xFF7
 40736                           tblptrl	equ	0xFF6
 40737                           tablat	equ	0xFF5
 40738                           prodh	equ	0xFF4
 40739                           prodl	equ	0xFF3
 40740                           intcon	equ	0xFF2
 40741                           intcon2	equ	0xFF1
 40742                           intcon3	equ	0xFF0
 40743                           postinc0	equ	0xFEE
 40744                           wreg	equ	0xFE8
 40745                           indf1	equ	0xFE7
 40746                           postinc1	equ	0xFE6
 40747                           postdec1	equ	0xFE5
 40748                           plusw1	equ	0xFE3
 40749                           fsr1h	equ	0xFE2
 40750                           fsr1l	equ	0xFE1
 40751                           indf2	equ	0xFDF
 40752                           postinc2	equ	0xFDE
 40753                           postdec2	equ	0xFDD
 40754                           plusw2	equ	0xFDB
 40755                           fsr2h	equ	0xFDA
 40756                           fsr2l	equ	0xFD9
 40757                           status	equ	0xFD8
 40758                           
 40759 ;; *************** function _rtcc_set_seconds *****************
 40760 ;; Defined at:
 40761 ;;		line 331 in file "rtcc.c"
 40762 ;; Parameters:    Size  Location     Type
 40763 ;;  seconds         1    wreg     unsigned char 
 40764 ;; Auto vars:     Size  Location     Type
 40765 ;;  seconds         1    0[BANK0 ] unsigned char 
 40766 ;; Return value:  Size  Location     Type
 40767 ;;                  1    wreg      void 
 40768 ;; Registers used:
 40769 ;;		wreg, status,2, cstack
 40770 ;; Tracked objects:
 40771 ;;		On entry : 0/0
 40772 ;;		On exit  : 0/0
 40773 ;;		Unchanged: 0/0
 40774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40779 ;;Total ram usage:        1 bytes
 40780 ;; Hardware stack levels used:    1
 40781 ;; Hardware stack levels required when called:   11
 40782 ;; This function calls:
 40783 ;;		__rtcc_write_disable
 40784 ;;		__rtcc_write_enable
 40785 ;; This function is called by:
 40786 ;;		__parse_command_long
 40787 ;;		_rtcc_increment_seconds
 40788 ;;		_rtcc_decrement_seconds
 40789 ;;		_rtcc_read_eeprom
 40790 ;; This function uses a non-reentrant model
 40791 ;;
 40792                           
 40793                           	psect	text180
 40794  014032                     __ptext180:
 40795                           	opt stack 0
 40796  014032                     _rtcc_set_seconds:
 40797                           	opt stack 16
 40798                           
 40799                           ;incstack = 0
 40800                           ;rtcc_set_seconds@seconds stored from wreg
 40801  014032  0100               	movlb	0	; () banked
 40802  014034  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 40803                           
 40804                           ;rtcc.c: 333: _rtcc_write_enable();
 40805  014036  EC7D  F0A0         	call	__rtcc_write_enable	;wreg free
 40806                           
 40807                           ;rtcc.c: 334: RTCCFGbits.RTCPTR1 = 0;
 40808  01403A  010F               	movlb	15	; () banked
 40809  01403C  933F               	bcf	63,1,b	;volatile
 40810                           
 40811                           ; BSR set to: 15
 40812                           ;rtcc.c: 335: RTCCFGbits.RTCPTR0 = 0;
 40813  01403E  010F               	movlb	15	; () banked
 40814  014040  913F               	bcf	63,0,b	;volatile
 40815                           
 40816                           ; BSR set to: 15
 40817                           ;rtcc.c: 336: RTCVALL = seconds;
 40818  014042  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 40819                           
 40820                           ;rtcc.c: 337: _rtcc_write_disable();
 40821  014046  EC88  F0A0         	call	__rtcc_write_disable	;wreg free
 40822  01404A  0012               	return		;funcret
 40823  01404C                     __end_of_rtcc_set_seconds:
 40824                           	opt stack 0
 40825                           tosu	equ	0xFFF
 40826                           tosh	equ	0xFFE
 40827                           tosl	equ	0xFFD
 40828                           pclath	equ	0xFFA
 40829                           tblptru	equ	0xFF8
 40830                           tblptrh	equ	0xFF7
 40831                           tblptrl	equ	0xFF6
 40832                           tablat	equ	0xFF5
 40833                           prodh	equ	0xFF4
 40834                           prodl	equ	0xFF3
 40835                           intcon	equ	0xFF2
 40836                           intcon2	equ	0xFF1
 40837                           intcon3	equ	0xFF0
 40838                           postinc0	equ	0xFEE
 40839                           wreg	equ	0xFE8
 40840                           indf1	equ	0xFE7
 40841                           postinc1	equ	0xFE6
 40842                           postdec1	equ	0xFE5
 40843                           plusw1	equ	0xFE3
 40844                           fsr1h	equ	0xFE2
 40845                           fsr1l	equ	0xFE1
 40846                           indf2	equ	0xFDF
 40847                           postinc2	equ	0xFDE
 40848                           postdec2	equ	0xFDD
 40849                           plusw2	equ	0xFDB
 40850                           fsr2h	equ	0xFDA
 40851                           fsr2l	equ	0xFD9
 40852                           status	equ	0xFD8
 40853                           
 40854 ;; *************** function _rtcc_set_month *****************
 40855 ;; Defined at:
 40856 ;;		line 179 in file "rtcc.c"
 40857 ;; Parameters:    Size  Location     Type
 40858 ;;  month           1    wreg     unsigned char 
 40859 ;; Auto vars:     Size  Location     Type
 40860 ;;  month           1    0[BANK0 ] unsigned char 
 40861 ;; Return value:  Size  Location     Type
 40862 ;;                  1    wreg      void 
 40863 ;; Registers used:
 40864 ;;		wreg, status,2, cstack
 40865 ;; Tracked objects:
 40866 ;;		On entry : 0/0
 40867 ;;		On exit  : 0/0
 40868 ;;		Unchanged: 0/0
 40869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40874 ;;Total ram usage:        1 bytes
 40875 ;; Hardware stack levels used:    1
 40876 ;; Hardware stack levels required when called:   11
 40877 ;; This function calls:
 40878 ;;		__rtcc_write_disable
 40879 ;;		__rtcc_write_enable
 40880 ;; This function is called by:
 40881 ;;		__parse_command_long
 40882 ;;		_rtcc_increment_month
 40883 ;;		_rtcc_decrement_month
 40884 ;;		_rtcc_read_eeprom
 40885 ;; This function uses a non-reentrant model
 40886 ;;
 40887                           
 40888                           	psect	text181
 40889  01404C                     __ptext181:
 40890                           	opt stack 0
 40891  01404C                     _rtcc_set_month:
 40892                           	opt stack 16
 40893                           
 40894                           ;incstack = 0
 40895                           ;rtcc_set_month@month stored from wreg
 40896  01404C  0100               	movlb	0	; () banked
 40897  01404E  6F60               	movwf	rtcc_set_month@month& (0+255),b
 40898                           
 40899                           ;rtcc.c: 181: _rtcc_write_enable();
 40900  014050  EC7D  F0A0         	call	__rtcc_write_enable	;wreg free
 40901                           
 40902                           ;rtcc.c: 182: RTCCFGbits.RTCPTR1 = 1;
 40903  014054  010F               	movlb	15	; () banked
 40904  014056  833F               	bsf	63,1,b	;volatile
 40905                           
 40906                           ; BSR set to: 15
 40907                           ;rtcc.c: 183: RTCCFGbits.RTCPTR0 = 0;
 40908  014058  010F               	movlb	15	; () banked
 40909  01405A  913F               	bcf	63,0,b	;volatile
 40910                           
 40911                           ; BSR set to: 15
 40912                           ;rtcc.c: 184: RTCVALH = month;
 40913  01405C  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 40914                           
 40915                           ;rtcc.c: 185: _rtcc_write_disable();
 40916  014060  EC88  F0A0         	call	__rtcc_write_disable	;wreg free
 40917  014064  0012               	return		;funcret
 40918  014066                     __end_of_rtcc_set_month:
 40919                           	opt stack 0
 40920                           tosu	equ	0xFFF
 40921                           tosh	equ	0xFFE
 40922                           tosl	equ	0xFFD
 40923                           pclath	equ	0xFFA
 40924                           tblptru	equ	0xFF8
 40925                           tblptrh	equ	0xFF7
 40926                           tblptrl	equ	0xFF6
 40927                           tablat	equ	0xFF5
 40928                           prodh	equ	0xFF4
 40929                           prodl	equ	0xFF3
 40930                           intcon	equ	0xFF2
 40931                           intcon2	equ	0xFF1
 40932                           intcon3	equ	0xFF0
 40933                           postinc0	equ	0xFEE
 40934                           wreg	equ	0xFE8
 40935                           indf1	equ	0xFE7
 40936                           postinc1	equ	0xFE6
 40937                           postdec1	equ	0xFE5
 40938                           plusw1	equ	0xFE3
 40939                           fsr1h	equ	0xFE2
 40940                           fsr1l	equ	0xFE1
 40941                           indf2	equ	0xFDF
 40942                           postinc2	equ	0xFDE
 40943                           postdec2	equ	0xFDD
 40944                           plusw2	equ	0xFDB
 40945                           fsr2h	equ	0xFDA
 40946                           fsr2l	equ	0xFD9
 40947                           status	equ	0xFD8
 40948                           
 40949 ;; *************** function _rtcc_set_minutes *****************
 40950 ;; Defined at:
 40951 ;;		line 293 in file "rtcc.c"
 40952 ;; Parameters:    Size  Location     Type
 40953 ;;  minutes         1    wreg     unsigned char 
 40954 ;; Auto vars:     Size  Location     Type
 40955 ;;  minutes         1    0[BANK0 ] unsigned char 
 40956 ;; Return value:  Size  Location     Type
 40957 ;;                  1    wreg      void 
 40958 ;; Registers used:
 40959 ;;		wreg, status,2, cstack
 40960 ;; Tracked objects:
 40961 ;;		On entry : 0/0
 40962 ;;		On exit  : 0/0
 40963 ;;		Unchanged: 0/0
 40964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40968 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40969 ;;Total ram usage:        1 bytes
 40970 ;; Hardware stack levels used:    1
 40971 ;; Hardware stack levels required when called:   11
 40972 ;; This function calls:
 40973 ;;		__rtcc_write_disable
 40974 ;;		__rtcc_write_enable
 40975 ;; This function is called by:
 40976 ;;		__parse_command_long
 40977 ;;		_rtcc_increment_minutes
 40978 ;;		_rtcc_decrement_minutes
 40979 ;;		_rtcc_read_eeprom
 40980 ;; This function uses a non-reentrant model
 40981 ;;
 40982                           
 40983                           	psect	text182
 40984  014066                     __ptext182:
 40985                           	opt stack 0
 40986  014066                     _rtcc_set_minutes:
 40987                           	opt stack 16
 40988                           
 40989                           ;incstack = 0
 40990                           ;rtcc_set_minutes@minutes stored from wreg
 40991  014066  0100               	movlb	0	; () banked
 40992  014068  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 40993                           
 40994                           ;rtcc.c: 295: _rtcc_write_enable();
 40995  01406A  EC7D  F0A0         	call	__rtcc_write_enable	;wreg free
 40996                           
 40997                           ;rtcc.c: 296: RTCCFGbits.RTCPTR1 = 0;
 40998  01406E  010F               	movlb	15	; () banked
 40999  014070  933F               	bcf	63,1,b	;volatile
 41000                           
 41001                           ; BSR set to: 15
 41002                           ;rtcc.c: 297: RTCCFGbits.RTCPTR0 = 0;
 41003  014072  010F               	movlb	15	; () banked
 41004  014074  913F               	bcf	63,0,b	;volatile
 41005                           
 41006                           ; BSR set to: 15
 41007                           ;rtcc.c: 298: RTCVALH = minutes;
 41008  014076  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 41009                           
 41010                           ;rtcc.c: 299: _rtcc_write_disable();
 41011  01407A  EC88  F0A0         	call	__rtcc_write_disable	;wreg free
 41012  01407E  0012               	return		;funcret
 41013  014080                     __end_of_rtcc_set_minutes:
 41014                           	opt stack 0
 41015                           tosu	equ	0xFFF
 41016                           tosh	equ	0xFFE
 41017                           tosl	equ	0xFFD
 41018                           pclath	equ	0xFFA
 41019                           tblptru	equ	0xFF8
 41020                           tblptrh	equ	0xFF7
 41021                           tblptrl	equ	0xFF6
 41022                           tablat	equ	0xFF5
 41023                           prodh	equ	0xFF4
 41024                           prodl	equ	0xFF3
 41025                           intcon	equ	0xFF2
 41026                           intcon2	equ	0xFF1
 41027                           intcon3	equ	0xFF0
 41028                           postinc0	equ	0xFEE
 41029                           wreg	equ	0xFE8
 41030                           indf1	equ	0xFE7
 41031                           postinc1	equ	0xFE6
 41032                           postdec1	equ	0xFE5
 41033                           plusw1	equ	0xFE3
 41034                           fsr1h	equ	0xFE2
 41035                           fsr1l	equ	0xFE1
 41036                           indf2	equ	0xFDF
 41037                           postinc2	equ	0xFDE
 41038                           postdec2	equ	0xFDD
 41039                           plusw2	equ	0xFDB
 41040                           fsr2h	equ	0xFDA
 41041                           fsr2l	equ	0xFD9
 41042                           status	equ	0xFD8
 41043                           
 41044 ;; *************** function _rtcc_set_hours *****************
 41045 ;; Defined at:
 41046 ;;		line 255 in file "rtcc.c"
 41047 ;; Parameters:    Size  Location     Type
 41048 ;;  hours           1    wreg     unsigned char 
 41049 ;; Auto vars:     Size  Location     Type
 41050 ;;  hours           1    0[BANK0 ] unsigned char 
 41051 ;; Return value:  Size  Location     Type
 41052 ;;                  1    wreg      void 
 41053 ;; Registers used:
 41054 ;;		wreg, status,2, cstack
 41055 ;; Tracked objects:
 41056 ;;		On entry : 0/0
 41057 ;;		On exit  : 0/0
 41058 ;;		Unchanged: 0/0
 41059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41064 ;;Total ram usage:        1 bytes
 41065 ;; Hardware stack levels used:    1
 41066 ;; Hardware stack levels required when called:   11
 41067 ;; This function calls:
 41068 ;;		__rtcc_write_disable
 41069 ;;		__rtcc_write_enable
 41070 ;; This function is called by:
 41071 ;;		__parse_command_long
 41072 ;;		_rtcc_increment_hours
 41073 ;;		_rtcc_decrement_hours
 41074 ;;		_rtcc_read_eeprom
 41075 ;; This function uses a non-reentrant model
 41076 ;;
 41077                           
 41078                           	psect	text183
 41079  014080                     __ptext183:
 41080                           	opt stack 0
 41081  014080                     _rtcc_set_hours:
 41082                           	opt stack 16
 41083                           
 41084                           ;incstack = 0
 41085                           ;rtcc_set_hours@hours stored from wreg
 41086  014080  0100               	movlb	0	; () banked
 41087  014082  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 41088                           
 41089                           ;rtcc.c: 257: _rtcc_write_enable();
 41090  014084  EC7D  F0A0         	call	__rtcc_write_enable	;wreg free
 41091                           
 41092                           ;rtcc.c: 258: RTCCFGbits.RTCPTR1 = 0;
 41093  014088  010F               	movlb	15	; () banked
 41094  01408A  933F               	bcf	63,1,b	;volatile
 41095                           
 41096                           ; BSR set to: 15
 41097                           ;rtcc.c: 259: RTCCFGbits.RTCPTR0 = 1;
 41098  01408C  010F               	movlb	15	; () banked
 41099  01408E  813F               	bsf	63,0,b	;volatile
 41100                           
 41101                           ; BSR set to: 15
 41102                           ;rtcc.c: 260: RTCVALL = hours;
 41103  014090  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 41104                           
 41105                           ;rtcc.c: 261: _rtcc_write_disable();
 41106  014094  EC88  F0A0         	call	__rtcc_write_disable	;wreg free
 41107  014098  0012               	return		;funcret
 41108  01409A                     __end_of_rtcc_set_hours:
 41109                           	opt stack 0
 41110                           tosu	equ	0xFFF
 41111                           tosh	equ	0xFFE
 41112                           tosl	equ	0xFFD
 41113                           pclath	equ	0xFFA
 41114                           tblptru	equ	0xFF8
 41115                           tblptrh	equ	0xFF7
 41116                           tblptrl	equ	0xFF6
 41117                           tablat	equ	0xFF5
 41118                           prodh	equ	0xFF4
 41119                           prodl	equ	0xFF3
 41120                           intcon	equ	0xFF2
 41121                           intcon2	equ	0xFF1
 41122                           intcon3	equ	0xFF0
 41123                           postinc0	equ	0xFEE
 41124                           wreg	equ	0xFE8
 41125                           indf1	equ	0xFE7
 41126                           postinc1	equ	0xFE6
 41127                           postdec1	equ	0xFE5
 41128                           plusw1	equ	0xFE3
 41129                           fsr1h	equ	0xFE2
 41130                           fsr1l	equ	0xFE1
 41131                           indf2	equ	0xFDF
 41132                           postinc2	equ	0xFDE
 41133                           postdec2	equ	0xFDD
 41134                           plusw2	equ	0xFDB
 41135                           fsr2h	equ	0xFDA
 41136                           fsr2l	equ	0xFD9
 41137                           status	equ	0xFD8
 41138                           
 41139 ;; *************** function _rtcc_set_day *****************
 41140 ;; Defined at:
 41141 ;;		line 217 in file "rtcc.c"
 41142 ;; Parameters:    Size  Location     Type
 41143 ;;  day             1    wreg     unsigned char 
 41144 ;; Auto vars:     Size  Location     Type
 41145 ;;  day             1    0[BANK0 ] unsigned char 
 41146 ;; Return value:  Size  Location     Type
 41147 ;;                  1    wreg      void 
 41148 ;; Registers used:
 41149 ;;		wreg, status,2, cstack
 41150 ;; Tracked objects:
 41151 ;;		On entry : 0/0
 41152 ;;		On exit  : 0/0
 41153 ;;		Unchanged: 0/0
 41154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41158 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41159 ;;Total ram usage:        1 bytes
 41160 ;; Hardware stack levels used:    1
 41161 ;; Hardware stack levels required when called:   11
 41162 ;; This function calls:
 41163 ;;		__rtcc_write_disable
 41164 ;;		__rtcc_write_enable
 41165 ;; This function is called by:
 41166 ;;		__parse_command_long
 41167 ;;		_rtcc_correct_day
 41168 ;;		_rtcc_increment_day
 41169 ;;		_rtcc_decrement_day
 41170 ;;		_rtcc_read_eeprom
 41171 ;; This function uses a non-reentrant model
 41172 ;;
 41173                           
 41174                           	psect	text184
 41175  01409A                     __ptext184:
 41176                           	opt stack 0
 41177  01409A                     _rtcc_set_day:
 41178                           	opt stack 16
 41179                           
 41180                           ;incstack = 0
 41181                           ;rtcc_set_day@day stored from wreg
 41182  01409A  0100               	movlb	0	; () banked
 41183  01409C  6F60               	movwf	rtcc_set_day@day& (0+255),b
 41184                           
 41185                           ;rtcc.c: 219: _rtcc_write_enable();
 41186  01409E  EC7D  F0A0         	call	__rtcc_write_enable	;wreg free
 41187                           
 41188                           ;rtcc.c: 220: RTCCFGbits.RTCPTR1 = 1;
 41189  0140A2  010F               	movlb	15	; () banked
 41190  0140A4  833F               	bsf	63,1,b	;volatile
 41191                           
 41192                           ; BSR set to: 15
 41193                           ;rtcc.c: 221: RTCCFGbits.RTCPTR0 = 0;
 41194  0140A6  010F               	movlb	15	; () banked
 41195  0140A8  913F               	bcf	63,0,b	;volatile
 41196                           
 41197                           ; BSR set to: 15
 41198                           ;rtcc.c: 222: RTCVALL = day;
 41199  0140AA  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 41200                           
 41201                           ;rtcc.c: 223: _rtcc_write_disable();
 41202  0140AE  EC88  F0A0         	call	__rtcc_write_disable	;wreg free
 41203  0140B2  0012               	return		;funcret
 41204  0140B4                     __end_of_rtcc_set_day:
 41205                           	opt stack 0
 41206                           tosu	equ	0xFFF
 41207                           tosh	equ	0xFFE
 41208                           tosl	equ	0xFFD
 41209                           pclath	equ	0xFFA
 41210                           tblptru	equ	0xFF8
 41211                           tblptrh	equ	0xFF7
 41212                           tblptrl	equ	0xFF6
 41213                           tablat	equ	0xFF5
 41214                           prodh	equ	0xFF4
 41215                           prodl	equ	0xFF3
 41216                           intcon	equ	0xFF2
 41217                           intcon2	equ	0xFF1
 41218                           intcon3	equ	0xFF0
 41219                           postinc0	equ	0xFEE
 41220                           wreg	equ	0xFE8
 41221                           indf1	equ	0xFE7
 41222                           postinc1	equ	0xFE6
 41223                           postdec1	equ	0xFE5
 41224                           plusw1	equ	0xFE3
 41225                           fsr1h	equ	0xFE2
 41226                           fsr1l	equ	0xFE1
 41227                           indf2	equ	0xFDF
 41228                           postinc2	equ	0xFDE
 41229                           postdec2	equ	0xFDD
 41230                           plusw2	equ	0xFDB
 41231                           fsr2h	equ	0xFDA
 41232                           fsr2l	equ	0xFD9
 41233                           status	equ	0xFD8
 41234                           
 41235 ;; *************** function __rtcc_write_enable *****************
 41236 ;; Defined at:
 41237 ;;		line 14 in file "rtcc.c"
 41238 ;; Parameters:    Size  Location     Type
 41239 ;;		None
 41240 ;; Auto vars:     Size  Location     Type
 41241 ;;		None
 41242 ;; Return value:  Size  Location     Type
 41243 ;;                  1    wreg      void 
 41244 ;; Registers used:
 41245 ;;		wreg, status,2
 41246 ;; Tracked objects:
 41247 ;;		On entry : 0/0
 41248 ;;		On exit  : 0/0
 41249 ;;		Unchanged: 0/0
 41250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41255 ;;Total ram usage:        0 bytes
 41256 ;; Hardware stack levels used:    1
 41257 ;; Hardware stack levels required when called:   10
 41258 ;; This function calls:
 41259 ;;		Nothing
 41260 ;; This function is called by:
 41261 ;;		_rtcc_set_year
 41262 ;;		_rtcc_set_month
 41263 ;;		_rtcc_set_day
 41264 ;;		_rtcc_set_hours
 41265 ;;		_rtcc_set_minutes
 41266 ;;		_rtcc_set_seconds
 41267 ;; This function uses a non-reentrant model
 41268 ;;
 41269                           
 41270                           	psect	text185
 41271  0140FA                     __ptext185:
 41272                           	opt stack 0
 41273  0140FA                     __rtcc_write_enable:
 41274                           	opt stack 16
 41275                           
 41276                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 41277                           
 41278                           ;incstack = 0
 41279  0140FA  D006               	goto	l18403
 41280  0140FC                     l18399:
 41281                           
 41282                           ;rtcc.c: 17: {
 41283                           ;rtcc.c: 18: EECON2 = 0x55;
 41284  0140FC  0E55               	movlw	85
 41285  0140FE  6EA7               	movwf	4007,c	;volatile
 41286                           
 41287                           ;rtcc.c: 19: EECON2 = 0xAA;
 41288  014100  0EAA               	movlw	170
 41289  014102  6EA7               	movwf	4007,c	;volatile
 41290                           
 41291                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 41292  014104  010F               	movlb	15	; () banked
 41293  014106  8B3F               	bsf	63,5,b	;volatile
 41294  014108                     l18403:
 41295  014108  010F               	movlb	15	; () banked
 41296  01410A  BB3F               	btfsc	63,5,b	;volatile
 41297  01410C  0012               	return	
 41298  01410E  D7F6               	goto	l18399
 41299  014110                     __end_of__rtcc_write_enable:
 41300                           	opt stack 0
 41301                           tosu	equ	0xFFF
 41302                           tosh	equ	0xFFE
 41303                           tosl	equ	0xFFD
 41304                           pclath	equ	0xFFA
 41305                           tblptru	equ	0xFF8
 41306                           tblptrh	equ	0xFF7
 41307                           tblptrl	equ	0xFF6
 41308                           tablat	equ	0xFF5
 41309                           prodh	equ	0xFF4
 41310                           prodl	equ	0xFF3
 41311                           intcon	equ	0xFF2
 41312                           intcon2	equ	0xFF1
 41313                           intcon3	equ	0xFF0
 41314                           postinc0	equ	0xFEE
 41315                           wreg	equ	0xFE8
 41316                           indf1	equ	0xFE7
 41317                           postinc1	equ	0xFE6
 41318                           postdec1	equ	0xFE5
 41319                           plusw1	equ	0xFE3
 41320                           fsr1h	equ	0xFE2
 41321                           fsr1l	equ	0xFE1
 41322                           indf2	equ	0xFDF
 41323                           postinc2	equ	0xFDE
 41324                           postdec2	equ	0xFDD
 41325                           plusw2	equ	0xFDB
 41326                           fsr2h	equ	0xFDA
 41327                           fsr2l	equ	0xFD9
 41328                           status	equ	0xFD8
 41329                           
 41330 ;; *************** function __rtcc_write_disable *****************
 41331 ;; Defined at:
 41332 ;;		line 24 in file "rtcc.c"
 41333 ;; Parameters:    Size  Location     Type
 41334 ;;		None
 41335 ;; Auto vars:     Size  Location     Type
 41336 ;;		None
 41337 ;; Return value:  Size  Location     Type
 41338 ;;                  1    wreg      void 
 41339 ;; Registers used:
 41340 ;;		wreg, status,2
 41341 ;; Tracked objects:
 41342 ;;		On entry : 0/0
 41343 ;;		On exit  : 0/0
 41344 ;;		Unchanged: 0/0
 41345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41350 ;;Total ram usage:        0 bytes
 41351 ;; Hardware stack levels used:    1
 41352 ;; Hardware stack levels required when called:   10
 41353 ;; This function calls:
 41354 ;;		Nothing
 41355 ;; This function is called by:
 41356 ;;		_rtcc_set_year
 41357 ;;		_rtcc_set_month
 41358 ;;		_rtcc_set_day
 41359 ;;		_rtcc_set_hours
 41360 ;;		_rtcc_set_minutes
 41361 ;;		_rtcc_set_seconds
 41362 ;; This function uses a non-reentrant model
 41363 ;;
 41364                           
 41365                           	psect	text186
 41366  014110                     __ptext186:
 41367                           	opt stack 0
 41368  014110                     __rtcc_write_disable:
 41369                           	opt stack 16
 41370                           
 41371                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 41372                           
 41373                           ; BSR set to: 15
 41374                           ;incstack = 0
 41375  014110  D006               	goto	l18411
 41376  014112                     l18407:
 41377                           
 41378                           ;rtcc.c: 27: {
 41379                           ;rtcc.c: 28: EECON2 = 0x55;
 41380  014112  0E55               	movlw	85
 41381  014114  6EA7               	movwf	4007,c	;volatile
 41382                           
 41383                           ;rtcc.c: 29: EECON2 = 0xAA;
 41384  014116  0EAA               	movlw	170
 41385  014118  6EA7               	movwf	4007,c	;volatile
 41386                           
 41387                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 41388  01411A  010F               	movlb	15	; () banked
 41389  01411C  9B3F               	bcf	63,5,b	;volatile
 41390  01411E                     l18411:
 41391  01411E  010F               	movlb	15	; () banked
 41392  014120  AB3F               	btfss	63,5,b	;volatile
 41393  014122  0012               	return	
 41394  014124  D7F6               	goto	l18407
 41395  014126                     __end_of__rtcc_write_disable:
 41396                           	opt stack 0
 41397                           tosu	equ	0xFFF
 41398                           tosh	equ	0xFFE
 41399                           tosl	equ	0xFFD
 41400                           pclath	equ	0xFFA
 41401                           tblptru	equ	0xFF8
 41402                           tblptrh	equ	0xFF7
 41403                           tblptrl	equ	0xFF6
 41404                           tablat	equ	0xFF5
 41405                           prodh	equ	0xFF4
 41406                           prodl	equ	0xFF3
 41407                           intcon	equ	0xFF2
 41408                           intcon2	equ	0xFF1
 41409                           intcon3	equ	0xFF0
 41410                           postinc0	equ	0xFEE
 41411                           wreg	equ	0xFE8
 41412                           indf1	equ	0xFE7
 41413                           postinc1	equ	0xFE6
 41414                           postdec1	equ	0xFE5
 41415                           plusw1	equ	0xFE3
 41416                           fsr1h	equ	0xFE2
 41417                           fsr1l	equ	0xFE1
 41418                           indf2	equ	0xFDF
 41419                           postinc2	equ	0xFDE
 41420                           postdec2	equ	0xFDD
 41421                           plusw2	equ	0xFDB
 41422                           fsr2h	equ	0xFDA
 41423                           fsr2l	equ	0xFD9
 41424                           status	equ	0xFD8
 41425                           
 41426 ;; *************** function _buck_remote_set_synchronous *****************
 41427 ;; Defined at:
 41428 ;;		line 621 in file "buck.c"
 41429 ;; Parameters:    Size  Location     Type
 41430 ;;  synchronous     1    wreg     unsigned char 
 41431 ;; Auto vars:     Size  Location     Type
 41432 ;;  synchronous     1    0[BANK0 ] unsigned char 
 41433 ;; Return value:  Size  Location     Type
 41434 ;;                  1    wreg      void 
 41435 ;; Registers used:
 41436 ;;		wreg, status,2
 41437 ;; Tracked objects:
 41438 ;;		On entry : 0/0
 41439 ;;		On exit  : 0/0
 41440 ;;		Unchanged: 0/0
 41441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41445 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41446 ;;Total ram usage:        1 bytes
 41447 ;; Hardware stack levels used:    1
 41448 ;; Hardware stack levels required when called:   10
 41449 ;; This function calls:
 41450 ;;		Nothing
 41451 ;; This function is called by:
 41452 ;;		__parse_command_long
 41453 ;; This function uses a non-reentrant model
 41454 ;;
 41455                           
 41456                           	psect	text187
 41457  013F4E                     __ptext187:
 41458                           	opt stack 0
 41459  013F4E                     _buck_remote_set_synchronous:
 41460                           	opt stack 18
 41461                           
 41462                           ; BSR set to: 15
 41463                           ;incstack = 0
 41464                           ;buck_remote_set_synchronous@synchronous stored from wreg
 41465  013F4E  0100               	movlb	0	; () banked
 41466  013F50  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 41467                           
 41468                           ;buck.c: 623: if(synchronous)
 41469  013F52  0100               	movlb	0	; () banked
 41470  013F54  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 41471  013F56  0100               	movlb	0	; () banked
 41472  013F58  B4D8               	btfsc	status,2,c
 41473  013F5A  D004               	goto	l19495
 41474                           
 41475                           ; BSR set to: 0
 41476                           ;buck.c: 624: buck_remote_synchronous = 1;
 41477  013F5C  0E01               	movlw	1
 41478  013F5E  0100               	movlb	0	; () banked
 41479  013F60  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 41480  013F62  0012               	return	
 41481  013F64                     l19495:
 41482                           
 41483                           ; BSR set to: 0
 41484                           ;buck.c: 625: else
 41485                           ;buck.c: 626: buck_remote_synchronous = 0;
 41486  013F64  0E00               	movlw	0
 41487  013F66  0100               	movlb	0	; () banked
 41488  013F68  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 41489  013F6A  0012               	return	
 41490  013F6C                     __end_of_buck_remote_set_synchronous:
 41491                           	opt stack 0
 41492                           tosu	equ	0xFFF
 41493                           tosh	equ	0xFFE
 41494                           tosl	equ	0xFFD
 41495                           pclath	equ	0xFFA
 41496                           tblptru	equ	0xFF8
 41497                           tblptrh	equ	0xFF7
 41498                           tblptrl	equ	0xFF6
 41499                           tablat	equ	0xFF5
 41500                           prodh	equ	0xFF4
 41501                           prodl	equ	0xFF3
 41502                           intcon	equ	0xFF2
 41503                           intcon2	equ	0xFF1
 41504                           intcon3	equ	0xFF0
 41505                           postinc0	equ	0xFEE
 41506                           wreg	equ	0xFE8
 41507                           indf1	equ	0xFE7
 41508                           postinc1	equ	0xFE6
 41509                           postdec1	equ	0xFE5
 41510                           plusw1	equ	0xFE3
 41511                           fsr1h	equ	0xFE2
 41512                           fsr1l	equ	0xFE1
 41513                           indf2	equ	0xFDF
 41514                           postinc2	equ	0xFDE
 41515                           postdec2	equ	0xFDD
 41516                           plusw2	equ	0xFDB
 41517                           fsr2h	equ	0xFDA
 41518                           fsr2l	equ	0xFD9
 41519                           status	equ	0xFD8
 41520                           
 41521 ;; *************** function _buck_remote_set_on *****************
 41522 ;; Defined at:
 41523 ;;		line 613 in file "buck.c"
 41524 ;; Parameters:    Size  Location     Type
 41525 ;;  on              1    wreg     unsigned char 
 41526 ;; Auto vars:     Size  Location     Type
 41527 ;;  on              1    0[BANK0 ] unsigned char 
 41528 ;; Return value:  Size  Location     Type
 41529 ;;                  1    wreg      void 
 41530 ;; Registers used:
 41531 ;;		wreg, status,2
 41532 ;; Tracked objects:
 41533 ;;		On entry : 0/0
 41534 ;;		On exit  : 0/0
 41535 ;;		Unchanged: 0/0
 41536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41540 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41541 ;;Total ram usage:        1 bytes
 41542 ;; Hardware stack levels used:    1
 41543 ;; Hardware stack levels required when called:   10
 41544 ;; This function calls:
 41545 ;;		Nothing
 41546 ;; This function is called by:
 41547 ;;		__parse_command_long
 41548 ;; This function uses a non-reentrant model
 41549 ;;
 41550                           
 41551                           	psect	text188
 41552  013F6C                     __ptext188:
 41553                           	opt stack 0
 41554  013F6C                     _buck_remote_set_on:
 41555                           	opt stack 18
 41556                           
 41557                           ; BSR set to: 0
 41558                           ;incstack = 0
 41559                           ;buck_remote_set_on@on stored from wreg
 41560  013F6C  0100               	movlb	0	; () banked
 41561  013F6E  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 41562                           
 41563                           ;buck.c: 615: if(on)
 41564  013F70  0100               	movlb	0	; () banked
 41565  013F72  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 41566  013F74  0100               	movlb	0	; () banked
 41567  013F76  B4D8               	btfsc	status,2,c
 41568  013F78  D004               	goto	l19489
 41569                           
 41570                           ; BSR set to: 0
 41571                           ;buck.c: 616: buck_remote_on = 1;
 41572  013F7A  0E01               	movlw	1
 41573  013F7C  0100               	movlb	0	; () banked
 41574  013F7E  6FE3               	movwf	_buck_remote_on& (0+255),b
 41575  013F80  0012               	return	
 41576  013F82                     l19489:
 41577                           
 41578                           ; BSR set to: 0
 41579                           ;buck.c: 617: else
 41580                           ;buck.c: 618: buck_remote_on = 0;
 41581  013F82  0E00               	movlw	0
 41582  013F84  0100               	movlb	0	; () banked
 41583  013F86  6FE3               	movwf	_buck_remote_on& (0+255),b
 41584  013F88  0012               	return	
 41585  013F8A                     __end_of_buck_remote_set_on:
 41586                           	opt stack 0
 41587                           tosu	equ	0xFFF
 41588                           tosh	equ	0xFFE
 41589                           tosl	equ	0xFFD
 41590                           pclath	equ	0xFFA
 41591                           tblptru	equ	0xFF8
 41592                           tblptrh	equ	0xFF7
 41593                           tblptrl	equ	0xFF6
 41594                           tablat	equ	0xFF5
 41595                           prodh	equ	0xFF4
 41596                           prodl	equ	0xFF3
 41597                           intcon	equ	0xFF2
 41598                           intcon2	equ	0xFF1
 41599                           intcon3	equ	0xFF0
 41600                           postinc0	equ	0xFEE
 41601                           wreg	equ	0xFE8
 41602                           indf1	equ	0xFE7
 41603                           postinc1	equ	0xFE6
 41604                           postdec1	equ	0xFE5
 41605                           plusw1	equ	0xFE3
 41606                           fsr1h	equ	0xFE2
 41607                           fsr1l	equ	0xFE1
 41608                           indf2	equ	0xFDF
 41609                           postinc2	equ	0xFDE
 41610                           postdec2	equ	0xFDD
 41611                           plusw2	equ	0xFDB
 41612                           fsr2h	equ	0xFDA
 41613                           fsr2l	equ	0xFD9
 41614                           status	equ	0xFD8
 41615                           
 41616 ;; *************** function _buck_remote_set_enable *****************
 41617 ;; Defined at:
 41618 ;;		line 605 in file "buck.c"
 41619 ;; Parameters:    Size  Location     Type
 41620 ;;  remote          1    wreg     unsigned char 
 41621 ;; Auto vars:     Size  Location     Type
 41622 ;;  remote          1    0[BANK0 ] unsigned char 
 41623 ;; Return value:  Size  Location     Type
 41624 ;;                  1    wreg      void 
 41625 ;; Registers used:
 41626 ;;		wreg, status,2
 41627 ;; Tracked objects:
 41628 ;;		On entry : 0/0
 41629 ;;		On exit  : 0/0
 41630 ;;		Unchanged: 0/0
 41631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41636 ;;Total ram usage:        1 bytes
 41637 ;; Hardware stack levels used:    1
 41638 ;; Hardware stack levels required when called:   10
 41639 ;; This function calls:
 41640 ;;		Nothing
 41641 ;; This function is called by:
 41642 ;;		__parse_command_long
 41643 ;; This function uses a non-reentrant model
 41644 ;;
 41645                           
 41646                           	psect	text189
 41647  013F8A                     __ptext189:
 41648                           	opt stack 0
 41649  013F8A                     _buck_remote_set_enable:
 41650                           	opt stack 18
 41651                           
 41652                           ; BSR set to: 0
 41653                           ;incstack = 0
 41654                           ;buck_remote_set_enable@remote stored from wreg
 41655  013F8A  0100               	movlb	0	; () banked
 41656  013F8C  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 41657                           
 41658                           ;buck.c: 607: if(remote)
 41659  013F8E  0100               	movlb	0	; () banked
 41660  013F90  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 41661  013F92  0100               	movlb	0	; () banked
 41662  013F94  B4D8               	btfsc	status,2,c
 41663  013F96  D004               	goto	l19483
 41664                           
 41665                           ; BSR set to: 0
 41666                           ;buck.c: 608: buck_remote_enable = 1;
 41667  013F98  0E01               	movlw	1
 41668  013F9A  0101               	movlb	1	; () banked
 41669  013F9C  6FF1               	movwf	_buck_remote_enable& (0+255),b
 41670  013F9E  0012               	return	
 41671  013FA0                     l19483:
 41672                           
 41673                           ;buck.c: 609: else
 41674                           ;buck.c: 610: buck_remote_enable = 0;
 41675  013FA0  0E00               	movlw	0
 41676  013FA2  0101               	movlb	1	; () banked
 41677  013FA4  6FF1               	movwf	_buck_remote_enable& (0+255),b
 41678  013FA6  0012               	return	
 41679  013FA8                     __end_of_buck_remote_set_enable:
 41680                           	opt stack 0
 41681                           tosu	equ	0xFFF
 41682                           tosh	equ	0xFFE
 41683                           tosl	equ	0xFFD
 41684                           pclath	equ	0xFFA
 41685                           tblptru	equ	0xFF8
 41686                           tblptrh	equ	0xFF7
 41687                           tblptrl	equ	0xFF6
 41688                           tablat	equ	0xFF5
 41689                           prodh	equ	0xFF4
 41690                           prodl	equ	0xFF3
 41691                           intcon	equ	0xFF2
 41692                           intcon2	equ	0xFF1
 41693                           intcon3	equ	0xFF0
 41694                           postinc0	equ	0xFEE
 41695                           wreg	equ	0xFE8
 41696                           indf1	equ	0xFE7
 41697                           postinc1	equ	0xFE6
 41698                           postdec1	equ	0xFE5
 41699                           plusw1	equ	0xFE3
 41700                           fsr1h	equ	0xFE2
 41701                           fsr1l	equ	0xFE1
 41702                           indf2	equ	0xFDF
 41703                           postinc2	equ	0xFDE
 41704                           postdec2	equ	0xFDD
 41705                           plusw2	equ	0xFDB
 41706                           fsr2h	equ	0xFDA
 41707                           fsr2l	equ	0xFD9
 41708                           status	equ	0xFD8
 41709                           
 41710 ;; *************** function _buck_remote_set_dutycycle *****************
 41711 ;; Defined at:
 41712 ;;		line 629 in file "buck.c"
 41713 ;; Parameters:    Size  Location     Type
 41714 ;;  dutycycle       1    wreg     unsigned char 
 41715 ;; Auto vars:     Size  Location     Type
 41716 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 41717 ;; Return value:  Size  Location     Type
 41718 ;;                  1    wreg      void 
 41719 ;; Registers used:
 41720 ;;		wreg, status,2, status,0
 41721 ;; Tracked objects:
 41722 ;;		On entry : 0/0
 41723 ;;		On exit  : 0/0
 41724 ;;		Unchanged: 0/0
 41725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41729 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41730 ;;Total ram usage:        1 bytes
 41731 ;; Hardware stack levels used:    1
 41732 ;; Hardware stack levels required when called:   10
 41733 ;; This function calls:
 41734 ;;		Nothing
 41735 ;; This function is called by:
 41736 ;;		__parse_command_long
 41737 ;; This function uses a non-reentrant model
 41738 ;;
 41739                           
 41740                           	psect	text190
 41741  013E1E                     __ptext190:
 41742                           	opt stack 0
 41743  013E1E                     _buck_remote_set_dutycycle:
 41744                           	opt stack 18
 41745                           
 41746                           ; BSR set to: 1
 41747                           ;incstack = 0
 41748                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 41749  013E1E  0100               	movlb	0	; () banked
 41750  013E20  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41751                           
 41752                           ;buck.c: 631: if(dutycycle>242)
 41753  013E22  0EF2               	movlw	242
 41754  013E24  0100               	movlb	0	; () banked
 41755  013E26  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41756  013E28  D004               	goto	l19509
 41757                           
 41758                           ; BSR set to: 0
 41759                           ;buck.c: 632: buck_remote_dutycycle = 242;
 41760  013E2A  0EF2               	movlw	242
 41761  013E2C  0100               	movlb	0	; () banked
 41762  013E2E  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41763  013E30  0012               	return	
 41764  013E32                     l19509:
 41765                           
 41766                           ; BSR set to: 0
 41767                           ;buck.c: 633: else if(dutycycle<40)
 41768  013E32  0E28               	movlw	40
 41769  013E34  0100               	movlb	0	; () banked
 41770  013E36  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41771  013E38  D004               	goto	l2637
 41772                           
 41773                           ; BSR set to: 0
 41774                           ;buck.c: 634: buck_remote_dutycycle = 40;
 41775  013E3A  0E28               	movlw	40
 41776  013E3C  0100               	movlb	0	; () banked
 41777  013E3E  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41778  013E40  0012               	return	
 41779  013E42                     l2637:
 41780                           
 41781                           ; BSR set to: 0
 41782                           ;buck.c: 635: else
 41783                           ;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 41784  013E42  C060  F0E1         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 41785                           
 41786                           ; BSR set to: 0
 41787  013E46  0012               	return	
 41788  013E48                     __end_of_buck_remote_set_dutycycle:
 41789                           	opt stack 0
 41790                           tosu	equ	0xFFF
 41791                           tosh	equ	0xFFE
 41792                           tosl	equ	0xFFD
 41793                           pclath	equ	0xFFA
 41794                           tblptru	equ	0xFF8
 41795                           tblptrh	equ	0xFF7
 41796                           tblptrl	equ	0xFF6
 41797                           tablat	equ	0xFF5
 41798                           prodh	equ	0xFF4
 41799                           prodl	equ	0xFF3
 41800                           intcon	equ	0xFF2
 41801                           intcon2	equ	0xFF1
 41802                           intcon3	equ	0xFF0
 41803                           postinc0	equ	0xFEE
 41804                           wreg	equ	0xFE8
 41805                           indf1	equ	0xFE7
 41806                           postinc1	equ	0xFE6
 41807                           postdec1	equ	0xFE5
 41808                           plusw1	equ	0xFE3
 41809                           fsr1h	equ	0xFE2
 41810                           fsr1l	equ	0xFE1
 41811                           indf2	equ	0xFDF
 41812                           postinc2	equ	0xFDE
 41813                           postdec2	equ	0xFDD
 41814                           plusw2	equ	0xFDB
 41815                           fsr2h	equ	0xFDA
 41816                           fsr2l	equ	0xFD9
 41817                           status	equ	0xFD8
 41818                           
 41819 ;; *************** function _buck_remote_change_dutycycle *****************
 41820 ;; Defined at:
 41821 ;;		line 639 in file "buck.c"
 41822 ;; Parameters:    Size  Location     Type
 41823 ;;  change          1    wreg     char 
 41824 ;; Auto vars:     Size  Location     Type
 41825 ;;  change          1    0[BANK0 ] char 
 41826 ;;  new_dutycycl    2    1[BANK0 ] int 
 41827 ;; Return value:  Size  Location     Type
 41828 ;;                  1    wreg      void 
 41829 ;; Registers used:
 41830 ;;		wreg, status,2, status,0
 41831 ;; Tracked objects:
 41832 ;;		On entry : 0/0
 41833 ;;		On exit  : 0/0
 41834 ;;		Unchanged: 0/0
 41835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41837 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41839 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41840 ;;Total ram usage:        3 bytes
 41841 ;; Hardware stack levels used:    1
 41842 ;; Hardware stack levels required when called:   10
 41843 ;; This function calls:
 41844 ;;		Nothing
 41845 ;; This function is called by:
 41846 ;;		__parse_command_long
 41847 ;; This function uses a non-reentrant model
 41848 ;;
 41849                           
 41850                           	psect	text191
 41851  012D78                     __ptext191:
 41852                           	opt stack 0
 41853  012D78                     _buck_remote_change_dutycycle:
 41854                           	opt stack 18
 41855                           
 41856                           ; BSR set to: 0
 41857                           ;incstack = 0
 41858                           ;buck_remote_change_dutycycle@change stored from wreg
 41859  012D78  0100               	movlb	0	; () banked
 41860  012D7A  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 41861                           
 41862                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 41863  012D7C  0100               	movlb	0	; () banked
 41864  012D7E  51E4               	movf	_buck_dutycycle& (0+255),w,b
 41865  012D80  0100               	movlb	0	; () banked
 41866  012D82  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 41867  012D84  0100               	movlb	0	; () banked
 41868  012D86  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 41869  012D88  6AE8               	clrf	wreg,c
 41870  012D8A  B0D8               	btfsc	status,0,c
 41871  012D8C  2AE8               	incf	wreg,f,c
 41872  012D8E  0100               	movlb	0	; () banked
 41873  012D90  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 41874  012D92  06E8               	decf	wreg,f,c
 41875  012D94  0100               	movlb	0	; () banked
 41876  012D96  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 41877                           
 41878                           ;buck.c: 642: if(new_dutycycle>242)
 41879  012D98  0100               	movlb	0	; () banked
 41880  012D9A  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 41881  012D9C  D00C               	goto	l19501
 41882  012D9E  0100               	movlb	0	; () banked
 41883  012DA0  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 41884  012DA2  E105               	bnz	u18630
 41885  012DA4  0EF3               	movlw	243
 41886  012DA6  0100               	movlb	0	; () banked
 41887  012DA8  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 41888  012DAA  A0D8               	btfss	status,0,c
 41889  012DAC  D004               	goto	l19501
 41890  012DAE                     u18630:
 41891                           
 41892                           ; BSR set to: 0
 41893                           ;buck.c: 643: buck_remote_dutycycle = 242;
 41894  012DAE  0EF2               	movlw	242
 41895  012DB0  0100               	movlb	0	; () banked
 41896  012DB2  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41897  012DB4  0012               	return	
 41898  012DB6                     l19501:
 41899                           
 41900                           ; BSR set to: 0
 41901                           ;buck.c: 644: else if(new_dutycycle<40)
 41902  012DB6  0100               	movlb	0	; () banked
 41903  012DB8  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 41904  012DBA  D008               	goto	l19503
 41905  012DBC  0100               	movlb	0	; () banked
 41906  012DBE  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 41907  012DC0  E109               	bnz	l2644
 41908  012DC2  0E28               	movlw	40
 41909  012DC4  0100               	movlb	0	; () banked
 41910  012DC6  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 41911  012DC8  B0D8               	btfsc	status,0,c
 41912  012DCA  D004               	goto	l2644
 41913  012DCC                     l19503:
 41914                           
 41915                           ; BSR set to: 0
 41916                           ;buck.c: 645: buck_remote_dutycycle = 40;
 41917  012DCC  0E28               	movlw	40
 41918  012DCE  0100               	movlb	0	; () banked
 41919  012DD0  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41920  012DD2  0012               	return	
 41921  012DD4                     l2644:
 41922                           
 41923                           ; BSR set to: 0
 41924                           ;buck.c: 646: else
 41925                           ;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 41926  012DD4  C061  F0E1         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 41927                           
 41928                           ; BSR set to: 0
 41929  012DD8  0012               	return	
 41930  012DDA                     __end_of_buck_remote_change_dutycycle:
 41931                           	opt stack 0
 41932                           tosu	equ	0xFFF
 41933                           tosh	equ	0xFFE
 41934                           tosl	equ	0xFFD
 41935                           pclath	equ	0xFFA
 41936                           tblptru	equ	0xFF8
 41937                           tblptrh	equ	0xFF7
 41938                           tblptrl	equ	0xFF6
 41939                           tablat	equ	0xFF5
 41940                           prodh	equ	0xFF4
 41941                           prodl	equ	0xFF3
 41942                           intcon	equ	0xFF2
 41943                           intcon2	equ	0xFF1
 41944                           intcon3	equ	0xFF0
 41945                           postinc0	equ	0xFEE
 41946                           wreg	equ	0xFE8
 41947                           indf1	equ	0xFE7
 41948                           postinc1	equ	0xFE6
 41949                           postdec1	equ	0xFE5
 41950                           plusw1	equ	0xFE3
 41951                           fsr1h	equ	0xFE2
 41952                           fsr1l	equ	0xFE1
 41953                           indf2	equ	0xFDF
 41954                           postinc2	equ	0xFDE
 41955                           postdec2	equ	0xFDD
 41956                           plusw2	equ	0xFDB
 41957                           fsr2h	equ	0xFDA
 41958                           fsr2l	equ	0xFD9
 41959                           status	equ	0xFD8
 41960                           
 41961 ;; *************** function __parse_command_calibration *****************
 41962 ;; Defined at:
 41963 ;;		line 505 in file "app_device_custom_hid.c"
 41964 ;; Parameters:    Size  Location     Type
 41965 ;;  cmd             1    wreg     unsigned char 
 41966 ;;  item            1    3[BANK0 ] unsigned char 
 41967 ;;  dat1            1    4[BANK0 ] unsigned char 
 41968 ;;  dat2            1    5[BANK0 ] unsigned char 
 41969 ;;  dat3            1    6[BANK0 ] unsigned char 
 41970 ;; Auto vars:     Size  Location     Type
 41971 ;;  cmd             1    0[COMRAM] unsigned char 
 41972 ;;  parameter       2    9[BANK0 ] int 
 41973 ;; Return value:  Size  Location     Type
 41974 ;;                  1    wreg      void 
 41975 ;; Registers used:
 41976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41977 ;; Tracked objects:
 41978 ;;		On entry : 0/0
 41979 ;;		On exit  : 0/0
 41980 ;;		Unchanged: 0/0
 41981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41985 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41986 ;;Total ram usage:        8 bytes
 41987 ;; Hardware stack levels used:    1
 41988 ;; Hardware stack levels required when called:   11
 41989 ;; This function calls:
 41990 ;;		_schedule_eeprom_write_task
 41991 ;; This function is called by:
 41992 ;;		_APP_DeviceCustomHIDTasks
 41993 ;; This function uses a non-reentrant model
 41994 ;;
 41995                           
 41996                           	psect	text192
 41997  00E9BE                     __ptext192:
 41998                           	opt stack 0
 41999  00E9BE                     __parse_command_calibration:
 42000                           	opt stack 18
 42001                           
 42002                           ;app_device_custom_hid.c: 507: int16_t parameter = dat1;
 42003                           
 42004                           ; BSR set to: 0
 42005                           ;incstack = 0
 42006  00E9BE  C064  F069         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 42007  00E9C2  0100               	movlb	0	; () banked
 42008  00E9C4  6B6A               	clrf	(__parse_command_calibration@parameter+1)& (0+255),b
 42009                           
 42010                           ; BSR set to: 0
 42011                           ;app_device_custom_hid.c: 508: parameter <<= 8;
 42012  00E9C6  0100               	movlb	0	; () banked
 42013  00E9C8  5169               	movf	__parse_command_calibration@parameter& (0+255),w,b
 42014  00E9CA  6F6A               	movwf	(__parse_command_calibration@parameter+1)& (0+255),b
 42015  00E9CC  6B69               	clrf	__parse_command_calibration@parameter& (0+255),b
 42016                           
 42017                           ; BSR set to: 0
 42018                           ;app_device_custom_hid.c: 509: parameter |= dat2;
 42019  00E9CE  0100               	movlb	0	; () banked
 42020  00E9D0  5165               	movf	__parse_command_calibration@dat2& (0+255),w,b
 42021  00E9D2  0100               	movlb	0	; () banked
 42022  00E9D4  1369               	iorwf	__parse_command_calibration@parameter& (0+255),f,b
 42023                           
 42024                           ;app_device_custom_hid.c: 511: switch(item & 0x0F)
 42025  00E9D6  D045               	goto	l20667
 42026  00E9D8                     l20661:
 42027                           
 42028                           ; BSR set to: 0
 42029                           ;app_device_custom_hid.c: 515: calibrationParameters[item>>4].Offset = parameter;
 42030  00E9D8  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 42031  00E9DC  0100               	movlb	0	; () banked
 42032  00E9DE  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 42033  00E9E0  0E0F               	movlw	15
 42034  00E9E2  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 42035  00E9E4  0100               	movlb	0	; () banked
 42036  00E9E6  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42037  00E9E8  0D0C               	mullw	12
 42038  00E9EA  0E05               	movlw	5
 42039  00E9EC  26F3               	addwf	prodl,f,c
 42040  00E9EE  0E00               	movlw	0
 42041  00E9F0  22F4               	addwfc	prodh,f,c
 42042  00E9F2  0E00               	movlw	low _calibrationParameters
 42043  00E9F4  24F3               	addwf	prodl,w,c
 42044  00E9F6  6ED9               	movwf	fsr2l,c
 42045  00E9F8  0E03               	movlw	high _calibrationParameters
 42046  00E9FA  20F4               	addwfc	prodh,w,c
 42047  00E9FC  6EDA               	movwf	fsr2h,c
 42048  00E9FE  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 42049  00EA02  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 42050                           
 42051                           ;app_device_custom_hid.c: 516: break;
 42052  00EA06  D05D               	goto	l20685
 42053  00EA08                     l20663:
 42054                           
 42055                           ; BSR set to: 0
 42056                           ;app_device_custom_hid.c: 519: calibrationParameters[item>>4].Multiplier = parameter;
 42057  00EA08  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 42058  00EA0C  0100               	movlb	0	; () banked
 42059  00EA0E  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 42060  00EA10  0E0F               	movlw	15
 42061  00EA12  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 42062  00EA14  0100               	movlb	0	; () banked
 42063  00EA16  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42064  00EA18  0D0C               	mullw	12
 42065  00EA1A  0E07               	movlw	7
 42066  00EA1C  26F3               	addwf	prodl,f,c
 42067  00EA1E  0E00               	movlw	0
 42068  00EA20  22F4               	addwfc	prodh,f,c
 42069  00EA22  0E00               	movlw	low _calibrationParameters
 42070  00EA24  24F3               	addwf	prodl,w,c
 42071  00EA26  6ED9               	movwf	fsr2l,c
 42072  00EA28  0E03               	movlw	high _calibrationParameters
 42073  00EA2A  20F4               	addwfc	prodh,w,c
 42074  00EA2C  6EDA               	movwf	fsr2h,c
 42075  00EA2E  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 42076  00EA32  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 42077                           
 42078                           ;app_device_custom_hid.c: 520: calibrationParameters[item>>4].Shift = dat3;
 42079  00EA36  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 42080  00EA3A  0100               	movlb	0	; () banked
 42081  00EA3C  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 42082  00EA3E  0E0F               	movlw	15
 42083  00EA40  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 42084  00EA42  0100               	movlb	0	; () banked
 42085  00EA44  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42086  00EA46  0D0C               	mullw	12
 42087  00EA48  0E09               	movlw	9
 42088  00EA4A  26F3               	addwf	prodl,f,c
 42089  00EA4C  0E00               	movlw	0
 42090  00EA4E  22F4               	addwfc	prodh,f,c
 42091  00EA50  0E00               	movlw	low _calibrationParameters
 42092  00EA52  24F3               	addwf	prodl,w,c
 42093  00EA54  6ED9               	movwf	fsr2l,c
 42094  00EA56  0E03               	movlw	high _calibrationParameters
 42095  00EA58  20F4               	addwfc	prodh,w,c
 42096  00EA5A  6EDA               	movwf	fsr2h,c
 42097  00EA5C  C066  FFDF         	movff	__parse_command_calibration@dat3,indf2
 42098                           
 42099                           ; BSR set to: 0
 42100                           ;app_device_custom_hid.c: 522: }
 42101                           
 42102                           ;app_device_custom_hid.c: 521: break;
 42103  00EA60  D030               	goto	l20685
 42104  00EA62                     l20667:
 42105                           
 42106                           ; BSR set to: 0
 42107  00EA62  0100               	movlb	0	; () banked
 42108  00EA64  5163               	movf	__parse_command_calibration@item& (0+255),w,b
 42109  00EA66  0B0F               	andlw	15
 42110  00EA68  0100               	movlb	0	; () banked
 42111  00EA6A  6F67               	movwf	??__parse_command_calibration& (0+255),b
 42112  00EA6C  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 42113                           
 42114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42115                           ; Switch size 1, requested type "space"
 42116                           ; Number of cases is 1, Range of values is 0 to 0
 42117                           ; switch strategies available:
 42118                           ; Name         Instructions Cycles
 42119                           ; simple_byte            4     3 (average)
 42120                           ;	Chosen strategy is simple_byte
 42121  00EA6E  0100               	movlb	0	; () banked
 42122  00EA70  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 42123  00EA72  0A00               	xorlw	0	; case 0
 42124  00EA74  A4D8               	btfss	status,2,c
 42125  00EA76  D025               	goto	l20685
 42126                           
 42127                           ; BSR set to: 0
 42128                           ; Switch size 1, requested type "space"
 42129                           ; Number of cases is 2, Range of values is 0 to 1
 42130                           ; switch strategies available:
 42131                           ; Name         Instructions Cycles
 42132                           ; simple_byte            7     4 (average)
 42133                           ;	Chosen strategy is simple_byte
 42134  00EA78  0100               	movlb	0	; () banked
 42135  00EA7A  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42136  00EA7C  0A00               	xorlw	0	; case 0
 42137  00EA7E  B4D8               	btfsc	status,2,c
 42138  00EA80  D7AB               	goto	l20661
 42139  00EA82  0A01               	xorlw	1	; case 1
 42140  00EA84  B4D8               	btfsc	status,2,c
 42141  00EA86  D7C0               	goto	l20663
 42142                           
 42143                           ; BSR set to: 0
 42144                           ;app_device_custom_hid.c: 524: switch((calibrationIndex_t) item>>4)
 42145  00EA88  D01C               	goto	l20685
 42146  00EA8A                     l20669:
 42147                           
 42148                           ; BSR set to: 0
 42149                           ;app_device_custom_hid.c: 527: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 42150  00EA8A  0E02               	movlw	2
 42151  00EA8C  EC18  F099         	call	_schedule_eeprom_write_task
 42152                           
 42153                           ;app_device_custom_hid.c: 528: break;
 42154  00EA90  0012               	return	
 42155  00EA92                     l20671:
 42156                           
 42157                           ;app_device_custom_hid.c: 530: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 42158  00EA92  0E03               	movlw	3
 42159  00EA94  EC18  F099         	call	_schedule_eeprom_write_task
 42160                           
 42161                           ;app_device_custom_hid.c: 531: break;
 42162  00EA98  0012               	return	
 42163  00EA9A                     l20673:
 42164                           
 42165                           ;app_device_custom_hid.c: 533: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 42166  00EA9A  0E04               	movlw	4
 42167  00EA9C  EC18  F099         	call	_schedule_eeprom_write_task
 42168                           
 42169                           ;app_device_custom_hid.c: 534: break;
 42170  00EAA0  0012               	return	
 42171  00EAA2                     l20675:
 42172                           
 42173                           ;app_device_custom_hid.c: 536: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 42174  00EAA2  0E05               	movlw	5
 42175  00EAA4  EC18  F099         	call	_schedule_eeprom_write_task
 42176                           
 42177                           ;app_device_custom_hid.c: 537: break;
 42178  00EAA8  0012               	return	
 42179  00EAAA                     l20677:
 42180                           
 42181                           ;app_device_custom_hid.c: 539: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 42182  00EAAA  0E06               	movlw	6
 42183  00EAAC  EC18  F099         	call	_schedule_eeprom_write_task
 42184                           
 42185                           ;app_device_custom_hid.c: 540: break;
 42186  00EAB0  0012               	return	
 42187  00EAB2                     l20679:
 42188                           
 42189                           ;app_device_custom_hid.c: 542: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 42190  00EAB2  0E07               	movlw	7
 42191  00EAB4  EC18  F099         	call	_schedule_eeprom_write_task
 42192                           
 42193                           ;app_device_custom_hid.c: 543: break;
 42194  00EAB8  0012               	return	
 42195  00EABA                     l20681:
 42196                           
 42197                           ;app_device_custom_hid.c: 545: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 42198  00EABA  0E08               	movlw	8
 42199  00EABC  EC18  F099         	call	_schedule_eeprom_write_task
 42200                           
 42201                           ;app_device_custom_hid.c: 547: }
 42202                           
 42203                           ;app_device_custom_hid.c: 546: break;
 42204  00EAC0  0012               	return	
 42205  00EAC2                     l20685:
 42206  00EAC2  0100               	movlb	0	; () banked
 42207  00EAC4  3963               	swapf	__parse_command_calibration@item& (0+255),w,b
 42208  00EAC6  0B0F               	andlw	15
 42209  00EAC8  0100               	movlb	0	; () banked
 42210  00EACA  6F67               	movwf	??__parse_command_calibration& (0+255),b
 42211  00EACC  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 42212                           
 42213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42214                           ; Switch size 1, requested type "space"
 42215                           ; Number of cases is 1, Range of values is 0 to 0
 42216                           ; switch strategies available:
 42217                           ; Name         Instructions Cycles
 42218                           ; simple_byte            4     3 (average)
 42219                           ;	Chosen strategy is simple_byte
 42220  00EACE  0100               	movlb	0	; () banked
 42221  00EAD0  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 42222  00EAD2  0A00               	xorlw	0	; case 0
 42223  00EAD4  A4D8               	btfss	status,2,c
 42224  00EAD6  0012               	return	
 42225                           
 42226                           ; BSR set to: 0
 42227                           ; Switch size 1, requested type "space"
 42228                           ; Number of cases is 7, Range of values is 0 to 6
 42229                           ; switch strategies available:
 42230                           ; Name         Instructions Cycles
 42231                           ; simple_byte           22    12 (average)
 42232                           ;	Chosen strategy is simple_byte
 42233  00EAD8  0100               	movlb	0	; () banked
 42234  00EADA  5167               	movf	??__parse_command_calibration& (0+255),w,b
 42235  00EADC  0A00               	xorlw	0	; case 0
 42236  00EADE  B4D8               	btfsc	status,2,c
 42237  00EAE0  D7D4               	goto	l20669
 42238  00EAE2  0A01               	xorlw	1	; case 1
 42239  00EAE4  B4D8               	btfsc	status,2,c
 42240  00EAE6  D7D5               	goto	l20671
 42241  00EAE8  0A03               	xorlw	3	; case 2
 42242  00EAEA  B4D8               	btfsc	status,2,c
 42243  00EAEC  D7D6               	goto	l20673
 42244  00EAEE  0A01               	xorlw	1	; case 3
 42245  00EAF0  B4D8               	btfsc	status,2,c
 42246  00EAF2  D7D7               	goto	l20675
 42247  00EAF4  0A07               	xorlw	7	; case 4
 42248  00EAF6  B4D8               	btfsc	status,2,c
 42249  00EAF8  D7D8               	goto	l20677
 42250  00EAFA  0A01               	xorlw	1	; case 5
 42251  00EAFC  B4D8               	btfsc	status,2,c
 42252  00EAFE  D7D9               	goto	l20679
 42253  00EB00  0A03               	xorlw	3	; case 6
 42254  00EB02  A4D8               	btfss	status,2,c
 42255  00EB04  0012               	return	
 42256  00EB06  D7D9               	goto	l20681
 42257  00EB08                     __end_of__parse_command_calibration:
 42258                           	opt stack 0
 42259                           tosu	equ	0xFFF
 42260                           tosh	equ	0xFFE
 42261                           tosl	equ	0xFFD
 42262                           pclath	equ	0xFFA
 42263                           tblptru	equ	0xFF8
 42264                           tblptrh	equ	0xFF7
 42265                           tblptrl	equ	0xFF6
 42266                           tablat	equ	0xFF5
 42267                           prodh	equ	0xFF4
 42268                           prodl	equ	0xFF3
 42269                           intcon	equ	0xFF2
 42270                           intcon2	equ	0xFF1
 42271                           intcon3	equ	0xFF0
 42272                           postinc0	equ	0xFEE
 42273                           wreg	equ	0xFE8
 42274                           indf1	equ	0xFE7
 42275                           postinc1	equ	0xFE6
 42276                           postdec1	equ	0xFE5
 42277                           plusw1	equ	0xFE3
 42278                           fsr1h	equ	0xFE2
 42279                           fsr1l	equ	0xFE1
 42280                           indf2	equ	0xFDF
 42281                           postinc2	equ	0xFDE
 42282                           postdec2	equ	0xFDD
 42283                           plusw2	equ	0xFDB
 42284                           fsr2h	equ	0xFDA
 42285                           fsr2l	equ	0xFD9
 42286                           status	equ	0xFD8
 42287                           
 42288 ;; *************** function _schedule_eeprom_write_task *****************
 42289 ;; Defined at:
 42290 ;;		line 741 in file "i2c.c"
 42291 ;; Parameters:    Size  Location     Type
 42292 ;;  task            1    wreg     enum E8252
 42293 ;; Auto vars:     Size  Location     Type
 42294 ;;  task            1    1[BANK0 ] enum E8252
 42295 ;;  idx             1    2[BANK0 ] unsigned char 
 42296 ;; Return value:  Size  Location     Type
 42297 ;;                  1    wreg      void 
 42298 ;; Registers used:
 42299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42300 ;; Tracked objects:
 42301 ;;		On entry : 0/0
 42302 ;;		On exit  : 0/0
 42303 ;;		Unchanged: 0/0
 42304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42306 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42307 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42308 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42309 ;;Total ram usage:        3 bytes
 42310 ;; Hardware stack levels used:    1
 42311 ;; Hardware stack levels required when called:   10
 42312 ;; This function calls:
 42313 ;;		Nothing
 42314 ;; This function is called by:
 42315 ;;		__parse_command_calibration
 42316 ;;		_i2c_eeprom_read_calibration
 42317 ;; This function uses a non-reentrant model
 42318 ;;
 42319                           
 42320                           	psect	text193
 42321  013230                     __ptext193:
 42322                           	opt stack 0
 42323  013230                     _schedule_eeprom_write_task:
 42324                           	opt stack 18
 42325                           
 42326                           ;incstack = 0
 42327                           ;schedule_eeprom_write_task@task stored from wreg
 42328  013230  0100               	movlb	0	; () banked
 42329  013232  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 42330                           
 42331                           ;i2c.c: 743: uint8_t idx;
 42332                           ;i2c.c: 745: for(idx=task_list_read_index; idx!=task_list_write_index; idx=(idx+1) & 0x0
      +                          F)
 42333  013234  C01E  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 42334  013238  D013               	goto	l1660
 42335  01323A                     l19515:
 42336                           
 42337                           ;i2c.c: 746: {
 42338                           ;i2c.c: 747: if (task_list[idx] == task)
 42339  01323A  0100               	movlb	0	; () banked
 42340  01323C  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 42341  01323E  0D01               	mullw	1
 42342  013240  0E68               	movlw	low _task_list
 42343  013242  24F3               	addwf	prodl,w,c
 42344  013244  6ED9               	movwf	fsr2l,c
 42345  013246  0E04               	movlw	high _task_list
 42346  013248  20F4               	addwfc	prodh,w,c
 42347  01324A  6EDA               	movwf	fsr2h,c
 42348  01324C  0100               	movlb	0	; () banked
 42349  01324E  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 42350  013250  18DE               	xorwf	postinc2,w,c
 42351  013252  B4D8               	btfsc	status,2,c
 42352  013254  0012               	return	
 42353                           
 42354                           ; BSR set to: 0
 42355                           
 42356                           ; BSR set to: 0
 42357                           
 42358                           ; BSR set to: 0
 42359                           ;i2c.c: 748: {
 42360                           ;i2c.c: 750: return;
 42361  013256  0100               	movlb	0	; () banked
 42362  013258  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 42363  01325A  0B0F               	andlw	15
 42364  01325C  0100               	movlb	0	; () banked
 42365  01325E  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 42366  013260                     l1660:
 42367  013260  501D               	movf	_task_list_write_index,w,c
 42368  013262  0100               	movlb	0	; () banked
 42369  013264  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 42370  013266  A4D8               	btfss	status,2,c
 42371  013268  D7E8               	goto	l19515
 42372                           
 42373                           ; BSR set to: 0
 42374                           ;i2c.c: 751: }
 42375                           ;i2c.c: 752: }
 42376                           ;i2c.c: 754: task_list[task_list_write_index] = task;
 42377                           
 42378                           ; BSR set to: 0
 42379  01326A  501D               	movf	_task_list_write_index,w,c
 42380  01326C  0D01               	mullw	1
 42381  01326E  0E68               	movlw	low _task_list
 42382  013270  24F3               	addwf	prodl,w,c
 42383  013272  6ED9               	movwf	fsr2l,c
 42384  013274  0E04               	movlw	high _task_list
 42385  013276  20F4               	addwfc	prodh,w,c
 42386  013278  6EDA               	movwf	fsr2h,c
 42387  01327A  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 42388                           
 42389                           ; BSR set to: 0
 42390                           ;i2c.c: 755: ++task_list_write_index;
 42391  01327E  2A1D               	incf	_task_list_write_index,f,c
 42392                           
 42393                           ; BSR set to: 0
 42394                           ;i2c.c: 756: task_list_write_index &= 0x0F;
 42395  013280  0E0F               	movlw	15
 42396  013282  161D               	andwf	_task_list_write_index,f,c
 42397                           
 42398                           ; BSR set to: 0
 42399  013284  0012               	return		;funcret
 42400  013286                     __end_of_schedule_eeprom_write_task:
 42401                           	opt stack 0
 42402                           tosu	equ	0xFFF
 42403                           tosh	equ	0xFFE
 42404                           tosl	equ	0xFFD
 42405                           pclath	equ	0xFFA
 42406                           tblptru	equ	0xFF8
 42407                           tblptrh	equ	0xFF7
 42408                           tblptrl	equ	0xFF6
 42409                           tablat	equ	0xFF5
 42410                           prodh	equ	0xFF4
 42411                           prodl	equ	0xFF3
 42412                           intcon	equ	0xFF2
 42413                           intcon2	equ	0xFF1
 42414                           intcon3	equ	0xFF0
 42415                           postinc0	equ	0xFEE
 42416                           wreg	equ	0xFE8
 42417                           indf1	equ	0xFE7
 42418                           postinc1	equ	0xFE6
 42419                           postdec1	equ	0xFE5
 42420                           plusw1	equ	0xFE3
 42421                           fsr1h	equ	0xFE2
 42422                           fsr1l	equ	0xFE1
 42423                           indf2	equ	0xFDF
 42424                           postinc2	equ	0xFDE
 42425                           postdec2	equ	0xFDD
 42426                           plusw2	equ	0xFDB
 42427                           fsr2h	equ	0xFDA
 42428                           fsr2l	equ	0xFD9
 42429                           status	equ	0xFD8
 42430                           
 42431 ;; *************** function __fill_buffer_get_status *****************
 42432 ;; Defined at:
 42433 ;;		line 269 in file "app_device_custom_hid.c"
 42434 ;; Parameters:    Size  Location     Type
 42435 ;;		None
 42436 ;; Auto vars:     Size  Location     Type
 42437 ;;		None
 42438 ;; Return value:  Size  Location     Type
 42439 ;;                  1    wreg      void 
 42440 ;; Registers used:
 42441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42442 ;; Tracked objects:
 42443 ;;		On entry : 0/0
 42444 ;;		On exit  : 0/0
 42445 ;;		Unchanged: 0/0
 42446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42449 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42450 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42451 ;;Total ram usage:        4 bytes
 42452 ;; Hardware stack levels used:    1
 42453 ;; Hardware stack levels required when called:   11
 42454 ;; This function calls:
 42455 ;;		_buck_get_dutycycle
 42456 ;;		_buck_get_mode
 42457 ;;		_buck_remote_get_dutycycle
 42458 ;;		_buck_remote_get_status
 42459 ;;		_rtcc_get_day
 42460 ;;		_rtcc_get_hours
 42461 ;;		_rtcc_get_minutes
 42462 ;;		_rtcc_get_month
 42463 ;;		_rtcc_get_seconds
 42464 ;;		_rtcc_get_year
 42465 ;;		_ui_get_status
 42466 ;; This function is called by:
 42467 ;;		_APP_DeviceCustomHIDTasks
 42468 ;; This function uses a non-reentrant model
 42469 ;;
 42470                           
 42471                           	psect	text194
 42472  00CCE8                     __ptext194:
 42473                           	opt stack 0
 42474  00CCE8                     __fill_buffer_get_status:
 42475                           	opt stack 18
 42476                           
 42477                           ;app_device_custom_hid.c: 272: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 42478                           
 42479                           ; BSR set to: 0
 42480                           ;incstack = 0
 42481  00CCE8  0E10               	movlw	16
 42482  00CCEA  0103               	movlb	3	; () banked
 42483  00CCEC  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42484                           
 42485                           ; BSR set to: 3
 42486                           ;app_device_custom_hid.c: 274: ToSendDataBuffer[1] = (uint8_t) os.input_voltage;
 42487  00CCEE  C212  F3A5         	movff	_os+18,_ToSendDataBuffer+1	;volatile
 42488                           
 42489                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[2] = os.input_voltage >> 8;
 42490  00CCF2  0102               	movlb	2	; () banked
 42491  00CCF4  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 42492  00CCF6  0103               	movlb	3	; () banked
 42493  00CCF8  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 42494                           
 42495                           ; BSR set to: 3
 42496                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[3] = (uint8_t) os.output_voltage;
 42497  00CCFA  C227  F3A7         	movff	_os+39,_ToSendDataBuffer+3	;volatile
 42498                           
 42499                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[4] = os.output_voltage >> 8;
 42500  00CCFE  0102               	movlb	2	; () banked
 42501  00CD00  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 42502  00CD02  0103               	movlb	3	; () banked
 42503  00CD04  6FA8               	movwf	(_ToSendDataBuffer+4)& (0+255),b
 42504                           
 42505                           ; BSR set to: 3
 42506                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[5] = (uint8_t) os.input_current;
 42507  00CD06  C21D  F3A9         	movff	_os+29,_ToSendDataBuffer+5	;volatile
 42508                           
 42509                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[6] = os.input_current >> 8;
 42510  00CD0A  0102               	movlb	2	; () banked
 42511  00CD0C  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 42512  00CD0E  0103               	movlb	3	; () banked
 42513  00CD10  6FAA               	movwf	(_ToSendDataBuffer+6)& (0+255),b
 42514                           
 42515                           ; BSR set to: 3
 42516                           ;app_device_custom_hid.c: 283: ToSendDataBuffer[7] = (uint8_t) os.output_current;
 42517  00CD12  C232  F3AB         	movff	_os+50,_ToSendDataBuffer+7	;volatile
 42518                           
 42519                           ;app_device_custom_hid.c: 284: ToSendDataBuffer[8] = os.output_current >> 8;
 42520  00CD16  0102               	movlb	2	; () banked
 42521  00CD18  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 42522  00CD1A  0103               	movlb	3	; () banked
 42523  00CD1C  6FAC               	movwf	(_ToSendDataBuffer+8)& (0+255),b
 42524                           
 42525                           ; BSR set to: 3
 42526                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[9] = (uint8_t) os.temperature_onboard;
 42527  00CD1E  C236  F3AD         	movff	_os+54,_ToSendDataBuffer+9	;volatile
 42528                           
 42529                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[10] = os.temperature_onboard >> 8;
 42530  00CD22  0102               	movlb	2	; () banked
 42531  00CD24  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 42532  00CD26  0103               	movlb	3	; () banked
 42533  00CD28  6FAE               	movwf	(_ToSendDataBuffer+10)& (0+255),b
 42534                           
 42535                           ; BSR set to: 3
 42536                           ;app_device_custom_hid.c: 289: ToSendDataBuffer[11] = (uint8_t) os.temperature_external_
      +                          1;
 42537  00CD2A  C23A  F3AF         	movff	_os+58,_ToSendDataBuffer+11	;volatile
 42538                           
 42539                           ;app_device_custom_hid.c: 290: ToSendDataBuffer[12] = os.temperature_external_1 >> 8;
 42540  00CD2E  0102               	movlb	2	; () banked
 42541  00CD30  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 42542  00CD32  0103               	movlb	3	; () banked
 42543  00CD34  6FB0               	movwf	(_ToSendDataBuffer+12)& (0+255),b
 42544                           
 42545                           ; BSR set to: 3
 42546                           ;app_device_custom_hid.c: 292: ToSendDataBuffer[13] = (uint8_t) os.temperature_external_
      +                          2;
 42547  00CD36  C23E  F3B1         	movff	_os+62,_ToSendDataBuffer+13	;volatile
 42548                           
 42549                           ;app_device_custom_hid.c: 293: ToSendDataBuffer[14] = os.temperature_external_2 >> 8;
 42550  00CD3A  0102               	movlb	2	; () banked
 42551  00CD3C  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 42552  00CD3E  0103               	movlb	3	; () banked
 42553  00CD40  6FB2               	movwf	(_ToSendDataBuffer+14)& (0+255),b
 42554                           
 42555                           ; BSR set to: 3
 42556                           ;app_device_custom_hid.c: 295: ToSendDataBuffer[15] = os.outputs;
 42557  00CD42  C205  F3B3         	movff	_os+5,_ToSendDataBuffer+15	;volatile
 42558                           
 42559                           ; BSR set to: 3
 42560                           ;app_device_custom_hid.c: 297: ToSendDataBuffer[16] = os.display_mode;
 42561  00CD46  C240  F3B4         	movff	_os+64,_ToSendDataBuffer+16	;volatile
 42562                           
 42563                           ; BSR set to: 3
 42564                           ;app_device_custom_hid.c: 299: ToSendDataBuffer[17] = rtcc_get_year();
 42565  00CD4A  ECA7  F0A0         	call	_rtcc_get_year	;wreg free
 42566  00CD4E  0103               	movlb	3	; () banked
 42567  00CD50  6FB5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 42568                           
 42569                           ; BSR set to: 3
 42570                           ;app_device_custom_hid.c: 300: ToSendDataBuffer[18] = rtcc_get_month();
 42571  00CD52  ECBB  F0A0         	call	_rtcc_get_month	;wreg free
 42572  00CD56  0103               	movlb	3	; () banked
 42573  00CD58  6FB6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 42574                           
 42575                           ; BSR set to: 3
 42576                           ;app_device_custom_hid.c: 301: ToSendDataBuffer[19] = rtcc_get_day();
 42577  00CD5A  ECD9  F0A0         	call	_rtcc_get_day	;wreg free
 42578  00CD5E  0103               	movlb	3	; () banked
 42579  00CD60  6FB7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 42580                           
 42581                           ; BSR set to: 3
 42582                           ;app_device_custom_hid.c: 302: ToSendDataBuffer[20] = rtcc_get_hours();
 42583  00CD62  ECCF  F0A0         	call	_rtcc_get_hours	;wreg free
 42584  00CD66  0103               	movlb	3	; () banked
 42585  00CD68  6FB8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 42586                           
 42587                           ; BSR set to: 3
 42588                           ;app_device_custom_hid.c: 303: ToSendDataBuffer[21] = rtcc_get_minutes();
 42589  00CD6A  ECC5  F0A0         	call	_rtcc_get_minutes	;wreg free
 42590  00CD6E  0103               	movlb	3	; () banked
 42591  00CD70  6FB9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 42592                           
 42593                           ; BSR set to: 3
 42594                           ;app_device_custom_hid.c: 304: ToSendDataBuffer[22] = rtcc_get_seconds();
 42595  00CD72  ECB1  F0A0         	call	_rtcc_get_seconds	;wreg free
 42596  00CD76  0103               	movlb	3	; () banked
 42597  00CD78  6FBA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 42598                           
 42599                           ; BSR set to: 3
 42600                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[23] = buck_get_mode();
 42601  00CD7A  EC7F  F0A1         	call	_buck_get_mode	;wreg free
 42602  00CD7E  0103               	movlb	3	; () banked
 42603  00CD80  6FBB               	movwf	(_ToSendDataBuffer+23)& (0+255),b
 42604                           
 42605                           ; BSR set to: 3
 42606                           ;app_device_custom_hid.c: 307: ToSendDataBuffer[24] = buck_get_dutycycle();
 42607  00CD82  EC7A  F0A1         	call	_buck_get_dutycycle	;wreg free
 42608  00CD86  0103               	movlb	3	; () banked
 42609  00CD88  6FBC               	movwf	(_ToSendDataBuffer+24)& (0+255),b
 42610                           
 42611                           ; BSR set to: 3
 42612                           ;app_device_custom_hid.c: 308: ToSendDataBuffer[25] = buck_remote_get_status();
 42613  00CD8A  EC2E  F09D         	call	_buck_remote_get_status	;wreg free
 42614  00CD8E  0103               	movlb	3	; () banked
 42615  00CD90  6FBD               	movwf	(_ToSendDataBuffer+25)& (0+255),b
 42616                           
 42617                           ; BSR set to: 3
 42618                           ;app_device_custom_hid.c: 309: ToSendDataBuffer[26] = buck_remote_get_dutycycle();
 42619  00CD92  EC77  F0A1         	call	_buck_remote_get_dutycycle	;wreg free
 42620  00CD96  0103               	movlb	3	; () banked
 42621  00CD98  6FBE               	movwf	(_ToSendDataBuffer+26)& (0+255),b
 42622                           
 42623                           ; BSR set to: 3
 42624                           ;app_device_custom_hid.c: 311: ToSendDataBuffer[27] = (uint8_t) os.temperature_onboard_a
      +                          dc;
 42625  00CD9A  C234  F3BF         	movff	_os+52,_ToSendDataBuffer+27	;volatile
 42626                           
 42627                           ; BSR set to: 3
 42628                           ;app_device_custom_hid.c: 312: ToSendDataBuffer[28] = os.temperature_onboard_adc >> 8;
 42629  00CD9E  0102               	movlb	2	; () banked
 42630  00CDA0  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 42631  00CDA2  0103               	movlb	3	; () banked
 42632  00CDA4  6FC0               	movwf	(_ToSendDataBuffer+28)& (0+255),b
 42633                           
 42634                           ; BSR set to: 3
 42635                           ;app_device_custom_hid.c: 313: ToSendDataBuffer[29] = (uint8_t) os.temperature_external_
      +                          1_adc;
 42636  00CDA6  C238  F3C1         	movff	_os+56,_ToSendDataBuffer+29	;volatile
 42637                           
 42638                           ; BSR set to: 3
 42639                           ;app_device_custom_hid.c: 314: ToSendDataBuffer[30] = os.temperature_external_1_adc >> 8
      +                          ;
 42640  00CDAA  0102               	movlb	2	; () banked
 42641  00CDAC  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 42642  00CDAE  0103               	movlb	3	; () banked
 42643  00CDB0  6FC2               	movwf	(_ToSendDataBuffer+30)& (0+255),b
 42644                           
 42645                           ; BSR set to: 3
 42646                           ;app_device_custom_hid.c: 315: ToSendDataBuffer[31] = (uint8_t) os.temperature_external_
      +                          2_adc;
 42647  00CDB2  C23C  F3C3         	movff	_os+60,_ToSendDataBuffer+31	;volatile
 42648                           
 42649                           ; BSR set to: 3
 42650                           ;app_device_custom_hid.c: 316: ToSendDataBuffer[32] = os.temperature_external_2_adc >> 8
      +                          ;
 42651  00CDB6  0102               	movlb	2	; () banked
 42652  00CDB8  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 42653  00CDBA  0103               	movlb	3	; () banked
 42654  00CDBC  6FC4               	movwf	(_ToSendDataBuffer+32)& (0+255),b
 42655                           
 42656                           ; BSR set to: 3
 42657                           ;app_device_custom_hid.c: 317: ToSendDataBuffer[33] = (uint8_t) os.input_voltage_adc[(os
      +                          .timeSlot&0b00110000)>>4];
 42658  00CDBE  0102               	movlb	2	; () banked
 42659  00CDC0  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42660  00CDC2  0B0F               	andlw	15
 42661  00CDC4  0B03               	andlw	3
 42662  00CDC6  0100               	movlb	0	; () banked
 42663  00CDC8  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42664  00CDCA  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42665  00CDCC  90D8               	bcf	status,0,c
 42666  00CDCE  0100               	movlb	0	; () banked
 42667  00CDD0  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42668  00CDD2  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42669  00CDD4  0E0A               	movlw	low (_os+10)
 42670  00CDD6  0100               	movlb	0	; () banked
 42671  00CDD8  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42672  00CDDA  6ED9               	movwf	fsr2l,c
 42673  00CDDC  0E02               	movlw	high (_os+10)
 42674  00CDDE  0100               	movlb	0	; () banked
 42675  00CDE0  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42676  00CDE2  6EDA               	movwf	fsr2h,c
 42677  00CDE4  50DF               	movf	indf2,w,c
 42678  00CDE6  0103               	movlb	3	; () banked
 42679  00CDE8  6FC5               	movwf	(_ToSendDataBuffer+33)& (0+255),b
 42680                           
 42681                           ; BSR set to: 3
 42682                           ;app_device_custom_hid.c: 318: ToSendDataBuffer[34] = os.input_voltage_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 42683  00CDEA  0102               	movlb	2	; () banked
 42684  00CDEC  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42685  00CDEE  0B0F               	andlw	15
 42686  00CDF0  0B03               	andlw	3
 42687  00CDF2  0100               	movlb	0	; () banked
 42688  00CDF4  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42689  00CDF6  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42690  00CDF8  90D8               	bcf	status,0,c
 42691  00CDFA  0100               	movlb	0	; () banked
 42692  00CDFC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42693  00CDFE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42694  00CE00  0E0A               	movlw	low (_os+10)
 42695  00CE02  0100               	movlb	0	; () banked
 42696  00CE04  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42697  00CE06  6ED9               	movwf	fsr2l,c
 42698  00CE08  0E02               	movlw	high (_os+10)
 42699  00CE0A  0100               	movlb	0	; () banked
 42700  00CE0C  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42701  00CE0E  6EDA               	movwf	fsr2h,c
 42702  00CE10  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42703  00CE14  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42704  00CE18  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42705  00CE1C  0100               	movlb	0	; () banked
 42706  00CE1E  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42707  00CE20  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42708  00CE22  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42709  00CE24  0100               	movlb	0	; () banked
 42710  00CE26  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42711  00CE28  0103               	movlb	3	; () banked
 42712  00CE2A  6FC6               	movwf	(_ToSendDataBuffer+34)& (0+255),b
 42713                           
 42714                           ; BSR set to: 3
 42715                           ;app_device_custom_hid.c: 319: ToSendDataBuffer[35] = (uint8_t) os.output_voltage_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 42716  00CE2C  0102               	movlb	2	; () banked
 42717  00CE2E  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42718  00CE30  0B0F               	andlw	15
 42719  00CE32  0B03               	andlw	3
 42720  00CE34  0100               	movlb	0	; () banked
 42721  00CE36  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42722  00CE38  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42723  00CE3A  90D8               	bcf	status,0,c
 42724  00CE3C  0100               	movlb	0	; () banked
 42725  00CE3E  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42726  00CE40  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42727  00CE42  0E1F               	movlw	low (_os+31)
 42728  00CE44  0100               	movlb	0	; () banked
 42729  00CE46  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42730  00CE48  6ED9               	movwf	fsr2l,c
 42731  00CE4A  0E02               	movlw	high (_os+31)
 42732  00CE4C  0100               	movlb	0	; () banked
 42733  00CE4E  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42734  00CE50  6EDA               	movwf	fsr2h,c
 42735  00CE52  50DF               	movf	indf2,w,c
 42736  00CE54  0103               	movlb	3	; () banked
 42737  00CE56  6FC7               	movwf	(_ToSendDataBuffer+35)& (0+255),b
 42738                           
 42739                           ; BSR set to: 3
 42740                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[36] = os.output_voltage_adc[(os.timeSlot
      +                          &0b00110000)>>4] >> 8;
 42741  00CE58  0102               	movlb	2	; () banked
 42742  00CE5A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42743  00CE5C  0B0F               	andlw	15
 42744  00CE5E  0B03               	andlw	3
 42745  00CE60  0100               	movlb	0	; () banked
 42746  00CE62  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42747  00CE64  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42748  00CE66  90D8               	bcf	status,0,c
 42749  00CE68  0100               	movlb	0	; () banked
 42750  00CE6A  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42751  00CE6C  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42752  00CE6E  0E1F               	movlw	low (_os+31)
 42753  00CE70  0100               	movlb	0	; () banked
 42754  00CE72  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42755  00CE74  6ED9               	movwf	fsr2l,c
 42756  00CE76  0E02               	movlw	high (_os+31)
 42757  00CE78  0100               	movlb	0	; () banked
 42758  00CE7A  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42759  00CE7C  6EDA               	movwf	fsr2h,c
 42760  00CE7E  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42761  00CE82  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42762  00CE86  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42763  00CE8A  0100               	movlb	0	; () banked
 42764  00CE8C  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42765  00CE8E  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42766  00CE90  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42767  00CE92  0100               	movlb	0	; () banked
 42768  00CE94  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42769  00CE96  0103               	movlb	3	; () banked
 42770  00CE98  6FC8               	movwf	(_ToSendDataBuffer+36)& (0+255),b
 42771                           
 42772                           ; BSR set to: 3
 42773                           ;app_device_custom_hid.c: 321: ToSendDataBuffer[37] = (uint8_t) os.input_current_adc[(os
      +                          .timeSlot&0b00110000) >>4];
 42774  00CE9A  0102               	movlb	2	; () banked
 42775  00CE9C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42776  00CE9E  0B0F               	andlw	15
 42777  00CEA0  0B03               	andlw	3
 42778  00CEA2  0100               	movlb	0	; () banked
 42779  00CEA4  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42780  00CEA6  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42781  00CEA8  90D8               	bcf	status,0,c
 42782  00CEAA  0100               	movlb	0	; () banked
 42783  00CEAC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42784  00CEAE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42785  00CEB0  0E14               	movlw	low (_os+20)
 42786  00CEB2  0100               	movlb	0	; () banked
 42787  00CEB4  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42788  00CEB6  6ED9               	movwf	fsr2l,c
 42789  00CEB8  0E02               	movlw	high (_os+20)
 42790  00CEBA  0100               	movlb	0	; () banked
 42791  00CEBC  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42792  00CEBE  6EDA               	movwf	fsr2h,c
 42793  00CEC0  50DF               	movf	indf2,w,c
 42794  00CEC2  0103               	movlb	3	; () banked
 42795  00CEC4  6FC9               	movwf	(_ToSendDataBuffer+37)& (0+255),b
 42796                           
 42797                           ; BSR set to: 3
 42798                           ;app_device_custom_hid.c: 322: ToSendDataBuffer[38] = os.input_current_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 42799  00CEC6  0102               	movlb	2	; () banked
 42800  00CEC8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42801  00CECA  0B0F               	andlw	15
 42802  00CECC  0B03               	andlw	3
 42803  00CECE  0100               	movlb	0	; () banked
 42804  00CED0  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42805  00CED2  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42806  00CED4  90D8               	bcf	status,0,c
 42807  00CED6  0100               	movlb	0	; () banked
 42808  00CED8  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42809  00CEDA  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42810  00CEDC  0E14               	movlw	low (_os+20)
 42811  00CEDE  0100               	movlb	0	; () banked
 42812  00CEE0  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42813  00CEE2  6ED9               	movwf	fsr2l,c
 42814  00CEE4  0E02               	movlw	high (_os+20)
 42815  00CEE6  0100               	movlb	0	; () banked
 42816  00CEE8  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42817  00CEEA  6EDA               	movwf	fsr2h,c
 42818  00CEEC  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42819  00CEF0  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42820  00CEF4  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42821  00CEF8  0100               	movlb	0	; () banked
 42822  00CEFA  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42823  00CEFC  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42824  00CEFE  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42825  00CF00  0100               	movlb	0	; () banked
 42826  00CF02  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42827  00CF04  0103               	movlb	3	; () banked
 42828  00CF06  6FCA               	movwf	(_ToSendDataBuffer+38)& (0+255),b
 42829                           
 42830                           ; BSR set to: 3
 42831                           ;app_device_custom_hid.c: 323: ToSendDataBuffer[39] = (uint8_t) os.output_current_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 42832  00CF08  0102               	movlb	2	; () banked
 42833  00CF0A  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42834  00CF0C  0B0F               	andlw	15
 42835  00CF0E  0B03               	andlw	3
 42836  00CF10  0100               	movlb	0	; () banked
 42837  00CF12  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42838  00CF14  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42839  00CF16  90D8               	bcf	status,0,c
 42840  00CF18  0100               	movlb	0	; () banked
 42841  00CF1A  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42842  00CF1C  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42843  00CF1E  0E29               	movlw	low (_os+41)
 42844  00CF20  0100               	movlb	0	; () banked
 42845  00CF22  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42846  00CF24  6ED9               	movwf	fsr2l,c
 42847  00CF26  0E02               	movlw	high (_os+41)
 42848  00CF28  0100               	movlb	0	; () banked
 42849  00CF2A  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42850  00CF2C  6EDA               	movwf	fsr2h,c
 42851  00CF2E  50DF               	movf	indf2,w,c
 42852  00CF30  0103               	movlb	3	; () banked
 42853  00CF32  6FCB               	movwf	(_ToSendDataBuffer+39)& (0+255),b
 42854                           
 42855                           ; BSR set to: 3
 42856                           ;app_device_custom_hid.c: 324: ToSendDataBuffer[40] = os.output_current_adc[(os.timeSlot
      +                          &0b00110000)>>4]>> 8;
 42857  00CF34  0102               	movlb	2	; () banked
 42858  00CF36  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42859  00CF38  0B0F               	andlw	15
 42860  00CF3A  0B03               	andlw	3
 42861  00CF3C  0100               	movlb	0	; () banked
 42862  00CF3E  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42863  00CF40  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42864  00CF42  90D8               	bcf	status,0,c
 42865  00CF44  0100               	movlb	0	; () banked
 42866  00CF46  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42867  00CF48  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42868  00CF4A  0E29               	movlw	low (_os+41)
 42869  00CF4C  0100               	movlb	0	; () banked
 42870  00CF4E  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42871  00CF50  6ED9               	movwf	fsr2l,c
 42872  00CF52  0E02               	movlw	high (_os+41)
 42873  00CF54  0100               	movlb	0	; () banked
 42874  00CF56  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42875  00CF58  6EDA               	movwf	fsr2h,c
 42876  00CF5A  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42877  00CF5E  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42878  00CF62  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42879  00CF66  0100               	movlb	0	; () banked
 42880  00CF68  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42881  00CF6A  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42882  00CF6C  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42883  00CF6E  0100               	movlb	0	; () banked
 42884  00CF70  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42885  00CF72  0103               	movlb	3	; () banked
 42886  00CF74  6FCC               	movwf	(_ToSendDataBuffer+40)& (0+255),b
 42887                           
 42888                           ; BSR set to: 3
 42889                           ;app_device_custom_hid.c: 326: ToSendDataBuffer[41] = ui_get_status();
 42890  00CF76  EC74  F0A1         	call	_ui_get_status	;wreg free
 42891  00CF7A  0103               	movlb	3	; () banked
 42892  00CF7C  6FCD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 42893                           
 42894                           ; BSR set to: 3
 42895                           ;app_device_custom_hid.c: 327: ToSendDataBuffer[42] = os.timeSlot;
 42896  00CF7E  C208  F3CE         	movff	_os+8,_ToSendDataBuffer+42	;volatile
 42897                           
 42898                           ; BSR set to: 3
 42899  00CF82  0012               	return		;funcret
 42900  00CF84                     __end_of__fill_buffer_get_status:
 42901                           	opt stack 0
 42902                           tosu	equ	0xFFF
 42903                           tosh	equ	0xFFE
 42904                           tosl	equ	0xFFD
 42905                           pclath	equ	0xFFA
 42906                           tblptru	equ	0xFF8
 42907                           tblptrh	equ	0xFF7
 42908                           tblptrl	equ	0xFF6
 42909                           tablat	equ	0xFF5
 42910                           prodh	equ	0xFF4
 42911                           prodl	equ	0xFF3
 42912                           intcon	equ	0xFF2
 42913                           intcon2	equ	0xFF1
 42914                           intcon3	equ	0xFF0
 42915                           postinc0	equ	0xFEE
 42916                           wreg	equ	0xFE8
 42917                           indf1	equ	0xFE7
 42918                           postinc1	equ	0xFE6
 42919                           postdec1	equ	0xFE5
 42920                           plusw1	equ	0xFE3
 42921                           fsr1h	equ	0xFE2
 42922                           fsr1l	equ	0xFE1
 42923                           indf2	equ	0xFDF
 42924                           postinc2	equ	0xFDE
 42925                           postdec2	equ	0xFDD
 42926                           plusw2	equ	0xFDB
 42927                           fsr2h	equ	0xFDA
 42928                           fsr2l	equ	0xFD9
 42929                           status	equ	0xFD8
 42930                           
 42931 ;; *************** function _ui_get_status *****************
 42932 ;; Defined at:
 42933 ;;		line 12 in file "ui.c"
 42934 ;; Parameters:    Size  Location     Type
 42935 ;;		None
 42936 ;; Auto vars:     Size  Location     Type
 42937 ;;		None
 42938 ;; Return value:  Size  Location     Type
 42939 ;;                  1    wreg      enum E9488
 42940 ;; Registers used:
 42941 ;;		wreg, status,2
 42942 ;; Tracked objects:
 42943 ;;		On entry : 0/0
 42944 ;;		On exit  : 0/0
 42945 ;;		Unchanged: 0/0
 42946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42951 ;;Total ram usage:        0 bytes
 42952 ;; Hardware stack levels used:    1
 42953 ;; Hardware stack levels required when called:   10
 42954 ;; This function calls:
 42955 ;;		Nothing
 42956 ;; This function is called by:
 42957 ;;		_main
 42958 ;;		__fill_buffer_get_status
 42959 ;; This function uses a non-reentrant model
 42960 ;;
 42961                           
 42962                           	psect	text195
 42963  0142E8                     __ptext195:
 42964                           	opt stack 0
 42965  0142E8                     _ui_get_status:
 42966                           	opt stack 20
 42967                           
 42968                           ;ui.c: 14: return userInterfaceStatus;
 42969                           
 42970                           ; BSR set to: 3
 42971                           ;incstack = 0
 42972  0142E8  0101               	movlb	1	; () banked
 42973  0142EA  51F3               	movf	_userInterfaceStatus& (0+255),w,b
 42974  0142EC  0012               	return	
 42975  0142EE                     __end_of_ui_get_status:
 42976                           	opt stack 0
 42977                           tosu	equ	0xFFF
 42978                           tosh	equ	0xFFE
 42979                           tosl	equ	0xFFD
 42980                           pclath	equ	0xFFA
 42981                           tblptru	equ	0xFF8
 42982                           tblptrh	equ	0xFF7
 42983                           tblptrl	equ	0xFF6
 42984                           tablat	equ	0xFF5
 42985                           prodh	equ	0xFF4
 42986                           prodl	equ	0xFF3
 42987                           intcon	equ	0xFF2
 42988                           intcon2	equ	0xFF1
 42989                           intcon3	equ	0xFF0
 42990                           postinc0	equ	0xFEE
 42991                           wreg	equ	0xFE8
 42992                           indf1	equ	0xFE7
 42993                           postinc1	equ	0xFE6
 42994                           postdec1	equ	0xFE5
 42995                           plusw1	equ	0xFE3
 42996                           fsr1h	equ	0xFE2
 42997                           fsr1l	equ	0xFE1
 42998                           indf2	equ	0xFDF
 42999                           postinc2	equ	0xFDE
 43000                           postdec2	equ	0xFDD
 43001                           plusw2	equ	0xFDB
 43002                           fsr2h	equ	0xFDA
 43003                           fsr2l	equ	0xFD9
 43004                           status	equ	0xFD8
 43005                           
 43006 ;; *************** function _rtcc_get_year *****************
 43007 ;; Defined at:
 43008 ;;		line 127 in file "rtcc.c"
 43009 ;; Parameters:    Size  Location     Type
 43010 ;;		None
 43011 ;; Auto vars:     Size  Location     Type
 43012 ;;		None
 43013 ;; Return value:  Size  Location     Type
 43014 ;;                  1    wreg      unsigned char 
 43015 ;; Registers used:
 43016 ;;		wreg, status,2
 43017 ;; Tracked objects:
 43018 ;;		On entry : 0/0
 43019 ;;		On exit  : 0/0
 43020 ;;		Unchanged: 0/0
 43021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43026 ;;Total ram usage:        0 bytes
 43027 ;; Hardware stack levels used:    1
 43028 ;; Hardware stack levels required when called:   10
 43029 ;; This function calls:
 43030 ;;		Nothing
 43031 ;; This function is called by:
 43032 ;;		__fill_buffer_get_status
 43033 ;;		__display_time
 43034 ;;		__number_of_days
 43035 ;;		_rtcc_get_year_decimal
 43036 ;;		_rtcc_increment_year
 43037 ;;		_rtcc_decrement_year
 43038 ;;		_rtcc_write_eeprom
 43039 ;; This function uses a non-reentrant model
 43040 ;;
 43041                           
 43042                           	psect	text196
 43043  01414E                     __ptext196:
 43044                           	opt stack 0
 43045  01414E                     _rtcc_get_year:
 43046                           	opt stack 17
 43047                           
 43048                           ;rtcc.c: 129: RTCCFGbits.RTCPTR1 = 1;
 43049                           
 43050                           ; BSR set to: 1
 43051                           ;incstack = 0
 43052  01414E  010F               	movlb	15	; () banked
 43053  014150  833F               	bsf	63,1,b	;volatile
 43054                           
 43055                           ;rtcc.c: 130: RTCCFGbits.RTCPTR0 = 1;
 43056  014152  010F               	movlb	15	; () banked
 43057  014154  813F               	bsf	63,0,b	;volatile
 43058  014156                     l2288:
 43059                           
 43060                           ; BSR set to: 15
 43061  014156  010F               	movlb	15	; () banked
 43062  014158  B93F               	btfsc	63,4,b	;volatile
 43063  01415A  D7FD               	goto	l2288
 43064                           
 43065                           ; BSR set to: 15
 43066                           ;rtcc.c: 132: return RTCVALL;
 43067                           
 43068                           ; BSR set to: 15
 43069  01415C  010F               	movlb	15	; () banked
 43070  01415E  513A               	movf	58,w,b	;volatile
 43071  014160  0012               	return	
 43072  014162                     __end_of_rtcc_get_year:
 43073                           	opt stack 0
 43074                           tosu	equ	0xFFF
 43075                           tosh	equ	0xFFE
 43076                           tosl	equ	0xFFD
 43077                           pclath	equ	0xFFA
 43078                           tblptru	equ	0xFF8
 43079                           tblptrh	equ	0xFF7
 43080                           tblptrl	equ	0xFF6
 43081                           tablat	equ	0xFF5
 43082                           prodh	equ	0xFF4
 43083                           prodl	equ	0xFF3
 43084                           intcon	equ	0xFF2
 43085                           intcon2	equ	0xFF1
 43086                           intcon3	equ	0xFF0
 43087                           postinc0	equ	0xFEE
 43088                           wreg	equ	0xFE8
 43089                           indf1	equ	0xFE7
 43090                           postinc1	equ	0xFE6
 43091                           postdec1	equ	0xFE5
 43092                           plusw1	equ	0xFE3
 43093                           fsr1h	equ	0xFE2
 43094                           fsr1l	equ	0xFE1
 43095                           indf2	equ	0xFDF
 43096                           postinc2	equ	0xFDE
 43097                           postdec2	equ	0xFDD
 43098                           plusw2	equ	0xFDB
 43099                           fsr2h	equ	0xFDA
 43100                           fsr2l	equ	0xFD9
 43101                           status	equ	0xFD8
 43102                           
 43103 ;; *************** function _rtcc_get_seconds *****************
 43104 ;; Defined at:
 43105 ;;		line 317 in file "rtcc.c"
 43106 ;; Parameters:    Size  Location     Type
 43107 ;;		None
 43108 ;; Auto vars:     Size  Location     Type
 43109 ;;		None
 43110 ;; Return value:  Size  Location     Type
 43111 ;;                  1    wreg      unsigned char 
 43112 ;; Registers used:
 43113 ;;		wreg, status,2
 43114 ;; Tracked objects:
 43115 ;;		On entry : 0/0
 43116 ;;		On exit  : 0/0
 43117 ;;		Unchanged: 0/0
 43118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43123 ;;Total ram usage:        0 bytes
 43124 ;; Hardware stack levels used:    1
 43125 ;; Hardware stack levels required when called:   10
 43126 ;; This function calls:
 43127 ;;		Nothing
 43128 ;; This function is called by:
 43129 ;;		__fill_buffer_get_status
 43130 ;;		__display_time
 43131 ;;		_rtcc_get_seconds_decimal
 43132 ;;		_rtcc_increment_seconds
 43133 ;;		_rtcc_decrement_seconds
 43134 ;;		_rtcc_write_eeprom
 43135 ;; This function uses a non-reentrant model
 43136 ;;
 43137                           
 43138                           	psect	text197
 43139  014162                     __ptext197:
 43140                           	opt stack 0
 43141  014162                     _rtcc_get_seconds:
 43142                           	opt stack 17
 43143                           
 43144                           ;rtcc.c: 319: RTCCFGbits.RTCPTR1 = 0;
 43145                           
 43146                           ; BSR set to: 15
 43147                           ;incstack = 0
 43148  014162  010F               	movlb	15	; () banked
 43149  014164  933F               	bcf	63,1,b	;volatile
 43150                           
 43151                           ;rtcc.c: 320: RTCCFGbits.RTCPTR0 = 0;
 43152  014166  010F               	movlb	15	; () banked
 43153  014168  913F               	bcf	63,0,b	;volatile
 43154  01416A                     l2378:
 43155                           
 43156                           ; BSR set to: 15
 43157  01416A  010F               	movlb	15	; () banked
 43158  01416C  B93F               	btfsc	63,4,b	;volatile
 43159  01416E  D7FD               	goto	l2378
 43160                           
 43161                           ; BSR set to: 15
 43162                           ;rtcc.c: 322: return RTCVALL;
 43163                           
 43164                           ; BSR set to: 15
 43165  014170  010F               	movlb	15	; () banked
 43166  014172  513A               	movf	58,w,b	;volatile
 43167  014174  0012               	return	
 43168  014176                     __end_of_rtcc_get_seconds:
 43169                           	opt stack 0
 43170                           tosu	equ	0xFFF
 43171                           tosh	equ	0xFFE
 43172                           tosl	equ	0xFFD
 43173                           pclath	equ	0xFFA
 43174                           tblptru	equ	0xFF8
 43175                           tblptrh	equ	0xFF7
 43176                           tblptrl	equ	0xFF6
 43177                           tablat	equ	0xFF5
 43178                           prodh	equ	0xFF4
 43179                           prodl	equ	0xFF3
 43180                           intcon	equ	0xFF2
 43181                           intcon2	equ	0xFF1
 43182                           intcon3	equ	0xFF0
 43183                           postinc0	equ	0xFEE
 43184                           wreg	equ	0xFE8
 43185                           indf1	equ	0xFE7
 43186                           postinc1	equ	0xFE6
 43187                           postdec1	equ	0xFE5
 43188                           plusw1	equ	0xFE3
 43189                           fsr1h	equ	0xFE2
 43190                           fsr1l	equ	0xFE1
 43191                           indf2	equ	0xFDF
 43192                           postinc2	equ	0xFDE
 43193                           postdec2	equ	0xFDD
 43194                           plusw2	equ	0xFDB
 43195                           fsr2h	equ	0xFDA
 43196                           fsr2l	equ	0xFD9
 43197                           status	equ	0xFD8
 43198                           
 43199 ;; *************** function _rtcc_get_month *****************
 43200 ;; Defined at:
 43201 ;;		line 165 in file "rtcc.c"
 43202 ;; Parameters:    Size  Location     Type
 43203 ;;		None
 43204 ;; Auto vars:     Size  Location     Type
 43205 ;;		None
 43206 ;; Return value:  Size  Location     Type
 43207 ;;                  1    wreg      unsigned char 
 43208 ;; Registers used:
 43209 ;;		wreg, status,2
 43210 ;; Tracked objects:
 43211 ;;		On entry : 0/0
 43212 ;;		On exit  : 0/0
 43213 ;;		Unchanged: 0/0
 43214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43219 ;;Total ram usage:        0 bytes
 43220 ;; Hardware stack levels used:    1
 43221 ;; Hardware stack levels required when called:   10
 43222 ;; This function calls:
 43223 ;;		Nothing
 43224 ;; This function is called by:
 43225 ;;		__fill_buffer_get_status
 43226 ;;		__display_time
 43227 ;;		__number_of_days
 43228 ;;		_rtcc_get_month_decimal
 43229 ;;		_rtcc_increment_month
 43230 ;;		_rtcc_decrement_month
 43231 ;;		_rtcc_write_eeprom
 43232 ;; This function uses a non-reentrant model
 43233 ;;
 43234                           
 43235                           	psect	text198
 43236  014176                     __ptext198:
 43237                           	opt stack 0
 43238  014176                     _rtcc_get_month:
 43239                           	opt stack 17
 43240                           
 43241                           ;rtcc.c: 167: RTCCFGbits.RTCPTR1 = 1;
 43242                           
 43243                           ; BSR set to: 15
 43244                           ;incstack = 0
 43245  014176  010F               	movlb	15	; () banked
 43246  014178  833F               	bsf	63,1,b	;volatile
 43247                           
 43248                           ;rtcc.c: 168: RTCCFGbits.RTCPTR0 = 0;
 43249  01417A  010F               	movlb	15	; () banked
 43250  01417C  913F               	bcf	63,0,b	;volatile
 43251  01417E                     l2306:
 43252                           
 43253                           ; BSR set to: 15
 43254  01417E  010F               	movlb	15	; () banked
 43255  014180  B93F               	btfsc	63,4,b	;volatile
 43256  014182  D7FD               	goto	l2306
 43257                           
 43258                           ; BSR set to: 15
 43259                           ;rtcc.c: 170: return RTCVALH;
 43260                           
 43261                           ; BSR set to: 15
 43262  014184  010F               	movlb	15	; () banked
 43263  014186  513B               	movf	59,w,b	;volatile
 43264  014188  0012               	return	
 43265  01418A                     __end_of_rtcc_get_month:
 43266                           	opt stack 0
 43267                           tosu	equ	0xFFF
 43268                           tosh	equ	0xFFE
 43269                           tosl	equ	0xFFD
 43270                           pclath	equ	0xFFA
 43271                           tblptru	equ	0xFF8
 43272                           tblptrh	equ	0xFF7
 43273                           tblptrl	equ	0xFF6
 43274                           tablat	equ	0xFF5
 43275                           prodh	equ	0xFF4
 43276                           prodl	equ	0xFF3
 43277                           intcon	equ	0xFF2
 43278                           intcon2	equ	0xFF1
 43279                           intcon3	equ	0xFF0
 43280                           postinc0	equ	0xFEE
 43281                           wreg	equ	0xFE8
 43282                           indf1	equ	0xFE7
 43283                           postinc1	equ	0xFE6
 43284                           postdec1	equ	0xFE5
 43285                           plusw1	equ	0xFE3
 43286                           fsr1h	equ	0xFE2
 43287                           fsr1l	equ	0xFE1
 43288                           indf2	equ	0xFDF
 43289                           postinc2	equ	0xFDE
 43290                           postdec2	equ	0xFDD
 43291                           plusw2	equ	0xFDB
 43292                           fsr2h	equ	0xFDA
 43293                           fsr2l	equ	0xFD9
 43294                           status	equ	0xFD8
 43295                           
 43296 ;; *************** function _rtcc_get_minutes *****************
 43297 ;; Defined at:
 43298 ;;		line 279 in file "rtcc.c"
 43299 ;; Parameters:    Size  Location     Type
 43300 ;;		None
 43301 ;; Auto vars:     Size  Location     Type
 43302 ;;		None
 43303 ;; Return value:  Size  Location     Type
 43304 ;;                  1    wreg      unsigned char 
 43305 ;; Registers used:
 43306 ;;		wreg, status,2
 43307 ;; Tracked objects:
 43308 ;;		On entry : 0/0
 43309 ;;		On exit  : 0/0
 43310 ;;		Unchanged: 0/0
 43311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43316 ;;Total ram usage:        0 bytes
 43317 ;; Hardware stack levels used:    1
 43318 ;; Hardware stack levels required when called:   10
 43319 ;; This function calls:
 43320 ;;		Nothing
 43321 ;; This function is called by:
 43322 ;;		__fill_buffer_get_status
 43323 ;;		__display_time
 43324 ;;		_rtcc_get_minutes_decimal
 43325 ;;		_rtcc_increment_minutes
 43326 ;;		_rtcc_decrement_minutes
 43327 ;;		_rtcc_write_eeprom
 43328 ;; This function uses a non-reentrant model
 43329 ;;
 43330                           
 43331                           	psect	text199
 43332  01418A                     __ptext199:
 43333                           	opt stack 0
 43334  01418A                     _rtcc_get_minutes:
 43335                           	opt stack 17
 43336                           
 43337                           ;rtcc.c: 281: RTCCFGbits.RTCPTR1 = 0;
 43338                           
 43339                           ; BSR set to: 15
 43340                           ;incstack = 0
 43341  01418A  010F               	movlb	15	; () banked
 43342  01418C  933F               	bcf	63,1,b	;volatile
 43343                           
 43344                           ;rtcc.c: 282: RTCCFGbits.RTCPTR0 = 0;
 43345  01418E  010F               	movlb	15	; () banked
 43346  014190  913F               	bcf	63,0,b	;volatile
 43347  014192                     l2360:
 43348                           
 43349                           ; BSR set to: 15
 43350  014192  010F               	movlb	15	; () banked
 43351  014194  B93F               	btfsc	63,4,b	;volatile
 43352  014196  D7FD               	goto	l2360
 43353                           
 43354                           ; BSR set to: 15
 43355                           ;rtcc.c: 284: return RTCVALH;
 43356                           
 43357                           ; BSR set to: 15
 43358  014198  010F               	movlb	15	; () banked
 43359  01419A  513B               	movf	59,w,b	;volatile
 43360  01419C  0012               	return	
 43361  01419E                     __end_of_rtcc_get_minutes:
 43362                           	opt stack 0
 43363                           tosu	equ	0xFFF
 43364                           tosh	equ	0xFFE
 43365                           tosl	equ	0xFFD
 43366                           pclath	equ	0xFFA
 43367                           tblptru	equ	0xFF8
 43368                           tblptrh	equ	0xFF7
 43369                           tblptrl	equ	0xFF6
 43370                           tablat	equ	0xFF5
 43371                           prodh	equ	0xFF4
 43372                           prodl	equ	0xFF3
 43373                           intcon	equ	0xFF2
 43374                           intcon2	equ	0xFF1
 43375                           intcon3	equ	0xFF0
 43376                           postinc0	equ	0xFEE
 43377                           wreg	equ	0xFE8
 43378                           indf1	equ	0xFE7
 43379                           postinc1	equ	0xFE6
 43380                           postdec1	equ	0xFE5
 43381                           plusw1	equ	0xFE3
 43382                           fsr1h	equ	0xFE2
 43383                           fsr1l	equ	0xFE1
 43384                           indf2	equ	0xFDF
 43385                           postinc2	equ	0xFDE
 43386                           postdec2	equ	0xFDD
 43387                           plusw2	equ	0xFDB
 43388                           fsr2h	equ	0xFDA
 43389                           fsr2l	equ	0xFD9
 43390                           status	equ	0xFD8
 43391                           
 43392 ;; *************** function _rtcc_get_hours *****************
 43393 ;; Defined at:
 43394 ;;		line 241 in file "rtcc.c"
 43395 ;; Parameters:    Size  Location     Type
 43396 ;;		None
 43397 ;; Auto vars:     Size  Location     Type
 43398 ;;		None
 43399 ;; Return value:  Size  Location     Type
 43400 ;;                  1    wreg      unsigned char 
 43401 ;; Registers used:
 43402 ;;		wreg, status,2
 43403 ;; Tracked objects:
 43404 ;;		On entry : 0/0
 43405 ;;		On exit  : 0/0
 43406 ;;		Unchanged: 0/0
 43407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43412 ;;Total ram usage:        0 bytes
 43413 ;; Hardware stack levels used:    1
 43414 ;; Hardware stack levels required when called:   10
 43415 ;; This function calls:
 43416 ;;		Nothing
 43417 ;; This function is called by:
 43418 ;;		__fill_buffer_get_status
 43419 ;;		__display_time
 43420 ;;		_rtcc_get_hours_decimal
 43421 ;;		_rtcc_increment_hours
 43422 ;;		_rtcc_decrement_hours
 43423 ;;		_rtcc_write_eeprom
 43424 ;; This function uses a non-reentrant model
 43425 ;;
 43426                           
 43427                           	psect	text200
 43428  01419E                     __ptext200:
 43429                           	opt stack 0
 43430  01419E                     _rtcc_get_hours:
 43431                           	opt stack 17
 43432                           
 43433                           ;rtcc.c: 243: RTCCFGbits.RTCPTR1 = 0;
 43434                           
 43435                           ; BSR set to: 15
 43436                           ;incstack = 0
 43437  01419E  010F               	movlb	15	; () banked
 43438  0141A0  933F               	bcf	63,1,b	;volatile
 43439                           
 43440                           ;rtcc.c: 244: RTCCFGbits.RTCPTR0 = 1;
 43441  0141A2  010F               	movlb	15	; () banked
 43442  0141A4  813F               	bsf	63,0,b	;volatile
 43443  0141A6                     l2342:
 43444                           
 43445                           ; BSR set to: 15
 43446  0141A6  010F               	movlb	15	; () banked
 43447  0141A8  B93F               	btfsc	63,4,b	;volatile
 43448  0141AA  D7FD               	goto	l2342
 43449                           
 43450                           ; BSR set to: 15
 43451                           ;rtcc.c: 246: return RTCVALL;
 43452                           
 43453                           ; BSR set to: 15
 43454  0141AC  010F               	movlb	15	; () banked
 43455  0141AE  513A               	movf	58,w,b	;volatile
 43456  0141B0  0012               	return	
 43457  0141B2                     __end_of_rtcc_get_hours:
 43458                           	opt stack 0
 43459                           tosu	equ	0xFFF
 43460                           tosh	equ	0xFFE
 43461                           tosl	equ	0xFFD
 43462                           pclath	equ	0xFFA
 43463                           tblptru	equ	0xFF8
 43464                           tblptrh	equ	0xFF7
 43465                           tblptrl	equ	0xFF6
 43466                           tablat	equ	0xFF5
 43467                           prodh	equ	0xFF4
 43468                           prodl	equ	0xFF3
 43469                           intcon	equ	0xFF2
 43470                           intcon2	equ	0xFF1
 43471                           intcon3	equ	0xFF0
 43472                           postinc0	equ	0xFEE
 43473                           wreg	equ	0xFE8
 43474                           indf1	equ	0xFE7
 43475                           postinc1	equ	0xFE6
 43476                           postdec1	equ	0xFE5
 43477                           plusw1	equ	0xFE3
 43478                           fsr1h	equ	0xFE2
 43479                           fsr1l	equ	0xFE1
 43480                           indf2	equ	0xFDF
 43481                           postinc2	equ	0xFDE
 43482                           postdec2	equ	0xFDD
 43483                           plusw2	equ	0xFDB
 43484                           fsr2h	equ	0xFDA
 43485                           fsr2l	equ	0xFD9
 43486                           status	equ	0xFD8
 43487                           
 43488 ;; *************** function _rtcc_get_day *****************
 43489 ;; Defined at:
 43490 ;;		line 203 in file "rtcc.c"
 43491 ;; Parameters:    Size  Location     Type
 43492 ;;		None
 43493 ;; Auto vars:     Size  Location     Type
 43494 ;;		None
 43495 ;; Return value:  Size  Location     Type
 43496 ;;                  1    wreg      unsigned char 
 43497 ;; Registers used:
 43498 ;;		wreg, status,2
 43499 ;; Tracked objects:
 43500 ;;		On entry : 0/0
 43501 ;;		On exit  : 0/0
 43502 ;;		Unchanged: 0/0
 43503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43508 ;;Total ram usage:        0 bytes
 43509 ;; Hardware stack levels used:    1
 43510 ;; Hardware stack levels required when called:   10
 43511 ;; This function calls:
 43512 ;;		Nothing
 43513 ;; This function is called by:
 43514 ;;		__fill_buffer_get_status
 43515 ;;		__display_time
 43516 ;;		_rtcc_correct_day
 43517 ;;		_rtcc_get_day_decimal
 43518 ;;		_rtcc_increment_day
 43519 ;;		_rtcc_decrement_day
 43520 ;;		_rtcc_read_eeprom
 43521 ;;		_rtcc_write_eeprom
 43522 ;; This function uses a non-reentrant model
 43523 ;;
 43524                           
 43525                           	psect	text201
 43526  0141B2                     __ptext201:
 43527                           	opt stack 0
 43528  0141B2                     _rtcc_get_day:
 43529                           	opt stack 17
 43530                           
 43531                           ;rtcc.c: 205: RTCCFGbits.RTCPTR1 = 1;
 43532                           
 43533                           ; BSR set to: 15
 43534                           ;incstack = 0
 43535  0141B2  010F               	movlb	15	; () banked
 43536  0141B4  833F               	bsf	63,1,b	;volatile
 43537                           
 43538                           ;rtcc.c: 206: RTCCFGbits.RTCPTR0 = 0;
 43539  0141B6  010F               	movlb	15	; () banked
 43540  0141B8  913F               	bcf	63,0,b	;volatile
 43541  0141BA                     l2324:
 43542                           
 43543                           ; BSR set to: 15
 43544  0141BA  010F               	movlb	15	; () banked
 43545  0141BC  B93F               	btfsc	63,4,b	;volatile
 43546  0141BE  D7FD               	goto	l2324
 43547                           
 43548                           ; BSR set to: 15
 43549                           ;rtcc.c: 208: return RTCVALL;
 43550                           
 43551                           ; BSR set to: 15
 43552  0141C0  010F               	movlb	15	; () banked
 43553  0141C2  513A               	movf	58,w,b	;volatile
 43554  0141C4  0012               	return	
 43555  0141C6                     __end_of_rtcc_get_day:
 43556                           	opt stack 0
 43557                           tosu	equ	0xFFF
 43558                           tosh	equ	0xFFE
 43559                           tosl	equ	0xFFD
 43560                           pclath	equ	0xFFA
 43561                           tblptru	equ	0xFF8
 43562                           tblptrh	equ	0xFF7
 43563                           tblptrl	equ	0xFF6
 43564                           tablat	equ	0xFF5
 43565                           prodh	equ	0xFF4
 43566                           prodl	equ	0xFF3
 43567                           intcon	equ	0xFF2
 43568                           intcon2	equ	0xFF1
 43569                           intcon3	equ	0xFF0
 43570                           postinc0	equ	0xFEE
 43571                           wreg	equ	0xFE8
 43572                           indf1	equ	0xFE7
 43573                           postinc1	equ	0xFE6
 43574                           postdec1	equ	0xFE5
 43575                           plusw1	equ	0xFE3
 43576                           fsr1h	equ	0xFE2
 43577                           fsr1l	equ	0xFE1
 43578                           indf2	equ	0xFDF
 43579                           postinc2	equ	0xFDE
 43580                           postdec2	equ	0xFDD
 43581                           plusw2	equ	0xFDB
 43582                           fsr2h	equ	0xFDA
 43583                           fsr2l	equ	0xFD9
 43584                           status	equ	0xFD8
 43585                           
 43586 ;; *************** function _buck_remote_get_status *****************
 43587 ;; Defined at:
 43588 ;;		line 650 in file "buck.c"
 43589 ;; Parameters:    Size  Location     Type
 43590 ;;		None
 43591 ;; Auto vars:     Size  Location     Type
 43592 ;;  retval          1    0[BANK0 ] unsigned char 
 43593 ;; Return value:  Size  Location     Type
 43594 ;;                  1    wreg      unsigned char 
 43595 ;; Registers used:
 43596 ;;		wreg, status,2, status,0
 43597 ;; Tracked objects:
 43598 ;;		On entry : 0/0
 43599 ;;		On exit  : 0/0
 43600 ;;		Unchanged: 0/0
 43601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43606 ;;Total ram usage:        1 bytes
 43607 ;; Hardware stack levels used:    1
 43608 ;; Hardware stack levels required when called:   10
 43609 ;; This function calls:
 43610 ;;		Nothing
 43611 ;; This function is called by:
 43612 ;;		__fill_buffer_get_status
 43613 ;; This function uses a non-reentrant model
 43614 ;;
 43615                           
 43616                           	psect	text202
 43617  013A5C                     __ptext202:
 43618                           	opt stack 0
 43619  013A5C                     _buck_remote_get_status:
 43620                           	opt stack 18
 43621                           
 43622                           ;buck.c: 652: uint8_t retval = 0x00;
 43623                           
 43624                           ; BSR set to: 15
 43625                           ;incstack = 0
 43626  013A5C  0E00               	movlw	0
 43627  013A5E  0100               	movlb	0	; () banked
 43628  013A60  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 43629                           
 43630                           ;buck.c: 653: if(buck_remote_enable)
 43631  013A62  0101               	movlb	1	; () banked
 43632  013A64  51F1               	movf	_buck_remote_enable& (0+255),w,b
 43633  013A66  B4D8               	btfsc	status,2,c
 43634  013A68  D002               	goto	l19459
 43635                           
 43636                           ; BSR set to: 1
 43637                           ;buck.c: 654: retval |= 0x01;
 43638  013A6A  0100               	movlb	0	; () banked
 43639  013A6C  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 43640  013A6E                     l19459:
 43641                           
 43642                           ;buck.c: 655: if(buck_remote_on)
 43643  013A6E  0100               	movlb	0	; () banked
 43644  013A70  51E3               	movf	_buck_remote_on& (0+255),w,b
 43645  013A72  B4D8               	btfsc	status,2,c
 43646  013A74  D002               	goto	l19463
 43647                           
 43648                           ; BSR set to: 0
 43649                           ;buck.c: 656: retval |= 0x02;
 43650  013A76  0100               	movlb	0	; () banked
 43651  013A78  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 43652  013A7A                     l19463:
 43653                           
 43654                           ; BSR set to: 0
 43655                           ;buck.c: 657: if(buck_remote_synchronous)
 43656  013A7A  0100               	movlb	0	; () banked
 43657  013A7C  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 43658  013A7E  B4D8               	btfsc	status,2,c
 43659  013A80  D003               	goto	l19467
 43660                           
 43661                           ; BSR set to: 0
 43662                           ;buck.c: 658: retval |= 0x03;
 43663  013A82  0E03               	movlw	3
 43664  013A84  0100               	movlb	0	; () banked
 43665  013A86  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 43666  013A88                     l19467:
 43667                           
 43668                           ; BSR set to: 0
 43669                           ;buck.c: 659: return retval;
 43670  013A88  0100               	movlb	0	; () banked
 43671  013A8A  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 43672  013A8C  0012               	return	
 43673  013A8E                     __end_of_buck_remote_get_status:
 43674                           	opt stack 0
 43675                           tosu	equ	0xFFF
 43676                           tosh	equ	0xFFE
 43677                           tosl	equ	0xFFD
 43678                           pclath	equ	0xFFA
 43679                           tblptru	equ	0xFF8
 43680                           tblptrh	equ	0xFF7
 43681                           tblptrl	equ	0xFF6
 43682                           tablat	equ	0xFF5
 43683                           prodh	equ	0xFF4
 43684                           prodl	equ	0xFF3
 43685                           intcon	equ	0xFF2
 43686                           intcon2	equ	0xFF1
 43687                           intcon3	equ	0xFF0
 43688                           postinc0	equ	0xFEE
 43689                           wreg	equ	0xFE8
 43690                           indf1	equ	0xFE7
 43691                           postinc1	equ	0xFE6
 43692                           postdec1	equ	0xFE5
 43693                           plusw1	equ	0xFE3
 43694                           fsr1h	equ	0xFE2
 43695                           fsr1l	equ	0xFE1
 43696                           indf2	equ	0xFDF
 43697                           postinc2	equ	0xFDE
 43698                           postdec2	equ	0xFDD
 43699                           plusw2	equ	0xFDB
 43700                           fsr2h	equ	0xFDA
 43701                           fsr2l	equ	0xFD9
 43702                           status	equ	0xFD8
 43703                           
 43704 ;; *************** function _buck_remote_get_dutycycle *****************
 43705 ;; Defined at:
 43706 ;;		line 662 in file "buck.c"
 43707 ;; Parameters:    Size  Location     Type
 43708 ;;		None
 43709 ;; Auto vars:     Size  Location     Type
 43710 ;;		None
 43711 ;; Return value:  Size  Location     Type
 43712 ;;                  1    wreg      unsigned char 
 43713 ;; Registers used:
 43714 ;;		wreg, status,2
 43715 ;; Tracked objects:
 43716 ;;		On entry : 0/0
 43717 ;;		On exit  : 0/0
 43718 ;;		Unchanged: 0/0
 43719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43724 ;;Total ram usage:        0 bytes
 43725 ;; Hardware stack levels used:    1
 43726 ;; Hardware stack levels required when called:   10
 43727 ;; This function calls:
 43728 ;;		Nothing
 43729 ;; This function is called by:
 43730 ;;		__fill_buffer_get_status
 43731 ;; This function uses a non-reentrant model
 43732 ;;
 43733                           
 43734                           	psect	text203
 43735  0142EE                     __ptext203:
 43736                           	opt stack 0
 43737  0142EE                     _buck_remote_get_dutycycle:
 43738                           	opt stack 18
 43739                           
 43740                           ;buck.c: 664: return buck_remote_dutycycle;
 43741                           
 43742                           ; BSR set to: 0
 43743                           ;incstack = 0
 43744  0142EE  0100               	movlb	0	; () banked
 43745  0142F0  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 43746  0142F2  0012               	return	
 43747  0142F4                     __end_of_buck_remote_get_dutycycle:
 43748                           	opt stack 0
 43749                           tosu	equ	0xFFF
 43750                           tosh	equ	0xFFE
 43751                           tosl	equ	0xFFD
 43752                           pclath	equ	0xFFA
 43753                           tblptru	equ	0xFF8
 43754                           tblptrh	equ	0xFF7
 43755                           tblptrl	equ	0xFF6
 43756                           tablat	equ	0xFF5
 43757                           prodh	equ	0xFF4
 43758                           prodl	equ	0xFF3
 43759                           intcon	equ	0xFF2
 43760                           intcon2	equ	0xFF1
 43761                           intcon3	equ	0xFF0
 43762                           postinc0	equ	0xFEE
 43763                           wreg	equ	0xFE8
 43764                           indf1	equ	0xFE7
 43765                           postinc1	equ	0xFE6
 43766                           postdec1	equ	0xFE5
 43767                           plusw1	equ	0xFE3
 43768                           fsr1h	equ	0xFE2
 43769                           fsr1l	equ	0xFE1
 43770                           indf2	equ	0xFDF
 43771                           postinc2	equ	0xFDE
 43772                           postdec2	equ	0xFDD
 43773                           plusw2	equ	0xFDB
 43774                           fsr2h	equ	0xFDA
 43775                           fsr2l	equ	0xFD9
 43776                           status	equ	0xFD8
 43777                           
 43778 ;; *************** function _buck_get_mode *****************
 43779 ;; Defined at:
 43780 ;;		line 597 in file "buck.c"
 43781 ;; Parameters:    Size  Location     Type
 43782 ;;		None
 43783 ;; Auto vars:     Size  Location     Type
 43784 ;;		None
 43785 ;; Return value:  Size  Location     Type
 43786 ;;                  1    wreg      enum E9570
 43787 ;; Registers used:
 43788 ;;		wreg, status,2
 43789 ;; Tracked objects:
 43790 ;;		On entry : 0/0
 43791 ;;		On exit  : 0/0
 43792 ;;		Unchanged: 0/0
 43793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43798 ;;Total ram usage:        0 bytes
 43799 ;; Hardware stack levels used:    1
 43800 ;; Hardware stack levels required when called:   10
 43801 ;; This function calls:
 43802 ;;		Nothing
 43803 ;; This function is called by:
 43804 ;;		_main
 43805 ;;		__fill_buffer_get_status
 43806 ;;		_system_calculate_input_current
 43807 ;;		_system_calculate_output_current
 43808 ;;		__display_inout
 43809 ;;		__display_charger
 43810 ;;		_log_collect_data
 43811 ;; This function uses a non-reentrant model
 43812 ;;
 43813                           
 43814                           	psect	text204
 43815  0142FE                     __ptext204:
 43816                           	opt stack 0
 43817  0142FE                     _buck_get_mode:
 43818                           	opt stack 19
 43819                           
 43820                           ;buck.c: 599: return buck_status;
 43821                           
 43822                           ; BSR set to: 0
 43823                           ;incstack = 0
 43824  0142FE  501C               	movf	_buck_status,w,c
 43825  014300  0012               	return	
 43826  014302                     __end_of_buck_get_mode:
 43827                           	opt stack 0
 43828                           tosu	equ	0xFFF
 43829                           tosh	equ	0xFFE
 43830                           tosl	equ	0xFFD
 43831                           pclath	equ	0xFFA
 43832                           tblptru	equ	0xFF8
 43833                           tblptrh	equ	0xFF7
 43834                           tblptrl	equ	0xFF6
 43835                           tablat	equ	0xFF5
 43836                           prodh	equ	0xFF4
 43837                           prodl	equ	0xFF3
 43838                           intcon	equ	0xFF2
 43839                           intcon2	equ	0xFF1
 43840                           intcon3	equ	0xFF0
 43841                           postinc0	equ	0xFEE
 43842                           wreg	equ	0xFE8
 43843                           indf1	equ	0xFE7
 43844                           postinc1	equ	0xFE6
 43845                           postdec1	equ	0xFE5
 43846                           plusw1	equ	0xFE3
 43847                           fsr1h	equ	0xFE2
 43848                           fsr1l	equ	0xFE1
 43849                           indf2	equ	0xFDF
 43850                           postinc2	equ	0xFDE
 43851                           postdec2	equ	0xFDD
 43852                           plusw2	equ	0xFDB
 43853                           fsr2h	equ	0xFDA
 43854                           fsr2l	equ	0xFD9
 43855                           status	equ	0xFD8
 43856                           
 43857 ;; *************** function _buck_get_dutycycle *****************
 43858 ;; Defined at:
 43859 ;;		line 592 in file "buck.c"
 43860 ;; Parameters:    Size  Location     Type
 43861 ;;		None
 43862 ;; Auto vars:     Size  Location     Type
 43863 ;;		None
 43864 ;; Return value:  Size  Location     Type
 43865 ;;                  1    wreg      unsigned char 
 43866 ;; Registers used:
 43867 ;;		wreg, status,2
 43868 ;; Tracked objects:
 43869 ;;		On entry : 0/0
 43870 ;;		On exit  : 0/0
 43871 ;;		Unchanged: 0/0
 43872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43877 ;;Total ram usage:        0 bytes
 43878 ;; Hardware stack levels used:    1
 43879 ;; Hardware stack levels required when called:   10
 43880 ;; This function calls:
 43881 ;;		Nothing
 43882 ;; This function is called by:
 43883 ;;		__fill_buffer_get_status
 43884 ;;		__display_charger
 43885 ;; This function uses a non-reentrant model
 43886 ;;
 43887                           
 43888                           	psect	text205
 43889  0142F4                     __ptext205:
 43890                           	opt stack 0
 43891  0142F4                     _buck_get_dutycycle:
 43892                           	opt stack 18
 43893                           
 43894                           ;buck.c: 594: return buck_dutycycle;
 43895                           
 43896                           ;incstack = 0
 43897  0142F4  0100               	movlb	0	; () banked
 43898  0142F6  51E4               	movf	_buck_dutycycle& (0+255),w,b
 43899  0142F8  0012               	return	
 43900  0142FA                     __end_of_buck_get_dutycycle:
 43901                           	opt stack 0
 43902                           tosu	equ	0xFFF
 43903                           tosh	equ	0xFFE
 43904                           tosl	equ	0xFFD
 43905                           pclath	equ	0xFFA
 43906                           tblptru	equ	0xFF8
 43907                           tblptrh	equ	0xFF7
 43908                           tblptrl	equ	0xFF6
 43909                           tablat	equ	0xFF5
 43910                           prodh	equ	0xFF4
 43911                           prodl	equ	0xFF3
 43912                           intcon	equ	0xFF2
 43913                           intcon2	equ	0xFF1
 43914                           intcon3	equ	0xFF0
 43915                           postinc0	equ	0xFEE
 43916                           wreg	equ	0xFE8
 43917                           indf1	equ	0xFE7
 43918                           postinc1	equ	0xFE6
 43919                           postdec1	equ	0xFE5
 43920                           plusw1	equ	0xFE3
 43921                           fsr1h	equ	0xFE2
 43922                           fsr1l	equ	0xFE1
 43923                           indf2	equ	0xFDF
 43924                           postinc2	equ	0xFDE
 43925                           postdec2	equ	0xFDD
 43926                           plusw2	equ	0xFDB
 43927                           fsr2h	equ	0xFDA
 43928                           fsr2l	equ	0xFD9
 43929                           status	equ	0xFD8
 43930                           
 43931 ;; *************** function __fill_buffer_get_display2 *****************
 43932 ;; Defined at:
 43933 ;;		line 353 in file "app_device_custom_hid.c"
 43934 ;; Parameters:    Size  Location     Type
 43935 ;;		None
 43936 ;; Auto vars:     Size  Location     Type
 43937 ;;  position        1    7[BANK0 ] unsigned char 
 43938 ;;  line            1    6[BANK0 ] unsigned char 
 43939 ;;  cntr            1    5[BANK0 ] unsigned char 
 43940 ;; Return value:  Size  Location     Type
 43941 ;;                  1    wreg      void 
 43942 ;; Registers used:
 43943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43944 ;; Tracked objects:
 43945 ;;		On entry : 0/0
 43946 ;;		On exit  : 0/0
 43947 ;;		Unchanged: 0/0
 43948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43950 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43953 ;;Total ram usage:        4 bytes
 43954 ;; Hardware stack levels used:    1
 43955 ;; Hardware stack levels required when called:   11
 43956 ;; This function calls:
 43957 ;;		_display_get_character
 43958 ;; This function is called by:
 43959 ;;		_APP_DeviceCustomHIDTasks
 43960 ;; This function uses a non-reentrant model
 43961 ;;
 43962                           
 43963                           	psect	text206
 43964  012DDA                     __ptext206:
 43965                           	opt stack 0
 43966  012DDA                     __fill_buffer_get_display2:
 43967                           	opt stack 18
 43968                           
 43969                           ;app_device_custom_hid.c: 355: uint8_t cntr;
 43970                           ;app_device_custom_hid.c: 356: uint8_t line;
 43971                           ;app_device_custom_hid.c: 357: uint8_t position;
 43972                           ;app_device_custom_hid.c: 360: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_2;
 43973                           
 43974                           ; BSR set to: 0
 43975                           ;incstack = 0
 43976  012DDA  0E12               	movlw	18
 43977  012DDC  0103               	movlb	3	; () banked
 43978  012DDE  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 43979                           
 43980                           ;app_device_custom_hid.c: 363: cntr = 1;
 43981  012DE0  0E01               	movlw	1
 43982  012DE2  0100               	movlb	0	; () banked
 43983  012DE4  6F65               	movwf	__fill_buffer_get_display2@cntr& (0+255),b
 43984                           
 43985                           ;app_device_custom_hid.c: 364: for(line=2; line<4; ++line)
 43986  012DE6  0E02               	movlw	2
 43987  012DE8  0100               	movlb	0	; () banked
 43988  012DEA  6F66               	movwf	__fill_buffer_get_display2@line& (0+255),b
 43989  012DEC                     l20541:
 43990                           
 43991                           ; BSR set to: 0
 43992  012DEC  0E03               	movlw	3
 43993  012DEE  0100               	movlb	0	; () banked
 43994  012DF0  6566               	cpfsgt	__fill_buffer_get_display2@line& (0+255),b
 43995  012DF2  D001               	goto	l20545
 43996  012DF4  0012               	return	
 43997  012DF6                     l20545:
 43998                           
 43999                           ; BSR set to: 0
 44000                           ;app_device_custom_hid.c: 365: {
 44001                           ;app_device_custom_hid.c: 366: for(position=0; position<20; ++position)
 44002  012DF6  0E00               	movlw	0
 44003  012DF8  0100               	movlb	0	; () banked
 44004  012DFA  6F67               	movwf	__fill_buffer_get_display2@position& (0+255),b
 44005  012DFC                     l20547:
 44006                           
 44007                           ; BSR set to: 0
 44008  012DFC  0E13               	movlw	19
 44009  012DFE  0100               	movlb	0	; () banked
 44010  012E00  6567               	cpfsgt	__fill_buffer_get_display2@position& (0+255),b
 44011  012E02  D001               	goto	l20551
 44012  012E04  D018               	goto	l20559
 44013  012E06                     l20551:
 44014                           
 44015                           ; BSR set to: 0
 44016                           ;app_device_custom_hid.c: 367: {
 44017                           ;app_device_custom_hid.c: 368: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 44018  012E06  C067  F060         	movff	__fill_buffer_get_display2@position,display_get_character@position
 44019  012E0A  0100               	movlb	0	; () banked
 44020  012E0C  5166               	movf	__fill_buffer_get_display2@line& (0+255),w,b
 44021  012E0E  ECCC  F09B         	call	_display_get_character
 44022  012E12  0100               	movlb	0	; () banked
 44023  012E14  6F64               	movwf	??__fill_buffer_get_display2& (0+255),b
 44024  012E16  0100               	movlb	0	; () banked
 44025  012E18  5165               	movf	__fill_buffer_get_display2@cntr& (0+255),w,b
 44026  012E1A  0D01               	mullw	1
 44027  012E1C  0EA4               	movlw	low _ToSendDataBuffer
 44028  012E1E  24F3               	addwf	prodl,w,c
 44029  012E20  6ED9               	movwf	fsr2l,c
 44030  012E22  0E03               	movlw	high _ToSendDataBuffer
 44031  012E24  20F4               	addwfc	prodh,w,c
 44032  012E26  6EDA               	movwf	fsr2h,c
 44033  012E28  C064  FFDF         	movff	??__fill_buffer_get_display2,indf2
 44034                           
 44035                           ; BSR set to: 0
 44036                           ;app_device_custom_hid.c: 369: ++cntr;
 44037  012E2C  0100               	movlb	0	; () banked
 44038  012E2E  2B65               	incf	__fill_buffer_get_display2@cntr& (0+255),f,b
 44039                           
 44040                           ; BSR set to: 0
 44041  012E30  0100               	movlb	0	; () banked
 44042  012E32  2B67               	incf	__fill_buffer_get_display2@position& (0+255),f,b
 44043  012E34  D7E3               	goto	l20547
 44044  012E36                     l20559:
 44045                           
 44046                           ; BSR set to: 0
 44047  012E36  0100               	movlb	0	; () banked
 44048  012E38  2B66               	incf	__fill_buffer_get_display2@line& (0+255),f,b
 44049  012E3A  D7D8               	goto	l20541
 44050  012E3C                     __end_of__fill_buffer_get_display2:
 44051                           	opt stack 0
 44052                           tosu	equ	0xFFF
 44053                           tosh	equ	0xFFE
 44054                           tosl	equ	0xFFD
 44055                           pclath	equ	0xFFA
 44056                           tblptru	equ	0xFF8
 44057                           tblptrh	equ	0xFF7
 44058                           tblptrl	equ	0xFF6
 44059                           tablat	equ	0xFF5
 44060                           prodh	equ	0xFF4
 44061                           prodl	equ	0xFF3
 44062                           intcon	equ	0xFF2
 44063                           intcon2	equ	0xFF1
 44064                           intcon3	equ	0xFF0
 44065                           postinc0	equ	0xFEE
 44066                           wreg	equ	0xFE8
 44067                           indf1	equ	0xFE7
 44068                           postinc1	equ	0xFE6
 44069                           postdec1	equ	0xFE5
 44070                           plusw1	equ	0xFE3
 44071                           fsr1h	equ	0xFE2
 44072                           fsr1l	equ	0xFE1
 44073                           indf2	equ	0xFDF
 44074                           postinc2	equ	0xFDE
 44075                           postdec2	equ	0xFDD
 44076                           plusw2	equ	0xFDB
 44077                           fsr2h	equ	0xFDA
 44078                           fsr2l	equ	0xFD9
 44079                           status	equ	0xFD8
 44080                           
 44081 ;; *************** function __fill_buffer_get_display1 *****************
 44082 ;; Defined at:
 44083 ;;		line 331 in file "app_device_custom_hid.c"
 44084 ;; Parameters:    Size  Location     Type
 44085 ;;		None
 44086 ;; Auto vars:     Size  Location     Type
 44087 ;;  position        1    7[BANK0 ] unsigned char 
 44088 ;;  line            1    6[BANK0 ] unsigned char 
 44089 ;;  cntr            1    5[BANK0 ] unsigned char 
 44090 ;; Return value:  Size  Location     Type
 44091 ;;                  1    wreg      void 
 44092 ;; Registers used:
 44093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44094 ;; Tracked objects:
 44095 ;;		On entry : 0/0
 44096 ;;		On exit  : 0/0
 44097 ;;		Unchanged: 0/0
 44098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44100 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44101 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44102 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44103 ;;Total ram usage:        4 bytes
 44104 ;; Hardware stack levels used:    1
 44105 ;; Hardware stack levels required when called:   11
 44106 ;; This function calls:
 44107 ;;		_display_get_character
 44108 ;; This function is called by:
 44109 ;;		_APP_DeviceCustomHIDTasks
 44110 ;; This function uses a non-reentrant model
 44111 ;;
 44112                           
 44113                           	psect	text207
 44114  012E3C                     __ptext207:
 44115                           	opt stack 0
 44116  012E3C                     __fill_buffer_get_display1:
 44117                           	opt stack 18
 44118                           
 44119                           ;app_device_custom_hid.c: 333: uint8_t cntr;
 44120                           ;app_device_custom_hid.c: 334: uint8_t line;
 44121                           ;app_device_custom_hid.c: 335: uint8_t position;
 44122                           ;app_device_custom_hid.c: 338: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_1;
 44123                           
 44124                           ; BSR set to: 0
 44125                           ;incstack = 0
 44126  012E3C  0E11               	movlw	17
 44127  012E3E  0103               	movlb	3	; () banked
 44128  012E40  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 44129                           
 44130                           ;app_device_custom_hid.c: 341: cntr = 1;
 44131  012E42  0E01               	movlw	1
 44132  012E44  0100               	movlb	0	; () banked
 44133  012E46  6F65               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 44134                           
 44135                           ;app_device_custom_hid.c: 342: for(line=0; line<2; ++line)
 44136  012E48  0E00               	movlw	0
 44137  012E4A  0100               	movlb	0	; () banked
 44138  012E4C  6F66               	movwf	__fill_buffer_get_display1@line& (0+255),b
 44139  012E4E                     l20517:
 44140                           
 44141                           ; BSR set to: 0
 44142  012E4E  0E01               	movlw	1
 44143  012E50  0100               	movlb	0	; () banked
 44144  012E52  6566               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 44145  012E54  D001               	goto	l20521
 44146  012E56  0012               	return	
 44147  012E58                     l20521:
 44148                           
 44149                           ; BSR set to: 0
 44150                           ;app_device_custom_hid.c: 343: {
 44151                           ;app_device_custom_hid.c: 344: for(position=0; position<20; ++position)
 44152  012E58  0E00               	movlw	0
 44153  012E5A  0100               	movlb	0	; () banked
 44154  012E5C  6F67               	movwf	__fill_buffer_get_display1@position& (0+255),b
 44155  012E5E                     l20523:
 44156                           
 44157                           ; BSR set to: 0
 44158  012E5E  0E13               	movlw	19
 44159  012E60  0100               	movlb	0	; () banked
 44160  012E62  6567               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 44161  012E64  D001               	goto	l20527
 44162  012E66  D018               	goto	l20535
 44163  012E68                     l20527:
 44164                           
 44165                           ; BSR set to: 0
 44166                           ;app_device_custom_hid.c: 345: {
 44167                           ;app_device_custom_hid.c: 346: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 44168  012E68  C067  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 44169  012E6C  0100               	movlb	0	; () banked
 44170  012E6E  5166               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 44171  012E70  ECCC  F09B         	call	_display_get_character
 44172  012E74  0100               	movlb	0	; () banked
 44173  012E76  6F64               	movwf	??__fill_buffer_get_display1& (0+255),b
 44174  012E78  0100               	movlb	0	; () banked
 44175  012E7A  5165               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 44176  012E7C  0D01               	mullw	1
 44177  012E7E  0EA4               	movlw	low _ToSendDataBuffer
 44178  012E80  24F3               	addwf	prodl,w,c
 44179  012E82  6ED9               	movwf	fsr2l,c
 44180  012E84  0E03               	movlw	high _ToSendDataBuffer
 44181  012E86  20F4               	addwfc	prodh,w,c
 44182  012E88  6EDA               	movwf	fsr2h,c
 44183  012E8A  C064  FFDF         	movff	??__fill_buffer_get_display1,indf2
 44184                           
 44185                           ; BSR set to: 0
 44186                           ;app_device_custom_hid.c: 347: ++cntr;
 44187  012E8E  0100               	movlb	0	; () banked
 44188  012E90  2B65               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 44189                           
 44190                           ; BSR set to: 0
 44191  012E92  0100               	movlb	0	; () banked
 44192  012E94  2B67               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 44193  012E96  D7E3               	goto	l20523
 44194  012E98                     l20535:
 44195                           
 44196                           ; BSR set to: 0
 44197  012E98  0100               	movlb	0	; () banked
 44198  012E9A  2B66               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 44199  012E9C  D7D8               	goto	l20517
 44200  012E9E                     __end_of__fill_buffer_get_display1:
 44201                           	opt stack 0
 44202                           tosu	equ	0xFFF
 44203                           tosh	equ	0xFFE
 44204                           tosl	equ	0xFFD
 44205                           pclath	equ	0xFFA
 44206                           tblptru	equ	0xFF8
 44207                           tblptrh	equ	0xFF7
 44208                           tblptrl	equ	0xFF6
 44209                           tablat	equ	0xFF5
 44210                           prodh	equ	0xFF4
 44211                           prodl	equ	0xFF3
 44212                           intcon	equ	0xFF2
 44213                           intcon2	equ	0xFF1
 44214                           intcon3	equ	0xFF0
 44215                           postinc0	equ	0xFEE
 44216                           wreg	equ	0xFE8
 44217                           indf1	equ	0xFE7
 44218                           postinc1	equ	0xFE6
 44219                           postdec1	equ	0xFE5
 44220                           plusw1	equ	0xFE3
 44221                           fsr1h	equ	0xFE2
 44222                           fsr1l	equ	0xFE1
 44223                           indf2	equ	0xFDF
 44224                           postinc2	equ	0xFDE
 44225                           postdec2	equ	0xFDD
 44226                           plusw2	equ	0xFDB
 44227                           fsr2h	equ	0xFDA
 44228                           fsr2l	equ	0xFD9
 44229                           status	equ	0xFD8
 44230                           
 44231 ;; *************** function _display_get_character *****************
 44232 ;; Defined at:
 44233 ;;		line 23 in file "display.c"
 44234 ;; Parameters:    Size  Location     Type
 44235 ;;  line            1    wreg     unsigned char 
 44236 ;;  position        1    0[BANK0 ] unsigned char 
 44237 ;; Auto vars:     Size  Location     Type
 44238 ;;  line            1    3[BANK0 ] unsigned char 
 44239 ;; Return value:  Size  Location     Type
 44240 ;;                  1    wreg      unsigned char 
 44241 ;; Registers used:
 44242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44243 ;; Tracked objects:
 44244 ;;		On entry : 0/0
 44245 ;;		On exit  : 0/0
 44246 ;;		Unchanged: 0/0
 44247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44248 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44250 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44251 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44252 ;;Total ram usage:        4 bytes
 44253 ;; Hardware stack levels used:    1
 44254 ;; Hardware stack levels required when called:   10
 44255 ;; This function calls:
 44256 ;;		Nothing
 44257 ;; This function is called by:
 44258 ;;		__fill_buffer_get_display1
 44259 ;;		__fill_buffer_get_display2
 44260 ;; This function uses a non-reentrant model
 44261 ;;
 44262                           
 44263                           	psect	text208
 44264  013798                     __ptext208:
 44265                           	opt stack 0
 44266  013798                     _display_get_character:
 44267                           	opt stack 18
 44268                           
 44269                           ; BSR set to: 0
 44270                           ;incstack = 0
 44271                           ;display_get_character@line stored from wreg
 44272  013798  0100               	movlb	0	; () banked
 44273  01379A  6F63               	movwf	display_get_character@line& (0+255),b
 44274                           
 44275                           ;display.c: 25: return display_content[line][position];
 44276  01379C  0100               	movlb	0	; () banked
 44277  01379E  5163               	movf	display_get_character@line& (0+255),w,b
 44278  0137A0  0D14               	mullw	20
 44279  0137A2  0E54               	movlw	low _display_content
 44280  0137A4  0100               	movlb	0	; () banked
 44281  0137A6  6F61               	movwf	??_display_get_character& (0+255),b
 44282  0137A8  0E03               	movlw	high _display_content
 44283  0137AA  0100               	movlb	0	; () banked
 44284  0137AC  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 44285  0137AE  50F3               	movf	prodl,w,c
 44286  0137B0  0100               	movlb	0	; () banked
 44287  0137B2  2761               	addwf	??_display_get_character& (0+255),f,b
 44288  0137B4  50F4               	movf	prodh,w,c
 44289  0137B6  0100               	movlb	0	; () banked
 44290  0137B8  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 44291  0137BA  0100               	movlb	0	; () banked
 44292  0137BC  5160               	movf	display_get_character@position& (0+255),w,b
 44293  0137BE  0D01               	mullw	1
 44294  0137C0  50F3               	movf	prodl,w,c
 44295  0137C2  0100               	movlb	0	; () banked
 44296  0137C4  2561               	addwf	??_display_get_character& (0+255),w,b
 44297  0137C6  6ED9               	movwf	fsr2l,c
 44298  0137C8  50F4               	movf	prodh,w,c
 44299  0137CA  0100               	movlb	0	; () banked
 44300  0137CC  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 44301  0137CE  6EDA               	movwf	fsr2h,c
 44302  0137D0  50DF               	movf	indf2,w,c
 44303  0137D2  0012               	return	
 44304  0137D4                     __end_of_display_get_character:
 44305                           	opt stack 0
 44306                           tosu	equ	0xFFF
 44307                           tosh	equ	0xFFE
 44308                           tosl	equ	0xFFD
 44309                           pclath	equ	0xFFA
 44310                           tblptru	equ	0xFF8
 44311                           tblptrh	equ	0xFF7
 44312                           tblptrl	equ	0xFF6
 44313                           tablat	equ	0xFF5
 44314                           prodh	equ	0xFF4
 44315                           prodl	equ	0xFF3
 44316                           intcon	equ	0xFF2
 44317                           intcon2	equ	0xFF1
 44318                           intcon3	equ	0xFF0
 44319                           postinc0	equ	0xFEE
 44320                           wreg	equ	0xFE8
 44321                           indf1	equ	0xFE7
 44322                           postinc1	equ	0xFE6
 44323                           postdec1	equ	0xFE5
 44324                           plusw1	equ	0xFE3
 44325                           fsr1h	equ	0xFE2
 44326                           fsr1l	equ	0xFE1
 44327                           indf2	equ	0xFDF
 44328                           postinc2	equ	0xFDE
 44329                           postdec2	equ	0xFDD
 44330                           plusw2	equ	0xFDB
 44331                           fsr2h	equ	0xFDA
 44332                           fsr2l	equ	0xFD9
 44333                           status	equ	0xFD8
 44334                           
 44335 ;; *************** function __fill_buffer_get_calibration2 *****************
 44336 ;; Defined at:
 44337 ;;		line 388 in file "app_device_custom_hid.c"
 44338 ;; Parameters:    Size  Location     Type
 44339 ;;		None
 44340 ;; Auto vars:     Size  Location     Type
 44341 ;;		None
 44342 ;; Return value:  Size  Location     Type
 44343 ;;                  1    wreg      void 
 44344 ;; Registers used:
 44345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44346 ;; Tracked objects:
 44347 ;;		On entry : 0/0
 44348 ;;		On exit  : 0/0
 44349 ;;		Unchanged: 0/0
 44350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44355 ;;Total ram usage:        0 bytes
 44356 ;; Hardware stack levels used:    1
 44357 ;; Hardware stack levels required when called:   11
 44358 ;; This function calls:
 44359 ;;		_memcpy
 44360 ;; This function is called by:
 44361 ;;		_APP_DeviceCustomHIDTasks
 44362 ;; This function uses a non-reentrant model
 44363 ;;
 44364                           
 44365                           	psect	text209
 44366  0123A4                     __ptext209:
 44367                           	opt stack 0
 44368  0123A4                     __fill_buffer_get_calibration2:
 44369                           	opt stack 18
 44370                           
 44371                           ;app_device_custom_hid.c: 391: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 44372                           
 44373                           ; BSR set to: 0
 44374                           ;incstack = 0
 44375  0123A4  0E14               	movlw	20
 44376  0123A6  0103               	movlb	3	; () banked
 44377  0123A8  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 44378                           
 44379                           ; BSR set to: 3
 44380                           ;app_device_custom_hid.c: 393: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 44381  0123AA  0EA5               	movlw	low (_ToSendDataBuffer+1)
 44382  0123AC  0100               	movlb	0	; () banked
 44383  0123AE  6F60               	movwf	memcpy@d1& (0+255),b
 44384  0123B0  0E03               	movlw	high (_ToSendDataBuffer+1)
 44385  0123B2  0100               	movlb	0	; () banked
 44386  0123B4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44387  0123B6  0E30               	movlw	low (_calibrationParameters+48)
 44388  0123B8  0100               	movlb	0	; () banked
 44389  0123BA  6F62               	movwf	memcpy@s1& (0+255),b
 44390  0123BC  0E03               	movlw	high (_calibrationParameters+48)
 44391  0123BE  0100               	movlb	0	; () banked
 44392  0123C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44393  0123C2  0E00               	movlw	0
 44394  0123C4  0100               	movlb	0	; () banked
 44395  0123C6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44396  0123C8  0E0C               	movlw	12
 44397  0123CA  6F64               	movwf	memcpy@n& (0+255),b
 44398  0123CC  EC5C  F095         	call	_memcpy	;wreg free
 44399                           
 44400                           ;app_device_custom_hid.c: 394: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 44401  0123D0  0EB1               	movlw	low (_ToSendDataBuffer+13)
 44402  0123D2  0100               	movlb	0	; () banked
 44403  0123D4  6F60               	movwf	memcpy@d1& (0+255),b
 44404  0123D6  0E03               	movlw	high (_ToSendDataBuffer+13)
 44405  0123D8  0100               	movlb	0	; () banked
 44406  0123DA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44407  0123DC  0E3C               	movlw	low (_calibrationParameters+60)
 44408  0123DE  0100               	movlb	0	; () banked
 44409  0123E0  6F62               	movwf	memcpy@s1& (0+255),b
 44410  0123E2  0E03               	movlw	high (_calibrationParameters+60)
 44411  0123E4  0100               	movlb	0	; () banked
 44412  0123E6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44413  0123E8  0E00               	movlw	0
 44414  0123EA  0100               	movlb	0	; () banked
 44415  0123EC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44416  0123EE  0E0C               	movlw	12
 44417  0123F0  6F64               	movwf	memcpy@n& (0+255),b
 44418  0123F2  EC5C  F095         	call	_memcpy	;wreg free
 44419                           
 44420                           ;app_device_custom_hid.c: 395: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 44421  0123F6  0EBD               	movlw	low (_ToSendDataBuffer+25)
 44422  0123F8  0100               	movlb	0	; () banked
 44423  0123FA  6F60               	movwf	memcpy@d1& (0+255),b
 44424  0123FC  0E03               	movlw	high (_ToSendDataBuffer+25)
 44425  0123FE  0100               	movlb	0	; () banked
 44426  012400  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44427  012402  0E48               	movlw	low (_calibrationParameters+72)
 44428  012404  0100               	movlb	0	; () banked
 44429  012406  6F62               	movwf	memcpy@s1& (0+255),b
 44430  012408  0E03               	movlw	high (_calibrationParameters+72)
 44431  01240A  0100               	movlb	0	; () banked
 44432  01240C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44433  01240E  0E00               	movlw	0
 44434  012410  0100               	movlb	0	; () banked
 44435  012412  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44436  012414  0E0C               	movlw	12
 44437  012416  6F64               	movwf	memcpy@n& (0+255),b
 44438  012418  EC5C  F095         	call	_memcpy	;wreg free
 44439  01241C  0012               	return		;funcret
 44440  01241E                     __end_of__fill_buffer_get_calibration2:
 44441                           	opt stack 0
 44442                           tosu	equ	0xFFF
 44443                           tosh	equ	0xFFE
 44444                           tosl	equ	0xFFD
 44445                           pclath	equ	0xFFA
 44446                           tblptru	equ	0xFF8
 44447                           tblptrh	equ	0xFF7
 44448                           tblptrl	equ	0xFF6
 44449                           tablat	equ	0xFF5
 44450                           prodh	equ	0xFF4
 44451                           prodl	equ	0xFF3
 44452                           intcon	equ	0xFF2
 44453                           intcon2	equ	0xFF1
 44454                           intcon3	equ	0xFF0
 44455                           postinc0	equ	0xFEE
 44456                           wreg	equ	0xFE8
 44457                           indf1	equ	0xFE7
 44458                           postinc1	equ	0xFE6
 44459                           postdec1	equ	0xFE5
 44460                           plusw1	equ	0xFE3
 44461                           fsr1h	equ	0xFE2
 44462                           fsr1l	equ	0xFE1
 44463                           indf2	equ	0xFDF
 44464                           postinc2	equ	0xFDE
 44465                           postdec2	equ	0xFDD
 44466                           plusw2	equ	0xFDB
 44467                           fsr2h	equ	0xFDA
 44468                           fsr2l	equ	0xFD9
 44469                           status	equ	0xFD8
 44470                           
 44471 ;; *************** function __fill_buffer_get_calibration1 *****************
 44472 ;; Defined at:
 44473 ;;		line 376 in file "app_device_custom_hid.c"
 44474 ;; Parameters:    Size  Location     Type
 44475 ;;		None
 44476 ;; Auto vars:     Size  Location     Type
 44477 ;;		None
 44478 ;; Return value:  Size  Location     Type
 44479 ;;                  1    wreg      void 
 44480 ;; Registers used:
 44481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44482 ;; Tracked objects:
 44483 ;;		On entry : 0/0
 44484 ;;		On exit  : 0/0
 44485 ;;		Unchanged: 0/0
 44486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44491 ;;Total ram usage:        0 bytes
 44492 ;; Hardware stack levels used:    1
 44493 ;; Hardware stack levels required when called:   11
 44494 ;; This function calls:
 44495 ;;		_memcpy
 44496 ;; This function is called by:
 44497 ;;		_APP_DeviceCustomHIDTasks
 44498 ;; This function uses a non-reentrant model
 44499 ;;
 44500                           
 44501                           	psect	text210
 44502  0115CE                     __ptext210:
 44503                           	opt stack 0
 44504  0115CE                     __fill_buffer_get_calibration1:
 44505                           	opt stack 18
 44506                           
 44507                           ;app_device_custom_hid.c: 379: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 44508                           
 44509                           ;incstack = 0
 44510  0115CE  0E13               	movlw	19
 44511  0115D0  0103               	movlb	3	; () banked
 44512  0115D2  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 44513                           
 44514                           ; BSR set to: 3
 44515                           ;app_device_custom_hid.c: 381: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 44516  0115D4  0EA5               	movlw	low (_ToSendDataBuffer+1)
 44517  0115D6  0100               	movlb	0	; () banked
 44518  0115D8  6F60               	movwf	memcpy@d1& (0+255),b
 44519  0115DA  0E03               	movlw	high (_ToSendDataBuffer+1)
 44520  0115DC  0100               	movlb	0	; () banked
 44521  0115DE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44522  0115E0  0E00               	movlw	low _calibrationParameters
 44523  0115E2  0100               	movlb	0	; () banked
 44524  0115E4  6F62               	movwf	memcpy@s1& (0+255),b
 44525  0115E6  0E03               	movlw	high _calibrationParameters
 44526  0115E8  0100               	movlb	0	; () banked
 44527  0115EA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44528  0115EC  0E00               	movlw	0
 44529  0115EE  0100               	movlb	0	; () banked
 44530  0115F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44531  0115F2  0E0C               	movlw	12
 44532  0115F4  6F64               	movwf	memcpy@n& (0+255),b
 44533  0115F6  EC5C  F095         	call	_memcpy	;wreg free
 44534                           
 44535                           ;app_device_custom_hid.c: 382: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 44536  0115FA  0EB1               	movlw	low (_ToSendDataBuffer+13)
 44537  0115FC  0100               	movlb	0	; () banked
 44538  0115FE  6F60               	movwf	memcpy@d1& (0+255),b
 44539  011600  0E03               	movlw	high (_ToSendDataBuffer+13)
 44540  011602  0100               	movlb	0	; () banked
 44541  011604  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44542  011606  0E0C               	movlw	low (_calibrationParameters+12)
 44543  011608  0100               	movlb	0	; () banked
 44544  01160A  6F62               	movwf	memcpy@s1& (0+255),b
 44545  01160C  0E03               	movlw	high (_calibrationParameters+12)
 44546  01160E  0100               	movlb	0	; () banked
 44547  011610  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44548  011612  0E00               	movlw	0
 44549  011614  0100               	movlb	0	; () banked
 44550  011616  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44551  011618  0E0C               	movlw	12
 44552  01161A  6F64               	movwf	memcpy@n& (0+255),b
 44553  01161C  EC5C  F095         	call	_memcpy	;wreg free
 44554                           
 44555                           ;app_device_custom_hid.c: 383: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 44556  011620  0EBD               	movlw	low (_ToSendDataBuffer+25)
 44557  011622  0100               	movlb	0	; () banked
 44558  011624  6F60               	movwf	memcpy@d1& (0+255),b
 44559  011626  0E03               	movlw	high (_ToSendDataBuffer+25)
 44560  011628  0100               	movlb	0	; () banked
 44561  01162A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44562  01162C  0E18               	movlw	low (_calibrationParameters+24)
 44563  01162E  0100               	movlb	0	; () banked
 44564  011630  6F62               	movwf	memcpy@s1& (0+255),b
 44565  011632  0E03               	movlw	high (_calibrationParameters+24)
 44566  011634  0100               	movlb	0	; () banked
 44567  011636  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44568  011638  0E00               	movlw	0
 44569  01163A  0100               	movlb	0	; () banked
 44570  01163C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44571  01163E  0E0C               	movlw	12
 44572  011640  6F64               	movwf	memcpy@n& (0+255),b
 44573  011642  EC5C  F095         	call	_memcpy	;wreg free
 44574                           
 44575                           ;app_device_custom_hid.c: 384: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 44576  011646  0EC9               	movlw	low (_ToSendDataBuffer+37)
 44577  011648  0100               	movlb	0	; () banked
 44578  01164A  6F60               	movwf	memcpy@d1& (0+255),b
 44579  01164C  0E03               	movlw	high (_ToSendDataBuffer+37)
 44580  01164E  0100               	movlb	0	; () banked
 44581  011650  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44582  011652  0E24               	movlw	low (_calibrationParameters+36)
 44583  011654  0100               	movlb	0	; () banked
 44584  011656  6F62               	movwf	memcpy@s1& (0+255),b
 44585  011658  0E03               	movlw	high (_calibrationParameters+36)
 44586  01165A  0100               	movlb	0	; () banked
 44587  01165C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44588  01165E  0E00               	movlw	0
 44589  011660  0100               	movlb	0	; () banked
 44590  011662  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44591  011664  0E0C               	movlw	12
 44592  011666  6F64               	movwf	memcpy@n& (0+255),b
 44593  011668  EC5C  F095         	call	_memcpy	;wreg free
 44594  01166C  0012               	return		;funcret
 44595  01166E                     __end_of__fill_buffer_get_calibration1:
 44596                           	opt stack 0
 44597                           tosu	equ	0xFFF
 44598                           tosh	equ	0xFFE
 44599                           tosl	equ	0xFFD
 44600                           pclath	equ	0xFFA
 44601                           tblptru	equ	0xFF8
 44602                           tblptrh	equ	0xFF7
 44603                           tblptrl	equ	0xFF6
 44604                           tablat	equ	0xFF5
 44605                           prodh	equ	0xFF4
 44606                           prodl	equ	0xFF3
 44607                           intcon	equ	0xFF2
 44608                           intcon2	equ	0xFF1
 44609                           intcon3	equ	0xFF0
 44610                           postinc0	equ	0xFEE
 44611                           wreg	equ	0xFE8
 44612                           indf1	equ	0xFE7
 44613                           postinc1	equ	0xFE6
 44614                           postdec1	equ	0xFE5
 44615                           plusw1	equ	0xFE3
 44616                           fsr1h	equ	0xFE2
 44617                           fsr1l	equ	0xFE1
 44618                           indf2	equ	0xFDF
 44619                           postinc2	equ	0xFDE
 44620                           postdec2	equ	0xFDD
 44621                           plusw2	equ	0xFDB
 44622                           fsr2h	equ	0xFDA
 44623                           fsr2l	equ	0xFD9
 44624                           status	equ	0xFD8
 44625                           
 44626 ;; *************** function _memcpy *****************
 44627 ;; Defined at:
 44628 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 44629 ;; Parameters:    Size  Location     Type
 44630 ;;  d1              2    0[BANK0 ] PTR void 
 44631 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44632 ;;		 -> SetupPkt(8), 
 44633 ;;  s1              2    2[BANK0 ] PTR const void 
 44634 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44635 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44636 ;;		 -> SetupPkt(8), 
 44637 ;;  n               2    4[BANK0 ] unsigned int 
 44638 ;; Auto vars:     Size  Location     Type
 44639 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 44640 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44641 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44642 ;;		 -> SetupPkt(8), 
 44643 ;;  d               2    7[BANK0 ] PTR unsigned char 
 44644 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44645 ;;		 -> SetupPkt(8), 
 44646 ;;  tmp             1    6[BANK0 ] unsigned char 
 44647 ;; Return value:  Size  Location     Type
 44648 ;;                  2    0[BANK0 ] PTR void 
 44649 ;; Registers used:
 44650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44651 ;; Tracked objects:
 44652 ;;		On entry : 0/0
 44653 ;;		On exit  : 0/0
 44654 ;;		Unchanged: 0/0
 44655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44657 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44659 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44660 ;;Total ram usage:       11 bytes
 44661 ;; Hardware stack levels used:    1
 44662 ;; Hardware stack levels required when called:   10
 44663 ;; This function calls:
 44664 ;;		Nothing
 44665 ;; This function is called by:
 44666 ;;		_MSDProcessCommandMediaPresent
 44667 ;;		__fill_buffer_get_calibration1
 44668 ;;		__fill_buffer_get_calibration2
 44669 ;;		__flash_set_page_size
 44670 ;;		_fat_create_file
 44671 ;; This function uses a non-reentrant model
 44672 ;;
 44673                           
 44674                           	psect	text211
 44675  012AB8                     __ptext211:
 44676                           	opt stack 0
 44677  012AB8                     _memcpy:
 44678                           	opt stack 17
 44679                           
 44680                           ;incstack = 0
 44681  012AB8  C062  F069         	movff	memcpy@s1,memcpy@s
 44682  012ABC  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 44683  012AC0  C060  F067         	movff	memcpy@d1,memcpy@d
 44684  012AC4  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 44685  012AC8  D01F               	goto	l18115
 44686  012ACA                     l18107:
 44687  012ACA  C069  FFF6         	movff	memcpy@s,tblptrl
 44688  012ACE  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 44689  012AD2  0E00               	movlw	low (__mediumconst shr (0+16))
 44690  012AD4  6EF8               	movwf	tblptru,c
 44691  012AD6  0E0E               	movlw	(high __ramtop+-1)
 44692  012AD8  64F7               	cpfsgt	tblptrh,c
 44693  012ADA  D003               	bra	u16847
 44694  012ADC  0008               	tblrd		*
 44695  012ADE  50F5               	movf	tablat,w,c
 44696  012AE0  D005               	bra	u16840
 44697  012AE2                     u16847:
 44698  012AE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 44699  012AE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 44700  012AEA  50EF               	movf	indf0,w,c
 44701  012AEC                     u16840:
 44702  012AEC  0100               	movlb	0	; () banked
 44703  012AEE  6F66               	movwf	memcpy@tmp& (0+255),b
 44704                           
 44705                           ; BSR set to: 0
 44706  012AF0  0100               	movlb	0	; () banked
 44707  012AF2  4B69               	infsnz	memcpy@s& (0+255),f,b
 44708  012AF4  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 44709                           
 44710                           ; BSR set to: 0
 44711  012AF6  C067  FFD9         	movff	memcpy@d,fsr2l
 44712  012AFA  C068  FFDA         	movff	memcpy@d+1,fsr2h
 44713  012AFE  C066  FFDF         	movff	memcpy@tmp,indf2
 44714                           
 44715                           ; BSR set to: 0
 44716  012B02  0100               	movlb	0	; () banked
 44717  012B04  4B67               	infsnz	memcpy@d& (0+255),f,b
 44718  012B06  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 44719  012B08                     l18115:
 44720  012B08  0100               	movlb	0	; () banked
 44721  012B0A  0764               	decf	memcpy@n& (0+255),f,b
 44722  012B0C  A0D8               	btfss	status,0,c
 44723  012B0E  0765               	decf	(memcpy@n+1)& (0+255),f,b
 44724  012B10  0100               	movlb	0	; () banked
 44725  012B12  2964               	incf	memcpy@n& (0+255),w,b
 44726  012B14  E1DA               	bnz	l18107
 44727  012B16  0100               	movlb	0	; () banked
 44728  012B18  2965               	incf	(memcpy@n+1)& (0+255),w,b
 44729  012B1A  B4D8               	btfsc	status,2,c
 44730  012B1C  0012               	return	
 44731  012B1E  D7D5               	goto	l18107
 44732  012B20                     __end_of_memcpy:
 44733                           	opt stack 0
 44734                           tosu	equ	0xFFF
 44735                           tosh	equ	0xFFE
 44736                           tosl	equ	0xFFD
 44737                           pclath	equ	0xFFA
 44738                           tblptru	equ	0xFF8
 44739                           tblptrh	equ	0xFF7
 44740                           tblptrl	equ	0xFF6
 44741                           tablat	equ	0xFF5
 44742                           prodh	equ	0xFF4
 44743                           prodl	equ	0xFF3
 44744                           intcon	equ	0xFF2
 44745                           intcon2	equ	0xFF1
 44746                           intcon3	equ	0xFF0
 44747                           indf0	equ	0xFEF
 44748                           postinc0	equ	0xFEE
 44749                           fsr0h	equ	0xFEA
 44750                           fsr0l	equ	0xFE9
 44751                           wreg	equ	0xFE8
 44752                           indf1	equ	0xFE7
 44753                           postinc1	equ	0xFE6
 44754                           postdec1	equ	0xFE5
 44755                           plusw1	equ	0xFE3
 44756                           fsr1h	equ	0xFE2
 44757                           fsr1l	equ	0xFE1
 44758                           indf2	equ	0xFDF
 44759                           postinc2	equ	0xFDE
 44760                           postdec2	equ	0xFDD
 44761                           plusw2	equ	0xFDB
 44762                           fsr2h	equ	0xFDA
 44763                           fsr2l	equ	0xFD9
 44764                           status	equ	0xFD8
 44765                           
 44766 ;; *************** function _USBTransferOnePacket *****************
 44767 ;; Defined at:
 44768 ;;		line 995 in file "usb_device.c"
 44769 ;; Parameters:    Size  Location     Type
 44770 ;;  ep              1    wreg     unsigned char 
 44771 ;;  dir             1    0[BANK0 ] unsigned char 
 44772 ;;  data            2    1[BANK0 ] PTR unsigned char 
 44773 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 44774 ;;		 -> msd_cbw(31), NULL(0), 
 44775 ;;  len             1    3[BANK0 ] unsigned char 
 44776 ;; Auto vars:     Size  Location     Type
 44777 ;;  ep              1    8[BANK0 ] unsigned char 
 44778 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 44779 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 44780 ;; Return value:  Size  Location     Type
 44781 ;;                  2    0[BANK0 ] PTR void 
 44782 ;; Registers used:
 44783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44784 ;; Tracked objects:
 44785 ;;		On entry : 0/0
 44786 ;;		On exit  : 0/0
 44787 ;;		Unchanged: 0/0
 44788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44789 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44790 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44791 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44792 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44793 ;;Total ram usage:       11 bytes
 44794 ;; Hardware stack levels used:    1
 44795 ;; Hardware stack levels required when called:   10
 44796 ;; This function calls:
 44797 ;;		Nothing
 44798 ;; This function is called by:
 44799 ;;		_MSDTasks
 44800 ;;		_MSDProcessCommandMediaPresent
 44801 ;;		_MSDReadHandler
 44802 ;;		_MSDWriteHandler
 44803 ;;		_APP_DeviceCustomHIDTasks
 44804 ;; This function uses a non-reentrant model
 44805 ;;
 44806                           
 44807                           	psect	text212
 44808  00EED6                     __ptext212:
 44809                           	opt stack 0
 44810  00EED6                     _USBTransferOnePacket:
 44811                           	opt stack 18
 44812                           
 44813                           ; BSR set to: 0
 44814                           ;incstack = 0
 44815                           ;USBTransferOnePacket@ep stored from wreg
 44816  00EED6  0100               	movlb	0	; () banked
 44817  00EED8  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 44818                           
 44819                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 44820                           ;usb_device.c: 1000: if(dir != 0)
 44821  00EEDA  0100               	movlb	0	; () banked
 44822  00EEDC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44823  00EEDE  0100               	movlb	0	; () banked
 44824  00EEE0  B4D8               	btfsc	status,2,c
 44825  00EEE2  D008               	goto	l17927
 44826                           
 44827                           ; BSR set to: 0
 44828                           ;usb_device.c: 1001: {
 44829                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44830  00EEE4  0100               	movlb	0	; () banked
 44831  00EEE6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44832  00EEE8  0D02               	mullw	2
 44833  00EEEA  0E10               	movlw	low _pBDTEntryIn
 44834  00EEEC  24F3               	addwf	prodl,w,c
 44835  00EEEE  6ED9               	movwf	fsr2l,c
 44836  00EEF0  0E00               	movlw	high _pBDTEntryIn
 44837  00EEF2  D007               	goto	L49
 44838  00EEF4                     l17927:
 44839                           
 44840                           ; BSR set to: 0
 44841                           ;usb_device.c: 1005: else
 44842                           ;usb_device.c: 1006: {
 44843                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 44844  00EEF4  0100               	movlb	0	; () banked
 44845  00EEF6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44846  00EEF8  0D02               	mullw	2
 44847  00EEFA  0ED3               	movlw	low _pBDTEntryOut
 44848  00EEFC  24F3               	addwf	prodl,w,c
 44849  00EEFE  6ED9               	movwf	fsr2l,c
 44850  00EF00  0E01               	movlw	high _pBDTEntryOut
 44851  00EF02                     L49:
 44852  00EF02  20F4               	addwfc	prodh,w,c
 44853  00EF04  6EDA               	movwf	fsr2h,c
 44854  00EF06  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 44855  00EF0A  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 44856                           
 44857                           ; BSR set to: 0
 44858                           ;usb_device.c: 1009: }
 44859                           ;usb_device.c: 1013: if(handle == 0)
 44860                           
 44861                           ; BSR set to: 0
 44862  00EF0E  0100               	movlb	0	; () banked
 44863  00EF10  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44864  00EF12  0100               	movlb	0	; () banked
 44865  00EF14  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44866  00EF16  A4D8               	btfss	status,2,c
 44867  00EF18  D007               	goto	l17935
 44868                           
 44869                           ; BSR set to: 0
 44870                           ;usb_device.c: 1014: {
 44871                           ;usb_device.c: 1015: return 0;
 44872  00EF1A  0E00               	movlw	0
 44873  00EF1C  0100               	movlb	0	; () banked
 44874  00EF1E  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 44875  00EF20  0E00               	movlw	0
 44876  00EF22  0100               	movlb	0	; () banked
 44877  00EF24  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 44878                           
 44879                           ; BSR set to: 0
 44880  00EF26  0012               	return	
 44881  00EF28                     l17935:
 44882                           
 44883                           ; BSR set to: 0
 44884                           ;usb_device.c: 1016: }
 44885                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44886  00EF28  0100               	movlb	0	; () banked
 44887  00EF2A  EE20 F002          	lfsr	2,2
 44888  00EF2E  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44889  00EF30  26D9               	addwf	fsr2l,f,c
 44890  00EF32  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44891  00EF34  22DA               	addwfc	fsr2h,f,c
 44892  00EF36  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44893  00EF3A  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44894                           
 44895                           ;usb_device.c: 1030: handle->CNT = len;
 44896  00EF3E  0100               	movlb	0	; () banked
 44897  00EF40  EE20 F001          	lfsr	2,1
 44898  00EF44  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44899  00EF46  26D9               	addwf	fsr2l,f,c
 44900  00EF48  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44901  00EF4A  22DA               	addwfc	fsr2h,f,c
 44902  00EF4C  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 44903                           
 44904                           ; BSR set to: 0
 44905                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44906  00EF50  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44907  00EF54  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44908  00EF58  0E40               	movlw	64
 44909  00EF5A  16DF               	andwf	indf2,f,c
 44910                           
 44911                           ; BSR set to: 0
 44912                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44913  00EF5C  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44914  00EF60  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44915  00EF64  0E00               	movlw	0
 44916  00EF66  86DB               	bsf	plusw2,3,c
 44917                           
 44918                           ; BSR set to: 0
 44919                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44920  00EF68  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44921  00EF6C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44922  00EF70  0E00               	movlw	0
 44923  00EF72  8EDB               	bsf	plusw2,7,c
 44924                           
 44925                           ; BSR set to: 0
 44926                           ;usb_device.c: 1036: if(dir != 0)
 44927  00EF74  0100               	movlb	0	; () banked
 44928  00EF76  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44929  00EF78  0100               	movlb	0	; () banked
 44930  00EF7A  B4D8               	btfsc	status,2,c
 44931  00EF7C  D01E               	goto	l17947
 44932                           
 44933                           ; BSR set to: 0
 44934                           ;usb_device.c: 1037: {
 44935                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 44936  00EF7E  0100               	movlb	0	; () banked
 44937  00EF80  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44938  00EF82  0D02               	mullw	2
 44939  00EF84  0E10               	movlw	low _pBDTEntryIn
 44940  00EF86  24F3               	addwf	prodl,w,c
 44941  00EF88  6ED9               	movwf	fsr2l,c
 44942  00EF8A  0E00               	movlw	high _pBDTEntryIn
 44943  00EF8C  20F4               	addwfc	prodh,w,c
 44944  00EF8E  6EDA               	movwf	fsr2h,c
 44945  00EF90  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44946  00EF94  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44947  00EF98  0E04               	movlw	4
 44948  00EF9A  0100               	movlb	0	; () banked
 44949  00EF9C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44950  00EF9E  0100               	movlb	0	; () banked
 44951  00EFA0  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44952  00EFA2  0100               	movlb	0	; () banked
 44953  00EFA4  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44954  00EFA6  0100               	movlb	0	; () banked
 44955  00EFA8  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44956  00EFAA  0100               	movlb	0	; () banked
 44957  00EFAC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44958  00EFAE  0D02               	mullw	2
 44959  00EFB0  0E10               	movlw	low _pBDTEntryIn
 44960  00EFB2  24F3               	addwf	prodl,w,c
 44961  00EFB4  6ED9               	movwf	fsr2l,c
 44962  00EFB6  0E00               	movlw	high _pBDTEntryIn
 44963  00EFB8  D01D               	goto	L50
 44964  00EFBA                     l17947:
 44965                           
 44966                           ; BSR set to: 0
 44967                           ;usb_device.c: 1041: else
 44968                           ;usb_device.c: 1042: {
 44969                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 44970  00EFBA  0100               	movlb	0	; () banked
 44971  00EFBC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44972  00EFBE  0D02               	mullw	2
 44973  00EFC0  0ED3               	movlw	low _pBDTEntryOut
 44974  00EFC2  24F3               	addwf	prodl,w,c
 44975  00EFC4  6ED9               	movwf	fsr2l,c
 44976  00EFC6  0E01               	movlw	high _pBDTEntryOut
 44977  00EFC8  20F4               	addwfc	prodh,w,c
 44978  00EFCA  6EDA               	movwf	fsr2h,c
 44979  00EFCC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44980  00EFD0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44981  00EFD4  0E04               	movlw	4
 44982  00EFD6  0100               	movlb	0	; () banked
 44983  00EFD8  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44984  00EFDA  0100               	movlb	0	; () banked
 44985  00EFDC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44986  00EFDE  0100               	movlb	0	; () banked
 44987  00EFE0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44988  00EFE2  0100               	movlb	0	; () banked
 44989  00EFE4  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44990  00EFE6  0100               	movlb	0	; () banked
 44991  00EFE8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44992  00EFEA  0D02               	mullw	2
 44993  00EFEC  0ED3               	movlw	low _pBDTEntryOut
 44994  00EFEE  24F3               	addwf	prodl,w,c
 44995  00EFF0  6ED9               	movwf	fsr2l,c
 44996  00EFF2  0E01               	movlw	high _pBDTEntryOut
 44997  00EFF4                     L50:
 44998  00EFF4  20F4               	addwfc	prodh,w,c
 44999  00EFF6  6EDA               	movwf	fsr2h,c
 45000  00EFF8  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 45001  00EFFC  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 45002                           
 45003                           ; BSR set to: 0
 45004                           ;usb_device.c: 1045: }
 45005                           ;usb_device.c: 1046: return (void*)handle;
 45006                           
 45007                           ; BSR set to: 0
 45008  00F000  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 45009  00F004  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 45010  00F008  0012               	return	
 45011  00F00A                     __end_of_USBTransferOnePacket:
 45012                           	opt stack 0
 45013                           tosu	equ	0xFFF
 45014                           tosh	equ	0xFFE
 45015                           tosl	equ	0xFFD
 45016                           pclath	equ	0xFFA
 45017                           tblptru	equ	0xFF8
 45018                           tblptrh	equ	0xFF7
 45019                           tblptrl	equ	0xFF6
 45020                           tablat	equ	0xFF5
 45021                           prodh	equ	0xFF4
 45022                           prodl	equ	0xFF3
 45023                           intcon	equ	0xFF2
 45024                           intcon2	equ	0xFF1
 45025                           intcon3	equ	0xFF0
 45026                           indf0	equ	0xFEF
 45027                           postinc0	equ	0xFEE
 45028                           fsr0h	equ	0xFEA
 45029                           fsr0l	equ	0xFE9
 45030                           wreg	equ	0xFE8
 45031                           indf1	equ	0xFE7
 45032                           postinc1	equ	0xFE6
 45033                           postdec1	equ	0xFE5
 45034                           plusw1	equ	0xFE3
 45035                           fsr1h	equ	0xFE2
 45036                           fsr1l	equ	0xFE1
 45037                           indf2	equ	0xFDF
 45038                           postinc2	equ	0xFDE
 45039                           postdec2	equ	0xFDD
 45040                           plusw2	equ	0xFDB
 45041                           fsr2h	equ	0xFDA
 45042                           fsr2l	equ	0xFD9
 45043                           status	equ	0xFD8
 45044                           
 45045 ;; *************** function _SYS_InterruptHigh *****************
 45046 ;; Defined at:
 45047 ;;		line 201 in file "system.c"
 45048 ;; Parameters:    Size  Location     Type
 45049 ;;		None
 45050 ;; Auto vars:     Size  Location     Type
 45051 ;;		None
 45052 ;; Return value:  Size  Location     Type
 45053 ;;                  1    wreg      void 
 45054 ;; Registers used:
 45055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45056 ;; Tracked objects:
 45057 ;;		On entry : 0/0
 45058 ;;		On exit  : 0/0
 45059 ;;		Unchanged: 0/0
 45060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45063 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45064 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45065 ;;Total ram usage:       14 bytes
 45066 ;; Hardware stack levels used:    1
 45067 ;; Hardware stack levels required when called:    9
 45068 ;; This function calls:
 45069 ;;		_USBDeviceTasks
 45070 ;;		_tmr_isr
 45071 ;; This function is called by:
 45072 ;;		Interrupt level 2
 45073 ;; This function uses a non-reentrant model
 45074 ;;
 45075                           
 45076                           	psect	intcode
 45077  009008                     __pintcode:
 45078                           	opt stack 0
 45079  009008                     _SYS_InterruptHigh:
 45080                           	opt stack 9
 45081                           
 45082                           ; BSR set to: 0
 45083                           ;incstack = 0
 45084  009008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 45085  00900A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 45086  00900E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 45087  009012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 45088  009016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 45089  00901A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 45090  00901E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 45091  009022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 45092  009026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 45093  00902A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 45094  00902E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 45095  009032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 45096  009036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 45097  00903A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 45098  00903E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 45099                           
 45100                           ;system.c: 204: USBDeviceTasks();
 45101  009042  EC84  F075         	call	_USBDeviceTasks	;wreg free
 45102                           
 45103                           ;system.c: 208: tmr_isr();
 45104  009046  EC86  F08B         	call	_tmr_isr	;wreg free
 45105  00904A  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 45106  00904E  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 45107  009052  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 45108  009056  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 45109  00905A  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 45110  00905E  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 45111  009062  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 45112  009066  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 45113  00906A  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 45114  00906E  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 45115  009072  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 45116  009076  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 45117  00907A  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 45118  00907E  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 45119  009082  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 45120  009084  0011               	retfie		f
 45121  009086                     __end_of_SYS_InterruptHigh:
 45122                           	opt stack 0
 45123                           tosu	equ	0xFFF
 45124                           tosh	equ	0xFFE
 45125                           tosl	equ	0xFFD
 45126                           pclatu	equ	0xFFB
 45127                           pclath	equ	0xFFA
 45128                           tblptru	equ	0xFF8
 45129                           tblptrh	equ	0xFF7
 45130                           tblptrl	equ	0xFF6
 45131                           tablat	equ	0xFF5
 45132                           prodh	equ	0xFF4
 45133                           prodl	equ	0xFF3
 45134                           intcon	equ	0xFF2
 45135                           intcon2	equ	0xFF1
 45136                           intcon3	equ	0xFF0
 45137                           indf0	equ	0xFEF
 45138                           postinc0	equ	0xFEE
 45139                           fsr0h	equ	0xFEA
 45140                           fsr0l	equ	0xFE9
 45141                           wreg	equ	0xFE8
 45142                           indf1	equ	0xFE7
 45143                           postinc1	equ	0xFE6
 45144                           postdec1	equ	0xFE5
 45145                           plusw1	equ	0xFE3
 45146                           fsr1h	equ	0xFE2
 45147                           fsr1l	equ	0xFE1
 45148                           indf2	equ	0xFDF
 45149                           postinc2	equ	0xFDE
 45150                           postdec2	equ	0xFDD
 45151                           plusw2	equ	0xFDB
 45152                           fsr2h	equ	0xFDA
 45153                           fsr2l	equ	0xFD9
 45154                           status	equ	0xFD8
 45155                           
 45156 ;; *************** function _tmr_isr *****************
 45157 ;; Defined at:
 45158 ;;		line 46 in file "os.c"
 45159 ;; Parameters:    Size  Location     Type
 45160 ;;		None
 45161 ;; Auto vars:     Size  Location     Type
 45162 ;;		None
 45163 ;; Return value:  Size  Location     Type
 45164 ;;                  1    wreg      void 
 45165 ;; Registers used:
 45166 ;;		wreg, status,2, status,0
 45167 ;; Tracked objects:
 45168 ;;		On entry : 0/0
 45169 ;;		On exit  : 0/0
 45170 ;;		Unchanged: 0/0
 45171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45176 ;;Total ram usage:        0 bytes
 45177 ;; Hardware stack levels used:    1
 45178 ;; This function calls:
 45179 ;;		Nothing
 45180 ;; This function is called by:
 45181 ;;		_SYS_InterruptHigh
 45182 ;; This function uses a non-reentrant model
 45183 ;;
 45184                           
 45185                           	psect	text214
 45186  01170C                     __ptext214:
 45187                           	opt stack 0
 45188  01170C                     _tmr_isr:
 45189                           	opt stack 17
 45190                           
 45191                           ;os.c: 49: if(INTCONbits.T0IF)
 45192                           
 45193                           ;incstack = 0
 45194  01170C  A4F2               	btfss	intcon,2,c	;volatile
 45195  01170E  D039               	goto	i2l1322
 45196                           
 45197                           ;os.c: 50: {
 45198                           ;os.c: 52: if(os.done)
 45199  011710  0102               	movlb	2	; () banked
 45200  011712  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 45201  011714  A4D8               	btfss	status,2,c
 45202  011716  D00D               	goto	i2l16915
 45203  011718  D028               	goto	i2l16929
 45204  01171A                     i2l1325:
 45205                           
 45206                           ; BSR set to: 2
 45207                           ;os.c: 58: TMR0H = 0xFF;
 45208  01171A  68D7               	setf	4055,c	;volatile
 45209                           
 45210                           ; BSR set to: 2
 45211                           ;os.c: 59: TMR0L = 0x80;
 45212  01171C  0E80               	movlw	128
 45213  01171E  D007               	goto	L52
 45214  011720                     i2l16909:
 45215                           
 45216                           ; BSR set to: 2
 45217                           ;os.c: 62: TMR0H = 0xF8;
 45218  011720  0EF8               	movlw	248
 45219  011722  6ED7               	movwf	4055,c	;volatile
 45220                           
 45221                           ;os.c: 63: TMR0L = 0x30;
 45222  011724  0E30               	movlw	48
 45223  011726  D003               	goto	L52
 45224  011728                     i2l16911:
 45225                           
 45226                           ; BSR set to: 2
 45227                           ;os.c: 66: TMR0H = 0xD1;
 45228  011728  0ED1               	movlw	209
 45229  01172A  6ED7               	movwf	4055,c	;volatile
 45230                           
 45231                           ;os.c: 67: TMR0L = 0x20;
 45232  01172C  0E20               	movlw	32
 45233  01172E                     L52:
 45234  01172E  6ED6               	movwf	4054,c	;volatile
 45235                           
 45236                           ; BSR set to: 2
 45237                           ;os.c: 69: }
 45238                           
 45239                           ;os.c: 68: break;
 45240  011730  D00B               	goto	i2l16917
 45241  011732                     i2l16915:
 45242                           
 45243                           ; BSR set to: 2
 45244  011732  0102               	movlb	2	; () banked
 45245  011734  5100               	movf	_os& (0+255),w,b	;volatile
 45246                           
 45247                           ; Switch size 1, requested type "space"
 45248                           ; Number of cases is 3, Range of values is 0 to 2
 45249                           ; switch strategies available:
 45250                           ; Name         Instructions Cycles
 45251                           ; simple_byte           10     6 (average)
 45252                           ;	Chosen strategy is simple_byte
 45253  011736  0A00               	xorlw	0	; case 0
 45254  011738  B4D8               	btfsc	status,2,c
 45255  01173A  D7EF               	goto	i2l1325
 45256  01173C  0A01               	xorlw	1	; case 1
 45257  01173E  B4D8               	btfsc	status,2,c
 45258  011740  D7EF               	goto	i2l16909
 45259  011742  0A03               	xorlw	3	; case 2
 45260  011744  B4D8               	btfsc	status,2,c
 45261  011746  D7F0               	goto	i2l16911
 45262  011748                     i2l16917:
 45263                           
 45264                           ; BSR set to: 2
 45265                           ;os.c: 71: ++os.timeSlot;
 45266  011748  0102               	movlb	2	; () banked
 45267  01174A  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 45268                           
 45269                           ; BSR set to: 2
 45270                           ;os.c: 76: os.done = 0;
 45271  01174C  0E00               	movlw	0
 45272  01174E  0102               	movlb	2	; () banked
 45273  011750  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 45274                           
 45275                           ;os.c: 77: }
 45276  011752  D016               	goto	i2l1329
 45277  011754                     i2l1331:
 45278                           
 45279                           ; BSR set to: 2
 45280                           ;os.c: 84: TMR0H = 0xFF;
 45281  011754  68D7               	setf	4055,c	;volatile
 45282                           
 45283                           ; BSR set to: 2
 45284                           ;os.c: 85: TMR0L = 0xE0;
 45285  011756  0EE0               	movlw	224
 45286  011758  D006               	goto	L54
 45287  01175A                     i2l1333:
 45288                           
 45289                           ; BSR set to: 2
 45290                           ;os.c: 88: TMR0H = 0xFF;
 45291  01175A  68D7               	setf	4055,c	;volatile
 45292                           
 45293                           ; BSR set to: 2
 45294                           ;os.c: 89: TMR0L = 0x06;
 45295  01175C  0E06               	movlw	6
 45296  01175E  D003               	goto	L54
 45297  011760                     i2l16925:
 45298                           
 45299                           ; BSR set to: 2
 45300                           ;os.c: 92: TMR0H = 0xFA;
 45301  011760  0EFA               	movlw	250
 45302  011762  6ED7               	movwf	4055,c	;volatile
 45303                           
 45304                           ;os.c: 93: TMR0L = 0x24;
 45305  011764  0E24               	movlw	36
 45306  011766                     L54:
 45307  011766  6ED6               	movwf	4054,c	;volatile
 45308                           
 45309                           ; BSR set to: 2
 45310                           ;os.c: 95: }
 45311                           
 45312                           ;os.c: 94: break;
 45313  011768  D00B               	goto	i2l1329
 45314  01176A                     i2l16929:
 45315                           
 45316                           ; BSR set to: 2
 45317  01176A  0102               	movlb	2	; () banked
 45318  01176C  5100               	movf	_os& (0+255),w,b	;volatile
 45319                           
 45320                           ; Switch size 1, requested type "space"
 45321                           ; Number of cases is 3, Range of values is 0 to 2
 45322                           ; switch strategies available:
 45323                           ; Name         Instructions Cycles
 45324                           ; simple_byte           10     6 (average)
 45325                           ;	Chosen strategy is simple_byte
 45326  01176E  0A00               	xorlw	0	; case 0
 45327  011770  B4D8               	btfsc	status,2,c
 45328  011772  D7F0               	goto	i2l1331
 45329  011774  0A01               	xorlw	1	; case 1
 45330  011776  B4D8               	btfsc	status,2,c
 45331  011778  D7F0               	goto	i2l1333
 45332  01177A  0A03               	xorlw	3	; case 2
 45333  01177C  B4D8               	btfsc	status,2,c
 45334  01177E  D7F0               	goto	i2l16925
 45335  011780                     i2l1329:
 45336                           
 45337                           ; BSR set to: 2
 45338                           ;os.c: 96: }
 45339                           ;os.c: 97: INTCONbits.T0IF = 0;
 45340  011780  94F2               	bcf	intcon,2,c	;volatile
 45341  011782                     i2l1322:
 45342                           
 45343                           ;os.c: 98: }
 45344                           ;os.c: 101: if(INTCON3bits.INT1IF)
 45345  011782  A0F0               	btfss	intcon3,0,c	;volatile
 45346  011784  D003               	goto	i2l16935
 45347                           
 45348                           ;os.c: 102: {
 45349                           ;os.c: 103: ++os.buttonCount;
 45350  011786  0102               	movlb	2	; () banked
 45351  011788  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 45352                           
 45353                           ; BSR set to: 2
 45354                           ;os.c: 104: INTCON3bits.INT1IF = 0;
 45355  01178A  90F0               	bcf	intcon3,0,c	;volatile
 45356  01178C                     i2l16935:
 45357                           
 45358                           ;os.c: 105: }
 45359                           ;os.c: 108: if(INTCON3bits.INT2IF)
 45360  01178C  A2F0               	btfss	intcon3,1,c	;volatile
 45361  01178E  D005               	goto	i2l16943
 45362                           
 45363                           ;os.c: 109: {
 45364                           ;os.c: 110: if(!PORTBbits.RB6)
 45365  011790  BC81               	btfsc	3969,6,c	;volatile
 45366  011792  D002               	goto	i2l16941
 45367                           
 45368                           ;os.c: 111: {
 45369                           ;os.c: 112: --os.encoderCount;
 45370  011794  0102               	movlb	2	; () banked
 45371  011796  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 45372  011798                     i2l16941:
 45373                           
 45374                           ;os.c: 113: }
 45375                           ;os.c: 114: INTCON3bits.INT2IF = 0;
 45376  011798  92F0               	bcf	intcon3,1,c	;volatile
 45377  01179A                     i2l16943:
 45378                           
 45379                           ;os.c: 115: }
 45380                           ;os.c: 116: if(INTCON3bits.INT3IF)
 45381  01179A  A4F0               	btfss	intcon3,2,c	;volatile
 45382  01179C  0012               	return	
 45383                           
 45384                           ;os.c: 117: {
 45385                           ;os.c: 118: if(!PORTBbits.RB7)
 45386  01179E  BE81               	btfsc	3969,7,c	;volatile
 45387  0117A0  D002               	goto	i2l16949
 45388                           
 45389                           ;os.c: 119: {
 45390                           ;os.c: 120: ++os.encoderCount;
 45391  0117A2  0102               	movlb	2	; () banked
 45392  0117A4  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 45393  0117A6                     i2l16949:
 45394                           
 45395                           ;os.c: 121: }
 45396                           ;os.c: 122: INTCON3bits.INT3IF = 0;
 45397  0117A6  94F0               	bcf	intcon3,2,c	;volatile
 45398  0117A8  0012               	return	
 45399  0117AA                     __end_of_tmr_isr:
 45400                           	opt stack 0
 45401                           tosu	equ	0xFFF
 45402                           tosh	equ	0xFFE
 45403                           tosl	equ	0xFFD
 45404                           pclatu	equ	0xFFB
 45405                           pclath	equ	0xFFA
 45406                           tblptru	equ	0xFF8
 45407                           tblptrh	equ	0xFF7
 45408                           tblptrl	equ	0xFF6
 45409                           tablat	equ	0xFF5
 45410                           prodh	equ	0xFF4
 45411                           prodl	equ	0xFF3
 45412                           intcon	equ	0xFF2
 45413                           intcon2	equ	0xFF1
 45414                           intcon3	equ	0xFF0
 45415                           indf0	equ	0xFEF
 45416                           postinc0	equ	0xFEE
 45417                           fsr0h	equ	0xFEA
 45418                           fsr0l	equ	0xFE9
 45419                           wreg	equ	0xFE8
 45420                           indf1	equ	0xFE7
 45421                           postinc1	equ	0xFE6
 45422                           postdec1	equ	0xFE5
 45423                           plusw1	equ	0xFE3
 45424                           fsr1h	equ	0xFE2
 45425                           fsr1l	equ	0xFE1
 45426                           indf2	equ	0xFDF
 45427                           postinc2	equ	0xFDE
 45428                           postdec2	equ	0xFDD
 45429                           plusw2	equ	0xFDB
 45430                           fsr2h	equ	0xFDA
 45431                           fsr2l	equ	0xFD9
 45432                           status	equ	0xFD8
 45433                           
 45434 ;; *************** function _USBDeviceTasks *****************
 45435 ;; Defined at:
 45436 ;;		line 477 in file "usb_device.c"
 45437 ;; Parameters:    Size  Location     Type
 45438 ;;		None
 45439 ;; Auto vars:     Size  Location     Type
 45440 ;;  i               1   30[COMRAM] unsigned char 
 45441 ;; Return value:  Size  Location     Type
 45442 ;;                  1    wreg      void 
 45443 ;; Registers used:
 45444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45445 ;; Tracked objects:
 45446 ;;		On entry : 0/0
 45447 ;;		On exit  : 0/0
 45448 ;;		Unchanged: 0/0
 45449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45454 ;;Total ram usage:        1 bytes
 45455 ;; Hardware stack levels used:    1
 45456 ;; Hardware stack levels required when called:    8
 45457 ;; This function calls:
 45458 ;;		_USBCtrlEPAllowStatusStage
 45459 ;;		_USBCtrlEPService
 45460 ;;		_USBIncrement1msInternalTimers
 45461 ;;		_USBStallHandler
 45462 ;;		_USBSuspend
 45463 ;;		_USBWakeFromSuspend
 45464 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45465 ;;		i2_USBDeviceInit
 45466 ;; This function is called by:
 45467 ;;		_SYS_InterruptHigh
 45468 ;; This function uses a non-reentrant model
 45469 ;;
 45470                           
 45471                           	psect	text215
 45472  00EB08                     __ptext215:
 45473                           	opt stack 0
 45474  00EB08                     _USBDeviceTasks:
 45475                           	opt stack 9
 45476                           
 45477                           ;usb_device.c: 479: uint8_t i;
 45478                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 45479                           
 45480                           ;incstack = 0
 45481  00EB08  042B               	decf	_USBDeviceState,w,c	;volatile
 45482  00EB0A  B4D8               	btfsc	status,2,c
 45483                           
 45484                           ;usb_device.c: 591: {
 45485                           ;usb_device.c: 601: if(!UCONbits.SE0)
 45486  00EB0C  BA65               	btfsc	3941,5,c	;volatile
 45487  00EB0E  D008               	goto	i2l22069
 45488                           
 45489                           ;usb_device.c: 602: {
 45490                           ;usb_device.c: 608: {UIR = 0;};
 45491  00EB10  0E00               	movlw	0
 45492  00EB12  6E62               	movwf	3938,c	;volatile
 45493                           
 45494                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 45495  00EB14  010F               	movlb	15	; () banked
 45496  00EB16  8136               	bsf	54,0,b	;volatile
 45497                           
 45498                           ; BSR set to: 15
 45499                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 45500  00EB18  010F               	movlb	15	; () banked
 45501  00EB1A  8936               	bsf	54,4,b	;volatile
 45502                           
 45503                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 45504  00EB1C  0E02               	movlw	2
 45505  00EB1E  6E2B               	movwf	_USBDeviceState,c	;volatile
 45506  00EB20                     i2l22069:
 45507                           
 45508                           ;usb_device.c: 617: }
 45509                           ;usb_device.c: 618: }
 45510                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 45511  00EB20  A462               	btfss	3938,2,c	;volatile
 45512  00EB22  D006               	goto	i2l22077
 45513  00EB24  010F               	movlb	15	; () banked
 45514  00EB26  A536               	btfss	54,2,b	;volatile
 45515  00EB28  D003               	goto	i2l22077
 45516                           
 45517                           ; BSR set to: 15
 45518                           ;usb_device.c: 635: {
 45519                           ;usb_device.c: 636: (UIR &= 0xFB);
 45520  00EB2A  9462               	bcf	3938,2,c	;volatile
 45521                           
 45522                           ; BSR set to: 15
 45523                           ;usb_device.c: 640: USBWakeFromSuspend();
 45524  00EB2C  EC77  F09C         	call	_USBWakeFromSuspend	;wreg free
 45525  00EB30                     i2l22077:
 45526                           
 45527                           ;usb_device.c: 642: }
 45528                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 45529  00EB30  A265               	btfss	3941,1,c	;volatile
 45530  00EB32  D002               	goto	i2l159
 45531                           
 45532                           ;usb_device.c: 648: {
 45533                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 45534  00EB34  98A1               	bcf	4001,4,c	;volatile
 45535                           
 45536                           ;usb_device.c: 650: return;
 45537  00EB36  0012               	return	
 45538  00EB38                     i2l159:
 45539                           
 45540                           ;usb_device.c: 651: }
 45541                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 45542  00EB38  A062               	btfss	3938,0,c	;volatile
 45543  00EB3A  D009               	goto	i2l22091
 45544  00EB3C  010F               	movlb	15	; () banked
 45545  00EB3E  A136               	btfss	54,0,b	;volatile
 45546  00EB40  D006               	goto	i2l22091
 45547                           
 45548                           ; BSR set to: 15
 45549                           ;usb_device.c: 664: {
 45550                           ;usb_device.c: 665: USBDeviceInit();
 45551  00EB42  EC92  F073         	call	i2_USBDeviceInit	;wreg free
 45552                           
 45553                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 45554  00EB46  88A0               	bsf	4000,4,c	;volatile
 45555                           
 45556                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 45557  00EB48  0E04               	movlw	4
 45558  00EB4A  6E2B               	movwf	_USBDeviceState,c	;volatile
 45559                           
 45560                           ;usb_device.c: 681: (UIR &= 0xFE);
 45561  00EB4C  9062               	bcf	3938,0,c	;volatile
 45562  00EB4E                     i2l22091:
 45563                           
 45564                           ;usb_device.c: 682: }
 45565                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 45566  00EB4E  A862               	btfss	3938,4,c	;volatile
 45567  00EB50  D004               	goto	i2l22097
 45568  00EB52  010F               	movlb	15	; () banked
 45569  00EB54  B936               	btfsc	54,4,b	;volatile
 45570                           
 45571                           ; BSR set to: 15
 45572                           ;usb_device.c: 688: {
 45573                           ;usb_device.c: 694: USBSuspend();
 45574  00EB56  EC47  F09D         	call	_USBSuspend	;wreg free
 45575  00EB5A                     i2l22097:
 45576                           
 45577                           ;usb_device.c: 696: }
 45578                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 45579  00EB5A  AC62               	btfss	3938,6,c	;volatile
 45580  00EB5C  D01B               	goto	i2l22115
 45581                           
 45582                           ;usb_device.c: 709: {
 45583                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 45584  00EB5E  010F               	movlb	15	; () banked
 45585  00EB60  AD36               	btfss	54,6,b	;volatile
 45586  00EB62  D00E               	goto	i2l22103
 45587                           
 45588                           ; BSR set to: 15
 45589                           ;usb_device.c: 712: {
 45590                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 45591  00EB64  0E00               	movlw	0
 45592  00EB66  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45593  00EB68  0E73               	movlw	115
 45594  00EB6A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45595  00EB6C  0E00               	movlw	0
 45596  00EB6E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45597  00EB70  0E00               	movlw	0
 45598  00EB72  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45599  00EB74  0E00               	movlw	0
 45600  00EB76  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45601  00EB78  0E01               	movlw	1
 45602  00EB7A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45603  00EB7C  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45604  00EB80                     i2l22103:
 45605                           
 45606                           ;usb_device.c: 714: }
 45607                           ;usb_device.c: 715: (UIR &= 0xBF);
 45608  00EB80  9C62               	bcf	3938,6,c	;volatile
 45609                           
 45610                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 45611  00EB82  EC72  F09F         	call	_USBIncrement1msInternalTimers	;wreg free
 45612                           
 45613                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 45614  00EB86  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 45615  00EB88  A4D8               	btfss	status,2,c
 45616                           
 45617                           ;usb_device.c: 736: {
 45618                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 45619  00EB8A  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 45620                           
 45621                           ;usb_device.c: 738: }
 45622                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 45623  00EB8C  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 45624  00EB8E  B4D8               	btfsc	status,2,c
 45625                           
 45626                           ;usb_device.c: 745: {
 45627                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 45628  00EB90  EC3B  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 45629  00EB94                     i2l22115:
 45630                           
 45631                           ;usb_device.c: 747: }
 45632                           ;usb_device.c: 749: }
 45633                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 45634  00EB94  AA62               	btfss	3938,5,c	;volatile
 45635  00EB96  D004               	goto	i2l22121
 45636  00EB98  010F               	movlb	15	; () banked
 45637  00EB9A  BB36               	btfsc	54,5,b	;volatile
 45638                           
 45639                           ; BSR set to: 15
 45640                           ;usb_device.c: 752: {
 45641                           ;usb_device.c: 753: USBStallHandler();
 45642  00EB9C  ECED  F09A         	call	_USBStallHandler	;wreg free
 45643  00EBA0                     i2l22121:
 45644                           
 45645                           ;usb_device.c: 754: }
 45646                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 45647  00EBA0  A262               	btfss	3938,1,c	;volatile
 45648  00EBA2  D012               	goto	i2l22129
 45649  00EBA4  010F               	movlb	15	; () banked
 45650  00EBA6  A336               	btfss	54,1,b	;volatile
 45651  00EBA8  D00F               	goto	i2l22129
 45652                           
 45653                           ; BSR set to: 15
 45654                           ;usb_device.c: 757: {
 45655                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 45656  00EBAA  0E7F               	movlw	127
 45657  00EBAC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45658  00EBAE  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45659  00EBB0  0E00               	movlw	0
 45660  00EBB2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45661  00EBB4  0E00               	movlw	0
 45662  00EBB6  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45663  00EBB8  0E00               	movlw	0
 45664  00EBBA  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45665  00EBBC  0E01               	movlw	1
 45666  00EBBE  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45667  00EBC0  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45668                           
 45669                           ;usb_device.c: 759: {UEIR = 0;};
 45670  00EBC4  0E00               	movlw	0
 45671  00EBC6  6E63               	movwf	3939,c	;volatile
 45672  00EBC8                     i2l22129:
 45673                           
 45674                           ;usb_device.c: 767: }
 45675                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 45676  00EBC8  0E04               	movlw	4
 45677  00EBCA  602B               	cpfslt	_USBDeviceState,c	;volatile
 45678  00EBCC  D002               	goto	i2l169
 45679                           
 45680                           ;usb_device.c: 775: {
 45681                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 45682  00EBCE  98A1               	bcf	4001,4,c	;volatile
 45683                           
 45684                           ;usb_device.c: 777: return;
 45685  00EBD0  0012               	return	
 45686  00EBD2                     i2l169:
 45687                           
 45688                           ;usb_device.c: 778: }
 45689                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 45690  00EBD2  010F               	movlb	15	; () banked
 45691  00EBD4  A736               	btfss	54,3,b	;volatile
 45692  00EBD6  D039               	goto	i2l170
 45693                           
 45694                           ; BSR set to: 15
 45695                           ;usb_device.c: 784: {
 45696                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 45697  00EBD8  0E00               	movlw	0
 45698  00EBDA  6E4C               	movwf	USBDeviceTasks@i,c
 45699  00EBDC                     i2l22135:
 45700                           
 45701                           ; BSR set to: 15
 45702  00EBDC  0E03               	movlw	3
 45703  00EBDE  644C               	cpfsgt	USBDeviceTasks@i,c
 45704  00EBE0  D001               	goto	i2l171
 45705  00EBE2  D033               	goto	i2l170
 45706  00EBE4                     i2l171:
 45707                           
 45708                           ;usb_device.c: 786: {
 45709                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 45710  00EBE4  A662               	btfss	3938,3,c	;volatile
 45711  00EBE6  D031               	goto	i2l170
 45712                           
 45713                           ;usb_device.c: 788: {
 45714                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 45715  00EBE8  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 45716                           
 45717                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 45718  00EBEC  302C               	rrcf	_USTATcopy,w,c	;volatile
 45719  00EBEE  32E8               	rrcf	wreg,f,c
 45720  00EBF0  32E8               	rrcf	wreg,f,c
 45721  00EBF2  0B0F               	andlw	15
 45722  00EBF4  6E26               	movwf	_endpoint_number,c	;volatile
 45723                           
 45724                           ;usb_device.c: 793: (UIR &= 0xF7);
 45725  00EBF6  9662               	bcf	3938,3,c	;volatile
 45726                           
 45727                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 45728  00EBF8  B42C               	btfsc	_USTATcopy,2,c	;volatile
 45729  00EBFA  D007               	goto	i2l22149
 45730                           
 45731                           ;usb_device.c: 799: {
 45732                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 45733  00EBFC  5026               	movf	_endpoint_number,w,c	;volatile
 45734  00EBFE  0D01               	mullw	1
 45735  00EC00  0EE1               	movlw	low _ep_data_out
 45736  00EC02  24F3               	addwf	prodl,w,c
 45737  00EC04  6ED9               	movwf	fsr2l,c
 45738  00EC06  0E01               	movlw	high _ep_data_out
 45739  00EC08  D006               	goto	L55
 45740  00EC0A                     i2l22149:
 45741                           
 45742                           ;usb_device.c: 802: else
 45743                           ;usb_device.c: 803: {
 45744                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 45745  00EC0A  5026               	movf	_endpoint_number,w,c	;volatile
 45746  00EC0C  0D01               	mullw	1
 45747  00EC0E  0EE4               	movlw	low _ep_data_in
 45748  00EC10  24F3               	addwf	prodl,w,c
 45749  00EC12  6ED9               	movwf	fsr2l,c
 45750  00EC14  0E01               	movlw	high _ep_data_in
 45751  00EC16                     L55:
 45752  00EC16  20F4               	addwfc	prodh,w,c
 45753  00EC18  6EDA               	movwf	fsr2h,c
 45754  00EC1A  0101               	movlb	1	; () banked
 45755  00EC1C  70DF               	btg	indf2,0,c
 45756                           
 45757                           ; BSR set to: 1
 45758                           ;usb_device.c: 805: }
 45759                           ;usb_device.c: 810: if(endpoint_number == 0)
 45760                           
 45761                           ; BSR set to: 1
 45762  00EC1E  5026               	movf	_endpoint_number,w,c	;volatile
 45763  00EC20  A4D8               	btfss	status,2,c
 45764  00EC22  D003               	goto	i2l22155
 45765                           
 45766                           ; BSR set to: 1
 45767                           ;usb_device.c: 811: {
 45768                           ;usb_device.c: 812: USBCtrlEPService();
 45769  00EC24  EC05  F08D         	call	_USBCtrlEPService	;wreg free
 45770                           
 45771                           ;usb_device.c: 813: }
 45772  00EC28  D00E               	goto	i2l22157
 45773  00EC2A                     i2l22155:
 45774                           
 45775                           ;usb_device.c: 814: else
 45776                           ;usb_device.c: 815: {
 45777                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 45778  00EC2A  0E00               	movlw	0
 45779  00EC2C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45780  00EC2E  0E72               	movlw	114
 45781  00EC30  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45782  00EC32  0E2C               	movlw	low _USTATcopy
 45783  00EC34  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45784  00EC36  0E00               	movlw	high _USTATcopy
 45785  00EC38  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45786  00EC3A  0E00               	movlw	0
 45787  00EC3C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45788  00EC3E  0E00               	movlw	0
 45789  00EC40  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45790  00EC42  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45791  00EC46                     i2l22157:
 45792  00EC46  2A4C               	incf	USBDeviceTasks@i,f,c
 45793  00EC48  D7C9               	goto	i2l22135
 45794  00EC4A                     i2l170:
 45795                           
 45796                           ;usb_device.c: 822: }
 45797                           ;usb_device.c: 823: }
 45798                           ;usb_device.c: 824: }
 45799                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 45800  00EC4A  98A1               	bcf	4001,4,c	;volatile
 45801  00EC4C  0012               	return		;funcret
 45802  00EC4E                     __end_of_USBDeviceTasks:
 45803                           	opt stack 0
 45804                           tosu	equ	0xFFF
 45805                           tosh	equ	0xFFE
 45806                           tosl	equ	0xFFD
 45807                           pclatu	equ	0xFFB
 45808                           pclath	equ	0xFFA
 45809                           tblptru	equ	0xFF8
 45810                           tblptrh	equ	0xFF7
 45811                           tblptrl	equ	0xFF6
 45812                           tablat	equ	0xFF5
 45813                           prodh	equ	0xFF4
 45814                           prodl	equ	0xFF3
 45815                           intcon	equ	0xFF2
 45816                           intcon2	equ	0xFF1
 45817                           intcon3	equ	0xFF0
 45818                           indf0	equ	0xFEF
 45819                           postinc0	equ	0xFEE
 45820                           fsr0h	equ	0xFEA
 45821                           fsr0l	equ	0xFE9
 45822                           wreg	equ	0xFE8
 45823                           indf1	equ	0xFE7
 45824                           postinc1	equ	0xFE6
 45825                           postdec1	equ	0xFE5
 45826                           plusw1	equ	0xFE3
 45827                           fsr1h	equ	0xFE2
 45828                           fsr1l	equ	0xFE1
 45829                           indf2	equ	0xFDF
 45830                           postinc2	equ	0xFDE
 45831                           postdec2	equ	0xFDD
 45832                           plusw2	equ	0xFDB
 45833                           fsr2h	equ	0xFDA
 45834                           fsr2l	equ	0xFD9
 45835                           status	equ	0xFD8
 45836                           
 45837 ;; *************** function i2_USBDeviceInit *****************
 45838 ;; Defined at:
 45839 ;;		line 277 in file "usb_device.c"
 45840 ;; Parameters:    Size  Location     Type
 45841 ;;		None
 45842 ;; Auto vars:     Size  Location     Type
 45843 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 45844 ;; Return value:  Size  Location     Type
 45845 ;;                  1    wreg      void 
 45846 ;; Registers used:
 45847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45848 ;; Tracked objects:
 45849 ;;		On entry : 0/0
 45850 ;;		On exit  : 0/0
 45851 ;;		Unchanged: 0/0
 45852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45857 ;;Total ram usage:        1 bytes
 45858 ;; Hardware stack levels used:    1
 45859 ;; Hardware stack levels required when called:    1
 45860 ;; This function calls:
 45861 ;;		i2_memset
 45862 ;; This function is called by:
 45863 ;;		_USBDeviceTasks
 45864 ;; This function uses a non-reentrant model
 45865 ;;
 45866                           
 45867                           	psect	text216
 45868  00E724                     __ptext216:
 45869                           	opt stack 0
 45870  00E724                     i2_USBDeviceInit:
 45871                           	opt stack 15
 45872                           
 45873                           ;usb_device.c: 279: uint8_t i;
 45874                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 45875                           
 45876                           ;incstack = 0
 45877  00E724  98A0               	bcf	4000,4,c	;volatile
 45878                           
 45879                           ;usb_device.c: 285: ;
 45880                           ;usb_device.c: 288: {UEIR = 0;};
 45881  00E726  0E00               	movlw	0
 45882  00E728  6E63               	movwf	3939,c	;volatile
 45883                           
 45884                           ;usb_device.c: 291: {UIR = 0;};
 45885  00E72A  0E00               	movlw	0
 45886  00E72C  6E62               	movwf	3938,c	;volatile
 45887                           
 45888                           ;usb_device.c: 294: UEP0 = 0;
 45889  00E72E  0E00               	movlw	0
 45890  00E730  010F               	movlb	15	; () banked
 45891  00E732  6F26               	movwf	38,b	;volatile
 45892                           
 45893                           ; BSR set to: 15
 45894                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 45895  00E734  0E27               	movlw	39
 45896  00E736  6E2E               	movwf	i2memset@p1,c
 45897  00E738  0E0F               	movlw	15
 45898  00E73A  6E2F               	movwf	i2memset@p1+1,c
 45899  00E73C  0E00               	movlw	0
 45900  00E73E  6E31               	movwf	i2memset@c+1,c
 45901  00E740  0E00               	movlw	0
 45902  00E742  6E30               	movwf	i2memset@c,c
 45903  00E744  0E00               	movlw	0
 45904  00E746  6E33               	movwf	i2memset@n+1,c
 45905  00E748  0E02               	movlw	2
 45906  00E74A  6E32               	movwf	i2memset@n,c
 45907  00E74C  EC12  F09E         	call	i2_memset	;wreg free
 45908                           
 45909                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 45910  00E750  0E16               	movlw	22
 45911  00E752  010F               	movlb	15	; () banked
 45912  00E754  6F39               	movwf	57,b	;volatile
 45913                           
 45914                           ; BSR set to: 15
 45915  00E756  0E9F               	movlw	159
 45916  00E758  010F               	movlb	15	; () banked
 45917  00E75A  6F37               	movwf	55,b	;volatile
 45918                           
 45919                           ; BSR set to: 15
 45920  00E75C  0E7B               	movlw	123
 45921  00E75E  010F               	movlb	15	; () banked
 45922  00E760  6F36               	movwf	54,b	;volatile
 45923                           
 45924                           ; BSR set to: 15
 45925                           ;usb_device.c: 301: ;
 45926                           ;usb_device.c: 304: ;
 45927                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 45928  00E762  0E00               	movlw	0
 45929  00E764  6E36               	movwf	i2USBDeviceInit@i,c
 45930  00E766                     i2l16057:
 45931                           
 45932                           ; BSR set to: 15
 45933  00E766  0E0B               	movlw	11
 45934  00E768  6436               	cpfsgt	i2USBDeviceInit@i,c
 45935  00E76A  D001               	goto	i2l16061
 45936  00E76C  D00E               	goto	i2l148
 45937  00E76E                     i2l16061:
 45938                           
 45939                           ;usb_device.c: 308: {
 45940                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 45941  00E76E  5036               	movf	i2USBDeviceInit@i,w,c
 45942  00E770  0D04               	mullw	4
 45943  00E772  0E00               	movlw	0
 45944  00E774  24F3               	addwf	prodl,w,c
 45945  00E776  6ED9               	movwf	fsr2l,c
 45946  00E778  0E0D               	movlw	13
 45947  00E77A  20F4               	addwfc	prodh,w,c
 45948  00E77C  6EDA               	movwf	fsr2h,c
 45949  00E77E  6ADE               	clrf	postinc2,c
 45950  00E780  6ADE               	clrf	postinc2,c
 45951  00E782  6ADE               	clrf	postinc2,c
 45952  00E784  6ADD               	clrf	postdec2,c
 45953  00E786  2A36               	incf	i2USBDeviceInit@i,f,c
 45954  00E788  D7EE               	goto	i2l16057
 45955  00E78A                     i2l148:
 45956                           
 45957                           ;usb_device.c: 310: }
 45958                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 45959  00E78A  8C65               	bsf	3941,6,c	;volatile
 45960                           
 45961                           ;usb_device.c: 316: UADDR = 0x00;
 45962  00E78C  0E00               	movlw	0
 45963  00E78E  010F               	movlb	15	; () banked
 45964  00E790  6F38               	movwf	56,b	;volatile
 45965                           
 45966                           ; BSR set to: 15
 45967                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 45968  00E792  9865               	bcf	3941,4,c	;volatile
 45969                           
 45970                           ; BSR set to: 15
 45971                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 45972  00E794  9C65               	bcf	3941,6,c	;volatile
 45973  00E796                     i2l16073:
 45974                           
 45975                           ;usb_device.c: 326: {
 45976                           ;usb_device.c: 327: (UIR &= 0xF7);
 45977  00E796  9662               	bcf	3938,3,c	;volatile
 45978                           
 45979                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 45980  00E798  0E00               	movlw	0
 45981  00E79A  6E0D               	movwf	_inPipes+3,c	;volatile
 45982                           
 45983                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 45984  00E79C  0E00               	movlw	0
 45985  00E79E  6E04               	movwf	_outPipes+3,c	;volatile
 45986                           
 45987                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 45988  00E7A0  0E00               	movlw	0
 45989  00E7A2  6E06               	movwf	_outPipes+5,c	;volatile
 45990  00E7A4  0E00               	movlw	0
 45991  00E7A6  6E05               	movwf	_outPipes+4,c	;volatile
 45992                           
 45993                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 45994  00E7A8  B662               	btfsc	3938,3,c	;volatile
 45995  00E7AA  D7F5               	goto	i2l16073
 45996                           
 45997                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 45998  00E7AC  0E01               	movlw	1
 45999  00E7AE  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 46000                           
 46001                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 46002  00E7B0  0E01               	movlw	1
 46003  00E7B2  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 46004                           
 46005                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 46006  00E7B4  0E00               	movlw	0
 46007  00E7B6  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 46008                           
 46009                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 46010  00E7B8  0E00               	movlw	0
 46011  00E7BA  0101               	movlb	1	; () banked
 46012  00E7BC  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 46013                           
 46014                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 46015  00E7BE  0E00               	movlw	0
 46016  00E7C0  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 46017                           
 46018                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 46019  00E7C2  0E00               	movlw	0
 46020  00E7C4  6E36               	movwf	i2USBDeviceInit@i,c
 46021  00E7C6                     i2l16085:
 46022                           
 46023                           ; BSR set to: 1
 46024  00E7C6  0E02               	movlw	2
 46025  00E7C8  6436               	cpfsgt	i2USBDeviceInit@i,c
 46026  00E7CA  D001               	goto	i2l16089
 46027  00E7CC  D02E               	goto	i2l16095
 46028  00E7CE                     i2l16089:
 46029                           
 46030                           ;usb_device.c: 346: {
 46031                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 46032  00E7CE  5036               	movf	i2USBDeviceInit@i,w,c
 46033  00E7D0  0D02               	mullw	2
 46034  00E7D2  0E10               	movlw	low _pBDTEntryIn
 46035  00E7D4  24F3               	addwf	prodl,w,c
 46036  00E7D6  6ED9               	movwf	fsr2l,c
 46037  00E7D8  0E00               	movlw	high _pBDTEntryIn
 46038  00E7DA  20F4               	addwfc	prodh,w,c
 46039  00E7DC  6EDA               	movwf	fsr2h,c
 46040  00E7DE  0E00               	movlw	0
 46041  00E7E0  6EDE               	movwf	postinc2,c
 46042  00E7E2  0E00               	movlw	0
 46043  00E7E4  6EDD               	movwf	postdec2,c
 46044                           
 46045                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 46046  00E7E6  5036               	movf	i2USBDeviceInit@i,w,c
 46047  00E7E8  0D02               	mullw	2
 46048  00E7EA  0ED3               	movlw	low _pBDTEntryOut
 46049  00E7EC  24F3               	addwf	prodl,w,c
 46050  00E7EE  6ED9               	movwf	fsr2l,c
 46051  00E7F0  0E01               	movlw	high _pBDTEntryOut
 46052  00E7F2  20F4               	addwfc	prodh,w,c
 46053  00E7F4  6EDA               	movwf	fsr2h,c
 46054  00E7F6  0E00               	movlw	0
 46055  00E7F8  6EDE               	movwf	postinc2,c
 46056  00E7FA  0E00               	movlw	0
 46057  00E7FC  6EDD               	movwf	postdec2,c
 46058                           
 46059                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 46060  00E7FE  5036               	movf	i2USBDeviceInit@i,w,c
 46061  00E800  0D01               	mullw	1
 46062  00E802  0EE4               	movlw	low _ep_data_in
 46063  00E804  24F3               	addwf	prodl,w,c
 46064  00E806  6ED9               	movwf	fsr2l,c
 46065  00E808  0E01               	movlw	high _ep_data_in
 46066  00E80A  20F4               	addwfc	prodh,w,c
 46067  00E80C  6EDA               	movwf	fsr2h,c
 46068  00E80E  0E00               	movlw	0
 46069  00E810  6EDF               	movwf	indf2,c
 46070                           
 46071                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 46072  00E812  5036               	movf	i2USBDeviceInit@i,w,c
 46073  00E814  0D01               	mullw	1
 46074  00E816  0EE1               	movlw	low _ep_data_out
 46075  00E818  24F3               	addwf	prodl,w,c
 46076  00E81A  6ED9               	movwf	fsr2l,c
 46077  00E81C  0E01               	movlw	high _ep_data_out
 46078  00E81E  20F4               	addwfc	prodh,w,c
 46079  00E820  6EDA               	movwf	fsr2h,c
 46080  00E822  0E00               	movlw	0
 46081  00E824  6EDF               	movwf	indf2,c
 46082  00E826  2A36               	incf	i2USBDeviceInit@i,f,c
 46083  00E828  D7CE               	goto	i2l16085
 46084  00E82A                     i2l16095:
 46085                           
 46086                           ;usb_device.c: 351: }
 46087                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 46088  00E82A  0E08               	movlw	8
 46089  00E82C  6E10               	movwf	_pBDTEntryIn,c
 46090  00E82E  0E0D               	movlw	13
 46091  00E830  6E11               	movwf	_pBDTEntryIn+1,c
 46092                           
 46093                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 46094  00E832  0E16               	movlw	22
 46095  00E834  010F               	movlb	15	; () banked
 46096  00E836  6F26               	movwf	38,b	;volatile
 46097                           
 46098                           ; BSR set to: 15
 46099                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 46100  00E838  0E0D               	movlw	13
 46101  00E83A  010D               	movlb	13	; () banked
 46102  00E83C  6F03               	movwf	3,b	;volatile
 46103  00E83E  0E30               	movlw	48
 46104  00E840  6F02               	movwf	2,b	;volatile
 46105                           
 46106                           ; BSR set to: 13
 46107                           ;usb_device.c: 359: BDT[0].CNT = 8;
 46108  00E842  0E08               	movlw	8
 46109  00E844  010D               	movlb	13	; () banked
 46110  00E846  6F01               	movwf	1,b	;volatile
 46111                           
 46112                           ; BSR set to: 13
 46113                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 46114  00E848  0E04               	movlw	4
 46115  00E84A  010D               	movlb	13	; () banked
 46116  00E84C  6F00               	movwf	0,b	;volatile
 46117                           
 46118                           ; BSR set to: 13
 46119                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 46120  00E84E  010D               	movlb	13	; () banked
 46121  00E850  8F00               	bsf	0,7,b	;volatile
 46122                           
 46123                           ; BSR set to: 13
 46124                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 46125  00E852  0E00               	movlw	0
 46126  00E854  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 46127                           
 46128                           ; BSR set to: 13
 46129                           ;usb_device.c: 366: USB1msTickCount = 0;
 46130  00E856  0E00               	movlw	0
 46131  00E858  0101               	movlb	1	; () banked
 46132  00E85A  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 46133  00E85C  0E00               	movlw	0
 46134  00E85E  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 46135  00E860  0E00               	movlw	0
 46136  00E862  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 46137  00E864  0E00               	movlw	0
 46138  00E866  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 46139                           
 46140                           ; BSR set to: 1
 46141                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 46142  00E868  0E00               	movlw	0
 46143  00E86A  0101               	movlb	1	; () banked
 46144  00E86C  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46145                           
 46146                           ; BSR set to: 1
 46147                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 46148  00E86E  0E00               	movlw	0
 46149  00E870  6E2B               	movwf	_USBDeviceState,c	;volatile
 46150                           
 46151                           ; BSR set to: 1
 46152  00E872  0012               	return		;funcret
 46153  00E874                     __end_ofi2_USBDeviceInit:
 46154                           	opt stack 0
 46155                           tosu	equ	0xFFF
 46156                           tosh	equ	0xFFE
 46157                           tosl	equ	0xFFD
 46158                           pclatu	equ	0xFFB
 46159                           pclath	equ	0xFFA
 46160                           tblptru	equ	0xFF8
 46161                           tblptrh	equ	0xFF7
 46162                           tblptrl	equ	0xFF6
 46163                           tablat	equ	0xFF5
 46164                           prodh	equ	0xFF4
 46165                           prodl	equ	0xFF3
 46166                           intcon	equ	0xFF2
 46167                           intcon2	equ	0xFF1
 46168                           intcon3	equ	0xFF0
 46169                           indf0	equ	0xFEF
 46170                           postinc0	equ	0xFEE
 46171                           fsr0h	equ	0xFEA
 46172                           fsr0l	equ	0xFE9
 46173                           wreg	equ	0xFE8
 46174                           indf1	equ	0xFE7
 46175                           postinc1	equ	0xFE6
 46176                           postdec1	equ	0xFE5
 46177                           plusw1	equ	0xFE3
 46178                           fsr1h	equ	0xFE2
 46179                           fsr1l	equ	0xFE1
 46180                           indf2	equ	0xFDF
 46181                           postinc2	equ	0xFDE
 46182                           postdec2	equ	0xFDD
 46183                           plusw2	equ	0xFDB
 46184                           fsr2h	equ	0xFDA
 46185                           fsr2l	equ	0xFD9
 46186                           status	equ	0xFD8
 46187                           
 46188 ;; *************** function _USBWakeFromSuspend *****************
 46189 ;; Defined at:
 46190 ;;		line 2305 in file "usb_device.c"
 46191 ;; Parameters:    Size  Location     Type
 46192 ;;		None
 46193 ;; Auto vars:     Size  Location     Type
 46194 ;;		None
 46195 ;; Return value:  Size  Location     Type
 46196 ;;                  1    wreg      void 
 46197 ;; Registers used:
 46198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46199 ;; Tracked objects:
 46200 ;;		On entry : 0/0
 46201 ;;		On exit  : 0/0
 46202 ;;		Unchanged: 0/0
 46203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46208 ;;Total ram usage:        0 bytes
 46209 ;; Hardware stack levels used:    1
 46210 ;; Hardware stack levels required when called:    4
 46211 ;; This function calls:
 46212 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46213 ;; This function is called by:
 46214 ;;		_USBDeviceTasks
 46215 ;; This function uses a non-reentrant model
 46216 ;;
 46217                           
 46218                           	psect	text217
 46219  0138EE                     __ptext217:
 46220                           	opt stack 0
 46221  0138EE                     _USBWakeFromSuspend:
 46222                           	opt stack 12
 46223                           
 46224                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 46225                           
 46226                           ; BSR set to: 1
 46227                           ;incstack = 0
 46228  0138EE  0E00               	movlw	0
 46229  0138F0  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 46230                           
 46231                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 46232  0138F2  0E00               	movlw	0
 46233  0138F4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46234  0138F6  0E74               	movlw	116
 46235  0138F8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46236  0138FA  0E00               	movlw	0
 46237  0138FC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 46238  0138FE  0E00               	movlw	0
 46239  013900  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 46240  013902  0E00               	movlw	0
 46241  013904  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46242  013906  0E00               	movlw	0
 46243  013908  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46244  01390A  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46245                           
 46246                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 46247  01390E  9265               	bcf	3941,1,c	;volatile
 46248                           
 46249                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 46250  013910  010F               	movlb	15	; () banked
 46251  013912  9536               	bcf	54,2,b	;volatile
 46252                           
 46253                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 46254  013914  D001               	goto	i2l20297
 46255  013916                     i2l20295:
 46256                           
 46257                           ;usb_device.c: 2345: {
 46258                           ;usb_device.c: 2346: (UIR &= 0xFB);
 46259  013916  9462               	bcf	3938,2,c	;volatile
 46260  013918                     i2l20297:
 46261  013918  B462               	btfsc	3938,2,c	;volatile
 46262  01391A  D7FD               	goto	i2l20295
 46263                           
 46264                           ;usb_device.c: 2347: }
 46265                           ;usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 46266  01391C  0E00               	movlw	0
 46267  01391E  0101               	movlb	1	; () banked
 46268  013920  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46269                           
 46270                           ; BSR set to: 1
 46271  013922  0012               	return		;funcret
 46272  013924                     __end_of_USBWakeFromSuspend:
 46273                           	opt stack 0
 46274                           tosu	equ	0xFFF
 46275                           tosh	equ	0xFFE
 46276                           tosl	equ	0xFFD
 46277                           pclatu	equ	0xFFB
 46278                           pclath	equ	0xFFA
 46279                           tblptru	equ	0xFF8
 46280                           tblptrh	equ	0xFF7
 46281                           tblptrl	equ	0xFF6
 46282                           tablat	equ	0xFF5
 46283                           prodh	equ	0xFF4
 46284                           prodl	equ	0xFF3
 46285                           intcon	equ	0xFF2
 46286                           intcon2	equ	0xFF1
 46287                           intcon3	equ	0xFF0
 46288                           indf0	equ	0xFEF
 46289                           postinc0	equ	0xFEE
 46290                           fsr0h	equ	0xFEA
 46291                           fsr0l	equ	0xFE9
 46292                           wreg	equ	0xFE8
 46293                           indf1	equ	0xFE7
 46294                           postinc1	equ	0xFE6
 46295                           postdec1	equ	0xFE5
 46296                           plusw1	equ	0xFE3
 46297                           fsr1h	equ	0xFE2
 46298                           fsr1l	equ	0xFE1
 46299                           indf2	equ	0xFDF
 46300                           postinc2	equ	0xFDE
 46301                           postdec2	equ	0xFDD
 46302                           plusw2	equ	0xFDB
 46303                           fsr2h	equ	0xFDA
 46304                           fsr2l	equ	0xFD9
 46305                           status	equ	0xFD8
 46306                           
 46307 ;; *************** function _USBSuspend *****************
 46308 ;; Defined at:
 46309 ;;		line 2247 in file "usb_device.c"
 46310 ;; Parameters:    Size  Location     Type
 46311 ;;		None
 46312 ;; Auto vars:     Size  Location     Type
 46313 ;;		None
 46314 ;; Return value:  Size  Location     Type
 46315 ;;                  1    wreg      void 
 46316 ;; Registers used:
 46317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46318 ;; Tracked objects:
 46319 ;;		On entry : 0/0
 46320 ;;		On exit  : 0/0
 46321 ;;		Unchanged: 0/0
 46322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46327 ;;Total ram usage:        0 bytes
 46328 ;; Hardware stack levels used:    1
 46329 ;; Hardware stack levels required when called:    4
 46330 ;; This function calls:
 46331 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46332 ;; This function is called by:
 46333 ;;		_USBDeviceTasks
 46334 ;; This function uses a non-reentrant model
 46335 ;;
 46336                           
 46337                           	psect	text218
 46338  013A8E                     __ptext218:
 46339                           	opt stack 0
 46340  013A8E                     _USBSuspend:
 46341                           	opt stack 12
 46342                           
 46343                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 46344                           
 46345                           ; BSR set to: 1
 46346                           ;incstack = 0
 46347  013A8E  010F               	movlb	15	; () banked
 46348  013A90  8536               	bsf	54,2,b	;volatile
 46349                           
 46350                           ; BSR set to: 15
 46351                           ;usb_device.c: 2273: (UIR &= 0xEF);
 46352  013A92  9862               	bcf	3938,4,c	;volatile
 46353                           
 46354                           ; BSR set to: 15
 46355                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 46356  013A94  8265               	bsf	3941,1,c	;volatile
 46357                           
 46358                           ; BSR set to: 15
 46359                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 46360  013A96  0E01               	movlw	1
 46361  013A98  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 46362                           
 46363                           ; BSR set to: 15
 46364                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 46365  013A9A  0E00               	movlw	0
 46366  013A9C  0101               	movlb	1	; () banked
 46367  013A9E  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46368                           
 46369                           ; BSR set to: 1
 46370                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 46371  013AA0  0E00               	movlw	0
 46372  013AA2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46373  013AA4  0E75               	movlw	117
 46374  013AA6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46375  013AA8  0E00               	movlw	0
 46376  013AAA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 46377  013AAC  0E00               	movlw	0
 46378  013AAE  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 46379  013AB0  0E00               	movlw	0
 46380  013AB2  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46381  013AB4  0E00               	movlw	0
 46382  013AB6  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46383  013AB8  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46384  013ABC  0012               	return		;funcret
 46385  013ABE                     __end_of_USBSuspend:
 46386                           	opt stack 0
 46387                           tosu	equ	0xFFF
 46388                           tosh	equ	0xFFE
 46389                           tosl	equ	0xFFD
 46390                           pclatu	equ	0xFFB
 46391                           pclath	equ	0xFFA
 46392                           tblptru	equ	0xFF8
 46393                           tblptrh	equ	0xFF7
 46394                           tblptrl	equ	0xFF6
 46395                           tablat	equ	0xFF5
 46396                           prodh	equ	0xFF4
 46397                           prodl	equ	0xFF3
 46398                           intcon	equ	0xFF2
 46399                           intcon2	equ	0xFF1
 46400                           intcon3	equ	0xFF0
 46401                           indf0	equ	0xFEF
 46402                           postinc0	equ	0xFEE
 46403                           fsr0h	equ	0xFEA
 46404                           fsr0l	equ	0xFE9
 46405                           wreg	equ	0xFE8
 46406                           indf1	equ	0xFE7
 46407                           postinc1	equ	0xFE6
 46408                           postdec1	equ	0xFE5
 46409                           plusw1	equ	0xFE3
 46410                           fsr1h	equ	0xFE2
 46411                           fsr1l	equ	0xFE1
 46412                           indf2	equ	0xFDF
 46413                           postinc2	equ	0xFDE
 46414                           postdec2	equ	0xFDD
 46415                           plusw2	equ	0xFDB
 46416                           fsr2h	equ	0xFDA
 46417                           fsr2l	equ	0xFD9
 46418                           status	equ	0xFD8
 46419                           
 46420 ;; *************** function _USBStallHandler *****************
 46421 ;; Defined at:
 46422 ;;		line 2204 in file "usb_device.c"
 46423 ;; Parameters:    Size  Location     Type
 46424 ;;		None
 46425 ;; Auto vars:     Size  Location     Type
 46426 ;;		None
 46427 ;; Return value:  Size  Location     Type
 46428 ;;                  1    wreg      void 
 46429 ;; Registers used:
 46430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46431 ;; Tracked objects:
 46432 ;;		On entry : 0/0
 46433 ;;		On exit  : 0/0
 46434 ;;		Unchanged: 0/0
 46435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46440 ;;Total ram usage:        1 bytes
 46441 ;; Hardware stack levels used:    1
 46442 ;; This function calls:
 46443 ;;		Nothing
 46444 ;; This function is called by:
 46445 ;;		_USBDeviceTasks
 46446 ;; This function uses a non-reentrant model
 46447 ;;
 46448                           
 46449                           	psect	text219
 46450  0135DA                     __ptext219:
 46451                           	opt stack 0
 46452  0135DA                     _USBStallHandler:
 46453                           	opt stack 16
 46454                           
 46455                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 46456                           
 46457                           ;incstack = 0
 46458  0135DA  010F               	movlb	15	; () banked
 46459  0135DC  A126               	btfss	38,0,b	;volatile
 46460  0135DE  D01E               	goto	i2l309
 46461                           
 46462                           ; BSR set to: 15
 46463                           ;usb_device.c: 2217: {
 46464                           ;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 46465  0135E0  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46466  0135E4  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46467  0135E8  0E80               	movlw	128
 46468  0135EA  18DE               	xorwf	postinc2,w,c
 46469  0135EC  A4D8               	btfss	status,2,c
 46470  0135EE  D014               	goto	i2l14367
 46471                           
 46472                           ; BSR set to: 15
 46473  0135F0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 46474  0135F4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 46475  0135F8  0E84               	movlw	132
 46476  0135FA  18DE               	xorwf	postinc2,w,c
 46477  0135FC  A4D8               	btfss	status,2,c
 46478  0135FE  D00C               	goto	i2l14367
 46479                           
 46480                           ; BSR set to: 15
 46481                           ;usb_device.c: 2220: {
 46482                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 46483  013600  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46484  013604  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46485  013608  0E0C               	movlw	12
 46486  01360A  6EDF               	movwf	indf2,c
 46487                           
 46488                           ; BSR set to: 15
 46489                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 46490  01360C  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46491  013610  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46492  013614  0E00               	movlw	0
 46493  013616  8EDB               	bsf	plusw2,7,c
 46494  013618                     i2l14367:
 46495                           
 46496                           ; BSR set to: 15
 46497                           ;usb_device.c: 2224: }
 46498                           ;usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 46499  013618  010F               	movlb	15	; () banked
 46500  01361A  9126               	bcf	38,0,b	;volatile
 46501  01361C                     i2l309:
 46502                           
 46503                           ; BSR set to: 15
 46504                           ;usb_device.c: 2226: }
 46505                           ;usb_device.c: 2228: (UIR &= 0xDF);
 46506  01361C  9A62               	bcf	3938,5,c	;volatile
 46507                           
 46508                           ; BSR set to: 15
 46509  01361E  0012               	return		;funcret
 46510  013620                     __end_of_USBStallHandler:
 46511                           	opt stack 0
 46512                           tosu	equ	0xFFF
 46513                           tosh	equ	0xFFE
 46514                           tosl	equ	0xFFD
 46515                           pclatu	equ	0xFFB
 46516                           pclath	equ	0xFFA
 46517                           tblptru	equ	0xFF8
 46518                           tblptrh	equ	0xFF7
 46519                           tblptrl	equ	0xFF6
 46520                           tablat	equ	0xFF5
 46521                           prodh	equ	0xFF4
 46522                           prodl	equ	0xFF3
 46523                           intcon	equ	0xFF2
 46524                           intcon2	equ	0xFF1
 46525                           intcon3	equ	0xFF0
 46526                           indf0	equ	0xFEF
 46527                           postinc0	equ	0xFEE
 46528                           fsr0h	equ	0xFEA
 46529                           fsr0l	equ	0xFE9
 46530                           wreg	equ	0xFE8
 46531                           indf1	equ	0xFE7
 46532                           postinc1	equ	0xFE6
 46533                           postdec1	equ	0xFE5
 46534                           plusw1	equ	0xFE3
 46535                           fsr1h	equ	0xFE2
 46536                           fsr1l	equ	0xFE1
 46537                           indf2	equ	0xFDF
 46538                           postinc2	equ	0xFDE
 46539                           postdec2	equ	0xFDD
 46540                           plusw2	equ	0xFDB
 46541                           fsr2h	equ	0xFDA
 46542                           fsr2l	equ	0xFD9
 46543                           status	equ	0xFD8
 46544                           
 46545 ;; *************** function _USBIncrement1msInternalTimers *****************
 46546 ;; Defined at:
 46547 ;;		line 3027 in file "usb_device.c"
 46548 ;; Parameters:    Size  Location     Type
 46549 ;;		None
 46550 ;; Auto vars:     Size  Location     Type
 46551 ;;		None
 46552 ;; Return value:  Size  Location     Type
 46553 ;;                  1    wreg      void 
 46554 ;; Registers used:
 46555 ;;		wreg, status,2, status,0
 46556 ;; Tracked objects:
 46557 ;;		On entry : 0/0
 46558 ;;		On exit  : 0/0
 46559 ;;		Unchanged: 0/0
 46560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46565 ;;Total ram usage:        0 bytes
 46566 ;; Hardware stack levels used:    1
 46567 ;; This function calls:
 46568 ;;		Nothing
 46569 ;; This function is called by:
 46570 ;;		_USBDeviceTasks
 46571 ;; This function uses a non-reentrant model
 46572 ;;
 46573                           
 46574                           	psect	text220
 46575  013EE4                     __ptext220:
 46576                           	opt stack 0
 46577  013EE4                     _USBIncrement1msInternalTimers:
 46578                           	opt stack 16
 46579                           
 46580                           ;usb_device.c: 3035: USB1msTickCount++;
 46581                           
 46582                           ; BSR set to: 15
 46583                           ;incstack = 0
 46584  013EE4  0E01               	movlw	1
 46585  013EE6  0101               	movlb	1	; () banked
 46586  013EE8  27DD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 46587  013EEA  0E00               	movlw	0
 46588  013EEC  23DE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 46589  013EEE  23DF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 46590  013EF0  23E0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 46591                           
 46592                           ; BSR set to: 1
 46593                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 46594  013EF2  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 46595  013EF4  A4D8               	btfss	status,2,c
 46596  013EF6  0012               	return	
 46597                           
 46598                           ; BSR set to: 1
 46599                           ;usb_device.c: 3037: {
 46600                           ;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 46601  013EF8  0101               	movlb	1	; () banked
 46602  013EFA  2BFA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 46603                           
 46604                           ; BSR set to: 1
 46605                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 46606  013EFC  0101               	movlb	1	; () banked
 46607  013EFE  51FA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 46608  013F00  A4D8               	btfss	status,2,c
 46609  013F02  0012               	return	
 46610                           
 46611                           ; BSR set to: 1
 46612                           ;usb_device.c: 3041: {
 46613                           ;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 46614  013F04  0101               	movlb	1	; () banked
 46615  013F06  69FA               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46616                           
 46617                           ; BSR set to: 1
 46618  013F08  0012               	return	
 46619  013F0A                     __end_of_USBIncrement1msInternalTimers:
 46620                           	opt stack 0
 46621                           tosu	equ	0xFFF
 46622                           tosh	equ	0xFFE
 46623                           tosl	equ	0xFFD
 46624                           pclatu	equ	0xFFB
 46625                           pclath	equ	0xFFA
 46626                           tblptru	equ	0xFF8
 46627                           tblptrh	equ	0xFF7
 46628                           tblptrl	equ	0xFF6
 46629                           tablat	equ	0xFF5
 46630                           prodh	equ	0xFF4
 46631                           prodl	equ	0xFF3
 46632                           intcon	equ	0xFF2
 46633                           intcon2	equ	0xFF1
 46634                           intcon3	equ	0xFF0
 46635                           indf0	equ	0xFEF
 46636                           postinc0	equ	0xFEE
 46637                           fsr0h	equ	0xFEA
 46638                           fsr0l	equ	0xFE9
 46639                           wreg	equ	0xFE8
 46640                           indf1	equ	0xFE7
 46641                           postinc1	equ	0xFE6
 46642                           postdec1	equ	0xFE5
 46643                           plusw1	equ	0xFE3
 46644                           fsr1h	equ	0xFE2
 46645                           fsr1l	equ	0xFE1
 46646                           indf2	equ	0xFDF
 46647                           postinc2	equ	0xFDE
 46648                           postdec2	equ	0xFDD
 46649                           plusw2	equ	0xFDB
 46650                           fsr2h	equ	0xFDA
 46651                           fsr2l	equ	0xFD9
 46652                           status	equ	0xFD8
 46653                           
 46654 ;; *************** function _USBCtrlEPService *****************
 46655 ;; Defined at:
 46656 ;;		line 2374 in file "usb_device.c"
 46657 ;; Parameters:    Size  Location     Type
 46658 ;;		None
 46659 ;; Auto vars:     Size  Location     Type
 46660 ;;		None
 46661 ;; Return value:  Size  Location     Type
 46662 ;;                  1    wreg      void 
 46663 ;; Registers used:
 46664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46665 ;; Tracked objects:
 46666 ;;		On entry : 0/0
 46667 ;;		On exit  : 0/0
 46668 ;;		Unchanged: 0/0
 46669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46674 ;;Total ram usage:        1 bytes
 46675 ;; Hardware stack levels used:    1
 46676 ;; Hardware stack levels required when called:    7
 46677 ;; This function calls:
 46678 ;;		_USBCtrlTrfInHandler
 46679 ;;		_USBCtrlTrfOutHandler
 46680 ;;		_USBCtrlTrfSetupHandler
 46681 ;;		i2_memcpy
 46682 ;; This function is called by:
 46683 ;;		_USBDeviceTasks
 46684 ;; This function uses a non-reentrant model
 46685 ;;
 46686                           
 46687                           	psect	text221
 46688  011A0A                     __ptext221:
 46689                           	opt stack 0
 46690  011A0A                     _USBCtrlEPService:
 46691                           	opt stack 9
 46692                           
 46693                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 46694                           
 46695                           ; BSR set to: 1
 46696                           ;incstack = 0
 46697  011A0A  0E2D               	movlw	45
 46698  011A0C  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 46699                           
 46700                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 46701  011A0E  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 46702  011A12  0EFD               	movlw	253
 46703  011A14  164B               	andwf	??_USBCtrlEPService,f,c
 46704  011A16  A4D8               	btfss	status,2,c
 46705  011A18  D03B               	goto	i2l20331
 46706                           
 46707                           ;usb_device.c: 2385: {
 46708                           ;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 46709  011A1A  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 46710  011A1E  90D8               	bcf	status,0,c
 46711  011A20  324B               	rrcf	??_USBCtrlEPService,f,c
 46712  011A22  0E3F               	movlw	63
 46713  011A24  164B               	andwf	??_USBCtrlEPService,f,c
 46714  011A26  504B               	movf	??_USBCtrlEPService,w,c
 46715  011A28  0D04               	mullw	4
 46716  011A2A  0E00               	movlw	0
 46717  011A2C  24F3               	addwf	prodl,w,c
 46718  011A2E  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 46719  011A30  0E0D               	movlw	13
 46720  011A32  20F4               	addwfc	prodh,w,c
 46721  011A34  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 46722                           
 46723                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 46724  011A36  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 46725  011A3A  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 46726                           
 46727                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 46728  011A3E  0E04               	movlw	4
 46729  011A40  1818               	xorwf	_pBDTEntryEP0OutNext,w,c
 46730  011A42  6E18               	movwf	_pBDTEntryEP0OutNext,c
 46731  011A44  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 46732  011A46  6E19               	movwf	_pBDTEntryEP0OutNext+1,c
 46733                           
 46734                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 46735  011A48  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46736  011A4C  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46737  011A50  30DF               	rrcf	indf2,w,c
 46738  011A52  32E8               	rrcf	wreg,f,c
 46739  011A54  0B0F               	andlw	15
 46740  011A56  0A0D               	xorlw	13
 46741  011A58  A4D8               	btfss	status,2,c
 46742  011A5A  D017               	goto	i2l20329
 46743                           
 46744                           ;usb_device.c: 2402: {
 46745                           ;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 46746  011A5C  0E30               	movlw	48
 46747  011A5E  6E2E               	movwf	i2memcpy@d1,c
 46748  011A60  0E0D               	movlw	13
 46749  011A62  6E2F               	movwf	i2memcpy@d1+1,c
 46750  011A64  EE20 F002          	lfsr	2,2
 46751  011A68  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 46752  011A6A  26D9               	addwf	fsr2l,f,c
 46753  011A6C  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 46754  011A6E  22DA               	addwfc	fsr2h,f,c
 46755  011A70  CFDE F030          	movff	postinc2,i2memcpy@s1
 46756  011A74  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 46757  011A78  0E00               	movlw	0
 46758  011A7A  6E33               	movwf	i2memcpy@n+1,c
 46759  011A7C  0E08               	movlw	8
 46760  011A7E  6E32               	movwf	i2memcpy@n,c
 46761  011A80  EC0A  F098         	call	i2_memcpy	;wreg free
 46762                           
 46763                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 46764  011A84  ECE3  F08D         	call	_USBCtrlTrfSetupHandler	;wreg free
 46765                           
 46766                           ;usb_device.c: 2411: }
 46767  011A88  0012               	return	
 46768  011A8A                     i2l20329:
 46769                           
 46770                           ;usb_device.c: 2412: else
 46771                           ;usb_device.c: 2413: {
 46772                           ;usb_device.c: 2415: USBCtrlTrfOutHandler();
 46773  011A8A  EC38  F098         	call	_USBCtrlTrfOutHandler	;wreg free
 46774                           
 46775                           ;usb_device.c: 2416: }
 46776                           ;usb_device.c: 2417: }
 46777  011A8E  0012               	return	
 46778  011A90                     i2l20331:
 46779                           
 46780                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 46781  011A90  502C               	movf	_USTATcopy,w,c	;volatile
 46782  011A92  0BFD               	andlw	253
 46783  011A94  0A04               	xorlw	4
 46784  011A96  A4D8               	btfss	status,2,c
 46785  011A98  0012               	return	
 46786                           
 46787                           ;usb_device.c: 2419: {
 46788                           ;usb_device.c: 2422: USBCtrlTrfInHandler();
 46789  011A9A  ECFC  F086         	call	_USBCtrlTrfInHandler	;wreg free
 46790  011A9E  0012               	return	
 46791  011AA0                     __end_of_USBCtrlEPService:
 46792                           	opt stack 0
 46793                           tosu	equ	0xFFF
 46794                           tosh	equ	0xFFE
 46795                           tosl	equ	0xFFD
 46796                           pclatu	equ	0xFFB
 46797                           pclath	equ	0xFFA
 46798                           tblptru	equ	0xFF8
 46799                           tblptrh	equ	0xFF7
 46800                           tblptrl	equ	0xFF6
 46801                           tablat	equ	0xFF5
 46802                           prodh	equ	0xFF4
 46803                           prodl	equ	0xFF3
 46804                           intcon	equ	0xFF2
 46805                           intcon2	equ	0xFF1
 46806                           intcon3	equ	0xFF0
 46807                           indf0	equ	0xFEF
 46808                           postinc0	equ	0xFEE
 46809                           fsr0h	equ	0xFEA
 46810                           fsr0l	equ	0xFE9
 46811                           wreg	equ	0xFE8
 46812                           indf1	equ	0xFE7
 46813                           postinc1	equ	0xFE6
 46814                           postdec1	equ	0xFE5
 46815                           plusw1	equ	0xFE3
 46816                           fsr1h	equ	0xFE2
 46817                           fsr1l	equ	0xFE1
 46818                           indf2	equ	0xFDF
 46819                           postinc2	equ	0xFDE
 46820                           postdec2	equ	0xFDD
 46821                           plusw2	equ	0xFDB
 46822                           fsr2h	equ	0xFDA
 46823                           fsr2l	equ	0xFD9
 46824                           status	equ	0xFD8
 46825                           
 46826 ;; *************** function i2_memcpy *****************
 46827 ;; Defined at:
 46828 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 46829 ;; Parameters:    Size  Location     Type
 46830 ;;  d1              2    0[COMRAM] PTR void 
 46831 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 46832 ;;		 -> SetupPkt(8), 
 46833 ;;  s1              2    2[COMRAM] PTR const void 
 46834 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 46835 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 46836 ;;		 -> SetupPkt(8), 
 46837 ;;  n               2    4[COMRAM] unsigned int 
 46838 ;; Auto vars:     Size  Location     Type
 46839 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 46840 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 46841 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 46842 ;;		 -> SetupPkt(8), 
 46843 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 46844 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 46845 ;;		 -> SetupPkt(8), 
 46846 ;;  memcpy          1   10[COMRAM] unsigned char 
 46847 ;; Return value:  Size  Location     Type
 46848 ;;                  2    0[COMRAM] PTR void 
 46849 ;; Registers used:
 46850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 46851 ;; Tracked objects:
 46852 ;;		On entry : 0/0
 46853 ;;		On exit  : 0/0
 46854 ;;		Unchanged: 0/0
 46855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46856 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46857 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46859 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46860 ;;Total ram usage:       11 bytes
 46861 ;; Hardware stack levels used:    1
 46862 ;; This function calls:
 46863 ;;		Nothing
 46864 ;; This function is called by:
 46865 ;;		_USBCtrlEPService
 46866 ;; This function uses a non-reentrant model
 46867 ;;
 46868                           
 46869                           	psect	text222
 46870  013014                     __ptext222:
 46871                           	opt stack 0
 46872  013014                     i2_memcpy:
 46873                           	opt stack 15
 46874                           
 46875                           ;incstack = 0
 46876  013014  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 46877  013018  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 46878  01301C  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 46879  013020  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 46880  013024  D01C               	goto	i2l14311
 46881  013026                     i2l14303:
 46882  013026  C036  FFF6         	movff	i2memcpy@s,tblptrl
 46883  01302A  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 46884  01302E  0E00               	movlw	low (__mediumconst shr (0+16))
 46885  013030  6EF8               	movwf	tblptru,c
 46886  013032  0E0E               	movlw	(high __ramtop+-1)
 46887  013034  64F7               	cpfsgt	tblptrh,c
 46888  013036  D003               	bra	i2u1223_47
 46889  013038  0008               	tblrd		*
 46890  01303A  50F5               	movf	tablat,w,c
 46891  01303C  D005               	bra	i2u1223_40
 46892  01303E                     i2u1223_47:
 46893  01303E  CFF6 FFE9          	movff	tblptrl,fsr0l
 46894  013042  CFF7 FFEA          	movff	tblptrh,fsr0h
 46895  013046  50EF               	movf	indf0,w,c
 46896  013048                     i2u1223_40:
 46897  013048  6E38               	movwf	i2memcpy@tmp,c
 46898  01304A  4A36               	infsnz	i2memcpy@s,f,c
 46899  01304C  2A37               	incf	i2memcpy@s+1,f,c
 46900  01304E  C034  FFD9         	movff	i2memcpy@d,fsr2l
 46901  013052  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 46902  013056  C038  FFDF         	movff	i2memcpy@tmp,indf2
 46903  01305A  4A34               	infsnz	i2memcpy@d,f,c
 46904  01305C  2A35               	incf	i2memcpy@d+1,f,c
 46905  01305E                     i2l14311:
 46906  01305E  0632               	decf	i2memcpy@n,f,c
 46907  013060  A0D8               	btfss	status,0,c
 46908  013062  0633               	decf	i2memcpy@n+1,f,c
 46909  013064  2832               	incf	i2memcpy@n,w,c
 46910  013066  E1DF               	bnz	i2l14303
 46911  013068  2833               	incf	i2memcpy@n+1,w,c
 46912  01306A  B4D8               	btfsc	status,2,c
 46913  01306C  0012               	return	
 46914  01306E  D7DB               	goto	i2l14303
 46915  013070                     __end_ofi2_memcpy:
 46916                           	opt stack 0
 46917                           tosu	equ	0xFFF
 46918                           tosh	equ	0xFFE
 46919                           tosl	equ	0xFFD
 46920                           pclatu	equ	0xFFB
 46921                           pclath	equ	0xFFA
 46922                           tblptru	equ	0xFF8
 46923                           tblptrh	equ	0xFF7
 46924                           tblptrl	equ	0xFF6
 46925                           tablat	equ	0xFF5
 46926                           prodh	equ	0xFF4
 46927                           prodl	equ	0xFF3
 46928                           intcon	equ	0xFF2
 46929                           intcon2	equ	0xFF1
 46930                           intcon3	equ	0xFF0
 46931                           indf0	equ	0xFEF
 46932                           postinc0	equ	0xFEE
 46933                           fsr0h	equ	0xFEA
 46934                           fsr0l	equ	0xFE9
 46935                           wreg	equ	0xFE8
 46936                           indf1	equ	0xFE7
 46937                           postinc1	equ	0xFE6
 46938                           postdec1	equ	0xFE5
 46939                           plusw1	equ	0xFE3
 46940                           fsr1h	equ	0xFE2
 46941                           fsr1l	equ	0xFE1
 46942                           indf2	equ	0xFDF
 46943                           postinc2	equ	0xFDE
 46944                           postdec2	equ	0xFDD
 46945                           plusw2	equ	0xFDB
 46946                           fsr2h	equ	0xFDA
 46947                           fsr2l	equ	0xFD9
 46948                           status	equ	0xFD8
 46949                           
 46950 ;; *************** function _USBCtrlTrfSetupHandler *****************
 46951 ;; Defined at:
 46952 ;;		line 2467 in file "usb_device.c"
 46953 ;; Parameters:    Size  Location     Type
 46954 ;;		None
 46955 ;; Auto vars:     Size  Location     Type
 46956 ;;		None
 46957 ;; Return value:  Size  Location     Type
 46958 ;;                  1    wreg      void 
 46959 ;; Registers used:
 46960 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46961 ;; Tracked objects:
 46962 ;;		On entry : 0/0
 46963 ;;		On exit  : 0/0
 46964 ;;		Unchanged: 0/0
 46965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46970 ;;Total ram usage:        0 bytes
 46971 ;; Hardware stack levels used:    1
 46972 ;; Hardware stack levels required when called:    6
 46973 ;; This function calls:
 46974 ;;		_USBCheckStdRequest
 46975 ;;		_USBCtrlEPServiceComplete
 46976 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46977 ;; This function is called by:
 46978 ;;		_USBCtrlEPService
 46979 ;; This function uses a non-reentrant model
 46980 ;;
 46981                           
 46982                           	psect	text223
 46983  011BC6                     __ptext223:
 46984                           	opt stack 0
 46985  011BC6                     _USBCtrlTrfSetupHandler:
 46986                           	opt stack 9
 46987                           
 46988                           ;usb_device.c: 2472: shortPacketStatus = 0;
 46989                           
 46990                           ;incstack = 0
 46991  011BC6  0E00               	movlw	0
 46992  011BC8  6E2A               	movwf	_shortPacketStatus,c	;volatile
 46993                           
 46994                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 46995  011BCA  0E00               	movlw	0
 46996  011BCC  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 46997                           
 46998                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 46999  011BCE  0E00               	movlw	0
 47000  011BD0  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 47001                           
 47002                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 47003  011BD2  0E00               	movlw	0
 47004  011BD4  0101               	movlb	1	; () banked
 47005  011BD6  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 47006                           
 47007                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 47008  011BD8  0E00               	movlw	0
 47009  011BDA  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 47010                           
 47011                           ;usb_device.c: 2477: controlTransferState = 0;
 47012  011BDC  0E00               	movlw	0
 47013  011BDE  6E29               	movwf	_controlTransferState,c	;volatile
 47014                           
 47015                           ; BSR set to: 1
 47016                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 47017  011BE0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47018  011BE4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47019  011BE8  0E7F               	movlw	127
 47020  011BEA  16DF               	andwf	indf2,f,c
 47021                           
 47022                           ; BSR set to: 1
 47023                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 47024  011BEC  0E04               	movlw	4
 47025  011BEE  1810               	xorwf	_pBDTEntryIn,w,c
 47026  011BF0  6E10               	movwf	_pBDTEntryIn,c
 47027  011BF2  5011               	movf	_pBDTEntryIn+1,w,c
 47028  011BF4  6E11               	movwf	_pBDTEntryIn+1,c
 47029                           
 47030                           ; BSR set to: 1
 47031                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 47032  011BF6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47033  011BFA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47034  011BFE  0E7F               	movlw	127
 47035  011C00  16DF               	andwf	indf2,f,c
 47036                           
 47037                           ; BSR set to: 1
 47038                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 47039  011C02  0E04               	movlw	4
 47040  011C04  1810               	xorwf	_pBDTEntryIn,w,c
 47041  011C06  6E10               	movwf	_pBDTEntryIn,c
 47042  011C08  5011               	movf	_pBDTEntryIn+1,w,c
 47043  011C0A  6E11               	movwf	_pBDTEntryIn+1,c
 47044                           
 47045                           ; BSR set to: 1
 47046                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 47047  011C0C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47048  011C10  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47049  011C14  0E7F               	movlw	127
 47050  011C16  16DF               	andwf	indf2,f,c
 47051                           
 47052                           ; BSR set to: 1
 47053                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 47054  011C18  0E00               	movlw	0
 47055  011C1A  6E0D               	movwf	_inPipes+3,c	;volatile
 47056                           
 47057                           ; BSR set to: 1
 47058                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 47059  011C1C  0E00               	movlw	0
 47060  011C1E  6E0F               	movwf	_inPipes+5,c	;volatile
 47061  011C20  0E00               	movlw	0
 47062  011C22  6E0E               	movwf	_inPipes+4,c	;volatile
 47063                           
 47064                           ; BSR set to: 1
 47065                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 47066  011C24  0E00               	movlw	0
 47067  011C26  6E04               	movwf	_outPipes+3,c	;volatile
 47068                           
 47069                           ; BSR set to: 1
 47070                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 47071  011C28  0E00               	movlw	0
 47072  011C2A  6E06               	movwf	_outPipes+5,c	;volatile
 47073  011C2C  0E00               	movlw	0
 47074  011C2E  6E05               	movwf	_outPipes+4,c	;volatile
 47075                           
 47076                           ; BSR set to: 1
 47077                           ;usb_device.c: 2502: USBCheckStdRequest();
 47078  011C30  ECE9  F082         	call	_USBCheckStdRequest	;wreg free
 47079                           
 47080                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 47081  011C34  0E00               	movlw	0
 47082  011C36  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47083  011C38  0E03               	movlw	3
 47084  011C3A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47085  011C3C  0E00               	movlw	0
 47086  011C3E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47087  011C40  0E00               	movlw	0
 47088  011C42  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47089  011C44  0E00               	movlw	0
 47090  011C46  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47091  011C48  0E00               	movlw	0
 47092  011C4A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47093  011C4C  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47094                           
 47095                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 47096  011C50  EC1A  F081         	call	_USBCtrlEPServiceComplete	;wreg free
 47097  011C54  0012               	return		;funcret
 47098  011C56                     __end_of_USBCtrlTrfSetupHandler:
 47099                           	opt stack 0
 47100                           tosu	equ	0xFFF
 47101                           tosh	equ	0xFFE
 47102                           tosl	equ	0xFFD
 47103                           pclatu	equ	0xFFB
 47104                           pclath	equ	0xFFA
 47105                           tblptru	equ	0xFF8
 47106                           tblptrh	equ	0xFF7
 47107                           tblptrl	equ	0xFF6
 47108                           tablat	equ	0xFF5
 47109                           prodh	equ	0xFF4
 47110                           prodl	equ	0xFF3
 47111                           intcon	equ	0xFF2
 47112                           intcon2	equ	0xFF1
 47113                           intcon3	equ	0xFF0
 47114                           indf0	equ	0xFEF
 47115                           postinc0	equ	0xFEE
 47116                           fsr0h	equ	0xFEA
 47117                           fsr0l	equ	0xFE9
 47118                           wreg	equ	0xFE8
 47119                           indf1	equ	0xFE7
 47120                           postinc1	equ	0xFE6
 47121                           postdec1	equ	0xFE5
 47122                           plusw1	equ	0xFE3
 47123                           fsr1h	equ	0xFE2
 47124                           fsr1l	equ	0xFE1
 47125                           indf2	equ	0xFDF
 47126                           postinc2	equ	0xFDE
 47127                           postdec2	equ	0xFDD
 47128                           plusw2	equ	0xFDB
 47129                           fsr2h	equ	0xFDA
 47130                           fsr2l	equ	0xFD9
 47131                           status	equ	0xFD8
 47132                           
 47133 ;; *************** function _USBCtrlEPServiceComplete *****************
 47134 ;; Defined at:
 47135 ;;		line 1618 in file "usb_device.c"
 47136 ;; Parameters:    Size  Location     Type
 47137 ;;		None
 47138 ;; Auto vars:     Size  Location     Type
 47139 ;;		None
 47140 ;; Return value:  Size  Location     Type
 47141 ;;                  1    wreg      void 
 47142 ;; Registers used:
 47143 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 47144 ;; Tracked objects:
 47145 ;;		On entry : 0/0
 47146 ;;		On exit  : 0/0
 47147 ;;		Unchanged: 0/0
 47148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47153 ;;Total ram usage:        0 bytes
 47154 ;; Hardware stack levels used:    1
 47155 ;; Hardware stack levels required when called:    2
 47156 ;; This function calls:
 47157 ;;		_USBCtrlEPAllowDataStage
 47158 ;;		_USBCtrlEPAllowStatusStage
 47159 ;; This function is called by:
 47160 ;;		_USBCtrlTrfSetupHandler
 47161 ;; This function uses a non-reentrant model
 47162 ;;
 47163                           
 47164                           	psect	text224
 47165  010234                     __ptext224:
 47166                           	opt stack 0
 47167  010234                     _USBCtrlEPServiceComplete:
 47168                           	opt stack 12
 47169                           
 47170                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 47171                           
 47172                           ;incstack = 0
 47173  010234  9865               	bcf	3941,4,c	;volatile
 47174                           
 47175                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 47176  010236  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 47177  010238  D039               	goto	i2l233
 47178                           
 47179                           ;usb_device.c: 1631: {
 47180                           ;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 47181  01023A  AE04               	btfss	_outPipes+3,7,c	;volatile
 47182  01023C  D00C               	goto	i2l12817
 47183                           
 47184                           ;usb_device.c: 1633: {
 47185                           ;usb_device.c: 1634: controlTransferState = 2;
 47186  01023E  0E02               	movlw	2
 47187  010240  6E29               	movwf	_controlTransferState,c	;volatile
 47188                           
 47189                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 47190  010242  0101               	movlb	1	; () banked
 47191  010244  51FB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 47192  010246  B4D8               	btfsc	status,2,c
 47193                           
 47194                           ; BSR set to: 1
 47195                           ;usb_device.c: 1646: {
 47196                           ;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 47197  010248  EC22  F08C         	call	_USBCtrlEPAllowDataStage	;wreg free
 47198                           
 47199                           ;usb_device.c: 1648: }
 47200                           ;usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 47201  01024C  0E00               	movlw	0
 47202  01024E  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 47203                           
 47204                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 47205  010250  0E00               	movlw	0
 47206  010252  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 47207                           
 47208                           ;usb_device.c: 1654: }
 47209  010254  0012               	return	
 47210  010256                     i2l12817:
 47211                           
 47212                           ;usb_device.c: 1655: else
 47213                           ;usb_device.c: 1656: {
 47214                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
 47215  010256  EE20 F001          	lfsr	2,1
 47216  01025A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47217  01025C  26D9               	addwf	fsr2l,f,c
 47218  01025E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47219  010260  22DA               	addwfc	fsr2h,f,c
 47220  010262  0E08               	movlw	8
 47221  010264  6EDF               	movwf	indf2,c
 47222                           
 47223                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 47224  010266  EE20 F002          	lfsr	2,2
 47225  01026A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47226  01026C  26D9               	addwf	fsr2l,f,c
 47227  01026E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47228  010270  22DA               	addwfc	fsr2h,f,c
 47229  010272  0E30               	movlw	48
 47230  010274  6EDE               	movwf	postinc2,c
 47231  010276  0E0D               	movlw	13
 47232  010278  6EDD               	movwf	postdec2,c
 47233                           
 47234                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 47235  01027A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47236  01027E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47237  010282  0E0C               	movlw	12
 47238  010284  6EDF               	movwf	indf2,c
 47239                           
 47240                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47241  010286  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47242  01028A  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47243  01028E  0E00               	movlw	0
 47244  010290  8EDB               	bsf	plusw2,7,c
 47245                           
 47246                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 47247  010292  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47248  010296  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47249  01029A  0E04               	movlw	4
 47250  01029C  6EDF               	movwf	indf2,c
 47251                           
 47252                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 47253  01029E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47254  0102A2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47255  0102A6  0E00               	movlw	0
 47256  0102A8  8EDB               	bsf	plusw2,7,c
 47257                           
 47258                           ;usb_device.c: 1667: }
 47259                           ;usb_device.c: 1668: }
 47260  0102AA  0012               	return	
 47261  0102AC                     i2l233:
 47262                           
 47263                           ;usb_device.c: 1669: else
 47264                           ;usb_device.c: 1670: {
 47265                           ;usb_device.c: 1671: if(SetupPkt.DataDir == (0x80>>7))
 47266  0102AC  010D               	movlb	13	; () banked
 47267  0102AE  AF30               	btfss	48,7,b	;volatile
 47268  0102B0  D010               	goto	i2l12837
 47269                           
 47270                           ; BSR set to: 13
 47271                           ;usb_device.c: 1672: {
 47272                           ;usb_device.c: 1673: controlTransferState = 1;
 47273  0102B2  0E01               	movlw	1
 47274  0102B4  6E29               	movwf	_controlTransferState,c	;volatile
 47275                           
 47276                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 47277  0102B6  5020               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 47278  0102B8  B4D8               	btfsc	status,2,c
 47279                           
 47280                           ; BSR set to: 13
 47281                           ;usb_device.c: 1688: {
 47282                           ;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 47283  0102BA  EC22  F08C         	call	_USBCtrlEPAllowDataStage	;wreg free
 47284                           
 47285                           ;usb_device.c: 1690: }
 47286                           ;usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 47287  0102BE  0E00               	movlw	0
 47288  0102C0  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 47289                           
 47290                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 47291  0102C2  0E00               	movlw	0
 47292  0102C4  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 47293                           
 47294                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 47295  0102C6  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 47296  0102C8  A4D8               	btfss	status,2,c
 47297  0102CA  0012               	return	
 47298                           
 47299                           ;usb_device.c: 1715: {
 47300                           ;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 47301  0102CC  EC3B  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 47302                           
 47303                           ;usb_device.c: 1717: }
 47304                           ;usb_device.c: 1718: }
 47305  0102D0  0012               	return	
 47306  0102D2                     i2l12837:
 47307                           
 47308                           ;usb_device.c: 1719: else
 47309                           ;usb_device.c: 1720: {
 47310                           ;usb_device.c: 1731: controlTransferState = 2;
 47311  0102D2  0E02               	movlw	2
 47312  0102D4  6E29               	movwf	_controlTransferState,c	;volatile
 47313                           
 47314                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 47315  0102D6  EE20 F001          	lfsr	2,1
 47316  0102DA  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47317  0102DC  26D9               	addwf	fsr2l,f,c
 47318  0102DE  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47319  0102E0  22DA               	addwfc	fsr2h,f,c
 47320  0102E2  0E08               	movlw	8
 47321  0102E4  6EDF               	movwf	indf2,c
 47322                           
 47323                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 47324  0102E6  EE20 F002          	lfsr	2,2
 47325  0102EA  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47326  0102EC  26D9               	addwf	fsr2l,f,c
 47327  0102EE  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47328  0102F0  22DA               	addwfc	fsr2h,f,c
 47329  0102F2  0E30               	movlw	48
 47330  0102F4  6EDE               	movwf	postinc2,c
 47331  0102F6  0E0D               	movlw	13
 47332  0102F8  6EDD               	movwf	postdec2,c
 47333                           
 47334                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 47335  0102FA  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47336  0102FE  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47337  010302  0E04               	movlw	4
 47338  010304  6EDF               	movwf	indf2,c
 47339                           
 47340                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47341  010306  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47342  01030A  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47343  01030E  0E00               	movlw	0
 47344  010310  8EDB               	bsf	plusw2,7,c
 47345                           
 47346                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 47347  010312  0E00               	movlw	0
 47348  010314  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 47349                           
 47350                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 47351  010316  0E00               	movlw	0
 47352  010318  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 47353                           
 47354                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 47355  01031A  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 47356  01031C  A4D8               	btfss	status,2,c
 47357  01031E  0012               	return	
 47358                           
 47359                           ;usb_device.c: 1743: {
 47360                           ;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 47361  010320  EC3B  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 47362  010324  0012               	return	
 47363  010326                     __end_of_USBCtrlEPServiceComplete:
 47364                           	opt stack 0
 47365                           tosu	equ	0xFFF
 47366                           tosh	equ	0xFFE
 47367                           tosl	equ	0xFFD
 47368                           pclatu	equ	0xFFB
 47369                           pclath	equ	0xFFA
 47370                           tblptru	equ	0xFF8
 47371                           tblptrh	equ	0xFF7
 47372                           tblptrl	equ	0xFF6
 47373                           tablat	equ	0xFF5
 47374                           prodh	equ	0xFF4
 47375                           prodl	equ	0xFF3
 47376                           intcon	equ	0xFF2
 47377                           intcon2	equ	0xFF1
 47378                           intcon3	equ	0xFF0
 47379                           indf0	equ	0xFEF
 47380                           postinc0	equ	0xFEE
 47381                           fsr0h	equ	0xFEA
 47382                           fsr0l	equ	0xFE9
 47383                           wreg	equ	0xFE8
 47384                           indf1	equ	0xFE7
 47385                           postinc1	equ	0xFE6
 47386                           postdec1	equ	0xFE5
 47387                           plusw1	equ	0xFE3
 47388                           fsr1h	equ	0xFE2
 47389                           fsr1l	equ	0xFE1
 47390                           indf2	equ	0xFDF
 47391                           postinc2	equ	0xFDE
 47392                           postdec2	equ	0xFDD
 47393                           plusw2	equ	0xFDB
 47394                           fsr2h	equ	0xFDA
 47395                           fsr2l	equ	0xFD9
 47396                           status	equ	0xFD8
 47397                           
 47398 ;; *************** function _USBCtrlEPAllowDataStage *****************
 47399 ;; Defined at:
 47400 ;;		line 1490 in file "usb_device.c"
 47401 ;; Parameters:    Size  Location     Type
 47402 ;;		None
 47403 ;; Auto vars:     Size  Location     Type
 47404 ;;		None
 47405 ;; Return value:  Size  Location     Type
 47406 ;;                  1    wreg      void 
 47407 ;; Registers used:
 47408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 47409 ;; Tracked objects:
 47410 ;;		On entry : 0/0
 47411 ;;		On exit  : 0/0
 47412 ;;		Unchanged: 0/0
 47413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47418 ;;Total ram usage:        0 bytes
 47419 ;; Hardware stack levels used:    1
 47420 ;; Hardware stack levels required when called:    1
 47421 ;; This function calls:
 47422 ;;		_USBCtrlTrfTxService
 47423 ;; This function is called by:
 47424 ;;		_USBCtrlEPServiceComplete
 47425 ;; This function uses a non-reentrant model
 47426 ;;
 47427                           
 47428                           	psect	text225
 47429  011844                     __ptext225:
 47430                           	opt stack 0
 47431  011844                     _USBCtrlEPAllowDataStage:
 47432                           	opt stack 12
 47433                           
 47434                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 47435                           
 47436                           ;incstack = 0
 47437  011844  0E00               	movlw	0
 47438  011846  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 47439                           
 47440                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 47441  011848  0E00               	movlw	0
 47442  01184A  0101               	movlb	1	; () banked
 47443  01184C  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 47444                           
 47445                           ; BSR set to: 1
 47446                           ;usb_device.c: 1495: if(controlTransferState == 2)
 47447  01184E  0E02               	movlw	2
 47448  011850  1829               	xorwf	_controlTransferState,w,c	;volatile
 47449  011852  A4D8               	btfss	status,2,c
 47450  011854  D01F               	goto	i2l12237
 47451                           
 47452                           ; BSR set to: 1
 47453                           ;usb_device.c: 1496: {
 47454                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 47455  011856  EE20 F001          	lfsr	2,1
 47456  01185A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47457  01185C  26D9               	addwf	fsr2l,f,c
 47458  01185E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47459  011860  22DA               	addwfc	fsr2h,f,c
 47460  011862  0E08               	movlw	8
 47461  011864  6EDF               	movwf	indf2,c
 47462                           
 47463                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 47464  011866  EE20 F002          	lfsr	2,2
 47465  01186A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47466  01186C  26D9               	addwf	fsr2l,f,c
 47467  01186E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47468  011870  22DA               	addwfc	fsr2h,f,c
 47469  011872  0E38               	movlw	56
 47470  011874  6EDE               	movwf	postinc2,c
 47471  011876  0E0D               	movlw	13
 47472  011878  6EDD               	movwf	postdec2,c
 47473                           
 47474                           ; BSR set to: 1
 47475                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 47476  01187A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47477  01187E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47478  011882  0E48               	movlw	72
 47479  011884  6EDF               	movwf	indf2,c
 47480                           
 47481                           ; BSR set to: 1
 47482                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47483  011886  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47484  01188A  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47485  01188E  0E00               	movlw	0
 47486  011890  8EDB               	bsf	plusw2,7,c
 47487                           
 47488                           ;usb_device.c: 1502: }
 47489  011892  0012               	return	
 47490  011894                     i2l12237:
 47491                           
 47492                           ; BSR set to: 1
 47493                           ;usb_device.c: 1503: else
 47494                           ;usb_device.c: 1504: {
 47495                           ;usb_device.c: 1507: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 47496  011894  500E               	movf	_inPipes+4,w,c	;volatile
 47497  011896  010D               	movlb	13	; () banked
 47498  011898  5D36               	subwf	54,w,b	;volatile
 47499  01189A  500F               	movf	_inPipes+5,w,c	;volatile
 47500  01189C  010D               	movlb	13	; () banked
 47501  01189E  5937               	subwfb	55,w,b	;volatile
 47502  0118A0  B0D8               	btfsc	status,0,c
 47503  0118A2  D004               	goto	i2l12241
 47504                           
 47505                           ; BSR set to: 13
 47506                           ;usb_device.c: 1508: {
 47507                           ;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 47508  0118A4  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 47509  0118A8  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 47510  0118AC                     i2l12241:
 47511                           
 47512                           ; BSR set to: 13
 47513                           ;usb_device.c: 1510: }
 47514                           ;usb_device.c: 1511: USBCtrlTrfTxService();
 47515  0118AC  EC6F  F085         	call	_USBCtrlTrfTxService	;wreg free
 47516                           
 47517                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 47518  0118B0  EE20 F002          	lfsr	2,2
 47519  0118B4  5010               	movf	_pBDTEntryIn,w,c
 47520  0118B6  26D9               	addwf	fsr2l,f,c
 47521  0118B8  5011               	movf	_pBDTEntryIn+1,w,c
 47522  0118BA  22DA               	addwfc	fsr2h,f,c
 47523  0118BC  0E38               	movlw	56
 47524  0118BE  6EDE               	movwf	postinc2,c
 47525  0118C0  0E0D               	movlw	13
 47526  0118C2  6EDD               	movwf	postdec2,c
 47527                           
 47528                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 47529  0118C4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47530  0118C8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47531  0118CC  0E48               	movlw	72
 47532  0118CE  6EDF               	movwf	indf2,c
 47533                           
 47534                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 47535  0118D0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47536  0118D4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47537  0118D8  0E00               	movlw	0
 47538  0118DA  8EDB               	bsf	plusw2,7,c
 47539  0118DC  0012               	return	
 47540  0118DE                     __end_of_USBCtrlEPAllowDataStage:
 47541                           	opt stack 0
 47542                           tosu	equ	0xFFF
 47543                           tosh	equ	0xFFE
 47544                           tosl	equ	0xFFD
 47545                           pclatu	equ	0xFFB
 47546                           pclath	equ	0xFFA
 47547                           tblptru	equ	0xFF8
 47548                           tblptrh	equ	0xFF7
 47549                           tblptrl	equ	0xFF6
 47550                           tablat	equ	0xFF5
 47551                           prodh	equ	0xFF4
 47552                           prodl	equ	0xFF3
 47553                           intcon	equ	0xFF2
 47554                           intcon2	equ	0xFF1
 47555                           intcon3	equ	0xFF0
 47556                           indf0	equ	0xFEF
 47557                           postinc0	equ	0xFEE
 47558                           fsr0h	equ	0xFEA
 47559                           fsr0l	equ	0xFE9
 47560                           wreg	equ	0xFE8
 47561                           indf1	equ	0xFE7
 47562                           postinc1	equ	0xFE6
 47563                           postdec1	equ	0xFE5
 47564                           plusw1	equ	0xFE3
 47565                           fsr1h	equ	0xFE2
 47566                           fsr1l	equ	0xFE1
 47567                           indf2	equ	0xFDF
 47568                           postinc2	equ	0xFDE
 47569                           postdec2	equ	0xFDD
 47570                           plusw2	equ	0xFDB
 47571                           fsr2h	equ	0xFDA
 47572                           fsr2l	equ	0xFD9
 47573                           status	equ	0xFD8
 47574                           
 47575 ;; *************** function _USBCheckStdRequest *****************
 47576 ;; Defined at:
 47577 ;;		line 2688 in file "usb_device.c"
 47578 ;; Parameters:    Size  Location     Type
 47579 ;;		None
 47580 ;; Auto vars:     Size  Location     Type
 47581 ;;		None
 47582 ;; Return value:  Size  Location     Type
 47583 ;;                  1    wreg      void 
 47584 ;; Registers used:
 47585 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47586 ;; Tracked objects:
 47587 ;;		On entry : 0/0
 47588 ;;		On exit  : 0/0
 47589 ;;		Unchanged: 0/0
 47590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47595 ;;Total ram usage:        0 bytes
 47596 ;; Hardware stack levels used:    1
 47597 ;; Hardware stack levels required when called:    5
 47598 ;; This function calls:
 47599 ;;		_USBStdFeatureReqHandler
 47600 ;;		_USBStdGetDscHandler
 47601 ;;		_USBStdGetStatusHandler
 47602 ;;		_USBStdSetCfgHandler
 47603 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47604 ;; This function is called by:
 47605 ;;		_USBCtrlTrfSetupHandler
 47606 ;; This function uses a non-reentrant model
 47607 ;;
 47608                           
 47609                           	psect	text226
 47610  0105D2                     __ptext226:
 47611                           	opt stack 0
 47612  0105D2                     _USBCheckStdRequest:
 47613                           	opt stack 9
 47614                           
 47615                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 47616                           
 47617                           ;incstack = 0
 47618  0105D2  010D               	movlb	13	; () banked
 47619  0105D4  3930               	swapf	48,w,b	;volatile
 47620  0105D6  32E8               	rrcf	wreg,f,c
 47621  0105D8  0B03               	andlw	3
 47622  0105DA  0900               	iorlw	0
 47623  0105DC  A4D8               	btfss	status,2,c
 47624  0105DE  0012               	return	
 47625  0105E0  D043               	goto	i2l18991
 47626  0105E2                     i2l358:
 47627                           
 47628                           ; BSR set to: 13
 47629                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 47630  0105E2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47631                           
 47632                           ; BSR set to: 13
 47633                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 47634  0105E4  0E08               	movlw	8
 47635  0105E6  6E2B               	movwf	_USBDeviceState,c	;volatile
 47636                           
 47637                           ;usb_device.c: 2698: break;
 47638  0105E8  0012               	return	
 47639  0105EA                     i2l18961:
 47640                           
 47641                           ; BSR set to: 13
 47642                           ;usb_device.c: 2700: USBStdGetDscHandler();
 47643  0105EA  EC9E  F078         	call	_USBStdGetDscHandler	;wreg free
 47644                           
 47645                           ;usb_device.c: 2701: break;
 47646  0105EE  0012               	return	
 47647  0105F0                     i2l18963:
 47648                           
 47649                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 47650  0105F0  EC7B  F082         	call	_USBStdSetCfgHandler	;wreg free
 47651                           
 47652                           ;usb_device.c: 2704: break;
 47653  0105F4  0012               	return	
 47654  0105F6                     i2l18965:
 47655                           
 47656                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 47657  0105F6  0E2D               	movlw	low _USBActiveConfiguration
 47658  0105F8  6E0A               	movwf	_inPipes,c	;volatile
 47659  0105FA  0E00               	movlw	high _USBActiveConfiguration
 47660  0105FC  6E0B               	movwf	_inPipes+1,c	;volatile
 47661                           
 47662                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 47663  0105FE  800D               	bsf	_inPipes+3,0,c	;volatile
 47664                           
 47665                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 47666  010600  0E01               	movlw	1
 47667  010602  6E0E               	movwf	_inPipes+4,c	;volatile
 47668                           
 47669                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 47670  010604  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47671                           
 47672                           ;usb_device.c: 2710: break;
 47673  010606  0012               	return	
 47674  010608                     i2l18973:
 47675                           
 47676                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 47677  010608  EC40  F08A         	call	_USBStdGetStatusHandler	;wreg free
 47678                           
 47679                           ;usb_device.c: 2713: break;
 47680  01060C  0012               	return	
 47681  01060E                     i2l18975:
 47682                           
 47683                           ;usb_device.c: 2715: case 3:
 47684                           ;usb_device.c: 2716: USBStdFeatureReqHandler();
 47685  01060E  ECC2  F067         	call	_USBStdFeatureReqHandler	;wreg free
 47686                           
 47687                           ;usb_device.c: 2717: break;
 47688  010612  0012               	return	
 47689  010614                     i2l18977:
 47690                           
 47691                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 47692  010614  010D               	movlb	13	; () banked
 47693  010616  5134               	movf	52,w,b	;volatile
 47694  010618  0D01               	mullw	1
 47695  01061A  0EFC               	movlw	low _USBAlternateInterface
 47696  01061C  24F3               	addwf	prodl,w,c
 47697  01061E  6E0A               	movwf	_inPipes,c	;volatile
 47698  010620  0E01               	movlw	high _USBAlternateInterface
 47699  010622  20F4               	addwfc	prodh,w,c
 47700  010624  6E0B               	movwf	_inPipes+1,c	;volatile
 47701                           
 47702                           ; BSR set to: 13
 47703                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 47704  010626  800D               	bsf	_inPipes+3,0,c	;volatile
 47705                           
 47706                           ; BSR set to: 13
 47707                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 47708  010628  0E01               	movlw	1
 47709  01062A  6E0E               	movwf	_inPipes+4,c	;volatile
 47710                           
 47711                           ; BSR set to: 13
 47712                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 47713  01062C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47714                           
 47715                           ;usb_device.c: 2723: break;
 47716  01062E  0012               	return	
 47717  010630                     i2l367:
 47718                           
 47719                           ; BSR set to: 13
 47720                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 47721  010630  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47722                           
 47723                           ; BSR set to: 13
 47724                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 47725  010632  010D               	movlb	13	; () banked
 47726  010634  5134               	movf	52,w,b	;volatile
 47727  010636  0D01               	mullw	1
 47728  010638  0EFC               	movlw	low _USBAlternateInterface
 47729  01063A  24F3               	addwf	prodl,w,c
 47730  01063C  6ED9               	movwf	fsr2l,c
 47731  01063E  0E01               	movlw	high _USBAlternateInterface
 47732  010640  20F4               	addwfc	prodh,w,c
 47733  010642  6EDA               	movwf	fsr2h,c
 47734  010644  CD32 FFDF          	movff	3378,indf2	;volatile
 47735                           
 47736                           ;usb_device.c: 2727: break;
 47737  010648  0012               	return	
 47738  01064A                     i2l18987:
 47739                           
 47740                           ; BSR set to: 13
 47741                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 47742  01064A  0E00               	movlw	0
 47743  01064C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47744  01064E  0E02               	movlw	2
 47745  010650  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47746  010652  0E00               	movlw	0
 47747  010654  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47748  010656  0E00               	movlw	0
 47749  010658  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47750  01065A  0E00               	movlw	0
 47751  01065C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47752  01065E  0E00               	movlw	0
 47753  010660  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47754  010662  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47755                           
 47756                           ;usb_device.c: 2734: }
 47757                           
 47758                           ;usb_device.c: 2733: break;
 47759                           
 47760                           ;usb_device.c: 2732: default:
 47761                           
 47762                           ;usb_device.c: 2731: case 12:
 47763                           
 47764                           ;usb_device.c: 2730: break;
 47765  010666  0012               	return	
 47766  010668                     i2l18991:
 47767  010668  010D               	movlb	13	; () banked
 47768  01066A  5131               	movf	49,w,b	;volatile
 47769                           
 47770                           ; Switch size 1, requested type "space"
 47771                           ; Number of cases is 11, Range of values is 0 to 12
 47772                           ; switch strategies available:
 47773                           ; Name         Instructions Cycles
 47774                           ; simple_byte           34    18 (average)
 47775                           ;	Chosen strategy is simple_byte
 47776  01066C  0A00               	xorlw	0	; case 0
 47777  01066E  B4D8               	btfsc	status,2,c
 47778  010670  D7CB               	goto	i2l18973
 47779  010672  0A01               	xorlw	1	; case 1
 47780  010674  B4D8               	btfsc	status,2,c
 47781  010676  D7CB               	goto	i2l18975
 47782  010678  0A02               	xorlw	2	; case 3
 47783  01067A  B4D8               	btfsc	status,2,c
 47784  01067C  D7C8               	goto	i2l18975
 47785  01067E  0A06               	xorlw	6	; case 5
 47786  010680  B4D8               	btfsc	status,2,c
 47787  010682  D7AF               	goto	i2l358
 47788  010684  0A03               	xorlw	3	; case 6
 47789  010686  B4D8               	btfsc	status,2,c
 47790  010688  D7B0               	goto	i2l18961
 47791  01068A  0A01               	xorlw	1	; case 7
 47792  01068C  B4D8               	btfsc	status,2,c
 47793  01068E  D7DD               	goto	i2l18987
 47794  010690  0A0F               	xorlw	15	; case 8
 47795  010692  B4D8               	btfsc	status,2,c
 47796  010694  D7B0               	goto	i2l18965
 47797  010696  0A01               	xorlw	1	; case 9
 47798  010698  B4D8               	btfsc	status,2,c
 47799  01069A  D7AA               	goto	i2l18963
 47800  01069C  0A03               	xorlw	3	; case 10
 47801  01069E  B4D8               	btfsc	status,2,c
 47802  0106A0  D7B9               	goto	i2l18977
 47803  0106A2  0A01               	xorlw	1	; case 11
 47804  0106A4  B4D8               	btfsc	status,2,c
 47805  0106A6  D7C4               	goto	i2l367
 47806  0106A8  0A07               	xorlw	7	; case 12
 47807  0106AA  0012               	return	
 47808  0106AC                     __end_of_USBCheckStdRequest:
 47809                           	opt stack 0
 47810                           tosu	equ	0xFFF
 47811                           tosh	equ	0xFFE
 47812                           tosl	equ	0xFFD
 47813                           pclatu	equ	0xFFB
 47814                           pclath	equ	0xFFA
 47815                           tblptru	equ	0xFF8
 47816                           tblptrh	equ	0xFF7
 47817                           tblptrl	equ	0xFF6
 47818                           tablat	equ	0xFF5
 47819                           prodh	equ	0xFF4
 47820                           prodl	equ	0xFF3
 47821                           intcon	equ	0xFF2
 47822                           intcon2	equ	0xFF1
 47823                           intcon3	equ	0xFF0
 47824                           indf0	equ	0xFEF
 47825                           postinc0	equ	0xFEE
 47826                           fsr0h	equ	0xFEA
 47827                           fsr0l	equ	0xFE9
 47828                           wreg	equ	0xFE8
 47829                           indf1	equ	0xFE7
 47830                           postinc1	equ	0xFE6
 47831                           postdec1	equ	0xFE5
 47832                           plusw1	equ	0xFE3
 47833                           fsr1h	equ	0xFE2
 47834                           fsr1l	equ	0xFE1
 47835                           indf2	equ	0xFDF
 47836                           postinc2	equ	0xFDE
 47837                           postdec2	equ	0xFDD
 47838                           plusw2	equ	0xFDB
 47839                           fsr2h	equ	0xFDA
 47840                           fsr2l	equ	0xFD9
 47841                           status	equ	0xFD8
 47842                           
 47843 ;; *************** function _USBStdSetCfgHandler *****************
 47844 ;; Defined at:
 47845 ;;		line 1970 in file "usb_device.c"
 47846 ;; Parameters:    Size  Location     Type
 47847 ;;		None
 47848 ;; Auto vars:     Size  Location     Type
 47849 ;;  i               1   23[COMRAM] unsigned char 
 47850 ;; Return value:  Size  Location     Type
 47851 ;;                  1    wreg      void 
 47852 ;; Registers used:
 47853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47854 ;; Tracked objects:
 47855 ;;		On entry : 0/0
 47856 ;;		On exit  : 0/0
 47857 ;;		Unchanged: 0/0
 47858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47863 ;;Total ram usage:        1 bytes
 47864 ;; Hardware stack levels used:    1
 47865 ;; Hardware stack levels required when called:    4
 47866 ;; This function calls:
 47867 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47868 ;;		i2_memset
 47869 ;; This function is called by:
 47870 ;;		_USBCheckStdRequest
 47871 ;; This function uses a non-reentrant model
 47872 ;;
 47873                           
 47874                           	psect	text227
 47875  0104F6                     __ptext227:
 47876                           	opt stack 0
 47877  0104F6                     _USBStdSetCfgHandler:
 47878                           	opt stack 9
 47879                           
 47880                           ;usb_device.c: 1972: uint8_t i;
 47881                           ;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 47882                           
 47883                           ;incstack = 0
 47884  0104F6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47885                           
 47886                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 47887  0104F8  0E27               	movlw	39
 47888  0104FA  6E2E               	movwf	i2memset@p1,c
 47889  0104FC  0E0F               	movlw	15
 47890  0104FE  6E2F               	movwf	i2memset@p1+1,c
 47891  010500  0E00               	movlw	0
 47892  010502  6E31               	movwf	i2memset@c+1,c
 47893  010504  0E00               	movlw	0
 47894  010506  6E30               	movwf	i2memset@c,c
 47895  010508  0E00               	movlw	0
 47896  01050A  6E33               	movwf	i2memset@n+1,c
 47897  01050C  0E02               	movlw	2
 47898  01050E  6E32               	movwf	i2memset@n,c
 47899  010510  EC12  F09E         	call	i2_memset	;wreg free
 47900                           
 47901                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 47902  010514  0E00               	movlw	0
 47903  010516  6E2E               	movwf	i2memset@p1,c
 47904  010518  0E0D               	movlw	13
 47905  01051A  6E2F               	movwf	i2memset@p1+1,c
 47906  01051C  0E00               	movlw	0
 47907  01051E  6E31               	movwf	i2memset@c+1,c
 47908  010520  0E00               	movlw	0
 47909  010522  6E30               	movwf	i2memset@c,c
 47910  010524  0E00               	movlw	0
 47911  010526  6E33               	movwf	i2memset@n+1,c
 47912  010528  0E30               	movlw	48
 47913  01052A  6E32               	movwf	i2memset@n,c
 47914  01052C  EC12  F09E         	call	i2_memset	;wreg free
 47915                           
 47916                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 47917  010530  8C65               	bsf	3941,6,c	;volatile
 47918                           
 47919                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 47920  010532  0E00               	movlw	0
 47921  010534  6E45               	movwf	USBStdSetCfgHandler@i,c
 47922  010536                     i2l18467:
 47923  010536  0E02               	movlw	2
 47924  010538  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 47925  01053A  D001               	goto	i2l18471
 47926  01053C  D016               	goto	i2l18477
 47927  01053E                     i2l18471:
 47928                           
 47929                           ;usb_device.c: 1990: {
 47930                           ;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 47931  01053E  5045               	movf	USBStdSetCfgHandler@i,w,c
 47932  010540  0D01               	mullw	1
 47933  010542  0EE4               	movlw	low _ep_data_in
 47934  010544  24F3               	addwf	prodl,w,c
 47935  010546  6ED9               	movwf	fsr2l,c
 47936  010548  0E01               	movlw	high _ep_data_in
 47937  01054A  20F4               	addwfc	prodh,w,c
 47938  01054C  6EDA               	movwf	fsr2h,c
 47939  01054E  0E00               	movlw	0
 47940  010550  6EDF               	movwf	indf2,c
 47941                           
 47942                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 47943  010552  5045               	movf	USBStdSetCfgHandler@i,w,c
 47944  010554  0D01               	mullw	1
 47945  010556  0EE1               	movlw	low _ep_data_out
 47946  010558  24F3               	addwf	prodl,w,c
 47947  01055A  6ED9               	movwf	fsr2l,c
 47948  01055C  0E01               	movlw	high _ep_data_out
 47949  01055E  20F4               	addwfc	prodh,w,c
 47950  010560  6EDA               	movwf	fsr2h,c
 47951  010562  0E00               	movlw	0
 47952  010564  6EDF               	movwf	indf2,c
 47953  010566  2A45               	incf	USBStdSetCfgHandler@i,f,c
 47954  010568  D7E6               	goto	i2l18467
 47955  01056A                     i2l18477:
 47956                           
 47957                           ;usb_device.c: 1993: }
 47958                           ;usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 47959  01056A  0EFC               	movlw	low _USBAlternateInterface
 47960  01056C  6E2E               	movwf	i2memset@p1,c
 47961  01056E  0E01               	movlw	high _USBAlternateInterface
 47962  010570  6E2F               	movwf	i2memset@p1+1,c
 47963  010572  0E00               	movlw	0
 47964  010574  6E31               	movwf	i2memset@c+1,c
 47965  010576  0E00               	movlw	0
 47966  010578  6E30               	movwf	i2memset@c,c
 47967  01057A  0E00               	movlw	0
 47968  01057C  6E33               	movwf	i2memset@n+1,c
 47969  01057E  0E02               	movlw	2
 47970  010580  6E32               	movwf	i2memset@n,c
 47971  010582  EC12  F09E         	call	i2_memset	;wreg free
 47972                           
 47973                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 47974  010586  9C65               	bcf	3941,6,c	;volatile
 47975                           
 47976                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 47977  010588  0E08               	movlw	8
 47978  01058A  6E10               	movwf	_pBDTEntryIn,c
 47979  01058C  0E0D               	movlw	13
 47980  01058E  6E11               	movwf	_pBDTEntryIn+1,c
 47981                           
 47982                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 47983  010590  0E00               	movlw	0
 47984  010592  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 47985  010594  0E0D               	movlw	13
 47986  010596  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 47987                           
 47988                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 47989  010598  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 47990  01059C  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 47991                           
 47992                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 47993  0105A0  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 47994                           
 47995                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 47996  0105A4  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 47997  0105A6  A4D8               	btfss	status,2,c
 47998  0105A8  D003               	goto	i2l18493
 47999                           
 48000                           ;usb_device.c: 2012: {
 48001                           ;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 48002  0105AA  0E10               	movlw	16
 48003  0105AC  6E2B               	movwf	_USBDeviceState,c	;volatile
 48004                           
 48005                           ;usb_device.c: 2015: }
 48006  0105AE  0012               	return	
 48007  0105B0                     i2l18493:
 48008                           
 48009                           ;usb_device.c: 2016: else
 48010                           ;usb_device.c: 2017: {
 48011                           ;usb_device.c: 2019: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 48012  0105B0  0E00               	movlw	0
 48013  0105B2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48014  0105B4  0E01               	movlw	1
 48015  0105B6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48016  0105B8  0E2D               	movlw	low _USBActiveConfiguration
 48017  0105BA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48018  0105BC  0E00               	movlw	high _USBActiveConfiguration
 48019  0105BE  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48020  0105C0  0E00               	movlw	0
 48021  0105C2  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48022  0105C4  0E01               	movlw	1
 48023  0105C6  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48024  0105C8  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48025                           
 48026                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 48027  0105CC  0E20               	movlw	32
 48028  0105CE  6E2B               	movwf	_USBDeviceState,c	;volatile
 48029  0105D0  0012               	return	
 48030  0105D2                     __end_of_USBStdSetCfgHandler:
 48031                           	opt stack 0
 48032                           tosu	equ	0xFFF
 48033                           tosh	equ	0xFFE
 48034                           tosl	equ	0xFFD
 48035                           pclatu	equ	0xFFB
 48036                           pclath	equ	0xFFA
 48037                           tblptru	equ	0xFF8
 48038                           tblptrh	equ	0xFF7
 48039                           tblptrl	equ	0xFF6
 48040                           tablat	equ	0xFF5
 48041                           prodh	equ	0xFF4
 48042                           prodl	equ	0xFF3
 48043                           intcon	equ	0xFF2
 48044                           intcon2	equ	0xFF1
 48045                           intcon3	equ	0xFF0
 48046                           indf0	equ	0xFEF
 48047                           postinc0	equ	0xFEE
 48048                           fsr0h	equ	0xFEA
 48049                           fsr0l	equ	0xFE9
 48050                           wreg	equ	0xFE8
 48051                           indf1	equ	0xFE7
 48052                           postinc1	equ	0xFE6
 48053                           postdec1	equ	0xFE5
 48054                           plusw1	equ	0xFE3
 48055                           fsr1h	equ	0xFE2
 48056                           fsr1l	equ	0xFE1
 48057                           indf2	equ	0xFDF
 48058                           postinc2	equ	0xFDE
 48059                           postdec2	equ	0xFDD
 48060                           plusw2	equ	0xFDB
 48061                           fsr2h	equ	0xFDA
 48062                           fsr2l	equ	0xFD9
 48063                           status	equ	0xFD8
 48064                           
 48065 ;; *************** function i2_memset *****************
 48066 ;; Defined at:
 48067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 48068 ;; Parameters:    Size  Location     Type
 48069 ;;  p1              2    0[COMRAM] PTR void 
 48070 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 48071 ;;  c               2    2[COMRAM] int 
 48072 ;;  n               2    4[COMRAM] unsigned int 
 48073 ;; Auto vars:     Size  Location     Type
 48074 ;;  memset          2    6[COMRAM] PTR unsigned char 
 48075 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 48076 ;; Return value:  Size  Location     Type
 48077 ;;                  2    0[COMRAM] PTR void 
 48078 ;; Registers used:
 48079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48080 ;; Tracked objects:
 48081 ;;		On entry : 0/0
 48082 ;;		On exit  : 0/0
 48083 ;;		Unchanged: 0/0
 48084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48085 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48089 ;;Total ram usage:        8 bytes
 48090 ;; Hardware stack levels used:    1
 48091 ;; This function calls:
 48092 ;;		Nothing
 48093 ;; This function is called by:
 48094 ;;		_USBStdSetCfgHandler
 48095 ;;		i2_USBDeviceInit
 48096 ;; This function uses a non-reentrant model
 48097 ;;
 48098                           
 48099                           	psect	text228
 48100  013C24                     __ptext228:
 48101                           	opt stack 0
 48102  013C24                     i2_memset:
 48103                           	opt stack 15
 48104                           
 48105                           ;incstack = 0
 48106  013C24  C02E  F034         	movff	i2memset@p1,i2memset@p
 48107  013C28  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 48108  013C2C  D008               	goto	i2l12191
 48109  013C2E                     i2l12187:
 48110  013C2E  C034  FFD9         	movff	i2memset@p,fsr2l
 48111  013C32  C035  FFDA         	movff	i2memset@p+1,fsr2h
 48112  013C36  C030  FFDF         	movff	i2memset@c,indf2
 48113  013C3A  4A34               	infsnz	i2memset@p,f,c
 48114  013C3C  2A35               	incf	i2memset@p+1,f,c
 48115  013C3E                     i2l12191:
 48116  013C3E  0632               	decf	i2memset@n,f,c
 48117  013C40  A0D8               	btfss	status,0,c
 48118  013C42  0633               	decf	i2memset@n+1,f,c
 48119  013C44  2832               	incf	i2memset@n,w,c
 48120  013C46  E1F3               	bnz	i2l12187
 48121  013C48  2833               	incf	i2memset@n+1,w,c
 48122  013C4A  B4D8               	btfsc	status,2,c
 48123  013C4C  0012               	return	
 48124  013C4E  D7EF               	goto	i2l12187
 48125  013C50                     __end_ofi2_memset:
 48126                           	opt stack 0
 48127                           tosu	equ	0xFFF
 48128                           tosh	equ	0xFFE
 48129                           tosl	equ	0xFFD
 48130                           pclatu	equ	0xFFB
 48131                           pclath	equ	0xFFA
 48132                           tblptru	equ	0xFF8
 48133                           tblptrh	equ	0xFF7
 48134                           tblptrl	equ	0xFF6
 48135                           tablat	equ	0xFF5
 48136                           prodh	equ	0xFF4
 48137                           prodl	equ	0xFF3
 48138                           intcon	equ	0xFF2
 48139                           intcon2	equ	0xFF1
 48140                           intcon3	equ	0xFF0
 48141                           indf0	equ	0xFEF
 48142                           postinc0	equ	0xFEE
 48143                           fsr0h	equ	0xFEA
 48144                           fsr0l	equ	0xFE9
 48145                           wreg	equ	0xFE8
 48146                           indf1	equ	0xFE7
 48147                           postinc1	equ	0xFE6
 48148                           postdec1	equ	0xFE5
 48149                           plusw1	equ	0xFE3
 48150                           fsr1h	equ	0xFE2
 48151                           fsr1l	equ	0xFE1
 48152                           indf2	equ	0xFDF
 48153                           postinc2	equ	0xFDE
 48154                           postdec2	equ	0xFDD
 48155                           plusw2	equ	0xFDB
 48156                           fsr2h	equ	0xFDA
 48157                           fsr2l	equ	0xFD9
 48158                           status	equ	0xFD8
 48159                           
 48160 ;; *************** function _USBStdGetStatusHandler *****************
 48161 ;; Defined at:
 48162 ;;		line 2131 in file "usb_device.c"
 48163 ;; Parameters:    Size  Location     Type
 48164 ;;		None
 48165 ;; Auto vars:     Size  Location     Type
 48166 ;;  p               2    1[COMRAM] PTR struct __BDT
 48167 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48168 ;; Return value:  Size  Location     Type
 48169 ;;                  1    wreg      void 
 48170 ;; Registers used:
 48171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48172 ;; Tracked objects:
 48173 ;;		On entry : 0/0
 48174 ;;		On exit  : 0/0
 48175 ;;		Unchanged: 0/0
 48176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48180 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48181 ;;Total ram usage:        3 bytes
 48182 ;; Hardware stack levels used:    1
 48183 ;; This function calls:
 48184 ;;		Nothing
 48185 ;; This function is called by:
 48186 ;;		_USBCheckStdRequest
 48187 ;; This function uses a non-reentrant model
 48188 ;;
 48189                           
 48190                           	psect	text229
 48191  011480                     __ptext229:
 48192                           	opt stack 0
 48193  011480                     _USBStdGetStatusHandler:
 48194                           	opt stack 13
 48195                           
 48196                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 48197                           
 48198                           ;incstack = 0
 48199  011480  0E00               	movlw	0
 48200  011482  010D               	movlb	13	; () banked
 48201  011484  6F38               	movwf	56,b	;volatile
 48202                           
 48203                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 48204  011486  0E00               	movlw	0
 48205  011488  010D               	movlb	13	; () banked
 48206  01148A  6F39               	movwf	57,b	;volatile
 48207                           
 48208                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 48209  01148C  D038               	goto	i2l12339
 48210  01148E                     i2l296:
 48211                           
 48212                           ; BSR set to: 13
 48213                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 48214  01148E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48215                           
 48216                           ; BSR set to: 13
 48217                           ;usb_device.c: 2147: }
 48218                           ;usb_device.c: 2149: if(RemoteWakeup == 1)
 48219                           
 48220                           ; BSR set to: 13
 48221                           
 48222                           ; BSR set to: 13
 48223                           ;usb_device.c: 2145: {
 48224                           ;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 48225                           
 48226                           ;usb_device.c: 2144: if(0 == 1)
 48227  011490  0428               	decf	_RemoteWakeup,w,c	;volatile
 48228  011492  A4D8               	btfss	status,2,c
 48229  011494  D040               	goto	i2l299
 48230                           
 48231                           ; BSR set to: 13
 48232                           ;usb_device.c: 2150: {
 48233                           ;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 48234  011496  010D               	movlb	13	; () banked
 48235  011498  8338               	bsf	56,1,b	;volatile
 48236                           
 48237                           ; BSR set to: 13
 48238                           ;usb_device.c: 2152: }
 48239                           ;usb_device.c: 2153: break;
 48240  01149A  D03D               	goto	i2l299
 48241  01149C                     i2l300:
 48242                           
 48243                           ; BSR set to: 13
 48244                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 48245  01149C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48246                           
 48247                           ;usb_device.c: 2156: break;
 48248  01149E  D03B               	goto	i2l299
 48249  0114A0                     i2l301:
 48250                           
 48251                           ; BSR set to: 13
 48252                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 48253  0114A0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48254                           
 48255                           ;usb_device.c: 2162: {
 48256                           ;usb_device.c: 2163: BDT_ENTRY *p;
 48257                           ;usb_device.c: 2165: if(SetupPkt.EPDir == 0)
 48258  0114A2  010D               	movlb	13	; () banked
 48259  0114A4  BF34               	btfsc	52,7,b	;volatile
 48260  0114A6  D00B               	goto	i2l12329
 48261                           
 48262                           ; BSR set to: 13
 48263                           ;usb_device.c: 2166: {
 48264                           ;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 48265  0114A8  010D               	movlb	13	; () banked
 48266  0114AA  5134               	movf	52,w,b	;volatile
 48267  0114AC  0B0F               	andlw	15
 48268  0114AE  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 48269  0114B0  502E               	movf	??_USBStdGetStatusHandler,w,c
 48270  0114B2  0D02               	mullw	2
 48271  0114B4  0ED3               	movlw	low _pBDTEntryOut
 48272  0114B6  24F3               	addwf	prodl,w,c
 48273  0114B8  6ED9               	movwf	fsr2l,c
 48274  0114BA  0E01               	movlw	high _pBDTEntryOut
 48275  0114BC  D00A               	goto	L56
 48276  0114BE                     i2l12329:
 48277                           
 48278                           ; BSR set to: 13
 48279                           ;usb_device.c: 2169: else
 48280                           ;usb_device.c: 2170: {
 48281                           ;usb_device.c: 2171: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 48282  0114BE  010D               	movlb	13	; () banked
 48283  0114C0  5134               	movf	52,w,b	;volatile
 48284  0114C2  0B0F               	andlw	15
 48285  0114C4  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 48286  0114C6  502E               	movf	??_USBStdGetStatusHandler,w,c
 48287  0114C8  0D02               	mullw	2
 48288  0114CA  0E10               	movlw	low _pBDTEntryIn
 48289  0114CC  24F3               	addwf	prodl,w,c
 48290  0114CE  6ED9               	movwf	fsr2l,c
 48291  0114D0  0E00               	movlw	high _pBDTEntryIn
 48292  0114D2                     L56:
 48293  0114D2  20F4               	addwfc	prodh,w,c
 48294  0114D4  6EDA               	movwf	fsr2h,c
 48295  0114D6  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 48296  0114DA  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 48297                           
 48298                           ; BSR set to: 13
 48299                           ;usb_device.c: 2172: }
 48300                           ;usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 48301                           
 48302                           ; BSR set to: 13
 48303  0114DE  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 48304  0114E2  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 48305  0114E6  AEDF               	btfss	indf2,7,c
 48306  0114E8  D016               	goto	i2l299
 48307                           
 48308                           ; BSR set to: 13
 48309  0114EA  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 48310  0114EE  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 48311  0114F2  A4DF               	btfss	indf2,2,c
 48312  0114F4  D010               	goto	i2l299
 48313                           
 48314                           ; BSR set to: 13
 48315                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 48316  0114F6  0E01               	movlw	1
 48317  0114F8  010D               	movlb	13	; () banked
 48318  0114FA  6F38               	movwf	56,b	;volatile
 48319                           
 48320                           ; BSR set to: 13
 48321                           ;usb_device.c: 2177: }
 48322                           ;usb_device.c: 2178: }
 48323                           
 48324                           ; BSR set to: 13
 48325                           ;usb_device.c: 2176: break;
 48326  0114FC  D00C               	goto	i2l299
 48327  0114FE                     i2l12339:
 48328                           
 48329                           ; BSR set to: 13
 48330  0114FE  010D               	movlb	13	; () banked
 48331  011500  5130               	movf	48,w,b	;volatile
 48332  011502  0B1F               	andlw	31
 48333                           
 48334                           ; Switch size 1, requested type "space"
 48335                           ; Number of cases is 3, Range of values is 0 to 2
 48336                           ; switch strategies available:
 48337                           ; Name         Instructions Cycles
 48338                           ; simple_byte           10     6 (average)
 48339                           ;	Chosen strategy is simple_byte
 48340  011504  0A00               	xorlw	0	; case 0
 48341  011506  B4D8               	btfsc	status,2,c
 48342  011508  D7C2               	goto	i2l296
 48343  01150A  0A01               	xorlw	1	; case 1
 48344  01150C  B4D8               	btfsc	status,2,c
 48345  01150E  D7C6               	goto	i2l300
 48346  011510  0A03               	xorlw	3	; case 2
 48347  011512  B4D8               	btfsc	status,2,c
 48348  011514  D7C5               	goto	i2l301
 48349  011516                     i2l299:
 48350                           
 48351                           ; BSR set to: 13
 48352                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 48353  011516  AE0D               	btfss	_inPipes+3,7,c	;volatile
 48354  011518  0012               	return	
 48355                           
 48356                           ; BSR set to: 13
 48357                           ;usb_device.c: 2181: {
 48358                           ;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 48359  01151A  0E38               	movlw	56
 48360  01151C  6E0A               	movwf	_inPipes,c	;volatile
 48361  01151E  0E0D               	movlw	13
 48362  011520  6E0B               	movwf	_inPipes+1,c	;volatile
 48363                           
 48364                           ; BSR set to: 13
 48365                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 48366  011522  800D               	bsf	_inPipes+3,0,c	;volatile
 48367                           
 48368                           ; BSR set to: 13
 48369                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 48370  011524  0E02               	movlw	2
 48371  011526  6E0E               	movwf	_inPipes+4,c	;volatile
 48372  011528  0012               	return	
 48373  01152A                     __end_of_USBStdGetStatusHandler:
 48374                           	opt stack 0
 48375                           tosu	equ	0xFFF
 48376                           tosh	equ	0xFFE
 48377                           tosl	equ	0xFFD
 48378                           pclatu	equ	0xFFB
 48379                           pclath	equ	0xFFA
 48380                           tblptru	equ	0xFF8
 48381                           tblptrh	equ	0xFF7
 48382                           tblptrl	equ	0xFF6
 48383                           tablat	equ	0xFF5
 48384                           prodh	equ	0xFF4
 48385                           prodl	equ	0xFF3
 48386                           intcon	equ	0xFF2
 48387                           intcon2	equ	0xFF1
 48388                           intcon3	equ	0xFF0
 48389                           indf0	equ	0xFEF
 48390                           postinc0	equ	0xFEE
 48391                           fsr0h	equ	0xFEA
 48392                           fsr0l	equ	0xFE9
 48393                           wreg	equ	0xFE8
 48394                           indf1	equ	0xFE7
 48395                           postinc1	equ	0xFE6
 48396                           postdec1	equ	0xFE5
 48397                           plusw1	equ	0xFE3
 48398                           fsr1h	equ	0xFE2
 48399                           fsr1l	equ	0xFE1
 48400                           indf2	equ	0xFDF
 48401                           postinc2	equ	0xFDE
 48402                           postdec2	equ	0xFDD
 48403                           plusw2	equ	0xFDB
 48404                           fsr2h	equ	0xFDA
 48405                           fsr2l	equ	0xFD9
 48406                           status	equ	0xFD8
 48407                           
 48408 ;; *************** function _USBStdGetDscHandler *****************
 48409 ;; Defined at:
 48410 ;;		line 2045 in file "usb_device.c"
 48411 ;; Parameters:    Size  Location     Type
 48412 ;;		None
 48413 ;; Auto vars:     Size  Location     Type
 48414 ;;		None
 48415 ;; Return value:  Size  Location     Type
 48416 ;;                  1    wreg      void 
 48417 ;; Registers used:
 48418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48419 ;; Tracked objects:
 48420 ;;		On entry : 0/0
 48421 ;;		On exit  : 0/0
 48422 ;;		Unchanged: 0/0
 48423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48428 ;;Total ram usage:        2 bytes
 48429 ;; Hardware stack levels used:    1
 48430 ;; This function calls:
 48431 ;;		Nothing
 48432 ;; This function is called by:
 48433 ;;		_USBCheckStdRequest
 48434 ;; This function uses a non-reentrant model
 48435 ;;
 48436                           
 48437                           	psect	text230
 48438  00F13C                     __ptext230:
 48439                           	opt stack 0
 48440  00F13C                     _USBStdGetDscHandler:
 48441                           	opt stack 13
 48442                           
 48443                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 48444                           
 48445                           ; BSR set to: 13
 48446                           ;incstack = 0
 48447  00F13C  0E80               	movlw	128
 48448  00F13E  010D               	movlb	13	; () banked
 48449  00F140  1930               	xorwf	48,w,b	;volatile
 48450  00F142  A4D8               	btfss	status,2,c
 48451  00F144  0012               	return	
 48452                           
 48453                           ; BSR set to: 13
 48454                           ;usb_device.c: 2048: {
 48455                           ;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 48456  00F146  0EC0               	movlw	192
 48457  00F148  6E0D               	movwf	_inPipes+3,c	;volatile
 48458                           
 48459                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 48460  00F14A  D085               	goto	i2l12317
 48461  00F14C                     i2l12291:
 48462                           
 48463                           ; BSR set to: 13
 48464                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 48465  00F14C  0E18               	movlw	low _device_dsc
 48466  00F14E  6E0A               	movwf	_inPipes,c	;volatile
 48467  00F150  0E94               	movlw	high _device_dsc
 48468  00F152  6E0B               	movwf	_inPipes+1,c	;volatile
 48469                           
 48470                           ; BSR set to: 13
 48471                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 48472  00F154  0E00               	movlw	0
 48473  00F156  6E0F               	movwf	_inPipes+5,c	;volatile
 48474  00F158  0E12               	movlw	18
 48475  00F15A  6E0E               	movwf	_inPipes+4,c	;volatile
 48476                           
 48477                           ;usb_device.c: 2060: break;
 48478  00F15C  0012               	return	
 48479  00F15E                     i2l12295:
 48480                           
 48481                           ; BSR set to: 13
 48482                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 48483  00F15E  010D               	movlb	13	; () banked
 48484  00F160  5132               	movf	50,w,b	;volatile
 48485  00F162  A4D8               	btfss	status,2,c
 48486  00F164  D043               	goto	i2l12303
 48487                           
 48488                           ; BSR set to: 13
 48489                           ;usb_device.c: 2066: {
 48490                           ;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 48491  00F166  010D               	movlb	13	; () banked
 48492  00F168  5132               	movf	50,w,b	;volatile
 48493  00F16A  0D02               	mullw	2
 48494  00F16C  0E19               	movlw	low _USB_CD_Ptr
 48495  00F16E  24F3               	addwf	prodl,w,c
 48496  00F170  6EF6               	movwf	tblptrl,c
 48497  00F172  0E93               	movlw	high _USB_CD_Ptr
 48498  00F174  20F4               	addwfc	prodh,w,c
 48499  00F176  6EF7               	movwf	tblptrh,c
 48500  00F178                     	if	1	;There are 3 active tblptr bytes
 48501  00F178  6AF8               	clrf	tblptru,c
 48502  00F17A  0E00               	movlw	low (__mediumconst shr (0+16))
 48503  00F17C  22F8               	addwfc	tblptru,f,c
 48504  00F17E                     	endif
 48505  00F17E  0009               	tblrd		*+
 48506  00F180  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 48507  00F184  000A               	tblrd		*-
 48508  00F186  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 48509                           
 48510                           ; BSR set to: 13
 48511                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 48512  00F18A  0E02               	movlw	2
 48513  00F18C  240A               	addwf	_inPipes,w,c	;volatile
 48514  00F18E  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48515  00F190  0E00               	movlw	0
 48516  00F192  200B               	addwfc	_inPipes+1,w,c	;volatile
 48517  00F194  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 48518  00F196  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 48519  00F19A  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 48520  00F19E  0E00               	movlw	low (__mediumconst shr (0+16))
 48521  00F1A0  6EF8               	movwf	tblptru,c
 48522  00F1A2  0E0E               	movlw	(high __ramtop+-1)
 48523  00F1A4  64F7               	cpfsgt	tblptrh,c
 48524  00F1A6  D003               	bra	i2u979_47
 48525  00F1A8  0008               	tblrd		*
 48526  00F1AA  50F5               	movf	tablat,w,c
 48527  00F1AC  D005               	bra	i2u979_40
 48528  00F1AE                     i2u979_47:
 48529  00F1AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 48530  00F1B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 48531  00F1B6  50EF               	movf	indf0,w,c
 48532  00F1B8                     i2u979_40:
 48533  00F1B8  6E0E               	movwf	_inPipes+4,c	;volatile
 48534                           
 48535                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 48536  00F1BA  0E03               	movlw	3
 48537  00F1BC  240A               	addwf	_inPipes,w,c	;volatile
 48538  00F1BE  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48539  00F1C0  0E00               	movlw	0
 48540  00F1C2  200B               	addwfc	_inPipes+1,w,c	;volatile
 48541  00F1C4  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 48542  00F1C6  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 48543  00F1CA  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 48544  00F1CE  0E00               	movlw	low (__mediumconst shr (0+16))
 48545  00F1D0  6EF8               	movwf	tblptru,c
 48546  00F1D2  0E0E               	movlw	(high __ramtop+-1)
 48547  00F1D4  64F7               	cpfsgt	tblptrh,c
 48548  00F1D6  D003               	bra	i2u980_47
 48549  00F1D8  0008               	tblrd		*
 48550  00F1DA  50F5               	movf	tablat,w,c
 48551  00F1DC  D005               	bra	i2u980_40
 48552  00F1DE                     i2u980_47:
 48553  00F1DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 48554  00F1E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 48555  00F1E6  50EF               	movf	indf0,w,c
 48556  00F1E8                     i2u980_40:
 48557  00F1E8  6E0F               	movwf	_inPipes+5,c	;volatile
 48558                           
 48559                           ;usb_device.c: 2078: }
 48560  00F1EA  0012               	return	
 48561  00F1EC                     i2l12303:
 48562                           
 48563                           ;usb_device.c: 2079: else
 48564                           ;usb_device.c: 2080: {
 48565                           ;usb_device.c: 2081: inPipes[0].info.Val = 0;
 48566  00F1EC  0E00               	movlw	0
 48567  00F1EE  6E0D               	movwf	_inPipes+3,c	;volatile
 48568                           
 48569                           ;usb_device.c: 2082: }
 48570                           ;usb_device.c: 2083: break;
 48571  00F1F0  0012               	return	
 48572  00F1F2                     i2l12305:
 48573                           
 48574                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 48575  00F1F2  0E04               	movlw	4
 48576  00F1F4  010D               	movlb	13	; () banked
 48577  00F1F6  6132               	cpfslt	50,b	;volatile
 48578  00F1F8  D028               	goto	i2l12311
 48579                           
 48580                           ; BSR set to: 13
 48581                           ;usb_device.c: 2089: {
 48582                           ;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 48583  00F1FA  010D               	movlb	13	; () banked
 48584  00F1FC  5132               	movf	50,w,b	;volatile
 48585  00F1FE  0D02               	mullw	2
 48586  00F200  0E07               	movlw	low _USB_SD_Ptr
 48587  00F202  24F3               	addwf	prodl,w,c
 48588  00F204  6EF6               	movwf	tblptrl,c
 48589  00F206  0E93               	movlw	high _USB_SD_Ptr
 48590  00F208  20F4               	addwfc	prodh,w,c
 48591  00F20A  6EF7               	movwf	tblptrh,c
 48592  00F20C                     	if	1	;There are 3 active tblptr bytes
 48593  00F20C  6AF8               	clrf	tblptru,c
 48594  00F20E  0E00               	movlw	low (__mediumconst shr (0+16))
 48595  00F210  22F8               	addwfc	tblptru,f,c
 48596  00F212                     	endif
 48597  00F212  0009               	tblrd		*+
 48598  00F214  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 48599  00F218  000A               	tblrd		*-
 48600  00F21A  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 48601                           
 48602                           ; BSR set to: 13
 48603                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 48604  00F21E  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 48605  00F222  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 48606  00F226  0E00               	movlw	low (__mediumconst shr (0+16))
 48607  00F228  6EF8               	movwf	tblptru,c
 48608  00F22A  0E0E               	movlw	(high __ramtop+-1)
 48609  00F22C  64F7               	cpfsgt	tblptrh,c
 48610  00F22E  D003               	bra	i2u982_47
 48611  00F230  0008               	tblrd		*
 48612  00F232  50F5               	movf	tablat,w,c
 48613  00F234  D005               	bra	i2u982_40
 48614  00F236                     i2u982_47:
 48615  00F236  CFF6 FFE9          	movff	tblptrl,fsr0l
 48616  00F23A  CFF7 FFEA          	movff	tblptrh,fsr0h
 48617  00F23E  50EF               	movf	indf0,w,c
 48618  00F240                     i2u982_40:
 48619  00F240  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48620  00F242  502E               	movf	??_USBStdGetDscHandler,w,c
 48621  00F244  6E0E               	movwf	_inPipes+4,c	;volatile
 48622  00F246  6A0F               	clrf	_inPipes+5,c	;volatile
 48623                           
 48624                           ;usb_device.c: 2094: }
 48625  00F248  0012               	return	
 48626  00F24A                     i2l12311:
 48627                           
 48628                           ;usb_device.c: 2104: else
 48629                           ;usb_device.c: 2105: {
 48630                           ;usb_device.c: 2106: inPipes[0].info.Val = 0;
 48631  00F24A  0E00               	movlw	0
 48632  00F24C  6E0D               	movwf	_inPipes+3,c	;volatile
 48633                           
 48634                           ;usb_device.c: 2107: }
 48635                           ;usb_device.c: 2108: break;
 48636  00F24E  0012               	return	
 48637  00F250                     i2l12313:
 48638                           
 48639                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 48640  00F250  0E00               	movlw	0
 48641  00F252  6E0D               	movwf	_inPipes+3,c	;volatile
 48642                           
 48643                           ;usb_device.c: 2112: }
 48644                           
 48645                           ;usb_device.c: 2111: break;
 48646  00F254  0012               	return	
 48647  00F256                     i2l12317:
 48648  00F256  010D               	movlb	13	; () banked
 48649  00F258  5133               	movf	51,w,b	;volatile
 48650                           
 48651                           ; Switch size 1, requested type "space"
 48652                           ; Number of cases is 3, Range of values is 1 to 3
 48653                           ; switch strategies available:
 48654                           ; Name         Instructions Cycles
 48655                           ; simple_byte           10     6 (average)
 48656                           ;	Chosen strategy is simple_byte
 48657  00F25A  0A01               	xorlw	1	; case 1
 48658  00F25C  B4D8               	btfsc	status,2,c
 48659  00F25E  D776               	goto	i2l12291
 48660  00F260  0A03               	xorlw	3	; case 2
 48661  00F262  B4D8               	btfsc	status,2,c
 48662  00F264  D77C               	goto	i2l12295
 48663  00F266  0A01               	xorlw	1	; case 3
 48664  00F268  B4D8               	btfsc	status,2,c
 48665  00F26A  D7C3               	goto	i2l12305
 48666  00F26C  D7F1               	goto	i2l12313
 48667  00F26E                     __end_of_USBStdGetDscHandler:
 48668                           	opt stack 0
 48669                           tosu	equ	0xFFF
 48670                           tosh	equ	0xFFE
 48671                           tosl	equ	0xFFD
 48672                           pclatu	equ	0xFFB
 48673                           pclath	equ	0xFFA
 48674                           tblptru	equ	0xFF8
 48675                           tblptrh	equ	0xFF7
 48676                           tblptrl	equ	0xFF6
 48677                           tablat	equ	0xFF5
 48678                           prodh	equ	0xFF4
 48679                           prodl	equ	0xFF3
 48680                           intcon	equ	0xFF2
 48681                           intcon2	equ	0xFF1
 48682                           intcon3	equ	0xFF0
 48683                           indf0	equ	0xFEF
 48684                           postinc0	equ	0xFEE
 48685                           fsr0h	equ	0xFEA
 48686                           fsr0l	equ	0xFE9
 48687                           wreg	equ	0xFE8
 48688                           indf1	equ	0xFE7
 48689                           postinc1	equ	0xFE6
 48690                           postdec1	equ	0xFE5
 48691                           plusw1	equ	0xFE3
 48692                           fsr1h	equ	0xFE2
 48693                           fsr1l	equ	0xFE1
 48694                           indf2	equ	0xFDF
 48695                           postinc2	equ	0xFDE
 48696                           postdec2	equ	0xFDD
 48697                           plusw2	equ	0xFDB
 48698                           fsr2h	equ	0xFDA
 48699                           fsr2l	equ	0xFD9
 48700                           status	equ	0xFD8
 48701                           
 48702 ;; *************** function _USBStdFeatureReqHandler *****************
 48703 ;; Defined at:
 48704 ;;		line 2756 in file "usb_device.c"
 48705 ;; Parameters:    Size  Location     Type
 48706 ;;		None
 48707 ;; Auto vars:     Size  Location     Type
 48708 ;;  p               2   27[COMRAM] PTR struct __BDT
 48709 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48710 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 48711 ;;		 -> UEP0(1), 
 48712 ;;  current_ep_d    1   26[COMRAM] struct .
 48713 ;; Return value:  Size  Location     Type
 48714 ;;                  1    wreg      void 
 48715 ;; Registers used:
 48716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48717 ;; Tracked objects:
 48718 ;;		On entry : 0/0
 48719 ;;		On exit  : 0/0
 48720 ;;		Unchanged: 0/0
 48721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48723 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48726 ;;Total ram usage:        6 bytes
 48727 ;; Hardware stack levels used:    1
 48728 ;; Hardware stack levels required when called:    4
 48729 ;; This function calls:
 48730 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48731 ;; This function is called by:
 48732 ;;		_USBCheckStdRequest
 48733 ;; This function uses a non-reentrant model
 48734 ;;
 48735                           
 48736                           	psect	text231
 48737  00CF84                     __ptext231:
 48738                           	opt stack 0
 48739  00CF84                     _USBStdFeatureReqHandler:
 48740                           	opt stack 9
 48741                           
 48742                           ;usb_device.c: 2758: BDT_ENTRY *p;
 48743                           ;usb_device.c: 2759: EP_STATUS current_ep_data;
 48744                           ;usb_device.c: 2763: unsigned char* pUEP;
 48745                           ;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&
 48746                           ;usb_device.c: 2802: (SetupPkt.Recipient == (0x00)))
 48747                           
 48748                           ;incstack = 0
 48749  00CF84  010D               	movlb	13	; () banked
 48750  00CF86  0532               	decf	50,w,b	;volatile
 48751  00CF88  A4D8               	btfss	status,2,c
 48752  00CF8A  D010               	goto	i2l373
 48753                           
 48754                           ; BSR set to: 13
 48755  00CF8C  010D               	movlb	13	; () banked
 48756  00CF8E  5130               	movf	48,w,b	;volatile
 48757  00CF90  0B1F               	andlw	31
 48758  00CF92  0900               	iorlw	0
 48759  00CF94  A4D8               	btfss	status,2,c
 48760  00CF96  D00A               	goto	i2l373
 48761                           
 48762                           ; BSR set to: 13
 48763                           ;usb_device.c: 2803: {
 48764                           ;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 48765  00CF98  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48766                           
 48767                           ; BSR set to: 13
 48768                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 48769  00CF9A  0E03               	movlw	3
 48770  00CF9C  010D               	movlb	13	; () banked
 48771  00CF9E  1931               	xorwf	49,w,b	;volatile
 48772  00CFA0  A4D8               	btfss	status,2,c
 48773  00CFA2  D002               	goto	i2l18507
 48774                           
 48775                           ; BSR set to: 13
 48776                           ;usb_device.c: 2806: RemoteWakeup = 1;
 48777  00CFA4  0E01               	movlw	1
 48778  00CFA6  D001               	goto	L57
 48779  00CFA8                     i2l18507:
 48780                           
 48781                           ; BSR set to: 13
 48782                           ;usb_device.c: 2807: else
 48783                           ;usb_device.c: 2808: RemoteWakeup = 0;
 48784  00CFA8  0E00               	movlw	0
 48785  00CFAA                     L57:
 48786  00CFAA  6E28               	movwf	_RemoteWakeup,c	;volatile
 48787  00CFAC                     i2l373:
 48788                           
 48789                           ; BSR set to: 13
 48790                           ;usb_device.c: 2809: }
 48791                           ;usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&
 48792                           ;usb_device.c: 2813: (SetupPkt.Recipient == (0x02))&&
 48793                           ;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 48794                           ;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 48795  00CFAC  010D               	movlb	13	; () banked
 48796  00CFAE  5132               	movf	50,w,b	;volatile
 48797  00CFB0  A4D8               	btfss	status,2,c
 48798  00CFB2  0012               	return	
 48799                           
 48800                           ; BSR set to: 13
 48801  00CFB4  010D               	movlb	13	; () banked
 48802  00CFB6  5130               	movf	48,w,b	;volatile
 48803  00CFB8  0B1F               	andlw	31
 48804  00CFBA  0A02               	xorlw	2
 48805  00CFBC  A4D8               	btfss	status,2,c
 48806  00CFBE  0012               	return	
 48807                           
 48808                           ; BSR set to: 13
 48809  00CFC0  010D               	movlb	13	; () banked
 48810  00CFC2  5134               	movf	52,w,b	;volatile
 48811  00CFC4  0B0F               	andlw	15
 48812  00CFC6  0900               	iorlw	0
 48813  00CFC8  B4D8               	btfsc	status,2,c
 48814  00CFCA  0012               	return	
 48815                           
 48816                           ; BSR set to: 13
 48817  00CFCC  010D               	movlb	13	; () banked
 48818  00CFCE  5134               	movf	52,w,b	;volatile
 48819  00CFD0  0B0F               	andlw	15
 48820  00CFD2  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48821  00CFD4  0E03               	movlw	3
 48822  00CFD6  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 48823  00CFD8  0012               	return	
 48824                           
 48825                           ; BSR set to: 13
 48826  00CFDA  0E20               	movlw	32
 48827  00CFDC  182B               	xorwf	_USBDeviceState,w,c	;volatile
 48828  00CFDE  A4D8               	btfss	status,2,c
 48829  00CFE0  0012               	return	
 48830                           
 48831                           ; BSR set to: 13
 48832                           ;usb_device.c: 2816: {
 48833                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 48834  00CFE2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48835                           
 48836                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 48837  00CFE4  010D               	movlb	13	; () banked
 48838  00CFE6  BF34               	btfsc	52,7,b	;volatile
 48839  00CFE8  D01B               	goto	i2l18521
 48840                           
 48841                           ; BSR set to: 13
 48842                           ;usb_device.c: 2823: {
 48843                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 48844  00CFEA  010D               	movlb	13	; () banked
 48845  00CFEC  5134               	movf	52,w,b	;volatile
 48846  00CFEE  0B0F               	andlw	15
 48847  00CFF0  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48848  00CFF2  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48849  00CFF4  0D02               	mullw	2
 48850  00CFF6  0ED3               	movlw	low _pBDTEntryOut
 48851  00CFF8  24F3               	addwf	prodl,w,c
 48852  00CFFA  6ED9               	movwf	fsr2l,c
 48853  00CFFC  0E01               	movlw	high _pBDTEntryOut
 48854  00CFFE  20F4               	addwfc	prodh,w,c
 48855  00D000  6EDA               	movwf	fsr2h,c
 48856  00D002  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 48857  00D006  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 48858                           
 48859                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 48860  00D00A  010D               	movlb	13	; () banked
 48861  00D00C  5134               	movf	52,w,b	;volatile
 48862  00D00E  0B0F               	andlw	15
 48863  00D010  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48864  00D012  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48865  00D014  0D01               	mullw	1
 48866  00D016  0EE1               	movlw	low _ep_data_out
 48867  00D018  24F3               	addwf	prodl,w,c
 48868  00D01A  6ED9               	movwf	fsr2l,c
 48869  00D01C  0E01               	movlw	high _ep_data_out
 48870  00D01E  D01A               	goto	L58
 48871  00D020                     i2l18521:
 48872                           
 48873                           ; BSR set to: 13
 48874                           ;usb_device.c: 2827: else
 48875                           ;usb_device.c: 2828: {
 48876                           ;usb_device.c: 2829: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 48877  00D020  010D               	movlb	13	; () banked
 48878  00D022  5134               	movf	52,w,b	;volatile
 48879  00D024  0B0F               	andlw	15
 48880  00D026  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48881  00D028  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48882  00D02A  0D02               	mullw	2
 48883  00D02C  0E10               	movlw	low _pBDTEntryIn
 48884  00D02E  24F3               	addwf	prodl,w,c
 48885  00D030  6ED9               	movwf	fsr2l,c
 48886  00D032  0E00               	movlw	high _pBDTEntryIn
 48887  00D034  20F4               	addwfc	prodh,w,c
 48888  00D036  6EDA               	movwf	fsr2h,c
 48889  00D038  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 48890  00D03C  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 48891                           
 48892                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 48893  00D040  010D               	movlb	13	; () banked
 48894  00D042  5134               	movf	52,w,b	;volatile
 48895  00D044  0B0F               	andlw	15
 48896  00D046  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48897  00D048  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48898  00D04A  0D01               	mullw	1
 48899  00D04C  0EE4               	movlw	low _ep_data_in
 48900  00D04E  24F3               	addwf	prodl,w,c
 48901  00D050  6ED9               	movwf	fsr2l,c
 48902  00D052  0E01               	movlw	high _ep_data_in
 48903  00D054                     L58:
 48904  00D054  20F4               	addwfc	prodh,w,c
 48905  00D056  6EDA               	movwf	fsr2h,c
 48906  00D058  50DF               	movf	indf2,w,c
 48907  00D05A  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 48908                           
 48909                           ; BSR set to: 13
 48910                           ;usb_device.c: 2831: }
 48911                           ;usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 48912                           
 48913                           ; BSR set to: 13
 48914  00D05C  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 48915  00D05E  D006               	goto	i2l18527
 48916                           
 48917                           ; BSR set to: 13
 48918                           ;usb_device.c: 2838: {
 48919                           ;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 48920  00D060  0EFB               	movlw	251
 48921  00D062  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 48922  00D064  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48923  00D066  0EFF               	movlw	255
 48924  00D068  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 48925  00D06A  D004               	goto	L59
 48926  00D06C                     i2l18527:
 48927                           
 48928                           ; BSR set to: 13
 48929                           ;usb_device.c: 2841: else
 48930                           ;usb_device.c: 2842: {
 48931                           ;usb_device.c: 2843: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 48932  00D06C  0E04               	movlw	4
 48933  00D06E  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 48934  00D070  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48935  00D072  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 48936  00D074                     L59:
 48937  00D074  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 48938                           
 48939                           ; BSR set to: 13
 48940                           ;usb_device.c: 2844: }
 48941                           ;usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 48942                           
 48943                           ; BSR set to: 13
 48944  00D076  010D               	movlb	13	; () banked
 48945  00D078  BF34               	btfsc	52,7,b	;volatile
 48946  00D07A  D00B               	goto	i2l18533
 48947                           
 48948                           ; BSR set to: 13
 48949                           ;usb_device.c: 2850: {
 48950                           ;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 48951  00D07C  010D               	movlb	13	; () banked
 48952  00D07E  5134               	movf	52,w,b	;volatile
 48953  00D080  0B0F               	andlw	15
 48954  00D082  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48955  00D084  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48956  00D086  0D02               	mullw	2
 48957  00D088  0ED3               	movlw	low _pBDTEntryOut
 48958  00D08A  24F3               	addwf	prodl,w,c
 48959  00D08C  6ED9               	movwf	fsr2l,c
 48960  00D08E  0E01               	movlw	high _pBDTEntryOut
 48961  00D090  D00A               	goto	L60
 48962  00D092                     i2l18533:
 48963                           
 48964                           ; BSR set to: 13
 48965                           ;usb_device.c: 2853: else
 48966                           ;usb_device.c: 2854: {
 48967                           ;usb_device.c: 2855: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 48968  00D092  010D               	movlb	13	; () banked
 48969  00D094  5134               	movf	52,w,b	;volatile
 48970  00D096  0B0F               	andlw	15
 48971  00D098  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48972  00D09A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48973  00D09C  0D02               	mullw	2
 48974  00D09E  0E10               	movlw	low _pBDTEntryIn
 48975  00D0A0  24F3               	addwf	prodl,w,c
 48976  00D0A2  6ED9               	movwf	fsr2l,c
 48977  00D0A4  0E00               	movlw	high _pBDTEntryIn
 48978  00D0A6                     L60:
 48979  00D0A6  20F4               	addwfc	prodh,w,c
 48980  00D0A8  6EDA               	movwf	fsr2h,c
 48981  00D0AA  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 48982  00D0AE  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 48983                           
 48984                           ; BSR set to: 13
 48985                           ;usb_device.c: 2856: }
 48986                           ;usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 48987                           
 48988                           ; BSR set to: 13
 48989  00D0B2  0E03               	movlw	3
 48990  00D0B4  010D               	movlb	13	; () banked
 48991  00D0B6  1931               	xorwf	49,w,b	;volatile
 48992  00D0B8  A4D8               	btfss	status,2,c
 48993  00D0BA  D02F               	goto	i2l18549
 48994                           
 48995                           ; BSR set to: 13
 48996                           ;usb_device.c: 2860: {
 48997                           ;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 48998  00D0BC  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48999  00D0C0  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49000  00D0C4  AEDF               	btfss	indf2,7,c
 49001  00D0C6  D01C               	goto	i2l18545
 49002                           
 49003                           ; BSR set to: 13
 49004                           ;usb_device.c: 2862: {
 49005                           ;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 49006  00D0C8  010D               	movlb	13	; () banked
 49007  00D0CA  BF34               	btfsc	52,7,b	;volatile
 49008  00D0CC  D00B               	goto	i2l18543
 49009                           
 49010                           ; BSR set to: 13
 49011                           ;usb_device.c: 2866: {
 49012                           ;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 49013  00D0CE  010D               	movlb	13	; () banked
 49014  00D0D0  5134               	movf	52,w,b	;volatile
 49015  00D0D2  0B0F               	andlw	15
 49016  00D0D4  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49017  00D0D6  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49018  00D0D8  0D01               	mullw	1
 49019  00D0DA  0EE1               	movlw	low _ep_data_out
 49020  00D0DC  24F3               	addwf	prodl,w,c
 49021  00D0DE  6ED9               	movwf	fsr2l,c
 49022  00D0E0  0E01               	movlw	high _ep_data_out
 49023  00D0E2  D00A               	goto	L61
 49024  00D0E4                     i2l18543:
 49025                           
 49026                           ;usb_device.c: 2869: else
 49027                           ;usb_device.c: 2870: {
 49028                           ;usb_device.c: 2871: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 49029  00D0E4  010D               	movlb	13	; () banked
 49030  00D0E6  5134               	movf	52,w,b	;volatile
 49031  00D0E8  0B0F               	andlw	15
 49032  00D0EA  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49033  00D0EC  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49034  00D0EE  0D01               	mullw	1
 49035  00D0F0  0EE4               	movlw	low _ep_data_in
 49036  00D0F2  24F3               	addwf	prodl,w,c
 49037  00D0F4  6ED9               	movwf	fsr2l,c
 49038  00D0F6  0E01               	movlw	high _ep_data_in
 49039  00D0F8                     L61:
 49040  00D0F8  20F4               	addwfc	prodh,w,c
 49041  00D0FA  6EDA               	movwf	fsr2h,c
 49042  00D0FC  0101               	movlb	1	; () banked
 49043  00D0FE  82DF               	bsf	indf2,1,c
 49044  00D100                     i2l18545:
 49045                           
 49046                           ;usb_device.c: 2872: }
 49047                           ;usb_device.c: 2873: }
 49048                           ;usb_device.c: 2876: p->STAT.Val |= 0x04;
 49049  00D100  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49050  00D104  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49051  00D108  0E00               	movlw	0
 49052  00D10A  84DB               	bsf	plusw2,2,c
 49053                           
 49054                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 49055  00D10C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49056  00D110  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49057  00D114  0E00               	movlw	0
 49058  00D116  8EDB               	bsf	plusw2,7,c
 49059                           
 49060                           ;usb_device.c: 2878: }
 49061  00D118  0012               	return	
 49062  00D11A                     i2l18549:
 49063                           
 49064                           ;usb_device.c: 2879: else
 49065                           ;usb_device.c: 2880: {
 49066                           ;usb_device.c: 2884: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 49067  00D11A  0E04               	movlw	4
 49068  00D11C  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 49069  00D11E  6E49               	movwf	USBStdFeatureReqHandler@p,c
 49070  00D120  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 49071  00D122  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 49072                           
 49073                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 49074  00D124  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49075  00D128  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49076  00D12C  AEDF               	btfss	indf2,7,c
 49077  00D12E  D01B               	goto	i2l18559
 49078                           
 49079                           ;usb_device.c: 2887: {
 49080                           ;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 49081  00D130  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49082  00D134  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49083  00D138  0E7F               	movlw	127
 49084  00D13A  16DF               	andwf	indf2,f,c
 49085                           
 49086                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 49087  00D13C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49088  00D140  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49089  00D144  0E00               	movlw	0
 49090  00D146  8CDB               	bsf	plusw2,6,c
 49091                           
 49092                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 49093  00D148  0E00               	movlw	0
 49094  00D14A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49095  00D14C  0E05               	movlw	5
 49096  00D14E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49097  00D150  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 49098  00D154  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 49099  00D158  0E00               	movlw	0
 49100  00D15A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49101  00D15C  0E02               	movlw	2
 49102  00D15E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49103  00D160  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49104                           
 49105                           ;usb_device.c: 2893: }
 49106  00D164  D006               	goto	i2l18561
 49107  00D166                     i2l18559:
 49108                           
 49109                           ;usb_device.c: 2894: else
 49110                           ;usb_device.c: 2895: {
 49111                           ;usb_device.c: 2897: p->STAT.Val |= 0x40;
 49112  00D166  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49113  00D16A  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49114  00D16E  0E00               	movlw	0
 49115  00D170  8CDB               	bsf	plusw2,6,c
 49116  00D172                     i2l18561:
 49117                           
 49118                           ;usb_device.c: 2898: }
 49119                           ;usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 49120  00D172  0E04               	movlw	4
 49121  00D174  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 49122  00D176  6E49               	movwf	USBStdFeatureReqHandler@p,c
 49123  00D178  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 49124  00D17A  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 49125                           
 49126                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 49127  00D17C  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 49128  00D17E  D006               	goto	i2l392
 49129  00D180  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49130  00D184  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49131  00D188  AEDF               	btfss	indf2,7,c
 49132  00D18A  D031               	goto	i2l18575
 49133  00D18C                     i2l392:
 49134                           
 49135                           ;usb_device.c: 2909: {
 49136                           ;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 49137  00D18C  010D               	movlb	13	; () banked
 49138  00D18E  BF34               	btfsc	52,7,b	;volatile
 49139  00D190  D00B               	goto	i2l18569
 49140                           
 49141                           ; BSR set to: 13
 49142                           ;usb_device.c: 2911: {
 49143                           ;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 49144  00D192  010D               	movlb	13	; () banked
 49145  00D194  5134               	movf	52,w,b	;volatile
 49146  00D196  0B0F               	andlw	15
 49147  00D198  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49148  00D19A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49149  00D19C  0D01               	mullw	1
 49150  00D19E  0EE1               	movlw	low _ep_data_out
 49151  00D1A0  24F3               	addwf	prodl,w,c
 49152  00D1A2  6ED9               	movwf	fsr2l,c
 49153  00D1A4  0E01               	movlw	high _ep_data_out
 49154  00D1A6  D00A               	goto	L62
 49155  00D1A8                     i2l18569:
 49156                           
 49157                           ;usb_device.c: 2914: else
 49158                           ;usb_device.c: 2915: {
 49159                           ;usb_device.c: 2916: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 49160  00D1A8  010D               	movlb	13	; () banked
 49161  00D1AA  5134               	movf	52,w,b	;volatile
 49162  00D1AC  0B0F               	andlw	15
 49163  00D1AE  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49164  00D1B0  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49165  00D1B2  0D01               	mullw	1
 49166  00D1B4  0EE4               	movlw	low _ep_data_in
 49167  00D1B6  24F3               	addwf	prodl,w,c
 49168  00D1B8  6ED9               	movwf	fsr2l,c
 49169  00D1BA  0E01               	movlw	high _ep_data_in
 49170  00D1BC                     L62:
 49171  00D1BC  20F4               	addwfc	prodh,w,c
 49172  00D1BE  6EDA               	movwf	fsr2h,c
 49173  00D1C0  0101               	movlb	1	; () banked
 49174  00D1C2  92DF               	bcf	indf2,1,c
 49175                           
 49176                           ; BSR set to: 1
 49177                           ;usb_device.c: 2917: }
 49178                           ;usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 49179                           
 49180                           ; BSR set to: 1
 49181  00D1C4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49182  00D1C8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49183  00D1CC  0E3B               	movlw	59
 49184  00D1CE  16DF               	andwf	indf2,f,c
 49185                           
 49186                           ; BSR set to: 1
 49187                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 49188  00D1D0  0E00               	movlw	0
 49189  00D1D2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49190  00D1D4  0E05               	movlw	5
 49191  00D1D6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49192  00D1D8  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 49193  00D1DC  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 49194  00D1E0  0E00               	movlw	0
 49195  00D1E2  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49196  00D1E4  0E02               	movlw	2
 49197  00D1E6  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49198  00D1E8  EC0A  F090         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49199                           
 49200                           ;usb_device.c: 2923: }
 49201  00D1EC  D006               	goto	i2l18577
 49202  00D1EE                     i2l18575:
 49203                           
 49204                           ;usb_device.c: 2924: else
 49205                           ;usb_device.c: 2925: {
 49206                           ;usb_device.c: 2927: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 49207  00D1EE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 49208  00D1F2  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 49209  00D1F6  0E3B               	movlw	59
 49210  00D1F8  16DF               	andwf	indf2,f,c
 49211  00D1FA                     i2l18577:
 49212                           
 49213                           ;usb_device.c: 2928: }
 49214                           ;usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 49215  00D1FA  010D               	movlb	13	; () banked
 49216  00D1FC  5134               	movf	52,w,b	;volatile
 49217  00D1FE  0B0F               	andlw	15
 49218  00D200  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 49219  00D202  5045               	movf	??_USBStdFeatureReqHandler,w,c
 49220  00D204  0D01               	mullw	1
 49221  00D206  0E26               	movlw	38
 49222  00D208  24F3               	addwf	prodl,w,c
 49223  00D20A  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 49224  00D20C  0E0F               	movlw	15
 49225  00D20E  20F4               	addwfc	prodh,w,c
 49226  00D210  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 49227                           
 49228                           ; BSR set to: 13
 49229                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 49230  00D212  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 49231  00D216  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 49232  00D21A  0EFE               	movlw	254
 49233  00D21C  16DF               	andwf	indf2,f,c
 49234                           
 49235                           ; BSR set to: 13
 49236  00D21E  0012               	return	
 49237  00D220                     __end_of_USBStdFeatureReqHandler:
 49238                           	opt stack 0
 49239                           tosu	equ	0xFFF
 49240                           tosh	equ	0xFFE
 49241                           tosl	equ	0xFFD
 49242                           pclatu	equ	0xFFB
 49243                           pclath	equ	0xFFA
 49244                           tblptru	equ	0xFF8
 49245                           tblptrh	equ	0xFF7
 49246                           tblptrl	equ	0xFF6
 49247                           tablat	equ	0xFF5
 49248                           prodh	equ	0xFF4
 49249                           prodl	equ	0xFF3
 49250                           intcon	equ	0xFF2
 49251                           intcon2	equ	0xFF1
 49252                           intcon3	equ	0xFF0
 49253                           indf0	equ	0xFEF
 49254                           postinc0	equ	0xFEE
 49255                           fsr0h	equ	0xFEA
 49256                           fsr0l	equ	0xFE9
 49257                           wreg	equ	0xFE8
 49258                           indf1	equ	0xFE7
 49259                           postinc1	equ	0xFE6
 49260                           postdec1	equ	0xFE5
 49261                           plusw1	equ	0xFE3
 49262                           fsr1h	equ	0xFE2
 49263                           fsr1l	equ	0xFE1
 49264                           indf2	equ	0xFDF
 49265                           postinc2	equ	0xFDE
 49266                           postdec2	equ	0xFDD
 49267                           plusw2	equ	0xFDB
 49268                           fsr2h	equ	0xFDA
 49269                           fsr2l	equ	0xFD9
 49270                           status	equ	0xFD8
 49271                           
 49272 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 49273 ;; Defined at:
 49274 ;;		line 54 in file "usb_events.c"
 49275 ;; Parameters:    Size  Location     Type
 49276 ;;  event           2   15[COMRAM] enum E8437
 49277 ;;  pdata           2   17[COMRAM] PTR void 
 49278 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 49279 ;;		 -> BDT(48), 
 49280 ;;  size            2   19[COMRAM] unsigned int 
 49281 ;; Auto vars:     Size  Location     Type
 49282 ;;		None
 49283 ;; Return value:  Size  Location     Type
 49284 ;;                  1    wreg      unsigned char 
 49285 ;; Registers used:
 49286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49287 ;; Tracked objects:
 49288 ;;		On entry : 0/0
 49289 ;;		On exit  : 0/0
 49290 ;;		Unchanged: 0/0
 49291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49292 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49295 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49296 ;;Total ram usage:        8 bytes
 49297 ;; Hardware stack levels used:    1
 49298 ;; Hardware stack levels required when called:    3
 49299 ;; This function calls:
 49300 ;;		_APP_DeviceCustomHIDInitialize
 49301 ;;		_APP_DeviceMSDInitialize
 49302 ;;		_MSDTransferTerminated
 49303 ;;		_USBCheckHIDRequest
 49304 ;;		_USBCheckMSDRequest
 49305 ;;		i2_SYSTEM_Initialize
 49306 ;; This function is called by:
 49307 ;;		_USBDeviceTasks
 49308 ;;		_USBStdSetCfgHandler
 49309 ;;		_USBSuspend
 49310 ;;		_USBWakeFromSuspend
 49311 ;;		_USBCtrlTrfSetupHandler
 49312 ;;		_USBCheckStdRequest
 49313 ;;		_USBStdFeatureReqHandler
 49314 ;; This function uses a non-reentrant model
 49315 ;;
 49316                           
 49317                           	psect	text232
 49318  012014                     __ptext232:
 49319                           	opt stack 0
 49320  012014                     _USER_USB_CALLBACK_EVENT_HANDLER:
 49321                           	opt stack 13
 49322                           
 49323                           ;usb_events.c: 56: switch((int)event)
 49324                           
 49325                           ;incstack = 0
 49326  012014  D019               	goto	i2l18095
 49327  012016                     i2l18079:
 49328                           
 49329                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 49330  012016  0E01               	movlw	1
 49331  012018  EC6E  F099         	call	i2_SYSTEM_Initialize
 49332                           
 49333                           ;usb_events.c: 79: break;
 49334  01201C  0012               	return	
 49335  01201E                     i2l18081:
 49336                           
 49337                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 49338  01201E  0E02               	movlw	2
 49339  012020  EC6E  F099         	call	i2_SYSTEM_Initialize
 49340                           
 49341                           ;usb_events.c: 90: break;
 49342  012024  0012               	return	
 49343  012026                     i2l18083:
 49344                           
 49345                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 49346  012026  EC92  F09C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 49347                           
 49348                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 49349  01202A  EC2A  F0A1         	call	_APP_DeviceMSDInitialize	;wreg free
 49350                           
 49351                           ;usb_events.c: 100: break;
 49352                           
 49353                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 49354                           
 49355                           ;usb_events.c: 97: break;
 49356  01202E  0012               	return	
 49357  012030                     i2l18087:
 49358                           
 49359                           ;usb_events.c: 105: USBCheckHIDRequest();
 49360  012030  EC56  F083         	call	_USBCheckHIDRequest	;wreg free
 49361                           
 49362                           ;usb_events.c: 108: USBCheckMSDRequest();
 49363  012034  EC9B  F084         	call	_USBCheckMSDRequest	;wreg free
 49364                           
 49365                           ;usb_events.c: 112: break;
 49366                           
 49367                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 49368                           
 49369                           ;usb_events.c: 109: break;
 49370  012038  0012               	return	
 49371  01203A                     i2l18091:
 49372                           
 49373                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 49374  01203A  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 49375  01203E  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 49376  012042  EC43  F099         	call	_MSDTransferTerminated	;wreg free
 49377                           
 49378                           ;usb_events.c: 129: }
 49379                           
 49380                           ;usb_events.c: 128: break;
 49381                           
 49382                           ;usb_events.c: 127: default:
 49383                           
 49384                           ;usb_events.c: 125: break;
 49385  012046  0012               	return	
 49386  012048                     i2l18095:
 49387  012048  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 49388  01204C  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 49389                           
 49390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 49391                           ; Switch size 1, requested type "space"
 49392                           ; Number of cases is 2, Range of values is 0 to 127
 49393                           ; switch strategies available:
 49394                           ; Name         Instructions Cycles
 49395                           ; simple_byte            7     4 (average)
 49396                           ;	Chosen strategy is simple_byte
 49397  012050  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 49398  012052  0A00               	xorlw	0	; case 0
 49399  012054  B4D8               	btfsc	status,2,c
 49400  012056  D004               	goto	i2l23395
 49401  012058  0A7F               	xorlw	127	; case 127
 49402  01205A  A4D8               	btfss	status,2,c
 49403  01205C  0012               	return	
 49404  01205E  D01A               	goto	i2l23397
 49405  012060                     i2l23395:
 49406                           
 49407                           ; Switch size 1, requested type "space"
 49408                           ; Number of cases is 8, Range of values is 1 to 117
 49409                           ; switch strategies available:
 49410                           ; Name         Instructions Cycles
 49411                           ; simple_byte           25    13 (average)
 49412                           ;	Chosen strategy is simple_byte
 49413  012060  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 49414  012062  0A01               	xorlw	1	; case 1
 49415  012064  B4D8               	btfsc	status,2,c
 49416  012066  D7DF               	goto	i2l18083
 49417  012068  0A03               	xorlw	3	; case 2
 49418  01206A  B4D8               	btfsc	status,2,c
 49419  01206C  0012               	return	
 49420  01206E  0A01               	xorlw	1	; case 3
 49421  012070  B4D8               	btfsc	status,2,c
 49422  012072  D7DE               	goto	i2l18087
 49423  012074  0A06               	xorlw	6	; case 5
 49424  012076  B4D8               	btfsc	status,2,c
 49425  012078  D7E0               	goto	i2l18091
 49426  01207A  0A77               	xorlw	119	; case 114
 49427  01207C  B4D8               	btfsc	status,2,c
 49428  01207E  0012               	return	
 49429  012080  0A01               	xorlw	1	; case 115
 49430  012082  B4D8               	btfsc	status,2,c
 49431  012084  0012               	return	
 49432  012086  0A07               	xorlw	7	; case 116
 49433  012088  B4D8               	btfsc	status,2,c
 49434  01208A  D7C9               	goto	i2l18081
 49435  01208C  0A01               	xorlw	1	; case 117
 49436  01208E  A4D8               	btfss	status,2,c
 49437  012090  0012               	return	
 49438  012092  D7C1               	goto	i2l18079
 49439  012094                     i2l23397:
 49440                           
 49441                           ; Switch size 1, requested type "space"
 49442                           ; Number of cases is 1, Range of values is 255 to 255
 49443                           ; switch strategies available:
 49444                           ; Name         Instructions Cycles
 49445                           ; simple_byte            4     3 (average)
 49446                           ;	Chosen strategy is simple_byte
 49447  012094  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 49448  012096  0AFF               	xorlw	255	; case 255
 49449  012098  0012               	return	
 49450  01209A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 49451                           	opt stack 0
 49452                           tosu	equ	0xFFF
 49453                           tosh	equ	0xFFE
 49454                           tosl	equ	0xFFD
 49455                           pclatu	equ	0xFFB
 49456                           pclath	equ	0xFFA
 49457                           tblptru	equ	0xFF8
 49458                           tblptrh	equ	0xFF7
 49459                           tblptrl	equ	0xFF6
 49460                           tablat	equ	0xFF5
 49461                           prodh	equ	0xFF4
 49462                           prodl	equ	0xFF3
 49463                           intcon	equ	0xFF2
 49464                           intcon2	equ	0xFF1
 49465                           intcon3	equ	0xFF0
 49466                           indf0	equ	0xFEF
 49467                           postinc0	equ	0xFEE
 49468                           fsr0h	equ	0xFEA
 49469                           fsr0l	equ	0xFE9
 49470                           wreg	equ	0xFE8
 49471                           indf1	equ	0xFE7
 49472                           postinc1	equ	0xFE6
 49473                           postdec1	equ	0xFE5
 49474                           plusw1	equ	0xFE3
 49475                           fsr1h	equ	0xFE2
 49476                           fsr1l	equ	0xFE1
 49477                           indf2	equ	0xFDF
 49478                           postinc2	equ	0xFDE
 49479                           postdec2	equ	0xFDD
 49480                           plusw2	equ	0xFDB
 49481                           fsr2h	equ	0xFDA
 49482                           fsr2l	equ	0xFD9
 49483                           status	equ	0xFD8
 49484                           
 49485 ;; *************** function i2_SYSTEM_Initialize *****************
 49486 ;; Defined at:
 49487 ;;		line 78 in file "system.c"
 49488 ;; Parameters:    Size  Location     Type
 49489 ;;  state           1    wreg     enum E8228
 49490 ;; Auto vars:     Size  Location     Type
 49491 ;;  state           1    4[COMRAM] enum E8228
 49492 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 49493 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 49494 ;; Return value:  Size  Location     Type
 49495 ;;                  1    wreg      void 
 49496 ;; Registers used:
 49497 ;;		wreg, status,2, status,0
 49498 ;; Tracked objects:
 49499 ;;		On entry : 0/0
 49500 ;;		On exit  : 0/0
 49501 ;;		Unchanged: 0/0
 49502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49504 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49506 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49507 ;;Total ram usage:        5 bytes
 49508 ;; Hardware stack levels used:    1
 49509 ;; This function calls:
 49510 ;;		Nothing
 49511 ;; This function is called by:
 49512 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49513 ;; This function uses a non-reentrant model
 49514 ;;
 49515                           
 49516                           	psect	text233
 49517  0132DC                     __ptext233:
 49518                           	opt stack 0
 49519  0132DC                     i2_SYSTEM_Initialize:
 49520                           	opt stack 15
 49521                           
 49522                           ;incstack = 0
 49523                           ;i2SYSTEM_Initialize@state stored from wreg
 49524  0132DC  6E32               	movwf	i2SYSTEM_Initialize@state,c
 49525                           
 49526                           ;system.c: 80: switch(state)
 49527  0132DE  D01D               	goto	i2l11757
 49528  0132E0                     i2l11745:
 49529                           
 49530                           ;system.c: 89: {
 49531                           ;system.c: 90: unsigned int pll_startup_counter = 600;
 49532  0132E0  0E02               	movlw	2
 49533  0132E2  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 49534  0132E4  0E58               	movlw	88
 49535  0132E6  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 49536                           
 49537                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 49538  0132E8  8C9B               	bsf	3995,6,c	;volatile
 49539  0132EA                     i2l11749:
 49540  0132EA  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 49541  0132EC  A0D8               	btfss	status,0,c
 49542  0132EE  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 49543  0132F0  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 49544  0132F2  E1FB               	bnz	i2l11749
 49545  0132F4  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 49546  0132F6  B4D8               	btfsc	status,2,c
 49547  0132F8  0012               	return	
 49548  0132FA  D7F7               	goto	i2l11749
 49549  0132FC                     i2l11751:
 49550                           
 49551                           ;system.c: 117: OSCCON = 0x70;
 49552  0132FC  0E70               	movlw	112
 49553  0132FE  6ED3               	movwf	4051,c	;volatile
 49554                           
 49555                           ;system.c: 123: {
 49556                           ;system.c: 124: unsigned int pll_startup_counter = 800;
 49557  013300  0E03               	movlw	3
 49558  013302  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,c
 49559  013304  0E20               	movlw	32
 49560  013306  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284,c
 49561  013308                     i2l11753:
 49562  013308  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284,f,c
 49563  01330A  A0D8               	btfss	status,0,c
 49564  01330C  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,f,c
 49565  01330E  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284,w,c
 49566  013310  E1FB               	bnz	i2l11753
 49567  013312  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,w,c
 49568  013314  B4D8               	btfsc	status,2,c
 49569  013316  0012               	return	
 49570  013318  D7F7               	goto	i2l11753
 49571  01331A                     i2l11757:
 49572  01331A  5032               	movf	i2SYSTEM_Initialize@state,w,c
 49573                           
 49574                           ; Switch size 1, requested type "space"
 49575                           ; Number of cases is 3, Range of values is 0 to 2
 49576                           ; switch strategies available:
 49577                           ; Name         Instructions Cycles
 49578                           ; simple_byte           10     6 (average)
 49579                           ;	Chosen strategy is simple_byte
 49580  01331C  0A00               	xorlw	0	; case 0
 49581  01331E  B4D8               	btfsc	status,2,c
 49582  013320  D7DF               	goto	i2l11745
 49583  013322  0A01               	xorlw	1	; case 1
 49584  013324  B4D8               	btfsc	status,2,c
 49585  013326  0012               	return	
 49586  013328  0A03               	xorlw	3	; case 2
 49587  01332A  A4D8               	btfss	status,2,c
 49588  01332C  0012               	return	
 49589  01332E  D7E6               	goto	i2l11751
 49590  013330                     __end_ofi2_SYSTEM_Initialize:
 49591                           	opt stack 0
 49592                           tosu	equ	0xFFF
 49593                           tosh	equ	0xFFE
 49594                           tosl	equ	0xFFD
 49595                           pclatu	equ	0xFFB
 49596                           pclath	equ	0xFFA
 49597                           tblptru	equ	0xFF8
 49598                           tblptrh	equ	0xFF7
 49599                           tblptrl	equ	0xFF6
 49600                           tablat	equ	0xFF5
 49601                           prodh	equ	0xFF4
 49602                           prodl	equ	0xFF3
 49603                           intcon	equ	0xFF2
 49604                           intcon2	equ	0xFF1
 49605                           intcon3	equ	0xFF0
 49606                           indf0	equ	0xFEF
 49607                           postinc0	equ	0xFEE
 49608                           fsr0h	equ	0xFEA
 49609                           fsr0l	equ	0xFE9
 49610                           wreg	equ	0xFE8
 49611                           indf1	equ	0xFE7
 49612                           postinc1	equ	0xFE6
 49613                           postdec1	equ	0xFE5
 49614                           plusw1	equ	0xFE3
 49615                           fsr1h	equ	0xFE2
 49616                           fsr1l	equ	0xFE1
 49617                           indf2	equ	0xFDF
 49618                           postinc2	equ	0xFDE
 49619                           postdec2	equ	0xFDD
 49620                           plusw2	equ	0xFDB
 49621                           fsr2h	equ	0xFDA
 49622                           fsr2l	equ	0xFD9
 49623                           status	equ	0xFD8
 49624                           
 49625 ;; *************** function _USBCheckMSDRequest *****************
 49626 ;; Defined at:
 49627 ;;		line 218 in file "usb_device_msd.c"
 49628 ;; Parameters:    Size  Location     Type
 49629 ;;		None
 49630 ;; Auto vars:     Size  Location     Type
 49631 ;;		None
 49632 ;; Return value:  Size  Location     Type
 49633 ;;                  1    wreg      void 
 49634 ;; Registers used:
 49635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49636 ;; Tracked objects:
 49637 ;;		On entry : 0/0
 49638 ;;		On exit  : 0/0
 49639 ;;		Unchanged: 0/0
 49640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49642 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49645 ;;Total ram usage:        4 bytes
 49646 ;; Hardware stack levels used:    1
 49647 ;; Hardware stack levels required when called:    1
 49648 ;; This function calls:
 49649 ;;		i2_USBTransferOnePacket
 49650 ;; This function is called by:
 49651 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49652 ;; This function uses a non-reentrant model
 49653 ;;
 49654                           
 49655                           	psect	text234
 49656  010936                     __ptext234:
 49657                           	opt stack 0
 49658  010936                     _USBCheckMSDRequest:
 49659                           	opt stack 14
 49660                           
 49661                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 49662                           
 49663                           ;incstack = 0
 49664  010936  010D               	movlb	13	; () banked
 49665  010938  5130               	movf	48,w,b	;volatile
 49666  01093A  0B1F               	andlw	31
 49667  01093C  06E8               	decf	wreg,f,c
 49668  01093E  A4D8               	btfss	status,2,c
 49669  010940  0012               	return	
 49670                           
 49671                           ; BSR set to: 13
 49672                           ;usb_device_msd.c: 223: }
 49673                           ;usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 49674                           
 49675                           ; BSR set to: 13
 49676                           
 49677                           ; BSR set to: 13
 49678                           ;usb_device_msd.c: 221: {
 49679                           ;usb_device_msd.c: 222: return;
 49680  010942  010D               	movlb	13	; () banked
 49681  010944  5134               	movf	52,w,b	;volatile
 49682  010946  A4D8               	btfss	status,2,c
 49683  010948  0012               	return	
 49684  01094A  D057               	goto	i2l11597
 49685  01094C                     i2l11559:
 49686                           
 49687                           ; BSR set to: 13
 49688                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 49689  01094C  010D               	movlb	13	; () banked
 49690  01094E  5132               	movf	50,w,b	;volatile
 49691  010950  010D               	movlb	13	; () banked
 49692  010952  1133               	iorwf	51,w,b	;volatile
 49693  010954  A4D8               	btfss	status,2,c
 49694  010956  0012               	return	
 49695                           
 49696                           ; BSR set to: 13
 49697  010958  010D               	movlb	13	; () banked
 49698  01095A  5136               	movf	54,w,b	;volatile
 49699  01095C  010D               	movlb	13	; () banked
 49700  01095E  1137               	iorwf	55,w,b	;volatile
 49701  010960  A4D8               	btfss	status,2,c
 49702  010962  0012               	return	
 49703                           
 49704                           ; BSR set to: 13
 49705                           ;usb_device_msd.c: 238: }
 49706                           ;usb_device_msd.c: 246: MSD_State = 0x00;
 49707                           
 49708                           ; BSR set to: 13
 49709                           
 49710                           ; BSR set to: 13
 49711                           ;usb_device_msd.c: 236: {
 49712                           ;usb_device_msd.c: 237: return;
 49713  010964  0E00               	movlw	0
 49714  010966  0100               	movlb	0	; () banked
 49715  010968  6FE7               	movwf	_MSD_State& (0+255),b
 49716                           
 49717                           ; BSR set to: 0
 49718                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 49719  01096A  0100               	movlb	0	; () banked
 49720  01096C  69E6               	setf	_MSDCommandState& (0+255),b
 49721                           
 49722                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 49723  01096E  0E00               	movlw	0
 49724  010970  0101               	movlb	1	; () banked
 49725  010972  6FF9               	movwf	_MSDReadState& (0+255),b
 49726                           
 49727                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 49728  010974  0E00               	movlw	0
 49729  010976  6E1F               	movwf	_MSDWriteState,c
 49730                           
 49731                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 49732  010978  0E01               	movlw	1
 49733  01097A  0101               	movlb	1	; () banked
 49734  01097C  6FF5               	movwf	_MSDCBWValid& (0+255),b
 49735                           
 49736                           ; BSR set to: 1
 49737                           
 49738                           ; BSR set to: 1
 49739                           
 49740                           ; BSR set to: 1
 49741                           
 49742                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 49743  01097E  C1D7  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2640
 49744  010982  C1D8  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2640+1
 49745                           
 49746                           ; BSR set to: 1
 49747  010986  5039               	movf	_USBCheckMSDRequest$2640,w,c
 49748  010988  103A               	iorwf	_USBCheckMSDRequest$2640+1,w,c
 49749  01098A  B4D8               	btfsc	status,2,c
 49750  01098C  D00A               	goto	i2l11579
 49751                           
 49752                           ; BSR set to: 1
 49753                           
 49754                           ; BSR set to: 1
 49755                           
 49756                           ; BSR set to: 1
 49757                           
 49758                           ; BSR set to: 1
 49759  01098E  C1D7  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2641
 49760  010992  C1D8  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2641+1
 49761                           
 49762                           ; BSR set to: 1
 49763                           
 49764                           ; BSR set to: 1
 49765  010996  C03B  FFD9         	movff	_USBCheckMSDRequest$2641,fsr2l
 49766  01099A  C03C  FFDA         	movff	_USBCheckMSDRequest$2641+1,fsr2h
 49767  01099E  BEDF               	btfsc	indf2,7,c
 49768  0109A0  D00F               	goto	i2l11581
 49769  0109A2                     i2l11579:
 49770                           
 49771                           ; BSR set to: 1
 49772                           ;usb_device_msd.c: 256: {
 49773                           ;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 49774  0109A2  0E00               	movlw	0
 49775  0109A4  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 49776  0109A6  0E40               	movlw	64
 49777  0109A8  6E2F               	movwf	i2USBTransferOnePacket@data,c
 49778  0109AA  0E0D               	movlw	13
 49779  0109AC  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 49780  0109AE  0E40               	movlw	64
 49781  0109B0  6E31               	movwf	i2USBTransferOnePacket@len,c
 49782  0109B2  0E02               	movlw	2
 49783  0109B4  ECA6  F07F         	call	i2_USBTransferOnePacket
 49784  0109B8  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 49785  0109BC  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 49786  0109C0                     i2l11581:
 49787                           
 49788                           ;usb_device_msd.c: 258: }
 49789                           ;usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 49790  0109C0  0E80               	movlw	128
 49791  0109C2  6E0D               	movwf	_inPipes+3,c	;volatile
 49792                           
 49793                           ;usb_device_msd.c: 263: break;
 49794  0109C4  0012               	return	
 49795  0109C6                     i2l11583:
 49796                           
 49797                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 49798  0109C6  010D               	movlb	13	; () banked
 49799  0109C8  5132               	movf	50,w,b	;volatile
 49800  0109CA  010D               	movlb	13	; () banked
 49801  0109CC  1133               	iorwf	51,w,b	;volatile
 49802  0109CE  A4D8               	btfss	status,2,c
 49803  0109D0  0012               	return	
 49804                           
 49805                           ; BSR set to: 13
 49806  0109D2  010D               	movlb	13	; () banked
 49807  0109D4  0536               	decf	54,w,b	;volatile
 49808  0109D6  010D               	movlb	13	; () banked
 49809  0109D8  1137               	iorwf	55,w,b	;volatile
 49810  0109DA  A4D8               	btfss	status,2,c
 49811  0109DC  0012               	return	
 49812                           
 49813                           ; BSR set to: 13
 49814                           ;usb_device_msd.c: 271: }
 49815                           ;usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 49816                           
 49817                           ; BSR set to: 13
 49818                           
 49819                           ; BSR set to: 13
 49820                           ;usb_device_msd.c: 269: {
 49821                           ;usb_device_msd.c: 270: break;
 49822  0109DE  0E00               	movlw	0
 49823  0109E0  010D               	movlb	13	; () banked
 49824  0109E2  6F38               	movwf	56,b	;volatile
 49825                           
 49826                           ; BSR set to: 13
 49827                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 49828  0109E4  0E38               	movlw	56
 49829  0109E6  6E0A               	movwf	_inPipes,c	;volatile
 49830  0109E8  0E0D               	movlw	13
 49831  0109EA  6E0B               	movwf	_inPipes+1,c	;volatile
 49832                           
 49833                           ; BSR set to: 13
 49834  0109EC  0E00               	movlw	0
 49835  0109EE  6E0F               	movwf	_inPipes+5,c	;volatile
 49836  0109F0  0E01               	movlw	1
 49837  0109F2  6E0E               	movwf	_inPipes+4,c	;volatile
 49838                           
 49839                           ; BSR set to: 13
 49840  0109F4  0EC1               	movlw	193
 49841  0109F6  6E0D               	movwf	_inPipes+3,c	;volatile
 49842                           
 49843                           ; BSR set to: 13
 49844                           ;usb_device_msd.c: 278: }
 49845                           
 49846                           ;usb_device_msd.c: 277: break;
 49847  0109F8  0012               	return	
 49848  0109FA                     i2l11597:
 49849                           
 49850                           ; BSR set to: 13
 49851  0109FA  010D               	movlb	13	; () banked
 49852  0109FC  5131               	movf	49,w,b	;volatile
 49853                           
 49854                           ; Switch size 1, requested type "space"
 49855                           ; Number of cases is 2, Range of values is 254 to 255
 49856                           ; switch strategies available:
 49857                           ; Name         Instructions Cycles
 49858                           ; simple_byte            7     4 (average)
 49859                           ;	Chosen strategy is simple_byte
 49860  0109FE  0AFE               	xorlw	254	; case 254
 49861  010A00  B4D8               	btfsc	status,2,c
 49862  010A02  D7E1               	goto	i2l11583
 49863  010A04  0A01               	xorlw	1	; case 255
 49864  010A06  A4D8               	btfss	status,2,c
 49865  010A08  0012               	return	
 49866  010A0A  D7A0               	goto	i2l11559
 49867  010A0C                     __end_of_USBCheckMSDRequest:
 49868                           	opt stack 0
 49869                           tosu	equ	0xFFF
 49870                           tosh	equ	0xFFE
 49871                           tosl	equ	0xFFD
 49872                           pclatu	equ	0xFFB
 49873                           pclath	equ	0xFFA
 49874                           tblptru	equ	0xFF8
 49875                           tblptrh	equ	0xFF7
 49876                           tblptrl	equ	0xFF6
 49877                           tablat	equ	0xFF5
 49878                           prodh	equ	0xFF4
 49879                           prodl	equ	0xFF3
 49880                           intcon	equ	0xFF2
 49881                           intcon2	equ	0xFF1
 49882                           intcon3	equ	0xFF0
 49883                           indf0	equ	0xFEF
 49884                           postinc0	equ	0xFEE
 49885                           fsr0h	equ	0xFEA
 49886                           fsr0l	equ	0xFE9
 49887                           wreg	equ	0xFE8
 49888                           indf1	equ	0xFE7
 49889                           postinc1	equ	0xFE6
 49890                           postdec1	equ	0xFE5
 49891                           plusw1	equ	0xFE3
 49892                           fsr1h	equ	0xFE2
 49893                           fsr1l	equ	0xFE1
 49894                           indf2	equ	0xFDF
 49895                           postinc2	equ	0xFDE
 49896                           postdec2	equ	0xFDD
 49897                           plusw2	equ	0xFDB
 49898                           fsr2h	equ	0xFDA
 49899                           fsr2l	equ	0xFD9
 49900                           status	equ	0xFD8
 49901                           
 49902 ;; *************** function _USBCheckHIDRequest *****************
 49903 ;; Defined at:
 49904 ;;		line 153 in file "usb_device_hid.c"
 49905 ;; Parameters:    Size  Location     Type
 49906 ;;		None
 49907 ;; Auto vars:     Size  Location     Type
 49908 ;;		None
 49909 ;; Return value:  Size  Location     Type
 49910 ;;                  1    wreg      void 
 49911 ;; Registers used:
 49912 ;;		wreg, status,2, status,0
 49913 ;; Tracked objects:
 49914 ;;		On entry : 0/0
 49915 ;;		On exit  : 0/0
 49916 ;;		Unchanged: 0/0
 49917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49922 ;;Total ram usage:        0 bytes
 49923 ;; Hardware stack levels used:    1
 49924 ;; This function calls:
 49925 ;;		Nothing
 49926 ;; This function is called by:
 49927 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49928 ;; This function uses a non-reentrant model
 49929 ;;
 49930                           
 49931                           	psect	text235
 49932  0106AC                     __ptext235:
 49933                           	opt stack 0
 49934  0106AC                     _USBCheckHIDRequest:
 49935                           	opt stack 15
 49936                           
 49937                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 49938                           
 49939                           ;incstack = 0
 49940  0106AC  010D               	movlb	13	; () banked
 49941  0106AE  5130               	movf	48,w,b	;volatile
 49942  0106B0  0B1F               	andlw	31
 49943  0106B2  06E8               	decf	wreg,f,c
 49944  0106B4  A4D8               	btfss	status,2,c
 49945  0106B6  0012               	return	
 49946                           
 49947                           ; BSR set to: 13
 49948                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 49949                           
 49950                           ; BSR set to: 13
 49951                           
 49952                           ; BSR set to: 13
 49953  0106B8  010D               	movlb	13	; () banked
 49954  0106BA  5134               	movf	52,w,b	;volatile
 49955  0106BC  A4D8               	btfss	status,2,c
 49956  0106BE  0012               	return	
 49957                           
 49958                           ; BSR set to: 13
 49959                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 49960                           
 49961                           ; BSR set to: 13
 49962                           
 49963                           ; BSR set to: 13
 49964  0106C0  0E06               	movlw	6
 49965  0106C2  010D               	movlb	13	; () banked
 49966  0106C4  1931               	xorwf	49,w,b	;volatile
 49967  0106C6  B4D8               	btfsc	status,2,c
 49968  0106C8  D018               	goto	i2l11521
 49969  0106CA  D020               	goto	i2l11523
 49970  0106CC                     i2l11505:
 49971                           
 49972                           ; BSR set to: 13
 49973                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 49974  0106CC  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 49975  0106CE  A4D8               	btfss	status,2,c
 49976  0106D0  D01D               	goto	i2l11523
 49977                           
 49978                           ; BSR set to: 13
 49979                           ;usb_device_hid.c: 169: {
 49980                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 49981  0106D2  0E2D               	movlw	low (_configDescriptor1+18)
 49982  0106D4  6E0A               	movwf	_inPipes,c	;volatile
 49983  0106D6  0E93               	movlw	high (_configDescriptor1+18)
 49984  0106D8  6E0B               	movwf	_inPipes+1,c	;volatile
 49985                           
 49986                           ; BSR set to: 13
 49987  0106DA  0E00               	movlw	0
 49988  0106DC  6E0F               	movwf	_inPipes+5,c	;volatile
 49989  0106DE  0E09               	movlw	9
 49990  0106E0  D00A               	goto	L63
 49991  0106E2                     i2l11511:
 49992                           
 49993                           ; BSR set to: 13
 49994  0106E2  0EC0               	movlw	192
 49995  0106E4  6E0D               	movwf	_inPipes+3,c	;volatile
 49996                           
 49997                           ; BSR set to: 13
 49998                           ;usb_device_hid.c: 174: }
 49999                           ;usb_device_hid.c: 175: break;
 50000  0106E6  D012               	goto	i2l11523
 50001  0106E8                     i2l11513:
 50002                           
 50003                           ; BSR set to: 13
 50004                           ;usb_device_hid.c: 178: {
 50005                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 50006  0106E8  0EE1               	movlw	low _hid_rpt01
 50007  0106EA  6E0A               	movwf	_inPipes,c	;volatile
 50008  0106EC  0E93               	movlw	high _hid_rpt01
 50009  0106EE  6E0B               	movwf	_inPipes+1,c	;volatile
 50010                           
 50011                           ; BSR set to: 13
 50012  0106F0  0E00               	movlw	0
 50013  0106F2  6E0F               	movwf	_inPipes+5,c	;volatile
 50014  0106F4  0E1D               	movlw	29
 50015  0106F6                     L63:
 50016  0106F6  6E0E               	movwf	_inPipes+4,c	;volatile
 50017  0106F8  D7F4               	goto	i2l11511
 50018  0106FA                     i2l11521:
 50019                           
 50020                           ; BSR set to: 13
 50021  0106FA  010D               	movlb	13	; () banked
 50022  0106FC  5133               	movf	51,w,b	;volatile
 50023                           
 50024                           ; Switch size 1, requested type "space"
 50025                           ; Number of cases is 3, Range of values is 33 to 35
 50026                           ; switch strategies available:
 50027                           ; Name         Instructions Cycles
 50028                           ; simple_byte           10     6 (average)
 50029                           ;	Chosen strategy is simple_byte
 50030  0106FE  0A21               	xorlw	33	; case 33
 50031  010700  B4D8               	btfsc	status,2,c
 50032  010702  D7E4               	goto	i2l11505
 50033  010704  0A03               	xorlw	3	; case 34
 50034  010706  B4D8               	btfsc	status,2,c
 50035  010708  D7EF               	goto	i2l11513
 50036  01070A  0A01               	xorlw	1	; case 35
 50037  01070C                     i2l11523:
 50038                           
 50039                           ; BSR set to: 13
 50040                           ;usb_device_hid.c: 199: }
 50041                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 50042  01070C  010D               	movlb	13	; () banked
 50043  01070E  3930               	swapf	48,w,b	;volatile
 50044  010710  32E8               	rrcf	wreg,f,c
 50045  010712  0B03               	andlw	3
 50046  010714  06E8               	decf	wreg,f,c
 50047  010716  A4D8               	btfss	status,2,c
 50048  010718  0012               	return	
 50049  01071A  D020               	goto	i2l11549
 50050  01071C                     i2l11527:
 50051                           
 50052                           ; BSR set to: 13
 50053                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 50054  01071C  0EFF               	movlw	low _idle_rate
 50055  01071E  6E0A               	movwf	_inPipes,c	;volatile
 50056  010720  0E01               	movlw	high _idle_rate
 50057  010722  6E0B               	movwf	_inPipes+1,c	;volatile
 50058                           
 50059                           ; BSR set to: 13
 50060  010724  0E00               	movlw	0
 50061  010726  6E0F               	movwf	_inPipes+5,c	;volatile
 50062  010728  0E01               	movlw	1
 50063  01072A  6E0E               	movwf	_inPipes+4,c	;volatile
 50064                           
 50065                           ; BSR set to: 13
 50066  01072C  0EC1               	movlw	193
 50067  01072E  6E0D               	movwf	_inPipes+3,c	;volatile
 50068                           
 50069                           ;usb_device_hid.c: 223: break;
 50070  010730  0012               	return	
 50071  010732                     i2l11533:
 50072                           
 50073                           ; BSR set to: 13
 50074                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 50075  010732  0E80               	movlw	128
 50076  010734  6E0D               	movwf	_inPipes+3,c	;volatile
 50077                           
 50078                           ; BSR set to: 13
 50079                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 50080  010736  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 50081                           
 50082                           ;usb_device_hid.c: 227: ;
 50083                           ;usb_device_hid.c: 228: break;
 50084  01073A  0012               	return	
 50085  01073C                     i2l11537:
 50086                           
 50087                           ; BSR set to: 13
 50088                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 50089  01073C  0EFE               	movlw	low _active_protocol
 50090  01073E  6E0A               	movwf	_inPipes,c	;volatile
 50091  010740  0E01               	movlw	high _active_protocol
 50092  010742  6E0B               	movwf	_inPipes+1,c	;volatile
 50093                           
 50094                           ; BSR set to: 13
 50095  010744  0E00               	movlw	0
 50096  010746  6E0F               	movwf	_inPipes+5,c	;volatile
 50097  010748  0E01               	movlw	1
 50098  01074A  6E0E               	movwf	_inPipes+4,c	;volatile
 50099                           
 50100                           ; BSR set to: 13
 50101  01074C  0E81               	movlw	129
 50102  01074E  6E0D               	movwf	_inPipes+3,c	;volatile
 50103                           
 50104                           ;usb_device_hid.c: 234: break;
 50105  010750  0012               	return	
 50106  010752                     i2l11543:
 50107                           
 50108                           ; BSR set to: 13
 50109                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 50110  010752  0E80               	movlw	128
 50111  010754  6E0D               	movwf	_inPipes+3,c	;volatile
 50112                           
 50113                           ; BSR set to: 13
 50114                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 50115  010756  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 50116                           
 50117                           ; BSR set to: 13
 50118                           ;usb_device_hid.c: 239: }
 50119                           
 50120                           ;usb_device_hid.c: 238: break;
 50121  01075A  0012               	return	
 50122  01075C                     i2l11549:
 50123                           
 50124                           ; BSR set to: 13
 50125  01075C  010D               	movlb	13	; () banked
 50126  01075E  5131               	movf	49,w,b	;volatile
 50127                           
 50128                           ; Switch size 1, requested type "space"
 50129                           ; Number of cases is 6, Range of values is 1 to 11
 50130                           ; switch strategies available:
 50131                           ; Name         Instructions Cycles
 50132                           ; simple_byte           19    10 (average)
 50133                           ;	Chosen strategy is simple_byte
 50134  010760  0A01               	xorlw	1	; case 1
 50135  010762  B4D8               	btfsc	status,2,c
 50136  010764  0012               	return	
 50137  010766  0A03               	xorlw	3	; case 2
 50138  010768  B4D8               	btfsc	status,2,c
 50139  01076A  D7D8               	goto	i2l11527
 50140  01076C  0A01               	xorlw	1	; case 3
 50141  01076E  B4D8               	btfsc	status,2,c
 50142  010770  D7E5               	goto	i2l11537
 50143  010772  0A0A               	xorlw	10	; case 9
 50144  010774  B4D8               	btfsc	status,2,c
 50145  010776  0012               	return	
 50146  010778  0A03               	xorlw	3	; case 10
 50147  01077A  B4D8               	btfsc	status,2,c
 50148  01077C  D7DA               	goto	i2l11533
 50149  01077E  0A01               	xorlw	1	; case 11
 50150  010780  A4D8               	btfss	status,2,c
 50151  010782  0012               	return	
 50152  010784  D7E6               	goto	i2l11543
 50153  010786                     __end_of_USBCheckHIDRequest:
 50154                           	opt stack 0
 50155                           tosu	equ	0xFFF
 50156                           tosh	equ	0xFFE
 50157                           tosl	equ	0xFFD
 50158                           pclatu	equ	0xFFB
 50159                           pclath	equ	0xFFA
 50160                           tblptru	equ	0xFF8
 50161                           tblptrh	equ	0xFF7
 50162                           tblptrl	equ	0xFF6
 50163                           tablat	equ	0xFF5
 50164                           prodh	equ	0xFF4
 50165                           prodl	equ	0xFF3
 50166                           intcon	equ	0xFF2
 50167                           intcon2	equ	0xFF1
 50168                           intcon3	equ	0xFF0
 50169                           indf0	equ	0xFEF
 50170                           postinc0	equ	0xFEE
 50171                           fsr0h	equ	0xFEA
 50172                           fsr0l	equ	0xFE9
 50173                           wreg	equ	0xFE8
 50174                           indf1	equ	0xFE7
 50175                           postinc1	equ	0xFE6
 50176                           postdec1	equ	0xFE5
 50177                           plusw1	equ	0xFE3
 50178                           fsr1h	equ	0xFE2
 50179                           fsr1l	equ	0xFE1
 50180                           indf2	equ	0xFDF
 50181                           postinc2	equ	0xFDE
 50182                           postdec2	equ	0xFDD
 50183                           plusw2	equ	0xFDB
 50184                           fsr2h	equ	0xFDA
 50185                           fsr2l	equ	0xFD9
 50186                           status	equ	0xFD8
 50187                           
 50188 ;; *************** function _MSDTransferTerminated *****************
 50189 ;; Defined at:
 50190 ;;		line 1674 in file "usb_device_msd.c"
 50191 ;; Parameters:    Size  Location     Type
 50192 ;;  handle          2   11[COMRAM] PTR void 
 50193 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 50194 ;;		 -> BDT(48), 
 50195 ;; Auto vars:     Size  Location     Type
 50196 ;;		None
 50197 ;; Return value:  Size  Location     Type
 50198 ;;                  1    wreg      void 
 50199 ;; Registers used:
 50200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50201 ;; Tracked objects:
 50202 ;;		On entry : 0/0
 50203 ;;		On exit  : 0/0
 50204 ;;		Unchanged: 0/0
 50205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50210 ;;Total ram usage:        4 bytes
 50211 ;; Hardware stack levels used:    1
 50212 ;; Hardware stack levels required when called:    1
 50213 ;; This function calls:
 50214 ;;		i2_USBStallEndpoint
 50215 ;;		i2_USBTransferOnePacket
 50216 ;; This function is called by:
 50217 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50218 ;; This function uses a non-reentrant model
 50219 ;;
 50220                           
 50221                           	psect	text236
 50222  013286                     __ptext236:
 50223                           	opt stack 0
 50224  013286                     _MSDTransferTerminated:
 50225                           	opt stack 14
 50226                           
 50227                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 50228                           
 50229                           ; BSR set to: 13
 50230                           ;incstack = 0
 50231  013286  0101               	movlb	1	; () banked
 50232  013288  51F5               	movf	_MSDCBWValid& (0+255),w,b
 50233  01328A  A4D8               	btfss	status,2,c
 50234  01328C  D00B               	goto	i2l11687
 50235                           
 50236                           ; BSR set to: 1
 50237                           ;usb_device_msd.c: 1677: {
 50238                           ;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 50239  01328E  0E01               	movlw	1
 50240  013290  6E2E               	movwf	i2USBStallEndpoint@dir,c
 50241  013292  0E02               	movlw	2
 50242  013294  EC23  F07F         	call	i2_USBStallEndpoint
 50243                           
 50244                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 50245  013298  0E00               	movlw	0
 50246  01329A  6E2E               	movwf	i2USBStallEndpoint@dir,c
 50247  01329C  0E02               	movlw	2
 50248  01329E  EC23  F07F         	call	i2_USBStallEndpoint
 50249                           
 50250                           ;usb_device_msd.c: 1681: }
 50251  0132A2  0012               	return	
 50252  0132A4                     i2l11687:
 50253  0132A4  C1D7  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2729
 50254  0132A8  C1D8  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2729+1
 50255  0132AC  503B               	movf	_MSDTransferTerminated$2729,w,c
 50256  0132AE  1839               	xorwf	MSDTransferTerminated@handle,w,c
 50257  0132B0  E114               	bnz	i2l787
 50258  0132B2  503C               	movf	_MSDTransferTerminated$2729+1,w,c
 50259  0132B4  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 50260  0132B6  A4D8               	btfss	status,2,c
 50261  0132B8  0012               	return	
 50262                           
 50263                           ;usb_device_msd.c: 1687: {
 50264                           ;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,
      +                          64u);
 50265  0132BA  0E00               	movlw	0
 50266  0132BC  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 50267  0132BE  0E40               	movlw	64
 50268  0132C0  6E2F               	movwf	i2USBTransferOnePacket@data,c
 50269  0132C2  0E0D               	movlw	13
 50270  0132C4  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 50271  0132C6  0E40               	movlw	64
 50272  0132C8  6E31               	movwf	i2USBTransferOnePacket@len,c
 50273  0132CA  0E02               	movlw	2
 50274  0132CC  ECA6  F07F         	call	i2_USBTransferOnePacket
 50275  0132D0  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 50276  0132D4  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 50277  0132D8  0012               	return	
 50278  0132DA                     i2l787:
 50279  0132DA  0012               	return		;funcret
 50280  0132DC                     __end_of_MSDTransferTerminated:
 50281                           	opt stack 0
 50282                           tosu	equ	0xFFF
 50283                           tosh	equ	0xFFE
 50284                           tosl	equ	0xFFD
 50285                           pclatu	equ	0xFFB
 50286                           pclath	equ	0xFFA
 50287                           tblptru	equ	0xFF8
 50288                           tblptrh	equ	0xFF7
 50289                           tblptrl	equ	0xFF6
 50290                           tablat	equ	0xFF5
 50291                           prodh	equ	0xFF4
 50292                           prodl	equ	0xFF3
 50293                           intcon	equ	0xFF2
 50294                           intcon2	equ	0xFF1
 50295                           intcon3	equ	0xFF0
 50296                           indf0	equ	0xFEF
 50297                           postinc0	equ	0xFEE
 50298                           fsr0h	equ	0xFEA
 50299                           fsr0l	equ	0xFE9
 50300                           wreg	equ	0xFE8
 50301                           indf1	equ	0xFE7
 50302                           postinc1	equ	0xFE6
 50303                           postdec1	equ	0xFE5
 50304                           plusw1	equ	0xFE3
 50305                           fsr1h	equ	0xFE2
 50306                           fsr1l	equ	0xFE1
 50307                           indf2	equ	0xFDF
 50308                           postinc2	equ	0xFDE
 50309                           postdec2	equ	0xFDD
 50310                           plusw2	equ	0xFDB
 50311                           fsr2h	equ	0xFDA
 50312                           fsr2l	equ	0xFD9
 50313                           status	equ	0xFD8
 50314                           
 50315 ;; *************** function i2_USBStallEndpoint *****************
 50316 ;; Defined at:
 50317 ;;		line 1073 in file "usb_device.c"
 50318 ;; Parameters:    Size  Location     Type
 50319 ;;  ep              1    wreg     unsigned char 
 50320 ;;  dir             1    0[COMRAM] unsigned char 
 50321 ;; Auto vars:     Size  Location     Type
 50322 ;;  ep              1    5[COMRAM] unsigned char 
 50323 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 50324 ;;		 -> BDT(48), 
 50325 ;; Return value:  Size  Location     Type
 50326 ;;                  1    wreg      void 
 50327 ;; Registers used:
 50328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50329 ;; Tracked objects:
 50330 ;;		On entry : 0/0
 50331 ;;		On exit  : 0/0
 50332 ;;		Unchanged: 0/0
 50333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50334 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50335 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50337 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50338 ;;Total ram usage:        8 bytes
 50339 ;; Hardware stack levels used:    1
 50340 ;; This function calls:
 50341 ;;		Nothing
 50342 ;; This function is called by:
 50343 ;;		_MSDTransferTerminated
 50344 ;; This function uses a non-reentrant model
 50345 ;;
 50346                           
 50347                           	psect	text237
 50348  00FE46                     __ptext237:
 50349                           	opt stack 0
 50350  00FE46                     i2_USBStallEndpoint:
 50351                           	opt stack 14
 50352                           
 50353                           ;incstack = 0
 50354                           ;i2USBStallEndpoint@ep stored from wreg
 50355  00FE46  6E33               	movwf	i2USBStallEndpoint@ep,c
 50356                           
 50357                           ;usb_device.c: 1075: BDT_ENTRY *p;
 50358                           ;usb_device.c: 1077: if(ep == 0)
 50359  00FE48  5033               	movf	i2USBStallEndpoint@ep,w,c
 50360  00FE4A  A4D8               	btfss	status,2,c
 50361  00FE4C  D02B               	goto	i2l11451
 50362                           
 50363                           ;usb_device.c: 1078: {
 50364                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 50365  00FE4E  EE20 F001          	lfsr	2,1
 50366  00FE52  5018               	movf	_pBDTEntryEP0OutNext,w,c
 50367  00FE54  26D9               	addwf	fsr2l,f,c
 50368  00FE56  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 50369  00FE58  22DA               	addwfc	fsr2h,f,c
 50370  00FE5A  0E08               	movlw	8
 50371  00FE5C  6EDF               	movwf	indf2,c
 50372                           
 50373                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50374  00FE5E  EE20 F002          	lfsr	2,2
 50375  00FE62  5018               	movf	_pBDTEntryEP0OutNext,w,c
 50376  00FE64  26D9               	addwf	fsr2l,f,c
 50377  00FE66  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 50378  00FE68  22DA               	addwfc	fsr2h,f,c
 50379  00FE6A  0E30               	movlw	48
 50380  00FE6C  6EDE               	movwf	postinc2,c
 50381  00FE6E  0E0D               	movlw	13
 50382  00FE70  6EDD               	movwf	postdec2,c
 50383                           
 50384                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 50385  00FE72  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50386  00FE76  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50387  00FE7A  0E0C               	movlw	12
 50388  00FE7C  6EDF               	movwf	indf2,c
 50389                           
 50390                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50391  00FE7E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50392  00FE82  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50393  00FE86  0E00               	movlw	0
 50394  00FE88  8EDB               	bsf	plusw2,7,c
 50395                           
 50396                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 50397  00FE8A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 50398  00FE8E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50399  00FE92  0E04               	movlw	4
 50400  00FE94  6EDF               	movwf	indf2,c
 50401                           
 50402                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50403  00FE96  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 50404  00FE9A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50405  00FE9E  0E00               	movlw	0
 50406  00FEA0  8EDB               	bsf	plusw2,7,c
 50407                           
 50408                           ;usb_device.c: 1089: }
 50409  00FEA2  0012               	return	
 50410  00FEA4                     i2l11451:
 50411                           
 50412                           ;usb_device.c: 1090: else
 50413                           ;usb_device.c: 1091: {
 50414                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 50415  00FEA4  502E               	movf	i2USBStallEndpoint@dir,w,c
 50416  00FEA6  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 50417  00FEA8  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 50418  00FEAA  90D8               	bcf	status,0,c
 50419  00FEAC  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50420  00FEAE  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50421  00FEB0  5033               	movf	i2USBStallEndpoint@ep,w,c
 50422  00FEB2  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 50423  00FEB4  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 50424  00FEB6  90D8               	bcf	status,0,c
 50425  00FEB8  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50426  00FEBA  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50427  00FEBC  90D8               	bcf	status,0,c
 50428  00FEBE  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50429  00FEC0  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50430  00FEC2  502F               	movf	??i2_USBStallEndpoint,w,c
 50431  00FEC4  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 50432  00FEC6  5030               	movf	??i2_USBStallEndpoint+1,w,c
 50433  00FEC8  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 50434  00FECA  90D8               	bcf	status,0,c
 50435  00FECC  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50436  00FECE  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50437  00FED0  90D8               	bcf	status,0,c
 50438  00FED2  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50439  00FED4  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50440  00FED6  0E00               	movlw	0
 50441  00FED8  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 50442  00FEDA  6E34               	movwf	i2USBStallEndpoint@p,c
 50443  00FEDC  0E0D               	movlw	13
 50444  00FEDE  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 50445  00FEE0  6E35               	movwf	i2USBStallEndpoint@p+1,c
 50446                           
 50447                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 50448  00FEE2  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50449  00FEE6  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50450  00FEEA  0E00               	movlw	0
 50451  00FEEC  84DB               	bsf	plusw2,2,c
 50452                           
 50453                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 50454  00FEEE  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50455  00FEF2  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50456  00FEF6  0E00               	movlw	0
 50457  00FEF8  8EDB               	bsf	plusw2,7,c
 50458                           
 50459                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 50460  00FEFA  5033               	movf	i2USBStallEndpoint@ep,w,c
 50461  00FEFC  0D04               	mullw	4
 50462  00FEFE  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 50463  00FF02  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 50464  00FF06  502E               	movf	i2USBStallEndpoint@dir,w,c
 50465  00FF08  0D02               	mullw	2
 50466  00FF0A  50F3               	movf	prodl,w,c
 50467  00FF0C  262F               	addwf	??i2_USBStallEndpoint,f,c
 50468  00FF0E  50F4               	movf	prodh,w,c
 50469  00FF10  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 50470  00FF12  90D8               	bcf	status,0,c
 50471  00FF14  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50472  00FF16  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50473  00FF18  90D8               	bcf	status,0,c
 50474  00FF1A  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50475  00FF1C  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50476  00FF1E  0E04               	movlw	4
 50477  00FF20  262F               	addwf	??i2_USBStallEndpoint,f,c
 50478  00FF22  0E00               	movlw	0
 50479  00FF24  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 50480  00FF26  0E00               	movlw	0
 50481  00FF28  242F               	addwf	??i2_USBStallEndpoint,w,c
 50482  00FF2A  6E34               	movwf	i2USBStallEndpoint@p,c
 50483  00FF2C  0E0D               	movlw	13
 50484  00FF2E  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 50485  00FF30  6E35               	movwf	i2USBStallEndpoint@p+1,c
 50486                           
 50487                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 50488  00FF32  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50489  00FF36  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50490  00FF3A  0E00               	movlw	0
 50491  00FF3C  84DB               	bsf	plusw2,2,c
 50492                           
 50493                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 50494  00FF3E  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50495  00FF42  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50496  00FF46  0E00               	movlw	0
 50497  00FF48  8EDB               	bsf	plusw2,7,c
 50498  00FF4A  0012               	return	
 50499  00FF4C                     __end_ofi2_USBStallEndpoint:
 50500                           	opt stack 0
 50501                           tosu	equ	0xFFF
 50502                           tosh	equ	0xFFE
 50503                           tosl	equ	0xFFD
 50504                           pclatu	equ	0xFFB
 50505                           pclath	equ	0xFFA
 50506                           tblptru	equ	0xFF8
 50507                           tblptrh	equ	0xFF7
 50508                           tblptrl	equ	0xFF6
 50509                           tablat	equ	0xFF5
 50510                           prodh	equ	0xFF4
 50511                           prodl	equ	0xFF3
 50512                           intcon	equ	0xFF2
 50513                           intcon2	equ	0xFF1
 50514                           intcon3	equ	0xFF0
 50515                           indf0	equ	0xFEF
 50516                           postinc0	equ	0xFEE
 50517                           fsr0h	equ	0xFEA
 50518                           fsr0l	equ	0xFE9
 50519                           wreg	equ	0xFE8
 50520                           indf1	equ	0xFE7
 50521                           postinc1	equ	0xFE6
 50522                           postdec1	equ	0xFE5
 50523                           plusw1	equ	0xFE3
 50524                           fsr1h	equ	0xFE2
 50525                           fsr1l	equ	0xFE1
 50526                           indf2	equ	0xFDF
 50527                           postinc2	equ	0xFDE
 50528                           postdec2	equ	0xFDD
 50529                           plusw2	equ	0xFDB
 50530                           fsr2h	equ	0xFDA
 50531                           fsr2l	equ	0xFD9
 50532                           status	equ	0xFD8
 50533                           
 50534 ;; *************** function _APP_DeviceMSDInitialize *****************
 50535 ;; Defined at:
 50536 ;;		line 84 in file "app_device_msd.c"
 50537 ;; Parameters:    Size  Location     Type
 50538 ;;		None
 50539 ;; Auto vars:     Size  Location     Type
 50540 ;;		None
 50541 ;; Return value:  Size  Location     Type
 50542 ;;                  1    wreg      void 
 50543 ;; Registers used:
 50544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50545 ;; Tracked objects:
 50546 ;;		On entry : 0/0
 50547 ;;		On exit  : 0/0
 50548 ;;		Unchanged: 0/0
 50549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50554 ;;Total ram usage:        0 bytes
 50555 ;; Hardware stack levels used:    1
 50556 ;; Hardware stack levels required when called:    2
 50557 ;; This function calls:
 50558 ;;		_USBEnableEndpoint
 50559 ;;		_USBMSDInit
 50560 ;; This function is called by:
 50561 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50562 ;; This function uses a non-reentrant model
 50563 ;;
 50564                           
 50565                           	psect	text238
 50566  014254                     __ptext238:
 50567                           	opt stack 0
 50568  014254                     _APP_DeviceMSDInitialize:
 50569                           	opt stack 13
 50570                           
 50571                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 50572                           
 50573                           ;incstack = 0
 50574  014254  0E1E               	movlw	30
 50575  014256  6E36               	movwf	USBEnableEndpoint@options,c
 50576  014258  0E02               	movlw	2
 50577  01425A  ECEA  F09B         	call	_USBEnableEndpoint
 50578                           
 50579                           ;app_device_msd.c: 93: USBMSDInit();
 50580  01425E  ECCF  F079         	call	_USBMSDInit	;wreg free
 50581  014262  0012               	return		;funcret
 50582  014264                     __end_of_APP_DeviceMSDInitialize:
 50583                           	opt stack 0
 50584                           tosu	equ	0xFFF
 50585                           tosh	equ	0xFFE
 50586                           tosl	equ	0xFFD
 50587                           pclatu	equ	0xFFB
 50588                           pclath	equ	0xFFA
 50589                           tblptru	equ	0xFF8
 50590                           tblptrh	equ	0xFF7
 50591                           tblptrl	equ	0xFF6
 50592                           tablat	equ	0xFF5
 50593                           prodh	equ	0xFF4
 50594                           prodl	equ	0xFF3
 50595                           intcon	equ	0xFF2
 50596                           intcon2	equ	0xFF1
 50597                           intcon3	equ	0xFF0
 50598                           indf0	equ	0xFEF
 50599                           postinc0	equ	0xFEE
 50600                           fsr0h	equ	0xFEA
 50601                           fsr0l	equ	0xFE9
 50602                           wreg	equ	0xFE8
 50603                           indf1	equ	0xFE7
 50604                           postinc1	equ	0xFE6
 50605                           postdec1	equ	0xFE5
 50606                           plusw1	equ	0xFE3
 50607                           fsr1h	equ	0xFE2
 50608                           fsr1l	equ	0xFE1
 50609                           indf2	equ	0xFDF
 50610                           postinc2	equ	0xFDE
 50611                           postdec2	equ	0xFDD
 50612                           plusw2	equ	0xFDB
 50613                           fsr2h	equ	0xFDA
 50614                           fsr2l	equ	0xFD9
 50615                           status	equ	0xFD8
 50616                           
 50617 ;; *************** function _USBMSDInit *****************
 50618 ;; Defined at:
 50619 ;;		line 142 in file "usb_device_msd.c"
 50620 ;; Parameters:    Size  Location     Type
 50621 ;;		None
 50622 ;; Auto vars:     Size  Location     Type
 50623 ;;		None
 50624 ;; Return value:  Size  Location     Type
 50625 ;;                  1    wreg      void 
 50626 ;; Registers used:
 50627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50628 ;; Tracked objects:
 50629 ;;		On entry : 0/0
 50630 ;;		On exit  : 0/0
 50631 ;;		Unchanged: 0/0
 50632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50635 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50637 ;;Total ram usage:        3 bytes
 50638 ;; Hardware stack levels used:    1
 50639 ;; Hardware stack levels required when called:    1
 50640 ;; This function calls:
 50641 ;;		i2_ExternalFlash_MediaDetect
 50642 ;;		i2_ExternalFlash_MediaInitialize
 50643 ;;		i2_ResetSenseData
 50644 ;;		i2_USBTransferOnePacket
 50645 ;; This function is called by:
 50646 ;;		_APP_DeviceMSDInitialize
 50647 ;; This function uses a non-reentrant model
 50648 ;;
 50649                           
 50650                           	psect	text239
 50651  00F39E                     __ptext239:
 50652                           	opt stack 0
 50653  00F39E                     _USBMSDInit:
 50654                           	opt stack 13
 50655                           
 50656                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 50657                           
 50658                           ;incstack = 0
 50659  00F39E  0E00               	movlw	0
 50660  00F3A0  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 50661  00F3A2  0E40               	movlw	64
 50662  00F3A4  6E2F               	movwf	i2USBTransferOnePacket@data,c
 50663  00F3A6  0E0D               	movlw	13
 50664  00F3A8  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 50665  00F3AA  0E40               	movlw	64
 50666  00F3AC  6E31               	movwf	i2USBTransferOnePacket@len,c
 50667  00F3AE  0E02               	movlw	2
 50668  00F3B0  ECA6  F07F         	call	i2_USBTransferOnePacket
 50669  00F3B4  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 50670  00F3B8  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 50671  00F3BC  C014  F0DB         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 50672  00F3C0  C015  F0DC         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 50673                           
 50674                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 50675  00F3C4  0E00               	movlw	0
 50676  00F3C6  0100               	movlb	0	; () banked
 50677  00F3C8  6FE7               	movwf	_MSD_State& (0+255),b
 50678                           
 50679                           ; BSR set to: 0
 50680                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 50681  00F3CA  0100               	movlb	0	; () banked
 50682  00F3CC  69E6               	setf	_MSDCommandState& (0+255),b
 50683                           
 50684                           ; BSR set to: 0
 50685                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 50686  00F3CE  0E00               	movlw	0
 50687  00F3D0  0101               	movlb	1	; () banked
 50688  00F3D2  6FF9               	movwf	_MSDReadState& (0+255),b
 50689                           
 50690                           ; BSR set to: 1
 50691                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 50692  00F3D4  0E00               	movlw	0
 50693  00F3D6  6E1F               	movwf	_MSDWriteState,c
 50694                           
 50695                           ; BSR set to: 1
 50696                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 50697  00F3D8  0E00               	movlw	0
 50698  00F3DA  0100               	movlb	0	; () banked
 50699  00F3DC  6FE5               	movwf	_MSDHostNoData& (0+255),b
 50700                           
 50701                           ; BSR set to: 0
 50702                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 50703  00F3DE  0E00               	movlw	0
 50704  00F3E0  0102               	movlb	2	; () banked
 50705  00F3E2  6FAA               	movwf	_gblNumBLKS& (0+255),b
 50706  00F3E4  0E00               	movlw	0
 50707  00F3E6  6FAB               	movwf	(_gblNumBLKS+1)& (0+255),b
 50708  00F3E8  0E00               	movlw	0
 50709  00F3EA  6FAC               	movwf	(_gblNumBLKS+2)& (0+255),b
 50710  00F3EC  0E00               	movlw	0
 50711  00F3EE  6FAD               	movwf	(_gblNumBLKS+3)& (0+255),b
 50712                           
 50713                           ; BSR set to: 2
 50714                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 50715  00F3F0  0E00               	movlw	0
 50716  00F3F2  0102               	movlb	2	; () banked
 50717  00F3F4  6FA6               	movwf	_gblBLKLen& (0+255),b
 50718  00F3F6  0E00               	movlw	0
 50719  00F3F8  6FA7               	movwf	(_gblBLKLen+1)& (0+255),b
 50720  00F3FA  0E00               	movlw	0
 50721  00F3FC  6FA8               	movwf	(_gblBLKLen+2)& (0+255),b
 50722  00F3FE  0E00               	movlw	0
 50723  00F400  6FA9               	movwf	(_gblBLKLen+3)& (0+255),b
 50724                           
 50725                           ; BSR set to: 2
 50726                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 50727  00F402  0E01               	movlw	1
 50728  00F404  0101               	movlb	1	; () banked
 50729  00F406  6FF5               	movwf	_MSDCBWValid& (0+255),b
 50730                           
 50731                           ; BSR set to: 1
 50732                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 50733  00F408  0E00               	movlw	0
 50734  00F40A  0102               	movlb	2	; () banked
 50735  00F40C  6FB3               	movwf	(_gblMediaPresent+1)& (0+255),b
 50736  00F40E  0E00               	movlw	0
 50737  00F410  6FB2               	movwf	_gblMediaPresent& (0+255),b
 50738                           
 50739                           ; BSR set to: 2
 50740                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 50741  00F412  0E00               	movlw	0
 50742  00F414  0102               	movlb	2	; () banked
 50743  00F416  6F4E               	movwf	(_gblCBW+13)& (0+255),b
 50744  00F418  D04C               	goto	i2l17867
 50745  00F41A                     i2l17855:
 50746                           
 50747                           ; BSR set to: 2
 50748                           ;usb_device_msd.c: 161: {
 50749                           ;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 50750  00F41A  0102               	movlb	2	; () banked
 50751  00F41C  514E               	movf	(_gblCBW+13)& (0+255),w,b
 50752  00F41E  0D01               	mullw	1
 50753  00F420  0EF6               	movlw	low _SoftDetach
 50754  00F422  24F3               	addwf	prodl,w,c
 50755  00F424  6ED9               	movwf	fsr2l,c
 50756  00F426  0E01               	movlw	high _SoftDetach
 50757  00F428  20F4               	addwfc	prodh,w,c
 50758  00F42A  6EDA               	movwf	fsr2h,c
 50759  00F42C  0E00               	movlw	0
 50760  00F42E  6EDF               	movwf	indf2,c
 50761                           
 50762                           ; BSR set to: 2
 50763                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 50764  00F430  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 50765  00F434  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 50766  00F438  EE22  F0C4         	lfsr	2,_LUN+9
 50767  00F43C  D801               	call	i2u1646_48
 50768  00F43E  D00A               	goto	i2u1646_49
 50769  00F440                     i2u1646_48:
 50770  00F440  0005               	push	
 50771  00F442  6EFA               	movwf	pclath,c
 50772  00F444  50DE               	movf	postinc2,w,c
 50773  00F446  6EFD               	movwf	tosl,c
 50774  00F448  50DE               	movf	postinc2,w,c
 50775  00F44A  6EFE               	movwf	tosh,c
 50776  00F44C  50DE               	movf	postinc2,w,c
 50777  00F44E  6EFF               	movwf	tosu,c
 50778  00F450  50FA               	movf	pclath,w,c
 50779  00F452  0012               	return		;indir
 50780  00F454                     i2u1646_49:
 50781  00F454  0900               	iorlw	0
 50782  00F456  B4D8               	btfsc	status,2,c
 50783  00F458  D028               	goto	i2l17863
 50784                           
 50785                           ;usb_device_msd.c: 167: {
 50786                           ;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 50787  00F45A  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 50788  00F45E  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 50789  00F462  D801               	call	i2u1648_48
 50790  00F464  D00B               	goto	i2u1648_49
 50791  00F466                     i2u1648_48:
 50792  00F466  0005               	push	
 50793  00F468  6EFA               	movwf	pclath,c
 50794  00F46A  0102               	movlb	2	; () banked
 50795  00F46C  51BB               	movf	_LUN& (0+255),w,b
 50796  00F46E  6EFD               	movwf	tosl,c
 50797  00F470  51BC               	movf	(_LUN+1)& (0+255),w,b
 50798  00F472  6EFE               	movwf	tosh,c
 50799  00F474  51BD               	movf	(_LUN+2)& (0+255),w,b
 50800  00F476  6EFF               	movwf	tosu,c
 50801  00F478  50FA               	movf	pclath,w,c
 50802  00F47A  0012               	return		;indir
 50803  00F47C                     i2u1648_49:
 50804  00F47C  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 50805  00F47E  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 50806  00F480  B4D8               	btfsc	status,2,c
 50807  00F482  D013               	goto	i2l17863
 50808                           
 50809                           ;usb_device_msd.c: 170: {
 50810                           ;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 50811  00F484  C24E  F039         	movff	_gblCBW+13,??_USBMSDInit
 50812  00F488  0E01               	movlw	1
 50813  00F48A  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 50814  00F48C  0E00               	movlw	0
 50815  00F48E  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 50816  00F490  2A39               	incf	??_USBMSDInit,f,c
 50817  00F492  D003               	goto	i2u1650_44
 50818  00F494                     i2u1650_45:
 50819  00F494  90D8               	bcf	status,0,c
 50820  00F496  363A               	rlcf	??_USBMSDInit+1,f,c
 50821  00F498  363B               	rlcf	??_USBMSDInit+2,f,c
 50822  00F49A                     i2u1650_44:
 50823  00F49A  2E39               	decfsz	??_USBMSDInit,f,c
 50824  00F49C  D7FB               	goto	i2u1650_45
 50825  00F49E  503A               	movf	??_USBMSDInit+1,w,c
 50826  00F4A0  0102               	movlb	2	; () banked
 50827  00F4A2  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 50828  00F4A4  503B               	movf	??_USBMSDInit+2,w,c
 50829  00F4A6  0102               	movlb	2	; () banked
 50830  00F4A8  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 50831  00F4AA                     i2l17863:
 50832                           
 50833                           ;usb_device_msd.c: 174: }
 50834                           ;usb_device_msd.c: 175: }
 50835                           ;usb_device_msd.c: 176: ResetSenseData();
 50836  00F4AA  EC4D  F090         	call	i2_ResetSenseData	;wreg free
 50837  00F4AE  0102               	movlb	2	; () banked
 50838  00F4B0  2B4E               	incf	(_gblCBW+13)& (0+255),f,b
 50839  00F4B2                     i2l17867:
 50840                           
 50841                           ; BSR set to: 2
 50842  00F4B2  0102               	movlb	2	; () banked
 50843  00F4B4  514E               	movf	(_gblCBW+13)& (0+255),w,b
 50844  00F4B6  A4D8               	btfss	status,2,c
 50845  00F4B8  0012               	return	
 50846  00F4BA  D7AF               	goto	i2l17855
 50847  00F4BC                     __end_of_USBMSDInit:
 50848                           	opt stack 0
 50849                           tosu	equ	0xFFF
 50850                           tosh	equ	0xFFE
 50851                           tosl	equ	0xFFD
 50852                           pclatu	equ	0xFFB
 50853                           pclath	equ	0xFFA
 50854                           tblptru	equ	0xFF8
 50855                           tblptrh	equ	0xFF7
 50856                           tblptrl	equ	0xFF6
 50857                           tablat	equ	0xFF5
 50858                           prodh	equ	0xFF4
 50859                           prodl	equ	0xFF3
 50860                           intcon	equ	0xFF2
 50861                           intcon2	equ	0xFF1
 50862                           intcon3	equ	0xFF0
 50863                           indf0	equ	0xFEF
 50864                           postinc0	equ	0xFEE
 50865                           fsr0h	equ	0xFEA
 50866                           fsr0l	equ	0xFE9
 50867                           wreg	equ	0xFE8
 50868                           indf1	equ	0xFE7
 50869                           postinc1	equ	0xFE6
 50870                           postdec1	equ	0xFE5
 50871                           plusw1	equ	0xFE3
 50872                           fsr1h	equ	0xFE2
 50873                           fsr1l	equ	0xFE1
 50874                           indf2	equ	0xFDF
 50875                           postinc2	equ	0xFDE
 50876                           postdec2	equ	0xFDD
 50877                           plusw2	equ	0xFDB
 50878                           fsr2h	equ	0xFDA
 50879                           fsr2l	equ	0xFD9
 50880                           status	equ	0xFD8
 50881                           
 50882 ;; *************** function i2_ResetSenseData *****************
 50883 ;; Defined at:
 50884 ;;		line 1373 in file "usb_device_msd.c"
 50885 ;; Parameters:    Size  Location     Type
 50886 ;;		None
 50887 ;; Auto vars:     Size  Location     Type
 50888 ;;		None
 50889 ;; Return value:  Size  Location     Type
 50890 ;;                  1    wreg      void 
 50891 ;; Registers used:
 50892 ;;		wreg, status,2
 50893 ;; Tracked objects:
 50894 ;;		On entry : 0/0
 50895 ;;		On exit  : 0/0
 50896 ;;		Unchanged: 0/0
 50897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50902 ;;Total ram usage:        0 bytes
 50903 ;; Hardware stack levels used:    1
 50904 ;; This function calls:
 50905 ;;		Nothing
 50906 ;; This function is called by:
 50907 ;;		_USBMSDInit
 50908 ;; This function uses a non-reentrant model
 50909 ;;
 50910                           
 50911                           	psect	text240
 50912  01209A                     __ptext240:
 50913                           	opt stack 0
 50914  01209A                     i2_ResetSenseData:
 50915                           	opt stack 13
 50916                           
 50917                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 50918                           
 50919                           ; BSR set to: 2
 50920                           ;incstack = 0
 50921  01209A  0102               	movlb	2	; () banked
 50922  01209C  9160               	bcf	_gblSenseData& (0+255),0,b
 50923  01209E  9360               	bcf	_gblSenseData& (0+255),1,b
 50924  0120A0  9560               	bcf	_gblSenseData& (0+255),2,b
 50925  0120A2  9760               	bcf	_gblSenseData& (0+255),3,b
 50926  0120A4  8960               	bsf	_gblSenseData& (0+255),4,b
 50927  0120A6  8B60               	bsf	_gblSenseData& (0+255),5,b
 50928  0120A8  8D60               	bsf	_gblSenseData& (0+255),6,b
 50929                           
 50930                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 50931  0120AA  0102               	movlb	2	; () banked
 50932  0120AC  9F60               	bcf	_gblSenseData& (0+255),7,b
 50933                           
 50934                           ; BSR set to: 2
 50935                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 50936  0120AE  0E00               	movlw	0
 50937  0120B0  0102               	movlb	2	; () banked
 50938  0120B2  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 50939                           
 50940                           ; BSR set to: 2
 50941                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 50942  0120B4  0102               	movlb	2	; () banked
 50943  0120B6  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 50944  0120B8  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 50945  0120BA  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 50946  0120BC  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 50947                           
 50948                           ; BSR set to: 2
 50949                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 50950  0120BE  0102               	movlb	2	; () banked
 50951  0120C0  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 50952                           
 50953                           ; BSR set to: 2
 50954                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 50955  0120C2  0102               	movlb	2	; () banked
 50956  0120C4  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 50957                           
 50958                           ; BSR set to: 2
 50959                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 50960  0120C6  0102               	movlb	2	; () banked
 50961  0120C8  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 50962                           
 50963                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 50964  0120CA  0E00               	movlw	0
 50965  0120CC  0102               	movlb	2	; () banked
 50966  0120CE  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 50967                           
 50968                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 50969  0120D0  0E00               	movlw	0
 50970  0120D2  0102               	movlb	2	; () banked
 50971  0120D4  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 50972                           
 50973                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 50974  0120D6  0E00               	movlw	0
 50975  0120D8  0102               	movlb	2	; () banked
 50976  0120DA  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 50977                           
 50978                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 50979  0120DC  0E00               	movlw	0
 50980  0120DE  0102               	movlb	2	; () banked
 50981  0120E0  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 50982                           
 50983                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 50984  0120E2  0E0A               	movlw	10
 50985  0120E4  0102               	movlb	2	; () banked
 50986  0120E6  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 50987                           
 50988                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 50989  0120E8  0E00               	movlw	0
 50990  0120EA  0102               	movlb	2	; () banked
 50991  0120EC  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 50992  0120EE  0E00               	movlw	0
 50993  0120F0  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 50994  0120F2  0E00               	movlw	0
 50995  0120F4  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 50996  0120F6  0E00               	movlw	0
 50997  0120F8  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 50998                           
 50999                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 51000  0120FA  0E00               	movlw	0
 51001  0120FC  0102               	movlb	2	; () banked
 51002  0120FE  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 51003                           
 51004                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 51005  012100  0E00               	movlw	0
 51006  012102  0102               	movlb	2	; () banked
 51007  012104  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 51008                           
 51009                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 51010  012106  0E00               	movlw	0
 51011  012108  0102               	movlb	2	; () banked
 51012  01210A  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 51013                           
 51014                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 51015  01210C  0E00               	movlw	0
 51016  01210E  0102               	movlb	2	; () banked
 51017  012110  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 51018                           
 51019                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 51020  012112  0E00               	movlw	0
 51021  012114  0102               	movlb	2	; () banked
 51022  012116  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 51023                           
 51024                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 51025  012118  0E00               	movlw	0
 51026  01211A  0102               	movlb	2	; () banked
 51027  01211C  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 51028                           
 51029                           ; BSR set to: 2
 51030  01211E  0012               	return		;funcret
 51031  012120                     __end_ofi2_ResetSenseData:
 51032                           	opt stack 0
 51033                           tosu	equ	0xFFF
 51034                           tosh	equ	0xFFE
 51035                           tosl	equ	0xFFD
 51036                           pclatu	equ	0xFFB
 51037                           pclath	equ	0xFFA
 51038                           tblptru	equ	0xFF8
 51039                           tblptrh	equ	0xFF7
 51040                           tblptrl	equ	0xFF6
 51041                           tablat	equ	0xFF5
 51042                           prodh	equ	0xFF4
 51043                           prodl	equ	0xFF3
 51044                           intcon	equ	0xFF2
 51045                           intcon2	equ	0xFF1
 51046                           intcon3	equ	0xFF0
 51047                           indf0	equ	0xFEF
 51048                           postinc0	equ	0xFEE
 51049                           fsr0h	equ	0xFEA
 51050                           fsr0l	equ	0xFE9
 51051                           wreg	equ	0xFE8
 51052                           indf1	equ	0xFE7
 51053                           postinc1	equ	0xFE6
 51054                           postdec1	equ	0xFE5
 51055                           plusw1	equ	0xFE3
 51056                           fsr1h	equ	0xFE2
 51057                           fsr1l	equ	0xFE1
 51058                           indf2	equ	0xFDF
 51059                           postinc2	equ	0xFDE
 51060                           postdec2	equ	0xFDD
 51061                           plusw2	equ	0xFDB
 51062                           fsr2h	equ	0xFDA
 51063                           fsr2l	equ	0xFD9
 51064                           status	equ	0xFD8
 51065                           
 51066 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 51067 ;; Defined at:
 51068 ;;		line 10 in file "external_flash.c"
 51069 ;; Parameters:    Size  Location     Type
 51070 ;;  config          2    0[COMRAM] PTR void 
 51071 ;;		 -> NULL(0), 
 51072 ;; Auto vars:     Size  Location     Type
 51073 ;;		None
 51074 ;; Return value:  Size  Location     Type
 51075 ;;                  2    0[COMRAM] PTR struct .
 51076 ;; Registers used:
 51077 ;;		wreg, status,2, status,0
 51078 ;; Tracked objects:
 51079 ;;		On entry : 0/0
 51080 ;;		On exit  : 0/0
 51081 ;;		Unchanged: 0/0
 51082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51087 ;;Total ram usage:        2 bytes
 51088 ;; Hardware stack levels used:    1
 51089 ;; This function calls:
 51090 ;;		Nothing
 51091 ;; This function is called by:
 51092 ;; This function uses a non-reentrant model
 51093 ;;
 51094                           
 51095                           	psect	text241
 51096  013FA8                     __ptext241:
 51097                           	opt stack 0
 51098  013FA8                     i2_ExternalFlash_MediaInitialize:
 51099                           	opt stack 13
 51100                           
 51101                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 51102                           
 51103                           ; BSR set to: 2
 51104                           ;incstack = 0
 51105  013FA8  0102               	movlb	2	; () banked
 51106  013FAA  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 51107                           
 51108                           ; BSR set to: 2
 51109                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 51110  013FAC  0E02               	movlw	2
 51111  013FAE  0102               	movlb	2	; () banked
 51112  013FB0  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 51113  013FB2  0E00               	movlw	0
 51114  013FB4  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 51115                           
 51116                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 51117  013FB6  0E00               	movlw	0
 51118  013FB8  0102               	movlb	2	; () banked
 51119  013FBA  6FB6               	movwf	_mediaInformation& (0+255),b
 51120                           
 51121                           ; BSR set to: 2
 51122                           ;external_flash.c: 15: return &mediaInformation;
 51123  013FBC  0EB6               	movlw	low _mediaInformation
 51124  013FBE  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 51125  013FC0  0E02               	movlw	high _mediaInformation
 51126  013FC2  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 51127  013FC4  0012               	return	
 51128  013FC6                     __end_ofi2_ExternalFlash_MediaInitialize:
 51129                           	opt stack 0
 51130                           tosu	equ	0xFFF
 51131                           tosh	equ	0xFFE
 51132                           tosl	equ	0xFFD
 51133                           pclatu	equ	0xFFB
 51134                           pclath	equ	0xFFA
 51135                           tblptru	equ	0xFF8
 51136                           tblptrh	equ	0xFF7
 51137                           tblptrl	equ	0xFF6
 51138                           tablat	equ	0xFF5
 51139                           prodh	equ	0xFF4
 51140                           prodl	equ	0xFF3
 51141                           intcon	equ	0xFF2
 51142                           intcon2	equ	0xFF1
 51143                           intcon3	equ	0xFF0
 51144                           indf0	equ	0xFEF
 51145                           postinc0	equ	0xFEE
 51146                           fsr0h	equ	0xFEA
 51147                           fsr0l	equ	0xFE9
 51148                           wreg	equ	0xFE8
 51149                           indf1	equ	0xFE7
 51150                           postinc1	equ	0xFE6
 51151                           postdec1	equ	0xFE5
 51152                           plusw1	equ	0xFE3
 51153                           fsr1h	equ	0xFE2
 51154                           fsr1l	equ	0xFE1
 51155                           indf2	equ	0xFDF
 51156                           postinc2	equ	0xFDE
 51157                           postdec2	equ	0xFDD
 51158                           plusw2	equ	0xFDB
 51159                           fsr2h	equ	0xFDA
 51160                           fsr2l	equ	0xFD9
 51161                           status	equ	0xFD8
 51162                           
 51163 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 51164 ;; Defined at:
 51165 ;;		line 29 in file "external_flash.c"
 51166 ;; Parameters:    Size  Location     Type
 51167 ;;  config          2    0[COMRAM] PTR void 
 51168 ;;		 -> NULL(0), 
 51169 ;; Auto vars:     Size  Location     Type
 51170 ;;		None
 51171 ;; Return value:  Size  Location     Type
 51172 ;;                  1    wreg      unsigned char 
 51173 ;; Registers used:
 51174 ;;		wreg
 51175 ;; Tracked objects:
 51176 ;;		On entry : 0/0
 51177 ;;		On exit  : 0/0
 51178 ;;		Unchanged: 0/0
 51179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51184 ;;Total ram usage:        2 bytes
 51185 ;; Hardware stack levels used:    1
 51186 ;; This function calls:
 51187 ;;		Nothing
 51188 ;; This function is called by:
 51189 ;; This function uses a non-reentrant model
 51190 ;;
 51191                           
 51192                           	psect	text242
 51193  014302                     __ptext242:
 51194                           	opt stack 0
 51195  014302                     i2_ExternalFlash_MediaDetect:
 51196                           	opt stack 13
 51197                           
 51198                           ;external_flash.c: 31: return 1;
 51199                           
 51200                           ; BSR set to: 2
 51201                           ;incstack = 0
 51202  014302  0E01               	movlw	1
 51203  014304  0012               	return	
 51204  014306                     __end_ofi2_ExternalFlash_MediaDetect:
 51205                           	opt stack 0
 51206                           tosu	equ	0xFFF
 51207                           tosh	equ	0xFFE
 51208                           tosl	equ	0xFFD
 51209                           pclatu	equ	0xFFB
 51210                           pclath	equ	0xFFA
 51211                           tblptru	equ	0xFF8
 51212                           tblptrh	equ	0xFF7
 51213                           tblptrl	equ	0xFF6
 51214                           tablat	equ	0xFF5
 51215                           prodh	equ	0xFF4
 51216                           prodl	equ	0xFF3
 51217                           intcon	equ	0xFF2
 51218                           intcon2	equ	0xFF1
 51219                           intcon3	equ	0xFF0
 51220                           indf0	equ	0xFEF
 51221                           postinc0	equ	0xFEE
 51222                           fsr0h	equ	0xFEA
 51223                           fsr0l	equ	0xFE9
 51224                           wreg	equ	0xFE8
 51225                           indf1	equ	0xFE7
 51226                           postinc1	equ	0xFE6
 51227                           postdec1	equ	0xFE5
 51228                           plusw1	equ	0xFE3
 51229                           fsr1h	equ	0xFE2
 51230                           fsr1l	equ	0xFE1
 51231                           indf2	equ	0xFDF
 51232                           postinc2	equ	0xFDE
 51233                           postdec2	equ	0xFDD
 51234                           plusw2	equ	0xFDB
 51235                           fsr2h	equ	0xFDA
 51236                           fsr2l	equ	0xFD9
 51237                           status	equ	0xFD8
 51238                           
 51239 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 51240 ;; Defined at:
 51241 ;;		line 81 in file "app_device_custom_hid.c"
 51242 ;; Parameters:    Size  Location     Type
 51243 ;;		None
 51244 ;; Auto vars:     Size  Location     Type
 51245 ;;		None
 51246 ;; Return value:  Size  Location     Type
 51247 ;;                  1    wreg      void 
 51248 ;; Registers used:
 51249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51250 ;; Tracked objects:
 51251 ;;		On entry : 0/0
 51252 ;;		On exit  : 0/0
 51253 ;;		Unchanged: 0/0
 51254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51259 ;;Total ram usage:        0 bytes
 51260 ;; Hardware stack levels used:    1
 51261 ;; Hardware stack levels required when called:    2
 51262 ;; This function calls:
 51263 ;;		_USBEnableEndpoint
 51264 ;;		i2_USBTransferOnePacket
 51265 ;; This function is called by:
 51266 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51267 ;; This function uses a non-reentrant model
 51268 ;;
 51269                           
 51270                           	psect	text243
 51271  013924                     __ptext243:
 51272                           	opt stack 0
 51273  013924                     _APP_DeviceCustomHIDInitialize:
 51274                           	opt stack 13
 51275                           
 51276                           ;app_device_custom_hid.c: 85: USBInHandle = 0;
 51277                           
 51278                           ;incstack = 0
 51279  013924  0E00               	movlw	0
 51280  013926  0100               	movlb	0	; () banked
 51281  013928  6FD7               	movwf	_USBInHandle& (0+255),b
 51282  01392A  0E00               	movlw	0
 51283  01392C  0100               	movlb	0	; () banked
 51284  01392E  6FD8               	movwf	(_USBInHandle+1)& (0+255),b
 51285                           
 51286                           ; BSR set to: 0
 51287                           ;app_device_custom_hid.c: 88: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 51288  013930  0E1E               	movlw	30
 51289  013932  6E36               	movwf	USBEnableEndpoint@options,c
 51290  013934  0E01               	movlw	1
 51291  013936  ECEA  F09B         	call	_USBEnableEndpoint
 51292                           
 51293                           ;app_device_custom_hid.c: 91: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 51294  01393A  0E00               	movlw	0
 51295  01393C  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 51296  01393E  0E78               	movlw	low _ReceivedDataBuffer
 51297  013940  6E2F               	movwf	i2USBTransferOnePacket@data,c
 51298  013942  0E04               	movlw	high _ReceivedDataBuffer
 51299  013944  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 51300  013946  0E40               	movlw	64
 51301  013948  6E31               	movwf	i2USBTransferOnePacket@len,c
 51302  01394A  0E01               	movlw	1
 51303  01394C  ECA6  F07F         	call	i2_USBTransferOnePacket
 51304  013950  C02E  F1E9         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 51305  013954  C02F  F1EA         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 51306  013958  0012               	return		;funcret
 51307  01395A                     __end_of_APP_DeviceCustomHIDInitialize:
 51308                           	opt stack 0
 51309                           tosu	equ	0xFFF
 51310                           tosh	equ	0xFFE
 51311                           tosl	equ	0xFFD
 51312                           pclatu	equ	0xFFB
 51313                           pclath	equ	0xFFA
 51314                           tblptru	equ	0xFF8
 51315                           tblptrh	equ	0xFF7
 51316                           tblptrl	equ	0xFF6
 51317                           tablat	equ	0xFF5
 51318                           prodh	equ	0xFF4
 51319                           prodl	equ	0xFF3
 51320                           intcon	equ	0xFF2
 51321                           intcon2	equ	0xFF1
 51322                           intcon3	equ	0xFF0
 51323                           indf0	equ	0xFEF
 51324                           postinc0	equ	0xFEE
 51325                           fsr0h	equ	0xFEA
 51326                           fsr0l	equ	0xFE9
 51327                           wreg	equ	0xFE8
 51328                           indf1	equ	0xFE7
 51329                           postinc1	equ	0xFE6
 51330                           postdec1	equ	0xFE5
 51331                           plusw1	equ	0xFE3
 51332                           fsr1h	equ	0xFE2
 51333                           fsr1l	equ	0xFE1
 51334                           indf2	equ	0xFDF
 51335                           postinc2	equ	0xFDE
 51336                           postdec2	equ	0xFDD
 51337                           plusw2	equ	0xFDB
 51338                           fsr2h	equ	0xFDA
 51339                           fsr2l	equ	0xFD9
 51340                           status	equ	0xFD8
 51341                           
 51342 ;; *************** function i2_USBTransferOnePacket *****************
 51343 ;; Defined at:
 51344 ;;		line 995 in file "usb_device.c"
 51345 ;; Parameters:    Size  Location     Type
 51346 ;;  ep              1    wreg     unsigned char 
 51347 ;;  dir             1    0[COMRAM] unsigned char 
 51348 ;;  data            2    1[COMRAM] PTR unsigned char 
 51349 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 51350 ;;		 -> msd_cbw(31), NULL(0), 
 51351 ;;  len             1    3[COMRAM] unsigned char 
 51352 ;; Auto vars:     Size  Location     Type
 51353 ;;  ep              1    8[COMRAM] unsigned char 
 51354 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 51355 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51356 ;; Return value:  Size  Location     Type
 51357 ;;                  2    0[COMRAM] PTR void 
 51358 ;; Registers used:
 51359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51360 ;; Tracked objects:
 51361 ;;		On entry : 0/0
 51362 ;;		On exit  : 0/0
 51363 ;;		Unchanged: 0/0
 51364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51366 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51367 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51368 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51369 ;;Total ram usage:       11 bytes
 51370 ;; Hardware stack levels used:    1
 51371 ;; This function calls:
 51372 ;;		Nothing
 51373 ;; This function is called by:
 51374 ;;		_USBMSDInit
 51375 ;;		_USBCheckMSDRequest
 51376 ;;		_MSDTransferTerminated
 51377 ;;		_APP_DeviceCustomHIDInitialize
 51378 ;; This function uses a non-reentrant model
 51379 ;;
 51380                           
 51381                           	psect	text244
 51382  00FF4C                     __ptext244:
 51383                           	opt stack 0
 51384  00FF4C                     i2_USBTransferOnePacket:
 51385                           	opt stack 14
 51386                           
 51387                           ;incstack = 0
 51388                           ;i2USBTransferOnePacket@ep stored from wreg
 51389  00FF4C  6E36               	movwf	i2USBTransferOnePacket@ep,c
 51390                           
 51391                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 51392                           ;usb_device.c: 1000: if(dir != 0)
 51393  00FF4E  502E               	movf	i2USBTransferOnePacket@dir,w,c
 51394  00FF50  B4D8               	btfsc	status,2,c
 51395  00FF52  D007               	goto	i2l11285
 51396                           
 51397                           ;usb_device.c: 1001: {
 51398                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 51399  00FF54  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51400  00FF56  0D02               	mullw	2
 51401  00FF58  0E10               	movlw	low _pBDTEntryIn
 51402  00FF5A  24F3               	addwf	prodl,w,c
 51403  00FF5C  6ED9               	movwf	fsr2l,c
 51404  00FF5E  0E00               	movlw	high _pBDTEntryIn
 51405  00FF60  D006               	goto	L64
 51406  00FF62                     i2l11285:
 51407                           
 51408                           ;usb_device.c: 1005: else
 51409                           ;usb_device.c: 1006: {
 51410                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 51411  00FF62  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51412  00FF64  0D02               	mullw	2
 51413  00FF66  0ED3               	movlw	low _pBDTEntryOut
 51414  00FF68  24F3               	addwf	prodl,w,c
 51415  00FF6A  6ED9               	movwf	fsr2l,c
 51416  00FF6C  0E01               	movlw	high _pBDTEntryOut
 51417  00FF6E                     L64:
 51418  00FF6E  20F4               	addwfc	prodh,w,c
 51419  00FF70  6EDA               	movwf	fsr2h,c
 51420  00FF72  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 51421  00FF76  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 51422                           
 51423                           ;usb_device.c: 1009: }
 51424                           ;usb_device.c: 1013: if(handle == 0)
 51425  00FF7A  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51426  00FF7C  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 51427  00FF7E  A4D8               	btfss	status,2,c
 51428  00FF80  D005               	goto	i2l11293
 51429                           
 51430                           ;usb_device.c: 1014: {
 51431                           ;usb_device.c: 1015: return 0;
 51432  00FF82  0E00               	movlw	0
 51433  00FF84  6E2E               	movwf	?i2_USBTransferOnePacket,c
 51434  00FF86  0E00               	movlw	0
 51435  00FF88  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 51436  00FF8A  0012               	return	
 51437  00FF8C                     i2l11293:
 51438                           
 51439                           ;usb_device.c: 1016: }
 51440                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 51441  00FF8C  EE20 F002          	lfsr	2,2
 51442  00FF90  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51443  00FF92  26D9               	addwf	fsr2l,f,c
 51444  00FF94  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 51445  00FF96  22DA               	addwfc	fsr2h,f,c
 51446  00FF98  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 51447  00FF9C  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 51448                           
 51449                           ;usb_device.c: 1030: handle->CNT = len;
 51450  00FFA0  EE20 F001          	lfsr	2,1
 51451  00FFA4  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51452  00FFA6  26D9               	addwf	fsr2l,f,c
 51453  00FFA8  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 51454  00FFAA  22DA               	addwfc	fsr2h,f,c
 51455  00FFAC  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 51456                           
 51457                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 51458  00FFB0  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51459  00FFB4  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51460  00FFB8  0E40               	movlw	64
 51461  00FFBA  16DF               	andwf	indf2,f,c
 51462                           
 51463                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 51464  00FFBC  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51465  00FFC0  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51466  00FFC4  0E00               	movlw	0
 51467  00FFC6  86DB               	bsf	plusw2,3,c
 51468                           
 51469                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 51470  00FFC8  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51471  00FFCC  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51472  00FFD0  0E00               	movlw	0
 51473  00FFD2  8EDB               	bsf	plusw2,7,c
 51474                           
 51475                           ;usb_device.c: 1036: if(dir != 0)
 51476  00FFD4  502E               	movf	i2USBTransferOnePacket@dir,w,c
 51477  00FFD6  B4D8               	btfsc	status,2,c
 51478  00FFD8  D018               	goto	i2l11305
 51479                           
 51480                           ;usb_device.c: 1037: {
 51481                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 51482  00FFDA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51483  00FFDC  0D02               	mullw	2
 51484  00FFDE  0E10               	movlw	low _pBDTEntryIn
 51485  00FFE0  24F3               	addwf	prodl,w,c
 51486  00FFE2  6ED9               	movwf	fsr2l,c
 51487  00FFE4  0E00               	movlw	high _pBDTEntryIn
 51488  00FFE6  20F4               	addwfc	prodh,w,c
 51489  00FFE8  6EDA               	movwf	fsr2h,c
 51490  00FFEA  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 51491  00FFEE  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 51492  00FFF2  0E04               	movlw	4
 51493  00FFF4  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 51494  00FFF6  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 51495  00FFF8  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 51496  00FFFA  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 51497  00FFFC  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51498  00FFFE  0D02               	mullw	2
 51499  010000  0E10               	movlw	low _pBDTEntryIn
 51500  010002  24F3               	addwf	prodl,w,c
 51501  010004  6ED9               	movwf	fsr2l,c
 51502  010006  0E00               	movlw	high _pBDTEntryIn
 51503  010008  D017               	goto	L65
 51504  01000A                     i2l11305:
 51505                           
 51506                           ;usb_device.c: 1041: else
 51507                           ;usb_device.c: 1042: {
 51508                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 51509  01000A  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51510  01000C  0D02               	mullw	2
 51511  01000E  0ED3               	movlw	low _pBDTEntryOut
 51512  010010  24F3               	addwf	prodl,w,c
 51513  010012  6ED9               	movwf	fsr2l,c
 51514  010014  0E01               	movlw	high _pBDTEntryOut
 51515  010016  20F4               	addwfc	prodh,w,c
 51516  010018  6EDA               	movwf	fsr2h,c
 51517  01001A  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 51518  01001E  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 51519  010022  0E04               	movlw	4
 51520  010024  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 51521  010026  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 51522  010028  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 51523  01002A  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 51524  01002C  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51525  01002E  0D02               	mullw	2
 51526  010030  0ED3               	movlw	low _pBDTEntryOut
 51527  010032  24F3               	addwf	prodl,w,c
 51528  010034  6ED9               	movwf	fsr2l,c
 51529  010036  0E01               	movlw	high _pBDTEntryOut
 51530  010038                     L65:
 51531  010038  20F4               	addwfc	prodh,w,c
 51532  01003A  6EDA               	movwf	fsr2h,c
 51533  01003C  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 51534  010040  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 51535                           
 51536                           ;usb_device.c: 1045: }
 51537                           ;usb_device.c: 1046: return (void*)handle;
 51538  010044  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 51539  010048  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 51540  01004C  0012               	return	
 51541  01004E                     __end_ofi2_USBTransferOnePacket:
 51542                           	opt stack 0
 51543                           tosu	equ	0xFFF
 51544                           tosh	equ	0xFFE
 51545                           tosl	equ	0xFFD
 51546                           pclatu	equ	0xFFB
 51547                           pclath	equ	0xFFA
 51548                           tblptru	equ	0xFF8
 51549                           tblptrh	equ	0xFF7
 51550                           tblptrl	equ	0xFF6
 51551                           tablat	equ	0xFF5
 51552                           prodh	equ	0xFF4
 51553                           prodl	equ	0xFF3
 51554                           intcon	equ	0xFF2
 51555                           intcon2	equ	0xFF1
 51556                           intcon3	equ	0xFF0
 51557                           indf0	equ	0xFEF
 51558                           postinc0	equ	0xFEE
 51559                           fsr0h	equ	0xFEA
 51560                           fsr0l	equ	0xFE9
 51561                           wreg	equ	0xFE8
 51562                           indf1	equ	0xFE7
 51563                           postinc1	equ	0xFE6
 51564                           postdec1	equ	0xFE5
 51565                           plusw1	equ	0xFE3
 51566                           fsr1h	equ	0xFE2
 51567                           fsr1l	equ	0xFE1
 51568                           indf2	equ	0xFDF
 51569                           postinc2	equ	0xFDE
 51570                           postdec2	equ	0xFDD
 51571                           plusw2	equ	0xFDB
 51572                           fsr2h	equ	0xFDA
 51573                           fsr2l	equ	0xFD9
 51574                           status	equ	0xFD8
 51575                           
 51576 ;; *************** function _USBEnableEndpoint *****************
 51577 ;; Defined at:
 51578 ;;		line 878 in file "usb_device.c"
 51579 ;; Parameters:    Size  Location     Type
 51580 ;;  ep              1    wreg     unsigned char 
 51581 ;;  options         1    8[COMRAM] unsigned char 
 51582 ;; Auto vars:     Size  Location     Type
 51583 ;;  ep              1   11[COMRAM] unsigned char 
 51584 ;;  p               2    9[COMRAM] PTR unsigned char 
 51585 ;;		 -> UEP0(1), 
 51586 ;; Return value:  Size  Location     Type
 51587 ;;                  1    wreg      void 
 51588 ;; Registers used:
 51589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51590 ;; Tracked objects:
 51591 ;;		On entry : 0/0
 51592 ;;		On exit  : 0/0
 51593 ;;		Unchanged: 0/0
 51594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51595 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51599 ;;Total ram usage:        4 bytes
 51600 ;; Hardware stack levels used:    1
 51601 ;; Hardware stack levels required when called:    1
 51602 ;; This function calls:
 51603 ;;		_USBConfigureEndpoint
 51604 ;; This function is called by:
 51605 ;;		_APP_DeviceCustomHIDInitialize
 51606 ;;		_APP_DeviceMSDInitialize
 51607 ;; This function uses a non-reentrant model
 51608 ;;
 51609                           
 51610                           	psect	text245
 51611  0137D4                     __ptext245:
 51612                           	opt stack 0
 51613  0137D4                     _USBEnableEndpoint:
 51614                           	opt stack 13
 51615                           
 51616                           ;incstack = 0
 51617                           ;USBEnableEndpoint@ep stored from wreg
 51618  0137D4  6E39               	movwf	USBEnableEndpoint@ep,c
 51619                           
 51620                           ;usb_device.c: 880: unsigned char* p;
 51621                           ;usb_device.c: 884: if(options & 0x04)
 51622  0137D6  A436               	btfss	USBEnableEndpoint@options,2,c
 51623  0137D8  D005               	goto	i2l11339
 51624                           
 51625                           ;usb_device.c: 885: {
 51626                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 51627  0137DA  0E00               	movlw	0
 51628  0137DC  6E2E               	movwf	USBConfigureEndpoint@direction,c
 51629  0137DE  5039               	movf	USBEnableEndpoint@ep,w,c
 51630  0137E0  EC50  F08D         	call	_USBConfigureEndpoint
 51631  0137E4                     i2l11339:
 51632                           
 51633                           ;usb_device.c: 887: }
 51634                           ;usb_device.c: 888: if(options & 0x02)
 51635  0137E4  A236               	btfss	USBEnableEndpoint@options,1,c
 51636  0137E6  D005               	goto	i2l11343
 51637                           
 51638                           ;usb_device.c: 889: {
 51639                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 51640  0137E8  0E01               	movlw	1
 51641  0137EA  6E2E               	movwf	USBConfigureEndpoint@direction,c
 51642  0137EC  5039               	movf	USBEnableEndpoint@ep,w,c
 51643  0137EE  EC50  F08D         	call	_USBConfigureEndpoint
 51644  0137F2                     i2l11343:
 51645                           
 51646                           ;usb_device.c: 891: }
 51647                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 51648  0137F2  5039               	movf	USBEnableEndpoint@ep,w,c
 51649  0137F4  0D01               	mullw	1
 51650  0137F6  0E26               	movlw	38
 51651  0137F8  24F3               	addwf	prodl,w,c
 51652  0137FA  6E37               	movwf	USBEnableEndpoint@p,c
 51653  0137FC  0E0F               	movlw	15
 51654  0137FE  20F4               	addwfc	prodh,w,c
 51655  013800  6E38               	movwf	USBEnableEndpoint@p+1,c
 51656                           
 51657                           ;usb_device.c: 901: *p = options;
 51658  013802  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 51659  013806  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 51660  01380A  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 51661  01380E  0012               	return		;funcret
 51662  013810                     __end_of_USBEnableEndpoint:
 51663                           	opt stack 0
 51664                           tosu	equ	0xFFF
 51665                           tosh	equ	0xFFE
 51666                           tosl	equ	0xFFD
 51667                           pclatu	equ	0xFFB
 51668                           pclath	equ	0xFFA
 51669                           tblptru	equ	0xFF8
 51670                           tblptrh	equ	0xFF7
 51671                           tblptrl	equ	0xFF6
 51672                           tablat	equ	0xFF5
 51673                           prodh	equ	0xFF4
 51674                           prodl	equ	0xFF3
 51675                           intcon	equ	0xFF2
 51676                           intcon2	equ	0xFF1
 51677                           intcon3	equ	0xFF0
 51678                           indf0	equ	0xFEF
 51679                           postinc0	equ	0xFEE
 51680                           fsr0h	equ	0xFEA
 51681                           fsr0l	equ	0xFE9
 51682                           wreg	equ	0xFE8
 51683                           indf1	equ	0xFE7
 51684                           postinc1	equ	0xFE6
 51685                           postdec1	equ	0xFE5
 51686                           plusw1	equ	0xFE3
 51687                           fsr1h	equ	0xFE2
 51688                           fsr1l	equ	0xFE1
 51689                           indf2	equ	0xFDF
 51690                           postinc2	equ	0xFDE
 51691                           postdec2	equ	0xFDD
 51692                           plusw2	equ	0xFDB
 51693                           fsr2h	equ	0xFDA
 51694                           fsr2l	equ	0xFD9
 51695                           status	equ	0xFD8
 51696                           
 51697 ;; *************** function _USBConfigureEndpoint *****************
 51698 ;; Defined at:
 51699 ;;		line 1545 in file "usb_device.c"
 51700 ;; Parameters:    Size  Location     Type
 51701 ;;  EPNum           1    wreg     unsigned char 
 51702 ;;  direction       1    0[COMRAM] unsigned char 
 51703 ;; Auto vars:     Size  Location     Type
 51704 ;;  EPNum           1    5[COMRAM] unsigned char 
 51705 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 51706 ;;		 -> BDT(48), 
 51707 ;; Return value:  Size  Location     Type
 51708 ;;                  1    wreg      void 
 51709 ;; Registers used:
 51710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51711 ;; Tracked objects:
 51712 ;;		On entry : 0/0
 51713 ;;		On exit  : 0/0
 51714 ;;		Unchanged: 0/0
 51715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51716 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51717 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51718 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51719 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51720 ;;Total ram usage:        8 bytes
 51721 ;; Hardware stack levels used:    1
 51722 ;; This function calls:
 51723 ;;		Nothing
 51724 ;; This function is called by:
 51725 ;;		_USBEnableEndpoint
 51726 ;; This function uses a non-reentrant model
 51727 ;;
 51728                           
 51729                           	psect	text246
 51730  011AA0                     __ptext246:
 51731                           	opt stack 0
 51732  011AA0                     _USBConfigureEndpoint:
 51733                           	opt stack 13
 51734                           
 51735                           ;incstack = 0
 51736                           ;USBConfigureEndpoint@EPNum stored from wreg
 51737  011AA0  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 51738                           
 51739                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;
 51740                           ;usb_device.c: 1551: handle = (volatile BDT_ENTRY*)&BDT[0];
 51741  011AA2  0E00               	movlw	0
 51742  011AA4  6E34               	movwf	USBConfigureEndpoint@handle,c
 51743  011AA6  0E0D               	movlw	13
 51744  011AA8  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 51745                           
 51746                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 51747  011AAA  502E               	movf	USBConfigureEndpoint@direction,w,c
 51748  011AAC  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 51749  011AAE  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 51750  011AB0  90D8               	bcf	status,0,c
 51751  011AB2  362F               	rlcf	??_USBConfigureEndpoint,f,c
 51752  011AB4  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 51753  011AB6  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51754  011AB8  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 51755  011ABA  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 51756  011ABC  90D8               	bcf	status,0,c
 51757  011ABE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51758  011AC0  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51759  011AC2  90D8               	bcf	status,0,c
 51760  011AC4  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51761  011AC6  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51762  011AC8  502F               	movf	??_USBConfigureEndpoint,w,c
 51763  011ACA  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 51764  011ACC  5030               	movf	??_USBConfigureEndpoint+1,w,c
 51765  011ACE  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 51766  011AD0  90D8               	bcf	status,0,c
 51767  011AD2  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51768  011AD4  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51769  011AD6  90D8               	bcf	status,0,c
 51770  011AD8  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51771  011ADA  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51772  011ADC  5031               	movf	??_USBConfigureEndpoint+2,w,c
 51773  011ADE  2634               	addwf	USBConfigureEndpoint@handle,f,c
 51774  011AE0  5032               	movf	??_USBConfigureEndpoint+3,w,c
 51775  011AE2  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 51776                           
 51777                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 51778  011AE4  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 51779  011AE8  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 51780  011AEC  9EDF               	bcf	indf2,7,c
 51781                           
 51782                           ;usb_device.c: 1559: if(direction == 0)
 51783  011AEE  502E               	movf	USBConfigureEndpoint@direction,w,c
 51784  011AF0  A4D8               	btfss	status,2,c
 51785  011AF2  D007               	goto	i2l11153
 51786                           
 51787                           ;usb_device.c: 1560: {
 51788                           ;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 51789  011AF4  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51790  011AF6  0D02               	mullw	2
 51791  011AF8  0ED3               	movlw	low _pBDTEntryOut
 51792  011AFA  24F3               	addwf	prodl,w,c
 51793  011AFC  6ED9               	movwf	fsr2l,c
 51794  011AFE  0E01               	movlw	high _pBDTEntryOut
 51795  011B00  D006               	goto	L66
 51796  011B02                     i2l11153:
 51797                           
 51798                           ;usb_device.c: 1563: else
 51799                           ;usb_device.c: 1564: {
 51800                           ;usb_device.c: 1565: pBDTEntryIn[EPNum] = handle;
 51801  011B02  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51802  011B04  0D02               	mullw	2
 51803  011B06  0E10               	movlw	low _pBDTEntryIn
 51804  011B08  24F3               	addwf	prodl,w,c
 51805  011B0A  6ED9               	movwf	fsr2l,c
 51806  011B0C  0E00               	movlw	high _pBDTEntryIn
 51807  011B0E                     L66:
 51808  011B0E  20F4               	addwfc	prodh,w,c
 51809  011B10  6EDA               	movwf	fsr2h,c
 51810  011B12  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 51811  011B16  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 51812                           
 51813                           ;usb_device.c: 1566: }
 51814                           ;usb_device.c: 1569: handle->STAT.DTS = 0;
 51815  011B1A  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 51816  011B1E  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 51817  011B22  9CDF               	bcf	indf2,6,c
 51818                           
 51819                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 51820  011B24  EE20 F004          	lfsr	2,4
 51821  011B28  5034               	movf	USBConfigureEndpoint@handle,w,c
 51822  011B2A  26D9               	addwf	fsr2l,f,c
 51823  011B2C  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 51824  011B2E  22DA               	addwfc	fsr2h,f,c
 51825  011B30  8CDF               	bsf	indf2,6,c
 51826  011B32  0012               	return		;funcret
 51827  011B34                     __end_of_USBConfigureEndpoint:
 51828                           	opt stack 0
 51829                           tosu	equ	0xFFF
 51830                           tosh	equ	0xFFE
 51831                           tosl	equ	0xFFD
 51832                           pclatu	equ	0xFFB
 51833                           pclath	equ	0xFFA
 51834                           tblptru	equ	0xFF8
 51835                           tblptrh	equ	0xFF7
 51836                           tblptrl	equ	0xFF6
 51837                           tablat	equ	0xFF5
 51838                           prodh	equ	0xFF4
 51839                           prodl	equ	0xFF3
 51840                           intcon	equ	0xFF2
 51841                           intcon2	equ	0xFF1
 51842                           intcon3	equ	0xFF0
 51843                           indf0	equ	0xFEF
 51844                           postinc0	equ	0xFEE
 51845                           fsr0h	equ	0xFEA
 51846                           fsr0l	equ	0xFE9
 51847                           wreg	equ	0xFE8
 51848                           indf1	equ	0xFE7
 51849                           postinc1	equ	0xFE6
 51850                           postdec1	equ	0xFE5
 51851                           plusw1	equ	0xFE3
 51852                           fsr1h	equ	0xFE2
 51853                           fsr1l	equ	0xFE1
 51854                           indf2	equ	0xFDF
 51855                           postinc2	equ	0xFDE
 51856                           postdec2	equ	0xFDD
 51857                           plusw2	equ	0xFDB
 51858                           fsr2h	equ	0xFDA
 51859                           fsr2l	equ	0xFD9
 51860                           status	equ	0xFD8
 51861                           
 51862 ;; *************** function _USBCtrlTrfOutHandler *****************
 51863 ;; Defined at:
 51864 ;;		line 2540 in file "usb_device.c"
 51865 ;; Parameters:    Size  Location     Type
 51866 ;;		None
 51867 ;; Auto vars:     Size  Location     Type
 51868 ;;		None
 51869 ;; Return value:  Size  Location     Type
 51870 ;;                  1    wreg      void 
 51871 ;; Registers used:
 51872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51873 ;; Tracked objects:
 51874 ;;		On entry : 0/0
 51875 ;;		On exit  : 0/0
 51876 ;;		Unchanged: 0/0
 51877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51882 ;;Total ram usage:        0 bytes
 51883 ;; Hardware stack levels used:    1
 51884 ;; Hardware stack levels required when called:    2
 51885 ;; This function calls:
 51886 ;;		_USBCtrlTrfRxService
 51887 ;; This function is called by:
 51888 ;;		_USBCtrlEPService
 51889 ;; This function uses a non-reentrant model
 51890 ;;
 51891                           
 51892                           	psect	text247
 51893  013070                     __ptext247:
 51894                           	opt stack 0
 51895  013070                     _USBCtrlTrfOutHandler:
 51896                           	opt stack 13
 51897                           
 51898                           ;usb_device.c: 2542: if(controlTransferState == 2)
 51899                           
 51900                           ;incstack = 0
 51901  013070  0E02               	movlw	2
 51902  013072  1829               	xorwf	_controlTransferState,w,c	;volatile
 51903  013074  A4D8               	btfss	status,2,c
 51904  013076  D003               	goto	i2l13383
 51905                           
 51906                           ;usb_device.c: 2543: {
 51907                           ;usb_device.c: 2544: USBCtrlTrfRxService();
 51908  013078  EC14  F07D         	call	_USBCtrlTrfRxService	;wreg free
 51909                           
 51910                           ;usb_device.c: 2545: }
 51911  01307C  0012               	return	
 51912  01307E                     i2l13383:
 51913                           
 51914                           ;usb_device.c: 2546: else
 51915                           ;usb_device.c: 2547: {
 51916                           ;usb_device.c: 2550: controlTransferState = 0;
 51917  01307E  0E00               	movlw	0
 51918  013080  6E29               	movwf	_controlTransferState,c	;volatile
 51919                           
 51920                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 51921  013082  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 51922  013084  A4D8               	btfss	status,2,c
 51923  013086  D01F               	goto	i2l13391
 51924                           
 51925                           ;usb_device.c: 2558: {
 51926                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 51927  013088  EE20 F001          	lfsr	2,1
 51928  01308C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51929  01308E  26D9               	addwf	fsr2l,f,c
 51930  013090  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51931  013092  22DA               	addwfc	fsr2h,f,c
 51932  013094  0E08               	movlw	8
 51933  013096  6EDF               	movwf	indf2,c
 51934                           
 51935                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51936  013098  EE20 F002          	lfsr	2,2
 51937  01309C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51938  01309E  26D9               	addwf	fsr2l,f,c
 51939  0130A0  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51940  0130A2  22DA               	addwfc	fsr2h,f,c
 51941  0130A4  0E30               	movlw	48
 51942  0130A6  6EDE               	movwf	postinc2,c
 51943  0130A8  0E0D               	movlw	13
 51944  0130AA  6EDD               	movwf	postdec2,c
 51945                           
 51946                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 51947  0130AC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51948  0130B0  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51949  0130B4  0E0C               	movlw	12
 51950  0130B6  6EDF               	movwf	indf2,c
 51951                           
 51952                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51953  0130B8  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51954  0130BC  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51955  0130C0  0E00               	movlw	0
 51956  0130C2  8EDB               	bsf	plusw2,7,c
 51957                           
 51958                           ;usb_device.c: 2563: }
 51959  0130C4  0012               	return	
 51960  0130C6                     i2l13391:
 51961                           
 51962                           ;usb_device.c: 2564: else
 51963                           ;usb_device.c: 2565: {
 51964                           ;usb_device.c: 2566: BothEP0OutUOWNsSet = 0;
 51965  0130C6  0E00               	movlw	0
 51966  0130C8  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 51967  0130CA  0012               	return	
 51968  0130CC                     __end_of_USBCtrlTrfOutHandler:
 51969                           	opt stack 0
 51970                           tosu	equ	0xFFF
 51971                           tosh	equ	0xFFE
 51972                           tosl	equ	0xFFD
 51973                           pclatu	equ	0xFFB
 51974                           pclath	equ	0xFFA
 51975                           tblptru	equ	0xFF8
 51976                           tblptrh	equ	0xFF7
 51977                           tblptrl	equ	0xFF6
 51978                           tablat	equ	0xFF5
 51979                           prodh	equ	0xFF4
 51980                           prodl	equ	0xFF3
 51981                           intcon	equ	0xFF2
 51982                           intcon2	equ	0xFF1
 51983                           intcon3	equ	0xFF0
 51984                           indf0	equ	0xFEF
 51985                           postinc0	equ	0xFEE
 51986                           fsr0h	equ	0xFEA
 51987                           fsr0l	equ	0xFE9
 51988                           wreg	equ	0xFE8
 51989                           indf1	equ	0xFE7
 51990                           postinc1	equ	0xFE6
 51991                           postdec1	equ	0xFE5
 51992                           plusw1	equ	0xFE3
 51993                           fsr1h	equ	0xFE2
 51994                           fsr1l	equ	0xFE1
 51995                           indf2	equ	0xFDF
 51996                           postinc2	equ	0xFDE
 51997                           postdec2	equ	0xFDD
 51998                           plusw2	equ	0xFDB
 51999                           fsr2h	equ	0xFDA
 52000                           fsr2l	equ	0xFD9
 52001                           status	equ	0xFD8
 52002                           
 52003 ;; *************** function _USBCtrlTrfRxService *****************
 52004 ;; Defined at:
 52005 ;;		line 1854 in file "usb_device.c"
 52006 ;; Parameters:    Size  Location     Type
 52007 ;;		None
 52008 ;; Auto vars:     Size  Location     Type
 52009 ;;  byteToRead      1    1[COMRAM] unsigned char 
 52010 ;;  i               1    0[COMRAM] unsigned char 
 52011 ;; Return value:  Size  Location     Type
 52012 ;;                  1    wreg      void 
 52013 ;; Registers used:
 52014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52015 ;; Tracked objects:
 52016 ;;		On entry : 0/0
 52017 ;;		On exit  : 0/0
 52018 ;;		Unchanged: 0/0
 52019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52024 ;;Total ram usage:        2 bytes
 52025 ;; Hardware stack levels used:    1
 52026 ;; Hardware stack levels required when called:    1
 52027 ;; This function calls:
 52028 ;;		_USBCtrlEPAllowStatusStage
 52029 ;; This function is called by:
 52030 ;;		_USBCtrlTrfOutHandler
 52031 ;; This function uses a non-reentrant model
 52032 ;;
 52033                           
 52034                           	psect	text248
 52035  00FA28                     __ptext248:
 52036                           	opt stack 0
 52037  00FA28                     _USBCtrlTrfRxService:
 52038                           	opt stack 13
 52039                           
 52040                           ;usb_device.c: 1856: uint8_t byteToRead;
 52041                           ;usb_device.c: 1857: uint8_t i;
 52042                           ;usb_device.c: 1861: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 52043                           
 52044                           ;incstack = 0
 52045  00FA28  EE20 F001          	lfsr	2,1
 52046  00FA2C  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 52047  00FA2E  26D9               	addwf	fsr2l,f,c
 52048  00FA30  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52049  00FA32  22DA               	addwfc	fsr2h,f,c
 52050  00FA34  50DF               	movf	indf2,w,c
 52051  00FA36  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 52052                           
 52053                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 52054  00FA38  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 52055  00FA3A  5C05               	subwf	_outPipes+4,w,c	;volatile
 52056  00FA3C  0E00               	movlw	0
 52057  00FA3E  5806               	subwfb	_outPipes+5,w,c	;volatile
 52058  00FA40  A0D8               	btfss	status,0,c
 52059                           
 52060                           ;usb_device.c: 1868: {
 52061                           ;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 52062  00FA42  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 52063                           
 52064                           ;usb_device.c: 1870: }
 52065                           ;usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 52066  00FA46  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 52067  00FA48  5E05               	subwf	_outPipes+4,f,c	;volatile
 52068  00FA4A  0E00               	movlw	0
 52069  00FA4C  5A06               	subwfb	_outPipes+5,f,c	;volatile
 52070                           
 52071                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 52072  00FA4E  0E00               	movlw	0
 52073  00FA50  6E2E               	movwf	USBCtrlTrfRxService@i,c
 52074  00FA52  D011               	goto	i2l12871
 52075  00FA54                     i2l12865:
 52076                           
 52077                           ;usb_device.c: 1877: {
 52078                           ;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 52079  00FA54  502E               	movf	USBCtrlTrfRxService@i,w,c
 52080  00FA56  0D01               	mullw	1
 52081  00FA58  0E38               	movlw	56
 52082  00FA5A  24F3               	addwf	prodl,w,c
 52083  00FA5C  6ED9               	movwf	fsr2l,c
 52084  00FA5E  0E0D               	movlw	13
 52085  00FA60  20F4               	addwfc	prodh,w,c
 52086  00FA62  6EDA               	movwf	fsr2h,c
 52087  00FA64  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 52088  00FA68  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 52089  00FA6C  CFDF FFE7          	movff	indf2,indf1
 52090  00FA70  4A01               	infsnz	_outPipes,f,c	;volatile
 52091  00FA72  2A02               	incf	_outPipes+1,f,c	;volatile
 52092  00FA74  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 52093  00FA76                     i2l12871:
 52094  00FA76  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 52095  00FA78  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 52096  00FA7A  A0D8               	btfss	status,0,c
 52097  00FA7C  D7EB               	goto	i2l12865
 52098                           
 52099                           ;usb_device.c: 1879: }
 52100                           ;usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 52101  00FA7E  5005               	movf	_outPipes+4,w,c	;volatile
 52102  00FA80  1006               	iorwf	_outPipes+5,w,c	;volatile
 52103  00FA82  B4D8               	btfsc	status,2,c
 52104  00FA84  D032               	goto	i2l12887
 52105                           
 52106                           ;usb_device.c: 1884: {
 52107                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 52108  00FA86  EE20 F001          	lfsr	2,1
 52109  00FA8A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52110  00FA8C  26D9               	addwf	fsr2l,f,c
 52111  00FA8E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52112  00FA90  22DA               	addwfc	fsr2h,f,c
 52113  00FA92  0E08               	movlw	8
 52114  00FA94  6EDF               	movwf	indf2,c
 52115                           
 52116                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 52117  00FA96  EE20 F002          	lfsr	2,2
 52118  00FA9A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52119  00FA9C  26D9               	addwf	fsr2l,f,c
 52120  00FA9E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52121  00FAA0  22DA               	addwfc	fsr2h,f,c
 52122  00FAA2  0E38               	movlw	56
 52123  00FAA4  6EDE               	movwf	postinc2,c
 52124  00FAA6  0E0D               	movlw	13
 52125  00FAA8  6EDD               	movwf	postdec2,c
 52126                           
 52127                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 52128  00FAAA  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52129  00FAAE  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52130  00FAB2  BCDF               	btfsc	indf2,6,c
 52131  00FAB4  D00D               	goto	i2l12883
 52132                           
 52133                           ;usb_device.c: 1888: {
 52134                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 52135  00FAB6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52136  00FABA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52137  00FABE  0E48               	movlw	72
 52138  00FAC0  6EDF               	movwf	indf2,c
 52139                           
 52140                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52141  00FAC2  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52142  00FAC6  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52143  00FACA  0E00               	movlw	0
 52144  00FACC  8EDB               	bsf	plusw2,7,c
 52145                           
 52146                           ;usb_device.c: 1891: }
 52147  00FACE  0012               	return	
 52148  00FAD0                     i2l12883:
 52149                           
 52150                           ;usb_device.c: 1892: else
 52151                           ;usb_device.c: 1893: {
 52152                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 52153  00FAD0  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52154  00FAD4  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52155  00FAD8  0E08               	movlw	8
 52156  00FADA  6EDF               	movwf	indf2,c
 52157                           
 52158                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52159  00FADC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52160  00FAE0  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52161  00FAE4  0E00               	movlw	0
 52162  00FAE6  8EDB               	bsf	plusw2,7,c
 52163                           
 52164                           ;usb_device.c: 1896: }
 52165                           ;usb_device.c: 1897: }
 52166  00FAE8  0012               	return	
 52167  00FAEA                     i2l12887:
 52168                           
 52169                           ;usb_device.c: 1898: else
 52170                           ;usb_device.c: 1899: {
 52171                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->CNT = 8;
 52172  00FAEA  EE20 F001          	lfsr	2,1
 52173  00FAEE  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52174  00FAF0  26D9               	addwf	fsr2l,f,c
 52175  00FAF2  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52176  00FAF4  22DA               	addwfc	fsr2h,f,c
 52177  00FAF6  0E08               	movlw	8
 52178  00FAF8  6EDF               	movwf	indf2,c
 52179                           
 52180                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52181  00FAFA  EE20 F002          	lfsr	2,2
 52182  00FAFE  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52183  00FB00  26D9               	addwf	fsr2l,f,c
 52184  00FB02  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52185  00FB04  22DA               	addwfc	fsr2h,f,c
 52186  00FB06  0E30               	movlw	48
 52187  00FB08  6EDE               	movwf	postinc2,c
 52188  00FB0A  0E0D               	movlw	13
 52189  00FB0C  6EDD               	movwf	postdec2,c
 52190                           
 52191                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 52192  00FB0E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52193  00FB12  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52194  00FB16  0E04               	movlw	4
 52195  00FB18  6EDF               	movwf	indf2,c
 52196                           
 52197                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52198  00FB1A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52199  00FB1E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52200  00FB22  0E00               	movlw	0
 52201  00FB24  8EDB               	bsf	plusw2,7,c
 52202                           
 52203                           ;usb_device.c: 1928: }
 52204                           ;usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 52205                           
 52206                           ;usb_device.c: 1917: {
 52207                           ;usb_device.c: 1923: outPipes[0].pFunc();
 52208  00FB26  9E04               	bcf	_outPipes+3,7,c	;volatile
 52209                           
 52210                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 52211  00FB28  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 52212  00FB2A  A4D8               	btfss	status,2,c
 52213  00FB2C  0012               	return	
 52214                           
 52215                           ;usb_device.c: 1944: {
 52216                           ;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 52217  00FB2E  EC3B  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 52218  00FB32  0012               	return	
 52219  00FB34                     __end_of_USBCtrlTrfRxService:
 52220                           	opt stack 0
 52221                           tosu	equ	0xFFF
 52222                           tosh	equ	0xFFE
 52223                           tosl	equ	0xFFD
 52224                           pclatu	equ	0xFFB
 52225                           pclath	equ	0xFFA
 52226                           tblptru	equ	0xFF8
 52227                           tblptrh	equ	0xFF7
 52228                           tblptrl	equ	0xFF6
 52229                           tablat	equ	0xFF5
 52230                           prodh	equ	0xFF4
 52231                           prodl	equ	0xFF3
 52232                           intcon	equ	0xFF2
 52233                           intcon2	equ	0xFF1
 52234                           intcon3	equ	0xFF0
 52235                           indf0	equ	0xFEF
 52236                           postinc0	equ	0xFEE
 52237                           fsr0h	equ	0xFEA
 52238                           fsr0l	equ	0xFE9
 52239                           wreg	equ	0xFE8
 52240                           indf1	equ	0xFE7
 52241                           postinc1	equ	0xFE6
 52242                           postdec1	equ	0xFE5
 52243                           plusw1	equ	0xFE3
 52244                           fsr1h	equ	0xFE2
 52245                           fsr1l	equ	0xFE1
 52246                           indf2	equ	0xFDF
 52247                           postinc2	equ	0xFDE
 52248                           postdec2	equ	0xFDD
 52249                           plusw2	equ	0xFDB
 52250                           fsr2h	equ	0xFDA
 52251                           fsr2l	equ	0xFD9
 52252                           status	equ	0xFD8
 52253                           
 52254 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 52255 ;; Defined at:
 52256 ;;		line 1418 in file "usb_device.c"
 52257 ;; Parameters:    Size  Location     Type
 52258 ;;		None
 52259 ;; Auto vars:     Size  Location     Type
 52260 ;;		None
 52261 ;; Return value:  Size  Location     Type
 52262 ;;                  1    wreg      void 
 52263 ;; Registers used:
 52264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52265 ;; Tracked objects:
 52266 ;;		On entry : 0/0
 52267 ;;		On exit  : 0/0
 52268 ;;		Unchanged: 0/0
 52269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52274 ;;Total ram usage:        0 bytes
 52275 ;; Hardware stack levels used:    1
 52276 ;; This function calls:
 52277 ;;		Nothing
 52278 ;; This function is called by:
 52279 ;;		_USBDeviceTasks
 52280 ;;		_USBCtrlEPServiceComplete
 52281 ;;		_USBCtrlTrfRxService
 52282 ;; This function uses a non-reentrant model
 52283 ;;
 52284                           
 52285                           	psect	text249
 52286  010C76                     __ptext249:
 52287                           	opt stack 0
 52288  010C76                     _USBCtrlEPAllowStatusStage:
 52289                           	opt stack 13
 52290                           
 52291                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 52292                           
 52293                           ;incstack = 0
 52294  010C76  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 52295  010C78  A4D8               	btfss	status,2,c
 52296  010C7A  0012               	return	
 52297                           
 52298                           ;usb_device.c: 1426: {
 52299                           ;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 52300  010C7C  0E01               	movlw	1
 52301  010C7E  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 52302                           
 52303                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 52304  010C80  5021               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 52305  010C82  A4D8               	btfss	status,2,c
 52306  010C84  0012               	return	
 52307                           
 52308                           ;usb_device.c: 1429: {
 52309                           ;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 52310  010C86  0E01               	movlw	1
 52311  010C88  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 52312                           
 52313                           ;usb_device.c: 1434: if(controlTransferState == 2)
 52314  010C8A  0E02               	movlw	2
 52315  010C8C  1829               	xorwf	_controlTransferState,w,c	;volatile
 52316  010C8E  A4D8               	btfss	status,2,c
 52317  010C90  D015               	goto	i2l12207
 52318                           
 52319                           ;usb_device.c: 1435: {
 52320                           ;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 52321  010C92  EE20 F001          	lfsr	2,1
 52322  010C96  5010               	movf	_pBDTEntryIn,w,c
 52323  010C98  26D9               	addwf	fsr2l,f,c
 52324  010C9A  5011               	movf	_pBDTEntryIn+1,w,c
 52325  010C9C  22DA               	addwfc	fsr2h,f,c
 52326  010C9E  0E00               	movlw	0
 52327  010CA0  6EDF               	movwf	indf2,c
 52328                           
 52329                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 52330  010CA2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52331  010CA6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52332  010CAA  0E48               	movlw	72
 52333  010CAC  6EDF               	movwf	indf2,c
 52334                           
 52335                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52336  010CAE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52337  010CB2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52338  010CB6  0E00               	movlw	0
 52339  010CB8  8EDB               	bsf	plusw2,7,c
 52340                           
 52341                           ;usb_device.c: 1439: }
 52342  010CBA  0012               	return	
 52343  010CBC                     i2l12207:
 52344                           
 52345                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 52346  010CBC  0429               	decf	_controlTransferState,w,c	;volatile
 52347  010CBE  A4D8               	btfss	status,2,c
 52348  010CC0  0012               	return	
 52349                           
 52350                           ;usb_device.c: 1441: {
 52351                           ;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 52352  010CC2  0E00               	movlw	0
 52353  010CC4  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 52354                           
 52355                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 52356  010CC6  EE20 F001          	lfsr	2,1
 52357  010CCA  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 52358  010CCC  26D9               	addwf	fsr2l,f,c
 52359  010CCE  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52360  010CD0  22DA               	addwfc	fsr2h,f,c
 52361  010CD2  0E08               	movlw	8
 52362  010CD4  6EDF               	movwf	indf2,c
 52363                           
 52364                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 52365  010CD6  EE20 F002          	lfsr	2,2
 52366  010CDA  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 52367  010CDC  26D9               	addwf	fsr2l,f,c
 52368  010CDE  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52369  010CE0  22DA               	addwfc	fsr2h,f,c
 52370  010CE2  0E30               	movlw	48
 52371  010CE4  6EDE               	movwf	postinc2,c
 52372  010CE6  0E0D               	movlw	13
 52373  010CE8  6EDD               	movwf	postdec2,c
 52374                           
 52375                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 52376  010CEA  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52377  010CEE  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52378  010CF2  0E04               	movlw	4
 52379  010CF4  6EDF               	movwf	indf2,c
 52380                           
 52381                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 52382  010CF6  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52383  010CFA  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52384  010CFE  0E00               	movlw	0
 52385  010D00  8EDB               	bsf	plusw2,7,c
 52386                           
 52387                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 52388  010D02  0E01               	movlw	1
 52389  010D04  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 52390                           
 52391                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 52392  010D06  EE20 F001          	lfsr	2,1
 52393  010D0A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52394  010D0C  26D9               	addwf	fsr2l,f,c
 52395  010D0E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52396  010D10  22DA               	addwfc	fsr2h,f,c
 52397  010D12  0E08               	movlw	8
 52398  010D14  6EDF               	movwf	indf2,c
 52399                           
 52400                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52401  010D16  EE20 F002          	lfsr	2,2
 52402  010D1A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 52403  010D1C  26D9               	addwf	fsr2l,f,c
 52404  010D1E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 52405  010D20  22DA               	addwfc	fsr2h,f,c
 52406  010D22  0E30               	movlw	48
 52407  010D24  6EDE               	movwf	postinc2,c
 52408  010D26  0E0D               	movlw	13
 52409  010D28  6EDD               	movwf	postdec2,c
 52410                           
 52411                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 52412  010D2A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52413  010D2E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52414  010D32  0E80               	movlw	128
 52415  010D34  6EDF               	movwf	indf2,c
 52416  010D36  0012               	return	
 52417  010D38                     __end_of_USBCtrlEPAllowStatusStage:
 52418                           	opt stack 0
 52419                           tosu	equ	0xFFF
 52420                           tosh	equ	0xFFE
 52421                           tosl	equ	0xFFD
 52422                           pclatu	equ	0xFFB
 52423                           pclath	equ	0xFFA
 52424                           tblptru	equ	0xFF8
 52425                           tblptrh	equ	0xFF7
 52426                           tblptrl	equ	0xFF6
 52427                           tablat	equ	0xFF5
 52428                           prodh	equ	0xFF4
 52429                           prodl	equ	0xFF3
 52430                           intcon	equ	0xFF2
 52431                           intcon2	equ	0xFF1
 52432                           intcon3	equ	0xFF0
 52433                           indf0	equ	0xFEF
 52434                           postinc0	equ	0xFEE
 52435                           fsr0h	equ	0xFEA
 52436                           fsr0l	equ	0xFE9
 52437                           wreg	equ	0xFE8
 52438                           indf1	equ	0xFE7
 52439                           postinc1	equ	0xFE6
 52440                           postdec1	equ	0xFE5
 52441                           plusw1	equ	0xFE3
 52442                           fsr1h	equ	0xFE2
 52443                           fsr1l	equ	0xFE1
 52444                           indf2	equ	0xFDF
 52445                           postinc2	equ	0xFDE
 52446                           postdec2	equ	0xFDD
 52447                           plusw2	equ	0xFDB
 52448                           fsr2h	equ	0xFDA
 52449                           fsr2l	equ	0xFD9
 52450                           status	equ	0xFD8
 52451                           
 52452 ;; *************** function _USBCtrlTrfInHandler *****************
 52453 ;; Defined at:
 52454 ;;		line 2594 in file "usb_device.c"
 52455 ;; Parameters:    Size  Location     Type
 52456 ;;		None
 52457 ;; Auto vars:     Size  Location     Type
 52458 ;;  lastDTS         1    1[COMRAM] unsigned char 
 52459 ;; Return value:  Size  Location     Type
 52460 ;;                  1    wreg      void 
 52461 ;; Registers used:
 52462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52463 ;; Tracked objects:
 52464 ;;		On entry : 0/0
 52465 ;;		On exit  : 0/0
 52466 ;;		Unchanged: 0/0
 52467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52472 ;;Total ram usage:        1 bytes
 52473 ;; Hardware stack levels used:    1
 52474 ;; Hardware stack levels required when called:    1
 52475 ;; This function calls:
 52476 ;;		_USBCtrlTrfTxService
 52477 ;; This function is called by:
 52478 ;;		_USBCtrlEPService
 52479 ;; This function uses a non-reentrant model
 52480 ;;
 52481                           
 52482                           	psect	text250
 52483  010DF8                     __ptext250:
 52484                           	opt stack 0
 52485  010DF8                     _USBCtrlTrfInHandler:
 52486                           	opt stack 14
 52487                           
 52488                           ;usb_device.c: 2596: uint8_t lastDTS;
 52489                           ;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 52490                           
 52491                           ;incstack = 0
 52492  010DF8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52493  010DFC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52494  010E00  0E00               	movlw	0
 52495  010E02  BCDF               	btfsc	indf2,6,c
 52496  010E04  0E01               	movlw	1
 52497  010E06  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 52498                           
 52499                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 52500  010E08  0E04               	movlw	4
 52501  010E0A  1810               	xorwf	_pBDTEntryIn,w,c
 52502  010E0C  6E10               	movwf	_pBDTEntryIn,c
 52503  010E0E  5011               	movf	_pBDTEntryIn+1,w,c
 52504  010E10  6E11               	movwf	_pBDTEntryIn+1,c
 52505                           
 52506                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 52507  010E12  0E08               	movlw	8
 52508  010E14  182B               	xorwf	_USBDeviceState,w,c	;volatile
 52509  010E16  A4D8               	btfss	status,2,c
 52510  010E18  D00D               	goto	i2l13407
 52511                           
 52512                           ;usb_device.c: 2607: {
 52513                           ;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 52514  010E1A  010D               	movlb	13	; () banked
 52515  010E1C  5132               	movf	50,w,b	;volatile
 52516  010E1E  0B7F               	andlw	127
 52517  010E20  010F               	movlb	15	; () banked
 52518  010E22  6F38               	movwf	56,b	;volatile
 52519                           
 52520                           ; BSR set to: 15
 52521                           ;usb_device.c: 2609: if(UADDR != 0u)
 52522  010E24  010F               	movlb	15	; () banked
 52523  010E26  5138               	movf	56,w,b	;volatile
 52524  010E28  B4D8               	btfsc	status,2,c
 52525  010E2A  D002               	goto	i2l13405
 52526                           
 52527                           ; BSR set to: 15
 52528                           ;usb_device.c: 2610: {
 52529                           ;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 52530  010E2C  0E10               	movlw	16
 52531  010E2E  D001               	goto	L67
 52532  010E30                     i2l13405:
 52533                           
 52534                           ; BSR set to: 15
 52535                           ;usb_device.c: 2613: else
 52536                           ;usb_device.c: 2614: {
 52537                           ;usb_device.c: 2615: USBDeviceState=DEFAULT_STATE;
 52538  010E30  0E04               	movlw	4
 52539  010E32                     L67:
 52540  010E32  6E2B               	movwf	_USBDeviceState,c	;volatile
 52541  010E34                     i2l13407:
 52542                           
 52543                           ;usb_device.c: 2616: }
 52544                           ;usb_device.c: 2617: }
 52545                           ;usb_device.c: 2620: if(controlTransferState == 1)
 52546  010E34  0429               	decf	_controlTransferState,w,c	;volatile
 52547  010E36  A4D8               	btfss	status,2,c
 52548  010E38  D03A               	goto	i2l344
 52549                           
 52550                           ;usb_device.c: 2621: {
 52551                           ;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 52552  010E3A  EE20 F002          	lfsr	2,2
 52553  010E3E  5010               	movf	_pBDTEntryIn,w,c
 52554  010E40  26D9               	addwf	fsr2l,f,c
 52555  010E42  5011               	movf	_pBDTEntryIn+1,w,c
 52556  010E44  22DA               	addwfc	fsr2h,f,c
 52557  010E46  0E38               	movlw	56
 52558  010E48  6EDE               	movwf	postinc2,c
 52559  010E4A  0E0D               	movlw	13
 52560  010E4C  6EDD               	movwf	postdec2,c
 52561                           
 52562                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 52563  010E4E  EC6F  F085         	call	_USBCtrlTrfTxService	;wreg free
 52564                           
 52565                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 52566  010E52  0E02               	movlw	2
 52567  010E54  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 52568  010E56  A4D8               	btfss	status,2,c
 52569  010E58  D00D               	goto	i2l13419
 52570                           
 52571                           ;usb_device.c: 2630: {
 52572                           ;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 52573  010E5A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52574  010E5E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52575  010E62  0E04               	movlw	4
 52576  010E64  6EDF               	movwf	indf2,c
 52577                           
 52578                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52579  010E66  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52580  010E6A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52581  010E6E  0E00               	movlw	0
 52582  010E70  8EDB               	bsf	plusw2,7,c
 52583                           
 52584                           ;usb_device.c: 2635: }
 52585  010E72  0012               	return	
 52586  010E74                     i2l13419:
 52587                           
 52588                           ;usb_device.c: 2636: else
 52589                           ;usb_device.c: 2637: {
 52590                           ;usb_device.c: 2638: if(lastDTS == 0)
 52591  010E74  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 52592  010E76  A4D8               	btfss	status,2,c
 52593  010E78  D00D               	goto	i2l13425
 52594                           
 52595                           ;usb_device.c: 2639: {
 52596                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 52597  010E7A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52598  010E7E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52599  010E82  0E48               	movlw	72
 52600  010E84  6EDF               	movwf	indf2,c
 52601                           
 52602                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52603  010E86  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52604  010E8A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52605  010E8E  0E00               	movlw	0
 52606  010E90  8EDB               	bsf	plusw2,7,c
 52607                           
 52608                           ;usb_device.c: 2642: }
 52609  010E92  0012               	return	
 52610  010E94                     i2l13425:
 52611                           
 52612                           ;usb_device.c: 2643: else
 52613                           ;usb_device.c: 2644: {
 52614                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 52615  010E94  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52616  010E98  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52617  010E9C  0E08               	movlw	8
 52618  010E9E  6EDF               	movwf	indf2,c
 52619                           
 52620                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52621  010EA0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52622  010EA4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52623  010EA8  0E00               	movlw	0
 52624  010EAA  8EDB               	bsf	plusw2,7,c
 52625                           
 52626                           ;usb_device.c: 2647: }
 52627                           ;usb_device.c: 2648: }
 52628                           ;usb_device.c: 2649: }
 52629  010EAC  0012               	return	
 52630  010EAE                     i2l344:
 52631                           
 52632                           ;usb_device.c: 2650: else
 52633                           ;usb_device.c: 2651: {
 52634                           ;usb_device.c: 2655: if(outPipes[0].info.bits.busy == 1)
 52635  010EAE  BE04               	btfsc	_outPipes+3,7,c	;volatile
 52636                           
 52637                           ;usb_device.c: 2660: }
 52638                           ;usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 52639                           
 52640                           ;usb_device.c: 2658: {
 52641                           ;usb_device.c: 2659: outPipes[0].pFunc();
 52642  010EB0  9E04               	bcf	_outPipes+3,7,c	;volatile
 52643                           
 52644                           ;usb_device.c: 2662: }
 52645                           ;usb_device.c: 2664: controlTransferState = 0;
 52646  010EB2  0E00               	movlw	0
 52647  010EB4  6E29               	movwf	_controlTransferState,c	;volatile
 52648  010EB6  0012               	return	
 52649  010EB8                     __end_of_USBCtrlTrfInHandler:
 52650                           	opt stack 0
 52651                           tosu	equ	0xFFF
 52652                           tosh	equ	0xFFE
 52653                           tosl	equ	0xFFD
 52654                           pclatu	equ	0xFFB
 52655                           pclath	equ	0xFFA
 52656                           tblptru	equ	0xFF8
 52657                           tblptrh	equ	0xFF7
 52658                           tblptrl	equ	0xFF6
 52659                           tablat	equ	0xFF5
 52660                           prodh	equ	0xFF4
 52661                           prodl	equ	0xFF3
 52662                           intcon	equ	0xFF2
 52663                           intcon2	equ	0xFF1
 52664                           intcon3	equ	0xFF0
 52665                           indf0	equ	0xFEF
 52666                           postinc0	equ	0xFEE
 52667                           fsr0h	equ	0xFEA
 52668                           fsr0l	equ	0xFE9
 52669                           wreg	equ	0xFE8
 52670                           indf1	equ	0xFE7
 52671                           postinc1	equ	0xFE6
 52672                           postdec1	equ	0xFE5
 52673                           plusw1	equ	0xFE3
 52674                           fsr1h	equ	0xFE2
 52675                           fsr1l	equ	0xFE1
 52676                           indf2	equ	0xFDF
 52677                           postinc2	equ	0xFDE
 52678                           postdec2	equ	0xFDD
 52679                           plusw2	equ	0xFDB
 52680                           fsr2h	equ	0xFDA
 52681                           fsr2l	equ	0xFD9
 52682                           status	equ	0xFD8
 52683                           
 52684 ;; *************** function _USBCtrlTrfTxService *****************
 52685 ;; Defined at:
 52686 ;;		line 1773 in file "usb_device.c"
 52687 ;; Parameters:    Size  Location     Type
 52688 ;;		None
 52689 ;; Auto vars:     Size  Location     Type
 52690 ;;  byteToSend      1    0[COMRAM] unsigned char 
 52691 ;; Return value:  Size  Location     Type
 52692 ;;                  1    wreg      void 
 52693 ;; Registers used:
 52694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 52695 ;; Tracked objects:
 52696 ;;		On entry : 0/0
 52697 ;;		On exit  : 0/0
 52698 ;;		Unchanged: 0/0
 52699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52704 ;;Total ram usage:        1 bytes
 52705 ;; Hardware stack levels used:    1
 52706 ;; This function calls:
 52707 ;;		Nothing
 52708 ;; This function is called by:
 52709 ;;		_USBCtrlEPAllowDataStage
 52710 ;;		_USBCtrlTrfInHandler
 52711 ;; This function uses a non-reentrant model
 52712 ;;
 52713                           
 52714                           	psect	text251
 52715  010ADE                     __ptext251:
 52716                           	opt stack 0
 52717  010ADE                     _USBCtrlTrfTxService:
 52718                           	opt stack 12
 52719                           
 52720                           ;usb_device.c: 1775: uint8_t byteToSend;
 52721                           ;usb_device.c: 1779: byteToSend = 8;
 52722                           
 52723                           ;incstack = 0
 52724  010ADE  0E08               	movlw	8
 52725  010AE0  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 52726                           
 52727                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 52728  010AE2  500F               	movf	_inPipes+5,w,c	;volatile
 52729  010AE4  E110               	bnz	i2l11801
 52730  010AE6  0E08               	movlw	8
 52731  010AE8  5C0E               	subwf	_inPipes+4,w,c	;volatile
 52732  010AEA  B0D8               	btfsc	status,0,c
 52733  010AEC  D00C               	goto	i2l11801
 52734                           
 52735                           ;usb_device.c: 1781: {
 52736                           ;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 52737  010AEE  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 52738                           
 52739                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 52740  010AF2  502A               	movf	_shortPacketStatus,w,c	;volatile
 52741  010AF4  A4D8               	btfss	status,2,c
 52742  010AF6  D002               	goto	i2l11797
 52743                           
 52744                           ;usb_device.c: 1790: {
 52745                           ;usb_device.c: 1791: shortPacketStatus = 1;
 52746  010AF8  0E01               	movlw	1
 52747  010AFA  D004               	goto	L68
 52748  010AFC                     i2l11797:
 52749                           
 52750                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 52751  010AFC  042A               	decf	_shortPacketStatus,w,c	;volatile
 52752  010AFE  A4D8               	btfss	status,2,c
 52753  010B00  D002               	goto	i2l11801
 52754                           
 52755                           ;usb_device.c: 1794: {
 52756                           ;usb_device.c: 1795: shortPacketStatus = 2;
 52757  010B02  0E02               	movlw	2
 52758  010B04                     L68:
 52759  010B04  6E2A               	movwf	_shortPacketStatus,c	;volatile
 52760  010B06                     i2l11801:
 52761                           
 52762                           ;usb_device.c: 1796: }
 52763                           ;usb_device.c: 1797: }
 52764                           ;usb_device.c: 1801: inPipes[0].wCount.Val -= byteToSend;
 52765  010B06  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52766  010B08  5E0E               	subwf	_inPipes+4,f,c	;volatile
 52767  010B0A  0E00               	movlw	0
 52768  010B0C  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 52769                           
 52770                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 52771  010B0E  EE20 F001          	lfsr	2,1
 52772  010B12  5010               	movf	_pBDTEntryIn,w,c
 52773  010B14  26D9               	addwf	fsr2l,f,c
 52774  010B16  5011               	movf	_pBDTEntryIn+1,w,c
 52775  010B18  22DA               	addwfc	fsr2h,f,c
 52776  010B1A  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 52777                           
 52778                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 52779  010B1E  0E38               	movlw	56
 52780  010B20  0101               	movlb	1	; () banked
 52781  010B22  6FED               	movwf	_pDst& (0+255),b
 52782  010B24  0E0D               	movlw	13
 52783  010B26  0101               	movlb	1	; () banked
 52784  010B28  6FEE               	movwf	(_pDst+1)& (0+255),b
 52785                           
 52786                           ; BSR set to: 1
 52787                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 52788  010B2A  A00D               	btfss	_inPipes+3,0,c	;volatile
 52789  010B2C  D01D               	goto	i2l11819
 52790  010B2E  D03C               	goto	i2l11829
 52791  010B30                     i2l11811:
 52792                           
 52793                           ; BSR set to: 1
 52794                           ;usb_device.c: 1814: {
 52795                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 52796  010B30  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 52797  010B34  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52798  010B38  0E00               	movlw	low (__mediumconst shr (0+16))
 52799  010B3A  6EF8               	movwf	tblptru,c
 52800  010B3C  C1ED  FFD9         	movff	_pDst,fsr2l
 52801  010B40  C1EE  FFDA         	movff	_pDst+1,fsr2h
 52802  010B44  0E0E               	movlw	(high __ramtop+-1)
 52803  010B46  64F7               	cpfsgt	tblptrh,c
 52804  010B48  D003               	bra	i2u912_47
 52805  010B4A  0008               	tblrd		*
 52806  010B4C  50F5               	movf	tablat,w,c
 52807  010B4E  D005               	bra	i2u912_40
 52808  010B50                     i2u912_47:
 52809  010B50  CFF6 FFE9          	movff	tblptrl,fsr0l
 52810  010B54  CFF7 FFEA          	movff	tblptrh,fsr0h
 52811  010B58  50EF               	movf	indf0,w,c
 52812  010B5A                     i2u912_40:
 52813  010B5A  6EDF               	movwf	indf2,c
 52814  010B5C  4A0A               	infsnz	_inPipes,f,c	;volatile
 52815  010B5E  2A0B               	incf	_inPipes+1,f,c	;volatile
 52816  010B60  0101               	movlb	1	; () banked
 52817  010B62  4BED               	infsnz	_pDst& (0+255),f,b
 52818  010B64  2BEE               	incf	(_pDst+1)& (0+255),f,b
 52819                           
 52820                           ; BSR set to: 1
 52821                           ;usb_device.c: 1816: byteToSend--;
 52822  010B66  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 52823  010B68                     i2l11819:
 52824                           
 52825                           ; BSR set to: 1
 52826  010B68  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52827  010B6A  B4D8               	btfsc	status,2,c
 52828  010B6C  0012               	return	
 52829  010B6E  D7E0               	goto	i2l11811
 52830  010B70                     i2l11821:
 52831                           
 52832                           ; BSR set to: 1
 52833                           ;usb_device.c: 1822: {
 52834                           ;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 52835  010B70  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 52836  010B74  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52837  010B78  0E00               	movlw	low (__mediumconst shr (0+16))
 52838  010B7A  6EF8               	movwf	tblptru,c
 52839  010B7C  C1ED  FFD9         	movff	_pDst,fsr2l
 52840  010B80  C1EE  FFDA         	movff	_pDst+1,fsr2h
 52841  010B84  0E0E               	movlw	(high __ramtop+-1)
 52842  010B86  64F7               	cpfsgt	tblptrh,c
 52843  010B88  D003               	bra	i2u914_47
 52844  010B8A  0008               	tblrd		*
 52845  010B8C  50F5               	movf	tablat,w,c
 52846  010B8E  D005               	bra	i2u914_40
 52847  010B90                     i2u914_47:
 52848  010B90  CFF6 FFE9          	movff	tblptrl,fsr0l
 52849  010B94  CFF7 FFEA          	movff	tblptrh,fsr0h
 52850  010B98  50EF               	movf	indf0,w,c
 52851  010B9A                     i2u914_40:
 52852  010B9A  6EDF               	movwf	indf2,c
 52853  010B9C  4A0A               	infsnz	_inPipes,f,c	;volatile
 52854  010B9E  2A0B               	incf	_inPipes+1,f,c	;volatile
 52855  010BA0  0101               	movlb	1	; () banked
 52856  010BA2  4BED               	infsnz	_pDst& (0+255),f,b
 52857  010BA4  2BEE               	incf	(_pDst+1)& (0+255),f,b
 52858                           
 52859                           ; BSR set to: 1
 52860                           ;usb_device.c: 1824: byteToSend--;
 52861  010BA6  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 52862  010BA8                     i2l11829:
 52863                           
 52864                           ; BSR set to: 1
 52865  010BA8  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52866  010BAA  B4D8               	btfsc	status,2,c
 52867  010BAC  0012               	return	
 52868  010BAE  D7E0               	goto	i2l11821
 52869  010BB0                     __end_of_USBCtrlTrfTxService:
 52870                           	opt stack 0
 52871                           tosu	equ	0xFFF
 52872                           tosh	equ	0xFFE
 52873                           tosl	equ	0xFFD
 52874                           pclatu	equ	0xFFB
 52875                           pclath	equ	0xFFA
 52876                           tblptru	equ	0xFF8
 52877                           tblptrh	equ	0xFF7
 52878                           tblptrl	equ	0xFF6
 52879                           tablat	equ	0xFF5
 52880                           prodh	equ	0xFF4
 52881                           prodl	equ	0xFF3
 52882                           intcon	equ	0xFF2
 52883                           intcon2	equ	0xFF1
 52884                           intcon3	equ	0xFF0
 52885                           indf0	equ	0xFEF
 52886                           postinc0	equ	0xFEE
 52887                           fsr0h	equ	0xFEA
 52888                           fsr0l	equ	0xFE9
 52889                           wreg	equ	0xFE8
 52890                           indf1	equ	0xFE7
 52891                           postinc1	equ	0xFE6
 52892                           postdec1	equ	0xFE5
 52893                           plusw1	equ	0xFE3
 52894                           fsr1h	equ	0xFE2
 52895                           fsr1l	equ	0xFE1
 52896                           indf2	equ	0xFDF
 52897                           postinc2	equ	0xFDE
 52898                           postdec2	equ	0xFDD
 52899                           plusw2	equ	0xFDB
 52900                           fsr2h	equ	0xFDA
 52901                           fsr2l	equ	0xFD9
 52902                           status	equ	0xFD8
 52903                           tosu	equ	0xFFF
 52904                           tosh	equ	0xFFE
 52905                           tosl	equ	0xFFD
 52906                           pclatu	equ	0xFFB
 52907                           pclath	equ	0xFFA
 52908                           tblptru	equ	0xFF8
 52909                           tblptrh	equ	0xFF7
 52910                           tblptrl	equ	0xFF6
 52911                           tablat	equ	0xFF5
 52912                           prodh	equ	0xFF4
 52913                           prodl	equ	0xFF3
 52914                           intcon	equ	0xFF2
 52915                           intcon2	equ	0xFF1
 52916                           intcon3	equ	0xFF0
 52917                           indf0	equ	0xFEF
 52918                           postinc0	equ	0xFEE
 52919                           fsr0h	equ	0xFEA
 52920                           fsr0l	equ	0xFE9
 52921                           wreg	equ	0xFE8
 52922                           indf1	equ	0xFE7
 52923                           postinc1	equ	0xFE6
 52924                           postdec1	equ	0xFE5
 52925                           plusw1	equ	0xFE3
 52926                           fsr1h	equ	0xFE2
 52927                           fsr1l	equ	0xFE1
 52928                           indf2	equ	0xFDF
 52929                           postinc2	equ	0xFDE
 52930                           postdec2	equ	0xFDD
 52931                           plusw2	equ	0xFDB
 52932                           fsr2h	equ	0xFDA
 52933                           fsr2l	equ	0xFD9
 52934                           status	equ	0xFD8
 52935                           
 52936                           	psect	text252
 52937  000000                     __ptext252:
 52938                           	opt stack 0
 52939                           tosu	equ	0xFFF
 52940                           tosh	equ	0xFFE
 52941                           tosl	equ	0xFFD
 52942                           pclatu	equ	0xFFB
 52943                           pclath	equ	0xFFA
 52944                           tblptru	equ	0xFF8
 52945                           tblptrh	equ	0xFF7
 52946                           tblptrl	equ	0xFF6
 52947                           tablat	equ	0xFF5
 52948                           prodh	equ	0xFF4
 52949                           prodl	equ	0xFF3
 52950                           intcon	equ	0xFF2
 52951                           intcon2	equ	0xFF1
 52952                           intcon3	equ	0xFF0
 52953                           indf0	equ	0xFEF
 52954                           postinc0	equ	0xFEE
 52955                           fsr0h	equ	0xFEA
 52956                           fsr0l	equ	0xFE9
 52957                           wreg	equ	0xFE8
 52958                           indf1	equ	0xFE7
 52959                           postinc1	equ	0xFE6
 52960                           postdec1	equ	0xFE5
 52961                           plusw1	equ	0xFE3
 52962                           fsr1h	equ	0xFE2
 52963                           fsr1l	equ	0xFE1
 52964                           indf2	equ	0xFDF
 52965                           postinc2	equ	0xFDE
 52966                           postdec2	equ	0xFDD
 52967                           plusw2	equ	0xFDB
 52968                           fsr2h	equ	0xFDA
 52969                           fsr2l	equ	0xFD9
 52970                           status	equ	0xFD8
 52971                           
 52972                           	psect	rparam
 52973  0000                     tosu	equ	0xFFF
 52974                           tosh	equ	0xFFE
 52975                           tosl	equ	0xFFD
 52976                           pclatu	equ	0xFFB
 52977                           pclath	equ	0xFFA
 52978                           tblptru	equ	0xFF8
 52979                           tblptrh	equ	0xFF7
 52980                           tblptrl	equ	0xFF6
 52981                           tablat	equ	0xFF5
 52982                           prodh	equ	0xFF4
 52983                           prodl	equ	0xFF3
 52984                           intcon	equ	0xFF2
 52985                           intcon2	equ	0xFF1
 52986                           intcon3	equ	0xFF0
 52987                           indf0	equ	0xFEF
 52988                           postinc0	equ	0xFEE
 52989                           fsr0h	equ	0xFEA
 52990                           fsr0l	equ	0xFE9
 52991                           wreg	equ	0xFE8
 52992                           indf1	equ	0xFE7
 52993                           postinc1	equ	0xFE6
 52994                           postdec1	equ	0xFE5
 52995                           plusw1	equ	0xFE3
 52996                           fsr1h	equ	0xFE2
 52997                           fsr1l	equ	0xFE1
 52998                           indf2	equ	0xFDF
 52999                           postinc2	equ	0xFDE
 53000                           postdec2	equ	0xFDD
 53001                           plusw2	equ	0xFDB
 53002                           fsr2h	equ	0xFDA
 53003                           fsr2l	equ	0xFD9
 53004                           status	equ	0xFD8
 53005                           
 53006                           	psect	temp
 53007  00005B                     btemp:
 53008                           	opt stack 0
 53009  00005B                     	ds	1
 53010  0000                     int$flags	set	btemp
 53011                           tosu	equ	0xFFF
 53012                           tosh	equ	0xFFE
 53013                           tosl	equ	0xFFD
 53014                           pclatu	equ	0xFFB
 53015                           pclath	equ	0xFFA
 53016                           tblptru	equ	0xFF8
 53017                           tblptrh	equ	0xFF7
 53018                           tblptrl	equ	0xFF6
 53019                           tablat	equ	0xFF5
 53020                           prodh	equ	0xFF4
 53021                           prodl	equ	0xFF3
 53022                           intcon	equ	0xFF2
 53023                           intcon2	equ	0xFF1
 53024                           intcon3	equ	0xFF0
 53025                           indf0	equ	0xFEF
 53026                           postinc0	equ	0xFEE
 53027                           fsr0h	equ	0xFEA
 53028                           fsr0l	equ	0xFE9
 53029                           wreg	equ	0xFE8
 53030                           indf1	equ	0xFE7
 53031                           postinc1	equ	0xFE6
 53032                           postdec1	equ	0xFE5
 53033                           plusw1	equ	0xFE3
 53034                           fsr1h	equ	0xFE2
 53035                           fsr1l	equ	0xFE1
 53036                           indf2	equ	0xFDF
 53037                           postinc2	equ	0xFDE
 53038                           postdec2	equ	0xFDD
 53039                           plusw2	equ	0xFDB
 53040                           fsr2h	equ	0xFDA
 53041                           fsr2l	equ	0xFD9
 53042                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        192
    BSS         1114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    119     136
    BANK1           256    211     256
    BANK2           256      0     248
    BANK3           256      0     255
    BANK4           256      0     184
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(BANK0[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> extension(BANK2[4]), filename(BANK2[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    log_generate_entry@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@byte_array	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), _flash_get_status@status(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), i2c_digipot_reset_on@data_array(BANK0[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(BANK0[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2729	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2695	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2694	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2641	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2640	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2272$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2272$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2272$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2272$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2272$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S2272$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2272$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2272$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S142$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S132$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S132$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S108$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S108$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S108$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S108$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_rtcc_write_eeprom
    _rtcc_correct_day->__number_of_days
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_write_to_disk->_fat_append_to_file
    _log_write_to_disk->_fat_create_file
    _log_generate_entry->__get_dateTime
    __get_temperature->___aldiv
    __get_dateTime->_rtcc_get_day_decimal
    __get_dateTime->_rtcc_get_hours_decimal
    __get_dateTime->_rtcc_get_minutes_decimal
    __get_dateTime->_rtcc_get_month_decimal
    __get_dateTime->_rtcc_get_seconds_decimal
    __get_dateTime->_rtcc_get_year_decimal
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    _fat_append_to_file->__get_empty_cluster
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_minutes_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bcd_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_month_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_day_decimal->__rtcc_bcd_to_decimal
    __root_is_available->_flash_partial_read
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _log_collect_data->__get_input_power
    _rtcc_get_seconds_decimal->__rtcc_bcd_to_decimal
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___altoft->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_buck_remote_change_dutycycle
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  572143
                                            117 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
          _log_get_number_of_samples
                      _log_start_new
                  _log_write_to_disk
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   33097
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    3026
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   20851
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     248
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   28856
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0   12610
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     8     8      0   12610
                                             43 BANK0      8     8      0
                   __rtcc_verify_bcd
                    _i2c_eeprom_read
                   _rtcc_correct_day
                       _rtcc_get_day
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     393
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     263
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) __rtcc_verify_bcd                                     4     2      2    1589
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     164
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      93
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    7244
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4827
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     670
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1758
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    8730
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    8730
                                             19 BANK0      5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_write_to_disk                                   33    33      0  238101
                                              0 BANK1     33    33      0
                 _fat_append_to_file
                    _fat_create_file
                      _fat_find_file
                 _log_generate_entry
 ---------------------------------------------------------------------------------
 (2) _log_generate_entry                                   4     2      2    7583
                                             24 BANK0      4     2      2
                            ___aldiv
                            ___lldiv
                      __get_checksum
                      __get_dateTime
                   __get_temperature
 ---------------------------------------------------------------------------------
 (3) __get_temperature                                     2     0      2    1033
                                             14 BANK0      2     0      2
                            ___aldiv (ARG)
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) __get_dateTime                                       20    16      4    1237
                                              4 BANK0     20    16      4
               _rtcc_get_day_decimal
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
             _rtcc_get_month_decimal
           _rtcc_get_seconds_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (3) __get_checksum                                        6     4      2     305
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _fat_create_file                                     53    45      8   99441
                                             59 BANK0     53    45      8
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _fat_get_empty_clusters                              12    10      2    9351
                                             39 BANK0     12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) _fat_find_file                                       20    16      4   10541
                                             39 BANK0     20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     816
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __get_available_root_entry                            1     1      0    9238
                                             46 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (2) _fat_append_to_file                                  63    59      4  120277
                                             49 BANK0     63    59      4
                 __get_empty_cluster
                          __read_fat
                         __read_root
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_root                                          8     6      2   26532
                                             40 BANK0      8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_fat                                           8     4      4   27263
                                             40 BANK0      8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _flash_partial_write                                  9     1      8   26056
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_copy_page_to_buffer                          10     7      3    4884
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __update_modified_time                                2     0      2    1434
                                             13 BANK0      2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (3) __get_time                                            9     7      2     634
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (3) __get_date                                            9     7      2     634
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year_decimal                                1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day_decimal                                 1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (3) __sector_from_cluster                                 2     0      2     239
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    9108
                                             39 BANK0      7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_root                                           8     6      2    9327
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_fat                                            8     6      2    9465
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __get_empty_cluster                                  10     8      2    9491
                                             39 BANK0     10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (1) _log_get_number_of_samples                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0   11180
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) __rtcc_bcd_to_decimal                                 3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    5605
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    5185
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    4460
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    4426
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3960
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     164
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    4794
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3    1086
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3708
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   49554
                                            114 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     677
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    2801
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    8825
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     711
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    8825
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 66    66      0   18095
                                             48 BANK0     66    66      0
                            ___aldiv
                           ___altoft
                            ___fttol
                             ___lmul
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     475
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3483
                                             14 BANK0     10     6      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3175
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1901
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    9329
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8145
                                             24 BANK0     24    19      5
                            ___fttol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     234
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2394
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   18856
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    7721
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0   11135
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    4094
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     808
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     195
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2460
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2321
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    4044
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    3216
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  138850
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  138850
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  131246
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   66528
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   64480
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   28752
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   18274
                                             36 BANK0     11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (7) _flash_page_write                                     5     1      4   17839
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4654
                                             19 BANK0     11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5092
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    6302
                                             19 BANK0     12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   19726
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    9479
                                             43 BANK0     10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (7) _flash_page_read                                      4     0      4    9121
                                             39 BANK0      4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _flash_partial_read                                  20    12      8    8851
                                             19 BANK0     20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2824
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1176
                                             12 BANK0      5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8    1080
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   21280
                                             44 BANK0     11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    4355
                                             43 BANK0      1     1      0
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    4200
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3978
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2896
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     851
                                              3 BANK0      2     1      1
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_synchronous                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_on                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_enable                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_dutycycle                            1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_change_dutycycle                         3     3      0     127
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     896
                                              3 BANK0      8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              4     4      0      43
                                              1 BANK0      4     4      0
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_status                               1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    4159
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    5417
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58167
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (14) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _buck_get_dutycycle
       _buck_get_mode
       _buck_remote_get_dutycycle
       _buck_remote_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _buck_remote_change_dutycycle
       _buck_remote_set_dutycycle
       _buck_remote_set_enable
       _buck_remote_set_on
       _buck_remote_set_synchronous
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___altoft
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___fttol
       ___lmul
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_temperature
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _log_get_number_of_samples
   _log_start_new
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
   _log_write_to_disk
     _fat_append_to_file
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_fat
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_root
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __root_is_available
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __sector_from_cluster
       __update_modified_time
         __get_date
           _rtcc_get_day_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_day
           _rtcc_get_month_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_month
           _rtcc_get_year_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_year
         __get_time
           _rtcc_get_hours_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_hours
           _rtcc_get_minutes_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_minutes
           _rtcc_get_seconds_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _flash_partial_write
         __flash_compare_page_to_buffer
           __flash_get_status
             __flash_spi_tx_rx
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_copy_page_to_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_page_from_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_to_buffer
           __flash_spi_tx_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
     _fat_create_file
       __get_available_root_entry
         __root_is_available
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       __get_date
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __get_time
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_empty_clusters
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _memcpy
     _fat_find_file
       _flash_partial_read
         __flash_spi_tx_rx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
       _strncmp
     _log_generate_entry
       ___aldiv
       ___lldiv
       __get_checksum
       __get_dateTime
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_temperature
         ___aldiv (ARG)
         ___awdiv (ARG)
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bcd_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         __rtcc_verify_bcd
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_correct_day
           __number_of_days
             _rtcc_get_month
             _rtcc_get_year
           _rtcc_get_day
           _rtcc_set_day
             __rtcc_write_disable
             __rtcc_write_enable
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_write_eeprom
           _i2c_eeprom_write
             __i2c_write
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
             _i2c_set_frequency
           _rtcc_get_day
           _rtcc_get_hours
           _rtcc_get_minutes
           _rtcc_get_month
           _rtcc_get_seconds
           _rtcc_get_year
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B8      13       71.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D3     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     491      31        0.0%
DATA                 0      0     691       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 26 15:11:44 2018

                rtcc_get_year_decimal@bcd_year 0063                                   ___altoft@exp 0076  
                                   _USB_SD_Ptr 9307                       fat_create_file@extension 009D  
       __end_of_i2c_display_send_init_sequence 3A5C        __size_of_i2c_display_send_init_sequence 0032  
               _i2c_display_send_init_sequence 3A2A                            __system_timer0_init 3620  
                      rtcc_set_minutes@minutes 0060                                  ___altoft@sign 0077  
                                 ___awdiv@sign 0065                               ??__buck_pin_init 0060  
                                           _os 0200                                  _USBDeviceInit E1A2  
                           _USBCheckHIDRequest 06AC                       __display_time@setminutes 018E  
                     __display_time@setseconds 019A                             _rtcc_increment_day 3BA0  
                                 __CFG_CP0$OFF 000000                 __root_is_available@root_sector 0088  
                          __end_of_system_init F80A                       ?_i2c_display_write_fixed 0065  
         USER_USB_CALLBACK_EVENT_HANDLER@event 003D           USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                  __display_efficiency@battery 00CD                              ?__rtcc_verify_bcd 0060  
                                          l208 383E                                            l209 383C  
                                          l148 E218                    __end_of_USBStdGetDscHandler F26E  
                                ?_i2c_adc_read 0065                                            l712 BFAA  
                                          l705 BEC0                                            l641 A4A0  
                                          l716 C046                                            l590 CCE4  
                                          l664 A790                                            l648 A632  
                                          l761 F042                                            l595 CC10  
                                          _BDT 000D00                                            l686 D696  
                __size_of__sector_from_cluster 0016                       __display_time@presshours 014E  
                                          _LBA 01D9                      _buck_remote_get_dutycycle 42EE  
                                          _PR2 000FCB                       __display_time@pressmonth 013C  
                                          _LUN 02BB                                            _UIE 000F36  
                                          _UIR 000F62                           _i2c_digipot_reset_on 3B48  
                __size_of_rtcc_decrement_hours 002A             system_calculate_output_voltage@tmp 0070  
                   __end_of_buck_get_dutycycle 42FA                       ??_rtcc_increment_minutes 0068  
                __size_of_rtcc_decrement_month 002A                       ??_rtcc_increment_seconds 0068  
                                          _idx 00E0                                     _USBSuspend 3A8E  
                                          _now 029E                         __end_of_display_update 1DF8  
                         USBStdSetCfgHandler@i 0045                         i2c_eeprom_read@address 0071  
                           ??__rtcc_verify_bcd 0062                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                               _USBDeviceTasks EB08                            ?_USBCheckHIDRequest 002E  
                                 __CFG_IESO$ON 000000                            ?_rtcc_increment_day 002E  
                               _USBDeviceState 002B                               _rtcc_read_eeprom E006  
                                 ?__write_root 0088                            _rtcc_increment_year 3C50  
                      rtcc_set_seconds@seconds 0060                          ??_USBCtrlTrfRxService 002E  
                         __read_fat@fat_sector 0089                       __size_ofi2_USBDeviceInit 0150  
                     USBEnableEndpoint@options 0036                        __buck_initial_dutycycle 085E  
                            ??_MSDErrorHandler 0068                           ?__system_timer0_init 002E  
                     fat_create_file@root_slot 00AB                    __flash_write_to_buffer@data 0075  
                                         l1070 ACC2                                           l1233 423A  
                                         l1410 343C                                           l1411 3442  
                                         l1420 31F0                                           l1412 3448  
                                         l1421 31F4                                           l1422 31F8  
                                         l1407 3430                                           l1503 42AC  
                                         l1417 31E8                                           l1409 3436  
                                         l1521 42A4                                           l2306 417E  
                                         l1419 31EC                                           l1515 42B8  
                                         l2324 41BA                                           l1509 42D4  
                                         l2342 41A6                                           l1390 F7DA  
                                         l1535 2830                                           l2503 0830  
                                         l1375 3650                                           l2360 4192  
                                         l2513 2678                                           l2514 2684  
                                         l3306 C4B4                                           l1802 A29E  
                                         l2523 26C0                                           l1660 3260  
                                         l1820 A364                     USBConfigureEndpoint@handle 0034  
                                         l1494 42DC                                           l2606 2F3C  
                                         l1814 A322                                           l1823 A38E  
                                         l2288 4156                                           l1808 A2E0  
                                         l2529 3C02                                           l1833 A3EA  
                                         l1753 A078                                           l2378 416A  
                                         l2562 9E82                                           l1770 A130  
                                         l1755 A086                                           l1747 A04A  
                                         l2644 2DD4                                           l2548 9C70  
                                         l1828 A3BC                                           l1780 A19C  
                                         l2637 3E42                                           l2477 0930  
                                         l3541 F9F4                                           l2750 29E0  
                                         l2823 2BAE                                           l1919 C95C  
                                         l1775 A166                                           l1847 F82E  
                                         l3297 C212                                           l2690 1CB6  
                                         l1794 A24E                                           l2675 4282  
                                         l2756 1384                                           l2692 1CB8  
                                         l1796 A25C                                           l1788 A200  
                                         l2765 1210                                           l3733 2504  
                                         l2686 1C76                                           l3654 1006  
                                         l2759 13CC                                           l3743 2D6E  
                                         l2768 1260                                           l3680 119A  
                                         l2788 2F8C                                           l2968 1316  
                        ??i2_SYSTEM_Initialize 002E                                           STR_1 9458  
               __fill_buffer_get_display1@cntr 0065                                           STR_9 9443  
               __fill_buffer_get_display1@line 0066                 __fill_buffer_get_display2@cntr 0065  
               __fill_buffer_get_display2@line 0066                                  _i2c_frequency 01F4  
                                         u9000 2654                                           u9006 2656  
                        ??_USBCtrlTrfTxService 002E                                           _UCFG 000F39  
                                         _UEP0 000F26                                           _UEP1 000F27  
                             ?_fat_create_file 009B                                           _UEIE 000F37  
                                         u8950 2608                                           u8960 2618  
                                         _UEIR 000F63                                           _UCON 000F65  
                                         u8970 2628                                           u8980 2638  
                                         u8990 2648                                           u8958 260C  
                                         u8968 261C                                           u8978 262C  
                                         _TMR2 000FCC                                           u8988 263C  
                                         u8998 264C                                 ?_i2c_adc_start 006A  
                  __size_ofi2_USBStallEndpoint 0106                          _i2c_digipot_reset_off 3B74  
           __fill_buffer_get_display1@position 0067                           _system_output_toggle 3E98  
                       __size_of_adc_calibrate 000C                                 ??_buck_operate 007E  
                               _ResetSenseData 1F8E         USBStdFeatureReqHandler@current_ep_data 0048  
                       ?__update_modified_time 006D                                           _pDst 01ED  
                                         _main B816                                           _last 02A2  
                                 ___ftpack@arg 0060                                           _itoa 354C  
                     ??i2_USBTransferOnePacket 0032                     __end_of_fat_append_to_file C77C  
                                 ___ftpack@exp 0063                    __size_of_APP_DeviceMSDTasks 0012  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                      __end_of_display_prepare 1F08                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                              _USBDeviceAttach 3810                                           btemp 005B  
                                         _utoa 0F76             __fill_buffer_get_display2@position 0067  
                   ??_ExternalFlash_SectorRead 0093                                ??_rtcc_get_year 0060  
                         __size_of__buck_start 00D8             __size_of_buck_remote_set_dutycycle 002A  
                 __display_charger@charger_off 0182                        ?_rtcc_get_hours_decimal 002E  
                 ?i2_ExternalFlash_MediaDetect 002E                      _ExternalFlash_MediaDetect 42BE  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 9086                __end_of_APP_DeviceMSDInitialize 4264  
                        _display_get_character 3798                         ??__rtcc_bcd_to_decimal 0060  
                         ??_USBCheckHIDRequest 002E                               ?_MSDWriteHandler 002E  
                         ??_rtcc_increment_day 0068                           _rtcc_increment_hours 3CF8  
               ??_MSDProcessCommandMediaAbsent 00A7                     __end_of_USBCheckStdRequest 06AC  
                       ??_USBCtrlTrfOutHandler 0030                           ?_rtcc_increment_year 002E  
                         _rtcc_increment_month 3CA4                   ??__flash_copy_page_to_buffer 0076  
               ?__flash_write_page_from_buffer 0073                                   ___param_bank 000000  
                    __size_of_flash_page_write 0058                      ??_USBStdFeatureReqHandler 0045  
                                 _USBOutHandle 01E9                       __end_of__display_charger BEBE  
                   __size_of_system_output_off 0058                                ??_buck_get_mode 0060  
              __size_of__flash_write_to_buffer 0066                       ??_USBStdGetStatusHandler 002E  
                                 ___fttol@exp1 006E                       ??_buck_remote_get_status 0060  
                                 ___fttol@lval 006A                                 ?_USBDeviceInit 002E  
                            __flash_get_status 3660        __end_of_system_calculate_output_current E5CA  
     __size_of_system_calculate_output_current 015A               ?_system_calculate_output_current 002E  
            ??_system_calculate_output_current 006C                _system_calculate_output_current E470  
                         __buck_set_sync_async 2672                __flash_spi_tx_tx@command_length 0062  
                   __end_of_rtcc_decrement_day 3BF8                       _system_ui_inactive_count 01E7  
                           _buck_remote_enable 01F1                     __buck_initial_dutycycle@dc 006E  
                                __CFG_PLLDIV$2 000000                                ??_rtcc_set_year 0060  
                i2c_display_write_fixed@length 0067                                          l20003 1BBA  
                                        l20101 0126                                          l20111 013E  
                                        l20031 130E                                          l20009 127C  
                                        l21001 A122                                          l20107 0136  
                                        l20213 F6E0                                          l20205 F6B2  
                                        l21101 A2EE                                          l21021 A186  
                                        l21013 A158                                          l21005 A13E  
                                        l20151 35D4                                          l21111 A314  
                                        l22001 E1EE                                          l20209 F6C4  
                                        l20225 169A                                          l21201 D53E  
                                        l20145 35B2                                          l21121 A34A  
                                        l21033 A1BC                                          l21025 A18E  
                                        l21017 A174                                          l21009 A150  
                                        l20411 CC14                                          l20403 CBE4  
                                        l20227 16AA                                          l20075 0078  
                                        l21115 A330                                          l21107 A308  
                                        l21051 A1F4                                          l21043 A1D6  
                       ?_i2c_digipot_backlight 002E                                          l22005 E1F8  
                                        l20165 2598                                          l20181 F5FC  
                                        l20261 ED2E                                          l21213 D5B6  
                                        l21205 D56A                                          l21301 9846  
                                        l20069 005E                                          l21133 A382  
                                        l21125 A356                                          l21037 A1C4  
                                        l21029 A1AA                                          l11703 25FC  
                                        l20431 CCA4                                          l20423 CC3E  
                                        l20343 CA5A                                          l20271 ED64  
                                        l20239 EC88                                          l21223 D63E  
                                        l21143 A3B0                                          l21063 A232  
                                        l21047 A1E4                                          l20521 2E58  
                                        l20601 0460                                          l20433 CCAC  
                                        l20345 CA60                                          l20281 3A00  
                                        l22033 E260                                          l22017 E224  
                                        l20169 25BE                                          l20193 F648  
                                        l20257 ED1A                                          l21209 D58A  
                                        l21321 990C                                          l21313 98C0  
                                        l21305 9872                                          l20089 00BA  
                                        l21153 A3DE                                          l21129 A372  
                                        l21073 A26A                                          l21161 A404  
                                        l20523 2E5E                                          l20611 0484  
                                        l20603 0468                                          l20355 CA98  
                                        l20339 CA40                                          l21171 2C66  
                                        l20195 F658                                          l20187 F61A  
                                        l20275 ED80                                          l20267 ED4A  
                                        l21219 D612                                          l21323 9926  
                                        l21307 988C                                          l21243 9624  
                                        l21411 DF7A                                          l21403 DF56  
                                        l13091 36F4                                          l13083 36D8  
                                        l21139 A3A0                                          l21083 A290  
                                        l21067 A242                                          l21059 A224  
                                        l20517 2E4E                                          l20541 2DEC  
                                        l20621 032C                                          l20613 048A  
                                        l20605 0470                                          l20429 CC7E  
                                        l20349 CA6A                                          l20437 CCC6  
                                        l20285 3A12                                          l22029 E256  
                                        l21181 2CAE                                          l21165 2C56  
                                        l20197 F65E                                          l20269 ED5A  
                                        l21341 99C8                                          l21333 997A  
                                        l21325 992E                                          l21317 98E0  
                                        l21309 9894                                          l21261 96C6  
                                        l21253 9678                                          l21245 962C  
                                        l21421 DFEC                                          l21405 DF6E  
                                        l21149 A3CE                                          l21093 A2C6  
                                        l20535 2E98                                          l20527 2E68  
                                        l20551 2E06                                          l20631 035E  
                                        l20623 0336                                          l20607 0478  
                                        l20383 CB74                                          l22039 E2C6  
                                        l21511 BD58                                          l21503 BCFA  
                                        l21175 2C70                                          l21431 D2C8  
                                        l21415 DFA6                                          l13095 3716  
                                        l13079 36B6                                          l21159 A3FC  
                                        l21087 A2AC                                          l21079 A284  
                                        l20545 2DF6                                          l20641 0388  
                                        l20633 0368                                          l20625 0340  
                                        l20609 047E                                          l20617 0490  
                                        l20393 CB9E                                          l21513 BD60  
                                        l21505 BD14                                          l21169 2C60  
                                        l21193 D4F2                                          l21441 D328  
                                        l21601 D96C                                          l21353 9A40  
                                        l21345 99F4                                          l21337 99A6  
                                        l21329 995A                                          l21281 978C  
                                        l21273 973E                                          l21265 96F2  
                                        l21257 96A4                                          l21249 9658  
                                        l21417 DFC0                                          l20801 E97A  
                                        l21097 A2D2                                          l20547 2DFC  
                                        l20643 0390                                          l20635 0370  
                                        l20627 034A                                          l20379 CB6A  
                                        l20395 CBB8                                          l22411 1C64  
                                        l21531 BE32                                          l21523 BDD2  
                                        l21443 D340                                          l21427 D29C  
                                        l21611 D9D6                                          l21339 99C0  
                                        l21291 97F2                                          l21275 9758  
                                        l21259 96BE                                          l22331 2760  
                                        l20731 3636                                          l20803 E982  
                                        l20661 E9D8                                          l20645 0398  
                                        l20637 0378                                          l20629 0354  
                                        l20653 03B2                                          l20389 CB92  
                                        l22181 2A62                                          l22421 1C9E  
                                        l22413 1C6C                                          l21525 BDEC  
                                        l21541 BE94                                          l21517 BD8C  
                                        l21197 D51E                                          l21461 D3EA  
                                        l21453 D394                                          l21445 D348  
                                        l21437 D2FC                                          l21621 DA40  
                                        l21605 D998                                          l21349 9A14  
                                        l21293 97FA                                          l21285 97AC  
                                        l21277 9760                                          l21269 9712  
                                        l21357 9A5A                                          l20901 106A  
                                        l22341 2788                                          l22333 2768  
                                        l22405 F8F2                                          l20559 2E36  
                                        l20671 EA92                                          l20663 EA08  
                                        l20647 03A0                                          l20639 0380  
                                        l20591 0438                                          l20583 0418  
                                        l20399 CBD8                                          l22183 2A7A  
                                        l21711 9E78                                          l21631 9B40  
                                        l21535 BE5E                                          l21519 BDA6  
                                        l21615 DA02                                          l21359 9A88  
                                        l22335 2770                                          l20735 3640  
                                        l20807 E98A                                          l20681 EABA  
                                        l20673 EA9A                                          l20649 03A8  
                                        l20593 0440                                          l20585 0420  
                                        l22513 AE84                                          l22505 AE44  
                                        l22185 2A88                                          l22177 2A56  
                                        l22425 1CA6                                          l22409 1C5C  
                                        l22417 1C7E                                          l21721 9ECC  
                                        l21801 FE2A                                          l21529 BE18  
                                        l21473 D422                                          l21465 D3FC  
                                        l21457 D3C0                                          l21449 D374  
                                        l21625 DA6C                                          l21297 9826  
                                        l21289 97D8                                          l21393 DEF4  
                                        l22601 1EAA                                          l20913 109E  
                                        l20905 1074                                          l22337 2778  
                                        l22329 2758                                          l22345 2790  
                                        l20729 362E                                          l20809 E9B8  
                                        l20675 EAA2                                          l20667 EA62  
                                        l20595 0448                                          l20587 0428  
                                        l22419 1C96                                          l21643 9BBE  
                                        l21539 BE78                                          l21571 B6DA  
                                        l21563 B68E                                          l21475 D430  
                                        l21483 D45A                                          l22603 1EB0  
                                        l22339 2780                                          l22363 F858  
                                        l20677 EAAA                                          l20669 EA8A  
                                        l20685 EAC2                                          l20597 0450  
                                        l20589 0430                                          l22541 B04E  
                                        l22533 AF40                                          l22509 AE6A  
                                        l22461 ACFC                                          l22525 AEEA  
                                        l22189 2AA0                                          l21741 A000  
                                        l21725 9EE2                                          l21653 9C16  
                                        l21493 BCAE                                          l21581 B762  
                                        l21477 D43E                                          l21469 D40E  
                                        l21397 DF22                                          l21389 DEC8  
                                        l22605 1EB6                                          l20925 3B26  
                                        l20773 E884                                          l20941 A03E  
                                        l22373 F884                                          l22357 F842  
                                        l22349 F80C                                          l20679 EAB2  
                                        l20599 0458                                          l22543 B056  
                                        l22471 AD5E                                          l22527 AF1E  
                                        l21743 A00A                                          l21719 9EB6  
                                        l21663 9C56                                          l21639 9BB4  
                                        l21575 B706                                          l21567 B6BA  
                                        l21479 D44C                                          l21399 DF2A  
                                        l22607 1EBC                                          l22631 E484  
                                        l20791 E952                                          l20951 A06C  
                                        l22383 F8A4                                          l22537 AF86  
                                        l22529 AF22                                          l22545 B094  
                                        l22481 ADB6                                          l22465 AD20  
                                        l22457 ACE2                                          l21657 9C20  
                                        l21649 9BF8                                          l21745 A010  
                                        l21489 BC82                                          l21585 B78E  
                                        l21593 D920                                          l22609 1EC2  
                                        l21913 C69E                                          l21905 C648  
                                        l21825 DB34                                          l21817 DAD6  
                                        l21809 DAC2                                          l22713 E5DE  
                                        l22633 E490                                          l20793 E95A  
                                        l20769 E87A                                          l20961 A0A6  
                                        l20937 A02E                      __buck_set_sync_async@mode 0063  
                                        l22475 AD78                                          l18011 F362  
                                        l21683 9CE4                                          l21675 9CA4  
                                        l21755 FD5C                                          l21499 BCCE  
                                        l20883 2C1A                                          l22707 1D4E  
                                        l22715 E5EA                                          l20795 E962  
                                        l20971 A0C0                                          l20947 A05C  
                                        l22803 B84C                                          l22493 AE18  
                                        l22485 ADDA                                          l22477 AD9C  
                                        l22469 AD3A                                          l18005 F356  
                                        l21685 9D20                                          l21773 FDA8  
                                        l21765 FD88                                          l21749 FD42  
                                        l22733 2F0C                                          l22741 2F28  
                                        l21597 D94C                                          l20797 E96A  
                                        l20789 E932                                          l20965 A0AE  
                                        l20957 A094                                          l22813 B8CA  
                                        l22805 B852                                          l22495 AE1C  
                                        l18007 F35E                                          l21695 9D5A  
                                        l21679 9CDA                                          l21783 FDDA  
                                        l22751 2F54                                          l22735 2F10  
                                        l21919 C6FE                                          l21863 DC7A  
                                        l21855 DC12                                          l20799 E972  
                                        l20983 A0E8                                          l20975 A0CE  
                                        l22399 F8E2                                          l22823 B932  
                                        l22815 B8DE                                          l22489 ADF4  
                                        l18025 F388                                          l18017 F374  
                                        l21689 9D2E                                          l21769 FD9A  
                                        l22737 2F1A                                          l22745 2F44  
                                        l22593 1E8A                                          l20889 2C3E  
                                        l22681 C474                                          l22673 C454  
                                        l21865 DC80                                          l20993 A108  
                                        l22841 B9A0                                          l22817 B8E4  
                                        l22809 B87E                                          l18107 2ACA  
                                        l18115 2B08                                          l22499 AE36  
                                        l18027 F38C                                          l18019 F378  
                                        l19011 2B54                                          l21795 FE0E  
                                        l21779 FDC4                                          l22747 2F4A  
                                        l22595 1E90                                          l21891 C540  
                                        l21875 C4CC                                          l21859 DC3E  
                                        l20979 A0E0                                          l22827 B946  
                               ??_i2c_adc_read 0067                                          l18029 F390  
                                        l18133 D712                                          l18125 D6F8  
                                        l18213 BF76                                          l19013 2B5A  
                                        l19005 2B42                                          l21789 FDF0  
                                        l22597 1E9A                                          l22693 C4A4  
                                        l22685 C484                                          l22677 C464  
                                        l22669 C446                                          l20997 A11A  
                                        l20989 A0FA                                          l22861 BA4E  
                                        l22837 B99A                                          l22829 B94C  
                                        l19023 31FC                                          l18071 3868  
                                        l18231 BFD8                                          l18215 BF7C  
                                        l21799 FE24                                          l22599 1EA0  
                                        l21887 C51A                                          l22863 BA54  
                                        l22847 B9EE                                          l19025 321E  
                                        l19033 344C                                          l18057 38A0  
                                        l18153 D7AA                                          l19009 2B4E  
                                        l19017 2B62                                          l22689 C494  
                                        l21897 C5EA                                          l22881 BAF2  
                                        l18411 411E                                          l18403 4108  
                                        l18171 D814                                          l18163 D7F4  
                                        l18147 D780                                          l18139 D72C  
                                        l18251 C0F2                                          l18235 C000  
                                        l19123 34C4                                          l22883 BAF4  
                                        l22859 BA12                                          l22891 BB0E  
                                        l22795 B828                                          l18181 D864  
                                        l18165 D7FA                                          l18261 C16C  
                                        l18245 C064                                          l19117 3576  
                                        l19125 34CA                                          l22885 BAFE  
                                        l22893 BB76                                          l18407 4112  
                                        l18343 27CC                                          l17703 3F2A  
                                        l18159 D7DC                                          l18191 D8A2  
                                        l18263 C188                                          l18239 C04A  
                                        l19215 26D4                                          l18431 24C6  
                                        l19143 2ED2                                          l22879 BADE  
                                        l18345 27D0                                          l18353 27DC  
                                        l18185 D876                                          l18273 C1B4  
                                        l19321 F9A8                                          l19313 F94A  
                                        l19137 2EBA                                          l18355 27F4  
                                        l18363 2802                                          l18347 27D4  
                                        l17811 152A                                          l17803 2536  
                                        l18427 24B4                                          l18451 2D3C  
                                        l19331 F9FE                                          l19323 F9D8  
                                        l19315 F958                                          l19219 26E6  
                                        l19155 2EF6                                          l19501 2DB6  
                                        l18381 314A                                          l18357 27F8  
                                        l18349 27D8                                          l18293 0A80  
                                        l17717 EDF6                                          l18189 D87E  
                                        l18269 C1A2                                          l18277 C1BA  
                                        l18605 A4FC                                          l19165 0882  
                                        l18429 24C0                                          l19325 F9E6  
                                        l19317 F988                                          l19309 F936  
                                        l19149 2EE4                                          l19503 2DCC  
                                        l18359 27FC                                          l18367 281A  
                                        l17743 17AA                                          l18279 C1DC  
                                        l18703 A7A6                                          l19415 E352  
                                        l19175 0906                                          l18439 24F6  
                                        l18455 2D60                                          l18447 2D2A  
                                        l19087 4014                                          l18289 0A64  
                                        l17649 2F5C                                          l17665 2FA6  
                                        l17913 F112                                          l17753 17D2  
                                        l18713 A7F0                                          l18633 A5D4  
                                        l19193 26A6                                          l18449 2D36  
                                        l19337 FA1A                                          l19361 0F08  
                                        l19515 323A                                          l18387 316E  
                                        l17771 1840                                          l18715 A806  
                                        l18707 A7D2                                          l18643 A5FC  
                                        l19435 E460                                          l19419 E39C  
                                        l19187 2696                                          l19283 1A06  
                                        l19363 0F14                                          l19355 0EEA  
                                        l18811 2320                                          l19531 3EB4  
                                        l19509 3E32                                          l17909 F104  
                                        l17749 17C4                                          l18725 A854  
                                        l18709 A7DA                                          l18717 A80A  
                                        l18629 A5C6                                          l19437 E466  
                                        l19197 26B0                                          l19277 1A02  
                                        l19269 1984                                          l19293 1906  
                                        l19381 0F6C                                          l19373 0F4A  
                                        l19365 0F1A                                          l19349 0ED4  
                                        l17935 EF28                                          l17927 EEF4  
                                        l19463 3A7A                                          l18399 40FC  
                                        l17759 1820                                          l17783 2BA0  
                                        l18719 A816                                          l18671 A6DE  
                                        l18655 A672                                          l18639 A5F2  
                                        l18591 A492                                          l18583 A472  
                                        l19439 E46A                                          l19623 AB6E  
                                        l18751 0D5E                                          l18815 2324  
                                        l17881 F072                                          l17873 F028  
                                        l17793 250E                                          l17777 2B86  
                                        l18681 A714                                          l18649 A62A  
                                        l18729 A85C                                          l18905 0F7E  
                                        l19297 1946                                          l19289 18E0  
                                        l19377 0F58                                          l19609 AAE0  
                                        l19553 A8A8                                          l17947 EFBA  
                                        l19467 3A88                                          l19459 3A6E  
                                        l19483 3FA0                                          l18771 140E  
                                        l17891 F0AA                                          l17883 F07A  
                                        l18691 A748                                          l18667 A6AA  
                                        l18587 A482                                          l18915 0FC0  
                                        l19299 1952                                          l19811 E090  
                                        l19803 E05A                                          l17885 F088  
                                        l17957 F286                                          l18941 112E  
                                        l19901 07F0                                          l19741 C7F6  
                                        l19637 ABFC                                          l19581 A9C4  
                                        l19653 AC8A                                          l18757 0D82  
                                        l19495 3F64                                          l18775 1450  
                                        l17895 F0BE                                          l17983 F2EE  
                                        l17967 F2A0                                          l17799 2528  
                                        l18695 A762                                          l18687 A730  
                                        l18951 1188                                          l18943 1134  
                                        l18871 2368                                          l18863 234A  
                                        l19911 080C                                          l19743 C86A  
                                        l19735 C7DC                                          l19751 C8A0  
                                        l19567 A936                                          l18791 22E2  
                                        l19831 E0F0                                          l19489 3F82  
                                        l17889 F09C                                          l17977 F2E0  
                                        l19761 C8E0                                          l19745 C892  
                                        l17995 F33A                                          l17987 F316  
                                        l18939 111E                                          l18875 2376  
                                        l18867 2358                                          l18859 233A  
                                        l19763 C938                                          l19755 C8C6  
                              __end_of___aldiv F6F2                                          l19595 AA52  
                                        l18795 22E6                                          l19819 E0C6  
                                        l17997 F33E                                          l19933 0852  
                                        l19941 3C1E                                          l19781 C9D2  
                                        l19773 C97A                                          l19765 C94E  
                                        l19749 C898                                          l18893 2438  
                                        l19783 C9D6                                          l18887 241E  
                                        l19951 1E36                                          l19855 E18A  
                                        l19847 E154                                          l19839 E11E  
                           ?__flash_get_status 006C                                          l19785 C9E4  
                                        l19769 C954                                          l18897 2446  
                                        l19961 3AF2                                          l19945 1DFC  
                                        l18995 2B22                                          l19891 07A4  
                                        l19883 286A                                          l19971 3B10  
                                        l19955 1E64                                          l19877 2842  
                                        l19789 CA26                                          l19981 1B3C  
                                        l19965 3AFC                                          l19895 07AE  
                                        l19879 2860                                          l19975 3B16  
                                        l19999 1BB2                                          ?_main 002E  
                rtcc_increment_minutes@minutes 0068                                          ?_itoa 0070  
                              __end_of___awdiv 0F76                                          STR_10 944F  
                                        STR_11 9461                                          STR_12 9436  
                        ?_i2c_digipot_reset_on 002E                               ??__display_clear 0060  
            __size_of_USBCtrlEPServiceComplete 00F2                             _buck_remote_set_on 3F6C  
                        rtcc_decrement_day@day 0068                                __end_of___lldiv 11AC  
                                        ?_utoa 0067               MSDCheckForErrorCases@DeviceBytes 006A  
                                        u21000 D28A                                          u21100 BB90  
                              ___awdiv@divisor 0062                                          u21110 BBAC  
                                        u21120 BBC8                         __end_of_USBDeviceTasks EC4E  
                                        u21130 BBE4                                          u21140 BC00  
                              __end_of___fttol ED92                                          u21150 BC1C  
                                        u20510 D48A                                          u21160 BC38  
                                        u20520 D4A6                                          u20600 9498  
                                        u21170 BC54                                          u20530 D4E0  
                                        u21330 D8BA                                          u20610 94B4  
                                        u22210 F86E                                          u21500 9CBA  
                                        u21180 BC70                                          u21340 D8D6  
                                        u20700 95B0                                          u20620 94D0  
                                        u22141 F6FC                                          u21270 B4A8  
                                        u21350 D8F2                                          u20710 95CC  
                                        u20630 94EC                                          u22151 F71E  
                                        u21280 B4C4                                          u21360 D90E  
                                        u20720 95E8                                          u20640 9508  
                                        u22161 F740                                          u21290 B4E0  
                                        u20650 9524                                          u20660 9540  
                                        u20900 DEB6                                          u22500 E5A0  
                                        u20670 955C                                          u20590 947C  
                                        u21710 DAF6                                          u20680 9578  
                                        u21720 DB30                                          u22505 E594  
                                        u20690 9594                      ?_USBCtrlEPServiceComplete 002E  
                                        u21715 DAEA                                          u17100 C136  
                                        u22460 FC10                                          u17110 C138  
                                        u20870 DE62                                          u22630 E6FA  
                                        u22470 FD16                                          u20880 DE7E  
                                        u23257 1C98                                          u22465 FC04  
                                        u20970 D236                                          u20890 DE9A  
                                        u23267 1CA0                                          u22635 E6EE  
                                        u22475 FD0A                                          u20980 D252  
                                        u23277 2F7E                                          u22670 F5AE  
                                        u20990 D26E                                          u23287 2F90  
                                        u17128 C144                                          u23297 2F9A  
                                        u16345 17E0                                          u17129 C158  
                                        u17058 C010                                          u16435 2544  
                                        u17059 C024                                          u22675 F5A2  
                                        u18150 08F4                                          u16455 1546  
                                        u18065 2CC8                                          u18235 1F2E  
                                        u16820 389C                                          u18245 1F50  
                                        u16830 3864                                          u18255 2250  
                                        u16840 2AEC                                          u17720 A77A  
                                        u17608 A50C                                          u17609 A520  
                                        u18265 2272                                          u19145 28DE  
                                        u17618 A540                                          u18514 E370  
                                        u17619 A554                                          u18515 E368  
                              __end_of___lwdiv 250E                                          u19411 EC64  
                                        u19155 294A                                          u18524 E3BA  
                                        u18525 E3B2                                          u18285 19BA  
                                        u19245 DCE2                                          u18630 2DAE  
                                        u16918 D758                                          u19430 ECAE  
                                        u16847 2AE2                                          u16919 D76C  
                                        u19255 DD1A                                          u16865 D6C8  
                                        u19601 CACE                                          u19265 DD62  
                                        u17658 A64E                   __flash_write_to_buffer@start 0073  
                                        u17659 A662                                          u19435 ECA4  
                                        u19275 DDAA                                          u18564 E428  
                                        u18548 E3E8                                          u18565 E420  
                                        u18549 E3FE                                          u19285 DDE8  
                                        u16975 BEF2                                          u18488 E320  
                                        u17785 13E2                                          u18489 E334  
                                        u17965 2454                                          u19901 3A34  
                                        u16998 BF2C                                          u16999 BF40  
                              __end_of___lwmod 2D78                                          i2l300 149C  
                                        i2l301 14A0                                          i2l233 02AC  
                                        i2l170 EC4A                                          i2l171 EBE4  
                                        i2l148 E78A                                          i2l309 361C  
                                        i2l159 EB38                                          i2l344 0EAE  
                                        i2l169 EBD2                                          i2l373 CFAC  
                                        i2l358 05E2                                          i2l367 0630  
                                        i2l392 D18C                                          i2l296 148E  
                                        i2l299 1516                          rtcc_write_eeprom@date 0085  
                             ??__display_inout 0090                                          _UADDR 000F38  
                                        i2l787 32DA                                ___awdiv@counter 0064  
                                        _TMR0H 000FD7                                          _TMR1H 000FCF  
                                        _TMR0L 000FD6                                          _TMR1L 000FCE  
      __end_of_system_calculate_output_voltage FC3A       __size_of_system_calculate_output_voltage 0106  
             ?_system_calculate_output_voltage 002E              ??_system_calculate_output_voltage 006C  
              _system_calculate_output_voltage FB34                                          _RPOR5 000EC5  
                                        _RPOR6 000EC6                                          _USTAT 000F64  
                             __i2c_read@length 0067                    ?_ExternalFlash_CapacityRead 0060  
                              ?_display_update 002E                         __rtcc_verify_bcd@value 0063  
           __size_of_USBCtrlEPAllowStatusStage 00C2                                _i2c_eeprom_read 2CB4  
                          ___lmul@multiplicand 0064                       __end_of__display_outputs D478  
                              ??_flash_is_busy 0071                               __end_of_MSDTasks CCE8  
                                   i2memcpy@d1 002E                                 __CFG_FCMEN$OFF 000000  
                              __read_fat@value 008D                             _USBCheckMSDRequest 0936  
                                   i2memcpy@s1 0030                         ??__buck_operate_remote 0076  
              __end_of_USBCtrlEPAllowDataStage 18DE                          __get_dateTime@minutes 0072  
                                        _sd000 9432                                          _sd001 935B  
                                        _sd002 938F                                          _sd003 93FE  
                        __get_dateTime@seconds 0073                 ?_USBIncrement1msInternalTimers 002E  
                  log_generate_entry@log_entry 0078                 __size_of_MSDTransferTerminated 0056  
                          ??__flash_get_status 006E                          _rtcc_get_year_decimal 41EA  
                __end_of_MSDTransferTerminated 32DC            i2c_display_send_init_sequence@F8354 03ED  
                                 _gblCBWLength 01F7                            ?_buck_remote_set_on 002E  
                                   i2memset@p1 002E                         ?_MSDCheckForErrorCases 006A  
                        ??__system_timer0_init 0060                          __buck_start@dutycycle 0072  
            __size_of_rtcc_get_minutes_decimal 0012                              ?__flash_spi_tx_rx 0060  
                            ?__flash_spi_tx_tx 0060                      ?_rtcc_get_minutes_decimal 002E  
                        i2USBStallEndpoint@dir 002E                         __end_of_ResetSenseData 2014  
                                ___ftpack@sign 0064                       __get_empty_cluster@value 008D  
                  rtcc_get_day_decimal@bcd_day 0063                     __end_of__display_usb@F8712 911B  
                   __end_of__display_usb@F8714 923B                     __end_of__display_usb@F8716 922B  
                   __end_of__display_usb@F8718 91FB                     ?_log_get_number_of_samples 0060  
                     __parse_command_long@data 0063                               ??_rtcc_get_hours 0060  
                        ?_system_output_toggle 002E                  rtcc_increment_seconds@seconds 0068  
                             ??_rtcc_get_month 0060              system_calculate_input_current@tmp 0070  
                                        pclath 000FFA                             ??__flash_spi_tx_rx 0068  
                           ??__flash_spi_tx_tx 0068                                __end_of_ui_init 413A  
                                        tablat 000FF5                      __size_of_USBStallEndpoint 0144  
                          ?_USBCheckMSDRequest 002E                                _MSDCommandState 00E6  
             __display_charger@charger_startup 0172                    ??_ExternalFlash_SectorWrite 008D  
                                        plusw1 000FE3                                          plusw2 000FDB  
                __display_charger@charger_sync 0139                 __end_of_rtcc_get_hours_decimal 41EA  
                              __end_of_tmr_isr 17AA                                    ?_USBMSDInit 002E  
     ExternalFlash_WriteProtectStateGet@config 0060                  __size_of__system_encoder_init 0048  
                                        utoa@c 006F                                __number_of_days 22AA  
                                        utoa@v 006D                                          status 000FD8  
                  ?__flash_copy_page_to_buffer 0073                              __CFG_DSWDTPS$8192 000000  
                     __end_ofi2_ResetSenseData 2120                                __end_of_strncmp 1974  
              ??__fill_buffer_get_calibration1 006B                ??__fill_buffer_get_calibration2 006B  
                             __end_ofi2_memcpy 3070                    __end_of__display_efficiency B816  
                             __end_ofi2_memset 3C50                 __display_temperature@external1 00A4  
               __display_temperature@external2 00B0                 ??_MSDComputeDeviceInAndResidue 0062  
                     __ic2_display_set_address 39C2                              __buck_timer2_init 40CC  
                               _MSDReadHandler D694                          ?_rtcc_increment_hours 002E  
                        ??_rtcc_increment_year 0068                          ?_rtcc_increment_month 002E  
                        __size_of__display_usb 01B6              __end_of_buck_remote_set_dutycycle 3E48  
            __size_of_rtcc_get_seconds_decimal 0012                        __CFG_DSWDTOSC$INTOSCREF 000000  
                 __size_of_USBStdSetCfgHandler 00DC              fat_create_file@number_of_clusters 00AC  
                         flash_page_write@data 0081                  ??i2_ExternalFlash_MediaDetect 0030  
              __size_of_fat_get_empty_clusters 00B8                      ?_rtcc_get_seconds_decimal 002E  
                         flash_page_write@page 007F                       __end_of_log_collect_data C4BE  
                              __initialization 0BB0                    __display_temperature@header 0090  
                         ??_buck_remote_set_on 0060                             ?__buck_timer2_init 002E  
                    __end_of__flash_get_status 36A0        __end_ofi2_ExternalFlash_MediaInitialize 3FC6  
     __size_ofi2_ExternalFlash_MediaInitialize 001E          __end_of_ExternalFlash_MediaInitialize 3E98  
       __size_of_ExternalFlash_MediaInitialize 0028              ??i2_ExternalFlash_MediaInitialize 0030  
             ?i2_ExternalFlash_MediaInitialize 002E                i2_ExternalFlash_MediaInitialize 3FA8  
                _ExternalFlash_MediaInitialize 3E70                                    _system_init F6F2  
               __size_of_system_encoder_enable 0010                                   __end_of_main BB7E  
                                 __end_of_itoa 3594                  __end_of_system_encoder_enable 4254  
                             _rtcc_set_minutes 4066                   __size_of__rtcc_increment_bcd 003E  
                             _rtcc_set_seconds 4032                __end_of_i2c_display_write_fixed 2C50  
                                 __end_of_utoa 1034                    ??__fill_buffer_get_display1 0064  
                  ??__fill_buffer_get_display2 0064                       __parse_command_short@cmd 008B  
                        ?__buck_set_sync_async 0062                               __end_of_i2c_init 427E  
                  __end_of__rtcc_decrement_bcd 371C                       __end_of__i2c_acknowledge 42BE  
                                ??__i2c_open_1 0060                     __end_of__get_empty_cluster 1BC6  
                                _adc_calibrate 427E                           ??_USBCheckMSDRequest 0039  
                               __CFG_OSC$HSPLL 000000         MSDComputeDeviceInAndResidue@DiExpected 0060  
                      _USBCheckMSDRequest$2640 0039                        _USBCheckMSDRequest$2641 003B  
                        system_init@appendtext 0100                      __size_of_USBCtrlEPService 0096  
                          ??__buck_timer2_init 0060                                         ??_main 00D5  
                                ___fttol@sign1 0069                               __end_of__i2c_get 42B4  
                                       ??_itoa 0076                             USBStallEndpoint@ep 0065  
                         __size_of__ui_encoder 0444                                         ??_utoa 006D  
                                __activetblptr 000003                                ?_USBDeviceTasks 002E  
                           __write_root@offset 008D     __end_of_ExternalFlash_WriteProtectStateGet 42FE  
  __size_of_ExternalFlash_WriteProtectStateGet 0004           ??_ExternalFlash_WriteProtectStateGet 0062  
          ?_ExternalFlash_WriteProtectStateGet 0060             _ExternalFlash_WriteProtectStateGet 42FA  
                                  ?_USBSuspend 002E    __i2c_eeprom_load_default_calibration@buffer 0060  
                  __end_of_rtcc_decrement_year 3D4C                __size_of_rtcc_increment_minutes 002A  
              __size_of_rtcc_increment_seconds 002A                      ??__buck_initial_dutycycle 006D  
                             ??_rtcc_set_hours 0060                               ??_rtcc_set_month 0060  
                     ??_buck_remote_set_enable 0060                 __display_efficiency@efficiency 00C6  
                     __end_of_rtcc_get_minutes 419E                       __end_of_rtcc_get_seconds 4176  
                  __size_of__write_calibration 00BC                  __flash_write_to_buffer@buffer 0079  
                      __end_of_USBDeviceAttach 3848                         __flash_write_to_buffer 2B86  
              i2c_digipot_reset_off@data_array 006A                                ??_i2c_adc_start 006C  
                             __end_of___altoft 170C                         __get_dateTime@datetime 0074  
                                       _ADRESH 000FC4                                         _ADRESL 000FC3  
                                       _CCPR1L 000FBB                                         _EECON2 000FA7  
                                       _DMABCH 000F66                                         _DMABCL 000F67  
                             ___awdiv@dividend 0060                         ?_i2c_digipot_reset_off 002E  
                              ?_ResetSenseData 002E                    ??__get_available_root_entry 008E  
                             __end_of___ftpack FA28                                     __i2c_start 42DA  
                       SYSTEM_Initialize@state 0060                                     __i2c_write 3126  
                                 __display_usb DE50                               __end_of_adc_init 3FE2  
                             __end_of_adc_read 1CE4                                         i2l1322 1782  
                                       i2l1331 1754                                         i2l1333 175A  
                                       i2l1325 171A                                         i2l1329 1780  
                               __CFG_WDTEN$OFF 000000           __flash_write_page_from_buffer@buffer 0075  
              ??_APP_DeviceCustomHIDInitialize 003A                       ?__fill_buffer_get_status 002E  
                                       _OSCCON 000FD3                   ??_get_next_eeprom_write_task 0060  
                                       _RTCCAL 000F3E                                         _RPINR1 000EE1  
                                       _RPOR21 000ED5                                         _RPINR2 000EE2  
                                       _RPOR22 000ED6                                         _RPINR3 000EE3  
                    __end_of__buck_timer2_init 40E4                                 __CFG_WPCFG$OFF 000000  
                        __display_itoa@missing 008E                         __end_of_MSDReadHandler D8A8  
                              __read_root@data 0087                        __display_charger@fan_on 0108  
                      __display_charger@header 010F                        i2c_eeprom_write@address 006A  
                     i2USBTransferOnePacket@ep 0036                               ??__i2c_wait_idle 0060  
                            ??i2_USBDeviceInit 0036                         ?_display_get_character 0060  
                             ?_display_prepare 002E                __size_ofi2_USBTransferOnePacket 0102  
                              __read_root@slot 008E                              ?__get_input_power 006E  
                      __write_calibration@addr 0097                    fat_append_to_file@file_size 009F  
                      __write_calibration@cntr 009C                                 __CFG_WPDIS$OFF 000000  
                             __read_fat@offset 008B                               _i2c_eeprom_tasks 2756  
                            _shortPacketStatus 002A              fat_append_to_file@number_of_bytes 0091  
                   __get_empty_cluster@cluster 008F                                 __CFG_XINST$OFF 000000  
                             _i2c_eeprom_write 13D4                             ??__get_input_power 0070  
                              rtcc_set_day@day 0060                   ??__parse_command_calibration 0067  
                              USBDeviceTasks@i 004C                                    i2memcpy@tmp 0038  
                                 _CCPTMRS0bits 000F52                    USBStdFeatureReqHandler@pUEP 0046  
                     USBTransferOnePacket@data 0061                     USBCtrlTrfInHandler@lastDTS 002F  
                 __end_of__flash_set_page_size 1E80                                ??_USBDeviceInit 0068  
           __flash_copy_page_to_buffer@command 0079                       __end_of_rtcc_correct_day 3EE4  
                     flash_partial_read@length 0077                                         ___lmul 2586  
                                       _gblCBW 0241                                      ??___aldiv 0068  
                           __size_of__i2c_read 00C0                             __size_of__i2c_send 000A  
                       __size_of__get_dateTime 01B6                                      ??___awdiv 0064  
                               __CFG_STVREN$ON 000000                             __size_of__i2c_stop 0008  
                       __size_of__get_checksum 0046                                      ??___lldiv 0068  
                                    ??___fttol 0064    i2SYSTEM_Initialize@pll_startup_counter_3284 0030  
    SYSTEM_Initialize@pll_startup_counter_3284 0063                                      ??___lwdiv 0064  
                 __size_of_flash_partial_write 0070                                 ?_adc_calibrate 002E  
                                   _SoftDetach 01F6                                      ??___lwmod 0064  
                                       _buffer 0800                              _USBEnableEndpoint 37D4  
              __size_of_USBStdGetStatusHandler 00AA                __size_of_buck_remote_get_status 0032  
                      system_output_off@output 0061                                __get_date@month 0069  
                                       _memcpy 2AB8                     ?_adc_calculate_temperature 006C  
                                       _memset 39F6                        __end_of_i2c_eeprom_read 2D16  
                                       clear_0 0C18                                         clear_1 0C2A  
                                       clear_2 0C36                                         clear_3 0C42  
                                       clear_4 0C4E                                         clear_5 0C5A  
                    _ExternalFlash_SectorWrite 3848                                         clear_6 0C66  
                              __CFG_CLKOEC$OFF 000000                               __end_of_inq_resp 93E1  
                             ___awdiv@quotient 0066                         ??_i2c_digipot_reset_on 006A  
                                       _ui_run F80A                        ?_system_encoder_disable 002E  
                           ?_USBEnableEndpoint 0036                   __size_of__buck_operate_local 04EE  
                         __end_of_buck_operate 2F5A                             _flash_partial_read 152A  
                                       _status 01F0                          i2c_display_init@F8357 03E4  
                                       _strlen 34BA                        ?_rtcc_decrement_minutes 002E  
                      ?_rtcc_decrement_seconds 002E                         __size_of__buck_prepare 006E  
                       __display_outputs@F8722 9269                         __display_outputs@F8724 920B  
                       __display_outputs@F8726 90CA                         __display_outputs@F8728 90B5  
                __size_of_USBTransferOnePacket 0134                            __size_of_USBMSDInit 011E  
                  i2c_display_write_fixed@data 0065                     __end_of_log_generate_entry B496  
  i2c_display_send_init_sequence@init_sequence 006A                         __size_of__flash_wakeup 005E  
                      __write_root@root_sector 008B                                         itoa@cp 0076  
                       __size_of__flash_spi_tx 006C                              _i2c_set_frequency 27C6  
                        system_init@extension2 017E                          __end_of_fat_find_file 0142  
       buck_remote_set_synchronous@synchronous 0060                    fat_get_empty_clusters@value 008D  
                       _fat_get_empty_clusters 1268                  __size_of__parse_command_short 00E4  
                       ?_rtcc_get_year_decimal 002E                 __display_charger@charger_async 0124  
          __size_of_get_next_eeprom_write_task 002E                                   __mediumconst 908A  
                          __end_of__i2c_open_1 40CC                 i2c_digipot_reset_on@data_array 006A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      __rtcc_decrement_bcd@value 0067  
                                    ??_ui_init 0060                    __end_of__display_time@F8701 924B  
             __size_of_APP_DeviceMSDInitialize 0010                    __end_of__display_time@F8681 9307  
                  __end_of__display_time@F8683 92E4                    __end_of__display_time@F8675 9285  
                  __end_of__display_time@F8691 91C6                    __end_of__display_time@F8677 92F7  
                  __end_of__display_time@F8685 92CF                    __end_of__display_time@F8693 925B  
                  __end_of__display_time@F8679 92EE                    __end_of__display_time@F8687 92C3  
                  __end_of__display_time@F8695 91B4                    __end_of__display_time@F8689 9157  
                  __end_of__display_time@F8697 9143                    __end_of__display_time@F8699 912F  
              ??__flash_compare_page_to_buffer 0076                            ??_USBEnableEndpoint 0037  
                           ?_i2c_set_frequency 002E              __end_of__display_efficiency@F8753 917D  
            __end_of__display_efficiency@F8755 916A              __end_of__display_efficiency@F8757 9269  
                          ?_flash_partial_read 0073                        __end_of__number_of_days 2328  
                     __size_of_flash_page_read 002A                      __fill_buffer_get_display1 2E3C  
                    __fill_buffer_get_display2 2DDA                                      ??_tmr_isr 002E  
                   __end_of__root_is_available 1A0A                         ??_system_output_toggle 0062  
                    __size_of_system_output_on 004E                                    _CtrlTrfData 000D38  
         __end_of_buck_remote_change_dutycycle 2DDA          __size_of_buck_remote_change_dutycycle 0062  
                 _buck_remote_change_dutycycle 2D78                                      ??_strncmp 0066  
                         __size_of__write_root 006C             buck_remote_change_dutycycle@change 0060  
                        __end_of_ui_get_status 42EE             __size_of_buck_remote_get_dutycycle 0006  
                       __display_outputs@line3 0060                         __display_outputs@line4 0075  
            i2ExternalFlash_MediaDetect@config 002E                ExternalFlash_MediaDetect@config 0060  
                         _controlTransferState 0029                     ??_APP_DeviceCustomHIDTasks 008C  
                        __flash_spi_tx_rx@data 0064                           __CFG_LS48MHZ$SYS48X8 000000  
                      ?_rtcc_get_month_decimal 002E                              _SYSTEM_Initialize 2A50  
                __size_of__display_temperature 01FC                          __flash_spi_tx_tx@data 0064  
                          ??_i2c_set_frequency 0060                                     __accesstop 0060  
                      __end_of__initialization 0C6C                                     ___altoft@c 006E  
            MSDCheckForErrorCases@MSDErrorCase 0070                     log_write_to_disk@log_entry 0101  
                  ?__parse_command_calibration 0063                                ?_MSDReadHandler 002E  
                 __size_of__buck_set_dutycycle 007C                           __end_of_i2c_adc_read 3014  
                       ??_rtcc_increment_hours 0068                             ?_SYSTEM_Initialize 002E  
                       ??_rtcc_increment_month 0068                         __size_of__display_itoa 02B8  
                                ___rparam_used 000001                         __size_of__display_time 06D8  
                       _rtcc_increment_minutes 3CCE                         _rtcc_increment_seconds 3C7A  
                     __size_of_USBStallHandler 0046                   __end_of__i2c_not_acknowledge 42AA  
              ExternalFlash_SectorWrite@config 0084                ExternalFlash_SectorWrite@buffer 008A  
              __end_of__buck_initial_dutycycle 0936                    __end_of__parse_command_long 0412  
                __size_of_rtcc_get_day_decimal 0012                             __size_of__get_date 0082  
                          __size_of_USBSuspend 0030                             __size_of__get_time 0086  
                        __write_fat@fat_sector 008C                          flash_page_write@match 0083  
                     __end_of_rtcc_read_eeprom E1A2                           ??_flash_partial_read 007B  
                                   ___fttol@f1 0060                               _flash_page_write 3180  
                            ?__get_temperature 006E                                 __pcstackCOMRAM 002E  
                   __size_of__flash_get_status 0040                      __end_of_USBEnableEndpoint 3810  
                            _log_write_to_disk 1CE4                         ??__buck_set_sync_async 0063  
          __size_of_ExternalFlash_CapacityRead 0014                             __rtcc_write_enable 40FA  
                      _battery_voltage_maximum 02E9          __end_of__fill_buffer_get_calibration1 166E  
       __size_of__fill_buffer_get_calibration1 00A0                  __fill_buffer_get_calibration1 15CE  
        __end_of__fill_buffer_get_calibration2 241E         __size_of__fill_buffer_get_calibration2 007A  
                __fill_buffer_get_calibration2 23A4                                  __end_of_sd000 9436  
                                __end_of_sd001 938F                                  __end_of_sd002 93BD  
                                __end_of_sd003 9418                           buck_remote_set_on@on 0060  
                                    ?_MSDTasks 002E                                   __pidataBANK2 375A  
                                 __pidataBANK3 3FE2                                   __pidataBANK4 29E8  
                          ??_SYSTEM_Initialize 0060                      __get_available_root_entry 3AEC  
                         __rtcc_verify_bcd@max 0061                           __rtcc_verify_bcd@min 0060  
         ExternalFlash_SectorWrite@sector_addr 0086               __size_of_USBCtrlEPAllowDataStage 009A  
                           __buck_prepare@cntr 0060           __size_of_i2c_eeprom_read_calibration 014A  
                           ??__get_temperature 0070                      rtcc_decrement_hours@hours 0068  
                           __size_of__read_fat 005A                                _active_protocol 01FE  
                          i2USBStallEndpoint@p 0034                             ?_log_write_to_disk 002E  
               __end_of_system_encoder_disable 42E8                  __size_of_USBConfigureEndpoint 0094  
           __size_of_ExternalFlash_MediaDetect 000A                    __end_of_USBCtrlTrfInHandler 0EB8  
                 ?_buck_remote_set_synchronous 002E                            _userInterfaceStatus 01F3  
               __end_of_rtcc_decrement_minutes 3DCA                 __end_of_rtcc_decrement_seconds 3D76  
                          display_prepare@mode 00D4                                   _gblSenseData 0260  
                              _MSDErrorHandler F00A                 ?_ExternalFlash_MediaInitialize 0060  
                    __end_of_i2c_set_frequency 2836                            ?__rtcc_write_enable 002E  
                       i2_USBTransferOnePacket FF4C                            system_init@filename 0168  
                 __size_of_system_output_is_on 001A                                     __buck_stop 3BF8  
                          ??_log_write_to_disk 00D0               fat_get_empty_clusters@fat_sector 0089  
                 buck_remote_set_enable@remote 0060                                      ?i2_memcpy 002E  
                                    ?i2_memset 002E          __end_of_MSDProcessCommandMediaPresent A8A6  
       __size_of_MSDProcessCommandMediaPresent 0436                  _MSDProcessCommandMediaPresent A470  
                       flash_partial_read@data 0079                             __size_of_buck_init 000E  
                       flash_partial_read@page 0073                                  __get_date@day 006A  
              __size_of_buck_remote_set_enable 001E                       ??_USBCtrlTrfSetupHandler 004B  
                      _USBTicksSinceSuspendEnd 01FA                                  __get_dateTime DC9A  
                                __get_checksum 3594              __flash_copy_page_to_buffer@buffer 0075  
                             ?_USBDeviceAttach 002E                      __end_of_SYSTEM_Initialize 2AB8  
                      ??__update_modified_time 006F                              __end_of__i2c_read 0DF8  
                 __size_of__rtcc_write_disable 0016                              __end_of__i2c_send 42D2  
                       _USBStdGetStatusHandler 1480                 __end_of_rtcc_get_month_decimal 420E  
                          USBStallEndpoint@dir 0060                              __end_of__i2c_stop 42DA  
                       _buck_remote_get_status 3A5C                                    ?__i2c_start 002E  
                                  ?__i2c_write 0065                                     __pbssBANK0 00D7  
                                   __pbssBANK1 01D3                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                     __pbssBANK4 0468  
                       __read_root@root_sector 008A                  fat_append_to_file@fat_cluster 00A5  
             __size_of_i2c_display_write_fixed 0064                               _USBStallEndpoint ED92  
                                   _gblNumBLKS 02AA                  ?_buck_remote_change_dutycycle 002E  
                                    ?_i2c_init 002E                             _buck_get_dutycycle 42F4  
                    __size_of__rtcc_verify_bcd 005E              __end_of_buck_remote_get_dutycycle 42F4  
                 __end_of__sector_from_cluster 40FA                           ??__rtcc_write_enable 0060  
                 ??_schedule_eeprom_write_task 0060                                     __read_root 2910  
                   __size_of__buck_timer2_init 0018                               _mediaInformation 02B6  
                 __end_of_rtcc_decrement_hours 3DF4                   __end_of_rtcc_decrement_month 3DA0  
                                __buck_prepare 2836                                  __flash_wakeup 2F5A  
                    rtcc_decrement_month@month 0068                                  __flash_spi_tx 297C  
                                    ?__i2c_get 002E                    __size_of_USBWakeFromSuspend 0036  
                                  _pBDTEntryIn 0010                      __end_of_log_write_to_disk 1D6E  
                  __size_of_i2c_display_cursor 0034                     __update_modified_time@root 006D  
             __end_of_USBCtrlEPServiceComplete 0326          __end_of_APP_DeviceCustomHIDInitialize 395A  
       __size_of_APP_DeviceCustomHIDInitialize 0036                  _APP_DeviceCustomHIDInitialize 3924  
                         log_collect_data@temp 0078                    MSDTransferTerminated@handle 0039  
                          ?_buck_get_dutycycle 002E             ExternalFlash_SectorSizeRead@config 0060  
                         USBCtrlTrfRxService@i 002E                                ??_adc_calibrate 0060  
                       __size_of_log_start_new 00F2                                        ?___lmul 0060  
                                   ??_MSDTasks 00AC                         __display_itoa@decimals 007A  
                      ??_i2c_digipot_backlight 006A                        __get_checksum@log_entry 0060  
                            ?__display_charger 002E                 __flash_write_to_buffer@command 007A  
                rtcc_decrement_minutes@minutes 0068                                      MSDTasks@i 00B1  
                                      _CCP1CON 000FBA                           i2c_adc_start@channel 006C  
                                    ?___altoft 006E                                        ?_memcpy 0060  
                           _fat_append_to_file C4BE                                        ?_memset 0060  
                               ___lmul@product 0068                                     _device_dsc 9418  
                             ??_display_update 0070                               ?_i2c_eeprom_read 0071  
                                  __i2c_open_1 40B4                                      ?___ftpack 0060  
                           ??__display_charger 0090                               _USBCtrlEPService 1A0A  
            system_calculate_input_voltage@tmp 0070                                        ?_ui_run 002E  
                                   _ep_data_in 01E4                             __display_clear@col 0063  
                                    ?_adc_init 002E                                      ?_adc_read 0060  
                       rtcc_read_eeprom@buffer 0092                             __display_clear@row 0062  
                                      ?_strlen 0060                  fat_append_to_file@file_number 00A9  
               __parse_command_calibration@cmd 002E                  ??_buck_remote_set_synchronous 0060  
                  APP_DeviceCustomHIDTasks@idx 0096               __sector_from_cluster@fat_cluster 0060  
                  __end_of_USBCtrlTrfRxService FB34                                  __display_itoa C77C  
                                __display_time 9466                             _USBCheckStdRequest 05D2  
                    __write_calibration@buffer 0087                              _configDescriptor1 931B  
                                      i2l11153 1B02                                        i2l11305 000A  
                                      i2l12207 0CBC                                        i2l11343 37F2  
                                      i2l11511 06E2                                        i2l12311 F24A  
                                      i2l12303 F1EC                                        i2l11513 06E8  
                                      i2l11505 06CC                                        i2l11521 06FA  
                                      i2l12313 F250                                        i2l12305 F1F2  
                                      i2l12241 18AC                                        i2l11339 37E4  
                                      i2l11451 FEA4                                        i2l11523 070C  
                                      i2l20331 1A90                                        i2l11293 FF8C  
                                      i2l11285 FF62                                        i2l11533 0732  
                                      i2l12317 F256                                        i2l12237 1894  
                                      i2l11543 0752                                        i2l11527 071C  
                                      i2l12191 3C3E                                        i2l22103 EB80  
                                      i2l11801 0B06                                        i2l11537 073C  
                                      i2l12329 14BE                                        i2l20329 1A8A  
                                      i2l22121 EBA0                                        i2l11811 0B30  
                                      i2l12291 F14C                                        i2l12339 14FE  
                                      i2l12187 3C2E                                        i2l22115 EB94  
                                      i2l11821 0B70                                        i2l13405 0E30  
                                      i2l11549 075C                                        i2l11581 09C0  
                                      i2l13407 0E34                                        i2l11583 09C6  
                                      i2l11559 094C                                        i2l11751 32FC  
                                      i2l12295 F15E                                        i2l14303 3026  
                                      i2l14311 305E                                        i2l20295 3916  
                                      i2l22135 EBDC                                        i2l13425 0E94  
                                      i2l11753 3308                                        i2l11745 32E0  
                                      i2l20297 3918                                        i2l22129 EBC8  
                                      i2l11819 0B68                                        i2l13419 0E74  
                                      i2l11579 09A2                                        i2l22155 EC2A  
                                      i2l22091 EB4E                                        i2l11829 0BA8  
                                      i2l11597 09FA                                        i2l11749 32EA  
                                      i2l11757 331A                                        i2l22157 EC46  
                                      i2l22149 EC0A                                        i2l22077 EB30  
                                      i2l22069 EB20                                        i2l13391 30C6  
                                      i2l13383 307E                                        i2l11687 32A4  
                                      i2l12817 0256                                        i2l22097 EB5A  
                                      i2l11797 0AFC                                        i2l12837 02D2  
                                      i2l16061 E76E                                        i2l12871 FA76  
                                      i2l14367 3618                                        i2l12865 FA54  
                                      i2l16073 E796                                        i2l16057 E766  
                                      i2l12883 FAD0                                        i2l16085 E7C6  
                                      i2l12887 FAEA                                        i2l16095 E82A  
                                      i2l16089 E7CE                                        i2l23395 2060  
                                      i2l23397 2094                                        i2l18081 201E  
                                      i2l18091 203A                                        i2l18083 2026  
                                      i2l18087 2030                                        i2l18079 2016  
                                      i2l18095 2048                                        i2l16911 1728  
                                      i2l18521 D020                        ??_MSDCheckForErrorCases 006E  
                                      i2l18507 CFA8                                        i2l16915 1732  
                                      i2l18533 D092                                        i2l16941 1798  
                                      i2l16925 1760                                        i2l16909 1720  
                                      i2l16917 1748                                        i2l18543 D0E4  
                                      i2l18527 D06C                                        i2l18471 053E  
                                      i2l16943 179A                                        i2l16935 178C  
                                      i2l18561 D172                                        i2l18545 D100  
                                      i2l16929 176A                                        i2l18467 0536  
                                      i2l18549 D11A                                        i2l18493 05B0  
                                      i2l18477 056A                                        i2l16949 17A6  
                                      i2l17863 F4AA                                        i2l17855 F41A  
                                      i2l18575 D1EE                                        i2l18559 D166  
                                      i2l18577 D1FA                                        i2l18569 D1A8  
                                      i2l17867 F4B2                                        i2l18961 05EA  
                                      i2l18963 05F0                                        i2l18973 0608  
                                      i2l18965 05F6                                        i2l18975 060E  
                                      i2l18991 0668                                        i2l18977 0614  
                                      i2l18987 064A                             __size_of_rtcc_init 0020  
                          ?_fat_append_to_file 0091                    __end_ofi2_SYSTEM_Initialize 3330  
                                   ??i2_memcpy 0034                         fat_append_to_file@data 0093  
                                   ??i2_memset 0034                                     _flash_init 33D4  
                   system_output_toggle@output 0062                    __end_of_USBCtrlTrfTxService 0BB0  
                            __end_of__get_date 22AA                            _USBStdSetCfgHandler 04F6  
          __size_of_schedule_eeprom_write_task 0056                           ??_buck_get_dutycycle 0060  
                       fat_append_to_file@root 00B0                                __get_time@hours 0068  
                __buck_set_dutycycle@dutyCycle 0061                              __end_of__get_time 1F8E  
                            ?__display_outputs 002E                                 ?__get_dateTime 0064  
                rtcc_decrement_seconds@seconds 0068                                 ?__get_checksum 0060  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                                      _RXADDRH 000F68                                        _RXADDRL 000F69  
                                      _RTCVALH 000F3B                                        _RTCVALL 000F3A  
                             ?__number_of_days 002E                     __end_ofi2_USBStallEndpoint FF4C  
                           _rtcc_decrement_day 3BCC                            __rtcc_increment_bcd 36A0  
                        __display_time@minutes 01D0                          __display_time@seconds 01D1  
                                      _TXADDRH 000F6A                                        _TXADDRL 000F6B  
                     __end_of_rtcc_set_minutes 4080                       __end_of_rtcc_set_seconds 404C  
                          ?_USBCheckStdRequest 002E                     ??__ic2_display_set_address 006A  
                 __size_of_USBStdGetDscHandler 0132                       __display_charger@fan_off 0100  
                         __flash_set_page_size 1DF8                                        _UIEbits 000F36  
                           ??__display_outputs 0060                          __display_time@setyear 01BA  
                   __display_charger@supply_on 0160             __end_of_get_next_eeprom_write_task 3B48  
                   _get_next_eeprom_write_task 3B1A                            i2c_eeprom_read@addr 0077  
                   __end_of_APP_DeviceMSDTasks 4244                                        _UIRbits 000F62  
                            __end_of__read_fat 3126                                  ??__buck_start 0073  
                          i2c_eeprom_read@data 0073                    ??_log_get_number_of_samples 0062  
  MSDCheckForErrorCases@HostMoreDataThanDevice 006E                          rtcc_increment_day@day 0068  
        __end_of__flash_compare_page_to_buffer 1844         __size_of__flash_compare_page_to_buffer 009A  
                __flash_compare_page_to_buffer 17AA                                     __write_fat 3330  
                                   ??_i2c_init 0061                               __CFG_CFGPLLEN$ON 000000  
                     __i2c_write@slave_address 0068            __ic2_display_set_address@data_array 006B  
                               ?__buck_prepare 002E                                   ??_USBMSDInit 0039  
                     __write_calibration@index 009B                              __read_fat@cluster 0087  
                               ?__flash_wakeup 002E                             i2c_adc_read@result 0068  
                            ??_flash_page_read 008B                            ?_rtcc_decrement_day 002E  
                               ?__flash_spi_tx 0060                         fat_find_file@extension 0089  
                            ?i2_ResetSenseData 002E                                 _outputPowerSum 0286  
                                   ??__i2c_get 0060                              _MSDProcessCommand E310  
                         ??_fat_append_to_file 0095           adc_calculate_temperature@calibration 006E  
                                __i2c_send@dat 0060                      __flash_get_status@command 006E  
                           __flash_spi_tx@data 0060                                        __Hparam 0000  
              rtcc_get_hours_decimal@bcd_hours 0063                ??_USBIncrement1msInternalTimers 002E  
                                   _lastSecond 01EF                           ?_USBStdSetCfgHandler 002E  
                        __end_of_rtcc_get_year 4162                    __size_of_USBCheckHIDRequest 00DA  
                                      __Lparam 0000                    __size_of_rtcc_increment_day 002C  
                           ??i2_ResetSenseData 002E                             __display_itoa@text 007B  
                     __size_of_fat_create_file 01F6                              __end_of_hid_rpt01 93FE  
                       _buck_remote_set_enable 3F8A                             ?_MSDProcessCommand 002E  
                    __rtcc_increment_bcd@value 0067                        __end_of_MSDErrorHandler F13C  
                            __end_of_buck_init 4272                     _MSDTransferTerminated$2729 003B  
                   __size_of_USBEnableEndpoint 003C                      __size_of__flash_spi_tx_rx 00BC  
                    __size_of__flash_spi_tx_tx 00B4           APP_DeviceCustomHIDTasks@return_value 0094  
                                 ?_system_init 002E                rtcc_get_month_decimal@bcd_month 0063  
                            ?_log_collect_data 002E                             __display_usb@F8712 9107  
                           __display_usb@F8714 922B                             __display_usb@F8716 921B  
                           __display_usb@F8718 91EA                  __size_of__rtcc_bcd_to_decimal 0028  
                         ?__rtcc_increment_bcd 0064                          __size_of_buck_operate 005E  
                         ??_USBCheckStdRequest 004B                                        ___aldiv F5D8  
                __size_of_USBCtrlTrfOutHandler 005C          i2ExternalFlash_MediaInitialize@config 002E  
          ExternalFlash_MediaInitialize@config 0060                                        ___awdiv 0EB8  
                             _ToSendDataBuffer 03A4                                __size_of___lmul 0076  
                                      ___lldiv 10F0                               ??_USBDeviceTasks 004C  
                                      ___fttol EC4E                                        ___lwdiv 2496  
                            ??_USBStallHandler 002E                                        ___lwmod 2D16  
                           ??_log_collect_data 0074                                     ??___altoft 0072  
                            ?__i2c_acknowledge 002E                          __end_of_buck_get_mode 4302  
                          __size_of__i2c_start 0008                   __end_of__system_encoder_init 354C  
                                      __pcinit 0BB0                                __size_of_memcpy 0068  
                          __size_of__i2c_write 005A                                     ??___ftpack 0065  
                              __size_of_memset 0034                       __size_of_MSDWriteHandler 0322  
                    __end_of_configDescriptor1 935B                            ??_MSDProcessCommand 00A7  
                                      __ramtop 0F00                   ExternalFlash_SectorRead@page 0093  
               ?__fill_buffer_get_calibration1 002E                 ?__fill_buffer_get_calibration2 002E  
                   __size_of_i2c_set_frequency 0070                                     ??_adc_init 0060  
                                   ??_adc_read 0062                                        __ptext0 B816  
                                      __ptext1 F80A                                        __ptext2 4244  
                                      __ptext3 42E2                                        __ptext4 3A2A  
                                      __ptext5 3B48                                        __ptext6 3B74  
                                      __ptext7 395A                                        __ptext8 A02C  
                                      __ptext9 3E98                                 ?__display_itoa 0078  
                                      _inPipes 000A                           ??_rtcc_decrement_day 0068  
                              __size_of_ui_run 0112                                 ?__display_time 002E  
                        _task_list_write_index 001D                             __display_time@cntr 01D2  
            __size_of_ExternalFlash_SectorRead 0038                   __end_of__display_inout@F8671 9293  
                  _USBDeferOUTDataStagePackets 01FB                   __end_of__display_inout@F8665 91EA  
                           __display_time@mode 01CB                   __end_of__display_inout@F8667 91D8  
                 __end_of__display_inout@F8669 9319                             ??__i2c_acknowledge 0060  
                                    _T0CONbits 000FD5                             __display_time@year 01CC  
                        __end_of_rtcc_set_year 4032                      ?_ExternalFlash_SectorRead 008B  
                              __size_of_strlen 004A                    __end_of__system_timer0_init 3660  
                                    _T1CONbits 000FCD                                    ?__buck_stop 002E  
                                 ??_USBSuspend 0045                                      _T2CONbits 000FCA  
                           __end_of_USBMSDInit F4BC                               ??_ResetSenseData 0060  
                      ?__flash_write_to_buffer 0073                        _APP_DeviceMSDInitialize 4254  
                                      _msd_cbw 000D40                       __end_of_i2c_eeprom_tasks 27C6  
                             ___aldiv@dividend 0060                                        _msd_csw 000D80  
                      ??_i2c_digipot_reset_off 006A                           __i2c_not_acknowledge 42A0  
                     __end_of_i2c_eeprom_write 1480                                i2_USBDeviceInit E724  
                                      _ui_init 4126                               i2USBDeviceInit@i 0036  
                                _log_start_new 0142             __size_of_ExternalFlash_SectorWrite 0038  
                      __size_of__buck_pin_init 0036                          ?__flash_set_page_size 002E  
                                      _tmr_isr 170C                          __end_of_flash_is_busy 3F2E  
                           __end_of_USB_CD_Ptr 931B                                     _msd_buffer 000600  
                           __get_empty_cluster 1B34                              ?_rtcc_get_minutes 002E  
                            ?_rtcc_get_seconds 002E                     __size_of_SYSTEM_Initialize 0068  
                             _system_output_on 3422                __size_of_USBCtrlTrfSetupHandler 0090  
                        __size_of_i2c_adc_read 005C                  __size_of__buck_operate_remote 0106  
                                      _strncmp 18DE                            _flash_partial_write 26E6  
                         end_of_initialization 0C6C                        rtcc_decrement_year@year 0068  
                      ??_display_get_character 0061                          _MSDTransferTerminated 3286  
        __flash_compare_page_to_buffer@command 007B                 ?_MSDProcessCommandMediaPresent 002E  
                           __end_of_USB_SD_Ptr 930F                    __end_of_rtcc_increment_year 3C7A  
                           ??_rtcc_get_minutes 0060                             ??_rtcc_get_seconds 0060  
                          i2c_eeprom_write@dat 0072                                        memcpy@d 0067  
         __size_of_buck_remote_set_synchronous 001E                                        memcpy@n 0064  
                                      memcpy@s 0069                               __write_fat@value 008A  
                 __get_temperature@temperature 006E                            _pBDTEntryEP0OutNext 0018  
                    __rtcc_bcd_to_decimal@ones 0061                      __end_of_MSDProcessCommand E470  
                                      itoa@buf 0070                                    ?__read_root 0087  
                    __rtcc_bcd_to_decimal@tens 0060                                        memset@c 0062  
                                      itoa@val 0072                                        memset@n 0064  
                                      memset@p 0066                            __buck_operate_local 9B3E  
                              _USB1msTickCount 01DD                       __buck_operate_local$8739 007B  
                                 _buck_operate 2EFC                            ?__get_empty_cluster 0087  
                 fat_get_empty_clusters@offset 008B                       ?_USBStdFeatureReqHandler 002E  
                                    i2u1223_40 3048                                      i2u1223_47 303E  
                i2c_eeprom_write@slave_address 0083             __size_of__fill_buffer_get_display1 0062  
           __size_of__fill_buffer_get_display2 0062                                      i2u1650_44 F49A  
                     fat_append_to_file@length 00AA                                      i2u1650_45 F494  
                             _inputCapacitySum 0282                                      i2u1646_48 F440  
                                    i2u1646_49 F454                                      i2u1648_48 F466  
                                    i2u1648_49 F47C                       fat_append_to_file@offset 00A7  
                        ??_USBStdSetCfgHandler 0045                                ___lldiv@divisor 0064  
                   __size_of_log_write_to_disk 008A            rtcc_get_minutes_decimal@bcd_minutes 0063  
                     fat_append_to_file@sector 009D                              __end_of_rtcc_init 3F4E  
               ??_buck_remote_change_dutycycle 0060                                ___lldiv@counter 006C  
                          __end_of__buck_start 085E                                  ?_rtcc_get_day 002E  
          rtcc_get_seconds_decimal@bcd_seconds 0063                                   _averageCount 0016  
                        ??__rtcc_increment_bcd 0066                             __end_of_USBSuspend 3ABE  
                            __get_time@minutes 0069                              __get_time@seconds 006A  
                      _USBCtrlEPAllowDataStage 1844                     ?_buck_remote_set_dutycycle 002E  
                             ___aldiv@quotient 006A                    __size_of_buck_remote_set_on 001E  
                                      postdec1 000FE5                                        postdec2 000FDD  
         __end_of_ExternalFlash_SectorSizeRead 4296          __size_of_ExternalFlash_SectorSizeRead 000C  
                 _ExternalFlash_SectorSizeRead 428A                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                          rtcc_set_hours@hours 0060                              ?_rtcc_correct_day 002E  
                     __buck_operate_local@cntr 007D                           ?_flash_partial_write 007F  
                 __size_of__display_efficiency 0380               __size_of__fill_buffer_get_status 029C  
                                ??__ui_encoder 008B                                  ?_rtcc_set_day 002E  
                                      utoa@buf 0067                      _log_get_number_of_samples 4296  
      MSDProcessCommandMediaPresent@sectorSize 009E                       _USBCtrlEPServiceComplete 0234  
                                      utoa@val 0069                   log_write_to_disk@file_number 0100  
                                    _MSD_State 00E7                                  _inputPowerSum 028A  
                        _system_encoder_enable 4244                                        strlen@s 0060  
                  ??_adc_calculate_temperature 006F                             ??_rtcc_correct_day 0064  
                  __size_of_USBCheckMSDRequest 00D6                     _USBStatusStageEnabledFlag1 0022  
                   _USBStatusStageEnabledFlag2 0021                       flash_partial_write@match 0087  
                         ?__buck_operate_local 002E                             USBEnableEndpoint@p 0037  
                      ?_fat_get_empty_clusters 0087                        ??_rtcc_get_year_decimal 0063  
                                    _PORTAbits 000F80                                      _PORTBbits 000F81  
                      __display_outputs@header 009A                               _outputCurrentSum 028E  
                     flash_partial_write@start 0081                      __size_of__get_input_power 0084  
                         ??__get_empty_cluster 0089                 __end_of__flash_write_to_buffer 2BEC  
                          __buck_set_dutycycle 2328                               __CFG_DSBOREN$OFF 000000  
                    __display_temperature@cntr 00C7                           __sector_from_cluster 40E4  
                                 _i2c_adc_read 2FB8                           _rtcc_decrement_hours 3DCA  
                   __rtcc_bcd_to_decimal@input 0062                           _rtcc_decrement_month 3D76  
           __size_of__get_available_root_entry 002E                                ??__get_dateTime 0068  
                   __end_of__write_calibration 10F0                          ?__i2c_not_acknowledge 002E  
                fat_append_to_file@new_cluster 00A3                       _rtcc_get_minutes_decimal 41C6  
                              ??__get_checksum 0062                         fat_create_file@cluster 00AE  
                          flash_page_read@data 0089                   __size_of__rtcc_decrement_bcd 003E  
                            adc_read@adc_value 0063                                    ?_flash_init 002E  
                          flash_page_read@page 0087                               __CFG_CPUDIV$OSC1 000000  
                fat_get_empty_clusters@cluster 0091                                      _TRISAbits 000F92  
                               ?_log_start_new 002E                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96                             _ReceivedDataBuffer 0478  
                           _BothEP0OutUOWNsSet 0025                  fat_get_empty_clusters@maximum 0087  
                     __end_of_flash_page_write 31D8                                  __pbssBIGRAMll 0800  
                             ??_MSDReadHandler 0095                      USBConfigureEndpoint@EPNum 0033  
                      _i2c_display_write_fixed 2BEC                              __CFG_SOSCSEL$HIGH 000000  
                   ?_USBCtrlEPAllowStatusStage 002E                                ??__buck_prepare 0060  
                   __display_efficiency@header 0092                        __display_time@presssave 0170  
          USER_USB_CALLBACK_EVENT_HANDLER@size 0041                        __size_of__display_clear 0064  
                                    _USTATcopy 002C                                ??__flash_wakeup 0068  
                 __size_of_rtcc_decrement_year 002A                          __end_of_i2c_adc_start 34BA  
           __end_of_schedule_eeprom_write_task 3286                     _schedule_eeprom_write_task 3230  
MSDProcessCommandMediaPresent@NumBytesInPacket 009D                        ?_rtcc_increment_minutes 002E  
                      ?_rtcc_increment_seconds 002E                                ??__flash_spi_tx 0064  
                                  ?__write_fat 0088                     __display_efficiency@footer 00B8  
                      __size_of__display_inout 021C                   ?_i2c_eeprom_read_calibration 002E  
                             __rtcc_verify_bcd 2E9E                             _log_generate_entry B0C4  
              i2c_eeprom_read_calibration@addr 007F                   __end_of_USBTransferOnePacket F00A  
                         ?__buck_set_dutycycle 002E                i2c_eeprom_read_calibration@cntr 0081  
                                  _CCP1CONbits 000FBA                       _rtcc_get_seconds_decimal 4220  
                          _system_output_is_on 3FFE            __end_ofi2_ExternalFlash_MediaDetect 4306  
                        i2c_eeprom_read@length 0075                    i2_ExternalFlash_MediaDetect 4302  
                          rtcc_set_month@month 0060                     __display_efficiency@source 00A5  
                       i2c_display_cursor@line 006E                               __CFG_IOL1WAY$OFF 000000  
                          __get_dateTime@hours 0071                   __end_of__parse_command_short 04F6  
                          __get_dateTime@month 006F                                 ??_rtcc_get_day 0060  
                          __size_of__buck_stop 002C                 ?__flash_compare_page_to_buffer 0073  
                           __root_is_available 1974                              __CFG_WPEND$PAGE_0 000000  
            __end_of__fill_buffer_get_display1 2E9E              __end_of__fill_buffer_get_display2 2E3C  
                          ?_log_generate_entry 0078             __flash_compare_page_to_buffer@page 0073  
                          __CFG_MSSP7B_EN$MSK7 000000                              ?_rtcc_read_eeprom 002E  
                __get_empty_cluster@fat_sector 0089                               ?_MSDErrorHandler 002E  
                      __size_of_rtcc_get_hours 0014                        __size_of_rtcc_get_month 0014  
                             __write_root@data 0088                         _USBCtrlTrfSetupHandler 1BC6  
               __end_of__display_outputs@F8722 9277                 __end_of__display_outputs@F8724 921B  
               __end_of__display_outputs@F8726 90DF                 __end_of__display_outputs@F8728 90CA  
       __end_of_system_calculate_input_current E724        __size_of_system_calculate_input_current 015A  
               _system_calculate_input_current E5CA                          ??_flash_partial_write 0087  
                    system_output_is_on@output 0060                                 ??_rtcc_set_day 0060  
                             __write_root@slot 008F                            __rtcc_write_disable 4110  
             ExternalFlash_CapacityRead@config 0060                        ?i2_USBTransferOnePacket 002E  
                     __size_of_display_prepare 0088                          __end_of_USBDeviceInit E310  
                           ??_rtcc_read_eeprom 008B          __end_of_USBIncrement1msInternalTimers 3F0A  
       __size_of_USBIncrement1msInternalTimers 0026                  _USBIncrement1msInternalTimers 3EE4  
                 __end_of__display_temperature DAA4                                 __end_of___lmul 25FC  
               __end_of_fat_get_empty_clusters 1320                                ??__display_itoa 007D  
                ?_ExternalFlash_SectorSizeRead 0060                                ??__display_time 0060  
           __end_of__display_temperature@F8773 90F3                     __display_temperature@F8773 90DF  
           __end_of__display_temperature@F8775 92DA                     __display_temperature@F8775 92CF  
           __end_of__display_temperature@F8777 92AB                     __display_temperature@F8777 929F  
           __end_of__display_temperature@F8779 929F                     __display_temperature@F8779 9293  
                          ?__root_is_available 002E                              __size_of_MSDTasks 02B4  
                        ??__buck_operate_local 0076                       __end_of_USBStallEndpoint EED6  
                                    i2memcpy@d 0034                       ?__buck_initial_dutycycle 002E  
                                    i2memcpy@n 0032                              ??_fat_create_file 00A3  
                      __end_ofi2_USBDeviceInit E874                                      i2memcpy@s 0036  
                    ??_APP_DeviceMSDInitialize 003C                                      i2memset@c 0030  
                                    i2memset@n 0032                                      i2memset@p 0034  
                        ?__sector_from_cluster 0060                           ?_system_output_is_on 002E  
                               __end_of_memcpy 2B20                                _MSDRetryAttempt 01F8  
                         i2USBStallEndpoint@ep 0033         __end_of_system_calculate_input_voltage FD40  
      __size_of_system_calculate_input_voltage 0106                 _system_calculate_input_voltage FC3A  
                               __end_of_memset 3A2A                          __get_output_power@pwr 006F  
                        ?_rtcc_decrement_hours 002E                               __CFG_DSWDTEN$OFF 000000  
                      __parse_command_long@cmd 0064                          ?_rtcc_decrement_month 002E  
                          __size_of__read_root 006C                  __size_of_i2c_digipot_reset_on 002C  
                            _USBBusIsSuspended 0027                      flash_partial_write@length 0083  
                               __end_of_ui_run F91C                   __end_of_rtcc_get_day_decimal 4220  
        __get_available_root_entry@file_number 008E                                 __end_of_strlen 3504  
                __display_temperature@internal 00BC                            __end_of__ui_encoder A470  
                    __flash_set_page_size@size 0077                                  _chargerOnTime 02B0  
                          start_initialization 0BB0                        ?_USBStdGetStatusHandler 002E  
                                ??__write_root 008A                      __size_of__get_temperature 002E  
                      ?_buck_remote_get_status 002E                           ??_log_generate_entry 007A  
                     i2SYSTEM_Initialize@state 0032                  ExternalFlash_SectorWrite@page 008D  
                USBCtrlTrfRxService@byteToRead 002F                         ??__flash_set_page_size 0073  
                            ??_MSDWriteHandler 008F              __end_of__get_available_root_entry 3B1A  
                     ??_rtcc_get_hours_decimal 0063                 get_next_eeprom_write_task@task 0060  
                            __size_ofi2_memcpy 005C                     i2c_display_cursor@position 006D  
                         ?__rtcc_write_disable 002E                         ?_MSDTransferTerminated 0039  
                            __size_ofi2_memset 002C                         __display_charger@F8740 92F7  
                       __display_charger@F8732 90A0                         __display_charger@F8742 92AB  
                       __display_charger@F8734 9190                         __display_charger@F8744 91FB  
                       __display_charger@F8736 917D                         __display_charger@F8738 930F  
                       __display_charger@F8746 908B                         __display_charger@F8748 90F3  
                              _USBMSDOutHandle 00DD               __ic2_display_set_address@address 006A  
               __end_of_rtcc_increment_minutes 3CF8                   __end_of_USBConfigureEndpoint 1B34  
               __end_of_rtcc_increment_seconds 3CA4                           system_init@filename2 0171  
                                 ??__i2c_start 0060                                   ??__i2c_write 0068  
              __end_of_USBStdFeatureReqHandler D220                              USBStallEndpoint@p 0066  
                                _MSDHostNoData 00E5                           _task_list_read_index 001E  
                    _adc_calculate_temperature F4BC                           ??__root_is_available 0087  
               __size_of__update_modified_time 003E              __end_of_USBCtrlEPAllowStatusStage 0D38  
                __size_of_system_output_toggle 0026                                    __buck_start 0786  
                __end_of__update_modified_time 375A           fat_get_empty_clusters@empty_clusters 008F  
                        ??__buck_set_dutycycle 0060                       __end_of_USBCtrlEPService 1AA0  
                   __size_of_MSDProcessCommand 0160                           __system_encoder_init 3504  
                                    __i2c_read 0D38                        __size_of_rtcc_set_hours 001A  
                         rtcc_read_eeprom@date 008C                                      __i2c_send 42C8  
                      __size_of_rtcc_set_month 001A                                      __i2c_stop 42D2  
                         __flash_spi_tx@length 0062        _ExternalFlash_MediaInitialize$intlevel0 3E76  
                ??_i2c_eeprom_read_calibration 0079                              __size_of_i2c_init 000C  
                         __display_inout@F8671 9285                           __display_inout@F8665 91D8  
                         __display_inout@F8667 91C6                           __display_inout@F8669 9316  
                            _rtcc_write_eeprom 3382                      ??_USBCtrlEPAllowDataStage 002F  
                             __buck_start@cntr 0075                                 USBDeviceInit@i 0068  
                             __buck_start@mode 0073                         __write_calibration@ptr 0099  
                __size_of_rtcc_increment_hours 002A                  __size_of_rtcc_increment_month 002A  
                __root_is_available@first_byte 008D                         _pBDTEntryEP0OutCurrent 001A  
                       __size_of_fat_find_file 00F4                             ?_rtcc_write_eeprom 002E  
                                  _DMACON1bits 000F88                         i2c_eeprom_write@length 006E  
                                  _DMACON2bits 000F86                            __size_of_flash_init 004E  
                      USBTransferOnePacket@dir 0060                               __flash_spi_tx_rx 11AC  
                             __flash_spi_tx_tx 1320                        USBTransferOnePacket@len 0063  
                            __size_of__i2c_get 000A                    MSDErrorHandler@OldMSD_State 0069  
                                _MSDTasks$2694 00AD                                  _MSDTasks$2695 00AF  
               __end_ofi2_USBTransferOnePacket 004E                    __size_of_flash_partial_read 00A4  
                               __get_date@date 006B                                       ??___lmul 0068  
                             _outputVoltageSum 0292                        flash_partial_read@start 0075  
                               __get_date@year 0068                            _USBStdGetDscHandler F13C  
                       ?_system_encoder_enable 002E                         system_output_on@output 0060  
                            __CFG_ADCSEL$BIT10 000000              __size_of_APP_DeviceCustomHIDTasks 040A  
                                  __pdataBANK2 02BB                                    __pdataBANK3 03E4  
                                  __pdataBANK4 0400                  __size_of__buck_set_sync_async 0074  
                    ?_APP_DeviceCustomHIDTasks 002E                        rtcc_increment_year@year 0068  
                         __size_of_system_init 0118                 __size_of_i2c_digipot_backlight 0034  
                                     ??_memcpy 0066                        __size_of__i2c_wait_idle 0076  
                                     ??_memset 0066                           __display_inout@line1 0090  
                         system_init@extension 017A                           __display_inout@line2 00A2  
                 __size_of__parse_command_long 00EC                           __display_inout@line3 00C2  
                         __display_inout@line4 00B4                  __end_of_i2c_digipot_backlight 398E  
                                 ?__i2c_open_1 002E                         __size_of_ui_get_status 0006  
                          ??_rtcc_write_eeprom 0085                          ??_system_output_is_on 0060  
                                     ??_ui_run 008B                             __end_of__i2c_start 42E2  
                        __number_of_days@month 0063                             __end_of__i2c_write 3180  
                    __root_is_available@offset 008A                            __size_of__write_fat 0052  
                                     ??_strlen 0062                          __display_outputs@cntr 00A9  
                            __size_of___altoft 009E                         ??__i2c_not_acknowledge 0060  
                        __display_outputs@mode 00A8                         _USBActiveConfiguration 002D  
               __end_of_USBStdGetStatusHandler 152A                       _buck_dutycycle_last_step 01F2  
                              ??_log_start_new 0064                 __end_of_buck_remote_get_status 3A8E  
                    __buck_operate_remote$8740 0076                              __size_of___ftpack 010C  
                            __size_of_adc_init 001C                              __size_of_adc_read 008E  
                                  __pbssCOMRAM 0001                                adc_read@channel 0062  
                   fat_append_to_file@position 00AC                    fat_create_file@next_cluster 00A7  
                              _flash_page_read 3DF4                      ??_i2c_display_write_fixed 0068  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                 __size_of_USBCtrlTrfInHandler 00C0                   ??_ExternalFlash_CapacityRead 0064  
               __size_of_MSDCheckForErrorCases 0130                                 __buck_pin_init 38B8  
                __end_of_MSDCheckForErrorCases F39E                          ??__rtcc_write_disable 0060  
                                    _gblBLKLen 02A6                      __size_of__display_charger 0340  
           __end_of_flash_command_pagesize_512 9432                     _flash_command_pagesize_512 942E  
           __end_of_flash_command_pagesize_528 942E                     _flash_command_pagesize_528 942A  
                         ?_USBStdGetDscHandler 002E                     i2c_set_frequency@frequency 0060  
                            ?_rtcc_set_minutes 002E                              ?_rtcc_set_seconds 002E  
                                    __get_date 2228                         __get_checksum@checksum 0064  
                                    __get_time 1F08                    ?_get_next_eeprom_write_task 002E  
                          __end_of__write_root 2910                          ?__system_encoder_init 002E  
                   __end_of_USBWakeFromSuspend 3924                             ??_rtcc_set_minutes 0060  
                           ??_rtcc_set_seconds 0060                      __end_of_rtcc_write_eeprom 33D4  
                   __end_of_i2c_display_cursor 39C2                                     ?__i2c_read 0065  
                  __size_of__rtcc_write_enable 0016                                     ?__i2c_send 002E  
                              _USBStallHandler 35DA                                   _pBDTEntryOut 01D3  
                                   ?__i2c_stop 002E                        ?_buck_remote_set_enable 002E  
                   ?_buck_remote_get_dutycycle 002E                                      __read_fat 30CC  
               schedule_eeprom_write_task@task 0061                       __size_of_USBDeviceAttach 0038  
                      __rtcc_decrement_bcd@max 0065                        __rtcc_decrement_bcd@min 0064  
             __end_of_ExternalFlash_SectorRead 38B8                       __get_checksum@byte_array 0062  
                           i2_USBStallEndpoint FE46                      __size_of__display_outputs 0258  
                             ___lwdiv@dividend 0060                            flash_is_busy@status 0071  
                 buck_remote_get_status@retval 0060                              fat_find_file@name 0087  
               MSDProcessCommandMediaPresent@i 00A6                            fat_find_file@buffer 008B  
                            fat_find_file@slot 0096                                      __pintcode 9008  
                    fat_create_file@root_entry 00B0                        __fill_buffer_get_status CCE8  
                           _APP_DeviceMSDTasks 4232                                  __pmediumconst 908A  
                                     ?___aldiv 0060                            fat_find_file@offset 0099  
                                     ?___awdiv 0060                                      __ptext100 9466  
                                    __ptext101 D8A8                                      __ptext110 BB7E  
                                    __ptext102 D220                                      __ptext111 C77C  
                                    __ptext103 D478                                      __ptext200 419E  
                                    __ptext120 9B3E                                      __ptext112 34BA  
                                    __ptext104 B496                                      __ptext201 41B2  
                                    __ptext121 3BF8                                      __ptext113 354C  
                                    __ptext105 EC4E                                      __ptext210 15CE  
                                    __ptext202 3A5C                                      __ptext130 2586  
                                    __ptext122 0786                                      __ptext114 0F76  
                                    __ptext106 166E                                      __ptext211 2AB8  
                                    __ptext203 42EE                                      __ptext131 E1A2  
                                    __ptext123 2672                                      __ptext115 2D16  
                                    __ptext107 F91C                                      __ptext220 3EE4  
                                    __ptext212 EED6                                      __ptext204 42FE  
                                    __ptext140 BEBE                                      __ptext132 39F6  
                                    __ptext124 2328                                      __ptext116 2496  
                                    __ptext108 F5D8                                      __ptext221 1A0A  
                                    __ptext205 42F4                                      __ptext141 42FA  
                                    __ptext133 3810                                      __ptext125 085E  
                                    __ptext117 2EFC                                      __ptext109 2C50  
                                    __ptext230 F13C                                      __ptext222 3014  
                                    __ptext214 170C                                      __ptext206 2DDA  
                                    __ptext150 F00A                                      __ptext142 3848  
                                    __ptext134 2A50                                      __ptext126 10F0  
                                    __ptext118 FD40                                      __ptext231 CF84  
                                    __ptext223 1BC6                                      __ptext215 EB08  
                                    __ptext207 2E3C                                      __ptext151 ED92  
                                    __ptext143 3180                                      __ptext135 4232  
                                    __ptext127 1C56                                      __ptext119 2836  
                                    __ptext240 209A                                      __ptext232 2014  
                                    __ptext224 0234                                      __ptext216 E724  
                                    __ptext208 3798                                      __ptext160 11AC  
                                    __ptext152 1F8E                                      __ptext144 2B86  
                                    __ptext136 CA34                                      __ptext128 427E  
                                    __ptext241 3FA8                                      __ptext233 32DC  
                                    __ptext225 1844                                      __ptext217 38EE  
                                    __ptext209 23A4                                      __ptext161 0A0C  
                                    __ptext153 3880                                      __ptext145 1320  
                                    __ptext137 E310                                      __ptext129 F4BC  
                                    __ptext250 0DF8                                      __ptext242 4302  
                                    __ptext234 0936                                      __ptext226 05D2  
                                    __ptext218 3A8E                                      __ptext170 3382  
                                    __ptext162 428A                                      __ptext154 3DF4  
                                    __ptext146 250E                                      __ptext138 2B20  
                                    __ptext251 0ADE                                      __ptext243 3924  
                                    __ptext235 06AC                                      __ptext227 04F6  
                                    __ptext219 35DA                                      __ptext171 13D4  
                                    __ptext163 413A                                      __ptext155 152A  
                                    __ptext147 17AA                                      __ptext139 A470  
                                    __ptext252 0000                                      __ptext244 FF4C  
                                    __ptext236 3286                                      __ptext228 3C24  
                                    __ptext180 4032                                      __ptext172 27C6  
                                    __ptext164 3E70                                      __ptext156 3F0A  
                                    __ptext148 D694                                      __ptext245 37D4  
                                    __ptext237 FE46                                      __ptext229 1480  
                                    __ptext181 404C                                      __ptext173 3126  
                                    __ptext165 42BE                                      __ptext157 2F5A  
                                    __ptext149 F26E                                      __ptext246 1AA0  
                                    __ptext238 4254                                      __ptext190 3E1E  
                                    __ptext182 4066                                      __ptext174 25FC  
                                    __ptext166 ACBA                                      __ptext158 297C  
                                    __ptext247 3070                                      __ptext239 F39E  
                                    __ptext191 2D78                                      __ptext183 4080  
                                    __ptext175 42D2                                      __ptext167 0412  
                                    __ptext159 3660                                      __ptext248 FA28  
                                    __ptext192 E9BE                                      __ptext184 409A  
                                    __ptext176 42DA                                      __ptext168 3422  
                                    __ptext249 0C76                                      __ptext193 3230  
                                    __ptext185 40FA                                      __ptext177 42C8  
                                    __ptext169 31D8                                      __ptext194 CCE8  
                                    __ptext186 4110                                      __ptext178 0326  
                                    __ptext195 42E8                                      __ptext187 3F4E  
                                    __ptext179 4018                                      __ptext196 414E  
                                    __ptext188 3F6C                                      __ptext197 4162  
                                    __ptext189 3F8A                                      __ptext198 4176  
                                    __ptext199 418A                       __end_of_system_output_on 3470  
                          fat_find_file@sector 0097                                       ?___lldiv 0060  
                                     ?___fttol 0060                          __end_of_adc_calibrate 428A  
                                     ?___lwdiv 0060                                       ?___lwmod 0060  
                                    _hid_rpt01 93E1                                    __ui_encoder A02C  
                          ?i2_USBStallEndpoint 002E                         ??__sector_from_cluster 0062  
                                    _buck_init 4264                                      _idle_rate 01FF  
                       ??_rtcc_decrement_hours 0068                         ??_rtcc_decrement_month 0068  
                               __get_time@time 006B                               ?i2_USBDeviceInit 002E  
                        _buck_remote_dutycycle 00E1                       __display_efficiency@cntr 00D1  
                              __i2c_write@data 0065                               __get_input_power 21A4  
                              __i2c_write@cntr 0069                            fat_create_file@name 009B  
                          ?_APP_DeviceMSDTasks 002E                      __size_ofi2_ResetSenseData 0086  
                         __display_time@setday 01C3             __flash_write_to_buffer@data_length 0077  
                          fat_create_file@size 009F                                   ??__buck_stop 0060  
                         _USBTransferOnePacket EED6                   __flash_spi_tx_rx@data_length 0066  
                   ?_ExternalFlash_MediaDetect 0060                         __end_of__buck_pin_init 38EE  
               ??_ExternalFlash_SectorSizeRead 0062                              ??_display_prepare 00D2  
                         __CFG_RTCOSC$T1OSCREF 000000                           __parse_command_short 0412  
                         __end_of_rtcc_get_day 41C6             __size_of_log_get_number_of_samples 000A  
                                _fat_find_file 004E                              __display_itoa@len 008D  
                            __display_itoa@pos 008F                              __display_itoa@tmp 0083  
                            ?_i2c_eeprom_tasks 002E                      __size_of_log_collect_data 02DE  
                 __end_of__rtcc_bcd_to_decimal 3E70                                       ?_ui_init 002E  
                  __size_of_buck_get_dutycycle 0006                              ?_i2c_eeprom_write 006A  
                 __end_of_USBCtrlTrfOutHandler 30CC                       __size_of_i2c_eeprom_read 0062  
                        ??_USBStdGetDscHandler 002E                 __size_of_i2c_digipot_reset_off 002C  
          __size_of__flash_copy_page_to_buffer 0078                                    _ep_data_out 01E1  
                             ___lwdiv@quotient 0065                                       ?_tmr_isr 002E  
              __size_of_rtcc_get_hours_decimal 0012                  __end_of_i2c_digipot_reset_off 3BA0  
                           ??_i2c_eeprom_tasks 009D                                  _MSDWriteState 001F  
                 __size_of_USBCtrlTrfRxService 010C                __parse_command_calibration@dat1 0064  
              __parse_command_calibration@dat2 0065                __parse_command_calibration@dat3 0066  
                USBConfigureEndpoint@direction 002E                                       ?_strncmp 0060  
                          __display_efficiency B496                                 __display_clear 2C50  
                            __display_time@day 01CE                           __end_of_rtcc_set_day 40B4  
                           ??_i2c_eeprom_write 006F                      __size_of__i2c_acknowledge 000A  
                                ?__display_usb 002E                __parse_command_calibration@item 0063  
                            __display_time@tad 0180                                     ?__get_date 0064  
                            __display_time@pts 0100                           ??i2_USBStallEndpoint 002F  
              ?_i2c_display_send_init_sequence 002E               ??_i2c_display_send_init_sequence 006A  
                            __display_usb@cntr 00A5                                 __display_inout D478  
                                   ?__get_time 0064                                  _ui_get_status 42E8  
                 __size_ofi2_SYSTEM_Initialize 0054                 __end_of_buck_remote_set_enable 3FA8  
                         __display_temperature D8A8                                ___aldiv@divisor 0064  
                 __size_of_USBCtrlTrfTxService 00D2                                   ??__read_root 0089  
                         __display_usb@usb_off 0074                 __size_of_display_get_character 003C  
                              ___aldiv@counter 0068                           ??_APP_DeviceMSDTasks 00B2  
                __end_of_display_get_character 37D4                                      _extension 02F4  
                                     _LATAbits 000F89                                       _LATBbits 000F8A  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                     __end_of_USBCheckHIDRequest 0786  
               __root_is_available@file_number 008C                              __get_output_power 2120  
                   __end_of_rtcc_increment_day 3BCC           __flash_compare_page_to_buffer@buffer 0075  
                   ??_USBCtrlEPServiceComplete 002F                                     ?__read_fat 0087  
                     __size_of__number_of_days 007E                        __i2c_read@slave_address 006F  
                                     _IPR2bits 000FA2                                       _PIE2bits 000FA0  
                     ??_system_encoder_disable 0060                            __rtcc_decrement_bcd 36DE  
                         _rtcc_get_day_decimal 420E                    __size_of_fat_append_to_file 02BE  
                           ?__get_output_power 006D                                    _buck_status 001C  
                           __end_of__buck_stop 3C24           __flash_compare_page_to_buffer@status 0079  
                                     _PIR1bits 000F9E                                      _task_list 0468  
                                     _PIR2bits 000FA1                       ??_rtcc_decrement_minutes 0068  
                     ??_rtcc_decrement_seconds 0068                                 _rtcc_get_hours 419E  
                                     i2u912_40 0B5A                                       i2u912_47 0B50  
                                     i2u914_40 0B9A                                 _rtcc_get_month 4176  
                                     i2u914_47 0B90                                       i2u980_40 F1E8  
                                     i2u980_47 F1DE                                       i2u982_40 F240  
                                     i2u982_47 F236                                       _RCONbits 000FD0  
                    __size_of_rtcc_get_minutes 0014                      __size_of_rtcc_get_seconds 0014  
                                     i2u979_40 F1B8                                       i2u979_47 F1AE  
                             __CFG_WDTPS$32768 000000                   __end_of__buck_operate_remote FE46  
                                     _UEP0bits 000F26              __size_of__ic2_display_set_address 0034  
                  ??_buck_remote_set_dutycycle 0060                                       _MSDTasks CA34  
                   _USBDeferINDataStagePackets 0020                      ?__ic2_display_set_address 002E  
                      flash_partial_write@data 0085                    __size_of_USBCheckStdRequest 00DA  
              ??_MSDProcessCommandMediaPresent 0099                           ?__display_efficiency 002E  
                   ??_rtcc_get_minutes_decimal 0063                        flash_partial_write@page 007F  
                                    _rtcc_init 3F2E                                       _UCONbits 000F65  
          __end_of_buck_remote_set_synchronous 3F6C                          _temperatureOnboardSum 027A  
                  _buck_remote_set_synchronous 3F4E                           _USBConfigureEndpoint 1AA0  
                          ??__get_output_power 006F                            _rtcc_decrement_year 3D22  
                                   ?_buck_init 002E                              __i2c_write@length 0067  
                      __end_of_flash_page_read 3E1E             __flash_write_page_from_buffer@page 0073  
             __size_of_USBStdFeatureReqHandler 029C                                 _USBMSDInHandle 00DB  
                     __end_of__rtcc_verify_bcd 2EFC                                     _ADCON0bits 000FC2  
                                   _ADCON1bits 000FC1                         __display_time@sethours 01B0  
                        ?_USBTransferOnePacket 0060                         __display_time@setmonth 01A6  
                            __read_root@offset 008C                         __display_time@pressday 0160  
                  __display_charger@supply_off 014D                    __size_of_rtcc_decrement_day 002C  
                            _outputCapacitySum 027E                 __size_of_rtcc_get_year_decimal 0012  
          _ExternalFlash_MediaDetect$intlevel0 42C4                              _SYS_InterruptHigh 9008  
                     ??_rtcc_get_month_decimal 0063                  __end_of_rtcc_get_year_decimal 41FC  
                           __end_of__read_root 297C                          ?__parse_command_short 002E  
                              ?__buck_pin_init 002E                           ?__rtcc_decrement_bcd 0064  
                    i2c_display_cursor@address 006F                               __CFG_WPFP$PAGE_1 000000  
                               ?_fat_find_file 0087                   i2c_eeprom_read@slave_address 0078  
                                 ??_flash_init 0078                                   _RemoteWakeup 0028  
            __end_of_ExternalFlash_MediaDetect 42C8                             __get_dateTime@year 006E  
                                     i2_memcpy 3014                                       i2_memset 3C24  
                             __get_temperature 3ABE              MSDCheckForErrorCases@DeviceNoData 006F  
                   ??_rtcc_get_seconds_decimal 0063                                    __write_root 28A4  
                           ?_SYS_InterruptHigh 002E                         __end_of__display_clear 2CB4  
                       __size_of_rtcc_get_year 0014                      __size_of_rtcc_correct_day 0026  
                      __end_of_USBStallHandler 3620                         __end_of__display_inout D694  
                            ?_flash_page_write 007F              __end_of_log_get_number_of_samples 42A0  
                               __i2c_read@data 0065                ??__flash_write_page_from_buffer 0076  
                      __size_of_display_update 008A                                 ??__display_usb 0060  
                               __i2c_read@cntr 0070                              ___lmul@multiplier 0060  
                                  _INTCON2bits 000FF1                                    _INTCON3bits 000FF0  
                                    copy_data0 0BC4                                      copy_data1 0BE4  
                                    copy_data2 0C04                   __size_of__system_timer0_init 0040  
                               ?_ui_get_status 002E                         ??__system_encoder_init 0060  
                  ??_USBCtrlEPAllowStatusStage 002E                           ?_rtcc_decrement_year 002E  
                 fat_create_file@cluster_count 00A9                    __end_of_USBStdSetCfgHandler 05D2  
                        ?__display_temperature 002E                             ??_flash_page_write 0083  
                                 ??__write_fat 008C                      __end_of__get_output_power 21A4  
                  ?_schedule_eeprom_write_task 002E                                       _i2c_init 4272  
                                 _lowPowerTime 02AE                            ??_SYS_InterruptHigh 004D  
                   __size_of_rtcc_write_eeprom 0052                                 _rtcc_set_hours 4080  
                               _rtcc_set_month 404C     __i2c_eeprom_load_default_calibration@index 0062  
                       __size_of_buck_get_mode 0004                                    ??__i2c_read 0068  
                  __end_of__rtcc_increment_bcd 36DE             system_calculate_output_current@tmp 0070  
                                  ??__i2c_send 0060                                   _MSDReadState 01F9  
                           __write_calibration 1034                                    ??__i2c_stop 0060  
           buck_remote_set_dutycycle@dutycycle 0060                             __write_fat@cluster 0088  
                           __end_of_device_dsc 942A             adc_calculate_temperature@adc_value 006C  
                           __get_checksum@cntr 0065                         __end_of_rtcc_get_hours 41B2  
                     MSDErrorHandler@ErrorCase 0068                         __end_of_rtcc_get_month 418A  
                        ?_rtcc_get_day_decimal 002E                                       __i2c_get 42AA  
                            i2c_adc_start@gain 006B                        ?_USBCtrlTrfSetupHandler 002E  
                              _fat_create_file DAA4                         __size_of_rtcc_set_year 001A  
                    ??__fill_buffer_get_status 0061                                     _ANCON0bits 000F48  
                   __end_of_buck_remote_set_on 3F8A                                     _ANCON1bits 000F49  
                      USBStdGetStatusHandler@p 002F                                       __Hrparam 0000  
                          __display_itoa@value 0078                          __display_charger@cntr 018E  
                 __size_of_rtcc_increment_year 002A                                      memcpy@tmp 0066  
                                     __Lrparam 0000             __size_of_adc_calculate_temperature 011C  
                       USBTransferOnePacket@ep 0068                         _rtcc_get_hours_decimal 41D8  
                               _buck_dutycycle 00E4                            ?__write_calibration 002E  
                          rtcc_correct_day@day 0064                                       _SetupPkt 000D30  
                          rtcc_correct_day@max 0065                             __end_of_flash_init 3422  
                        ??__display_efficiency 0090                                 _TransferLength 00D9  
                    __get_empty_cluster@offset 008B                     __end_of_USBCheckMSDRequest 0A0C  
                          __display_inout@cntr 00C5                                     ?_rtcc_init 002E  
                        ?_USBConfigureEndpoint 002E                           __number_of_days@year 0061  
                             __size_of___aldiv 011A                       _ExternalFlash_SectorRead 3880  
                    display_get_character@line 0063                         __size_of_flash_is_busy 0024  
                            ??_USBDeviceAttach 0060                                 __i2c_wait_idle 25FC  
                              _MSDWriteHandler BEBE                               __size_of___awdiv 00BE  
                         __display_outputs@low 008A                               __size_of___lldiv 00BC  
                                     ___altoft 166E                               __size_of___fttol 0144  
                             __size_of___lwdiv 0078                               __size_of___lwmod 0062  
    ExternalFlash_SectorWrite@allowWriteToZero 008C                                       ___ftpack F91C  
         __size_ofi2_ExternalFlash_MediaDetect 0004                                    _MSDCBWValid 01F5  
                    __end_of_SYS_InterruptHigh 9086                                 _buck_remote_on 00E3  
                            ?_USBStallEndpoint 0060                     i2c_display_write_fixed@pos 0068  
              i2c_adc_start@configuration_byte 006D                                       _adc_init 3FC6  
                                     _adc_read 1C56                            __display_time@F8701 923B  
                          __display_time@F8681 92FF                            __display_time@F8683 92DA  
                          __display_time@F8675 9277                            __display_time@F8691 91B4  
                          __display_time@F8677 92EE                            __display_time@F8685 92C3  
                          __display_time@F8693 924B                            __display_time@F8679 92E4  
                          __display_time@F8687 92B7                            __display_time@F8695 91A2  
                          __display_time@F8689 9143                            __display_time@F8697 912F  
                          __display_time@F8699 911B                    __size_of__get_empty_cluster 0092  
                           __end_of__write_fat 3382                           __size_of__i2c_open_1 0018  
                        ??__rtcc_decrement_bcd 0066                             ??_USBStallEndpoint 0061  
              __flash_copy_page_to_buffer@page 0073             __end_of_ExternalFlash_CapacityRead 414E  
                   _ExternalFlash_CapacityRead 413A                        ??_MSDTransferTerminated 003B  
                schedule_eeprom_write_task@idx 0062                      __size_of_rtcc_read_eeprom 019C  
                      __size_of_USBDeviceTasks 0146                                ___lwdiv@divisor 0062  
              ?_system_calculate_input_current 002E               ??_system_calculate_input_current 006C  
                        __end_of__get_dateTime DE50                           ??__write_calibration 0085  
                        __end_of__get_checksum 35DA                      _buck_remote_set_dutycycle 3E1E  
                              ?__display_clear 002E                       __end_of__flash_spi_tx_rx 1268  
                              ___lwdiv@counter 0064                       __end_of__flash_spi_tx_tx 13D4  
            __buck_operate_local@tmp_dutycycle 007C                                       __ptext10 3C50  
                                     __ptext11 3C7A                                       __ptext20 3DA0  
                                     __ptext12 3CA4                                       __ptext21 3DCA  
                                     __ptext13 3CCE                                       __ptext30 2E9E  
                                     __ptext22 3BCC                                       __ptext14 3CF8  
                                     __ptext31 0142                                       __ptext23 36DE  
                                     __ptext15 3BA0                                       __ptext40 4264  
                                     __ptext32 4272                                       __ptext24 F6F2  
                                     __ptext16 36A0                                       __ptext41 40CC  
                                     __ptext33 40B4                                       __ptext25 4126  
                                     __ptext17 3D22                                       __ptext50 1CE4  
                                     __ptext42 38B8                                       __ptext34 E874  
                                     __ptext26 3F2E                                       __ptext18 3D4C  
                              _inputCurrentSum 0296                                       __ptext51 B0C4  
                                     __ptext43 3FC6                                       __ptext35 2CB4  
                                     __ptext27 E006                                       __ptext19 3D76  
                                     __ptext60 3AEC                                       __ptext52 3ABE  
                                     __ptext44 3620                                       __ptext36 0D38  
                                     __ptext28 3EBE                                       __ptext61 C4BE  
                                     __ptext53 0EB8                                       __ptext45 3504  
                                     __ptext37 A8A6                                       __ptext29 22AA  
                                     __ptext70 2228                                       __ptext62 28A4  
                                     __ptext54 DC9A                                       __ptext46 FB34  
                                     __ptext38 33D4                                       __ptext71 41EA  
                                     __ptext63 3330                                       __ptext55 3594  
                                     __ptext47 E470                                       __ptext39 1DF8  
                                     __ptext80 C1E0                                       __ptext72 41FC  
                                     __ptext64 26E6                                       __ptext56 DAA4  
                                     __ptext48 FC3A                                       __ptext81 3FFE  
                                     __ptext73 420E                                       __ptext65 241E  
                                     __ptext57 1268                                       __ptext49 E5CA  
                                     __ptext90 2FB8                                       __ptext82 4220  
                                     __ptext74 40E4                                       __ptext66 371C  
                                     __ptext58 004E                                       __ptext91 42A0  
                                     __ptext83 3E48                                       __ptext75 1974  
                                     __ptext67 1F08                                       __ptext59 18DE  
                                     __ptext92 42AA                                       __ptext84 2120  
                                     __ptext76 2910                                       __ptext68 41C6  
                                     __ptext93 42B4                                       __ptext85 21A4  
                                     __ptext77 30CC                                       __ptext69 41D8  
                                     __ptext94 1D6E                                       __ptext86 2756  
                                     __ptext78 1B34                                       __ptext95 2BEC  
                                     __ptext87 3B1A                                       __ptext79 4296  
                                     __ptext96 398E                                       __ptext88 1034  
                                     __ptext97 39C2                                       __ptext89 3470  
                                     __ptext98 1E80                                       __ptext99 DE50  
                             __display_charger BB7E            __size_of__parse_command_calibration 014A  
                             __size_of_ui_init 0014                                   _SSP1CON1bits 000FC6  
                              ?__display_inout 002E                                   _SSP1CON2bits 000FC5  
                                     _filename 02EB                  __buck_start@startup_dutycycle 0074  
                 __flash_set_page_size@command 0073                          ??_rtcc_decrement_year 0068  
                          __display_time@hours 01CF                         __end_of_rtcc_set_hours 409A  
                                 _SSP2CON1bits 000F72                               __size_of_tmr_isr 009E  
         __end_of_MSDProcessCommandMediaAbsent 2B86          __size_of_MSDProcessCommandMediaAbsent 0066  
                 _MSDProcessCommandMediaAbsent 2B20                                    ??__get_date 0066  
                        __flash_wakeup@command 0068                            __display_time@month 01CD  
                       __end_of_rtcc_set_month 4066               __size_of__buck_initial_dutycycle 00D8  
                                  ??__get_time 0066      buck_remote_change_dutycycle@new_dutycycle 0061  
                             __size_of_strncmp 0096                                   ?__buck_start 0072  
                          __parse_command_long 0326                            __display_usb@header 0060  
                   ?_ExternalFlash_SectorWrite 0084                ?_system_calculate_input_voltage 002E  
             ??_system_calculate_input_voltage 006C                 ExternalFlash_SectorRead@config 008B  
               ExternalFlash_SectorRead@buffer 0091              i2c_eeprom_read_calibration@buffer 007B  
                        __end_of__buck_prepare 28A4             __end_of__flash_copy_page_to_buffer 2496  
                   __flash_copy_page_to_buffer 241E                        __size_of_ResetSenseData 0086  
             __end_of_APP_DeviceCustomHIDTasks B0C4                   __end_of_i2c_digipot_reset_on 3B74  
                            ??_i2c_eeprom_read 0076                          __end_of__flash_wakeup 2FB8  
               __end_of_USBCtrlTrfSetupHandler 1C56                                  __size_of_main 0368  
                            ?_USBCtrlEPService 002E                                  __size_of_itoa 0048  
                        __end_of__flash_spi_tx 29E8                                       _inq_resp 93BD  
                                __size_of_utoa 00BE                               __display_usb@low 0085  
                                  ??__read_fat 0089                    __end_of_flash_partial_write 2756  
                                   strncmp@len 0064                            __display_usb@usb_on 0095  
                              ?_rtcc_get_hours 002E             __buck_set_sync_async@new_dutycycle 0062  
                              ?_rtcc_get_month 002E                     __display_time@pressminutes 0114  
                   __display_time@pressseconds 0128                             ??_USBCtrlEPService 004B  
                             __display_outputs D220                        ??_system_encoder_enable 0060  
              __size_of_system_encoder_disable 0006                            _USBCtrlTrfInHandler 0DF8  
           _MSDProcessCommandMediaPresent$2712 009B               __get_empty_cluster@first_cluster 0087  
                  __end_of__buck_operate_local A02C           __parse_command_calibration@parameter 0069  
                                _rtcc_get_year 414E                          _calibrationParameters 0300  
              __size_of_rtcc_decrement_minutes 002A                __size_of_rtcc_decrement_seconds 002A  
                       __end_of__i2c_wait_idle 2672                           __rtcc_bcd_to_decimal 3E48  
                                     _outPipes 0001                     ?__fill_buffer_get_display1 002E  
                   ?__fill_buffer_get_display2 002E                           _USBCtrlTrfOutHandler 3070  
                                     int$flags 005B              __end_of_adc_calculate_temperature F5D8  
                            ??__number_of_days 0060                      _USBCtrlEPAllowStatusStage 0C76  
                 __end_of_system_output_toggle 3EBE                           ?__parse_command_long 0063  
                            _system_output_off 31D8                                   _SSP1STATbits 000FC7  
                                  ??_buck_init 0060                              __get_dateTime@day 0070  
                       ??_USBTransferOnePacket 0064                     i2c_digipot_backlight@level 006A  
                        __size_of_rtcc_get_day 0014                               ?_flash_page_read 0087  
                                 _SSP2STATbits 000F73                                  _buck_get_mode 42FE  
                       __size_of_i2c_adc_start 004A                          __end_of__display_itoa CA34  
                        __end_of__display_time 9B3E                               i2_ResetSenseData 209A  
               ?_APP_DeviceCustomHIDInitialize 002E                                ??_fat_find_file 008B  
                           ?_system_output_off 002E                         ??__parse_command_short 008B  
               __end_of__display_charger@F8740 92FF                 __end_of__display_charger@F8732 90B5  
               __end_of__display_charger@F8742 92B7                 __end_of__display_charger@F8734 91A2  
               __end_of__display_charger@F8744 920B                 __end_of__display_charger@F8736 9190  
               __end_of__display_charger@F8738 9316                 __end_of__display_charger@F8746 90A0  
               __end_of__display_charger@F8748 9107          MSDProcessCommandMediaPresent@capacity 00A2  
                display_get_character@position 0060                       __size_of_MSDErrorHandler 0132  
                             system_init@F8581 0400                               system_init@F8573 02D8  
                             system_init@F8575 02E5                               system_init@F8577 03F6  
                             system_init@F8579 02E1                              rtcc_set_year@year 0060  
                    _USBDeferStatusStagePacket 0023                __end_of__fill_buffer_get_status CF84  
                                _rtcc_set_year 4018                   __end_of_rtcc_increment_hours 3D22  
                 __end_of_rtcc_increment_month 3CCE                                    _OSCTUNEbits 000F9B  
                                   _INTCONbits 000FF2                __size_of_rtcc_get_month_decimal 0012  
                        __size_of_rtcc_set_day 001A                              __write_fat@offset 008E  
                         ?_USBCtrlTrfInHandler 002E                                       memcpy@d1 0060  
                                     memcpy@s1 0062                           i2c_eeprom_write@data 006C  
                             _log_collect_data C1E0                           i2c_eeprom_write@cntr 0084  
                USBCtrlTrfTxService@byteToSend 002E                    __size_of_log_generate_entry 03D2  
              i2c_digipot_backlight@data_array 006B                       __number_of_days@bcd_year 0062  
                                     itoa@base 0074                    __end_of__buck_set_dutycycle 23A4  
                              ??_ui_get_status 0060                                       memset@p1 0060  
                          ??_system_output_off 0060           __end_of_MSDComputeDeviceInAndResidue 0ADE  
        __size_of_MSDComputeDeviceInAndResidue 00D2                   _MSDComputeDeviceInAndResidue 0A0C  
                             ?_USBStallHandler 002E                       USBStdFeatureReqHandler@p 0049  
                   ?__get_available_root_entry 002E                   __end_of__buck_set_sync_async 26E6  
                __size_of__flash_set_page_size 0088                         ??__display_temperature 0090  
                         __buck_operate_remote FD40                                  _flash_is_busy 3F0A  
                             __i2c_acknowledge 42B4                                ?_rtcc_set_hours 002E  
                      __end_of_fat_create_file DC9A                                ?_rtcc_set_month 002E  
                                     intlevel2 0000                       __flash_get_status@status 006F  
              __flash_spi_tx_rx@command_length 0062                   adc_calculate_temperature@tmp 0075  
                   __size_of__get_output_power 0084                    __size_of__root_is_available 0096  
                       __size_of_USBDeviceInit 016E                  ?_MSDProcessCommandMediaAbsent 002E  
      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 209A       __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
            ??_USER_USB_CALLBACK_EVENT_HANDLER 0043               ?_USER_USB_CALLBACK_EVENT_HANDLER 003D  
              _USER_USB_CALLBACK_EVENT_HANDLER 2014                    rtcc_read_eeprom@error_found 008B  
                             ___lwmod@dividend 0060                   i2USBTransferOnePacket@handle 0037  
                      i2c_adc_start@resolution 006A              __end_of_ExternalFlash_SectorWrite 3880  
                             ___lldiv@dividend 0060          __end_of__flash_write_page_from_buffer 2586  
       __size_of__flash_write_page_from_buffer 0078                  __flash_write_page_from_buffer 250E  
                     __end_of__get_input_power 2228                         ??_rtcc_get_day_decimal 0063  
       i2SYSTEM_Initialize@pll_startup_counter 002E           SYSTEM_Initialize@pll_startup_counter 0061  
                        __update_modified_time 371C                                _display_content 0354  
                  ??_buck_remote_get_dutycycle 0060                     __end_of_flash_partial_read 15CE  
                      __end_of_MSDWriteHandler C1E0                                      strncmp@s1 0060  
                                    strncmp@s2 0062                                 ?_rtcc_get_year 002E  
                      __size_of_MSDReadHandler 0214                                   _rtcc_get_day 41B2  
                   i2USBTransferOnePacket@data 002F                                  ??_system_init 0093  
                        ?__rtcc_bcd_to_decimal 002E                               _rtcc_get_minutes 418A  
                             _rtcc_get_seconds 4162                    __end_of_system_output_is_on 4018  
                       ??_USBConfigureEndpoint 002F                                ?__i2c_wait_idle 002E  
                        ?_USBCtrlTrfOutHandler 002E                                _display_prepare 1E80  
             __end_of_rtcc_get_minutes_decimal 41D8                       ??__flash_write_to_buffer 007A  
                    __end_of_system_output_off 3230                      __size_of_rtcc_set_minutes 001A  
                     ?_APP_DeviceMSDInitialize 002E                      __size_of_rtcc_set_seconds 001A  
                    __display_efficiency@F8753 916A                      __display_efficiency@F8755 9157  
                    __display_efficiency@F8757 925B                            _USBCtrlTrfRxService FA28  
                                  ??_rtcc_init 0093                             _USBWakeFromSuspend 38EE  
                        ??__parse_command_long 0064                           __end_of__display_usb E006  
                            ?_system_output_on 002E                                   ?__ui_encoder 002E  
                                 _rtcc_set_day 409A                             _i2c_display_cursor 398E  
                      _USBStdFeatureReqHandler CF84                        _temperatureExternal1Sum 0276  
                      _temperatureExternal2Sum 0272                      rtcc_increment_hours@hours 0068  
                               ?_buck_get_mode 002E                            i2_SYSTEM_Initialize 32DC  
                          _USBCtrlTrfTxService 0ADE                     __size_of_SYS_InterruptHigh 007E  
        __flash_write_page_from_buffer@command 0079                        __rtcc_increment_bcd@max 0065  
                           ??_system_output_on 0060                        __rtcc_increment_bcd@min 0064  
                                     utoa@base 006B                                     _RTCCFGbits 000F3F  
                              _gblMediaPresent 02B2                    __end_of__rtcc_write_disable 4126  
                               ?_rtcc_set_year 002E                                _inputVoltageSum 029A  
                        _i2c_digipot_backlight 395A            ExternalFlash_SectorRead@sector_addr 008D  
                          ?_USBWakeFromSuspend 002E                                     _PPSCONbits 000EBF  
                             ___lldiv@quotient 0068                                ___lwmod@divisor 0062  
                  ??_ExternalFlash_MediaDetect 0062                            ?_i2c_display_cursor 006D  
                        ??_USBCtrlTrfInHandler 002F                                       strlen@cp 0064  
                       _system_encoder_disable 42E2   __end_of__i2c_eeprom_load_default_calibration ACBA  
__size_of__i2c_eeprom_load_default_calibration 0414         ??__i2c_eeprom_load_default_calibration 0063  
        ?__i2c_eeprom_load_default_calibration 0060           __i2c_eeprom_load_default_calibration A8A6  
                 __flash_spi_tx_tx@data_length 0066                          _USBAlternateInterface 01FC  
                              ___lwmod@counter 0064                      __display_efficiency@panel 00C9  
             __end_of_rtcc_get_seconds_decimal 4232                  __size_of__i2c_not_acknowledge 000A  
                      _buck_remote_synchronous 00E2                                    _ptrNextData 01EB  
                        __end_of_log_start_new 0234                                   ___aldiv@sign 0069  
                       _rtcc_decrement_minutes 3DA0                         _rtcc_decrement_seconds 3D4C  
                    i2USBTransferOnePacket@dir 002E                      i2USBTransferOnePacket@len 0031  
                          USBEnableEndpoint@ep 0039                                _endpoint_number 0026  
                             _rtcc_correct_day 3EBE                                 _display_update 1D6E  
                        ?__buck_operate_remote 002E                                 ?_flash_is_busy 002E  
                         ?_USBCtrlTrfRxService 002E                          _MSDCheckForErrorCases F26E  
                         __get_input_power@pwr 0070                     __end_of__rtcc_write_enable 4110  
                ?_MSDComputeDeviceInAndResidue 0060               __end_of__ic2_display_set_address 39F6  
          __end_of_i2c_eeprom_read_calibration E9BE                    _i2c_eeprom_read_calibration E874  
                         ?i2_SYSTEM_Initialize 002E                       ?_USBCtrlEPAllowDataStage 002E  
                               _MSBBufferIndex 02B4                       __flash_spi_tx_rx@command 0060  
                         ?_USBCtrlTrfTxService 002E                                  _i2c_adc_start 3470  
                    flash_partial_read@address 0083             __end_of__parse_command_calibration EB08  
                   __parse_command_calibration E9BE                                     _USBMSDInit F39E  
                                ?_buck_operate 002E                   _USBStatusStageTimeoutCounter 0024  
              ??_ExternalFlash_MediaInitialize 0062                           ??_USBWakeFromSuspend 0045  
                   USBTransferOnePacket@handle 0069                         _rtcc_get_month_decimal 41FC  
                         ??_i2c_display_cursor 006E                      flash_partial_read@command 007F  
                    rtcc_increment_month@month 0068                       ??_fat_get_empty_clusters 0089  
                    __size_of_i2c_eeprom_tasks 0070                                     _USB_CD_Ptr 9319  
                     __end_of__get_temperature 3AEC                       __flash_spi_tx_tx@command 0060  
                    __size_of_i2c_eeprom_write 00AC                                    _power_state 00DF  
                                  _USBInHandle 00D7                       _APP_DeviceCustomHIDTasks ACBA  
