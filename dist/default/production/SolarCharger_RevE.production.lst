

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Sep 15 23:11:25 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1,group=2
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	text251,global,reloc=2,class=CODE,delta=1
   275                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   276                           	psect	text252,global,reloc=2,class=CODE,delta=1
   277                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   278                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   279                           	dabs	1,0x600,512,_msd_buffer
   280                           	dabs	1,0xD00,48,_BDT
   281                           	dabs	1,0xD40,31,_msd_cbw
   282                           	dabs	1,0xD80,13,_msd_csw
   283                           	dabs	1,0xD38,8,_CtrlTrfData
   284                           	dabs	1,0xD30,8,_SetupPkt
   285  0000                     
   286                           ; Version 2.00
   287                           ; Generated 27/05/2018 GMT
   288                           ; 
   289                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   290                           ; All rights reserved.
   291                           ; 
   292                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   293                           ; 
   294                           ; Redistribution and use in source and binary forms, with or without modification, are
   295                           ; permitted provided that the following conditions are met:
   296                           ; 
   297                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   298                           ;        conditions and the following disclaimer.
   299                           ; 
   300                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   301                           ;        of conditions and the following disclaimer in the documentation and/or other
   302                           ;        materials provided with the distribution.
   303                           ; 
   304                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   305                           ;        software without specific prior written permission.
   306                           ; 
   307                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   308                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   309                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   310                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   311                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   312                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   313                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   314                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   315                           ; 
   316                           ; 
   317                           ; Code-generator required, PIC18F47J53 Definitions
   318                           ; 
   319                           ; SFR Addresses
   320  0000                     
   321                           	psect	idataBANK2
   322  01334E                     __pidataBANK2:
   323                           	opt stack 0
   324                           
   325                           ;initializer for _LUN
   326  01334E  F4                 	db	low _ExternalFlash_MediaInitialize
   327  01334F  3A                 	db	high _ExternalFlash_MediaInitialize
   328  013350  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   329  013351  32                 	db	low _ExternalFlash_CapacityRead
   330  013352  3D                 	db	high _ExternalFlash_CapacityRead
   331  013353  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   332  013354  74                 	db	low _ExternalFlash_SectorSizeRead
   333  013355  3E                 	db	high _ExternalFlash_SectorSizeRead
   334  013356  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   335  013357  A8                 	db	low _ExternalFlash_MediaDetect
   336  013358  3E                 	db	high _ExternalFlash_MediaDetect
   337  013359  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   338  01335A  D8                 	db	low _ExternalFlash_SectorRead
   339  01335B  34                 	db	high _ExternalFlash_SectorRead
   340  01335C  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   341  01335D  E4                 	db	low _ExternalFlash_WriteProtectStateGet
   342  01335E  3E                 	db	high _ExternalFlash_WriteProtectStateGet
   343  01335F  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   344  013360  A4                 	db	low _ExternalFlash_SectorWrite
   345  013361  34                 	db	high _ExternalFlash_SectorWrite
   346  013362  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   347  013363  00                 	db	0
   348  013364  00                 	db	0
   349  013365  00                 	db	0
   350  013366  00                 	db	0
   351  013367  00                 	db	0
   352  013368  00                 	db	0
   353  013369  00                 	db	0
   354  01336A  00                 	db	0
   355                           
   356                           ;initializer for system_init@F7096
   357  01336B  54                 	db	84
   358  01336C  45                 	db	69
   359  01336D  53                 	db	83
   360  01336E  54                 	db	84
   361  01336F  20                 	db	32
   362  013370  20                 	db	32
   363  013371  20                 	db	32
   364  013372  20                 	db	32
   365  013373  00                 	db	0
   366                           
   367                           ;initializer for system_init@F7102
   368  013374  54                 	db	84
   369  013375  58                 	db	88
   370  013376  54                 	db	84
   371  013377  00                 	db	0
   372                           
   373                           ;initializer for system_init@F7098
   374  013378  54                 	db	84
   375  013379  58                 	db	88
   376  01337A  54                 	db	84
   377  01337B  00                 	db	0
   378                           
   379                           ;initializer for _battery_voltage_maximum
   380  01337C  34BC               	dw	13500
   381                           
   382                           ;initializer for _filename
   383  01337E  4C                 	db	76
   384  01337F  4F                 	db	79
   385  013380  47                 	db	71
   386  013381  20                 	db	32
   387  013382  20                 	db	32
   388  013383  20                 	db	32
   389  013384  20                 	db	32
   390  013385  20                 	db	32
   391  013386  00                 	db	0
   392                           
   393                           ;initializer for _extension
   394  013387  54                 	db	84
   395  013388  58                 	db	88
   396  013389  54                 	db	84
   397  01338A  00                 	db	0
   398                           
   399                           	psect	idataBANK3
   400  013BAC                     __pidataBANK3:
   401                           	opt stack 0
   402                           
   403                           ;initializer for i2c_display_init@F6880
   404  013BAC  3A                 	db	58
   405  013BAD  1E                 	db	30
   406  013BAE  39                 	db	57
   407  013BAF  0C                 	db	12
   408  013BB0  74                 	db	116
   409  013BB1  5C                 	db	92
   410  013BB2  6D                 	db	109
   411  013BB3  0C                 	db	12
   412  013BB4  01                 	db	1
   413                           
   414                           ;initializer for i2c_display_send_init_sequence@F6877
   415  013BB5  3A                 	db	58
   416  013BB6  1E                 	db	30
   417  013BB7  39                 	db	57
   418  013BB8  0C                 	db	12
   419  013BB9  74                 	db	116
   420  013BBA  5C                 	db	92
   421  013BBB  6D                 	db	109
   422  013BBC  0C                 	db	12
   423  013BBD  01                 	db	1
   424                           
   425                           ;initializer for system_init@F7100
   426  013BBE  4E                 	db	78
   427  013BBF  45                 	db	69
   428  013BC0  57                 	db	87
   429  013BC1  46                 	db	70
   430  013BC2  49                 	db	73
   431  013BC3  4C                 	db	76
   432  013BC4  45                 	db	69
   433  013BC5  20                 	db	32
   434  013BC6  00                 	db	0
   435                           
   436                           	psect	idataBANK4
   437  012384                     __pidataBANK4:
   438                           	opt stack 0
   439                           
   440                           ;initializer for system_init@F7104
   441  012384  4A                 	db	74
   442  012385  75                 	db	117
   443  012386  73                 	db	115
   444  012387  74                 	db	116
   445  012388  20                 	db	32
   446  012389  61                 	db	97
   447  01238A  70                 	db	112
   448  01238B  70                 	db	112
   449  01238C  65                 	db	101
   450  01238D  6E                 	db	110
   451  01238E  64                 	db	100
   452  01238F  65                 	db	101
   453  012390  64                 	db	100
   454  012391  20                 	db	32
   455  012392  74                 	db	116
   456  012393  68                 	db	104
   457  012394  69                 	db	105
   458  012395  73                 	db	115
   459  012396  20                 	db	32
   460  012397  74                 	db	116
   461  012398  65                 	db	101
   462  012399  78                 	db	120
   463  01239A  74                 	db	116
   464  01239B  21                 	db	33
   465  01239C  20                 	db	32
   466  01239D  4E                 	db	78
   467  01239E  6F                 	db	111
   468  01239F  77                 	db	119
   469  0123A0  20                 	db	32
   470  0123A1  74                 	db	116
   471  0123A2  68                 	db	104
   472  0123A3  69                 	db	105
   473  0123A4  73                 	db	115
   474  0123A5  20                 	db	32
   475  0123A6  69                 	db	105
   476  0123A7  73                 	db	115
   477  0123A8  20                 	db	32
   478  0123A9  73                 	db	115
   479  0123AA  75                 	db	117
   480  0123AB  70                 	db	112
   481  0123AC  65                 	db	101
   482  0123AD  72                 	db	114
   483  0123AE  2D                 	db	45
   484  0123AF  6C                 	db	108
   485  0123B0  6F                 	db	111
   486  0123B1  6E                 	db	110
   487  0123B2  67                 	db	103
   488  0123B3  2E                 	db	46
   489  0123B4  20                 	db	32
   490  0123B5  69                 	db	105
   491  0123B6  74                 	db	116
   492  0123B7  20                 	db	32
   493  0123B8  67                 	db	103
   494  0123B9  6F                 	db	111
   495  0123BA  65                 	db	101
   496  0123BB  73                 	db	115
   497  0123BC  20                 	db	32
   498  0123BD  6F                 	db	111
   499  0123BE  6E                 	db	110
   500  0123BF  20                 	db	32
   501  0123C0  61                 	db	97
   502  0123C1  6E                 	db	110
   503  0123C2  64                 	db	100
   504  0123C3  20                 	db	32
   505  0123C4  6F                 	db	111
   506  0123C5  6E                 	db	110
   507  0123C6  20                 	db	32
   508  0123C7  61                 	db	97
   509  0123C8  6E                 	db	110
   510  0123C9  64                 	db	100
   511  0123CA  20                 	db	32
   512  0123CB  6F                 	db	111
   513  0123CC  6E                 	db	110
   514  0123CD  20                 	db	32
   515  0123CE  2E                 	db	46
   516  0123CF  2E                 	db	46
   517  0123D0  2E                 	db	46
   518  0123D1  20                 	db	32
   519  0123D2  62                 	db	98
   520  0123D3  75                 	db	117
   521  0123D4  74                 	db	116
   522  0123D5  20                 	db	32
   523  0123D6  66                 	db	102
   524  0123D7  69                 	db	105
   525  0123D8  6E                 	db	110
   526  0123D9  61                 	db	97
   527  0123DA  6C                 	db	108
   528  0123DB  6C                 	db	108
   529  0123DC  79                 	db	121
   530  0123DD  20                 	db	32
   531  0123DE  69                 	db	105
   532  0123DF  74                 	db	116
   533  0123E0  20                 	db	32
   534  0123E1  65                 	db	101
   535  0123E2  6E                 	db	110
   536  0123E3  64                 	db	100
   537  0123E4  73                 	db	115
   538  0123E5  20                 	db	32
   539  0123E6  48                 	db	72
   540  0123E7  45                 	db	69
   541  0123E8  52                 	db	82
   542  0123E9  45                 	db	69
   543  0123EA  2E                 	db	46
   544  0123EB  00                 	db	0
   545                           
   546                           	psect	mediumconst
   547  00A08A                     __pmediumconst:
   548                           	opt stack 0
   549  00A08A  00                 	db	0
   550  00A08B                     __display_charger@F7269:
   551                           	opt stack 0
   552  00A08B  43                 	db	67
   553  00A08C  68                 	db	104
   554  00A08D  61                 	db	97
   555  00A08E  72                 	db	114
   556  00A08F  67                 	db	103
   557  00A090  65                 	db	101
   558  00A091  72                 	db	114
   559  00A092  20                 	db	32
   560  00A093  41                 	db	65
   561  00A094  73                 	db	115
   562  00A095  79                 	db	121
   563  00A096  6E                 	db	110
   564  00A097  63                 	db	99
   565  00A098  68                 	db	104
   566  00A099  72                 	db	114
   567  00A09A  6F                 	db	111
   568  00A09B  6E                 	db	110
   569  00A09C  6F                 	db	111
   570  00A09D  75                 	db	117
   571  00A09E  73                 	db	115
   572  00A09F  00                 	db	0
   573  00A0A0                     __end_of__display_charger@F7269:
   574                           	opt stack 0
   575  00A0A0                     __display_charger@F7255:
   576                           	opt stack 0
   577  00A0A0  4D                 	db	77
   578  00A0A1  50                 	db	80
   579  00A0A2  50                 	db	80
   580  00A0A3  54                 	db	84
   581  00A0A4  20                 	db	32
   582  00A0A5  43                 	db	67
   583  00A0A6  68                 	db	104
   584  00A0A7  61                 	db	97
   585  00A0A8  72                 	db	114
   586  00A0A9  67                 	db	103
   587  00A0AA  65                 	db	101
   588  00A0AB  72                 	db	114
   589  00A0AC  20                 	db	32
   590  00A0AD  44                 	db	68
   591  00A0AE  65                 	db	101
   592  00A0AF  74                 	db	116
   593  00A0B0  61                 	db	97
   594  00A0B1  69                 	db	105
   595  00A0B2  6C                 	db	108
   596  00A0B3  73                 	db	115
   597  00A0B4  00                 	db	0
   598  00A0B5                     __end_of__display_charger@F7255:
   599                           	opt stack 0
   600  00A0B5                     __display_outputs@F7251:
   601                           	opt stack 0
   602  00A0B5  20                 	db	32
   603  00A0B6  20                 	db	32
   604  00A0B7  4F                 	db	79
   605  00A0B8  75                 	db	117
   606  00A0B9  74                 	db	116
   607  00A0BA  33                 	db	51
   608  00A0BB  20                 	db	32
   609  00A0BC  6F                 	db	111
   610  00A0BD  66                 	db	102
   611  00A0BE  66                 	db	102
   612  00A0BF  20                 	db	32
   613  00A0C0  20                 	db	32
   614  00A0C1  4F                 	db	79
   615  00A0C2  75                 	db	117
   616  00A0C3  74                 	db	116
   617  00A0C4  34                 	db	52
   618  00A0C5  20                 	db	32
   619  00A0C6  6F                 	db	111
   620  00A0C7  66                 	db	102
   621  00A0C8  66                 	db	102
   622  00A0C9  00                 	db	0
   623  00A0CA                     __end_of__display_outputs@F7251:
   624                           	opt stack 0
   625  00A0CA                     __display_outputs@F7249:
   626                           	opt stack 0
   627  00A0CA  20                 	db	32
   628  00A0CB  20                 	db	32
   629  00A0CC  4F                 	db	79
   630  00A0CD  75                 	db	117
   631  00A0CE  74                 	db	116
   632  00A0CF  31                 	db	49
   633  00A0D0  20                 	db	32
   634  00A0D1  6F                 	db	111
   635  00A0D2  66                 	db	102
   636  00A0D3  66                 	db	102
   637  00A0D4  20                 	db	32
   638  00A0D5  20                 	db	32
   639  00A0D6  4F                 	db	79
   640  00A0D7  75                 	db	117
   641  00A0D8  74                 	db	116
   642  00A0D9  32                 	db	50
   643  00A0DA  20                 	db	32
   644  00A0DB  6F                 	db	111
   645  00A0DC  66                 	db	102
   646  00A0DD  66                 	db	102
   647  00A0DE  00                 	db	0
   648  00A0DF                     __end_of__display_outputs@F7249:
   649                           	opt stack 0
   650  00A0DF                     __display_temperature@F7296:
   651                           	opt stack 0
   652  00A0DF  54                 	db	84
   653  00A0E0  65                 	db	101
   654  00A0E1  6D                 	db	109
   655  00A0E2  70                 	db	112
   656  00A0E3  65                 	db	101
   657  00A0E4  72                 	db	114
   658  00A0E5  61                 	db	97
   659  00A0E6  74                 	db	116
   660  00A0E7  75                 	db	117
   661  00A0E8  72                 	db	114
   662  00A0E9  65                 	db	101
   663  00A0EA  20                 	db	32
   664  00A0EB  4D                 	db	77
   665  00A0EC  6F                 	db	111
   666  00A0ED  6E                 	db	110
   667  00A0EE  69                 	db	105
   668  00A0EF  74                 	db	116
   669  00A0F0  6F                 	db	111
   670  00A0F1  72                 	db	114
   671  00A0F2  00                 	db	0
   672  00A0F3                     __end_of__display_temperature@F7296:
   673                           	opt stack 0
   674  00A0F3                     __display_charger@F7271:
   675                           	opt stack 0
   676  00A0F3  43                 	db	67
   677  00A0F4  68                 	db	104
   678  00A0F5  61                 	db	97
   679  00A0F6  72                 	db	114
   680  00A0F7  67                 	db	103
   681  00A0F8  65                 	db	101
   682  00A0F9  72                 	db	114
   683  00A0FA  20                 	db	32
   684  00A0FB  53                 	db	83
   685  00A0FC  79                 	db	121
   686  00A0FD  6E                 	db	110
   687  00A0FE  63                 	db	99
   688  00A0FF  68                 	db	104
   689  00A100  72                 	db	114
   690  00A101  6F                 	db	111
   691  00A102  6E                 	db	110
   692  00A103  6F                 	db	111
   693  00A104  75                 	db	117
   694  00A105  73                 	db	115
   695  00A106  00                 	db	0
   696  00A107                     __end_of__display_charger@F7271:
   697                           	opt stack 0
   698  00A107                     __display_usb@F7235:
   699                           	opt stack 0
   700  00A107  55                 	db	85
   701  00A108  53                 	db	83
   702  00A109  42                 	db	66
   703  00A10A  20                 	db	32
   704  00A10B  43                 	db	67
   705  00A10C  68                 	db	104
   706  00A10D  61                 	db	97
   707  00A10E  72                 	db	114
   708  00A10F  67                 	db	103
   709  00A110  65                 	db	101
   710  00A111  72                 	db	114
   711  00A112  20                 	db	32
   712  00A113  4F                 	db	79
   713  00A114  75                 	db	117
   714  00A115  74                 	db	116
   715  00A116  70                 	db	112
   716  00A117  75                 	db	117
   717  00A118  74                 	db	116
   718  00A119  73                 	db	115
   719  00A11A  00                 	db	0
   720  00A11B                     __end_of__display_usb@F7235:
   721                           	opt stack 0
   722  00A11B                     __display_time@F7222:
   723                           	opt stack 0
   724  00A11B  2D                 	db	45
   725  00A11C  3E                 	db	62
   726  00A11D  50                 	db	80
   727  00A11E  72                 	db	114
   728  00A11F  65                 	db	101
   729  00A120  73                 	db	115
   730  00A121  73                 	db	115
   731  00A122  20                 	db	32
   732  00A123  66                 	db	102
   733  00A124  6F                 	db	111
   734  00A125  72                 	db	114
   735  00A126  20                 	db	32
   736  00A127  73                 	db	115
   737  00A128  65                 	db	101
   738  00A129  63                 	db	99
   739  00A12A  6F                 	db	111
   740  00A12B  6E                 	db	110
   741  00A12C  64                 	db	100
   742  00A12D  73                 	db	115
   743  00A12E  00                 	db	0
   744  00A12F                     __end_of__display_time@F7222:
   745                           	opt stack 0
   746  00A12F                     __display_time@F7220:
   747                           	opt stack 0
   748  00A12F  2D                 	db	45
   749  00A130  3E                 	db	62
   750  00A131  50                 	db	80
   751  00A132  72                 	db	114
   752  00A133  65                 	db	101
   753  00A134  73                 	db	115
   754  00A135  73                 	db	115
   755  00A136  20                 	db	32
   756  00A137  66                 	db	102
   757  00A138  6F                 	db	111
   758  00A139  72                 	db	114
   759  00A13A  20                 	db	32
   760  00A13B  6D                 	db	109
   761  00A13C  69                 	db	105
   762  00A13D  6E                 	db	110
   763  00A13E  75                 	db	117
   764  00A13F  74                 	db	116
   765  00A140  65                 	db	101
   766  00A141  73                 	db	115
   767  00A142  00                 	db	0
   768  00A143                     __end_of__display_time@F7220:
   769                           	opt stack 0
   770  00A143                     __display_time@F7212:
   771                           	opt stack 0
   772  00A143  2D                 	db	45
   773  00A144  3E                 	db	62
   774  00A145  50                 	db	80
   775  00A146  72                 	db	114
   776  00A147  65                 	db	101
   777  00A148  73                 	db	115
   778  00A149  73                 	db	115
   779  00A14A  20                 	db	32
   780  00A14B  74                 	db	116
   781  00A14C  6F                 	db	111
   782  00A14D  20                 	db	32
   783  00A14E  73                 	db	115
   784  00A14F  65                 	db	101
   785  00A150  74                 	db	116
   786  00A151  20                 	db	32
   787  00A152  74                 	db	116
   788  00A153  69                 	db	105
   789  00A154  6D                 	db	109
   790  00A155  65                 	db	101
   791  00A156  00                 	db	0
   792  00A157                     __end_of__display_time@F7212:
   793                           	opt stack 0
   794  00A157                     __display_efficiency@F7278:
   795                           	opt stack 0
   796  00A157  50                 	db	80
   797  00A158  61                 	db	97
   798  00A159  6E                 	db	110
   799  00A15A  65                 	db	101
   800  00A15B  6C                 	db	108
   801  00A15C  3A                 	db	58
   802  00A15D  20                 	db	32
   803  00A15E  20                 	db	32
   804  00A15F  20                 	db	32
   805  00A160  20                 	db	32
   806  00A161  42                 	db	66
   807  00A162  61                 	db	97
   808  00A163  74                 	db	116
   809  00A164  74                 	db	116
   810  00A165  65                 	db	101
   811  00A166  72                 	db	114
   812  00A167  79                 	db	121
   813  00A168  3A                 	db	58
   814  00A169  00                 	db	0
   815  00A16A                     __end_of__display_efficiency@F7278:
   816                           	opt stack 0
   817  00A16A                     __display_efficiency@F7276:
   818                           	opt stack 0
   819  00A16A  43                 	db	67
   820  00A16B  68                 	db	104
   821  00A16C  61                 	db	97
   822  00A16D  72                 	db	114
   823  00A16E  67                 	db	103
   824  00A16F  65                 	db	101
   825  00A170  72                 	db	114
   826  00A171  20                 	db	32
   827  00A172  45                 	db	69
   828  00A173  66                 	db	102
   829  00A174  66                 	db	102
   830  00A175  69                 	db	105
   831  00A176  63                 	db	99
   832  00A177  69                 	db	105
   833  00A178  65                 	db	101
   834  00A179  6E                 	db	110
   835  00A17A  63                 	db	99
   836  00A17B  79                 	db	121
   837  00A17C  00                 	db	0
   838  00A17D                     __end_of__display_efficiency@F7276:
   839                           	opt stack 0
   840  00A17D                     __display_charger@F7259:
   841                           	opt stack 0
   842  00A17D  43                 	db	67
   843  00A17E  68                 	db	104
   844  00A17F  61                 	db	97
   845  00A180  72                 	db	114
   846  00A181  67                 	db	103
   847  00A182  65                 	db	101
   848  00A183  72                 	db	114
   849  00A184  20                 	db	32
   850  00A185  73                 	db	115
   851  00A186  75                 	db	117
   852  00A187  70                 	db	112
   853  00A188  70                 	db	112
   854  00A189  6C                 	db	108
   855  00A18A  79                 	db	121
   856  00A18B  20                 	db	32
   857  00A18C  6F                 	db	111
   858  00A18D  66                 	db	102
   859  00A18E  66                 	db	102
   860  00A18F  00                 	db	0
   861  00A190                     __end_of__display_charger@F7259:
   862                           	opt stack 0
   863  00A190                     __display_charger@F7257:
   864                           	opt stack 0
   865  00A190  43                 	db	67
   866  00A191  68                 	db	104
   867  00A192  61                 	db	97
   868  00A193  72                 	db	114
   869  00A194  67                 	db	103
   870  00A195  65                 	db	101
   871  00A196  72                 	db	114
   872  00A197  20                 	db	32
   873  00A198  73                 	db	115
   874  00A199  75                 	db	117
   875  00A19A  70                 	db	112
   876  00A19B  70                 	db	112
   877  00A19C  6C                 	db	108
   878  00A19D  79                 	db	121
   879  00A19E  20                 	db	32
   880  00A19F  6F                 	db	111
   881  00A1A0  6E                 	db	110
   882  00A1A1  00                 	db	0
   883  00A1A2                     __end_of__display_charger@F7257:
   884                           	opt stack 0
   885  00A1A2                     __display_time@F7218:
   886                           	opt stack 0
   887  00A1A2  2D                 	db	45
   888  00A1A3  3E                 	db	62
   889  00A1A4  50                 	db	80
   890  00A1A5  72                 	db	114
   891  00A1A6  65                 	db	101
   892  00A1A7  73                 	db	115
   893  00A1A8  73                 	db	115
   894  00A1A9  20                 	db	32
   895  00A1AA  66                 	db	102
   896  00A1AB  6F                 	db	111
   897  00A1AC  72                 	db	114
   898  00A1AD  20                 	db	32
   899  00A1AE  68                 	db	104
   900  00A1AF  6F                 	db	111
   901  00A1B0  75                 	db	117
   902  00A1B1  72                 	db	114
   903  00A1B2  73                 	db	115
   904  00A1B3  00                 	db	0
   905  00A1B4                     __end_of__display_time@F7218:
   906                           	opt stack 0
   907  00A1B4                     __display_time@F7214:
   908                           	opt stack 0
   909  00A1B4  2D                 	db	45
   910  00A1B5  3E                 	db	62
   911  00A1B6  50                 	db	80
   912  00A1B7  72                 	db	114
   913  00A1B8  65                 	db	101
   914  00A1B9  73                 	db	115
   915  00A1BA  73                 	db	115
   916  00A1BB  20                 	db	32
   917  00A1BC  66                 	db	102
   918  00A1BD  6F                 	db	111
   919  00A1BE  72                 	db	114
   920  00A1BF  20                 	db	32
   921  00A1C0  6D                 	db	109
   922  00A1C1  6F                 	db	111
   923  00A1C2  6E                 	db	110
   924  00A1C3  74                 	db	116
   925  00A1C4  68                 	db	104
   926  00A1C5  00                 	db	0
   927  00A1C6                     __end_of__display_time@F7214:
   928                           	opt stack 0
   929  00A1C6                     __display_inout@F7190:
   930                           	opt stack 0
   931  00A1C6  20                 	db	32
   932  00A1C7  20                 	db	32
   933  00A1C8  20                 	db	32
   934  00A1C9  49                 	db	73
   935  00A1CA  6E                 	db	110
   936  00A1CB  70                 	db	112
   937  00A1CC  75                 	db	117
   938  00A1CD  74                 	db	116
   939  00A1CE  20                 	db	32
   940  00A1CF  20                 	db	32
   941  00A1D0  20                 	db	32
   942  00A1D1  4F                 	db	79
   943  00A1D2  75                 	db	117
   944  00A1D3  74                 	db	116
   945  00A1D4  70                 	db	112
   946  00A1D5  75                 	db	117
   947  00A1D6  74                 	db	116
   948  00A1D7  00                 	db	0
   949  00A1D8                     __end_of__display_inout@F7190:
   950                           	opt stack 0
   951  00A1D8                     __display_inout@F7188:
   952                           	opt stack 0
   953  00A1D8  56                 	db	86
   954  00A1D9  6F                 	db	111
   955  00A1DA  6C                 	db	108
   956  00A1DB  74                 	db	116
   957  00A1DC  61                 	db	97
   958  00A1DD  67                 	db	103
   959  00A1DE  65                 	db	101
   960  00A1DF  20                 	db	32
   961  00A1E0  26                 	db	38
   962  00A1E1  20                 	db	32
   963  00A1E2  43                 	db	67
   964  00A1E3  75                 	db	117
   965  00A1E4  72                 	db	114
   966  00A1E5  72                 	db	114
   967  00A1E6  65                 	db	101
   968  00A1E7  6E                 	db	110
   969  00A1E8  74                 	db	116
   970  00A1E9  00                 	db	0
   971  00A1EA                     __end_of__display_inout@F7188:
   972                           	opt stack 0
   973  00A1EA                     __display_usb@F7241:
   974                           	opt stack 0
   975  00A1EA  55                 	db	85
   976  00A1EB  53                 	db	83
   977  00A1EC  42                 	db	66
   978  00A1ED  20                 	db	32
   979  00A1EE  63                 	db	99
   980  00A1EF  68                 	db	104
   981  00A1F0  61                 	db	97
   982  00A1F1  72                 	db	114
   983  00A1F2  67                 	db	103
   984  00A1F3  69                 	db	105
   985  00A1F4  6E                 	db	110
   986  00A1F5  67                 	db	103
   987  00A1F6  20                 	db	32
   988  00A1F7  6F                 	db	111
   989  00A1F8  66                 	db	102
   990  00A1F9  66                 	db	102
   991  00A1FA  00                 	db	0
   992  00A1FB                     __end_of__display_usb@F7241:
   993                           	opt stack 0
   994  00A1FB                     __display_charger@F7267:
   995                           	opt stack 0
   996  00A1FB  43                 	db	67
   997  00A1FC  68                 	db	104
   998  00A1FD  61                 	db	97
   999  00A1FE  72                 	db	114
  1000  00A1FF  67                 	db	103
  1001  00A200  65                 	db	101
  1002  00A201  72                 	db	114
  1003  00A202  20                 	db	32
  1004  00A203  53                 	db	83
  1005  00A204  74                 	db	116
  1006  00A205  61                 	db	97
  1007  00A206  72                 	db	114
  1008  00A207  74                 	db	116
  1009  00A208  75                 	db	117
  1010  00A209  70                 	db	112
  1011  00A20A  00                 	db	0
  1012  00A20B                     __end_of__display_charger@F7267:
  1013                           	opt stack 0
  1014  00A20B                     __display_outputs@F7247:
  1015                           	opt stack 0
  1016  00A20B  42                 	db	66
  1017  00A20C  61                 	db	97
  1018  00A20D  74                 	db	116
  1019  00A20E  74                 	db	116
  1020  00A20F  65                 	db	101
  1021  00A210  72                 	db	114
  1022  00A211  79                 	db	121
  1023  00A212  20                 	db	32
  1024  00A213  74                 	db	116
  1025  00A214  6F                 	db	111
  1026  00A215  6F                 	db	111
  1027  00A216  20                 	db	32
  1028  00A217  6C                 	db	108
  1029  00A218  6F                 	db	111
  1030  00A219  77                 	db	119
  1031  00A21A  00                 	db	0
  1032  00A21B                     __end_of__display_outputs@F7247:
  1033                           	opt stack 0
  1034  00A21B                     __display_usb@F7239:
  1035                           	opt stack 0
  1036  00A21B  55                 	db	85
  1037  00A21C  53                 	db	83
  1038  00A21D  42                 	db	66
  1039  00A21E  20                 	db	32
  1040  00A21F  63                 	db	99
  1041  00A220  68                 	db	104
  1042  00A221  61                 	db	97
  1043  00A222  72                 	db	114
  1044  00A223  67                 	db	103
  1045  00A224  69                 	db	105
  1046  00A225  6E                 	db	110
  1047  00A226  67                 	db	103
  1048  00A227  20                 	db	32
  1049  00A228  6F                 	db	111
  1050  00A229  6E                 	db	110
  1051  00A22A  00                 	db	0
  1052  00A22B                     __end_of__display_usb@F7239:
  1053                           	opt stack 0
  1054  00A22B                     __display_usb@F7237:
  1055                           	opt stack 0
  1056  00A22B  42                 	db	66
  1057  00A22C  61                 	db	97
  1058  00A22D  74                 	db	116
  1059  00A22E  74                 	db	116
  1060  00A22F  65                 	db	101
  1061  00A230  72                 	db	114
  1062  00A231  79                 	db	121
  1063  00A232  20                 	db	32
  1064  00A233  74                 	db	116
  1065  00A234  6F                 	db	111
  1066  00A235  6F                 	db	111
  1067  00A236  20                 	db	32
  1068  00A237  6C                 	db	108
  1069  00A238  6F                 	db	111
  1070  00A239  77                 	db	119
  1071  00A23A  00                 	db	0
  1072  00A23B                     __end_of__display_usb@F7237:
  1073                           	opt stack 0
  1074  00A23B                     __display_time@F7224:
  1075                           	opt stack 0
  1076  00A23B  2D                 	db	45
  1077  00A23C  3E                 	db	62
  1078  00A23D  50                 	db	80
  1079  00A23E  72                 	db	114
  1080  00A23F  65                 	db	101
  1081  00A240  73                 	db	115
  1082  00A241  73                 	db	115
  1083  00A242  20                 	db	32
  1084  00A243  74                 	db	116
  1085  00A244  6F                 	db	111
  1086  00A245  20                 	db	32
  1087  00A246  73                 	db	115
  1088  00A247  61                 	db	97
  1089  00A248  76                 	db	118
  1090  00A249  65                 	db	101
  1091  00A24A  00                 	db	0
  1092  00A24B                     __end_of__display_time@F7224:
  1093                           	opt stack 0
  1094  00A24B                     __display_time@F7216:
  1095                           	opt stack 0
  1096  00A24B  2D                 	db	45
  1097  00A24C  3E                 	db	62
  1098  00A24D  50                 	db	80
  1099  00A24E  72                 	db	114
  1100  00A24F  65                 	db	101
  1101  00A250  73                 	db	115
  1102  00A251  73                 	db	115
  1103  00A252  20                 	db	32
  1104  00A253  66                 	db	102
  1105  00A254  6F                 	db	111
  1106  00A255  72                 	db	114
  1107  00A256  20                 	db	32
  1108  00A257  64                 	db	100
  1109  00A258  61                 	db	97
  1110  00A259  79                 	db	121
  1111  00A25A  00                 	db	0
  1112  00A25B                     __end_of__display_time@F7216:
  1113                           	opt stack 0
  1114  00A25B                     __display_efficiency@F7280:
  1115                           	opt stack 0
  1116  00A25B  45                 	db	69
  1117  00A25C  3A                 	db	58
  1118  00A25D  20                 	db	32
  1119  00A25E  20                 	db	32
  1120  00A25F  20                 	db	32
  1121  00A260  20                 	db	32
  1122  00A261  20                 	db	32
  1123  00A262  20                 	db	32
  1124  00A263  20                 	db	32
  1125  00A264  20                 	db	32
  1126  00A265  20                 	db	32
  1127  00A266  4C                 	db	76
  1128  00A267  3A                 	db	58
  1129  00A268  00                 	db	0
  1130  00A269                     __end_of__display_efficiency@F7280:
  1131                           	opt stack 0
  1132  00A269                     __display_outputs@F7245:
  1133                           	opt stack 0
  1134  00A269  50                 	db	80
  1135  00A26A  6F                 	db	111
  1136  00A26B  77                 	db	119
  1137  00A26C  65                 	db	101
  1138  00A26D  72                 	db	114
  1139  00A26E  20                 	db	32
  1140  00A26F  4F                 	db	79
  1141  00A270  75                 	db	117
  1142  00A271  74                 	db	116
  1143  00A272  70                 	db	112
  1144  00A273  75                 	db	117
  1145  00A274  74                 	db	116
  1146  00A275  73                 	db	115
  1147  00A276  00                 	db	0
  1148  00A277                     __end_of__display_outputs@F7245:
  1149                           	opt stack 0
  1150  00A277                     __display_time@F7198:
  1151                           	opt stack 0
  1152  00A277  54                 	db	84
  1153  00A278  69                 	db	105
  1154  00A279  6D                 	db	109
  1155  00A27A  65                 	db	101
  1156  00A27B  20                 	db	32
  1157  00A27C  61                 	db	97
  1158  00A27D  6E                 	db	110
  1159  00A27E  64                 	db	100
  1160  00A27F  20                 	db	32
  1161  00A280  44                 	db	68
  1162  00A281  61                 	db	97
  1163  00A282  74                 	db	116
  1164  00A283  65                 	db	101
  1165  00A284  00                 	db	0
  1166  00A285                     __end_of__display_time@F7198:
  1167                           	opt stack 0
  1168  00A285                     __display_inout@F7194:
  1169                           	opt stack 0
  1170  00A285  41                 	db	65
  1171  00A286  3A                 	db	58
  1172  00A287  20                 	db	32
  1173  00A288  2D                 	db	45
  1174  00A289  2D                 	db	45
  1175  00A28A  20                 	db	32
  1176  00A28B  20                 	db	32
  1177  00A28C  20                 	db	32
  1178  00A28D  20                 	db	32
  1179  00A28E  20                 	db	32
  1180  00A28F  20                 	db	32
  1181  00A290  2D                 	db	45
  1182  00A291  2D                 	db	45
  1183  00A292  00                 	db	0
  1184  00A293                     __end_of__display_inout@F7194:
  1185                           	opt stack 0
  1186  00A293                     __display_temperature@F7302:
  1187                           	opt stack 0
  1188  00A293  45                 	db	69
  1189  00A294  78                 	db	120
  1190  00A295  74                 	db	116
  1191  00A296  65                 	db	101
  1192  00A297  72                 	db	114
  1193  00A298  6E                 	db	110
  1194  00A299  61                 	db	97
  1195  00A29A  6C                 	db	108
  1196  00A29B  20                 	db	32
  1197  00A29C  32                 	db	50
  1198  00A29D  3A                 	db	58
  1199  00A29E  00                 	db	0
  1200  00A29F                     __end_of__display_temperature@F7302:
  1201                           	opt stack 0
  1202  00A29F                     __display_temperature@F7300:
  1203                           	opt stack 0
  1204  00A29F  45                 	db	69
  1205  00A2A0  78                 	db	120
  1206  00A2A1  74                 	db	116
  1207  00A2A2  65                 	db	101
  1208  00A2A3  72                 	db	114
  1209  00A2A4  6E                 	db	110
  1210  00A2A5  61                 	db	97
  1211  00A2A6  6C                 	db	108
  1212  00A2A7  20                 	db	32
  1213  00A2A8  31                 	db	49
  1214  00A2A9  3A                 	db	58
  1215  00A2AA  00                 	db	0
  1216  00A2AB                     __end_of__display_temperature@F7300:
  1217                           	opt stack 0
  1218  00A2AB                     __display_charger@F7265:
  1219                           	opt stack 0
  1220  00A2AB  43                 	db	67
  1221  00A2AC  68                 	db	104
  1222  00A2AD  61                 	db	97
  1223  00A2AE  72                 	db	114
  1224  00A2AF  67                 	db	103
  1225  00A2B0  65                 	db	101
  1226  00A2B1  72                 	db	114
  1227  00A2B2  20                 	db	32
  1228  00A2B3  6F                 	db	111
  1229  00A2B4  66                 	db	102
  1230  00A2B5  66                 	db	102
  1231  00A2B6  00                 	db	0
  1232  00A2B7                     __end_of__display_charger@F7265:
  1233                           	opt stack 0
  1234  00A2B7                     __display_time@F7210:
  1235                           	opt stack 0
  1236  00A2B7  53                 	db	83
  1237  00A2B8  65                 	db	101
  1238  00A2B9  74                 	db	116
  1239  00A2BA  20                 	db	32
  1240  00A2BB  73                 	db	115
  1241  00A2BC  65                 	db	101
  1242  00A2BD  63                 	db	99
  1243  00A2BE  6F                 	db	111
  1244  00A2BF  6E                 	db	110
  1245  00A2C0  64                 	db	100
  1246  00A2C1  73                 	db	115
  1247  00A2C2  00                 	db	0
  1248  00A2C3                     __end_of__display_time@F7210:
  1249                           	opt stack 0
  1250  00A2C3                     __display_time@F7208:
  1251                           	opt stack 0
  1252  00A2C3  53                 	db	83
  1253  00A2C4  65                 	db	101
  1254  00A2C5  74                 	db	116
  1255  00A2C6  20                 	db	32
  1256  00A2C7  6D                 	db	109
  1257  00A2C8  69                 	db	105
  1258  00A2C9  6E                 	db	110
  1259  00A2CA  75                 	db	117
  1260  00A2CB  74                 	db	116
  1261  00A2CC  65                 	db	101
  1262  00A2CD  73                 	db	115
  1263  00A2CE  00                 	db	0
  1264  00A2CF                     __end_of__display_time@F7208:
  1265                           	opt stack 0
  1266  00A2CF                     __display_temperature@F7298:
  1267                           	opt stack 0
  1268  00A2CF  4F                 	db	79
  1269  00A2D0  6E                 	db	110
  1270  00A2D1  2D                 	db	45
  1271  00A2D2  62                 	db	98
  1272  00A2D3  6F                 	db	111
  1273  00A2D4  61                 	db	97
  1274  00A2D5  72                 	db	114
  1275  00A2D6  64                 	db	100
  1276  00A2D7  3A                 	db	58
  1277  00A2D8  20                 	db	32
  1278  00A2D9  00                 	db	0
  1279  00A2DA                     __end_of__display_temperature@F7298:
  1280                           	opt stack 0
  1281  00A2DA                     __display_time@F7206:
  1282                           	opt stack 0
  1283  00A2DA  53                 	db	83
  1284  00A2DB  65                 	db	101
  1285  00A2DC  74                 	db	116
  1286  00A2DD  20                 	db	32
  1287  00A2DE  68                 	db	104
  1288  00A2DF  6F                 	db	111
  1289  00A2E0  75                 	db	117
  1290  00A2E1  72                 	db	114
  1291  00A2E2  73                 	db	115
  1292  00A2E3  00                 	db	0
  1293  00A2E4                     __end_of__display_time@F7206:
  1294                           	opt stack 0
  1295  00A2E4                     __display_time@F7202:
  1296                           	opt stack 0
  1297  00A2E4  53                 	db	83
  1298  00A2E5  65                 	db	101
  1299  00A2E6  74                 	db	116
  1300  00A2E7  20                 	db	32
  1301  00A2E8  6D                 	db	109
  1302  00A2E9  6F                 	db	111
  1303  00A2EA  6E                 	db	110
  1304  00A2EB  74                 	db	116
  1305  00A2EC  68                 	db	104
  1306  00A2ED  00                 	db	0
  1307  00A2EE                     __end_of__display_time@F7202:
  1308                           	opt stack 0
  1309  00A2EE                     __display_time@F7200:
  1310                           	opt stack 0
  1311  00A2EE  53                 	db	83
  1312  00A2EF  65                 	db	101
  1313  00A2F0  74                 	db	116
  1314  00A2F1  20                 	db	32
  1315  00A2F2  79                 	db	121
  1316  00A2F3  65                 	db	101
  1317  00A2F4  61                 	db	97
  1318  00A2F5  72                 	db	114
  1319  00A2F6  00                 	db	0
  1320  00A2F7                     __end_of__display_time@F7200:
  1321                           	opt stack 0
  1322  00A2F7                     __display_charger@F7263:
  1323                           	opt stack 0
  1324  00A2F7  46                 	db	70
  1325  00A2F8  61                 	db	97
  1326  00A2F9  6E                 	db	110
  1327  00A2FA  20                 	db	32
  1328  00A2FB  6F                 	db	111
  1329  00A2FC  66                 	db	102
  1330  00A2FD  66                 	db	102
  1331  00A2FE  00                 	db	0
  1332  00A2FF                     __end_of__display_charger@F7263:
  1333                           	opt stack 0
  1334  00A2FF                     __display_time@F7204:
  1335                           	opt stack 0
  1336  00A2FF  53                 	db	83
  1337  00A300  65                 	db	101
  1338  00A301  74                 	db	116
  1339  00A302  20                 	db	32
  1340  00A303  64                 	db	100
  1341  00A304  61                 	db	97
  1342  00A305  79                 	db	121
  1343  00A306  00                 	db	0
  1344  00A307                     __end_of__display_time@F7204:
  1345                           	opt stack 0
  1346  00A307                     _USB_SD_Ptr:
  1347                           	opt stack 0
  1348  00A307  32                 	db	low _sd000
  1349  00A308  A4                 	db	high _sd000
  1350  00A309  5B                 	db	low _sd001
  1351  00A30A  A3                 	db	high _sd001
  1352  00A30B  8F                 	db	low _sd002
  1353  00A30C  A3                 	db	high _sd002
  1354  00A30D  FE                 	db	low _sd003
  1355  00A30E  A3                 	db	high _sd003
  1356  00A30F                     __end_of_USB_SD_Ptr:
  1357                           	opt stack 0
  1358  00A30F                     __display_charger@F7261:
  1359                           	opt stack 0
  1360  00A30F  46                 	db	70
  1361  00A310  61                 	db	97
  1362  00A311  6E                 	db	110
  1363  00A312  20                 	db	32
  1364  00A313  6F                 	db	111
  1365  00A314  6E                 	db	110
  1366  00A315  00                 	db	0
  1367  00A316                     __end_of__display_charger@F7261:
  1368                           	opt stack 0
  1369  00A316                     __display_inout@F7192:
  1370                           	opt stack 0
  1371  00A316  56                 	db	86
  1372  00A317  3A                 	db	58
  1373  00A318  00                 	db	0
  1374  00A319                     __end_of__display_inout@F7192:
  1375                           	opt stack 0
  1376  00A319                     _USB_CD_Ptr:
  1377                           	opt stack 0
  1378  00A319  1B                 	db	low _configDescriptor1
  1379  00A31A  A3                 	db	high _configDescriptor1
  1380  00A31B                     __end_of_USB_CD_Ptr:
  1381                           	opt stack 0
  1382  00A31B                     _configDescriptor1:
  1383                           	opt stack 0
  1384  00A31B  09                 	db	9
  1385  00A31C  02                 	db	2
  1386  00A31D  40                 	db	64
  1387  00A31E  00                 	db	0
  1388  00A31F  02                 	db	2
  1389  00A320  01                 	db	1
  1390  00A321  00                 	db	0
  1391  00A322  C0                 	db	192
  1392  00A323  32                 	db	50
  1393  00A324  09                 	db	9
  1394  00A325  04                 	db	4
  1395  00A326  00                 	db	0
  1396  00A327  00                 	db	0
  1397  00A328  02                 	db	2
  1398  00A329  03                 	db	3
  1399  00A32A  00                 	db	0
  1400  00A32B  00                 	db	0
  1401  00A32C  00                 	db	0
  1402  00A32D  09                 	db	9
  1403  00A32E  21                 	db	33
  1404  00A32F  11                 	db	17
  1405  00A330  01                 	db	1
  1406  00A331  00                 	db	0
  1407  00A332  01                 	db	1
  1408  00A333  22                 	db	34
  1409  00A334  1D                 	db	29
  1410  00A335  00                 	db	0
  1411  00A336  07                 	db	7
  1412  00A337  05                 	db	5
  1413  00A338  81                 	db	129
  1414  00A339  03                 	db	3
  1415  00A33A  40                 	db	64
  1416  00A33B  00                 	db	0
  1417  00A33C  01                 	db	1
  1418  00A33D  07                 	db	7
  1419  00A33E  05                 	db	5
  1420  00A33F  01                 	db	1
  1421  00A340  03                 	db	3
  1422  00A341  40                 	db	64
  1423  00A342  00                 	db	0
  1424  00A343  01                 	db	1
  1425  00A344  09                 	db	9
  1426  00A345  04                 	db	4
  1427  00A346  01                 	db	1
  1428  00A347  00                 	db	0
  1429  00A348  02                 	db	2
  1430  00A349  08                 	db	8
  1431  00A34A  06                 	db	6
  1432  00A34B  50                 	db	80
  1433  00A34C  00                 	db	0
  1434  00A34D  07                 	db	7
  1435  00A34E  05                 	db	5
  1436  00A34F  82                 	db	130
  1437  00A350  02                 	db	2
  1438  00A351  40                 	db	64
  1439  00A352  00                 	db	0
  1440  00A353  01                 	db	1
  1441  00A354  07                 	db	7
  1442  00A355  05                 	db	5
  1443  00A356  02                 	db	2
  1444  00A357  02                 	db	2
  1445  00A358  40                 	db	64
  1446  00A359  00                 	db	0
  1447  00A35A  01                 	db	1
  1448  00A35B                     __end_of_configDescriptor1:
  1449                           	opt stack 0
  1450  00A35B                     _sd001:
  1451                           	opt stack 0
  1452  00A35B  34                 	db	52
  1453  00A35C  03                 	db	3
  1454  00A35D  0053               	dw	83
  1455  00A35F  006F               	dw	111
  1456  00A361  006C               	dw	108
  1457  00A363  0064               	dw	100
  1458  00A365  0065               	dw	101
  1459  00A367  0072               	dw	114
  1460  00A369  006E               	dw	110
  1461  00A36B  0065               	dw	101
  1462  00A36D  0072               	dw	114
  1463  00A36F  0064               	dw	100
  1464  00A371  002E               	dw	46
  1465  00A373  0063               	dw	99
  1466  00A375  006F               	dw	111
  1467  00A377  006D               	dw	109
  1468  00A379  0020               	dw	32
  1469  00A37B  0020               	dw	32
  1470  00A37D  0020               	dw	32
  1471  00A37F  0020               	dw	32
  1472  00A381  0020               	dw	32
  1473  00A383  0020               	dw	32
  1474  00A385  0020               	dw	32
  1475  00A387  0020               	dw	32
  1476  00A389  0020               	dw	32
  1477  00A38B  0020               	dw	32
  1478  00A38D  0020               	dw	32
  1479  00A38F                     __end_of_sd001:
  1480                           	opt stack 0
  1481  00A38F                     _sd002:
  1482                           	opt stack 0
  1483  00A38F  2E                 	db	46
  1484  00A390  03                 	db	3
  1485  00A391  004D               	dw	77
  1486  00A393  0050               	dw	80
  1487  00A395  0050               	dw	80
  1488  00A397  0054               	dw	84
  1489  00A399  0053               	dw	83
  1490  00A39B  006F               	dw	111
  1491  00A39D  006C               	dw	108
  1492  00A39F  0061               	dw	97
  1493  00A3A1  0072               	dw	114
  1494  00A3A3  0020               	dw	32
  1495  00A3A5  0043               	dw	67
  1496  00A3A7  0068               	dw	104
  1497  00A3A9  0061               	dw	97
  1498  00A3AB  0072               	dw	114
  1499  00A3AD  0067               	dw	103
  1500  00A3AF  0065               	dw	101
  1501  00A3B1  0072               	dw	114
  1502  00A3B3  0020               	dw	32
  1503  00A3B5  0052               	dw	82
  1504  00A3B7  0065               	dw	101
  1505  00A3B9  0076               	dw	118
  1506  00A3BB  0045               	dw	69
  1507  00A3BD                     __end_of_sd002:
  1508                           	opt stack 0
  1509  00A3BD                     _inq_resp:
  1510                           	opt stack 0
  1511  00A3BD  00                 	db	0
  1512  00A3BE  80                 	db	128
  1513  00A3BF  04                 	db	4
  1514  00A3C0  02                 	db	2
  1515  00A3C1  20                 	db	32
  1516  00A3C2  00                 	db	0
  1517  00A3C3  00                 	db	0
  1518  00A3C4  00                 	db	0
  1519  00A3C5  4D                 	db	77
  1520  00A3C6  69                 	db	105
  1521  00A3C7  63                 	db	99
  1522  00A3C8  72                 	db	114
  1523  00A3C9  6F                 	db	111
  1524  00A3CA  63                 	db	99
  1525  00A3CB  68                 	db	104
  1526  00A3CC  70                 	db	112
  1527  00A3CD  4D                 	db	77
  1528  00A3CE  61                 	db	97
  1529  00A3CF  73                 	db	115
  1530  00A3D0  73                 	db	115
  1531  00A3D1  20                 	db	32
  1532  00A3D2  53                 	db	83
  1533  00A3D3  74                 	db	116
  1534  00A3D4  6F                 	db	111
  1535  00A3D5  72                 	db	114
  1536  00A3D6  61                 	db	97
  1537  00A3D7  67                 	db	103
  1538  00A3D8  65                 	db	101
  1539  00A3D9  20                 	db	32
  1540  00A3DA  20                 	db	32
  1541  00A3DB  20                 	db	32
  1542  00A3DC  20                 	db	32
  1543  00A3DD  30                 	db	48
  1544  00A3DE  30                 	db	48
  1545  00A3DF  30                 	db	48
  1546  00A3E0  31                 	db	49
  1547  00A3E1                     __end_of_inq_resp:
  1548                           	opt stack 0
  1549  00A3E1                     _hid_rpt01:
  1550                           	opt stack 0
  1551  00A3E1  06                 	db	6
  1552  00A3E2  00                 	db	0
  1553  00A3E3  FF                 	db	255
  1554  00A3E4  09                 	db	9
  1555  00A3E5  01                 	db	1
  1556  00A3E6  A1                 	db	161
  1557  00A3E7  01                 	db	1
  1558  00A3E8  19                 	db	25
  1559  00A3E9  01                 	db	1
  1560  00A3EA  29                 	db	41
  1561  00A3EB  40                 	db	64
  1562  00A3EC  15                 	db	21
  1563  00A3ED  00                 	db	0
  1564  00A3EE  26                 	db	38
  1565  00A3EF  FF                 	db	255
  1566  00A3F0  00                 	db	0
  1567  00A3F1  75                 	db	117
  1568  00A3F2  08                 	db	8
  1569  00A3F3  95                 	db	149
  1570  00A3F4  40                 	db	64
  1571  00A3F5  81                 	db	129
  1572  00A3F6  00                 	db	0
  1573  00A3F7  19                 	db	25
  1574  00A3F8  01                 	db	1
  1575  00A3F9  29                 	db	41
  1576  00A3FA  40                 	db	64
  1577  00A3FB  91                 	db	145
  1578  00A3FC  00                 	db	0
  1579  00A3FD  C0                 	db	192
  1580  00A3FE                     __end_of_hid_rpt01:
  1581                           	opt stack 0
  1582  00A3FE                     _sd003:
  1583                           	opt stack 0
  1584  00A3FE  1A                 	db	26
  1585  00A3FF  03                 	db	3
  1586  00A400  0031               	dw	49
  1587  00A402  0032               	dw	50
  1588  00A404  0033               	dw	51
  1589  00A406  0034               	dw	52
  1590  00A408  0035               	dw	53
  1591  00A40A  0036               	dw	54
  1592  00A40C  0037               	dw	55
  1593  00A40E  0038               	dw	56
  1594  00A410  0039               	dw	57
  1595  00A412  0030               	dw	48
  1596  00A414  0039               	dw	57
  1597  00A416  0039               	dw	57
  1598  00A418                     __end_of_sd003:
  1599                           	opt stack 0
  1600  00A418                     _device_dsc:
  1601                           	opt stack 0
  1602  00A418  12                 	db	18
  1603  00A419  01                 	db	1
  1604  00A41A  0200               	dw	512
  1605  00A41C  00                 	db	0
  1606  00A41D  00                 	db	0
  1607  00A41E  00                 	db	0
  1608  00A41F  08                 	db	8
  1609  00A420  04D8               	dw	1240
  1610  00A422  F08E               	dw	61582
  1611  00A424  0100               	dw	256
  1612  00A426  01                 	db	1
  1613  00A427  02                 	db	2
  1614  00A428  00                 	db	0
  1615  00A429  01                 	db	1
  1616  00A42A                     __end_of_device_dsc:
  1617                           	opt stack 0
  1618  00A42A                     _flash_command_pagesize_528:
  1619                           	opt stack 0
  1620  00A42A  3D                 	db	61
  1621  00A42B  2A                 	db	42
  1622  00A42C  80                 	db	128
  1623  00A42D  A7                 	db	167
  1624  00A42E                     __end_of_flash_command_pagesize_528:
  1625                           	opt stack 0
  1626  00A42E                     _flash_command_pagesize_512:
  1627                           	opt stack 0
  1628  00A42E  3D                 	db	61
  1629  00A42F  2A                 	db	42
  1630  00A430  80                 	db	128
  1631  00A431  A6                 	db	166
  1632  00A432                     __end_of_flash_command_pagesize_512:
  1633                           	opt stack 0
  1634  00A432                     _sd000:
  1635                           	opt stack 0
  1636  00A432  04                 	db	4
  1637  00A433  03                 	db	3
  1638  00A434  0409               	dw	1033
  1639  00A436                     __end_of_sd000:
  1640                           	opt stack 0
  1641  0000                     _RPINR22	set	3837
  1642  0000                     _RPOR22	set	3798
  1643  0000                     _RPOR21	set	3797
  1644  0000                     _RPINR21	set	3836
  1645  0000                     _RPOR5	set	3781
  1646  0000                     _RPOR6	set	3782
  1647  0000                     _RPINR2	set	3810
  1648  0000                     _RPINR3	set	3811
  1649  0000                     _RPINR1	set	3809
  1650  0000                     _PPSCONbits	set	3775
  1651  0000                     _CCPTMRS0bits	set	3922
  1652  0000                     _RTCVALH	set	3899
  1653  0000                     _RTCVALL	set	3898
  1654  0000                     _RTCCAL	set	3902
  1655  0000                     _RTCCFGbits	set	3903
  1656  0000                     _ANCON1bits	set	3913
  1657  0000                     _ANCON0bits	set	3912
  1658  0000                     _UEP0bits	set	3878
  1659  0000                     _UIEbits	set	3894
  1660  0000                     _UADDR	set	3896
  1661  0000                     _UIE	set	3894
  1662  0000                     _UEIE	set	3895
  1663  0000                     _UCFG	set	3897
  1664  0000                     _UEP1	set	3879
  1665  0000                     _UEP0	set	3878
  1666  0000                     _SSP2CON1bits	set	3954
  1667  0000                     _SSP2STATbits	set	3955
  1668  0000                     _RXADDRL	set	3945
  1669  0000                     _RXADDRH	set	3944
  1670  0000                     _DMABCL	set	3943
  1671  0000                     _DMABCH	set	3942
  1672  0000                     _TXADDRL	set	3947
  1673  0000                     _TXADDRH	set	3946
  1674  0000                     _DMACON2bits	set	3974
  1675  0000                     _DMACON1bits	set	3976
  1676  0000                     _ADRESL	set	4035
  1677  0000                     _ADRESH	set	4036
  1678  0000                     _ADCON1bits	set	4033
  1679  0000                     _ADCON0bits	set	4034
  1680  0000                     _CCP1CON	set	4026
  1681  0000                     _TMR2	set	4044
  1682  0000                     _PR2	set	4043
  1683  0000                     _CCPR1L	set	4027
  1684  0000                     _CCP1CONbits	set	4026
  1685  0000                     _T2CONbits	set	4042
  1686  0000                     _SSP1BUF	set	4041
  1687  0000                     _SSP1CON2bits	set	4037
  1688  0000                     _SSP1CON1bits	set	4038
  1689  0000                     _SSP1ADD	set	4040
  1690  0000                     _SSP1STATbits	set	4039
  1691  0000                     _T1CONbits	set	4045
  1692  0000                     _TMR1L	set	4046
  1693  0000                     _TMR1H	set	4047
  1694  0000                     _PIR1bits	set	3998
  1695  0000                     _LATAbits	set	3977
  1696  0000                     _TRISEbits	set	3990
  1697  0000                     _LATEbits	set	3981
  1698  0000                     _LATCbits	set	3979
  1699  0000                     _TRISAbits	set	3986
  1700  0000                     _TRISBbits	set	3987
  1701  0000                     _LATBbits	set	3978
  1702  0000                     _TRISDbits	set	3989
  1703  0000                     _TRISCbits	set	3988
  1704  0000                     _T0CONbits	set	4053
  1705  0000                     _INTCON2bits	set	4081
  1706  0000                     _EECON2	set	4007
  1707  0000                     _PORTBbits	set	3969
  1708  0000                     _INTCON3bits	set	4080
  1709  0000                     _TMR0L	set	4054
  1710  0000                     _TMR0H	set	4055
  1711  0000                     _PORTAbits	set	3968
  1712  0000                     _OSCCON	set	4051
  1713  0000                     _OSCTUNEbits	set	3995
  1714  0000                     _LATDbits	set	3980
  1715  0000                     _INTCONbits	set	4082
  1716  0000                     _IPR2bits	set	4002
  1717  0000                     _RCONbits	set	4048
  1718  0000                     _UCON	set	3941
  1719  0000                     _USTAT	set	3940
  1720  0000                     _PIR2bits	set	4001
  1721  0000                     _UIRbits	set	3938
  1722  0000                     _UCONbits	set	3941
  1723  0000                     _UIR	set	3938
  1724  0000                     _UEIR	set	3939
  1725  0000                     _PIE2bits	set	4000
  1726  00A436                     
  1727                           ; BSR set to: 1
  1728  00A436  48                 	db	72	;'H'
  1729  00A437  45                 	db	69	;'E'
  1730  00A438  4C                 	db	76	;'L'
  1731  00A439  4C                 	db	76	;'L'
  1732  00A43A  4F                 	db	79	;'O'
  1733  00A43B  20                 	db	32
  1734  00A43C  57                 	db	87	;'W'
  1735  00A43D  4F                 	db	79	;'O'
  1736  00A43E  52                 	db	82	;'R'
  1737  00A43F  4C                 	db	76	;'L'
  1738  00A440  44                 	db	68	;'D'
  1739  00A441  21                 	db	33
  1740  00A442  00                 	db	0
  1741  00A443                     
  1742                           ; BSR set to: 1
  1743  00A443  53                 	db	83	;'S'
  1744  00A444  6F                 	db	111	;'o'
  1745  00A445  6C                 	db	108	;'l'
  1746  00A446  61                 	db	97	;'a'
  1747  00A447  72                 	db	114	;'r'
  1748  00A448  43                 	db	67	;'C'
  1749  00A449  68                 	db	104	;'h'
  1750  00A44A  61                 	db	97	;'a'
  1751  00A44B  72                 	db	114	;'r'
  1752  00A44C  67                 	db	103	;'g'
  1753  00A44D  72                 	db	114	;'r'
  1754  00A44E  00                 	db	0
  1755  00A44F                     
  1756                           ; BSR set to: 1
  1757  00A44F  46                 	db	70	;'F'
  1758  00A450  49                 	db	73	;'I'
  1759  00A451  4C                 	db	76	;'L'
  1760  00A452  45                 	db	69	;'E'
  1761  00A453  20                 	db	32
  1762  00A454  20                 	db	32
  1763  00A455  20                 	db	32
  1764  00A456  20                 	db	32
  1765  00A457  00                 	db	0
  1766  00A458                     STR_1:
  1767                           
  1768                           ; BSR set to: 1
  1769  00A458  4D                 	db	77	;'M'
  1770  00A459  53                 	db	83	;'S'
  1771  00A45A  44                 	db	68	;'D'
  1772  00A45B  4F                 	db	79	;'O'
  1773  00A45C  53                 	db	83	;'S'
  1774  00A45D  35                 	db	53	;'5'
  1775  00A45E  2E                 	db	46
  1776  00A45F  30                 	db	48	;'0'
  1777  00A460  00                 	db	0
  1778  00A461                     
  1779                           ; BSR set to: 1
  1780  00A461  54                 	db	84	;'T'
  1781  00A462  58                 	db	88	;'X'
  1782  00A463  54                 	db	84	;'T'
  1783  00A464  00                 	db	0
  1784  0000                     
  1785                           ; #config settings
  1786  00A465  00                 	db	0	; dummy byte at the end
  1787  0000                     
  1788                           	psect	cinit
  1789  010B1A                     __pcinit:
  1790                           	opt stack 0
  1791  010B1A                     start_initialization:
  1792                           	opt stack 0
  1793  010B1A                     __initialization:
  1794                           	opt stack 0
  1795                           
  1796                           ; Initialize objects allocated to BANK4 (104 bytes)
  1797                           ; load TBLPTR registers with __pidataBANK4
  1798  010B1A  0E84               	movlw	low __pidataBANK4
  1799  010B1C  6EF6               	movwf	tblptrl,c
  1800  010B1E  0E23               	movlw	high __pidataBANK4
  1801  010B20  6EF7               	movwf	tblptrh,c
  1802  010B22  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1803  010B24  6EF8               	movwf	tblptru,c
  1804  010B26  EE04  F000         	lfsr	0,__pdataBANK4
  1805  010B2A  EE10 F068          	lfsr	1,104
  1806  010B2E                     copy_data0:
  1807  010B2E  0009               	tblrd		*+
  1808  010B30  CFF5 FFEE          	movff	tablat,postinc0
  1809  010B34  50E5               	movf	postdec1,w,c
  1810  010B36  50E1               	movf	fsr1l,w,c
  1811  010B38  E1FA               	bnz	copy_data0
  1812                           
  1813                           ; Initialize objects allocated to BANK3 (27 bytes)
  1814                           ; load TBLPTR registers with __pidataBANK3
  1815  010B3A  0EAC               	movlw	low __pidataBANK3
  1816  010B3C  6EF6               	movwf	tblptrl,c
  1817  010B3E  0E3B               	movlw	high __pidataBANK3
  1818  010B40  6EF7               	movwf	tblptrh,c
  1819  010B42  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1820  010B44  6EF8               	movwf	tblptru,c
  1821  010B46  EE03  F0E4         	lfsr	0,__pdataBANK3
  1822  010B4A  EE10 F01B          	lfsr	1,27
  1823  010B4E                     copy_data1:
  1824  010B4E  0009               	tblrd		*+
  1825  010B50  CFF5 FFEE          	movff	tablat,postinc0
  1826  010B54  50E5               	movf	postdec1,w,c
  1827  010B56  50E1               	movf	fsr1l,w,c
  1828  010B58  E1FA               	bnz	copy_data1
  1829                           
  1830                           ; Initialize objects allocated to BANK2 (61 bytes)
  1831                           ; load TBLPTR registers with __pidataBANK2
  1832  010B5A  0E4E               	movlw	low __pidataBANK2
  1833  010B5C  6EF6               	movwf	tblptrl,c
  1834  010B5E  0E33               	movlw	high __pidataBANK2
  1835  010B60  6EF7               	movwf	tblptrh,c
  1836  010B62  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1837  010B64  6EF8               	movwf	tblptru,c
  1838  010B66  EE02  F0BB         	lfsr	0,__pdataBANK2
  1839  010B6A  EE10 F03D          	lfsr	1,61
  1840  010B6E                     copy_data2:
  1841  010B6E  0009               	tblrd		*+
  1842  010B70  CFF5 FFEE          	movff	tablat,postinc0
  1843  010B74  50E5               	movf	postdec1,w,c
  1844  010B76  50E1               	movf	fsr1l,w,c
  1845  010B78  E1FA               	bnz	copy_data2
  1846                           
  1847                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1848  010B7A  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1849  010B7E  EE12 F000          	lfsr	1,512
  1850  010B82                     clear_0:
  1851  010B82  6AEE               	clrf	postinc0,c
  1852  010B84  50E5               	movf	postdec1,w,c
  1853  010B86  50E1               	movf	fsr1l,w,c
  1854  010B88  E1FC               	bnz	clear_0
  1855  010B8A  50E2               	movf	fsr1h,w,c
  1856  010B8C  E1FA               	bnz	clear_0
  1857                           
  1858                           ; Clear objects allocated to BANK4 (80 bytes)
  1859  010B8E  EE04  F068         	lfsr	0,__pbssBANK4
  1860  010B92  0E50               	movlw	80
  1861  010B94                     clear_1:
  1862  010B94  6AEE               	clrf	postinc0,c
  1863  010B96  06E8               	decf	wreg,f,c
  1864  010B98  E1FD               	bnz	clear_1
  1865                           
  1866                           ; Clear objects allocated to BANK3 (228 bytes)
  1867  010B9A  EE03  F000         	lfsr	0,__pbssBANK3
  1868  010B9E  0EE4               	movlw	228
  1869  010BA0                     clear_2:
  1870  010BA0  6AEE               	clrf	postinc0,c
  1871  010BA2  06E8               	decf	wreg,f,c
  1872  010BA4  E1FD               	bnz	clear_2
  1873                           
  1874                           ; Clear objects allocated to BANK2 (187 bytes)
  1875  010BA6  EE02  F000         	lfsr	0,__pbssBANK2
  1876  010BAA  0EBB               	movlw	187
  1877  010BAC                     clear_3:
  1878  010BAC  6AEE               	clrf	postinc0,c
  1879  010BAE  06E8               	decf	wreg,f,c
  1880  010BB0  E1FD               	bnz	clear_3
  1881                           
  1882                           ; Clear objects allocated to BANK1 (45 bytes)
  1883  010BB2  EE01  F0D3         	lfsr	0,__pbssBANK1
  1884  010BB6  0E2D               	movlw	45
  1885  010BB8                     clear_4:
  1886  010BB8  6AEE               	clrf	postinc0,c
  1887  010BBA  06E8               	decf	wreg,f,c
  1888  010BBC  E1FD               	bnz	clear_4
  1889                           
  1890                           ; Clear objects allocated to BANK0 (17 bytes)
  1891  010BBE  EE00  F0D7         	lfsr	0,__pbssBANK0
  1892  010BC2  0E11               	movlw	17
  1893  010BC4                     clear_5:
  1894  010BC4  6AEE               	clrf	postinc0,c
  1895  010BC6  06E8               	decf	wreg,f,c
  1896  010BC8  E1FD               	bnz	clear_5
  1897                           
  1898                           ; Clear objects allocated to COMRAM (45 bytes)
  1899  010BCA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1900  010BCE  0E2D               	movlw	45
  1901  010BD0                     clear_6:
  1902  010BD0  6AEE               	clrf	postinc0,c
  1903  010BD2  06E8               	decf	wreg,f,c
  1904  010BD4  E1FD               	bnz	clear_6
  1905  010BD6                     end_of_initialization:
  1906                           	opt stack 0
  1907  010BD6                     __end_of__initialization:
  1908                           	opt stack 0
  1909  010BD6  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1910  010BD8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1911  010BDA  0100               	movlb	0
  1912  010BDC  EF34  F062         	goto	_main	;jump to C main() function
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1h	equ	0xFE2
  1921                           fsr1l	equ	0xFE1
  1922                           
  1923                           	psect	bssCOMRAM
  1924  000001                     __pbssCOMRAM:
  1925                           	opt stack 0
  1926  000001                     _outPipes:
  1927                           	opt stack 0
  1928  000001                     	ds	9
  1929  00000A                     _inPipes:
  1930                           	opt stack 0
  1931  00000A                     	ds	6
  1932  000010                     _pBDTEntryIn:
  1933                           	opt stack 0
  1934  000010                     	ds	6
  1935  000016                     _averageCount:
  1936                           	opt stack 0
  1937  000016                     	ds	2
  1938  000018                     _pBDTEntryEP0OutNext:
  1939                           	opt stack 0
  1940  000018                     	ds	2
  1941  00001A                     _pBDTEntryEP0OutCurrent:
  1942                           	opt stack 0
  1943  00001A                     	ds	2
  1944  00001C                     _buck_status:
  1945                           	opt stack 0
  1946  00001C                     	ds	1
  1947  00001D                     _task_list_write_index:
  1948                           	opt stack 0
  1949  00001D                     	ds	1
  1950  00001E                     _task_list_read_index:
  1951                           	opt stack 0
  1952  00001E                     	ds	1
  1953  00001F                     _MSDWriteState:
  1954                           	opt stack 0
  1955  00001F                     	ds	1
  1956  000020                     _USBDeferINDataStagePackets:
  1957                           	opt stack 0
  1958  000020                     	ds	1
  1959  000021                     _USBStatusStageEnabledFlag2:
  1960                           	opt stack 0
  1961  000021                     	ds	1
  1962  000022                     _USBStatusStageEnabledFlag1:
  1963                           	opt stack 0
  1964  000022                     	ds	1
  1965  000023                     _USBDeferStatusStagePacket:
  1966                           	opt stack 0
  1967  000023                     	ds	1
  1968  000024                     _USBStatusStageTimeoutCounter:
  1969                           	opt stack 0
  1970  000024                     	ds	1
  1971  000025                     _BothEP0OutUOWNsSet:
  1972                           	opt stack 0
  1973  000025                     	ds	1
  1974  000026                     _endpoint_number:
  1975                           	opt stack 0
  1976  000026                     	ds	1
  1977  000027                     _USBBusIsSuspended:
  1978                           	opt stack 0
  1979  000027                     	ds	1
  1980  000028                     _RemoteWakeup:
  1981                           	opt stack 0
  1982  000028                     	ds	1
  1983  000029                     _controlTransferState:
  1984                           	opt stack 0
  1985  000029                     	ds	1
  1986  00002A                     _shortPacketStatus:
  1987                           	opt stack 0
  1988  00002A                     	ds	1
  1989  00002B                     _USBDeviceState:
  1990                           	opt stack 0
  1991  00002B                     	ds	1
  1992  00002C                     _USTATcopy:
  1993                           	opt stack 0
  1994  00002C                     	ds	1
  1995  00002D                     _USBActiveConfiguration:
  1996                           	opt stack 0
  1997  00002D                     	ds	1
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           
  2008                           	psect	bssBANK0
  2009  0000D7                     __pbssBANK0:
  2010                           	opt stack 0
  2011  0000D7                     _USBInHandle:
  2012                           	opt stack 0
  2013  0000D7                     	ds	2
  2014  0000D9                     _TransferLength:
  2015                           	opt stack 0
  2016  0000D9                     	ds	2
  2017  0000DB                     _USBMSDInHandle:
  2018                           	opt stack 0
  2019  0000DB                     	ds	2
  2020  0000DD                     _USBMSDOutHandle:
  2021                           	opt stack 0
  2022  0000DD                     	ds	2
  2023  0000DF                     _power_state:
  2024                           	opt stack 0
  2025  0000DF                     	ds	1
  2026  0000E0                     _idx:
  2027                           	opt stack 0
  2028  0000E0                     	ds	1
  2029  0000E1                     _buck_remote_dutycycle:
  2030                           	opt stack 0
  2031  0000E1                     	ds	1
  2032  0000E2                     _buck_remote_synchronous:
  2033                           	opt stack 0
  2034  0000E2                     	ds	1
  2035  0000E3                     _buck_remote_on:
  2036                           	opt stack 0
  2037  0000E3                     	ds	1
  2038  0000E4                     _buck_dutycycle:
  2039                           	opt stack 0
  2040  0000E4                     	ds	1
  2041  0000E5                     _MSDHostNoData:
  2042                           	opt stack 0
  2043  0000E5                     	ds	1
  2044  0000E6                     _MSDCommandState:
  2045                           	opt stack 0
  2046  0000E6                     	ds	1
  2047  0000E7                     _MSD_State:
  2048                           	opt stack 0
  2049  0000E7                     	ds	1
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           postinc0	equ	0xFEE
  2055                           wreg	equ	0xFE8
  2056                           postdec1	equ	0xFE5
  2057                           fsr1h	equ	0xFE2
  2058                           fsr1l	equ	0xFE1
  2059                           
  2060                           	psect	bssBANK1
  2061  0001D3                     __pbssBANK1:
  2062                           	opt stack 0
  2063  0001D3                     _pBDTEntryOut:
  2064                           	opt stack 0
  2065  0001D3                     	ds	6
  2066  0001D9                     _LBA:
  2067                           	opt stack 0
  2068  0001D9                     	ds	4
  2069  0001DD                     _USB1msTickCount:
  2070                           	opt stack 0
  2071  0001DD                     	ds	4
  2072  0001E1                     _ep_data_out:
  2073                           	opt stack 0
  2074  0001E1                     	ds	3
  2075  0001E4                     _ep_data_in:
  2076                           	opt stack 0
  2077  0001E4                     	ds	3
  2078  0001E7                     _system_ui_inactive_count:
  2079                           	opt stack 0
  2080  0001E7                     	ds	2
  2081  0001E9                     _USBOutHandle:
  2082                           	opt stack 0
  2083  0001E9                     	ds	2
  2084  0001EB                     _ptrNextData:
  2085                           	opt stack 0
  2086  0001EB                     	ds	2
  2087  0001ED                     _pDst:
  2088                           	opt stack 0
  2089  0001ED                     	ds	2
  2090  0001EF                     _lastSecond:
  2091                           	opt stack 0
  2092  0001EF                     	ds	1
  2093  0001F0                     _status:
  2094                           	opt stack 0
  2095  0001F0                     	ds	1
  2096  0001F1                     _buck_remote_enable:
  2097                           	opt stack 0
  2098  0001F1                     	ds	1
  2099  0001F2                     _buck_dutycycle_last_step:
  2100                           	opt stack 0
  2101  0001F2                     	ds	1
  2102  0001F3                     _userInterfaceStatus:
  2103                           	opt stack 0
  2104  0001F3                     	ds	1
  2105  0001F4                     _i2c_frequency:
  2106                           	opt stack 0
  2107  0001F4                     	ds	1
  2108  0001F5                     _MSDCBWValid:
  2109                           	opt stack 0
  2110  0001F5                     	ds	1
  2111  0001F6                     _SoftDetach:
  2112                           	opt stack 0
  2113  0001F6                     	ds	1
  2114  0001F7                     _gblCBWLength:
  2115                           	opt stack 0
  2116  0001F7                     	ds	1
  2117  0001F8                     _MSDRetryAttempt:
  2118                           	opt stack 0
  2119  0001F8                     	ds	1
  2120  0001F9                     _MSDReadState:
  2121                           	opt stack 0
  2122  0001F9                     	ds	1
  2123  0001FA                     _USBTicksSinceSuspendEnd:
  2124                           	opt stack 0
  2125  0001FA                     	ds	1
  2126  0001FB                     _USBDeferOUTDataStagePackets:
  2127                           	opt stack 0
  2128  0001FB                     	ds	1
  2129  0001FC                     _USBAlternateInterface:
  2130                           	opt stack 0
  2131  0001FC                     	ds	2
  2132  0001FE                     _active_protocol:
  2133                           	opt stack 0
  2134  0001FE                     	ds	1
  2135  0001FF                     _idle_rate:
  2136                           	opt stack 0
  2137  0001FF                     	ds	1
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           postinc0	equ	0xFEE
  2143                           wreg	equ	0xFE8
  2144                           postdec1	equ	0xFE5
  2145                           fsr1h	equ	0xFE2
  2146                           fsr1l	equ	0xFE1
  2147                           
  2148                           	psect	bssBANK2
  2149  000200                     __pbssBANK2:
  2150                           	opt stack 0
  2151  000200                     _os:
  2152                           	opt stack 0
  2153  000200                     	ds	65
  2154  000241                     _gblCBW:
  2155                           	opt stack 0
  2156  000241                     	ds	31
  2157  000260                     _gblSenseData:
  2158                           	opt stack 0
  2159  000260                     	ds	18
  2160  000272                     _temperatureExternal2Sum:
  2161                           	opt stack 0
  2162  000272                     	ds	4
  2163  000276                     _temperatureExternal1Sum:
  2164                           	opt stack 0
  2165  000276                     	ds	4
  2166  00027A                     _temperatureOnboardSum:
  2167                           	opt stack 0
  2168  00027A                     	ds	4
  2169  00027E                     _outputCapacitySum:
  2170                           	opt stack 0
  2171  00027E                     	ds	4
  2172  000282                     _inputCapacitySum:
  2173                           	opt stack 0
  2174  000282                     	ds	4
  2175  000286                     _outputPowerSum:
  2176                           	opt stack 0
  2177  000286                     	ds	4
  2178  00028A                     _inputPowerSum:
  2179                           	opt stack 0
  2180  00028A                     	ds	4
  2181  00028E                     _outputCurrentSum:
  2182                           	opt stack 0
  2183  00028E                     	ds	4
  2184  000292                     _outputVoltageSum:
  2185                           	opt stack 0
  2186  000292                     	ds	4
  2187  000296                     _inputCurrentSum:
  2188                           	opt stack 0
  2189  000296                     	ds	4
  2190  00029A                     _inputVoltageSum:
  2191                           	opt stack 0
  2192  00029A                     	ds	4
  2193  00029E                     _now:
  2194                           	opt stack 0
  2195  00029E                     	ds	4
  2196  0002A2                     _last:
  2197                           	opt stack 0
  2198  0002A2                     	ds	4
  2199  0002A6                     _gblBLKLen:
  2200                           	opt stack 0
  2201  0002A6                     	ds	4
  2202  0002AA                     _gblNumBLKS:
  2203                           	opt stack 0
  2204  0002AA                     	ds	4
  2205  0002AE                     _lowPowerTime:
  2206                           	opt stack 0
  2207  0002AE                     	ds	2
  2208  0002B0                     _chargerOnTime:
  2209                           	opt stack 0
  2210  0002B0                     	ds	2
  2211  0002B2                     _gblMediaPresent:
  2212                           	opt stack 0
  2213  0002B2                     	ds	2
  2214  0002B4                     _MSBBufferIndex:
  2215                           	opt stack 0
  2216  0002B4                     	ds	2
  2217  0002B6                     _mediaInformation:
  2218                           	opt stack 0
  2219  0002B6                     	ds	5
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           postinc0	equ	0xFEE
  2225                           wreg	equ	0xFE8
  2226                           postdec1	equ	0xFE5
  2227                           fsr1h	equ	0xFE2
  2228                           fsr1l	equ	0xFE1
  2229                           
  2230                           	psect	dataBANK2
  2231  0002BB                     __pdataBANK2:
  2232                           	opt stack 0
  2233  0002BB                     _LUN:
  2234                           	opt stack 0
  2235  0002BB                     	ds	29
  2236  0002D8                     system_init@F7096:
  2237                           	opt stack 0
  2238  0002D8                     	ds	9
  2239  0002E1                     system_init@F7102:
  2240                           	opt stack 0
  2241  0002E1                     	ds	4
  2242  0002E5                     system_init@F7098:
  2243                           	opt stack 0
  2244  0002E5                     	ds	4
  2245  0002E9                     _battery_voltage_maximum:
  2246                           	opt stack 0
  2247  0002E9                     	ds	2
  2248  0002EB                     _filename:
  2249                           	opt stack 0
  2250  0002EB                     	ds	9
  2251  0002F4                     _extension:
  2252                           	opt stack 0
  2253  0002F4                     	ds	4
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           fsr1h	equ	0xFE2
  2262                           fsr1l	equ	0xFE1
  2263                           
  2264                           	psect	bssBANK3
  2265  000300                     __pbssBANK3:
  2266                           	opt stack 0
  2267  000300                     _calibrationParameters:
  2268                           	opt stack 0
  2269  000300                     	ds	84
  2270  000354                     _display_content:
  2271                           	opt stack 0
  2272  000354                     	ds	80
  2273  0003A4                     _ToSendDataBuffer:
  2274                           	opt stack 0
  2275  0003A4                     	ds	64
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postdec1	equ	0xFE5
  2283                           fsr1h	equ	0xFE2
  2284                           fsr1l	equ	0xFE1
  2285                           
  2286                           	psect	dataBANK3
  2287  0003E4                     __pdataBANK3:
  2288                           	opt stack 0
  2289  0003E4                     i2c_display_init@F6880:
  2290                           	opt stack 0
  2291  0003E4                     	ds	9
  2292  0003ED                     i2c_display_send_init_sequence@F6877:
  2293                           	opt stack 0
  2294  0003ED                     	ds	9
  2295  0003F6                     system_init@F7100:
  2296                           	opt stack 0
  2297  0003F6                     	ds	9
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           postinc0	equ	0xFEE
  2303                           wreg	equ	0xFE8
  2304                           postdec1	equ	0xFE5
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           
  2308                           	psect	bssBANK4
  2309  000468                     __pbssBANK4:
  2310                           	opt stack 0
  2311  000468                     _task_list:
  2312                           	opt stack 0
  2313  000468                     	ds	16
  2314  000478                     _ReceivedDataBuffer:
  2315                           	opt stack 0
  2316  000478                     	ds	64
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           postinc0	equ	0xFEE
  2322                           wreg	equ	0xFE8
  2323                           postdec1	equ	0xFE5
  2324                           fsr1h	equ	0xFE2
  2325                           fsr1l	equ	0xFE1
  2326                           
  2327                           	psect	dataBANK4
  2328  000400                     __pdataBANK4:
  2329                           	opt stack 0
  2330  000400                     system_init@F7104:
  2331                           	opt stack 0
  2332  000400                     	ds	104
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           
  2343                           	psect	bssBIGRAMll
  2344  000800                     __pbssBIGRAMll:
  2345                           	opt stack 0
  2346  000800                     _buffer:
  2347                           	opt stack 0
  2348  000800                     	ds	512
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           postinc0	equ	0xFEE
  2354                           wreg	equ	0xFE8
  2355                           postdec1	equ	0xFE5
  2356                           fsr1h	equ	0xFE2
  2357                           fsr1l	equ	0xFE1
  2358                           
  2359                           	psect	cstackBANK1
  2360  000100                     __pcstackBANK1:
  2361                           	opt stack 0
  2362  000100                     log_write_to_disk@file_number:
  2363                           	opt stack 0
  2364  000100                     __display_charger@fan_off:
  2365                           	opt stack 0
  2366  000100                     __display_time@pts:
  2367                           	opt stack 0
  2368  000100                     system_init@appendtext:
  2369                           	opt stack 0
  2370                           
  2371                           ; 104 bytes @ 0x0
  2372  000100                     	ds	1
  2373  000101                     log_write_to_disk@log_entry:
  2374                           	opt stack 0
  2375                           
  2376                           ; 32 bytes @ 0x1
  2377  000101                     	ds	7
  2378  000108                     __display_charger@fan_on:
  2379                           	opt stack 0
  2380                           
  2381                           ; 7 bytes @ 0x8
  2382  000108                     	ds	7
  2383  00010F                     __display_charger@header:
  2384                           	opt stack 0
  2385                           
  2386                           ; 21 bytes @ 0xF
  2387  00010F                     	ds	5
  2388  000114                     __display_time@pressminutes:
  2389                           	opt stack 0
  2390                           
  2391                           ; 20 bytes @ 0x14
  2392  000114                     	ds	16
  2393  000124                     __display_charger@charger_async:
  2394                           	opt stack 0
  2395                           
  2396                           ; 21 bytes @ 0x24
  2397  000124                     	ds	4
  2398  000128                     __display_time@pressseconds:
  2399                           	opt stack 0
  2400                           
  2401                           ; 20 bytes @ 0x28
  2402  000128                     	ds	17
  2403  000139                     __display_charger@charger_sync:
  2404                           	opt stack 0
  2405                           
  2406                           ; 20 bytes @ 0x39
  2407  000139                     	ds	3
  2408  00013C                     __display_time@pressmonth:
  2409                           	opt stack 0
  2410                           
  2411                           ; 18 bytes @ 0x3C
  2412  00013C                     	ds	17
  2413  00014D                     __display_charger@supply_off:
  2414                           	opt stack 0
  2415                           
  2416                           ; 19 bytes @ 0x4D
  2417  00014D                     	ds	1
  2418  00014E                     __display_time@presshours:
  2419                           	opt stack 0
  2420                           
  2421                           ; 18 bytes @ 0x4E
  2422  00014E                     	ds	18
  2423  000160                     __display_time@pressday:
  2424                           	opt stack 0
  2425  000160                     __display_charger@supply_on:
  2426                           	opt stack 0
  2427                           
  2428                           ; 18 bytes @ 0x60
  2429  000160                     	ds	8
  2430  000168                     system_init@filename:
  2431                           	opt stack 0
  2432                           
  2433                           ; 9 bytes @ 0x68
  2434  000168                     	ds	8
  2435  000170                     __display_time@presssave:
  2436                           	opt stack 0
  2437                           
  2438                           ; 16 bytes @ 0x70
  2439  000170                     	ds	1
  2440  000171                     system_init@filename2:
  2441                           	opt stack 0
  2442                           
  2443                           ; 9 bytes @ 0x71
  2444  000171                     	ds	1
  2445  000172                     __display_charger@charger_startup:
  2446                           	opt stack 0
  2447                           
  2448                           ; 16 bytes @ 0x72
  2449  000172                     	ds	8
  2450  00017A                     system_init@extension:
  2451                           	opt stack 0
  2452                           
  2453                           ; 4 bytes @ 0x7A
  2454  00017A                     	ds	4
  2455  00017E                     system_init@extension2:
  2456                           	opt stack 0
  2457                           
  2458                           ; 4 bytes @ 0x7E
  2459  00017E                     	ds	2
  2460  000180                     __display_time@tad:
  2461                           	opt stack 0
  2462                           
  2463                           ; 14 bytes @ 0x80
  2464  000180                     	ds	2
  2465  000182                     __display_charger@charger_off:
  2466                           	opt stack 0
  2467                           
  2468                           ; 12 bytes @ 0x82
  2469  000182                     	ds	12
  2470  00018E                     __display_charger@cntr:
  2471                           	opt stack 0
  2472  00018E                     __display_time@setminutes:
  2473                           	opt stack 0
  2474                           
  2475                           ; 12 bytes @ 0x8E
  2476  00018E                     	ds	12
  2477  00019A                     __display_time@setseconds:
  2478                           	opt stack 0
  2479                           
  2480                           ; 12 bytes @ 0x9A
  2481  00019A                     	ds	12
  2482  0001A6                     __display_time@setmonth:
  2483                           	opt stack 0
  2484                           
  2485                           ; 10 bytes @ 0xA6
  2486  0001A6                     	ds	10
  2487  0001B0                     __display_time@sethours:
  2488                           	opt stack 0
  2489                           
  2490                           ; 10 bytes @ 0xB0
  2491  0001B0                     	ds	10
  2492  0001BA                     __display_time@setyear:
  2493                           	opt stack 0
  2494                           
  2495                           ; 9 bytes @ 0xBA
  2496  0001BA                     	ds	9
  2497  0001C3                     __display_time@setday:
  2498                           	opt stack 0
  2499                           
  2500                           ; 8 bytes @ 0xC3
  2501  0001C3                     	ds	8
  2502  0001CB                     __display_time@mode:
  2503                           	opt stack 0
  2504                           
  2505                           ; 1 bytes @ 0xCB
  2506  0001CB                     	ds	1
  2507  0001CC                     __display_time@year:
  2508                           	opt stack 0
  2509                           
  2510                           ; 1 bytes @ 0xCC
  2511  0001CC                     	ds	1
  2512  0001CD                     __display_time@month:
  2513                           	opt stack 0
  2514                           
  2515                           ; 1 bytes @ 0xCD
  2516  0001CD                     	ds	1
  2517  0001CE                     __display_time@day:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0xCE
  2521  0001CE                     	ds	1
  2522  0001CF                     __display_time@hours:
  2523                           	opt stack 0
  2524                           
  2525                           ; 1 bytes @ 0xCF
  2526  0001CF                     	ds	1
  2527  0001D0                     __display_time@minutes:
  2528                           	opt stack 0
  2529                           
  2530                           ; 1 bytes @ 0xD0
  2531  0001D0                     	ds	1
  2532  0001D1                     __display_time@seconds:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0xD1
  2536  0001D1                     	ds	1
  2537  0001D2                     __display_time@cntr:
  2538                           	opt stack 0
  2539                           
  2540                           ; 1 bytes @ 0xD2
  2541  0001D2                     	ds	1
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1h	equ	0xFE2
  2550                           fsr1l	equ	0xFE1
  2551                           
  2552                           	psect	cstackBANK0
  2553  000060                     __pcstackBANK0:
  2554                           	opt stack 0
  2555  000060                     ??_system_output_off:
  2556  000060                     ??__i2c_wait_idle:
  2557  000060                     ??__display_clear:
  2558  000060                     ??__number_of_days:
  2559  000060                     ??__buck_set_dutycycle:
  2560  000060                     ?_USBTransferOnePacket:
  2561                           	opt stack 0
  2562  000060                     ?_adc_read:
  2563                           	opt stack 0
  2564  000060                     ?_log_get_number_of_samples:
  2565                           	opt stack 0
  2566  000060                     ?_ExternalFlash_MediaInitialize:
  2567                           	opt stack 0
  2568  000060                     ?_ExternalFlash_SectorSizeRead:
  2569                           	opt stack 0
  2570  000060                     ?_strlen:
  2571                           	opt stack 0
  2572  000060                     ?_strncmp:
  2573                           	opt stack 0
  2574  000060                     ?__sector_from_cluster:
  2575                           	opt stack 0
  2576  000060                     ?___awdiv:
  2577                           	opt stack 0
  2578  000060                     ?___lwdiv:
  2579                           	opt stack 0
  2580  000060                     ?___lwmod:
  2581                           	opt stack 0
  2582  000060                     ?___ftpack:
  2583                           	opt stack 0
  2584  000060                     ?_ExternalFlash_CapacityRead:
  2585                           	opt stack 0
  2586  000060                     ?___lmul:
  2587                           	opt stack 0
  2588  000060                     ?___lldiv:
  2589                           	opt stack 0
  2590  000060                     ?___aldiv:
  2591                           	opt stack 0
  2592  000060                     ?___fttol:
  2593                           	opt stack 0
  2594  000060                     USBTransferOnePacket@dir:
  2595                           	opt stack 0
  2596  000060                     USBStallEndpoint@dir:
  2597                           	opt stack 0
  2598  000060                     SYSTEM_Initialize@state:
  2599                           	opt stack 0
  2600  000060                     system_output_is_on@output:
  2601                           	opt stack 0
  2602  000060                     system_output_on@output:
  2603                           	opt stack 0
  2604  000060                     __i2c_send@dat:
  2605                           	opt stack 0
  2606  000060                     i2c_set_frequency@frequency:
  2607                           	opt stack 0
  2608  000060                     get_next_eeprom_write_task@task:
  2609                           	opt stack 0
  2610  000060                     display_get_character@position:
  2611                           	opt stack 0
  2612  000060                     __rtcc_bcd_to_decimal@tens:
  2613                           	opt stack 0
  2614  000060                     __rtcc_verify_bcd@min:
  2615                           	opt stack 0
  2616  000060                     rtcc_set_year@year:
  2617                           	opt stack 0
  2618  000060                     rtcc_set_month@month:
  2619                           	opt stack 0
  2620  000060                     rtcc_set_day@day:
  2621                           	opt stack 0
  2622  000060                     rtcc_set_hours@hours:
  2623                           	opt stack 0
  2624  000060                     rtcc_set_minutes@minutes:
  2625                           	opt stack 0
  2626  000060                     rtcc_set_seconds@seconds:
  2627                           	opt stack 0
  2628  000060                     __buck_prepare@cntr:
  2629                           	opt stack 0
  2630  000060                     buck_remote_set_enable@remote:
  2631                           	opt stack 0
  2632  000060                     buck_remote_set_on@on:
  2633                           	opt stack 0
  2634  000060                     buck_remote_set_synchronous@synchronous:
  2635                           	opt stack 0
  2636  000060                     buck_remote_set_dutycycle@dutycycle:
  2637                           	opt stack 0
  2638  000060                     buck_remote_change_dutycycle@change:
  2639                           	opt stack 0
  2640  000060                     buck_remote_get_status@retval:
  2641                           	opt stack 0
  2642  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2643                           	opt stack 0
  2644  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2645                           	opt stack 0
  2646  000060                     __flash_spi_tx@data:
  2647                           	opt stack 0
  2648  000060                     __flash_spi_tx_tx@command:
  2649                           	opt stack 0
  2650  000060                     __flash_spi_tx_rx@command:
  2651                           	opt stack 0
  2652  000060                     ExternalFlash_MediaInitialize@config:
  2653                           	opt stack 0
  2654  000060                     ExternalFlash_SectorSizeRead@config:
  2655                           	opt stack 0
  2656  000060                     ExternalFlash_CapacityRead@config:
  2657                           	opt stack 0
  2658  000060                     ExternalFlash_MediaDetect@config:
  2659                           	opt stack 0
  2660  000060                     ExternalFlash_WriteProtectStateGet@config:
  2661                           	opt stack 0
  2662  000060                     __sector_from_cluster@fat_cluster:
  2663                           	opt stack 0
  2664  000060                     __get_checksum@log_entry:
  2665                           	opt stack 0
  2666  000060                     ___awdiv@dividend:
  2667                           	opt stack 0
  2668  000060                     ___lwdiv@dividend:
  2669                           	opt stack 0
  2670  000060                     ___lwmod@dividend:
  2671                           	opt stack 0
  2672  000060                     memcpy@d1:
  2673                           	opt stack 0
  2674  000060                     memset@p1:
  2675                           	opt stack 0
  2676  000060                     strlen@s:
  2677                           	opt stack 0
  2678  000060                     strncmp@s1:
  2679                           	opt stack 0
  2680  000060                     ___ftpack@arg:
  2681                           	opt stack 0
  2682  000060                     ___fttol@f1:
  2683                           	opt stack 0
  2684  000060                     ___lmul@multiplier:
  2685                           	opt stack 0
  2686  000060                     ___lldiv@dividend:
  2687                           	opt stack 0
  2688  000060                     ___aldiv@dividend:
  2689                           	opt stack 0
  2690  000060                     __display_usb@header:
  2691                           	opt stack 0
  2692  000060                     __display_outputs@line3:
  2693                           	opt stack 0
  2694                           
  2695                           ; 21 bytes @ 0x0
  2696  000060                     	ds	1
  2697  000061                     ??__fill_buffer_get_status:
  2698  000061                     ??_display_get_character:
  2699  000061                     ??_USBStallEndpoint:
  2700  000061                     system_output_off@output:
  2701                           	opt stack 0
  2702  000061                     schedule_eeprom_write_task@task:
  2703                           	opt stack 0
  2704  000061                     __rtcc_bcd_to_decimal@ones:
  2705                           	opt stack 0
  2706  000061                     __number_of_days@year:
  2707                           	opt stack 0
  2708  000061                     __rtcc_verify_bcd@max:
  2709                           	opt stack 0
  2710  000061                     __buck_set_dutycycle@dutyCycle:
  2711                           	opt stack 0
  2712  000061                     USBTransferOnePacket@data:
  2713                           	opt stack 0
  2714  000061                     SYSTEM_Initialize@pll_startup_counter:
  2715                           	opt stack 0
  2716  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2717                           	opt stack 0
  2718                           
  2719                           ; 2 bytes @ 0x1
  2720  000061                     	ds	1
  2721  000062                     ??_MSDComputeDeviceInAndResidue:
  2722  000062                     ??_strlen:
  2723  000062                     ??__rtcc_verify_bcd:
  2724  000062                     system_output_toggle@output:
  2725                           	opt stack 0
  2726  000062                     __i2c_eeprom_load_default_calibration@index:
  2727                           	opt stack 0
  2728  000062                     schedule_eeprom_write_task@idx:
  2729                           	opt stack 0
  2730  000062                     __display_clear@row:
  2731                           	opt stack 0
  2732  000062                     __rtcc_bcd_to_decimal@input:
  2733                           	opt stack 0
  2734  000062                     __number_of_days@bcd_year:
  2735                           	opt stack 0
  2736  000062                     __buck_set_sync_async@new_dutycycle:
  2737                           	opt stack 0
  2738  000062                     adc_read@channel:
  2739                           	opt stack 0
  2740  000062                     __flash_spi_tx@length:
  2741                           	opt stack 0
  2742  000062                     __flash_spi_tx_tx@command_length:
  2743                           	opt stack 0
  2744  000062                     __flash_spi_tx_rx@command_length:
  2745                           	opt stack 0
  2746  000062                     __get_checksum@byte_array:
  2747                           	opt stack 0
  2748  000062                     ___awdiv@divisor:
  2749                           	opt stack 0
  2750  000062                     ___lwdiv@divisor:
  2751                           	opt stack 0
  2752  000062                     ___lwmod@divisor:
  2753                           	opt stack 0
  2754  000062                     memcpy@s1:
  2755                           	opt stack 0
  2756  000062                     memset@c:
  2757                           	opt stack 0
  2758  000062                     strncmp@s2:
  2759                           	opt stack 0
  2760                           
  2761                           ; 2 bytes @ 0x2
  2762  000062                     	ds	1
  2763  000063                     USBTransferOnePacket@len:
  2764                           	opt stack 0
  2765  000063                     __parse_command_long@data:
  2766                           	opt stack 0
  2767  000063                     __parse_command_calibration@item:
  2768                           	opt stack 0
  2769  000063                     display_get_character@line:
  2770                           	opt stack 0
  2771  000063                     __display_clear@col:
  2772                           	opt stack 0
  2773  000063                     __number_of_days@month:
  2774                           	opt stack 0
  2775  000063                     __rtcc_verify_bcd@value:
  2776                           	opt stack 0
  2777  000063                     rtcc_get_year_decimal@bcd_year:
  2778                           	opt stack 0
  2779  000063                     rtcc_get_month_decimal@bcd_month:
  2780                           	opt stack 0
  2781  000063                     rtcc_get_day_decimal@bcd_day:
  2782                           	opt stack 0
  2783  000063                     rtcc_get_hours_decimal@bcd_hours:
  2784                           	opt stack 0
  2785  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  2786                           	opt stack 0
  2787  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  2788                           	opt stack 0
  2789  000063                     __buck_set_sync_async@mode:
  2790                           	opt stack 0
  2791  000063                     ___ftpack@exp:
  2792                           	opt stack 0
  2793  000063                     SYSTEM_Initialize@pll_startup_counter_3287:
  2794                           	opt stack 0
  2795  000063                     adc_read@adc_value:
  2796                           	opt stack 0
  2797                           
  2798                           ; 2 bytes @ 0x3
  2799  000063                     	ds	1
  2800  000064                     ??_USBTransferOnePacket:
  2801  000064                     ??__fill_buffer_get_display1:
  2802  000064                     ??__fill_buffer_get_display2:
  2803  000064                     ??__flash_spi_tx:
  2804  000064                     ??___fttol:
  2805  000064                     ?__get_time:
  2806                           	opt stack 0
  2807  000064                     ?__get_date:
  2808                           	opt stack 0
  2809  000064                     ?__get_dateTime:
  2810                           	opt stack 0
  2811  000064                     __parse_command_long@cmd:
  2812                           	opt stack 0
  2813  000064                     __parse_command_calibration@dat1:
  2814                           	opt stack 0
  2815  000064                     __rtcc_increment_bcd@min:
  2816                           	opt stack 0
  2817  000064                     __rtcc_decrement_bcd@min:
  2818                           	opt stack 0
  2819  000064                     rtcc_correct_day@day:
  2820                           	opt stack 0
  2821  000064                     __get_checksum@checksum:
  2822                           	opt stack 0
  2823  000064                     ___awdiv@counter:
  2824                           	opt stack 0
  2825  000064                     ___ftpack@sign:
  2826                           	opt stack 0
  2827  000064                     ___lwdiv@counter:
  2828                           	opt stack 0
  2829  000064                     ___lwmod@counter:
  2830                           	opt stack 0
  2831  000064                     __flash_spi_tx_tx@data:
  2832                           	opt stack 0
  2833  000064                     __flash_spi_tx_rx@data:
  2834                           	opt stack 0
  2835  000064                     memcpy@n:
  2836                           	opt stack 0
  2837  000064                     memset@n:
  2838                           	opt stack 0
  2839  000064                     strlen@cp:
  2840                           	opt stack 0
  2841  000064                     strncmp@len:
  2842                           	opt stack 0
  2843  000064                     ___lmul@multiplicand:
  2844                           	opt stack 0
  2845  000064                     ___lldiv@divisor:
  2846                           	opt stack 0
  2847  000064                     ___aldiv@divisor:
  2848                           	opt stack 0
  2849                           
  2850                           ; 4 bytes @ 0x4
  2851  000064                     	ds	1
  2852  000065                     ??___ftpack:
  2853  000065                     ?_i2c_adc_read:
  2854                           	opt stack 0
  2855  000065                     USBStallEndpoint@ep:
  2856                           	opt stack 0
  2857  000065                     __fill_buffer_get_display1@cntr:
  2858                           	opt stack 0
  2859  000065                     __fill_buffer_get_display2@cntr:
  2860                           	opt stack 0
  2861  000065                     __parse_command_calibration@dat2:
  2862                           	opt stack 0
  2863  000065                     __rtcc_increment_bcd@max:
  2864                           	opt stack 0
  2865  000065                     __rtcc_decrement_bcd@max:
  2866                           	opt stack 0
  2867  000065                     rtcc_correct_day@max:
  2868                           	opt stack 0
  2869  000065                     __get_checksum@cntr:
  2870                           	opt stack 0
  2871  000065                     ___awdiv@sign:
  2872                           	opt stack 0
  2873  000065                     __i2c_write@data:
  2874                           	opt stack 0
  2875  000065                     __i2c_read@data:
  2876                           	opt stack 0
  2877  000065                     i2c_display_write_fixed@data:
  2878                           	opt stack 0
  2879  000065                     ___lwdiv@quotient:
  2880                           	opt stack 0
  2881                           
  2882                           ; 2 bytes @ 0x5
  2883  000065                     	ds	1
  2884  000066                     ??_strncmp:
  2885  000066                     ??__rtcc_increment_bcd:
  2886  000066                     ??__rtcc_decrement_bcd:
  2887  000066                     ??__get_time:
  2888  000066                     ??__get_date:
  2889  000066                     __fill_buffer_get_display1@line:
  2890                           	opt stack 0
  2891  000066                     __fill_buffer_get_display2@line:
  2892                           	opt stack 0
  2893  000066                     __parse_command_calibration@dat3:
  2894                           	opt stack 0
  2895  000066                     memcpy@tmp:
  2896                           	opt stack 0
  2897  000066                     USBStallEndpoint@p:
  2898                           	opt stack 0
  2899  000066                     __flash_spi_tx_tx@data_length:
  2900                           	opt stack 0
  2901  000066                     __flash_spi_tx_rx@data_length:
  2902                           	opt stack 0
  2903  000066                     ___awdiv@quotient:
  2904                           	opt stack 0
  2905  000066                     memset@p:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x6
  2909  000066                     	ds	1
  2910  000067                     ??_i2c_adc_read:
  2911  000067                     ??__parse_command_calibration:
  2912  000067                     __fill_buffer_get_display1@position:
  2913                           	opt stack 0
  2914  000067                     __fill_buffer_get_display2@position:
  2915                           	opt stack 0
  2916  000067                     __i2c_write@length:
  2917                           	opt stack 0
  2918  000067                     __i2c_read@length:
  2919                           	opt stack 0
  2920  000067                     i2c_display_write_fixed@length:
  2921                           	opt stack 0
  2922  000067                     __rtcc_increment_bcd@value:
  2923                           	opt stack 0
  2924  000067                     __rtcc_decrement_bcd@value:
  2925                           	opt stack 0
  2926  000067                     utoa@buf:
  2927                           	opt stack 0
  2928  000067                     memcpy@d:
  2929                           	opt stack 0
  2930                           
  2931                           ; 2 bytes @ 0x7
  2932  000067                     	ds	1
  2933  000068                     ??__i2c_read:
  2934  000068                     ??__flash_spi_tx_tx:
  2935  000068                     ??__flash_spi_tx_rx:
  2936  000068                     ??__get_dateTime:
  2937  000068                     USBDeviceInit@i:
  2938                           	opt stack 0
  2939  000068                     USBTransferOnePacket@ep:
  2940                           	opt stack 0
  2941  000068                     MSDErrorHandler@ErrorCase:
  2942                           	opt stack 0
  2943  000068                     __i2c_write@slave_address:
  2944                           	opt stack 0
  2945  000068                     i2c_display_write_fixed@pos:
  2946                           	opt stack 0
  2947  000068                     rtcc_increment_year@year:
  2948                           	opt stack 0
  2949  000068                     rtcc_decrement_year@year:
  2950                           	opt stack 0
  2951  000068                     rtcc_increment_month@month:
  2952                           	opt stack 0
  2953  000068                     rtcc_decrement_month@month:
  2954                           	opt stack 0
  2955  000068                     rtcc_increment_day@day:
  2956                           	opt stack 0
  2957  000068                     rtcc_decrement_day@day:
  2958                           	opt stack 0
  2959  000068                     rtcc_increment_hours@hours:
  2960                           	opt stack 0
  2961  000068                     rtcc_decrement_hours@hours:
  2962                           	opt stack 0
  2963  000068                     rtcc_increment_minutes@minutes:
  2964                           	opt stack 0
  2965  000068                     rtcc_decrement_minutes@minutes:
  2966                           	opt stack 0
  2967  000068                     rtcc_increment_seconds@seconds:
  2968                           	opt stack 0
  2969  000068                     rtcc_decrement_seconds@seconds:
  2970                           	opt stack 0
  2971  000068                     __flash_wakeup@command:
  2972                           	opt stack 0
  2973  000068                     __get_time@hours:
  2974                           	opt stack 0
  2975  000068                     __get_date@year:
  2976                           	opt stack 0
  2977  000068                     ___aldiv@counter:
  2978                           	opt stack 0
  2979  000068                     i2c_adc_read@result:
  2980                           	opt stack 0
  2981  000068                     ___lmul@product:
  2982                           	opt stack 0
  2983  000068                     ___lldiv@quotient:
  2984                           	opt stack 0
  2985                           
  2986                           ; 4 bytes @ 0x8
  2987  000068                     	ds	1
  2988  000069                     MSDErrorHandler@OldMSD_State:
  2989                           	opt stack 0
  2990  000069                     __i2c_write@cntr:
  2991                           	opt stack 0
  2992  000069                     __get_time@minutes:
  2993                           	opt stack 0
  2994  000069                     __get_date@month:
  2995                           	opt stack 0
  2996  000069                     ___aldiv@sign:
  2997                           	opt stack 0
  2998  000069                     ___fttol@sign1:
  2999                           	opt stack 0
  3000  000069                     USBTransferOnePacket@handle:
  3001                           	opt stack 0
  3002  000069                     __parse_command_calibration@parameter:
  3003                           	opt stack 0
  3004  000069                     utoa@val:
  3005                           	opt stack 0
  3006  000069                     memcpy@s:
  3007                           	opt stack 0
  3008                           
  3009                           ; 2 bytes @ 0x9
  3010  000069                     	ds	1
  3011  00006A                     __ic2_display_set_address@address:
  3012                           	opt stack 0
  3013  00006A                     i2c_digipot_backlight@level:
  3014                           	opt stack 0
  3015  00006A                     i2c_adc_start@resolution:
  3016                           	opt stack 0
  3017  00006A                     __get_time@seconds:
  3018                           	opt stack 0
  3019  00006A                     __get_date@day:
  3020                           	opt stack 0
  3021  00006A                     i2c_digipot_reset_on@data_array:
  3022                           	opt stack 0
  3023  00006A                     i2c_digipot_reset_off@data_array:
  3024                           	opt stack 0
  3025  00006A                     i2c_eeprom_write@address:
  3026                           	opt stack 0
  3027  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3028                           	opt stack 0
  3029  00006A                     ___aldiv@quotient:
  3030                           	opt stack 0
  3031  00006A                     ___fttol@lval:
  3032                           	opt stack 0
  3033  00006A                     i2c_display_send_init_sequence@init_sequence:
  3034                           	opt stack 0
  3035                           
  3036                           ; 9 bytes @ 0xA
  3037  00006A                     	ds	1
  3038  00006B                     i2c_adc_start@gain:
  3039                           	opt stack 0
  3040  00006B                     __ic2_display_set_address@data_array:
  3041                           	opt stack 0
  3042  00006B                     i2c_digipot_backlight@data_array:
  3043                           	opt stack 0
  3044  00006B                     __get_time@time:
  3045                           	opt stack 0
  3046  00006B                     __get_date@date:
  3047                           	opt stack 0
  3048  00006B                     utoa@base:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0xB
  3052  00006B                     	ds	1
  3053  00006C                     ??_system_calculate_output_voltage:
  3054  00006C                     ??_system_calculate_input_voltage:
  3055  00006C                     ??_system_calculate_output_current:
  3056  00006C                     ??_system_calculate_input_current:
  3057  00006C                     ?_adc_calculate_temperature:
  3058                           	opt stack 0
  3059  00006C                     ?__flash_get_status:
  3060                           	opt stack 0
  3061  00006C                     i2c_adc_start@channel:
  3062                           	opt stack 0
  3063  00006C                     ___lldiv@counter:
  3064                           	opt stack 0
  3065  00006C                     i2c_eeprom_write@data:
  3066                           	opt stack 0
  3067  00006C                     adc_calculate_temperature@adc_value:
  3068                           	opt stack 0
  3069                           
  3070                           ; 2 bytes @ 0xC
  3071  00006C                     	ds	1
  3072  00006D                     ??__buck_initial_dutycycle:
  3073  00006D                     ?__get_output_power:
  3074                           	opt stack 0
  3075  00006D                     i2c_display_cursor@position:
  3076                           	opt stack 0
  3077  00006D                     i2c_adc_start@configuration_byte:
  3078                           	opt stack 0
  3079  00006D                     __update_modified_time@root:
  3080                           	opt stack 0
  3081  00006D                     utoa@v:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0xD
  3085  00006D                     	ds	1
  3086  00006E                     ?__get_input_power:
  3087                           	opt stack 0
  3088  00006E                     ?___altoft:
  3089                           	opt stack 0
  3090  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3091                           	opt stack 0
  3092  00006E                     i2c_display_cursor@line:
  3093                           	opt stack 0
  3094  00006E                     i2c_eeprom_write@length:
  3095                           	opt stack 0
  3096  00006E                     adc_calculate_temperature@calibration:
  3097                           	opt stack 0
  3098  00006E                     __flash_get_status@command:
  3099                           	opt stack 0
  3100  00006E                     __get_dateTime@year:
  3101                           	opt stack 0
  3102  00006E                     ___fttol@exp1:
  3103                           	opt stack 0
  3104  00006E                     __get_temperature@temperature:
  3105                           	opt stack 0
  3106  00006E                     __buck_initial_dutycycle@dc:
  3107                           	opt stack 0
  3108  00006E                     ___altoft@c:
  3109                           	opt stack 0
  3110                           
  3111                           ; 4 bytes @ 0xE
  3112  00006E                     	ds	1
  3113  00006F                     ??_adc_calculate_temperature:
  3114  00006F                     ??_i2c_eeprom_write:
  3115  00006F                     MSDCheckForErrorCases@DeviceNoData:
  3116                           	opt stack 0
  3117  00006F                     __i2c_read@slave_address:
  3118                           	opt stack 0
  3119  00006F                     i2c_display_cursor@address:
  3120                           	opt stack 0
  3121  00006F                     __get_dateTime@month:
  3122                           	opt stack 0
  3123  00006F                     utoa@c:
  3124                           	opt stack 0
  3125  00006F                     __flash_get_status@status:
  3126                           	opt stack 0
  3127  00006F                     __get_output_power@pwr:
  3128                           	opt stack 0
  3129                           
  3130                           ; 4 bytes @ 0xF
  3131  00006F                     	ds	1
  3132  000070                     MSDCheckForErrorCases@MSDErrorCase:
  3133                           	opt stack 0
  3134  000070                     __i2c_read@cntr:
  3135                           	opt stack 0
  3136  000070                     __get_dateTime@day:
  3137                           	opt stack 0
  3138  000070                     itoa@buf:
  3139                           	opt stack 0
  3140  000070                     system_calculate_input_voltage@tmp:
  3141                           	opt stack 0
  3142  000070                     system_calculate_output_voltage@tmp:
  3143                           	opt stack 0
  3144  000070                     system_calculate_input_current@tmp:
  3145                           	opt stack 0
  3146  000070                     system_calculate_output_current@tmp:
  3147                           	opt stack 0
  3148  000070                     __get_input_power@pwr:
  3149                           	opt stack 0
  3150                           
  3151                           ; 4 bytes @ 0x10
  3152  000070                     	ds	1
  3153  000071                     __get_dateTime@hours:
  3154                           	opt stack 0
  3155  000071                     i2c_eeprom_read@address:
  3156                           	opt stack 0
  3157  000071                     flash_is_busy@status:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x11
  3161  000071                     	ds	1
  3162  000072                     ??___altoft:
  3163  000072                     __buck_start@dutycycle:
  3164                           	opt stack 0
  3165  000072                     __get_dateTime@minutes:
  3166                           	opt stack 0
  3167  000072                     itoa@val:
  3168                           	opt stack 0
  3169  000072                     i2c_eeprom_write@dat:
  3170                           	opt stack 0
  3171                           
  3172                           ; 17 bytes @ 0x12
  3173  000072                     	ds	1
  3174  000073                     __buck_start@mode:
  3175                           	opt stack 0
  3176  000073                     __get_dateTime@seconds:
  3177                           	opt stack 0
  3178  000073                     i2c_eeprom_read@data:
  3179                           	opt stack 0
  3180  000073                     __flash_copy_page_to_buffer@page:
  3181                           	opt stack 0
  3182  000073                     __flash_compare_page_to_buffer@page:
  3183                           	opt stack 0
  3184  000073                     __flash_write_to_buffer@start:
  3185                           	opt stack 0
  3186  000073                     __flash_write_page_from_buffer@page:
  3187                           	opt stack 0
  3188  000073                     flash_partial_read@page:
  3189                           	opt stack 0
  3190  000073                     __flash_set_page_size@command:
  3191                           	opt stack 0
  3192                           
  3193                           ; 4 bytes @ 0x13
  3194  000073                     	ds	1
  3195  000074                     ??_log_collect_data:
  3196  000074                     __buck_start@startup_dutycycle:
  3197                           	opt stack 0
  3198  000074                     itoa@base:
  3199                           	opt stack 0
  3200  000074                     __get_dateTime@datetime:
  3201                           	opt stack 0
  3202  000074                     __display_usb@usb_off:
  3203                           	opt stack 0
  3204                           
  3205                           ; 17 bytes @ 0x14
  3206  000074                     	ds	1
  3207  000075                     i2c_eeprom_read@length:
  3208                           	opt stack 0
  3209  000075                     __buck_start@cntr:
  3210                           	opt stack 0
  3211  000075                     __flash_copy_page_to_buffer@buffer:
  3212                           	opt stack 0
  3213  000075                     __flash_compare_page_to_buffer@buffer:
  3214                           	opt stack 0
  3215  000075                     __flash_write_page_from_buffer@buffer:
  3216                           	opt stack 0
  3217  000075                     __flash_write_to_buffer@data:
  3218                           	opt stack 0
  3219  000075                     flash_partial_read@start:
  3220                           	opt stack 0
  3221  000075                     adc_calculate_temperature@tmp:
  3222                           	opt stack 0
  3223  000075                     __display_outputs@line4:
  3224                           	opt stack 0
  3225                           
  3226                           ; 21 bytes @ 0x15
  3227  000075                     	ds	1
  3228  000076                     ??_i2c_eeprom_read:
  3229  000076                     ??__buck_operate_local:
  3230  000076                     ??__flash_copy_page_to_buffer:
  3231  000076                     ??__flash_compare_page_to_buffer:
  3232  000076                     ??__flash_write_page_from_buffer:
  3233  000076                     ___altoft@exp:
  3234                           	opt stack 0
  3235  000076                     __buck_operate_remote$8818:
  3236                           	opt stack 0
  3237  000076                     itoa@cp:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0x16
  3241  000076                     	ds	1
  3242  000077                     i2c_eeprom_read@addr:
  3243                           	opt stack 0
  3244  000077                     __flash_set_page_size@size:
  3245                           	opt stack 0
  3246  000077                     ___altoft@sign:
  3247                           	opt stack 0
  3248  000077                     __flash_write_to_buffer@data_length:
  3249                           	opt stack 0
  3250  000077                     flash_partial_read@length:
  3251                           	opt stack 0
  3252                           
  3253                           ; 2 bytes @ 0x17
  3254  000077                     	ds	1
  3255  000078                     i2c_eeprom_read@slave_address:
  3256                           	opt stack 0
  3257  000078                     __display_itoa@value:
  3258                           	opt stack 0
  3259  000078                     log_collect_data@temp:
  3260                           	opt stack 0
  3261  000078                     log_generate_entry@log_entry:
  3262                           	opt stack 0
  3263                           
  3264                           ; 2 bytes @ 0x18
  3265  000078                     	ds	1
  3266  000079                     ??_i2c_eeprom_read_calibration:
  3267  000079                     __flash_write_to_buffer@buffer:
  3268                           	opt stack 0
  3269  000079                     __flash_compare_page_to_buffer@status:
  3270                           	opt stack 0
  3271  000079                     flash_partial_read@data:
  3272                           	opt stack 0
  3273  000079                     __flash_copy_page_to_buffer@command:
  3274                           	opt stack 0
  3275  000079                     __flash_write_page_from_buffer@command:
  3276                           	opt stack 0
  3277                           
  3278                           ; 4 bytes @ 0x19
  3279  000079                     	ds	1
  3280  00007A                     ??_log_generate_entry:
  3281  00007A                     __display_itoa@decimals:
  3282                           	opt stack 0
  3283  00007A                     __flash_write_to_buffer@command:
  3284                           	opt stack 0
  3285                           
  3286                           ; 4 bytes @ 0x1A
  3287  00007A                     	ds	1
  3288  00007B                     ??_flash_partial_read:
  3289  00007B                     __buck_operate_local$8817:
  3290                           	opt stack 0
  3291  00007B                     __display_itoa@text:
  3292                           	opt stack 0
  3293  00007B                     i2c_eeprom_read_calibration@buffer:
  3294                           	opt stack 0
  3295  00007B                     __flash_compare_page_to_buffer@command:
  3296                           	opt stack 0
  3297                           
  3298                           ; 4 bytes @ 0x1B
  3299  00007B                     	ds	1
  3300  00007C                     __buck_operate_local@tmp_dutycycle:
  3301                           	opt stack 0
  3302                           
  3303                           ; 1 bytes @ 0x1C
  3304  00007C                     	ds	1
  3305  00007D                     ??__display_itoa:
  3306  00007D                     __buck_operate_local@cntr:
  3307                           	opt stack 0
  3308                           
  3309                           ; 1 bytes @ 0x1D
  3310  00007D                     	ds	1
  3311  00007E                     
  3312                           ; 1 bytes @ 0x1E
  3313  00007E                     	ds	1
  3314  00007F                     i2c_eeprom_read_calibration@addr:
  3315                           	opt stack 0
  3316  00007F                     flash_page_write@page:
  3317                           	opt stack 0
  3318  00007F                     flash_partial_write@page:
  3319                           	opt stack 0
  3320  00007F                     flash_partial_read@command:
  3321                           	opt stack 0
  3322                           
  3323                           ; 4 bytes @ 0x1F
  3324  00007F                     	ds	2
  3325  000081                     i2c_eeprom_read_calibration@cntr:
  3326                           	opt stack 0
  3327  000081                     flash_page_write@data:
  3328                           	opt stack 0
  3329  000081                     flash_partial_write@start:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x21
  3333  000081                     	ds	2
  3334  000083                     i2c_eeprom_write@slave_address:
  3335                           	opt stack 0
  3336  000083                     flash_page_write@match:
  3337                           	opt stack 0
  3338  000083                     flash_partial_write@length:
  3339                           	opt stack 0
  3340  000083                     flash_partial_read@address:
  3341                           	opt stack 0
  3342  000083                     __display_itoa@tmp:
  3343                           	opt stack 0
  3344                           
  3345                           ; 10 bytes @ 0x23
  3346  000083                     	ds	1
  3347  000084                     i2c_eeprom_write@cntr:
  3348                           	opt stack 0
  3349  000084                     ExternalFlash_SectorWrite@config:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x24
  3353  000084                     	ds	1
  3354  000085                     ??__write_calibration:
  3355  000085                     flash_partial_write@data:
  3356                           	opt stack 0
  3357  000085                     rtcc_write_eeprom@date:
  3358                           	opt stack 0
  3359  000085                     __display_usb@low:
  3360                           	opt stack 0
  3361                           
  3362                           ; 16 bytes @ 0x25
  3363  000085                     	ds	1
  3364  000086                     ExternalFlash_SectorWrite@sector_addr:
  3365                           	opt stack 0
  3366                           
  3367                           ; 4 bytes @ 0x26
  3368  000086                     	ds	1
  3369  000087                     ??__root_is_available:
  3370  000087                     ?__get_empty_cluster:
  3371                           	opt stack 0
  3372  000087                     ?_fat_get_empty_clusters:
  3373                           	opt stack 0
  3374  000087                     ?__read_fat:
  3375                           	opt stack 0
  3376  000087                     flash_partial_write@match:
  3377                           	opt stack 0
  3378  000087                     flash_page_read@page:
  3379                           	opt stack 0
  3380  000087                     __get_empty_cluster@first_cluster:
  3381                           	opt stack 0
  3382  000087                     fat_get_empty_clusters@maximum:
  3383                           	opt stack 0
  3384  000087                     __read_fat@cluster:
  3385                           	opt stack 0
  3386  000087                     __read_root@data:
  3387                           	opt stack 0
  3388  000087                     fat_find_file@name:
  3389                           	opt stack 0
  3390  000087                     __write_calibration@buffer:
  3391                           	opt stack 0
  3392                           
  3393                           ; 16 bytes @ 0x27
  3394  000087                     	ds	1
  3395  000088                     __root_is_available@root_sector:
  3396                           	opt stack 0
  3397  000088                     __write_fat@cluster:
  3398                           	opt stack 0
  3399  000088                     __write_root@data:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x28
  3403  000088                     	ds	1
  3404  000089                     ??__read_root:
  3405  000089                     flash_page_read@data:
  3406                           	opt stack 0
  3407  000089                     __get_empty_cluster@fat_sector:
  3408                           	opt stack 0
  3409  000089                     fat_get_empty_clusters@fat_sector:
  3410                           	opt stack 0
  3411  000089                     __read_fat@fat_sector:
  3412                           	opt stack 0
  3413  000089                     fat_find_file@extension:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x29
  3417  000089                     	ds	1
  3418  00008A                     ??__write_root:
  3419  00008A                     ExternalFlash_SectorWrite@buffer:
  3420                           	opt stack 0
  3421  00008A                     __root_is_available@offset:
  3422                           	opt stack 0
  3423  00008A                     __write_fat@value:
  3424                           	opt stack 0
  3425  00008A                     __read_root@root_sector:
  3426                           	opt stack 0
  3427  00008A                     __display_outputs@low:
  3428                           	opt stack 0
  3429                           
  3430                           ; 16 bytes @ 0x2A
  3431  00008A                     	ds	1
  3432  00008B                     __parse_command_short@cmd:
  3433                           	opt stack 0
  3434  00008B                     rtcc_read_eeprom@error_found:
  3435                           	opt stack 0
  3436  00008B                     ExternalFlash_SectorRead@config:
  3437                           	opt stack 0
  3438  00008B                     __get_empty_cluster@offset:
  3439                           	opt stack 0
  3440  00008B                     fat_get_empty_clusters@offset:
  3441                           	opt stack 0
  3442  00008B                     __read_fat@offset:
  3443                           	opt stack 0
  3444  00008B                     __write_root@root_sector:
  3445                           	opt stack 0
  3446  00008B                     fat_find_file@buffer:
  3447                           	opt stack 0
  3448                           
  3449                           ; 11 bytes @ 0x2B
  3450  00008B                     	ds	1
  3451  00008C                     ??_APP_DeviceCustomHIDTasks:
  3452  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3453                           	opt stack 0
  3454  00008C                     __root_is_available@file_number:
  3455                           	opt stack 0
  3456  00008C                     __write_fat@fat_sector:
  3457                           	opt stack 0
  3458  00008C                     __read_root@offset:
  3459                           	opt stack 0
  3460  00008C                     rtcc_read_eeprom@date:
  3461                           	opt stack 0
  3462                           
  3463                           ; 6 bytes @ 0x2C
  3464  00008C                     	ds	1
  3465  00008D                     __display_itoa@len:
  3466                           	opt stack 0
  3467  00008D                     __root_is_available@first_byte:
  3468                           	opt stack 0
  3469  00008D                     ExternalFlash_SectorWrite@page:
  3470                           	opt stack 0
  3471  00008D                     __get_empty_cluster@value:
  3472                           	opt stack 0
  3473  00008D                     fat_get_empty_clusters@value:
  3474                           	opt stack 0
  3475  00008D                     __read_fat@value:
  3476                           	opt stack 0
  3477  00008D                     __write_root@offset:
  3478                           	opt stack 0
  3479  00008D                     ExternalFlash_SectorRead@sector_addr:
  3480                           	opt stack 0
  3481                           
  3482                           ; 4 bytes @ 0x2D
  3483  00008D                     	ds	1
  3484  00008E                     __display_itoa@missing:
  3485                           	opt stack 0
  3486  00008E                     __get_available_root_entry@file_number:
  3487                           	opt stack 0
  3488  00008E                     __read_root@slot:
  3489                           	opt stack 0
  3490  00008E                     __write_fat@offset:
  3491                           	opt stack 0
  3492                           
  3493                           ; 2 bytes @ 0x2E
  3494  00008E                     	ds	1
  3495  00008F                     ??_MSDWriteHandler:
  3496  00008F                     __display_itoa@pos:
  3497                           	opt stack 0
  3498  00008F                     __write_root@slot:
  3499                           	opt stack 0
  3500  00008F                     __get_empty_cluster@cluster:
  3501                           	opt stack 0
  3502  00008F                     fat_get_empty_clusters@empty_clusters:
  3503                           	opt stack 0
  3504                           
  3505                           ; 2 bytes @ 0x2F
  3506  00008F                     	ds	1
  3507  000090                     ??__display_charger:
  3508  000090                     ??__display_efficiency:
  3509  000090                     __display_inout@line1:
  3510                           	opt stack 0
  3511  000090                     __display_temperature@header:
  3512                           	opt stack 0
  3513                           
  3514                           ; 20 bytes @ 0x30
  3515  000090                     	ds	1
  3516  000091                     ExternalFlash_SectorRead@buffer:
  3517                           	opt stack 0
  3518  000091                     fat_get_empty_clusters@cluster:
  3519                           	opt stack 0
  3520  000091                     fat_append_to_file@number_of_bytes:
  3521                           	opt stack 0
  3522                           
  3523                           ; 2 bytes @ 0x31
  3524  000091                     	ds	1
  3525  000092                     rtcc_read_eeprom@buffer:
  3526                           	opt stack 0
  3527  000092                     __display_efficiency@header:
  3528                           	opt stack 0
  3529                           
  3530                           ; 19 bytes @ 0x32
  3531  000092                     	ds	1
  3532  000093                     ExternalFlash_SectorRead@page:
  3533                           	opt stack 0
  3534  000093                     fat_append_to_file@data:
  3535                           	opt stack 0
  3536                           
  3537                           ; 2 bytes @ 0x33
  3538  000093                     	ds	1
  3539  000094                     APP_DeviceCustomHIDTasks@return_value:
  3540                           	opt stack 0
  3541                           
  3542                           ; 2 bytes @ 0x34
  3543  000094                     	ds	1
  3544  000095                     ??_MSDReadHandler:
  3545  000095                     ??_fat_append_to_file:
  3546  000095                     __display_usb@usb_on:
  3547                           	opt stack 0
  3548                           
  3549                           ; 16 bytes @ 0x35
  3550  000095                     	ds	1
  3551  000096                     APP_DeviceCustomHIDTasks@idx:
  3552                           	opt stack 0
  3553  000096                     fat_find_file@slot:
  3554                           	opt stack 0
  3555                           
  3556                           ; 1 bytes @ 0x36
  3557  000096                     	ds	1
  3558  000097                     __write_calibration@addr:
  3559                           	opt stack 0
  3560  000097                     fat_find_file@sector:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x37
  3564  000097                     	ds	2
  3565  000099                     ??_MSDProcessCommandMediaPresent:
  3566  000099                     __write_calibration@ptr:
  3567                           	opt stack 0
  3568  000099                     fat_find_file@offset:
  3569                           	opt stack 0
  3570                           
  3571                           ; 2 bytes @ 0x39
  3572  000099                     	ds	1
  3573  00009A                     __display_outputs@header:
  3574                           	opt stack 0
  3575                           
  3576                           ; 14 bytes @ 0x3A
  3577  00009A                     	ds	1
  3578  00009B                     __write_calibration@index:
  3579                           	opt stack 0
  3580  00009B                     _MSDProcessCommandMediaPresent$2715:
  3581                           	opt stack 0
  3582  00009B                     fat_create_file@name:
  3583                           	opt stack 0
  3584                           
  3585                           ; 2 bytes @ 0x3B
  3586  00009B                     	ds	1
  3587  00009C                     __write_calibration@cntr:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x3C
  3591  00009C                     	ds	1
  3592  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3593                           	opt stack 0
  3594  00009D                     fat_create_file@extension:
  3595                           	opt stack 0
  3596  00009D                     fat_append_to_file@sector:
  3597                           	opt stack 0
  3598                           
  3599                           ; 2 bytes @ 0x3D
  3600  00009D                     	ds	1
  3601  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3602                           	opt stack 0
  3603                           
  3604                           ; 4 bytes @ 0x3E
  3605  00009E                     	ds	1
  3606  00009F                     fat_create_file@size:
  3607                           	opt stack 0
  3608  00009F                     fat_append_to_file@file_size:
  3609                           	opt stack 0
  3610                           
  3611                           ; 4 bytes @ 0x3F
  3612  00009F                     	ds	3
  3613  0000A2                     MSDProcessCommandMediaPresent@capacity:
  3614                           	opt stack 0
  3615  0000A2                     __display_inout@line2:
  3616                           	opt stack 0
  3617                           
  3618                           ; 18 bytes @ 0x42
  3619  0000A2                     	ds	1
  3620  0000A3                     ??_fat_create_file:
  3621  0000A3                     fat_append_to_file@new_cluster:
  3622                           	opt stack 0
  3623                           
  3624                           ; 2 bytes @ 0x43
  3625  0000A3                     	ds	1
  3626  0000A4                     __display_temperature@external1:
  3627                           	opt stack 0
  3628                           
  3629                           ; 12 bytes @ 0x44
  3630  0000A4                     	ds	1
  3631  0000A5                     __display_usb@cntr:
  3632                           	opt stack 0
  3633  0000A5                     fat_append_to_file@fat_cluster:
  3634                           	opt stack 0
  3635  0000A5                     __display_efficiency@source:
  3636                           	opt stack 0
  3637                           
  3638                           ; 19 bytes @ 0x45
  3639  0000A5                     	ds	1
  3640  0000A6                     MSDProcessCommandMediaPresent@i:
  3641                           	opt stack 0
  3642                           
  3643                           ; 1 bytes @ 0x46
  3644  0000A6                     	ds	1
  3645  0000A7                     ??_MSDProcessCommand:
  3646  0000A7                     fat_create_file@next_cluster:
  3647                           	opt stack 0
  3648  0000A7                     fat_append_to_file@offset:
  3649                           	opt stack 0
  3650                           
  3651                           ; 2 bytes @ 0x47
  3652  0000A7                     	ds	1
  3653  0000A8                     __display_outputs@mode:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x48
  3657  0000A8                     	ds	1
  3658  0000A9                     __display_outputs@cntr:
  3659                           	opt stack 0
  3660  0000A9                     fat_append_to_file@file_number:
  3661                           	opt stack 0
  3662  0000A9                     fat_create_file@cluster_count:
  3663                           	opt stack 0
  3664                           
  3665                           ; 2 bytes @ 0x49
  3666  0000A9                     	ds	1
  3667  0000AA                     fat_append_to_file@length:
  3668                           	opt stack 0
  3669                           
  3670                           ; 2 bytes @ 0x4A
  3671  0000AA                     	ds	1
  3672  0000AB                     fat_create_file@root_slot:
  3673                           	opt stack 0
  3674                           
  3675                           ; 1 bytes @ 0x4B
  3676  0000AB                     	ds	1
  3677  0000AC                     ??_MSDTasks:
  3678  0000AC                     fat_create_file@number_of_clusters:
  3679                           	opt stack 0
  3680  0000AC                     fat_append_to_file@position:
  3681                           	opt stack 0
  3682                           
  3683                           ; 4 bytes @ 0x4C
  3684  0000AC                     	ds	1
  3685  0000AD                     _MSDTasks$2697:
  3686                           	opt stack 0
  3687                           
  3688                           ; 2 bytes @ 0x4D
  3689  0000AD                     	ds	1
  3690  0000AE                     fat_create_file@cluster:
  3691                           	opt stack 0
  3692                           
  3693                           ; 2 bytes @ 0x4E
  3694  0000AE                     	ds	1
  3695  0000AF                     _MSDTasks$2698:
  3696                           	opt stack 0
  3697                           
  3698                           ; 2 bytes @ 0x4F
  3699  0000AF                     	ds	1
  3700  0000B0                     __display_temperature@external2:
  3701                           	opt stack 0
  3702  0000B0                     fat_create_file@root_entry:
  3703                           	opt stack 0
  3704  0000B0                     fat_append_to_file@root:
  3705                           	opt stack 0
  3706                           
  3707                           ; 32 bytes @ 0x50
  3708  0000B0                     	ds	1
  3709  0000B1                     MSDTasks@i:
  3710                           	opt stack 0
  3711                           
  3712                           ; 1 bytes @ 0x51
  3713  0000B1                     	ds	1
  3714  0000B2                     
  3715                           ; 1 bytes @ 0x52
  3716  0000B2                     	ds	2
  3717  0000B4                     __display_inout@line4:
  3718                           	opt stack 0
  3719                           
  3720                           ; 14 bytes @ 0x54
  3721  0000B4                     	ds	4
  3722  0000B8                     __display_efficiency@footer:
  3723                           	opt stack 0
  3724                           
  3725                           ; 14 bytes @ 0x58
  3726  0000B8                     	ds	4
  3727  0000BC                     __display_temperature@internal:
  3728                           	opt stack 0
  3729                           
  3730                           ; 11 bytes @ 0x5C
  3731  0000BC                     	ds	6
  3732  0000C2                     __display_inout@line3:
  3733                           	opt stack 0
  3734                           
  3735                           ; 3 bytes @ 0x62
  3736  0000C2                     	ds	3
  3737  0000C5                     __display_inout@cntr:
  3738                           	opt stack 0
  3739                           
  3740                           ; 1 bytes @ 0x65
  3741  0000C5                     	ds	1
  3742  0000C6                     __display_efficiency@efficiency:
  3743                           	opt stack 0
  3744                           
  3745                           ; 3 bytes @ 0x66
  3746  0000C6                     	ds	1
  3747  0000C7                     __display_temperature@cntr:
  3748                           	opt stack 0
  3749                           
  3750                           ; 1 bytes @ 0x67
  3751  0000C7                     	ds	2
  3752  0000C9                     __display_efficiency@panel:
  3753                           	opt stack 0
  3754                           
  3755                           ; 4 bytes @ 0x69
  3756  0000C9                     	ds	4
  3757  0000CD                     __display_efficiency@battery:
  3758                           	opt stack 0
  3759                           
  3760                           ; 4 bytes @ 0x6D
  3761  0000CD                     	ds	3
  3762  0000D0                     
  3763                           ; 1 bytes @ 0x70
  3764  0000D0                     	ds	1
  3765  0000D1                     __display_efficiency@cntr:
  3766                           	opt stack 0
  3767                           
  3768                           ; 1 bytes @ 0x71
  3769  0000D1                     	ds	1
  3770  0000D2                     ??_display_prepare:
  3771                           
  3772                           ; 1 bytes @ 0x72
  3773  0000D2                     	ds	2
  3774  0000D4                     display_prepare@mode:
  3775                           	opt stack 0
  3776                           
  3777                           ; 1 bytes @ 0x74
  3778  0000D4                     	ds	1
  3779  0000D5                     ??_main:
  3780                           
  3781                           ; 1 bytes @ 0x75
  3782  0000D5                     	ds	2
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           postdec1	equ	0xFE5
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           
  3793                           	psect	cstackCOMRAM
  3794  00002E                     __pcstackCOMRAM:
  3795                           	opt stack 0
  3796  00002E                     ??_USBStdGetDscHandler:
  3797  00002E                     ??_USBStdGetStatusHandler:
  3798  00002E                     ?i2_USBTransferOnePacket:
  3799                           	opt stack 0
  3800  00002E                     ?i2_ExternalFlash_MediaInitialize:
  3801                           	opt stack 0
  3802  00002E                     USBConfigureEndpoint@direction:
  3803                           	opt stack 0
  3804  00002E                     USBCtrlTrfTxService@byteToSend:
  3805                           	opt stack 0
  3806  00002E                     USBCtrlTrfRxService@i:
  3807                           	opt stack 0
  3808  00002E                     i2USBTransferOnePacket@dir:
  3809                           	opt stack 0
  3810  00002E                     i2USBStallEndpoint@dir:
  3811                           	opt stack 0
  3812  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  3813                           	opt stack 0
  3814  00002E                     i2ExternalFlash_MediaInitialize@config:
  3815                           	opt stack 0
  3816  00002E                     i2ExternalFlash_MediaDetect@config:
  3817                           	opt stack 0
  3818  00002E                     i2memcpy@d1:
  3819                           	opt stack 0
  3820  00002E                     i2memset@p1:
  3821                           	opt stack 0
  3822                           
  3823                           ; 2 bytes @ 0x0
  3824  00002E                     	ds	1
  3825  00002F                     ??_USBConfigureEndpoint:
  3826  00002F                     ??i2_USBStallEndpoint:
  3827  00002F                     USBCtrlTrfRxService@byteToRead:
  3828                           	opt stack 0
  3829  00002F                     USBCtrlTrfInHandler@lastDTS:
  3830                           	opt stack 0
  3831  00002F                     USBStdGetStatusHandler@p:
  3832                           	opt stack 0
  3833  00002F                     i2USBTransferOnePacket@data:
  3834                           	opt stack 0
  3835                           
  3836                           ; 2 bytes @ 0x1
  3837  00002F                     	ds	1
  3838  000030                     i2SYSTEM_Initialize@pll_startup_counter_3287:
  3839                           	opt stack 0
  3840  000030                     i2memcpy@s1:
  3841                           	opt stack 0
  3842  000030                     i2memset@c:
  3843                           	opt stack 0
  3844                           
  3845                           ; 2 bytes @ 0x2
  3846  000030                     	ds	1
  3847  000031                     i2USBTransferOnePacket@len:
  3848                           	opt stack 0
  3849                           
  3850                           ; 1 bytes @ 0x3
  3851  000031                     	ds	1
  3852  000032                     ??i2_USBTransferOnePacket:
  3853  000032                     i2SYSTEM_Initialize@state:
  3854                           	opt stack 0
  3855  000032                     i2memcpy@n:
  3856                           	opt stack 0
  3857  000032                     i2memset@n:
  3858                           	opt stack 0
  3859                           
  3860                           ; 2 bytes @ 0x4
  3861  000032                     	ds	1
  3862  000033                     USBConfigureEndpoint@EPNum:
  3863                           	opt stack 0
  3864  000033                     i2USBStallEndpoint@ep:
  3865                           	opt stack 0
  3866                           
  3867                           ; 1 bytes @ 0x5
  3868  000033                     	ds	1
  3869  000034                     USBConfigureEndpoint@handle:
  3870                           	opt stack 0
  3871  000034                     i2USBStallEndpoint@p:
  3872                           	opt stack 0
  3873  000034                     i2memcpy@d:
  3874                           	opt stack 0
  3875  000034                     i2memset@p:
  3876                           	opt stack 0
  3877                           
  3878                           ; 2 bytes @ 0x6
  3879  000034                     	ds	2
  3880  000036                     USBEnableEndpoint@options:
  3881                           	opt stack 0
  3882  000036                     i2USBDeviceInit@i:
  3883                           	opt stack 0
  3884  000036                     i2USBTransferOnePacket@ep:
  3885                           	opt stack 0
  3886  000036                     i2memcpy@s:
  3887                           	opt stack 0
  3888                           
  3889                           ; 2 bytes @ 0x8
  3890  000036                     	ds	1
  3891  000037                     USBEnableEndpoint@p:
  3892                           	opt stack 0
  3893  000037                     i2USBTransferOnePacket@handle:
  3894                           	opt stack 0
  3895                           
  3896                           ; 2 bytes @ 0x9
  3897  000037                     	ds	1
  3898  000038                     i2memcpy@tmp:
  3899                           	opt stack 0
  3900                           
  3901                           ; 1 bytes @ 0xA
  3902  000038                     	ds	1
  3903  000039                     ??_USBMSDInit:
  3904  000039                     USBEnableEndpoint@ep:
  3905                           	opt stack 0
  3906  000039                     _USBCheckMSDRequest$2643:
  3907                           	opt stack 0
  3908  000039                     MSDTransferTerminated@handle:
  3909                           	opt stack 0
  3910                           
  3911                           ; 2 bytes @ 0xB
  3912  000039                     	ds	1
  3913  00003A                     
  3914                           ; 1 bytes @ 0xC
  3915  00003A                     	ds	1
  3916  00003B                     _USBCheckMSDRequest$2644:
  3917                           	opt stack 0
  3918  00003B                     _MSDTransferTerminated$2732:
  3919                           	opt stack 0
  3920                           
  3921                           ; 2 bytes @ 0xD
  3922  00003B                     	ds	1
  3923  00003C                     
  3924                           ; 1 bytes @ 0xE
  3925  00003C                     	ds	1
  3926  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3927                           	opt stack 0
  3928                           
  3929                           ; 2 bytes @ 0xF
  3930  00003D                     	ds	2
  3931  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3932                           	opt stack 0
  3933                           
  3934                           ; 2 bytes @ 0x11
  3935  00003F                     	ds	2
  3936  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3937                           	opt stack 0
  3938                           
  3939                           ; 2 bytes @ 0x13
  3940  000041                     	ds	2
  3941  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3942                           
  3943                           ; 1 bytes @ 0x15
  3944  000043                     	ds	2
  3945  000045                     ??_USBStdFeatureReqHandler:
  3946  000045                     USBStdSetCfgHandler@i:
  3947                           	opt stack 0
  3948                           
  3949                           ; 1 bytes @ 0x17
  3950  000045                     	ds	1
  3951  000046                     USBStdFeatureReqHandler@pUEP:
  3952                           	opt stack 0
  3953                           
  3954                           ; 2 bytes @ 0x18
  3955  000046                     	ds	2
  3956  000048                     USBStdFeatureReqHandler@current_ep_data:
  3957                           	opt stack 0
  3958                           
  3959                           ; 1 bytes @ 0x1A
  3960  000048                     	ds	1
  3961  000049                     USBStdFeatureReqHandler@p:
  3962                           	opt stack 0
  3963                           
  3964                           ; 2 bytes @ 0x1B
  3965  000049                     	ds	2
  3966  00004B                     ??_USBCtrlEPService:
  3967  00004B                     
  3968                           ; 1 bytes @ 0x1D
  3969  00004B                     	ds	1
  3970  00004C                     USBDeviceTasks@i:
  3971                           	opt stack 0
  3972                           
  3973                           ; 1 bytes @ 0x1E
  3974  00004C                     	ds	1
  3975  00004D                     ??_SYS_InterruptHigh:
  3976                           
  3977                           ; 1 bytes @ 0x1F
  3978  00004D                     	ds	14
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           postinc0	equ	0xFEE
  3984                           wreg	equ	0xFE8
  3985                           postdec1	equ	0xFE5
  3986                           fsr1h	equ	0xFE2
  3987                           fsr1l	equ	0xFE1
  3988                           
  3989 ;;
  3990 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3991 ;;
  3992 ;; *************** function _main *****************
  3993 ;; Defined at:
  3994 ;;		line 50 in file "main.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels required when called:   22
  4014 ;; This function calls:
  4015 ;;		_APP_DeviceCustomHIDTasks
  4016 ;;		_APP_DeviceMSDTasks
  4017 ;;		_SYSTEM_Initialize
  4018 ;;		_USBDeviceAttach
  4019 ;;		_USBDeviceInit
  4020 ;;		_adc_calculate_temperature
  4021 ;;		_adc_calibrate
  4022 ;;		_adc_read
  4023 ;;		_buck_get_mode
  4024 ;;		_buck_operate
  4025 ;;		_display_prepare
  4026 ;;		_display_update
  4027 ;;		_i2c_adc_read
  4028 ;;		_i2c_adc_start
  4029 ;;		_i2c_eeprom_tasks
  4030 ;;		_log_collect_data
  4031 ;;		_log_get_number_of_samples
  4032 ;;		_log_start_new
  4033 ;;		_log_write_to_disk
  4034 ;;		_system_calculate_input_current
  4035 ;;		_system_calculate_input_voltage
  4036 ;;		_system_calculate_output_current
  4037 ;;		_system_calculate_output_voltage
  4038 ;;		_system_init
  4039 ;;		_system_output_off
  4040 ;;		_ui_get_status
  4041 ;;		_ui_run
  4042 ;; This function is called by:
  4043 ;;		Startup code after reset
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text0
  4048  00C468                     __ptext0:
  4049                           	opt stack 0
  4050  00C468                     _main:
  4051                           	opt stack 9
  4052                           
  4053                           ;main.c: 55: system_init();
  4054                           
  4055                           ;incstack = 0
  4056  00C468  ECFB  F07C         	call	_system_init	;wreg free
  4057                           
  4058                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4059  00C46C  0E00               	movlw	0
  4060  00C46E  ECF6  F094         	call	_SYSTEM_Initialize
  4061                           
  4062                           ;main.c: 59: USBDeviceInit();
  4063  00C472  EC2F  F073         	call	_USBDeviceInit	;wreg free
  4064                           
  4065                           ;main.c: 60: USBDeviceAttach();
  4066  00C476  ECBA  F09A         	call	_USBDeviceAttach	;wreg free
  4067  00C47A                     
  4068                           ;main.c: 63: {;main.c: 86: APP_DeviceMSDTasks();
  4069  00C47A  ECAC  F09E         	call	_APP_DeviceMSDTasks	;wreg free
  4070                           
  4071                           ;main.c: 88: if(!os.done)
  4072  00C47E  0102               	movlb	2	; () banked
  4073  00C480  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4074  00C482  A4D8               	btfss	status,2,c
  4075  00C484  D7FA               	goto	l899
  4076                           
  4077                           ; BSR set to: 2
  4078  00C486  0004               	clrwdt		;# 
  4079                           
  4080                           ;main.c: 96: if(os.output_voltage<12000)
  4081  00C488  0102               	movlb	2	; () banked
  4082  00C48A  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4083  00C48C  D006               	goto	u22720
  4084  00C48E  0EE0               	movlw	224
  4085  00C490  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4086  00C492  0E2E               	movlw	46
  4087  00C494  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4088  00C496  B0D8               	btfsc	status,0,c
  4089  00C498  D003               	goto	l901
  4090  00C49A                     u22720:
  4091                           
  4092                           ; BSR set to: 2
  4093                           ;main.c: 97: {;main.c: 98: system_output_off(OUTPUT_USB);
  4094  00C49A  0E10               	movlw	16
  4095  00C49C  ECD5  F095         	call	_system_output_off
  4096  00C4A0                     l901:
  4097                           
  4098                           ;main.c: 99: };main.c: 100: if(os.output_voltage<-1)
  4099  00C4A0  0102               	movlb	2	; () banked
  4100  00C4A2  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4101  00C4A4  D011               	goto	l902
  4102  00C4A6  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4103  00C4A8  0EFF               	movlw	255
  4104  00C4AA  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4105  00C4AC  B0D8               	btfsc	status,0,c
  4106  00C4AE  D00C               	goto	l902
  4107                           
  4108                           ; BSR set to: 2
  4109                           ;main.c: 101: {;main.c: 102: system_output_off(OUTPUT_1);
  4110  00C4B0  0E01               	movlw	1
  4111  00C4B2  ECD5  F095         	call	_system_output_off
  4112                           
  4113                           ;main.c: 103: system_output_off(OUTPUT_2);
  4114  00C4B6  0E02               	movlw	2
  4115  00C4B8  ECD5  F095         	call	_system_output_off
  4116                           
  4117                           ;main.c: 104: system_output_off(OUTPUT_3);
  4118  00C4BC  0E04               	movlw	4
  4119  00C4BE  ECD5  F095         	call	_system_output_off
  4120                           
  4121                           ;main.c: 105: system_output_off(OUTPUT_4);
  4122  00C4C2  0E08               	movlw	8
  4123  00C4C4  ECD5  F095         	call	_system_output_off
  4124  00C4C8                     l902:
  4125                           
  4126                           ;main.c: 106: };main.c: 109: i2c_eeprom_tasks();
  4127  00C4C8  EC7B  F090         	call	_i2c_eeprom_tasks	;wreg free
  4128                           
  4129                           ;main.c: 112: ui_run();
  4130  00C4CC  EC6B  F080         	call	_ui_run	;wreg free
  4131                           
  4132                           ;main.c: 115: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4133  00C4D0  0E00               	movlw	0
  4134  00C4D2  EC4B  F08C         	call	_adc_read
  4135  00C4D6  0100               	movlb	0	; () banked
  4136  00C4D8  5160               	movf	?_adc_read& (0+255),w,b
  4137  00C4DA  0102               	movlb	2	; () banked
  4138  00C4DC  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4139  00C4DE  0100               	movlb	0	; () banked
  4140  00C4E0  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4141  00C4E2  0102               	movlb	2	; () banked
  4142  00C4E4  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4143                           
  4144                           ;main.c: 116: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _1);
  4145  00C4E6  0E01               	movlw	1
  4146  00C4E8  EC4B  F08C         	call	_adc_read
  4147  00C4EC  0100               	movlb	0	; () banked
  4148  00C4EE  5160               	movf	?_adc_read& (0+255),w,b
  4149  00C4F0  0102               	movlb	2	; () banked
  4150  00C4F2  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4151  00C4F4  0100               	movlb	0	; () banked
  4152  00C4F6  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4153  00C4F8  0102               	movlb	2	; () banked
  4154  00C4FA  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4155                           
  4156                           ;main.c: 117: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _2);
  4157  00C4FC  0E02               	movlw	2
  4158  00C4FE  EC4B  F08C         	call	_adc_read
  4159  00C502  0100               	movlb	0	; () banked
  4160  00C504  5160               	movf	?_adc_read& (0+255),w,b
  4161  00C506  0102               	movlb	2	; () banked
  4162  00C508  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4163  00C50A  0100               	movlb	0	; () banked
  4164  00C50C  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4165  00C50E  0102               	movlb	2	; () banked
  4166  00C510  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4167                           
  4168                           ;main.c: 120: switch(os.timeSlot&0b00001111)
  4169  00C512  D101               	goto	l903
  4170  00C514                     
  4171                           ;main.c: 123: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4172                           
  4173                           ; BSR set to: 2
  4174  00C514  0E01               	movlw	1
  4175  00C516  0100               	movlb	0	; () banked
  4176  00C518  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4177  00C51A  0E00               	movlw	0
  4178  00C51C  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4179  00C51E  0E00               	movlw	0
  4180  00C520  ECE4  F099         	call	_i2c_adc_start
  4181                           
  4182                           ;main.c: 124: break;
  4183  00C524  D12A               	goto	l905
  4184  00C526                     
  4185                           ;main.c: 127: APP_DeviceCustomHIDTasks();
  4186  00C526  ECE2  F05E         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4187                           
  4188                           ;main.c: 131: break;
  4189  00C52A  D127               	goto	l905
  4190  00C52C                     
  4191                           ;main.c: 135: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4192  00C52C  ECA8  F096         	call	_i2c_adc_read	;wreg free
  4193  00C530  0102               	movlb	2	; () banked
  4194  00C532  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4195  00C534  0B0F               	andlw	15
  4196  00C536  0B03               	andlw	3
  4197  00C538  0100               	movlb	0	; () banked
  4198  00C53A  6FD5               	movwf	??_main& (0+255),b
  4199  00C53C  6BD6               	clrf	(??_main+1)& (0+255),b
  4200  00C53E  90D8               	bcf	status,0,c
  4201  00C540  37D5               	rlcf	??_main& (0+255),f,b
  4202  00C542  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4203  00C544  0E1F               	movlw	low (_os+31)
  4204  00C546  25D5               	addwf	??_main& (0+255),w,b
  4205  00C548  6ED9               	movwf	fsr2l,c
  4206  00C54A  0E02               	movlw	high (_os+31)
  4207  00C54C  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4208  00C54E  6EDA               	movwf	fsr2h,c
  4209  00C550  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4210  00C554  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;main.c: 136: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4214  00C558  0E01               	movlw	1
  4215  00C55A  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4216  00C55C  0E00               	movlw	0
  4217  00C55E  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4218  00C560  0E03               	movlw	3
  4219  00C562  ECE4  F099         	call	_i2c_adc_start
  4220                           
  4221                           ;main.c: 137: system_calculate_output_voltage();
  4222  00C566  ECC9  F081         	call	_system_calculate_output_voltage	;wreg free
  4223                           
  4224                           ;main.c: 138: break;
  4225  00C56A  D107               	goto	l905
  4226  00C56C                     
  4227                           ;main.c: 141: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4228  00C56C  EC69  F09F         	call	_ui_get_status	;wreg free
  4229  00C570  0A05               	xorlw	5
  4230  00C572  A4D8               	btfss	status,2,c
  4231  00C574  D102               	goto	l905
  4232                           
  4233                           ;main.c: 142: {;main.c: 143: display_prepare(os.display_mode);
  4234  00C576  0102               	movlb	2	; () banked
  4235  00C578  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4236  00C57A  EC95  F08D         	call	_display_prepare
  4237                           
  4238                           ;main.c: 144: };main.c: 145: break;
  4239  00C57E  D0FD               	goto	l905
  4240  00C580                     
  4241                           ;main.c: 148: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4242  00C580  EC69  F09F         	call	_ui_get_status	;wreg free
  4243                           
  4244                           ;main.c: 151: };main.c: 152: break;
  4245                           
  4246                           ;main.c: 149: {
  4247  00C584  D0FA               	goto	l905
  4248  00C586                     
  4249                           ;main.c: 155: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4250  00C586  ECA8  F096         	call	_i2c_adc_read	;wreg free
  4251  00C58A  0102               	movlb	2	; () banked
  4252  00C58C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4253  00C58E  0B0F               	andlw	15
  4254  00C590  0B03               	andlw	3
  4255  00C592  0100               	movlb	0	; () banked
  4256  00C594  6FD5               	movwf	??_main& (0+255),b
  4257  00C596  6BD6               	clrf	(??_main+1)& (0+255),b
  4258  00C598  90D8               	bcf	status,0,c
  4259  00C59A  37D5               	rlcf	??_main& (0+255),f,b
  4260  00C59C  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4261  00C59E  0E0A               	movlw	low (_os+10)
  4262  00C5A0  25D5               	addwf	??_main& (0+255),w,b
  4263  00C5A2  6ED9               	movwf	fsr2l,c
  4264  00C5A4  0E02               	movlw	high (_os+10)
  4265  00C5A6  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4266  00C5A8  6EDA               	movwf	fsr2h,c
  4267  00C5AA  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4268  00C5AE  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4269                           
  4270                           ;main.c: 157: {;main.c: 158: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14
      +                          BIT, I2C_ADC_GAIN_1);
  4271                           
  4272                           ; BSR set to: 0
  4273                           
  4274                           ;main.c: 156: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  4275  00C5B2  0E01               	movlw	1
  4276  00C5B4  0100               	movlb	0	; () banked
  4277  00C5B6  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4278  00C5B8  0E00               	movlw	0
  4279  00C5BA  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4280  00C5BC  0E01               	movlw	1
  4281  00C5BE  ECE4  F099         	call	_i2c_adc_start
  4282                           
  4283                           ;main.c: 159: };main.c: 160: system_calculate_input_voltage();
  4284  00C5C2  EC3A  F082         	call	_system_calculate_input_voltage	;wreg free
  4285                           
  4286                           ;main.c: 161: break;
  4287  00C5C6  D0D9               	goto	l905
  4288  00C5C8                     
  4289                           ;main.c: 164: APP_DeviceCustomHIDTasks();
  4290  00C5C8  ECE2  F05E         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4291                           
  4292                           ;main.c: 165: break;
  4293  00C5CC  D0D6               	goto	l905
  4294  00C5CE                     u22760:
  4295                           
  4296                           ;main.c: 169: {;main.c: 170: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_ad
      +                          c_read();
  4297  00C5CE  ECA8  F096         	call	_i2c_adc_read	;wreg free
  4298  00C5D2  0102               	movlb	2	; () banked
  4299  00C5D4  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4300  00C5D6  0B0F               	andlw	15
  4301  00C5D8  0B03               	andlw	3
  4302  00C5DA  0100               	movlb	0	; () banked
  4303  00C5DC  6FD5               	movwf	??_main& (0+255),b
  4304  00C5DE  6BD6               	clrf	(??_main+1)& (0+255),b
  4305  00C5E0  90D8               	bcf	status,0,c
  4306  00C5E2  37D5               	rlcf	??_main& (0+255),f,b
  4307  00C5E4  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4308  00C5E6  0E29               	movlw	low (_os+41)
  4309  00C5E8  25D5               	addwf	??_main& (0+255),w,b
  4310  00C5EA  6ED9               	movwf	fsr2l,c
  4311  00C5EC  0E02               	movlw	high (_os+41)
  4312  00C5EE  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4313  00C5F0  6EDA               	movwf	fsr2h,c
  4314  00C5F2  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4315  00C5F6  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;main.c: 171: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4319  00C5FA  0E01               	movlw	1
  4320  00C5FC  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4321  00C5FE  0E00               	movlw	0
  4322  00C600  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4323  00C602  0E02               	movlw	2
  4324  00C604  ECE4  F099         	call	_i2c_adc_start
  4325                           
  4326                           ;main.c: 172: system_calculate_output_current();
  4327  00C608  EC20  F078         	call	_system_calculate_output_current	;wreg free
  4328                           
  4329                           ;main.c: 173: };main.c: 174: break;
  4330  00C60C  D0B6               	goto	l905
  4331  00C60E                     
  4332                           ;main.c: 177: APP_DeviceCustomHIDTasks();
  4333  00C60E  ECE2  F05E         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4334                           
  4335                           ;main.c: 178: log_collect_data();
  4336  00C612  ECB3  F066         	call	_log_collect_data	;wreg free
  4337                           
  4338                           ;main.c: 179: if(log_get_number_of_samples() == 30)
  4339  00C616  EC40  F09F         	call	_log_get_number_of_samples	;wreg free
  4340  00C61A  0E1E               	movlw	30
  4341  00C61C  0100               	movlb	0	; () banked
  4342  00C61E  1960               	xorwf	?_log_get_number_of_samples& (0+255),w,b
  4343  00C620  1161               	iorwf	(?_log_get_number_of_samples+1)& (0+255),w,b
  4344  00C622  A4D8               	btfss	status,2,c
  4345  00C624  D0AA               	goto	l905
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;main.c: 180: {;main.c: 181: log_write_to_disk();
  4349  00C626  EC07  F090         	call	_log_write_to_disk	;wreg free
  4350                           
  4351                           ;main.c: 182: log_start_new();
  4352  00C62A  EC19  F083         	call	_log_start_new	;wreg free
  4353                           
  4354                           ;main.c: 183: };main.c: 184: break;
  4355  00C62E  D0A5               	goto	l905
  4356  00C630                     u22780:
  4357                           
  4358                           ;main.c: 188: {;main.c: 189: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc
      +                          _read();
  4359  00C630  ECA8  F096         	call	_i2c_adc_read	;wreg free
  4360  00C634  0102               	movlb	2	; () banked
  4361  00C636  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4362  00C638  0B0F               	andlw	15
  4363  00C63A  0B03               	andlw	3
  4364  00C63C  0100               	movlb	0	; () banked
  4365  00C63E  6FD5               	movwf	??_main& (0+255),b
  4366  00C640  6BD6               	clrf	(??_main+1)& (0+255),b
  4367  00C642  90D8               	bcf	status,0,c
  4368  00C644  37D5               	rlcf	??_main& (0+255),f,b
  4369  00C646  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4370  00C648  0E14               	movlw	low (_os+20)
  4371  00C64A  25D5               	addwf	??_main& (0+255),w,b
  4372  00C64C  6ED9               	movwf	fsr2l,c
  4373  00C64E  0E02               	movlw	high (_os+20)
  4374  00C650  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4375  00C652  6EDA               	movwf	fsr2h,c
  4376  00C654  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4377  00C658  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4378                           
  4379                           ;main.c: 190: system_calculate_input_current();
  4380  00C65C  ECB2  F078         	call	_system_calculate_input_current	;wreg free
  4381                           
  4382                           ;main.c: 191: };main.c: 192: break;
  4383  00C660  D08C               	goto	l905
  4384  00C662                     
  4385                           ;main.c: 195: buck_operate();
  4386  00C662  EC12  F094         	call	_buck_operate	;wreg free
  4387                           
  4388                           ;main.c: 196: break;
  4389  00C666  D089               	goto	l905
  4390  00C668                     
  4391                           ;main.c: 200: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  4392  00C668  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  4393  00C66C  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  4394  00C670  0E04               	movlw	4
  4395  00C672  0100               	movlb	0	; () banked
  4396  00C674  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4397  00C676  EC77  F07F         	call	_adc_calculate_temperature	;wreg free
  4398  00C67A  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  4399  00C67E  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  4400                           
  4401                           ;main.c: 201: os.temperature_onboard_adc = 0;
  4402  00C682  0E00               	movlw	0
  4403  00C684  0102               	movlb	2	; () banked
  4404  00C686  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  4405  00C688  0E00               	movlw	0
  4406  00C68A  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  4407                           
  4408                           ; BSR set to: 2
  4409                           ;main.c: 202: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  4410  00C68C  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  4411  00C690  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  4412  00C694  0E05               	movlw	5
  4413  00C696  0100               	movlb	0	; () banked
  4414  00C698  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4415  00C69A  EC77  F07F         	call	_adc_calculate_temperature	;wreg free
  4416  00C69E  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  4417  00C6A2  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  4418                           
  4419                           ;main.c: 203: os.temperature_external_1_adc = 0;
  4420  00C6A6  0E00               	movlw	0
  4421  00C6A8  0102               	movlb	2	; () banked
  4422  00C6AA  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  4423  00C6AC  0E00               	movlw	0
  4424  00C6AE  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  4425                           
  4426                           ; BSR set to: 2
  4427                           ;main.c: 204: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  4428  00C6B0  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  4429  00C6B4  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  4430  00C6B8  0E06               	movlw	6
  4431  00C6BA  0100               	movlb	0	; () banked
  4432  00C6BC  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4433  00C6BE  EC77  F07F         	call	_adc_calculate_temperature	;wreg free
  4434  00C6C2  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  4435  00C6C6  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  4436                           
  4437                           ;main.c: 205: os.temperature_external_2_adc = 0;
  4438  00C6CA  0E00               	movlw	0
  4439  00C6CC  0102               	movlb	2	; () banked
  4440  00C6CE  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  4441  00C6D0  0E00               	movlw	0
  4442  00C6D2  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  4443                           
  4444                           ; BSR set to: 2
  4445                           ;main.c: 206: adc_calibrate();
  4446  00C6D4  EC34  F09F         	call	_adc_calibrate	;wreg free
  4447                           
  4448                           ;main.c: 208: if(os.temperature_onboard>3000)
  4449  00C6D8  0102               	movlb	2	; () banked
  4450  00C6DA  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4451  00C6DC  D008               	goto	l929
  4452  00C6DE  0EB9               	movlw	185
  4453  00C6E0  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4454  00C6E2  0E0B               	movlw	11
  4455  00C6E4  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4456  00C6E6  A0D8               	btfss	status,0,c
  4457  00C6E8  D002               	goto	l929
  4458                           
  4459                           ; BSR set to: 2
  4460                           ;main.c: 209: {;main.c: 210: LATDbits.LD1 = 1;
  4461  00C6EA  828C               	bsf	3980,1,c	;volatile
  4462                           
  4463                           ;main.c: 211: }
  4464  00C6EC  D008               	goto	l931
  4465  00C6EE                     l929:
  4466                           
  4467                           ; BSR set to: 2
  4468                           ;main.c: 212: else if(os.temperature_onboard<2500)
  4469                           
  4470                           ; BSR set to: 2
  4471  00C6EE  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4472  00C6F0  D005               	goto	u22800
  4473  00C6F2  0EC4               	movlw	196
  4474  00C6F4  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4475  00C6F6  0E09               	movlw	9
  4476  00C6F8  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4477  00C6FA  A0D8               	btfss	status,0,c
  4478  00C6FC                     u22800:
  4479                           
  4480                           ; BSR set to: 2
  4481                           ;main.c: 213: {;main.c: 214: LATDbits.LD1 = 0;
  4482  00C6FC  928C               	bcf	3980,1,c	;volatile
  4483  00C6FE                     l931:
  4484                           
  4485                           ; BSR set to: 2
  4486                           ;main.c: 215: };main.c: 216: display_prepare(os.display_mode);
  4487                           
  4488                           ; BSR set to: 2
  4489                           
  4490                           ; BSR set to: 2
  4491  00C6FE  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4492  00C700  EC95  F08D         	call	_display_prepare
  4493                           
  4494                           ;main.c: 217: break;
  4495  00C704  D03A               	goto	l905
  4496  00C706                     
  4497                           ;main.c: 220: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4498  00C706  EC69  F09F         	call	_ui_get_status	;wreg free
  4499  00C70A  0A05               	xorlw	5
  4500  00C70C  A4D8               	btfss	status,2,c
  4501  00C70E  D035               	goto	l905
  4502                           
  4503                           ;main.c: 221: {;main.c: 222: display_update();
  4504  00C710  EC50  F08F         	call	_display_update	;wreg free
  4505                           
  4506                           ;main.c: 225: }
  4507                           
  4508                           ;main.c: 223: };main.c: 224: break;
  4509  00C714  D032               	goto	l905
  4510  00C716                     l903:
  4511  00C716  0102               	movlb	2	; () banked
  4512  00C718  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  4513  00C71A  0B0F               	andlw	15
  4514  00C71C  0100               	movlb	0	; () banked
  4515  00C71E  6FD5               	movwf	??_main& (0+255),b
  4516  00C720  6BD6               	clrf	(??_main+1)& (0+255),b
  4517                           
  4518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4519                           ; Switch size 1, requested type "space"
  4520                           ; Number of cases is 1, Range of values is 0 to 0
  4521                           ; switch strategies available:
  4522                           ; Name         Instructions Cycles
  4523                           ; simple_byte            4     3 (average)
  4524                           ;	Chosen strategy is simple_byte
  4525  00C722  51D6               	movf	(??_main+1)& (0+255),w,b
  4526  00C724  0A00               	xorlw	0	; case 0
  4527  00C726  A4D8               	btfss	status,2,c
  4528  00C728  D028               	goto	l905
  4529                           
  4530                           ; BSR set to: 0
  4531                           ; Switch size 1, requested type "space"
  4532                           ; Number of cases is 13, Range of values is 0 to 15
  4533                           ; switch strategies available:
  4534                           ; Name         Instructions Cycles
  4535                           ; simple_byte           40    21 (average)
  4536                           ;	Chosen strategy is simple_byte
  4537  00C72A  51D5               	movf	??_main& (0+255),w,b
  4538  00C72C  0A00               	xorlw	0	; case 0
  4539  00C72E  B4D8               	btfsc	status,2,c
  4540  00C730  D6F1               	goto	l904
  4541  00C732  0A01               	xorlw	1	; case 1
  4542  00C734  B4D8               	btfsc	status,2,c
  4543  00C736  D6F7               	goto	l906
  4544  00C738  0A02               	xorlw	2	; case 3
  4545  00C73A  B4D8               	btfsc	status,2,c
  4546  00C73C  D6F7               	goto	l907
  4547  00C73E  0A07               	xorlw	7	; case 4
  4548  00C740  B4D8               	btfsc	status,2,c
  4549  00C742  D714               	goto	l908
  4550  00C744  0A01               	xorlw	1	; case 5
  4551  00C746  B4D8               	btfsc	status,2,c
  4552  00C748  D71B               	goto	l910
  4553  00C74A  0A03               	xorlw	3	; case 6
  4554  00C74C  B4D8               	btfsc	status,2,c
  4555  00C74E  D71B               	goto	l912
  4556  00C750  0A0E               	xorlw	14	; case 8
  4557  00C752  B4D8               	btfsc	status,2,c
  4558  00C754  D739               	goto	l916
  4559  00C756  0A01               	xorlw	1	; case 9
  4560  00C758  B4D8               	btfsc	status,2,c
  4561  00C75A  D739               	goto	u22760
  4562  00C75C  0A02               	xorlw	2	; case 11
  4563  00C75E  B4D8               	btfsc	status,2,c
  4564  00C760  D756               	goto	l921
  4565  00C762  0A07               	xorlw	7	; case 12
  4566  00C764  B4D8               	btfsc	status,2,c
  4567  00C766  D764               	goto	u22780
  4568  00C768  0A01               	xorlw	1	; case 13
  4569  00C76A  B4D8               	btfsc	status,2,c
  4570  00C76C  D77A               	goto	l927
  4571  00C76E  0A03               	xorlw	3	; case 14
  4572  00C770  B4D8               	btfsc	status,2,c
  4573  00C772  D77A               	goto	l928
  4574  00C774  0A01               	xorlw	1	; case 15
  4575  00C776  B4D8               	btfsc	status,2,c
  4576  00C778  D7C6               	goto	l932
  4577  00C77A                     l905:
  4578                           
  4579                           ;main.c: 226: os.done = 1;
  4580                           
  4581                           ; BSR set to: 0
  4582  00C77A  0E01               	movlw	1
  4583  00C77C  0102               	movlb	2	; () banked
  4584  00C77E  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  4585                           
  4586                           ; BSR set to: 2
  4587                           
  4588                           ; BSR set to: 2
  4589  00C780  D67C               	goto	l899
  4590  00C782                     __end_of_main:
  4591                           	opt stack 0
  4592                           tblptru	equ	0xFF8
  4593                           tblptrh	equ	0xFF7
  4594                           tblptrl	equ	0xFF6
  4595                           tablat	equ	0xFF5
  4596                           postinc0	equ	0xFEE
  4597                           wreg	equ	0xFE8
  4598                           postdec1	equ	0xFE5
  4599                           fsr1h	equ	0xFE2
  4600                           fsr1l	equ	0xFE1
  4601                           postinc2	equ	0xFDE
  4602                           postdec2	equ	0xFDD
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function _ui_run *****************
  4608 ;; Defined at:
  4609 ;;		line 334 in file "ui.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:   15
  4630 ;; This function calls:
  4631 ;;		__ui_encoder
  4632 ;;		_i2c_digipot_backlight
  4633 ;;		_i2c_digipot_reset_off
  4634 ;;		_i2c_digipot_reset_on
  4635 ;;		_i2c_display_send_init_sequence
  4636 ;;		_system_encoder_disable
  4637 ;;		_system_encoder_enable
  4638 ;;		_ui_init
  4639 ;; This function is called by:
  4640 ;;		_main
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text1
  4645  0100D6                     __ptext1:
  4646                           	opt stack 0
  4647  0100D6                     _ui_run:
  4648                           	opt stack 15
  4649                           
  4650                           ;ui.c: 336: switch(userInterfaceStatus)
  4651                           
  4652                           ; BSR set to: 2
  4653                           ;incstack = 0
  4654  0100D6  D060               	goto	l1843
  4655  0100D8                     
  4656                           ;ui.c: 339: if (os.buttonCount!=0)
  4657  0100D8  0102               	movlb	2	; () banked
  4658  0100DA  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4659  0100DC  B4D8               	btfsc	status,2,c
  4660  0100DE  0012               	return	
  4661                           
  4662                           ; BSR set to: 2
  4663                           ;ui.c: 340: {;ui.c: 341: ui_init();
  4664  0100E0  ECA3  F09E         	call	_ui_init	;wreg free
  4665                           
  4666                           ;ui.c: 342: os.buttonCount = 0;
  4667  0100E4  0E00               	movlw	0
  4668  0100E6  0102               	movlb	2	; () banked
  4669  0100E8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  4670                           
  4671                           ; BSR set to: 2
  4672                           ;ui.c: 343: };ui.c: 344: break;
  4673  0100EA  0012               	return	
  4674  0100EC                     l1847:
  4675                           
  4676                           ; BSR set to: 1
  4677                           ;ui.c: 353: LATDbits.LD0 = 0;
  4678  0100EC  908C               	bcf	3980,0,c	;volatile
  4679                           
  4680                           ; BSR set to: 1
  4681                           ;ui.c: 355: system_ui_inactive_count = 0;
  4682  0100EE  0E00               	movlw	0
  4683  0100F0  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4684  0100F2  0E00               	movlw	0
  4685  0100F4  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4686                           
  4687                           ;ui.c: 356: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4688  0100F6  0E02               	movlw	2
  4689  0100F8  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4690                           
  4691                           ;ui.c: 357: break;
  4692  0100FA  0012               	return	
  4693  0100FC                     
  4694                           ; BSR set to: 1
  4695                           ;ui.c: 361: i2c_digipot_reset_on();
  4696                           
  4697                           ; BSR set to: 1
  4698  0100FC  EC4D  F09C         	call	_i2c_digipot_reset_on	;wreg free
  4699                           
  4700                           ;ui.c: 363: system_ui_inactive_count = 0;
  4701  010100  0E00               	movlw	0
  4702  010102  0101               	movlb	1	; () banked
  4703  010104  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4704  010106  0E00               	movlw	0
  4705  010108  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4706                           
  4707                           ; BSR set to: 1
  4708                           ;ui.c: 364: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4709  01010A  0E03               	movlw	3
  4710  01010C  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4711                           
  4712                           ;ui.c: 365: break;
  4713  01010E  0012               	return	
  4714  010110                     
  4715                           ; BSR set to: 1
  4716                           ;ui.c: 368: ++system_ui_inactive_count;
  4717                           
  4718                           ; BSR set to: 1
  4719  010110  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4720  010112  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4721                           
  4722                           ; BSR set to: 1
  4723                           ;ui.c: 370: if (system_ui_inactive_count>3)
  4724  010114  51E8               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4725  010116  E104               	bnz	u22210
  4726  010118  0E04               	movlw	4
  4727  01011A  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4728  01011C  A0D8               	btfss	status,0,c
  4729  01011E  0012               	return	
  4730  010120                     u22210:
  4731                           
  4732                           ; BSR set to: 1
  4733                           ;ui.c: 371: {;ui.c: 372: i2c_digipot_reset_off();
  4734  010120  EC60  F09C         	call	_i2c_digipot_reset_off	;wreg free
  4735                           
  4736                           ;ui.c: 373: system_ui_inactive_count = 0;
  4737  010124  0E00               	movlw	0
  4738  010126  0101               	movlb	1	; () banked
  4739  010128  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4740  01012A  0E00               	movlw	0
  4741  01012C  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4742                           
  4743                           ; BSR set to: 1
  4744                           ;ui.c: 374: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4745  01012E  0E04               	movlw	4
  4746  010130  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;ui.c: 375: };ui.c: 376: break;
  4750  010132  0012               	return	
  4751  010134                     
  4752                           ; BSR set to: 1
  4753                           ;ui.c: 380: i2c_display_send_init_sequence();
  4754                           
  4755                           ; BSR set to: 1
  4756  010134  EC1B  F09B         	call	_i2c_display_send_init_sequence	;wreg free
  4757                           
  4758                           ;ui.c: 382: i2c_digipot_backlight(150);
  4759  010138  0E96               	movlw	150
  4760  01013A  EC77  F09B         	call	_i2c_digipot_backlight
  4761                           
  4762                           ;ui.c: 384: system_encoder_enable();
  4763  01013E  ECB5  F09E         	call	_system_encoder_enable	;wreg free
  4764                           
  4765                           ;ui.c: 386: system_ui_inactive_count = 0;
  4766  010142  0E00               	movlw	0
  4767  010144  0101               	movlb	1	; () banked
  4768  010146  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4769  010148  0E00               	movlw	0
  4770  01014A  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4771                           
  4772                           ; BSR set to: 1
  4773                           ;ui.c: 387: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4774  01014C  0E05               	movlw	5
  4775  01014E  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4776                           
  4777                           ;ui.c: 388: break;
  4778  010150  0012               	return	
  4779  010152                     
  4780                           ; BSR set to: 1
  4781                           ;ui.c: 391: if (os.encoderCount==0 && os.buttonCount==0)
  4782                           
  4783                           ; BSR set to: 1
  4784  010152  0102               	movlb	2	; () banked
  4785  010154  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  4786  010156  A4D8               	btfss	status,2,c
  4787  010158  D017               	goto	l1853
  4788                           
  4789                           ; BSR set to: 2
  4790  01015A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4791  01015C  A4D8               	btfss	status,2,c
  4792  01015E  D014               	goto	l1853
  4793                           
  4794                           ; BSR set to: 2
  4795                           ;ui.c: 392: {;ui.c: 393: ++system_ui_inactive_count;
  4796  010160  0101               	movlb	1	; () banked
  4797  010162  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4798  010164  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4799                           
  4800                           ; BSR set to: 1
  4801                           ;ui.c: 394: if(system_ui_inactive_count > 2000)
  4802  010166  0ED1               	movlw	209
  4803  010168  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4804  01016A  0E07               	movlw	7
  4805  01016C  59E8               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  4806  01016E  A0D8               	btfss	status,0,c
  4807  010170  0012               	return	
  4808                           
  4809                           ; BSR set to: 1
  4810                           ;ui.c: 395: {;ui.c: 397: system_encoder_disable();
  4811  010172  EC66  F09F         	call	_system_encoder_disable	;wreg free
  4812                           
  4813                           ;ui.c: 399: LATDbits.LD0 = 1;
  4814  010176  808C               	bsf	3980,0,c	;volatile
  4815                           
  4816                           ;ui.c: 402: system_ui_inactive_count = 0;
  4817  010178  0E00               	movlw	0
  4818  01017A  0101               	movlb	1	; () banked
  4819  01017C  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4820  01017E  0E00               	movlw	0
  4821  010180  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4822                           
  4823                           ; BSR set to: 1
  4824                           ;ui.c: 403: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  4825  010182  0E00               	movlw	0
  4826  010184  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4827                           
  4828                           ; BSR set to: 1
  4829                           ;ui.c: 404: };ui.c: 405: }
  4830  010186  0012               	return	
  4831  010188                     l1853:
  4832                           
  4833                           ;ui.c: 406: else;ui.c: 407: {;ui.c: 408: system_ui_inactive_count = 0;
  4834                           
  4835                           ; BSR set to: 1
  4836  010188  0E00               	movlw	0
  4837  01018A  0101               	movlb	1	; () banked
  4838  01018C  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4839  01018E  0E00               	movlw	0
  4840  010190  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4841                           
  4842                           ; BSR set to: 1
  4843                           ;ui.c: 409: _ui_encoder();
  4844  010192  EC58  F05B         	call	__ui_encoder	;wreg free
  4845                           
  4846                           ;ui.c: 412: }
  4847                           
  4848                           ;ui.c: 410: };ui.c: 411: break;
  4849  010196  0012               	return	
  4850  010198                     l1843:
  4851  010198  0101               	movlb	1	; () banked
  4852  01019A  51F3               	movf	_userInterfaceStatus& (0+255),w,b
  4853                           
  4854                           ; Switch size 1, requested type "space"
  4855                           ; Number of cases is 6, Range of values is 0 to 5
  4856                           ; switch strategies available:
  4857                           ; Name         Instructions Cycles
  4858                           ; simple_byte           19    10 (average)
  4859                           ;	Chosen strategy is simple_byte
  4860  01019C  0A00               	xorlw	0	; case 0
  4861  01019E  B4D8               	btfsc	status,2,c
  4862  0101A0  D79B               	goto	l1844
  4863  0101A2  0A01               	xorlw	1	; case 1
  4864  0101A4  B4D8               	btfsc	status,2,c
  4865  0101A6  D7A2               	goto	l1847
  4866  0101A8  0A03               	xorlw	3	; case 2
  4867  0101AA  B4D8               	btfsc	status,2,c
  4868  0101AC  D7A7               	goto	l1848
  4869  0101AE  0A01               	xorlw	1	; case 3
  4870  0101B0  B4D8               	btfsc	status,2,c
  4871  0101B2  D7AE               	goto	l1849
  4872  0101B4  0A07               	xorlw	7	; case 4
  4873  0101B6  B4D8               	btfsc	status,2,c
  4874  0101B8  D7BD               	goto	l1851
  4875  0101BA  0A01               	xorlw	1	; case 5
  4876  0101BC  A4D8               	btfss	status,2,c
  4877  0101BE  0012               	return	
  4878  0101C0  D7C8               	goto	l1852
  4879  0101C2                     __end_of_ui_run:
  4880                           	opt stack 0
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           postinc0	equ	0xFEE
  4886                           wreg	equ	0xFE8
  4887                           postdec1	equ	0xFE5
  4888                           fsr1h	equ	0xFE2
  4889                           fsr1l	equ	0xFE1
  4890                           postinc2	equ	0xFDE
  4891                           postdec2	equ	0xFDD
  4892                           fsr2h	equ	0xFDA
  4893                           fsr2l	equ	0xFD9
  4894                           status	equ	0xFD8
  4895                           
  4896 ;; *************** function _system_encoder_enable *****************
  4897 ;; Defined at:
  4898 ;;		line 198 in file "os.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:   10
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_ui_run
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text2
  4927  013D6A                     __ptext2:
  4928                           	opt stack 0
  4929  013D6A                     _system_encoder_enable:
  4930                           	opt stack 19
  4931                           
  4932                           ;os.c: 201: INTCON3bits.INT2IF = 0;
  4933                           
  4934                           ;incstack = 0
  4935  013D6A  92F0               	bcf	intcon3,1,c	;volatile
  4936                           
  4937                           ;os.c: 202: INTCON3bits.INT3IF = 0;
  4938  013D6C  94F0               	bcf	intcon3,2,c	;volatile
  4939                           
  4940                           ;os.c: 205: os.encoderCount = 0;
  4941  013D6E  0E00               	movlw	0
  4942  013D70  0102               	movlb	2	; () banked
  4943  013D72  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  4944                           
  4945                           ; BSR set to: 2
  4946                           ;os.c: 208: INTCON3bits.INT2IE = 1;
  4947  013D74  88F0               	bsf	intcon3,4,c	;volatile
  4948                           
  4949                           ; BSR set to: 2
  4950                           ;os.c: 209: INTCON3bits.INT3IE = 1;
  4951  013D76  8AF0               	bsf	intcon3,5,c	;volatile
  4952                           
  4953                           ; BSR set to: 2
  4954  013D78  0012               	return		;funcret
  4955  013D7A                     __end_of_system_encoder_enable:
  4956                           	opt stack 0
  4957                           tblptru	equ	0xFF8
  4958                           tblptrh	equ	0xFF7
  4959                           tblptrl	equ	0xFF6
  4960                           tablat	equ	0xFF5
  4961                           intcon3	equ	0xFF0
  4962                           postinc0	equ	0xFEE
  4963                           wreg	equ	0xFE8
  4964                           postdec1	equ	0xFE5
  4965                           fsr1h	equ	0xFE2
  4966                           fsr1l	equ	0xFE1
  4967                           postinc2	equ	0xFDE
  4968                           postdec2	equ	0xFDD
  4969                           fsr2h	equ	0xFDA
  4970                           fsr2l	equ	0xFD9
  4971                           status	equ	0xFD8
  4972                           
  4973 ;; *************** function _system_encoder_disable *****************
  4974 ;; Defined at:
  4975 ;;		line 191 in file "os.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;		None
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		None
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4993 ;;Total ram usage:        0 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:   10
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_ui_run
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text3
  5004  013ECC                     __ptext3:
  5005                           	opt stack 0
  5006  013ECC                     _system_encoder_disable:
  5007                           	opt stack 19
  5008                           
  5009                           ;os.c: 194: INTCON3bits.INT2IE = 0;
  5010                           
  5011                           ; BSR set to: 2
  5012                           ;incstack = 0
  5013  013ECC  98F0               	bcf	intcon3,4,c	;volatile
  5014                           
  5015                           ;os.c: 195: INTCON3bits.INT3IE = 0;
  5016  013ECE  9AF0               	bcf	intcon3,5,c	;volatile
  5017  013ED0  0012               	return		;funcret
  5018  013ED2                     __end_of_system_encoder_disable:
  5019                           	opt stack 0
  5020                           tblptru	equ	0xFF8
  5021                           tblptrh	equ	0xFF7
  5022                           tblptrl	equ	0xFF6
  5023                           tablat	equ	0xFF5
  5024                           intcon3	equ	0xFF0
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           postdec1	equ	0xFE5
  5028                           fsr1h	equ	0xFE2
  5029                           fsr1l	equ	0xFE1
  5030                           postinc2	equ	0xFDE
  5031                           postdec2	equ	0xFDD
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _i2c_display_send_init_sequence *****************
  5037 ;; Defined at:
  5038 ;;		line 248 in file "i2c.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;Total ram usage:        9 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:   12
  5059 ;; This function calls:
  5060 ;;		__i2c_write
  5061 ;;		_i2c_set_frequency
  5062 ;; This function is called by:
  5063 ;;		_ui_run
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text4
  5068  013636                     __ptext4:
  5069                           	opt stack 0
  5070  013636                     _i2c_display_send_init_sequence:
  5071                           	opt stack 17
  5072                           
  5073                           ;i2c.c: 250: uint8_t init_sequence[9] = {;i2c.c: 251: 0x3A,;i2c.c: 253: 0b00011110,;i2c.
      +                          c: 254: 0x39,;i2c.c: 256: 0b00001100,;i2c.c: 257: 0x74,;i2c.c: 258: 0b1011100,;i2c.c: 25
      +                          9: 0x6d,;i2c.c: 260: 0x0c,;i2c.c: 261: 0x01;i2c.c: 262: };
  5074                           
  5075                           ;incstack = 0
  5076  013636  EE23  F0ED         	lfsr	2,i2c_display_send_init_sequence@F6877
  5077  01363A  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5078  01363E  0E08               	movlw	8
  5079  013640                     u19901:
  5080  013640  CFDB FFE3          	movff	plusw2,plusw1
  5081  013644  06E8               	decf	wreg,f,c
  5082  013646  E2FC               	bc	u19901
  5083                           
  5084                           ;i2c.c: 265: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5085  013648  0E00               	movlw	0
  5086  01364A  ECB3  F090         	call	_i2c_set_frequency
  5087                           
  5088                           ;i2c.c: 268: _i2c_write(0b01111000, &init_sequence[0], 9);
  5089  01364E  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5090  013650  0100               	movlb	0	; () banked
  5091  013652  6F65               	movwf	__i2c_write@data& (0+255),b
  5092  013654  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5093  013656  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5094  013658  0E09               	movlw	9
  5095  01365A  6F67               	movwf	__i2c_write@length& (0+255),b
  5096  01365C  0E78               	movlw	120
  5097  01365E  EC22  F097         	call	__i2c_write
  5098  013662  0012               	return		;funcret
  5099  013664                     __end_of_i2c_display_send_init_sequence:
  5100                           	opt stack 0
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           intcon3	equ	0xFF0
  5106                           postinc0	equ	0xFEE
  5107                           wreg	equ	0xFE8
  5108                           postdec1	equ	0xFE5
  5109                           plusw1	equ	0xFE3
  5110                           fsr1h	equ	0xFE2
  5111                           fsr1l	equ	0xFE1
  5112                           postinc2	equ	0xFDE
  5113                           postdec2	equ	0xFDD
  5114                           plusw2	equ	0xFDB
  5115                           fsr2h	equ	0xFDA
  5116                           fsr2l	equ	0xFD9
  5117                           status	equ	0xFD8
  5118                           
  5119 ;; *************** function _i2c_digipot_reset_on *****************
  5120 ;; Defined at:
  5121 ;;		line 425 in file "i2c.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;Total ram usage:        2 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:   12
  5142 ;; This function calls:
  5143 ;;		__i2c_write
  5144 ;;		_i2c_set_frequency
  5145 ;; This function is called by:
  5146 ;;		_ui_run
  5147 ;;		_i2c_display_init
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text5
  5152  01389A                     __ptext5:
  5153                           	opt stack 0
  5154  01389A                     _i2c_digipot_reset_on:
  5155                           	opt stack 17
  5156                           
  5157                           ;i2c.c: 427: uint8_t data_array[2];;i2c.c: 428: data_array[0] = 0x10 | 0x00;
  5158                           
  5159                           ;incstack = 0
  5160  01389A  0E10               	movlw	16
  5161  01389C  0100               	movlb	0	; () banked
  5162  01389E  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5163                           
  5164                           ;i2c.c: 430: data_array[1] = 0x00;
  5165  0138A0  0E00               	movlw	0
  5166  0138A2  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;i2c.c: 433: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5170  0138A4  0E02               	movlw	2
  5171  0138A6  ECB3  F090         	call	_i2c_set_frequency
  5172                           
  5173                           ;i2c.c: 435: _i2c_write(0b01011100, &data_array[0], 2);
  5174  0138AA  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5175  0138AC  0100               	movlb	0	; () banked
  5176  0138AE  6F65               	movwf	__i2c_write@data& (0+255),b
  5177  0138B0  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5178  0138B2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5179  0138B4  0E02               	movlw	2
  5180  0138B6  6F67               	movwf	__i2c_write@length& (0+255),b
  5181  0138B8  0E5C               	movlw	92
  5182  0138BA  EC22  F097         	call	__i2c_write
  5183  0138BE  0012               	return		;funcret
  5184  0138C0                     __end_of_i2c_digipot_reset_on:
  5185                           	opt stack 0
  5186                           tblptru	equ	0xFF8
  5187                           tblptrh	equ	0xFF7
  5188                           tblptrl	equ	0xFF6
  5189                           tablat	equ	0xFF5
  5190                           intcon3	equ	0xFF0
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           postdec1	equ	0xFE5
  5194                           plusw1	equ	0xFE3
  5195                           fsr1h	equ	0xFE2
  5196                           fsr1l	equ	0xFE1
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           plusw2	equ	0xFDB
  5200                           fsr2h	equ	0xFDA
  5201                           fsr2l	equ	0xFD9
  5202                           status	equ	0xFD8
  5203                           
  5204 ;; *************** function _i2c_digipot_reset_off *****************
  5205 ;; Defined at:
  5206 ;;		line 438 in file "i2c.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5223 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;Total ram usage:        2 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:   12
  5227 ;; This function calls:
  5228 ;;		__i2c_write
  5229 ;;		_i2c_set_frequency
  5230 ;; This function is called by:
  5231 ;;		_ui_run
  5232 ;;		_i2c_display_init
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text6
  5237  0138C0                     __ptext6:
  5238                           	opt stack 0
  5239  0138C0                     _i2c_digipot_reset_off:
  5240                           	opt stack 17
  5241                           
  5242                           ;i2c.c: 440: uint8_t data_array[2];;i2c.c: 441: data_array[0] = 0x10 | 0x00;
  5243                           
  5244                           ;incstack = 0
  5245  0138C0  0E10               	movlw	16
  5246  0138C2  0100               	movlb	0	; () banked
  5247  0138C4  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  5248                           
  5249                           ;i2c.c: 442: data_array[1] = 0x80;
  5250  0138C6  0E80               	movlw	128
  5251  0138C8  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;i2c.c: 445: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5255  0138CA  0E02               	movlw	2
  5256  0138CC  ECB3  F090         	call	_i2c_set_frequency
  5257                           
  5258                           ;i2c.c: 447: _i2c_write(0b01011100, &data_array[0], 2);
  5259  0138D0  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  5260  0138D2  0100               	movlb	0	; () banked
  5261  0138D4  6F65               	movwf	__i2c_write@data& (0+255),b
  5262  0138D6  0E00               	movlw	high i2c_digipot_reset_off@data_array
  5263  0138D8  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5264  0138DA  0E02               	movlw	2
  5265  0138DC  6F67               	movwf	__i2c_write@length& (0+255),b
  5266  0138DE  0E5C               	movlw	92
  5267  0138E0  EC22  F097         	call	__i2c_write
  5268  0138E4  0012               	return		;funcret
  5269  0138E6                     __end_of_i2c_digipot_reset_off:
  5270                           	opt stack 0
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           intcon3	equ	0xFF0
  5276                           postinc0	equ	0xFEE
  5277                           wreg	equ	0xFE8
  5278                           postdec1	equ	0xFE5
  5279                           plusw1	equ	0xFE3
  5280                           fsr1h	equ	0xFE2
  5281                           fsr1l	equ	0xFE1
  5282                           postinc2	equ	0xFDE
  5283                           postdec2	equ	0xFDD
  5284                           plusw2	equ	0xFDB
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _i2c_digipot_backlight *****************
  5290 ;; Defined at:
  5291 ;;		line 450 in file "i2c.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  level           1    wreg     unsigned char 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  level           1   10[BANK0 ] unsigned char 
  5296 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5307 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;Total ram usage:        3 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:   12
  5313 ;; This function calls:
  5314 ;;		__i2c_write
  5315 ;;		_i2c_set_frequency
  5316 ;; This function is called by:
  5317 ;;		_ui_run
  5318 ;;		_i2c_display_init
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text7
  5323  0136EE                     __ptext7:
  5324                           	opt stack 0
  5325  0136EE                     _i2c_digipot_backlight:
  5326                           	opt stack 17
  5327                           
  5328                           ;incstack = 0
  5329                           ;i2c_digipot_backlight@level stored from wreg
  5330  0136EE  0100               	movlb	0	; () banked
  5331  0136F0  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  5332                           
  5333                           ;i2c.c: 452: uint8_t data_array[2];;i2c.c: 453: data_array[0] = 0x00 | 0x00;
  5334  0136F2  0E00               	movlw	0
  5335  0136F4  0100               	movlb	0	; () banked
  5336  0136F6  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;i2c.c: 454: data_array[1] = level>>1;
  5340  0136F8  90D8               	bcf	status,0,c
  5341  0136FA  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  5342  0136FC  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;i2c.c: 457: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5346  0136FE  0E02               	movlw	2
  5347  013700  ECB3  F090         	call	_i2c_set_frequency
  5348                           
  5349                           ;i2c.c: 459: _i2c_write(0b01011100, &data_array[0], 2);
  5350  013704  0E6B               	movlw	low i2c_digipot_backlight@data_array
  5351  013706  0100               	movlb	0	; () banked
  5352  013708  6F65               	movwf	__i2c_write@data& (0+255),b
  5353  01370A  0E00               	movlw	high i2c_digipot_backlight@data_array
  5354  01370C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5355  01370E  0E02               	movlw	2
  5356  013710  6F67               	movwf	__i2c_write@length& (0+255),b
  5357  013712  0E5C               	movlw	92
  5358  013714  EC22  F097         	call	__i2c_write
  5359  013718  0012               	return		;funcret
  5360  01371A                     __end_of_i2c_digipot_backlight:
  5361                           	opt stack 0
  5362                           tblptru	equ	0xFF8
  5363                           tblptrh	equ	0xFF7
  5364                           tblptrl	equ	0xFF6
  5365                           tablat	equ	0xFF5
  5366                           intcon3	equ	0xFF0
  5367                           postinc0	equ	0xFEE
  5368                           wreg	equ	0xFE8
  5369                           postdec1	equ	0xFE5
  5370                           plusw1	equ	0xFE3
  5371                           fsr1h	equ	0xFE2
  5372                           fsr1l	equ	0xFE1
  5373                           postinc2	equ	0xFDE
  5374                           postdec2	equ	0xFDD
  5375                           plusw2	equ	0xFDB
  5376                           fsr2h	equ	0xFDA
  5377                           fsr2l	equ	0xFD9
  5378                           status	equ	0xFD8
  5379                           
  5380 ;; *************** function __ui_encoder *****************
  5381 ;; Defined at:
  5382 ;;		line 17 in file "ui.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;Total ram usage:        0 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:   14
  5403 ;; This function calls:
  5404 ;;		_rtcc_correct_day
  5405 ;;		_rtcc_decrement_day
  5406 ;;		_rtcc_decrement_hours
  5407 ;;		_rtcc_decrement_minutes
  5408 ;;		_rtcc_decrement_month
  5409 ;;		_rtcc_decrement_seconds
  5410 ;;		_rtcc_decrement_year
  5411 ;;		_rtcc_increment_day
  5412 ;;		_rtcc_increment_hours
  5413 ;;		_rtcc_increment_minutes
  5414 ;;		_rtcc_increment_month
  5415 ;;		_rtcc_increment_seconds
  5416 ;;		_rtcc_increment_year
  5417 ;;		_rtcc_write_eeprom
  5418 ;;		_system_output_off
  5419 ;;		_system_output_on
  5420 ;;		_system_output_toggle
  5421 ;; This function is called by:
  5422 ;;		_ui_run
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text8
  5427  00B6B0                     __ptext8:
  5428                           	opt stack 0
  5429  00B6B0                     __ui_encoder:
  5430                           	opt stack 15
  5431                           
  5432                           ;ui.c: 19: switch(os.display_mode)
  5433                           
  5434                           ;incstack = 0
  5435  00B6B0  D193               	goto	l1744
  5436  00B6B2                     
  5437                           ;ui.c: 22: if(os.encoderCount>0)
  5438  00B6B2  0102               	movlb	2	; () banked
  5439  00B6B4  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5440  00B6B6  0A80               	xorlw	128
  5441  00B6B8  0F7F               	addlw	-129
  5442  00B6BA  A0D8               	btfss	status,0,c
  5443  00B6BC  D002               	goto	l1746
  5444                           
  5445                           ; BSR set to: 2
  5446                           ;ui.c: 23: {;ui.c: 24: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5447  00B6BE  0E10               	movlw	16
  5448  00B6C0  D003               	goto	L1
  5449  00B6C2                     l1746:
  5450                           
  5451                           ; BSR set to: 2
  5452                           ;ui.c: 26: else if(os.encoderCount<0)
  5453                           
  5454                           ; BSR set to: 2
  5455  00B6C2  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5456  00B6C4  D002               	goto	l1748
  5457                           
  5458                           ; BSR set to: 2
  5459                           ;ui.c: 27: {;ui.c: 28: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  5460  00B6C6  0E60               	movlw	96
  5461  00B6C8                     L1:
  5462  00B6C8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5463  00B6CA                     l1748:
  5464                           
  5465                           ; BSR set to: 2
  5466                           ;ui.c: 29: };ui.c: 30: if(os.buttonCount)
  5467                           
  5468                           ; BSR set to: 2
  5469  00B6CA  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5470                           
  5471                           ; BSR set to: 2
  5472                           ;ui.c: 33: };ui.c: 34: os.encoderCount = 0;
  5473                           
  5474                           ; BSR set to: 2
  5475                           
  5476                           ;ui.c: 31: {;ui.c: 32: ;
  5477  00B6CC  0E00               	movlw	0
  5478  00B6CE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5479                           
  5480                           ;ui.c: 35: os.buttonCount = 0;
  5481  00B6D0  0E00               	movlw	0
  5482  00B6D2  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5483                           
  5484                           ;ui.c: 36: break;
  5485  00B6D4  0012               	return	
  5486  00B6D6                     
  5487                           ; BSR set to: 2
  5488                           ;ui.c: 39: if(os.encoderCount>0)
  5489                           
  5490                           ; BSR set to: 2
  5491  00B6D6  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5492  00B6D8  0A80               	xorlw	128
  5493  00B6DA  0F7F               	addlw	-129
  5494  00B6DC  A0D8               	btfss	status,0,c
  5495  00B6DE  D002               	goto	l1752
  5496                           
  5497                           ; BSR set to: 2
  5498                           ;ui.c: 40: {;ui.c: 41: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5499  00B6E0  0E20               	movlw	32
  5500  00B6E2  D003               	goto	L2
  5501  00B6E4                     l1752:
  5502                           
  5503                           ; BSR set to: 2
  5504                           ;ui.c: 43: else if(os.encoderCount<0)
  5505                           
  5506                           ; BSR set to: 2
  5507  00B6E4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5508  00B6E6  D002               	goto	l1754
  5509                           
  5510                           ; BSR set to: 2
  5511                           ;ui.c: 44: {;ui.c: 45: os.display_mode = DISPLAY_MODE_OVERVIEW;
  5512  00B6E8  0E00               	movlw	0
  5513  00B6EA                     L2:
  5514  00B6EA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5515  00B6EC                     l1754:
  5516                           
  5517                           ; BSR set to: 2
  5518                           ;ui.c: 46: };ui.c: 47: if(os.buttonCount)
  5519                           
  5520                           ; BSR set to: 2
  5521  00B6EC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5522  00B6EE  B4D8               	btfsc	status,2,c
  5523  00B6F0  D002               	goto	l1755
  5524                           
  5525                           ; BSR set to: 2
  5526                           ;ui.c: 48: {;ui.c: 49: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  5527  00B6F2  0E11               	movlw	17
  5528  00B6F4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5529  00B6F6                     l1755:
  5530                           
  5531                           ; BSR set to: 2
  5532                           ;ui.c: 50: };ui.c: 51: os.encoderCount = 0;
  5533  00B6F6  0E00               	movlw	0
  5534  00B6F8  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5535                           
  5536                           ;ui.c: 52: os.buttonCount = 0;
  5537  00B6FA  0E00               	movlw	0
  5538  00B6FC  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5539                           
  5540                           ;ui.c: 53: break;
  5541  00B6FE  0012               	return	
  5542  00B700                     
  5543                           ; BSR set to: 2
  5544                           ;ui.c: 56: if(os.encoderCount>0)
  5545                           
  5546                           ; BSR set to: 2
  5547  00B700  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5548  00B702  0A80               	xorlw	128
  5549  00B704  0F7F               	addlw	-129
  5550  00B706  A0D8               	btfss	status,0,c
  5551  00B708  D003               	goto	l1757
  5552                           
  5553                           ; BSR set to: 2
  5554                           ;ui.c: 57: {;ui.c: 58: rtcc_increment_year();
  5555  00B70A  ECD0  F09C         	call	_rtcc_increment_year	;wreg free
  5556                           
  5557                           ;ui.c: 59: }
  5558  00B70E  D004               	goto	l1759
  5559  00B710                     l1757:
  5560                           
  5561                           ;ui.c: 60: else if(os.encoderCount<0)
  5562  00B710  0102               	movlb	2	; () banked
  5563  00B712  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5564                           
  5565                           ; BSR set to: 2
  5566                           ;ui.c: 61: {;ui.c: 62: rtcc_decrement_year();
  5567  00B714  EC25  F09D         	call	_rtcc_decrement_year	;wreg free
  5568  00B718                     l1759:
  5569                           
  5570                           ;ui.c: 63: };ui.c: 64: if(os.buttonCount)
  5571  00B718  0102               	movlb	2	; () banked
  5572  00B71A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5573  00B71C  B4D8               	btfsc	status,2,c
  5574  00B71E  D005               	goto	l1760
  5575                           
  5576                           ; BSR set to: 2
  5577                           ;ui.c: 65: {;ui.c: 66: rtcc_correct_day();
  5578  00B720  EC8B  F09D         	call	_rtcc_correct_day	;wreg free
  5579                           
  5580                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  5581  00B724  0E12               	movlw	18
  5582  00B726  0102               	movlb	2	; () banked
  5583  00B728  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5584  00B72A                     l1760:
  5585                           
  5586                           ; BSR set to: 2
  5587                           ;ui.c: 68: };ui.c: 69: os.encoderCount = 0;
  5588                           
  5589                           ; BSR set to: 2
  5590  00B72A  0E00               	movlw	0
  5591  00B72C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5592                           
  5593                           ; BSR set to: 2
  5594                           ;ui.c: 70: os.buttonCount = 0;
  5595  00B72E  0E00               	movlw	0
  5596  00B730  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5597                           
  5598                           ;ui.c: 71: break;
  5599  00B732  0012               	return	
  5600  00B734                     
  5601                           ; BSR set to: 2
  5602                           ;ui.c: 74: if(os.encoderCount>0)
  5603                           
  5604                           ; BSR set to: 2
  5605  00B734  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5606  00B736  0A80               	xorlw	128
  5607  00B738  0F7F               	addlw	-129
  5608  00B73A  A0D8               	btfss	status,0,c
  5609  00B73C  D003               	goto	l1762
  5610                           
  5611                           ; BSR set to: 2
  5612                           ;ui.c: 75: {;ui.c: 76: rtcc_increment_month();
  5613  00B73E  ECF2  F09C         	call	_rtcc_increment_month	;wreg free
  5614                           
  5615                           ;ui.c: 77: }
  5616  00B742  D004               	goto	l1764
  5617  00B744                     l1762:
  5618                           
  5619                           ;ui.c: 78: else if(os.encoderCount<0)
  5620  00B744  0102               	movlb	2	; () banked
  5621  00B746  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5622                           
  5623                           ; BSR set to: 2
  5624                           ;ui.c: 79: {;ui.c: 80: rtcc_decrement_month();
  5625  00B748  EC47  F09D         	call	_rtcc_decrement_month	;wreg free
  5626  00B74C                     l1764:
  5627                           
  5628                           ;ui.c: 81: };ui.c: 82: if(os.buttonCount)
  5629  00B74C  0102               	movlb	2	; () banked
  5630  00B74E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5631  00B750  B4D8               	btfsc	status,2,c
  5632  00B752  D005               	goto	l1765
  5633                           
  5634                           ; BSR set to: 2
  5635                           ;ui.c: 83: {;ui.c: 84: rtcc_correct_day();
  5636  00B754  EC8B  F09D         	call	_rtcc_correct_day	;wreg free
  5637                           
  5638                           ;ui.c: 85: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  5639  00B758  0E13               	movlw	19
  5640  00B75A  0102               	movlb	2	; () banked
  5641  00B75C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5642  00B75E                     l1765:
  5643                           
  5644                           ; BSR set to: 2
  5645                           ;ui.c: 86: };ui.c: 87: os.encoderCount = 0;
  5646                           
  5647                           ; BSR set to: 2
  5648  00B75E  0E00               	movlw	0
  5649  00B760  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5650                           
  5651                           ; BSR set to: 2
  5652                           ;ui.c: 88: os.buttonCount = 0;
  5653  00B762  0E00               	movlw	0
  5654  00B764  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5655                           
  5656                           ;ui.c: 89: break;
  5657  00B766  0012               	return	
  5658  00B768                     
  5659                           ; BSR set to: 2
  5660                           ;ui.c: 92: if(os.encoderCount>0)
  5661                           
  5662                           ; BSR set to: 2
  5663  00B768  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5664  00B76A  0A80               	xorlw	128
  5665  00B76C  0F7F               	addlw	-129
  5666  00B76E  A0D8               	btfss	status,0,c
  5667  00B770  D003               	goto	l1767
  5668                           
  5669                           ; BSR set to: 2
  5670                           ;ui.c: 93: {;ui.c: 94: rtcc_increment_day();
  5671  00B772  EC86  F09C         	call	_rtcc_increment_day	;wreg free
  5672                           
  5673                           ;ui.c: 95: }
  5674  00B776  D004               	goto	l1769
  5675  00B778                     l1767:
  5676                           
  5677                           ;ui.c: 96: else if(os.encoderCount<0)
  5678  00B778  0102               	movlb	2	; () banked
  5679  00B77A  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5680                           
  5681                           ; BSR set to: 2
  5682                           ;ui.c: 97: {;ui.c: 98: rtcc_decrement_day();
  5683  00B77C  EC99  F09C         	call	_rtcc_decrement_day	;wreg free
  5684  00B780                     l1769:
  5685                           
  5686                           ;ui.c: 99: };ui.c: 100: if(os.buttonCount)
  5687  00B780  0102               	movlb	2	; () banked
  5688  00B782  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5689  00B784  B4D8               	btfsc	status,2,c
  5690  00B786  D002               	goto	l1770
  5691                           
  5692                           ; BSR set to: 2
  5693                           ;ui.c: 101: {;ui.c: 102: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  5694  00B788  0E14               	movlw	20
  5695  00B78A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5696  00B78C                     l1770:
  5697                           
  5698                           ; BSR set to: 2
  5699                           ;ui.c: 103: };ui.c: 104: os.encoderCount = 0;
  5700  00B78C  0E00               	movlw	0
  5701  00B78E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5702                           
  5703                           ;ui.c: 105: os.buttonCount = 0;
  5704  00B790  0E00               	movlw	0
  5705  00B792  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5706                           
  5707                           ;ui.c: 106: break;
  5708  00B794  0012               	return	
  5709  00B796                     
  5710                           ; BSR set to: 2
  5711                           ;ui.c: 109: if(os.encoderCount>0)
  5712                           
  5713                           ; BSR set to: 2
  5714  00B796  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5715  00B798  0A80               	xorlw	128
  5716  00B79A  0F7F               	addlw	-129
  5717  00B79C  A0D8               	btfss	status,0,c
  5718  00B79E  D003               	goto	l1772
  5719                           
  5720                           ; BSR set to: 2
  5721                           ;ui.c: 110: {;ui.c: 111: rtcc_increment_hours();
  5722  00B7A0  EC14  F09D         	call	_rtcc_increment_hours	;wreg free
  5723                           
  5724                           ;ui.c: 112: }
  5725  00B7A4  D004               	goto	l1774
  5726  00B7A6                     l1772:
  5727                           
  5728                           ;ui.c: 113: else if(os.encoderCount<0)
  5729  00B7A6  0102               	movlb	2	; () banked
  5730  00B7A8  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5731                           
  5732                           ; BSR set to: 2
  5733                           ;ui.c: 114: {;ui.c: 115: rtcc_decrement_hours();
  5734  00B7AA  EC69  F09D         	call	_rtcc_decrement_hours	;wreg free
  5735  00B7AE                     l1774:
  5736                           
  5737                           ;ui.c: 116: };ui.c: 117: if(os.buttonCount)
  5738  00B7AE  0102               	movlb	2	; () banked
  5739  00B7B0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5740  00B7B2  B4D8               	btfsc	status,2,c
  5741  00B7B4  D002               	goto	l1775
  5742                           
  5743                           ; BSR set to: 2
  5744                           ;ui.c: 118: {;ui.c: 119: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  5745  00B7B6  0E15               	movlw	21
  5746  00B7B8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5747  00B7BA                     l1775:
  5748                           
  5749                           ; BSR set to: 2
  5750                           ;ui.c: 120: };ui.c: 121: os.encoderCount = 0;
  5751  00B7BA  0E00               	movlw	0
  5752  00B7BC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5753                           
  5754                           ;ui.c: 122: os.buttonCount = 0;
  5755  00B7BE  0E00               	movlw	0
  5756  00B7C0  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5757                           
  5758                           ;ui.c: 123: break;
  5759  00B7C2  0012               	return	
  5760  00B7C4                     
  5761                           ; BSR set to: 2
  5762                           ;ui.c: 126: if(os.encoderCount>0)
  5763                           
  5764                           ; BSR set to: 2
  5765  00B7C4  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5766  00B7C6  0A80               	xorlw	128
  5767  00B7C8  0F7F               	addlw	-129
  5768  00B7CA  A0D8               	btfss	status,0,c
  5769  00B7CC  D003               	goto	l1777
  5770                           
  5771                           ; BSR set to: 2
  5772                           ;ui.c: 127: {;ui.c: 128: rtcc_increment_minutes();
  5773  00B7CE  EC03  F09D         	call	_rtcc_increment_minutes	;wreg free
  5774                           
  5775                           ;ui.c: 129: }
  5776  00B7D2  D004               	goto	l1779
  5777  00B7D4                     l1777:
  5778                           
  5779                           ;ui.c: 130: else if(os.encoderCount<0)
  5780  00B7D4  0102               	movlb	2	; () banked
  5781  00B7D6  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5782                           
  5783                           ; BSR set to: 2
  5784                           ;ui.c: 131: {;ui.c: 132: rtcc_decrement_minutes();
  5785  00B7D8  EC58  F09D         	call	_rtcc_decrement_minutes	;wreg free
  5786  00B7DC                     l1779:
  5787                           
  5788                           ;ui.c: 133: };ui.c: 134: if(os.buttonCount)
  5789  00B7DC  0102               	movlb	2	; () banked
  5790  00B7DE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5791  00B7E0  B4D8               	btfsc	status,2,c
  5792  00B7E2  D002               	goto	l1780
  5793                           
  5794                           ; BSR set to: 2
  5795                           ;ui.c: 135: {;ui.c: 136: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  5796  00B7E4  0E16               	movlw	22
  5797  00B7E6  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5798  00B7E8                     l1780:
  5799                           
  5800                           ; BSR set to: 2
  5801                           ;ui.c: 137: };ui.c: 138: os.encoderCount = 0;
  5802  00B7E8  0E00               	movlw	0
  5803  00B7EA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5804                           
  5805                           ;ui.c: 139: os.buttonCount = 0;
  5806  00B7EC  0E00               	movlw	0
  5807  00B7EE  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5808                           
  5809                           ;ui.c: 140: break;
  5810  00B7F0  0012               	return	
  5811  00B7F2                     
  5812                           ; BSR set to: 2
  5813                           ;ui.c: 143: if(os.encoderCount>0)
  5814                           
  5815                           ; BSR set to: 2
  5816  00B7F2  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5817  00B7F4  0A80               	xorlw	128
  5818  00B7F6  0F7F               	addlw	-129
  5819  00B7F8  A0D8               	btfss	status,0,c
  5820  00B7FA  D003               	goto	l1782
  5821                           
  5822                           ; BSR set to: 2
  5823                           ;ui.c: 144: {;ui.c: 145: rtcc_increment_seconds();
  5824  00B7FC  ECE1  F09C         	call	_rtcc_increment_seconds	;wreg free
  5825                           
  5826                           ;ui.c: 146: }
  5827  00B800  D004               	goto	l1784
  5828  00B802                     l1782:
  5829                           
  5830                           ;ui.c: 147: else if(os.encoderCount<0)
  5831  00B802  0102               	movlb	2	; () banked
  5832  00B804  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5833                           
  5834                           ; BSR set to: 2
  5835                           ;ui.c: 148: {;ui.c: 149: rtcc_decrement_seconds();
  5836  00B806  EC36  F09D         	call	_rtcc_decrement_seconds	;wreg free
  5837  00B80A                     l1784:
  5838                           
  5839                           ;ui.c: 150: };ui.c: 151: if(os.buttonCount)
  5840  00B80A  0102               	movlb	2	; () banked
  5841  00B80C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5842  00B80E  B4D8               	btfsc	status,2,c
  5843  00B810  D004               	goto	l1785
  5844                           
  5845                           ; BSR set to: 2
  5846                           ;ui.c: 152: {;ui.c: 153: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5847  00B812  0E10               	movlw	16
  5848  00B814  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5849                           
  5850                           ; BSR set to: 2
  5851                           ;ui.c: 154: rtcc_write_eeprom();
  5852  00B816  EC33  F098         	call	_rtcc_write_eeprom	;wreg free
  5853  00B81A                     l1785:
  5854                           
  5855                           ;ui.c: 155: };ui.c: 156: os.encoderCount = 0;
  5856  00B81A  0E00               	movlw	0
  5857  00B81C  0102               	movlb	2	; () banked
  5858  00B81E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5859                           
  5860                           ; BSR set to: 2
  5861                           ;ui.c: 157: os.buttonCount = 0;
  5862  00B820  0E00               	movlw	0
  5863  00B822  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5864                           
  5865                           ;ui.c: 158: break;
  5866  00B824  0012               	return	
  5867  00B826                     
  5868                           ; BSR set to: 2
  5869                           ;ui.c: 161: if(os.encoderCount>0)
  5870                           
  5871                           ; BSR set to: 2
  5872  00B826  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5873  00B828  0A80               	xorlw	128
  5874  00B82A  0F7F               	addlw	-129
  5875  00B82C  A0D8               	btfss	status,0,c
  5876  00B82E  D002               	goto	l1787
  5877                           
  5878                           ; BSR set to: 2
  5879                           ;ui.c: 162: {;ui.c: 163: os.display_mode = DISPLAY_MODE_OUTPUTS;
  5880  00B830  0E30               	movlw	48
  5881  00B832  D003               	goto	L3
  5882  00B834                     l1787:
  5883                           
  5884                           ; BSR set to: 2
  5885                           ;ui.c: 165: else if(os.encoderCount<0)
  5886                           
  5887                           ; BSR set to: 2
  5888  00B834  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5889  00B836  D002               	goto	l1789
  5890                           
  5891                           ; BSR set to: 2
  5892                           ;ui.c: 166: {;ui.c: 167: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5893  00B838  0E10               	movlw	16
  5894  00B83A                     L3:
  5895  00B83A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5896  00B83C                     l1789:
  5897                           
  5898                           ; BSR set to: 2
  5899                           ;ui.c: 168: };ui.c: 169: if(os.buttonCount)
  5900                           
  5901                           ; BSR set to: 2
  5902  00B83C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5903  00B83E  A4D8               	btfss	status,2,c
  5904                           
  5905                           ; BSR set to: 2
  5906                           ;ui.c: 170: {;ui.c: 171: if(os.output_voltage>12000)
  5907  00B840  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  5908  00B842  D009               	goto	l1791
  5909  00B844  0EE1               	movlw	225
  5910  00B846  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  5911  00B848  0E2E               	movlw	46
  5912  00B84A  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  5913  00B84C  A0D8               	btfss	status,0,c
  5914  00B84E  D003               	goto	l1791
  5915                           
  5916                           ; BSR set to: 2
  5917                           ;ui.c: 172: {;ui.c: 173: system_output_toggle(OUTPUT_USB);
  5918  00B850  0E10               	movlw	16
  5919  00B852  EC73  F09C         	call	_system_output_toggle
  5920  00B856                     l1791:
  5921                           
  5922                           ;ui.c: 174: };ui.c: 175: };ui.c: 176: os.encoderCount = 0;
  5923  00B856  0E00               	movlw	0
  5924  00B858  0102               	movlb	2	; () banked
  5925  00B85A  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5926                           
  5927                           ; BSR set to: 2
  5928                           ;ui.c: 177: os.buttonCount = 0;
  5929  00B85C  0E00               	movlw	0
  5930  00B85E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5931                           
  5932                           ;ui.c: 178: break;
  5933  00B860  0012               	return	
  5934  00B862                     
  5935                           ; BSR set to: 2
  5936                           ;ui.c: 181: if(os.encoderCount>0)
  5937                           
  5938                           ; BSR set to: 2
  5939  00B862  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5940  00B864  0A80               	xorlw	128
  5941  00B866  0F7F               	addlw	-129
  5942  00B868  A0D8               	btfss	status,0,c
  5943  00B86A  D002               	goto	l1793
  5944                           
  5945                           ; BSR set to: 2
  5946                           ;ui.c: 182: {;ui.c: 183: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  5947  00B86C  0E40               	movlw	64
  5948  00B86E  D003               	goto	L4
  5949  00B870                     l1793:
  5950                           
  5951                           ; BSR set to: 2
  5952                           ;ui.c: 185: else if(os.encoderCount<0)
  5953                           
  5954                           ; BSR set to: 2
  5955  00B870  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5956  00B872  D002               	goto	l1795
  5957                           
  5958                           ; BSR set to: 2
  5959                           ;ui.c: 186: {;ui.c: 187: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5960  00B874  0E20               	movlw	32
  5961  00B876                     L4:
  5962  00B876  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5963  00B878                     l1795:
  5964                           
  5965                           ; BSR set to: 2
  5966                           ;ui.c: 188: };ui.c: 189: if(os.buttonCount)
  5967                           
  5968                           ; BSR set to: 2
  5969  00B878  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5970  00B87A  B4D8               	btfsc	status,2,c
  5971  00B87C  D002               	goto	l1796
  5972                           
  5973                           ; BSR set to: 2
  5974                           ;ui.c: 190: {;ui.c: 191: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  5975  00B87E  0E31               	movlw	49
  5976  00B880  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5977  00B882                     l1796:
  5978                           
  5979                           ; BSR set to: 2
  5980                           ;ui.c: 192: };ui.c: 193: os.encoderCount = 0;
  5981  00B882  0E00               	movlw	0
  5982  00B884  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5983                           
  5984                           ;ui.c: 194: os.buttonCount = 0;
  5985  00B886  0E00               	movlw	0
  5986  00B888  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5987                           
  5988                           ;ui.c: 195: break;
  5989  00B88A  0012               	return	
  5990  00B88C                     
  5991                           ; BSR set to: 2
  5992                           ;ui.c: 198: if(os.encoderCount>0)
  5993                           
  5994                           ; BSR set to: 2
  5995  00B88C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5996  00B88E  0A80               	xorlw	128
  5997  00B890  0F7F               	addlw	-129
  5998  00B892  A0D8               	btfss	status,0,c
  5999  00B894  D006               	goto	l1798
  6000                           
  6001                           ; BSR set to: 2
  6002                           ;ui.c: 199: {;ui.c: 200: if(os.output_voltage>-1)
  6003  00B896  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6004  00B898  D00A               	goto	l1801
  6005                           
  6006                           ; BSR set to: 2
  6007                           ;ui.c: 201: system_output_on(OUTPUT_1);
  6008  00B89A  0E01               	movlw	1
  6009  00B89C  ECC2  F097         	call	_system_output_on
  6010                           
  6011                           ;ui.c: 202: }
  6012  00B8A0  D006               	goto	l1801
  6013  00B8A2                     l1798:
  6014                           
  6015                           ;ui.c: 203: else if(os.encoderCount<0)
  6016  00B8A2  0102               	movlb	2	; () banked
  6017  00B8A4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6018  00B8A6  D003               	goto	l1801
  6019                           
  6020                           ; BSR set to: 2
  6021                           ;ui.c: 204: {;ui.c: 205: system_output_off(OUTPUT_1);
  6022  00B8A8  0E01               	movlw	1
  6023  00B8AA  ECD5  F095         	call	_system_output_off
  6024  00B8AE                     l1801:
  6025                           
  6026                           ;ui.c: 206: };ui.c: 207: if(os.buttonCount)
  6027  00B8AE  0102               	movlb	2	; () banked
  6028  00B8B0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6029  00B8B2  B4D8               	btfsc	status,2,c
  6030  00B8B4  D002               	goto	l1802
  6031                           
  6032                           ; BSR set to: 2
  6033                           ;ui.c: 208: {;ui.c: 209: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6034  00B8B6  0E32               	movlw	50
  6035  00B8B8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6036  00B8BA                     l1802:
  6037                           
  6038                           ; BSR set to: 2
  6039                           ;ui.c: 210: };ui.c: 211: os.encoderCount = 0;
  6040  00B8BA  0E00               	movlw	0
  6041  00B8BC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6042                           
  6043                           ;ui.c: 212: os.buttonCount = 0;
  6044  00B8BE  0E00               	movlw	0
  6045  00B8C0  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6046                           
  6047                           ;ui.c: 213: break;
  6048  00B8C2  0012               	return	
  6049  00B8C4                     
  6050                           ; BSR set to: 2
  6051                           ;ui.c: 216: if(os.encoderCount>0)
  6052                           
  6053                           ; BSR set to: 2
  6054  00B8C4  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6055  00B8C6  0A80               	xorlw	128
  6056  00B8C8  0F7F               	addlw	-129
  6057  00B8CA  A0D8               	btfss	status,0,c
  6058  00B8CC  D006               	goto	l1804
  6059                           
  6060                           ; BSR set to: 2
  6061                           ;ui.c: 217: {;ui.c: 218: if(os.output_voltage>-1)
  6062  00B8CE  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6063  00B8D0  D00A               	goto	l1807
  6064                           
  6065                           ; BSR set to: 2
  6066                           ;ui.c: 219: system_output_on(OUTPUT_2);
  6067  00B8D2  0E02               	movlw	2
  6068  00B8D4  ECC2  F097         	call	_system_output_on
  6069                           
  6070                           ;ui.c: 220: }
  6071  00B8D8  D006               	goto	l1807
  6072  00B8DA                     l1804:
  6073                           
  6074                           ;ui.c: 221: else if(os.encoderCount<0)
  6075  00B8DA  0102               	movlb	2	; () banked
  6076  00B8DC  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6077  00B8DE  D003               	goto	l1807
  6078                           
  6079                           ; BSR set to: 2
  6080                           ;ui.c: 222: {;ui.c: 223: system_output_off(OUTPUT_2);
  6081  00B8E0  0E02               	movlw	2
  6082  00B8E2  ECD5  F095         	call	_system_output_off
  6083  00B8E6                     l1807:
  6084                           
  6085                           ;ui.c: 224: };ui.c: 225: if(os.buttonCount)
  6086  00B8E6  0102               	movlb	2	; () banked
  6087  00B8E8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6088  00B8EA  B4D8               	btfsc	status,2,c
  6089  00B8EC  D002               	goto	l1808
  6090                           
  6091                           ; BSR set to: 2
  6092                           ;ui.c: 226: {;ui.c: 227: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6093  00B8EE  0E33               	movlw	51
  6094  00B8F0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6095  00B8F2                     l1808:
  6096                           
  6097                           ; BSR set to: 2
  6098                           ;ui.c: 228: };ui.c: 229: os.encoderCount = 0;
  6099  00B8F2  0E00               	movlw	0
  6100  00B8F4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6101                           
  6102                           ;ui.c: 230: os.buttonCount = 0;
  6103  00B8F6  0E00               	movlw	0
  6104  00B8F8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6105                           
  6106                           ;ui.c: 231: break;
  6107  00B8FA  0012               	return	
  6108  00B8FC                     
  6109                           ; BSR set to: 2
  6110                           ;ui.c: 234: if(os.encoderCount>0)
  6111                           
  6112                           ; BSR set to: 2
  6113  00B8FC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6114  00B8FE  0A80               	xorlw	128
  6115  00B900  0F7F               	addlw	-129
  6116  00B902  A0D8               	btfss	status,0,c
  6117  00B904  D006               	goto	l1810
  6118                           
  6119                           ; BSR set to: 2
  6120                           ;ui.c: 235: {;ui.c: 236: if(os.output_voltage>-1)
  6121  00B906  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6122  00B908  D00A               	goto	l1813
  6123                           
  6124                           ; BSR set to: 2
  6125                           ;ui.c: 237: system_output_on(OUTPUT_3);
  6126  00B90A  0E04               	movlw	4
  6127  00B90C  ECC2  F097         	call	_system_output_on
  6128                           
  6129                           ;ui.c: 238: }
  6130  00B910  D006               	goto	l1813
  6131  00B912                     l1810:
  6132                           
  6133                           ;ui.c: 239: else if(os.encoderCount<0)
  6134  00B912  0102               	movlb	2	; () banked
  6135  00B914  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6136  00B916  D003               	goto	l1813
  6137                           
  6138                           ; BSR set to: 2
  6139                           ;ui.c: 240: {;ui.c: 241: system_output_off(OUTPUT_3);
  6140  00B918  0E04               	movlw	4
  6141  00B91A  ECD5  F095         	call	_system_output_off
  6142  00B91E                     l1813:
  6143                           
  6144                           ;ui.c: 242: };ui.c: 243: if(os.buttonCount)
  6145  00B91E  0102               	movlb	2	; () banked
  6146  00B920  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6147  00B922  B4D8               	btfsc	status,2,c
  6148  00B924  D002               	goto	l1814
  6149                           
  6150                           ; BSR set to: 2
  6151                           ;ui.c: 244: {;ui.c: 245: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6152  00B926  0E34               	movlw	52
  6153  00B928  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6154  00B92A                     l1814:
  6155                           
  6156                           ; BSR set to: 2
  6157                           ;ui.c: 246: };ui.c: 247: os.encoderCount = 0;
  6158  00B92A  0E00               	movlw	0
  6159  00B92C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6160                           
  6161                           ;ui.c: 248: os.buttonCount = 0;
  6162  00B92E  0E00               	movlw	0
  6163  00B930  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6164                           
  6165                           ;ui.c: 249: break;
  6166  00B932  0012               	return	
  6167  00B934                     
  6168                           ; BSR set to: 2
  6169                           ;ui.c: 252: if(os.encoderCount>0)
  6170                           
  6171                           ; BSR set to: 2
  6172  00B934  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6173  00B936  0A80               	xorlw	128
  6174  00B938  0F7F               	addlw	-129
  6175  00B93A  A0D8               	btfss	status,0,c
  6176  00B93C  D006               	goto	l1816
  6177                           
  6178                           ; BSR set to: 2
  6179                           ;ui.c: 253: {;ui.c: 254: if(os.output_voltage>-1)
  6180  00B93E  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6181  00B940  D00A               	goto	l1819
  6182                           
  6183                           ; BSR set to: 2
  6184                           ;ui.c: 255: system_output_on(OUTPUT_4);
  6185  00B942  0E08               	movlw	8
  6186  00B944  ECC2  F097         	call	_system_output_on
  6187                           
  6188                           ;ui.c: 256: }
  6189  00B948  D006               	goto	l1819
  6190  00B94A                     l1816:
  6191                           
  6192                           ;ui.c: 257: else if(os.encoderCount<0)
  6193  00B94A  0102               	movlb	2	; () banked
  6194  00B94C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6195  00B94E  D003               	goto	l1819
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;ui.c: 258: {;ui.c: 259: system_output_off(OUTPUT_4);
  6199  00B950  0E08               	movlw	8
  6200  00B952  ECD5  F095         	call	_system_output_off
  6201  00B956                     l1819:
  6202                           
  6203                           ;ui.c: 260: };ui.c: 261: if(os.buttonCount)
  6204  00B956  0102               	movlb	2	; () banked
  6205  00B958  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6206  00B95A  B4D8               	btfsc	status,2,c
  6207  00B95C  D002               	goto	l1820
  6208                           
  6209                           ; BSR set to: 2
  6210                           ;ui.c: 262: {;ui.c: 263: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6211  00B95E  0E30               	movlw	48
  6212  00B960  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6213  00B962                     l1820:
  6214                           
  6215                           ; BSR set to: 2
  6216                           ;ui.c: 264: };ui.c: 265: os.encoderCount = 0;
  6217  00B962  0E00               	movlw	0
  6218  00B964  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6219                           
  6220                           ;ui.c: 266: os.buttonCount = 0;
  6221  00B966  0E00               	movlw	0
  6222  00B968  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6223                           
  6224                           ;ui.c: 267: break;
  6225  00B96A  0012               	return	
  6226  00B96C                     
  6227                           ; BSR set to: 2
  6228                           ;ui.c: 270: if(os.encoderCount>0)
  6229                           
  6230                           ; BSR set to: 2
  6231  00B96C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6232  00B96E  0A80               	xorlw	128
  6233  00B970  0F7F               	addlw	-129
  6234  00B972  A0D8               	btfss	status,0,c
  6235  00B974  D002               	goto	l1822
  6236                           
  6237                           ; BSR set to: 2
  6238                           ;ui.c: 271: {;ui.c: 272: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6239  00B976  0E50               	movlw	80
  6240  00B978  D003               	goto	L5
  6241  00B97A                     l1822:
  6242                           
  6243                           ; BSR set to: 2
  6244                           ;ui.c: 274: else if(os.encoderCount<0)
  6245                           
  6246                           ; BSR set to: 2
  6247  00B97A  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6248  00B97C  D002               	goto	l1824
  6249                           
  6250                           ; BSR set to: 2
  6251                           ;ui.c: 275: {;ui.c: 276: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6252  00B97E  0E30               	movlw	48
  6253  00B980                     L5:
  6254  00B980  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6255  00B982                     l1824:
  6256                           
  6257                           ; BSR set to: 2
  6258                           ;ui.c: 277: };ui.c: 278: if(os.buttonCount)
  6259                           
  6260                           ; BSR set to: 2
  6261  00B982  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6262                           
  6263                           ; BSR set to: 2
  6264                           ;ui.c: 281: };ui.c: 282: os.encoderCount = 0;
  6265                           
  6266                           ; BSR set to: 2
  6267                           
  6268                           ;ui.c: 279: {;ui.c: 280: ;
  6269  00B984  0E00               	movlw	0
  6270  00B986  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6271                           
  6272                           ;ui.c: 283: os.buttonCount = 0;
  6273  00B988  0E00               	movlw	0
  6274  00B98A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6275                           
  6276                           ;ui.c: 284: break;
  6277  00B98C  0012               	return	
  6278  00B98E                     
  6279                           ; BSR set to: 2
  6280                           ;ui.c: 287: if(os.encoderCount>0)
  6281                           
  6282                           ; BSR set to: 2
  6283  00B98E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6284  00B990  0A80               	xorlw	128
  6285  00B992  0F7F               	addlw	-129
  6286  00B994  A0D8               	btfss	status,0,c
  6287  00B996  D002               	goto	l1827
  6288                           
  6289                           ; BSR set to: 2
  6290                           ;ui.c: 288: {;ui.c: 289: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6291  00B998  0E60               	movlw	96
  6292  00B99A  D003               	goto	L6
  6293  00B99C                     l1827:
  6294                           
  6295                           ; BSR set to: 2
  6296                           ;ui.c: 291: else if(os.encoderCount<0)
  6297                           
  6298                           ; BSR set to: 2
  6299  00B99C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6300  00B99E  D002               	goto	l1829
  6301                           
  6302                           ; BSR set to: 2
  6303                           ;ui.c: 292: {;ui.c: 293: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6304  00B9A0  0E40               	movlw	64
  6305  00B9A2                     L6:
  6306  00B9A2  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6307  00B9A4                     l1829:
  6308                           
  6309                           ; BSR set to: 2
  6310                           ;ui.c: 294: };ui.c: 295: if(os.buttonCount)
  6311                           
  6312                           ; BSR set to: 2
  6313  00B9A4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6314                           
  6315                           ; BSR set to: 2
  6316                           ;ui.c: 298: };ui.c: 299: os.encoderCount = 0;
  6317                           
  6318                           ; BSR set to: 2
  6319                           
  6320                           ;ui.c: 296: {;ui.c: 297: ;
  6321  00B9A6  0E00               	movlw	0
  6322  00B9A8  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6323                           
  6324                           ;ui.c: 300: os.buttonCount = 0;
  6325  00B9AA  0E00               	movlw	0
  6326  00B9AC  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6327                           
  6328                           ;ui.c: 301: break;
  6329  00B9AE  0012               	return	
  6330  00B9B0                     
  6331                           ; BSR set to: 2
  6332                           ;ui.c: 304: if(os.encoderCount>0)
  6333                           
  6334                           ; BSR set to: 2
  6335  00B9B0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6336  00B9B2  0A80               	xorlw	128
  6337  00B9B4  0F7F               	addlw	-129
  6338  00B9B6  A0D8               	btfss	status,0,c
  6339  00B9B8  D002               	goto	l1832
  6340                           
  6341                           ; BSR set to: 2
  6342                           ;ui.c: 305: {;ui.c: 306: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6343  00B9BA  0E00               	movlw	0
  6344  00B9BC  D003               	goto	L7
  6345  00B9BE                     l1832:
  6346                           
  6347                           ; BSR set to: 2
  6348                           ;ui.c: 308: else if(os.encoderCount<0)
  6349                           
  6350                           ; BSR set to: 2
  6351  00B9BE  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6352  00B9C0  D002               	goto	l1834
  6353                           
  6354                           ; BSR set to: 2
  6355                           ;ui.c: 309: {;ui.c: 310: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6356  00B9C2  0E50               	movlw	80
  6357  00B9C4                     L7:
  6358  00B9C4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6359  00B9C6                     l1834:
  6360                           
  6361                           ; BSR set to: 2
  6362                           ;ui.c: 311: };ui.c: 312: if(os.buttonCount)
  6363                           
  6364                           ; BSR set to: 2
  6365  00B9C6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6366                           
  6367                           ; BSR set to: 2
  6368                           ;ui.c: 315: };ui.c: 316: os.encoderCount = 0;
  6369                           
  6370                           ; BSR set to: 2
  6371                           
  6372                           ;ui.c: 313: {;ui.c: 314: ;
  6373  00B9C8  0E00               	movlw	0
  6374  00B9CA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6375                           
  6376                           ;ui.c: 317: os.buttonCount = 0;
  6377  00B9CC  0E00               	movlw	0
  6378  00B9CE  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6379                           
  6380                           ;ui.c: 318: break;
  6381  00B9D0  0012               	return	
  6382  00B9D2                     
  6383                           ; BSR set to: 2
  6384                           ;ui.c: 321: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6385                           
  6386                           ; BSR set to: 2
  6387  00B9D2  0E00               	movlw	0
  6388  00B9D4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6389                           
  6390                           ;ui.c: 322: }
  6391  00B9D6  0012               	return	
  6392  00B9D8                     l1744:
  6393                           
  6394                           ; BSR set to: 2
  6395  00B9D8  0102               	movlb	2	; () banked
  6396  00B9DA  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  6397                           
  6398                           ; Switch size 1, requested type "space"
  6399                           ; Number of cases is 17, Range of values is 0 to 96
  6400                           ; switch strategies available:
  6401                           ; Name         Instructions Cycles
  6402                           ; simple_byte           52    27 (average)
  6403                           ;	Chosen strategy is simple_byte
  6404  00B9DC  0A00               	xorlw	0	; case 0
  6405  00B9DE  B4D8               	btfsc	status,2,c
  6406  00B9E0  D668               	goto	l1745
  6407  00B9E2  0A10               	xorlw	16	; case 16
  6408  00B9E4  B4D8               	btfsc	status,2,c
  6409  00B9E6  D677               	goto	l1751
  6410  00B9E8  0A01               	xorlw	1	; case 17
  6411  00B9EA  B4D8               	btfsc	status,2,c
  6412  00B9EC  D689               	goto	l1756
  6413  00B9EE  0A03               	xorlw	3	; case 18
  6414  00B9F0  B4D8               	btfsc	status,2,c
  6415  00B9F2  D6A0               	goto	l1761
  6416  00B9F4  0A01               	xorlw	1	; case 19
  6417  00B9F6  B4D8               	btfsc	status,2,c
  6418  00B9F8  D6B7               	goto	l1766
  6419  00B9FA  0A07               	xorlw	7	; case 20
  6420  00B9FC  B4D8               	btfsc	status,2,c
  6421  00B9FE  D6CB               	goto	l1771
  6422  00BA00  0A01               	xorlw	1	; case 21
  6423  00BA02  B4D8               	btfsc	status,2,c
  6424  00BA04  D6DF               	goto	l1776
  6425  00BA06  0A03               	xorlw	3	; case 22
  6426  00BA08  B4D8               	btfsc	status,2,c
  6427  00BA0A  D6F3               	goto	l1781
  6428  00BA0C  0A36               	xorlw	54	; case 32
  6429  00BA0E  B4D8               	btfsc	status,2,c
  6430  00BA10  D70A               	goto	l1786
  6431  00BA12  0A10               	xorlw	16	; case 48
  6432  00BA14  B4D8               	btfsc	status,2,c
  6433  00BA16  D725               	goto	l1792
  6434  00BA18  0A01               	xorlw	1	; case 49
  6435  00BA1A  B4D8               	btfsc	status,2,c
  6436  00BA1C  D737               	goto	l1797
  6437  00BA1E  0A03               	xorlw	3	; case 50
  6438  00BA20  B4D8               	btfsc	status,2,c
  6439  00BA22  D750               	goto	l1803
  6440  00BA24  0A01               	xorlw	1	; case 51
  6441  00BA26  B4D8               	btfsc	status,2,c
  6442  00BA28  D769               	goto	l1809
  6443  00BA2A  0A07               	xorlw	7	; case 52
  6444  00BA2C  B4D8               	btfsc	status,2,c
  6445  00BA2E  D782               	goto	l1815
  6446  00BA30  0A74               	xorlw	116	; case 64
  6447  00BA32  B4D8               	btfsc	status,2,c
  6448  00BA34  D79B               	goto	l1821
  6449  00BA36  0A10               	xorlw	16	; case 80
  6450  00BA38  B4D8               	btfsc	status,2,c
  6451  00BA3A  D7A9               	goto	l1826
  6452  00BA3C  0A30               	xorlw	48	; case 96
  6453  00BA3E  B4D8               	btfsc	status,2,c
  6454  00BA40  D7B7               	goto	l1831
  6455  00BA42  D7C7               	goto	l1836
  6456  00BA44                     __end_of__ui_encoder:
  6457                           	opt stack 0
  6458                           tblptru	equ	0xFF8
  6459                           tblptrh	equ	0xFF7
  6460                           tblptrl	equ	0xFF6
  6461                           tablat	equ	0xFF5
  6462                           intcon3	equ	0xFF0
  6463                           postinc0	equ	0xFEE
  6464                           wreg	equ	0xFE8
  6465                           postdec1	equ	0xFE5
  6466                           plusw1	equ	0xFE3
  6467                           fsr1h	equ	0xFE2
  6468                           fsr1l	equ	0xFE1
  6469                           postinc2	equ	0xFDE
  6470                           postdec2	equ	0xFDD
  6471                           plusw2	equ	0xFDB
  6472                           fsr2h	equ	0xFDA
  6473                           fsr2l	equ	0xFD9
  6474                           status	equ	0xFD8
  6475                           
  6476 ;; *************** function _system_output_toggle *****************
  6477 ;; Defined at:
  6478 ;;		line 499 in file "os.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  output          1    wreg     enum E6652
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  output          1    2[BANK0 ] enum E6652
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6495 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6496 ;;Total ram usage:        1 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:   11
  6499 ;; This function calls:
  6500 ;;		_system_output_is_on
  6501 ;;		_system_output_off
  6502 ;;		_system_output_on
  6503 ;; This function is called by:
  6504 ;;		__ui_encoder
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text9
  6509  0138E6                     __ptext9:
  6510                           	opt stack 0
  6511  0138E6                     _system_output_toggle:
  6512                           	opt stack 17
  6513                           
  6514                           ; BSR set to: 2
  6515                           ;incstack = 0
  6516                           ;system_output_toggle@output stored from wreg
  6517  0138E6  0100               	movlb	0	; () banked
  6518  0138E8  6F62               	movwf	system_output_toggle@output& (0+255),b
  6519                           
  6520                           ;os.c: 501: if(system_output_is_on(output))
  6521  0138EA  0100               	movlb	0	; () banked
  6522  0138EC  5162               	movf	system_output_toggle@output& (0+255),w,b
  6523  0138EE  ECF1  F09D         	call	_system_output_is_on
  6524  0138F2  0900               	iorlw	0
  6525  0138F4  B4D8               	btfsc	status,2,c
  6526  0138F6  D005               	goto	l1401
  6527                           
  6528                           ;os.c: 502: system_output_off(output);
  6529  0138F8  0100               	movlb	0	; () banked
  6530  0138FA  5162               	movf	system_output_toggle@output& (0+255),w,b
  6531  0138FC  ECD5  F095         	call	_system_output_off
  6532  013900  0012               	return	
  6533  013902                     l1401:
  6534                           
  6535                           ;os.c: 503: else;os.c: 504: system_output_on(output);
  6536  013902  0100               	movlb	0	; () banked
  6537  013904  5162               	movf	system_output_toggle@output& (0+255),w,b
  6538  013906  ECC2  F097         	call	_system_output_on
  6539  01390A  0012               	return	
  6540  01390C                     __end_of_system_output_toggle:
  6541                           	opt stack 0
  6542                           tblptru	equ	0xFF8
  6543                           tblptrh	equ	0xFF7
  6544                           tblptrl	equ	0xFF6
  6545                           tablat	equ	0xFF5
  6546                           intcon3	equ	0xFF0
  6547                           postinc0	equ	0xFEE
  6548                           wreg	equ	0xFE8
  6549                           postdec1	equ	0xFE5
  6550                           plusw1	equ	0xFE3
  6551                           fsr1h	equ	0xFE2
  6552                           fsr1l	equ	0xFE1
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           plusw2	equ	0xFDB
  6556                           fsr2h	equ	0xFDA
  6557                           fsr2l	equ	0xFD9
  6558                           status	equ	0xFD8
  6559                           
  6560 ;; *************** function _rtcc_increment_year *****************
  6561 ;; Defined at:
  6562 ;;		line 150 in file "rtcc.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  year            1    8[BANK0 ] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6580 ;;Total ram usage:        1 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:   12
  6583 ;; This function calls:
  6584 ;;		__rtcc_increment_bcd
  6585 ;;		_rtcc_get_year
  6586 ;;		_rtcc_set_year
  6587 ;; This function is called by:
  6588 ;;		__ui_encoder
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text10
  6593  0139A0                     __ptext10:
  6594                           	opt stack 0
  6595  0139A0                     _rtcc_increment_year:
  6596                           	opt stack 16
  6597                           
  6598                           ;rtcc.c: 152: uint8_t year = rtcc_get_year();
  6599                           
  6600                           ;incstack = 0
  6601  0139A0  EC04  F09F         	call	_rtcc_get_year	;wreg free
  6602  0139A4  0100               	movlb	0	; () banked
  6603  0139A6  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;rtcc.c: 153: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  6607  0139A8  0E00               	movlw	0
  6608  0139AA  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6609  0139AC  0E99               	movlw	153
  6610  0139AE  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6611  0139B0  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6612  0139B2  EC32  F09B         	call	__rtcc_increment_bcd
  6613  0139B6  0100               	movlb	0	; () banked
  6614  0139B8  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;rtcc.c: 154: rtcc_set_year(year);
  6618  0139BA  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6619  0139BC  EC23  F09E         	call	_rtcc_set_year
  6620  0139C0  0012               	return		;funcret
  6621  0139C2                     __end_of_rtcc_increment_year:
  6622                           	opt stack 0
  6623                           tblptru	equ	0xFF8
  6624                           tblptrh	equ	0xFF7
  6625                           tblptrl	equ	0xFF6
  6626                           tablat	equ	0xFF5
  6627                           intcon3	equ	0xFF0
  6628                           postinc0	equ	0xFEE
  6629                           wreg	equ	0xFE8
  6630                           postdec1	equ	0xFE5
  6631                           plusw1	equ	0xFE3
  6632                           fsr1h	equ	0xFE2
  6633                           fsr1l	equ	0xFE1
  6634                           postinc2	equ	0xFDE
  6635                           postdec2	equ	0xFDD
  6636                           plusw2	equ	0xFDB
  6637                           fsr2h	equ	0xFDA
  6638                           fsr2l	equ	0xFD9
  6639                           status	equ	0xFD8
  6640                           
  6641 ;; *************** function _rtcc_increment_seconds *****************
  6642 ;; Defined at:
  6643 ;;		line 340 in file "rtcc.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  seconds         1    8[BANK0 ] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;Total ram usage:        1 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:   12
  6664 ;; This function calls:
  6665 ;;		__rtcc_increment_bcd
  6666 ;;		_rtcc_get_seconds
  6667 ;;		_rtcc_set_seconds
  6668 ;; This function is called by:
  6669 ;;		__ui_encoder
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text11
  6674  0139C2                     __ptext11:
  6675                           	opt stack 0
  6676  0139C2                     _rtcc_increment_seconds:
  6677                           	opt stack 16
  6678                           
  6679                           ;rtcc.c: 342: uint8_t seconds = rtcc_get_seconds();
  6680                           
  6681                           ;incstack = 0
  6682  0139C2  EC0B  F09F         	call	_rtcc_get_seconds	;wreg free
  6683  0139C6  0100               	movlb	0	; () banked
  6684  0139C8  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;rtcc.c: 343: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  6688  0139CA  0E00               	movlw	0
  6689  0139CC  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6690  0139CE  0E59               	movlw	89
  6691  0139D0  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6692  0139D2  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6693  0139D4  EC32  F09B         	call	__rtcc_increment_bcd
  6694  0139D8  0100               	movlb	0	; () banked
  6695  0139DA  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;rtcc.c: 344: rtcc_set_seconds(seconds);
  6699  0139DC  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6700  0139DE  EC2F  F09E         	call	_rtcc_set_seconds
  6701  0139E2  0012               	return		;funcret
  6702  0139E4                     __end_of_rtcc_increment_seconds:
  6703                           	opt stack 0
  6704                           tblptru	equ	0xFF8
  6705                           tblptrh	equ	0xFF7
  6706                           tblptrl	equ	0xFF6
  6707                           tablat	equ	0xFF5
  6708                           intcon3	equ	0xFF0
  6709                           postinc0	equ	0xFEE
  6710                           wreg	equ	0xFE8
  6711                           postdec1	equ	0xFE5
  6712                           plusw1	equ	0xFE3
  6713                           fsr1h	equ	0xFE2
  6714                           fsr1l	equ	0xFE1
  6715                           postinc2	equ	0xFDE
  6716                           postdec2	equ	0xFDD
  6717                           plusw2	equ	0xFDB
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _rtcc_increment_month *****************
  6723 ;; Defined at:
  6724 ;;		line 188 in file "rtcc.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  month           1    8[BANK0 ] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      void 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;Total ram usage:        1 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:   12
  6745 ;; This function calls:
  6746 ;;		__rtcc_increment_bcd
  6747 ;;		_rtcc_get_month
  6748 ;;		_rtcc_set_month
  6749 ;; This function is called by:
  6750 ;;		__ui_encoder
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text12
  6755  0139E4                     __ptext12:
  6756                           	opt stack 0
  6757  0139E4                     _rtcc_increment_month:
  6758                           	opt stack 16
  6759                           
  6760                           ;rtcc.c: 190: uint8_t month = rtcc_get_month();
  6761                           
  6762                           ;incstack = 0
  6763  0139E4  EC12  F09F         	call	_rtcc_get_month	;wreg free
  6764  0139E8  0100               	movlb	0	; () banked
  6765  0139EA  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;rtcc.c: 191: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  6769  0139EC  0E01               	movlw	1
  6770  0139EE  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6771  0139F0  0E12               	movlw	18
  6772  0139F2  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6773  0139F4  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6774  0139F6  EC32  F09B         	call	__rtcc_increment_bcd
  6775  0139FA  0100               	movlb	0	; () banked
  6776  0139FC  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;rtcc.c: 192: rtcc_set_month(month);
  6780  0139FE  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  6781  013A00  EC3B  F09E         	call	_rtcc_set_month
  6782  013A04  0012               	return		;funcret
  6783  013A06                     __end_of_rtcc_increment_month:
  6784                           	opt stack 0
  6785                           tblptru	equ	0xFF8
  6786                           tblptrh	equ	0xFF7
  6787                           tblptrl	equ	0xFF6
  6788                           tablat	equ	0xFF5
  6789                           intcon3	equ	0xFF0
  6790                           postinc0	equ	0xFEE
  6791                           wreg	equ	0xFE8
  6792                           postdec1	equ	0xFE5
  6793                           plusw1	equ	0xFE3
  6794                           fsr1h	equ	0xFE2
  6795                           fsr1l	equ	0xFE1
  6796                           postinc2	equ	0xFDE
  6797                           postdec2	equ	0xFDD
  6798                           plusw2	equ	0xFDB
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _rtcc_increment_minutes *****************
  6804 ;; Defined at:
  6805 ;;		line 302 in file "rtcc.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  minutes         1    8[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;Total ram usage:        1 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:   12
  6826 ;; This function calls:
  6827 ;;		__rtcc_increment_bcd
  6828 ;;		_rtcc_get_minutes
  6829 ;;		_rtcc_set_minutes
  6830 ;; This function is called by:
  6831 ;;		__ui_encoder
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text13
  6836  013A06                     __ptext13:
  6837                           	opt stack 0
  6838  013A06                     _rtcc_increment_minutes:
  6839                           	opt stack 16
  6840                           
  6841                           ;rtcc.c: 304: uint8_t minutes = rtcc_get_minutes();
  6842                           
  6843                           ;incstack = 0
  6844  013A06  EC19  F09F         	call	_rtcc_get_minutes	;wreg free
  6845  013A0A  0100               	movlb	0	; () banked
  6846  013A0C  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;rtcc.c: 305: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  6850  013A0E  0E00               	movlw	0
  6851  013A10  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6852  013A12  0E59               	movlw	89
  6853  013A14  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6854  013A16  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6855  013A18  EC32  F09B         	call	__rtcc_increment_bcd
  6856  013A1C  0100               	movlb	0	; () banked
  6857  013A1E  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;rtcc.c: 306: rtcc_set_minutes(minutes);
  6861  013A20  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  6862  013A22  EC47  F09E         	call	_rtcc_set_minutes
  6863  013A26  0012               	return		;funcret
  6864  013A28                     __end_of_rtcc_increment_minutes:
  6865                           	opt stack 0
  6866                           tblptru	equ	0xFF8
  6867                           tblptrh	equ	0xFF7
  6868                           tblptrl	equ	0xFF6
  6869                           tablat	equ	0xFF5
  6870                           intcon3	equ	0xFF0
  6871                           postinc0	equ	0xFEE
  6872                           wreg	equ	0xFE8
  6873                           postdec1	equ	0xFE5
  6874                           plusw1	equ	0xFE3
  6875                           fsr1h	equ	0xFE2
  6876                           fsr1l	equ	0xFE1
  6877                           postinc2	equ	0xFDE
  6878                           postdec2	equ	0xFDD
  6879                           plusw2	equ	0xFDB
  6880                           fsr2h	equ	0xFDA
  6881                           fsr2l	equ	0xFD9
  6882                           status	equ	0xFD8
  6883                           
  6884 ;; *************** function _rtcc_increment_hours *****************
  6885 ;; Defined at:
  6886 ;;		line 264 in file "rtcc.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;		None
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  hours           1    8[BANK0 ] unsigned char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      void 
  6893 ;; Registers used:
  6894 ;;		wreg, status,2, status,0, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;Total ram usage:        1 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:   12
  6907 ;; This function calls:
  6908 ;;		__rtcc_increment_bcd
  6909 ;;		_rtcc_get_hours
  6910 ;;		_rtcc_set_hours
  6911 ;; This function is called by:
  6912 ;;		__ui_encoder
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text14
  6917  013A28                     __ptext14:
  6918                           	opt stack 0
  6919  013A28                     _rtcc_increment_hours:
  6920                           	opt stack 16
  6921                           
  6922                           ;rtcc.c: 266: uint8_t hours = rtcc_get_hours();
  6923                           
  6924                           ;incstack = 0
  6925  013A28  EC20  F09F         	call	_rtcc_get_hours	;wreg free
  6926  013A2C  0100               	movlb	0	; () banked
  6927  013A2E  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;rtcc.c: 267: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  6931  013A30  0E00               	movlw	0
  6932  013A32  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6933  013A34  0E23               	movlw	35
  6934  013A36  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6935  013A38  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  6936  013A3A  EC32  F09B         	call	__rtcc_increment_bcd
  6937  013A3E  0100               	movlb	0	; () banked
  6938  013A40  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;rtcc.c: 268: rtcc_set_hours(hours);
  6942  013A42  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  6943  013A44  EC53  F09E         	call	_rtcc_set_hours
  6944  013A48  0012               	return		;funcret
  6945  013A4A                     __end_of_rtcc_increment_hours:
  6946                           	opt stack 0
  6947                           tblptru	equ	0xFF8
  6948                           tblptrh	equ	0xFF7
  6949                           tblptrl	equ	0xFF6
  6950                           tablat	equ	0xFF5
  6951                           intcon3	equ	0xFF0
  6952                           postinc0	equ	0xFEE
  6953                           wreg	equ	0xFE8
  6954                           postdec1	equ	0xFE5
  6955                           plusw1	equ	0xFE3
  6956                           fsr1h	equ	0xFE2
  6957                           fsr1l	equ	0xFE1
  6958                           postinc2	equ	0xFDE
  6959                           postdec2	equ	0xFDD
  6960                           plusw2	equ	0xFDB
  6961                           fsr2h	equ	0xFDA
  6962                           fsr2l	equ	0xFD9
  6963                           status	equ	0xFD8
  6964                           
  6965 ;; *************** function _rtcc_increment_day *****************
  6966 ;; Defined at:
  6967 ;;		line 226 in file "rtcc.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  day             1    8[BANK0 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6984 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;Total ram usage:        1 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:   12
  6988 ;; This function calls:
  6989 ;;		__number_of_days
  6990 ;;		__rtcc_increment_bcd
  6991 ;;		_rtcc_get_day
  6992 ;;		_rtcc_set_day
  6993 ;; This function is called by:
  6994 ;;		__ui_encoder
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text15
  6999  01390C                     __ptext15:
  7000                           	opt stack 0
  7001  01390C                     _rtcc_increment_day:
  7002                           	opt stack 16
  7003                           
  7004                           ;rtcc.c: 228: uint8_t day = rtcc_get_day();
  7005                           
  7006                           ;incstack = 0
  7007  01390C  EC27  F09F         	call	_rtcc_get_day	;wreg free
  7008  013910  0100               	movlb	0	; () banked
  7009  013912  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;rtcc.c: 229: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7013  013914  0E01               	movlw	1
  7014  013916  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7015  013918  ECF6  F091         	call	__number_of_days	;wreg free
  7016  01391C  0100               	movlb	0	; () banked
  7017  01391E  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7018  013920  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7019  013922  EC32  F09B         	call	__rtcc_increment_bcd
  7020  013926  0100               	movlb	0	; () banked
  7021  013928  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;rtcc.c: 230: rtcc_set_day(day);
  7025  01392A  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7026  01392C  EC5F  F09E         	call	_rtcc_set_day
  7027  013930  0012               	return		;funcret
  7028  013932                     __end_of_rtcc_increment_day:
  7029                           	opt stack 0
  7030                           tblptru	equ	0xFF8
  7031                           tblptrh	equ	0xFF7
  7032                           tblptrl	equ	0xFF6
  7033                           tablat	equ	0xFF5
  7034                           intcon3	equ	0xFF0
  7035                           postinc0	equ	0xFEE
  7036                           wreg	equ	0xFE8
  7037                           postdec1	equ	0xFE5
  7038                           plusw1	equ	0xFE3
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           postinc2	equ	0xFDE
  7042                           postdec2	equ	0xFDD
  7043                           plusw2	equ	0xFDB
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function __rtcc_increment_bcd *****************
  7049 ;; Defined at:
  7050 ;;		line 34 in file "rtcc.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  value           1    wreg     unsigned char 
  7053 ;;  min             1    4[BANK0 ] unsigned char 
  7054 ;;  max             1    5[BANK0 ] unsigned char 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;  value           1    7[BANK0 ] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      unsigned char 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7069 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7070 ;;Total ram usage:        4 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:   10
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_rtcc_increment_year
  7077 ;;		_rtcc_increment_month
  7078 ;;		_rtcc_increment_day
  7079 ;;		_rtcc_increment_hours
  7080 ;;		_rtcc_increment_minutes
  7081 ;;		_rtcc_increment_seconds
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text16
  7086  013664                     __ptext16:
  7087                           	opt stack 0
  7088  013664                     __rtcc_increment_bcd:
  7089                           	opt stack 17
  7090                           
  7091                           ;incstack = 0
  7092                           ;__rtcc_increment_bcd@value stored from wreg
  7093  013664  0100               	movlb	0	; () banked
  7094  013666  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7095                           
  7096                           ;rtcc.c: 36: if(value==max)
  7097  013668  0100               	movlb	0	; () banked
  7098  01366A  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7099  01366C  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7100  01366E  A4D8               	btfss	status,2,c
  7101  013670  D002               	goto	l2255
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;rtcc.c: 37: return min;
  7105  013672  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7106  013674  0012               	return	
  7107  013676                     l2255:
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;rtcc.c: 38: ++value;
  7111                           
  7112                           ; BSR set to: 0
  7113  013676  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7114                           
  7115                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7116  013678  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7117  01367C  0E0F               	movlw	15
  7118  01367E  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7119  013680  0E09               	movlw	9
  7120  013682  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7121  013684  D004               	goto	l2257
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;rtcc.c: 40: {;rtcc.c: 41: value += 0x10;
  7125  013686  0E10               	movlw	16
  7126  013688  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7127                           
  7128                           ;rtcc.c: 42: value &= 0xF0;
  7129  01368A  0EF0               	movlw	240
  7130  01368C  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7131  01368E                     l2257:
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;rtcc.c: 43: };rtcc.c: 44: return value;
  7135                           
  7136                           ; BSR set to: 0
  7137  01368E  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7138  013690  0012               	return	
  7139  013692                     __end_of__rtcc_increment_bcd:
  7140                           	opt stack 0
  7141                           tblptru	equ	0xFF8
  7142                           tblptrh	equ	0xFF7
  7143                           tblptrl	equ	0xFF6
  7144                           tablat	equ	0xFF5
  7145                           intcon3	equ	0xFF0
  7146                           postinc0	equ	0xFEE
  7147                           wreg	equ	0xFE8
  7148                           postdec1	equ	0xFE5
  7149                           plusw1	equ	0xFE3
  7150                           fsr1h	equ	0xFE2
  7151                           fsr1l	equ	0xFE1
  7152                           postinc2	equ	0xFDE
  7153                           postdec2	equ	0xFDD
  7154                           plusw2	equ	0xFDB
  7155                           fsr2h	equ	0xFDA
  7156                           fsr2l	equ	0xFD9
  7157                           status	equ	0xFD8
  7158                           
  7159 ;; *************** function _rtcc_decrement_year *****************
  7160 ;; Defined at:
  7161 ;;		line 157 in file "rtcc.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  year            1    8[BANK0 ] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7178 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;Total ram usage:        1 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:   12
  7182 ;; This function calls:
  7183 ;;		__rtcc_decrement_bcd
  7184 ;;		_rtcc_get_year
  7185 ;;		_rtcc_set_year
  7186 ;; This function is called by:
  7187 ;;		__ui_encoder
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text17
  7192  013A4A                     __ptext17:
  7193                           	opt stack 0
  7194  013A4A                     _rtcc_decrement_year:
  7195                           	opt stack 16
  7196                           
  7197                           ;rtcc.c: 159: uint8_t year = rtcc_get_year();
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;incstack = 0
  7201  013A4A  EC04  F09F         	call	_rtcc_get_year	;wreg free
  7202  013A4E  0100               	movlb	0	; () banked
  7203  013A50  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;rtcc.c: 160: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  7207  013A52  0E00               	movlw	0
  7208  013A54  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7209  013A56  0E99               	movlw	153
  7210  013A58  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7211  013A5A  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7212  013A5C  EC49  F09B         	call	__rtcc_decrement_bcd
  7213  013A60  0100               	movlb	0	; () banked
  7214  013A62  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;rtcc.c: 161: rtcc_set_year(year);
  7218  013A64  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7219  013A66  EC23  F09E         	call	_rtcc_set_year
  7220  013A6A  0012               	return		;funcret
  7221  013A6C                     __end_of_rtcc_decrement_year:
  7222                           	opt stack 0
  7223                           tblptru	equ	0xFF8
  7224                           tblptrh	equ	0xFF7
  7225                           tblptrl	equ	0xFF6
  7226                           tablat	equ	0xFF5
  7227                           intcon3	equ	0xFF0
  7228                           postinc0	equ	0xFEE
  7229                           wreg	equ	0xFE8
  7230                           postdec1	equ	0xFE5
  7231                           plusw1	equ	0xFE3
  7232                           fsr1h	equ	0xFE2
  7233                           fsr1l	equ	0xFE1
  7234                           postinc2	equ	0xFDE
  7235                           postdec2	equ	0xFDD
  7236                           plusw2	equ	0xFDB
  7237                           fsr2h	equ	0xFDA
  7238                           fsr2l	equ	0xFD9
  7239                           status	equ	0xFD8
  7240                           
  7241 ;; *************** function _rtcc_decrement_seconds *****************
  7242 ;; Defined at:
  7243 ;;		line 347 in file "rtcc.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;		None
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  seconds         1    8[BANK0 ] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7260 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;Total ram usage:        1 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:   12
  7264 ;; This function calls:
  7265 ;;		__rtcc_decrement_bcd
  7266 ;;		_rtcc_get_seconds
  7267 ;;		_rtcc_set_seconds
  7268 ;; This function is called by:
  7269 ;;		__ui_encoder
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text18
  7274  013A6C                     __ptext18:
  7275                           	opt stack 0
  7276  013A6C                     _rtcc_decrement_seconds:
  7277                           	opt stack 16
  7278                           
  7279                           ;rtcc.c: 349: uint8_t seconds = rtcc_get_seconds();
  7280                           
  7281                           ;incstack = 0
  7282  013A6C  EC0B  F09F         	call	_rtcc_get_seconds	;wreg free
  7283  013A70  0100               	movlb	0	; () banked
  7284  013A72  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;rtcc.c: 350: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  7288  013A74  0E00               	movlw	0
  7289  013A76  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7290  013A78  0E59               	movlw	89
  7291  013A7A  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7292  013A7C  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7293  013A7E  EC49  F09B         	call	__rtcc_decrement_bcd
  7294  013A82  0100               	movlb	0	; () banked
  7295  013A84  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;rtcc.c: 351: rtcc_set_seconds(seconds);
  7299  013A86  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7300  013A88  EC2F  F09E         	call	_rtcc_set_seconds
  7301  013A8C  0012               	return		;funcret
  7302  013A8E                     __end_of_rtcc_decrement_seconds:
  7303                           	opt stack 0
  7304                           tblptru	equ	0xFF8
  7305                           tblptrh	equ	0xFF7
  7306                           tblptrl	equ	0xFF6
  7307                           tablat	equ	0xFF5
  7308                           intcon3	equ	0xFF0
  7309                           postinc0	equ	0xFEE
  7310                           wreg	equ	0xFE8
  7311                           postdec1	equ	0xFE5
  7312                           plusw1	equ	0xFE3
  7313                           fsr1h	equ	0xFE2
  7314                           fsr1l	equ	0xFE1
  7315                           postinc2	equ	0xFDE
  7316                           postdec2	equ	0xFDD
  7317                           plusw2	equ	0xFDB
  7318                           fsr2h	equ	0xFDA
  7319                           fsr2l	equ	0xFD9
  7320                           status	equ	0xFD8
  7321                           
  7322 ;; *************** function _rtcc_decrement_month *****************
  7323 ;; Defined at:
  7324 ;;		line 195 in file "rtcc.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  month           1    8[BANK0 ] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7342 ;;Total ram usage:        1 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:   12
  7345 ;; This function calls:
  7346 ;;		__rtcc_decrement_bcd
  7347 ;;		_rtcc_get_month
  7348 ;;		_rtcc_set_month
  7349 ;; This function is called by:
  7350 ;;		__ui_encoder
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text19
  7355  013A8E                     __ptext19:
  7356                           	opt stack 0
  7357  013A8E                     _rtcc_decrement_month:
  7358                           	opt stack 16
  7359                           
  7360                           ;rtcc.c: 197: uint8_t month = rtcc_get_month();
  7361                           
  7362                           ;incstack = 0
  7363  013A8E  EC12  F09F         	call	_rtcc_get_month	;wreg free
  7364  013A92  0100               	movlb	0	; () banked
  7365  013A94  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;rtcc.c: 198: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  7369  013A96  0E01               	movlw	1
  7370  013A98  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7371  013A9A  0E12               	movlw	18
  7372  013A9C  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7373  013A9E  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7374  013AA0  EC49  F09B         	call	__rtcc_decrement_bcd
  7375  013AA4  0100               	movlb	0	; () banked
  7376  013AA6  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;rtcc.c: 199: rtcc_set_month(month);
  7380  013AA8  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7381  013AAA  EC3B  F09E         	call	_rtcc_set_month
  7382  013AAE  0012               	return		;funcret
  7383  013AB0                     __end_of_rtcc_decrement_month:
  7384                           	opt stack 0
  7385                           tblptru	equ	0xFF8
  7386                           tblptrh	equ	0xFF7
  7387                           tblptrl	equ	0xFF6
  7388                           tablat	equ	0xFF5
  7389                           intcon3	equ	0xFF0
  7390                           postinc0	equ	0xFEE
  7391                           wreg	equ	0xFE8
  7392                           postdec1	equ	0xFE5
  7393                           plusw1	equ	0xFE3
  7394                           fsr1h	equ	0xFE2
  7395                           fsr1l	equ	0xFE1
  7396                           postinc2	equ	0xFDE
  7397                           postdec2	equ	0xFDD
  7398                           plusw2	equ	0xFDB
  7399                           fsr2h	equ	0xFDA
  7400                           fsr2l	equ	0xFD9
  7401                           status	equ	0xFD8
  7402                           
  7403 ;; *************** function _rtcc_decrement_minutes *****************
  7404 ;; Defined at:
  7405 ;;		line 309 in file "rtcc.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;  minutes         1    8[BANK0 ] unsigned char 
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;Total ram usage:        1 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:   12
  7426 ;; This function calls:
  7427 ;;		__rtcc_decrement_bcd
  7428 ;;		_rtcc_get_minutes
  7429 ;;		_rtcc_set_minutes
  7430 ;; This function is called by:
  7431 ;;		__ui_encoder
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text20
  7436  013AB0                     __ptext20:
  7437                           	opt stack 0
  7438  013AB0                     _rtcc_decrement_minutes:
  7439                           	opt stack 16
  7440                           
  7441                           ;rtcc.c: 311: uint8_t minutes = rtcc_get_minutes();
  7442                           
  7443                           ;incstack = 0
  7444  013AB0  EC19  F09F         	call	_rtcc_get_minutes	;wreg free
  7445  013AB4  0100               	movlb	0	; () banked
  7446  013AB6  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;rtcc.c: 312: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  7450  013AB8  0E00               	movlw	0
  7451  013ABA  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7452  013ABC  0E59               	movlw	89
  7453  013ABE  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7454  013AC0  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7455  013AC2  EC49  F09B         	call	__rtcc_decrement_bcd
  7456  013AC6  0100               	movlb	0	; () banked
  7457  013AC8  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;rtcc.c: 313: rtcc_set_minutes(minutes);
  7461  013ACA  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7462  013ACC  EC47  F09E         	call	_rtcc_set_minutes
  7463  013AD0  0012               	return		;funcret
  7464  013AD2                     __end_of_rtcc_decrement_minutes:
  7465                           	opt stack 0
  7466                           tblptru	equ	0xFF8
  7467                           tblptrh	equ	0xFF7
  7468                           tblptrl	equ	0xFF6
  7469                           tablat	equ	0xFF5
  7470                           intcon3	equ	0xFF0
  7471                           postinc0	equ	0xFEE
  7472                           wreg	equ	0xFE8
  7473                           postdec1	equ	0xFE5
  7474                           plusw1	equ	0xFE3
  7475                           fsr1h	equ	0xFE2
  7476                           fsr1l	equ	0xFE1
  7477                           postinc2	equ	0xFDE
  7478                           postdec2	equ	0xFDD
  7479                           plusw2	equ	0xFDB
  7480                           fsr2h	equ	0xFDA
  7481                           fsr2l	equ	0xFD9
  7482                           status	equ	0xFD8
  7483                           
  7484 ;; *************** function _rtcc_decrement_hours *****************
  7485 ;; Defined at:
  7486 ;;		line 271 in file "rtcc.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  hours           1    8[BANK0 ] unsigned char 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      void 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2, status,0, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7504 ;;Total ram usage:        1 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:   12
  7507 ;; This function calls:
  7508 ;;		__rtcc_decrement_bcd
  7509 ;;		_rtcc_get_hours
  7510 ;;		_rtcc_set_hours
  7511 ;; This function is called by:
  7512 ;;		__ui_encoder
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text21
  7517  013AD2                     __ptext21:
  7518                           	opt stack 0
  7519  013AD2                     _rtcc_decrement_hours:
  7520                           	opt stack 16
  7521                           
  7522                           ;rtcc.c: 273: uint8_t hours = rtcc_get_hours();
  7523                           
  7524                           ;incstack = 0
  7525  013AD2  EC20  F09F         	call	_rtcc_get_hours	;wreg free
  7526  013AD6  0100               	movlb	0	; () banked
  7527  013AD8  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;rtcc.c: 274: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  7531  013ADA  0E00               	movlw	0
  7532  013ADC  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7533  013ADE  0E23               	movlw	35
  7534  013AE0  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7535  013AE2  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7536  013AE4  EC49  F09B         	call	__rtcc_decrement_bcd
  7537  013AE8  0100               	movlb	0	; () banked
  7538  013AEA  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;rtcc.c: 275: rtcc_set_hours(hours);
  7542  013AEC  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7543  013AEE  EC53  F09E         	call	_rtcc_set_hours
  7544  013AF2  0012               	return		;funcret
  7545  013AF4                     __end_of_rtcc_decrement_hours:
  7546                           	opt stack 0
  7547                           tblptru	equ	0xFF8
  7548                           tblptrh	equ	0xFF7
  7549                           tblptrl	equ	0xFF6
  7550                           tablat	equ	0xFF5
  7551                           intcon3	equ	0xFF0
  7552                           postinc0	equ	0xFEE
  7553                           wreg	equ	0xFE8
  7554                           postdec1	equ	0xFE5
  7555                           plusw1	equ	0xFE3
  7556                           fsr1h	equ	0xFE2
  7557                           fsr1l	equ	0xFE1
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           plusw2	equ	0xFDB
  7561                           fsr2h	equ	0xFDA
  7562                           fsr2l	equ	0xFD9
  7563                           status	equ	0xFD8
  7564                           
  7565 ;; *************** function _rtcc_decrement_day *****************
  7566 ;; Defined at:
  7567 ;;		line 233 in file "rtcc.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  day             1    8[BANK0 ] unsigned char 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7584 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7585 ;;Total ram usage:        1 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:   12
  7588 ;; This function calls:
  7589 ;;		__number_of_days
  7590 ;;		__rtcc_decrement_bcd
  7591 ;;		_rtcc_get_day
  7592 ;;		_rtcc_set_day
  7593 ;; This function is called by:
  7594 ;;		__ui_encoder
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text22
  7599  013932                     __ptext22:
  7600                           	opt stack 0
  7601  013932                     _rtcc_decrement_day:
  7602                           	opt stack 16
  7603                           
  7604                           ;rtcc.c: 235: uint8_t day = rtcc_get_day();
  7605                           
  7606                           ;incstack = 0
  7607  013932  EC27  F09F         	call	_rtcc_get_day	;wreg free
  7608  013936  0100               	movlb	0	; () banked
  7609  013938  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;rtcc.c: 236: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  7613  01393A  0E01               	movlw	1
  7614  01393C  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7615  01393E  ECF6  F091         	call	__number_of_days	;wreg free
  7616  013942  0100               	movlb	0	; () banked
  7617  013944  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7618  013946  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7619  013948  EC49  F09B         	call	__rtcc_decrement_bcd
  7620  01394C  0100               	movlb	0	; () banked
  7621  01394E  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;rtcc.c: 237: rtcc_set_day(day);
  7625  013950  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7626  013952  EC5F  F09E         	call	_rtcc_set_day
  7627  013956  0012               	return		;funcret
  7628  013958                     __end_of_rtcc_decrement_day:
  7629                           	opt stack 0
  7630                           tblptru	equ	0xFF8
  7631                           tblptrh	equ	0xFF7
  7632                           tblptrl	equ	0xFF6
  7633                           tablat	equ	0xFF5
  7634                           intcon3	equ	0xFF0
  7635                           postinc0	equ	0xFEE
  7636                           wreg	equ	0xFE8
  7637                           postdec1	equ	0xFE5
  7638                           plusw1	equ	0xFE3
  7639                           fsr1h	equ	0xFE2
  7640                           fsr1l	equ	0xFE1
  7641                           postinc2	equ	0xFDE
  7642                           postdec2	equ	0xFDD
  7643                           plusw2	equ	0xFDB
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function __rtcc_decrement_bcd *****************
  7649 ;; Defined at:
  7650 ;;		line 47 in file "rtcc.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  value           1    wreg     unsigned char 
  7653 ;;  min             1    4[BANK0 ] unsigned char 
  7654 ;;  max             1    5[BANK0 ] unsigned char 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  value           1    7[BANK0 ] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      unsigned char 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7669 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7670 ;;Total ram usage:        4 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:   10
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_rtcc_decrement_year
  7677 ;;		_rtcc_decrement_month
  7678 ;;		_rtcc_decrement_day
  7679 ;;		_rtcc_decrement_hours
  7680 ;;		_rtcc_decrement_minutes
  7681 ;;		_rtcc_decrement_seconds
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text23
  7686  013692                     __ptext23:
  7687                           	opt stack 0
  7688  013692                     __rtcc_decrement_bcd:
  7689                           	opt stack 17
  7690                           
  7691                           ;incstack = 0
  7692                           ;__rtcc_decrement_bcd@value stored from wreg
  7693  013692  0100               	movlb	0	; () banked
  7694  013694  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  7695                           
  7696                           ;rtcc.c: 49: if(value==min)
  7697  013696  0100               	movlb	0	; () banked
  7698  013698  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  7699  01369A  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  7700  01369C  A4D8               	btfss	status,2,c
  7701  01369E  D002               	goto	l2260
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;rtcc.c: 50: return max;
  7705  0136A0  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  7706  0136A2  0012               	return	
  7707  0136A4                     l2260:
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;rtcc.c: 51: --value;
  7711                           
  7712                           ; BSR set to: 0
  7713  0136A4  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  7714                           
  7715                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  7716  0136A6  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  7717  0136AA  0E0F               	movlw	15
  7718  0136AC  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  7719  0136AE  0E09               	movlw	9
  7720  0136B0  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  7721  0136B2  D004               	goto	l2262
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;rtcc.c: 53: {;rtcc.c: 54: value &= 0xF0;
  7725  0136B4  0EF0               	movlw	240
  7726  0136B6  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7727                           
  7728                           ;rtcc.c: 55: value |= 0x09;
  7729  0136B8  0E09               	movlw	9
  7730  0136BA  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  7731  0136BC                     l2262:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;rtcc.c: 56: };rtcc.c: 57: return value;
  7735                           
  7736                           ; BSR set to: 0
  7737  0136BC  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  7738  0136BE  0012               	return	
  7739  0136C0                     __end_of__rtcc_decrement_bcd:
  7740                           	opt stack 0
  7741                           tblptru	equ	0xFF8
  7742                           tblptrh	equ	0xFF7
  7743                           tblptrl	equ	0xFF6
  7744                           tablat	equ	0xFF5
  7745                           intcon3	equ	0xFF0
  7746                           postinc0	equ	0xFEE
  7747                           wreg	equ	0xFE8
  7748                           postdec1	equ	0xFE5
  7749                           plusw1	equ	0xFE3
  7750                           fsr1h	equ	0xFE2
  7751                           fsr1l	equ	0xFE1
  7752                           postinc2	equ	0xFDE
  7753                           postdec2	equ	0xFDD
  7754                           plusw2	equ	0xFDB
  7755                           fsr2h	equ	0xFDA
  7756                           fsr2l	equ	0xFD9
  7757                           status	equ	0xFD8
  7758                           
  7759 ;; *************** function _system_init *****************
  7760 ;; Defined at:
  7761 ;;		line 250 in file "os.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;		None
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  7766 ;;  temp           50    0        unsigned char [50]
  7767 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  7768 ;;  filename        9  104[BANK1 ] unsigned char [9]
  7769 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  7770 ;;  extension       4  122[BANK1 ] unsigned char [4]
  7771 ;;  file_number     1    0        unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      void 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7782 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;Total ram usage:      130 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:   16
  7788 ;; This function calls:
  7789 ;;		__system_encoder_init
  7790 ;;		__system_timer0_init
  7791 ;;		_adc_init
  7792 ;;		_buck_init
  7793 ;;		_flash_init
  7794 ;;		_i2c_eeprom_read_calibration
  7795 ;;		_i2c_init
  7796 ;;		_log_start_new
  7797 ;;		_rtcc_init
  7798 ;;		_ui_init
  7799 ;; This function is called by:
  7800 ;;		_main
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text24
  7805  00F9F6                     __ptext24:
  7806                           	opt stack 0
  7807  00F9F6                     _system_init:
  7808                           	opt stack 14
  7809                           
  7810                           ;os.c: 252: char filename[9] = "TEST    ";
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;incstack = 0
  7814  00F9F6  EE22  F0D8         	lfsr	2,system_init@F7096
  7815  00F9FA  EE11  F068         	lfsr	1,system_init@filename
  7816  00F9FE  0E08               	movlw	8
  7817  00FA00                     u22141:
  7818  00FA00  CFDB FFE3          	movff	plusw2,plusw1
  7819  00FA04  06E8               	decf	wreg,f,c
  7820  00FA06  E2FC               	bc	u22141
  7821                           
  7822                           ;os.c: 253: char extension[4] = "TXT";
  7823  00FA08  C2E5  F17A         	movff	system_init@F7098,system_init@extension
  7824  00FA0C  C2E6  F17B         	movff	system_init@F7098+1,system_init@extension+1
  7825  00FA10  C2E7  F17C         	movff	system_init@F7098+2,system_init@extension+2
  7826  00FA14  C2E8  F17D         	movff	system_init@F7098+3,system_init@extension+3
  7827                           
  7828                           ;os.c: 254: char filename2[9] = "NEWFILE ";
  7829  00FA18  EE23  F0F6         	lfsr	2,system_init@F7100
  7830  00FA1C  EE11  F071         	lfsr	1,system_init@filename2
  7831  00FA20  0E08               	movlw	8
  7832  00FA22                     u22151:
  7833  00FA22  CFDB FFE3          	movff	plusw2,plusw1
  7834  00FA26  06E8               	decf	wreg,f,c
  7835  00FA28  E2FC               	bc	u22151
  7836                           
  7837                           ;os.c: 255: char extension2[4] = "TXT";
  7838  00FA2A  C2E1  F17E         	movff	system_init@F7102,system_init@extension2
  7839  00FA2E  C2E2  F17F         	movff	system_init@F7102+1,system_init@extension2+1
  7840  00FA32  C2E3  F180         	movff	system_init@F7102+2,system_init@extension2+2
  7841  00FA36  C2E4  F181         	movff	system_init@F7102+3,system_init@extension2+3
  7842                           
  7843                           ;os.c: 256: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  7844  00FA3A  EE24  F000         	lfsr	2,system_init@F7104
  7845  00FA3E  EE11  F000         	lfsr	1,system_init@appendtext
  7846  00FA42  0E67               	movlw	103
  7847  00FA44                     u22161:
  7848  00FA44  CFDB FFE3          	movff	plusw2,plusw1
  7849  00FA48  06E8               	decf	wreg,f,c
  7850  00FA4A  E2FC               	bc	u22161
  7851                           
  7852                           ;os.c: 257: uint8_t file_number;;os.c: 258: uint8_t temp[50];;os.c: 261: TRISCbits.TRISC
      +                          2 = 0;
  7853  00FA4C  9494               	bcf	3988,2,c	;volatile
  7854                           
  7855                           ;os.c: 262: TRISDbits.TRISD0 = 0;
  7856  00FA4E  9095               	bcf	3989,0,c	;volatile
  7857                           
  7858                           ;os.c: 264: TRISDbits.TRISD3 = 0;
  7859  00FA50  9695               	bcf	3989,3,c	;volatile
  7860                           
  7861                           ;os.c: 265: LATDbits.LD3 = 0;
  7862  00FA52  968C               	bcf	3980,3,c	;volatile
  7863                           
  7864                           ;os.c: 268: LATDbits.LD1 = 0;
  7865  00FA54  928C               	bcf	3980,1,c	;volatile
  7866                           
  7867                           ;os.c: 269: TRISDbits.TRISD1 = 0;
  7868  00FA56  9295               	bcf	3989,1,c	;volatile
  7869                           
  7870                           ;os.c: 272: LATBbits.LB1 = 0;
  7871  00FA58  928A               	bcf	3978,1,c	;volatile
  7872                           
  7873                           ;os.c: 273: TRISBbits.TRISB1 = 0;
  7874  00FA5A  9293               	bcf	3987,1,c	;volatile
  7875                           
  7876                           ;os.c: 274: LATBbits.LB2 = 0;
  7877  00FA5C  948A               	bcf	3978,2,c	;volatile
  7878                           
  7879                           ;os.c: 275: TRISBbits.TRISB2 = 0;
  7880  00FA5E  9493               	bcf	3987,2,c	;volatile
  7881                           
  7882                           ;os.c: 276: LATBbits.LB3 = 0;
  7883  00FA60  968A               	bcf	3978,3,c	;volatile
  7884                           
  7885                           ;os.c: 277: TRISBbits.TRISB3 = 0;
  7886  00FA62  9693               	bcf	3987,3,c	;volatile
  7887                           
  7888                           ;os.c: 281: TRISDbits.TRISD6 = 1;
  7889  00FA64  8C95               	bsf	3989,6,c	;volatile
  7890                           
  7891                           ;os.c: 282: TRISDbits.TRISD4 = 0;
  7892  00FA66  9895               	bcf	3989,4,c	;volatile
  7893                           
  7894                           ;os.c: 283: TRISDbits.TRISD5 = 0;
  7895  00FA68  9A95               	bcf	3989,5,c	;volatile
  7896                           
  7897                           ;os.c: 284: TRISDbits.TRISD7 = 0;
  7898  00FA6A  9E95               	bcf	3989,7,c	;volatile
  7899                           
  7900                           ;os.c: 285: LATDbits.LD7 = 1;
  7901  00FA6C  8E8C               	bsf	3980,7,c	;volatile
  7902                           
  7903                           ;os.c: 288: TRISAbits.TRISA3 = 1;
  7904  00FA6E  8692               	bsf	3986,3,c	;volatile
  7905                           
  7906                           ;os.c: 289: ANCON0bits.PCFG3 = 0;
  7907  00FA70  010F               	movlb	15	; () banked
  7908  00FA72  9748               	bcf	72,3,b	;volatile
  7909                           
  7910                           ; BSR set to: 15
  7911                           ;os.c: 290: TRISBbits.TRISB0 = 1;
  7912  00FA74  8093               	bsf	3987,0,c	;volatile
  7913                           
  7914                           ; BSR set to: 15
  7915                           ;os.c: 291: ANCON1bits.PCFG12 = 0;
  7916  00FA76  9949               	bcf	73,4,b	;volatile
  7917                           
  7918                           ; BSR set to: 15
  7919                           ;os.c: 292: TRISAbits.TRISA1 = 1;
  7920  00FA78  8292               	bsf	3986,1,c	;volatile
  7921                           
  7922                           ; BSR set to: 15
  7923                           ;os.c: 293: ANCON0bits.PCFG1 = 0;
  7924  00FA7A  9348               	bcf	72,1,b	;volatile
  7925                           
  7926                           ; BSR set to: 15
  7927                           ;os.c: 294: TRISAbits.TRISA2 = 1;
  7928  00FA7C  8492               	bsf	3986,2,c	;volatile
  7929                           
  7930                           ; BSR set to: 15
  7931                           ;os.c: 295: ANCON0bits.PCFG2 = 0;
  7932  00FA7E  9548               	bcf	72,2,b	;volatile
  7933                           
  7934                           ; BSR set to: 15
  7935                           ;os.c: 298: LATCbits.LC7 = 0;
  7936  00FA80  9E8B               	bcf	3979,7,c	;volatile
  7937                           
  7938                           ; BSR set to: 15
  7939                           ;os.c: 299: TRISCbits.TRISC7 = 0;
  7940  00FA82  9E94               	bcf	3988,7,c	;volatile
  7941                           
  7942                           ; BSR set to: 15
  7943                           ;os.c: 300: LATEbits.LE2 = 1;
  7944  00FA84  848D               	bsf	3981,2,c	;volatile
  7945                           
  7946                           ; BSR set to: 15
  7947                           ;os.c: 301: TRISEbits.TRISE2 = 0;
  7948  00FA86  9496               	bcf	3990,2,c	;volatile
  7949                           
  7950                           ; BSR set to: 15
  7951                           ;os.c: 302: LATEbits.LE1 = 1;
  7952  00FA88  828D               	bsf	3981,1,c	;volatile
  7953                           
  7954                           ; BSR set to: 15
  7955                           ;os.c: 303: TRISEbits.TRISE1 = 0;
  7956  00FA8A  9296               	bcf	3990,1,c	;volatile
  7957                           
  7958                           ; BSR set to: 15
  7959                           ;os.c: 304: LATEbits.LE0 = 1;
  7960  00FA8C  808D               	bsf	3981,0,c	;volatile
  7961                           
  7962                           ; BSR set to: 15
  7963                           ;os.c: 305: TRISEbits.TRISE0 = 0;
  7964  00FA8E  9096               	bcf	3990,0,c	;volatile
  7965                           
  7966                           ; BSR set to: 15
  7967                           ;os.c: 306: LATAbits.LA5 = 1;
  7968  00FA90  8A89               	bsf	3977,5,c	;volatile
  7969                           
  7970                           ; BSR set to: 15
  7971                           ;os.c: 307: TRISAbits.TRISA5 = 0;
  7972  00FA92  9A92               	bcf	3986,5,c	;volatile
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;os.c: 309: TRISAbits.TRISA0 = 1;
  7976  00FA94  8092               	bsf	3986,0,c	;volatile
  7977                           
  7978                           ; BSR set to: 15
  7979                           ;os.c: 310: ANCON0bits.PCFG0 = 1;
  7980  00FA96  8148               	bsf	72,0,b	;volatile
  7981                           
  7982                           ; BSR set to: 15
  7983                           ;os.c: 311: TRISBbits.TRISB6 = 1;
  7984  00FA98  8C93               	bsf	3987,6,c	;volatile
  7985                           
  7986                           ; BSR set to: 15
  7987                           ;os.c: 312: TRISBbits.TRISB7 = 1;
  7988  00FA9A  8E93               	bsf	3987,7,c	;volatile
  7989                           
  7990                           ; BSR set to: 15
  7991                           ;os.c: 333: os.clockFrequency = CPU_FREQUENCY_48MHz;
  7992  00FA9C  0E02               	movlw	2
  7993  00FA9E  0102               	movlb	2	; () banked
  7994  00FAA0  6F00               	movwf	_os& (0+255),b	;volatile
  7995                           
  7996                           ; BSR set to: 2
  7997                           ;os.c: 334: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  7998  00FAA2  0E01               	movlw	1
  7999  00FAA4  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  8000                           
  8001                           ; BSR set to: 2
  8002                           ;os.c: 335: os.buckFrequency = BUCK_OFF;
  8003  00FAA6  0E00               	movlw	0
  8004  00FAA8  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  8005                           
  8006                           ; BSR set to: 2
  8007                           ;os.c: 336: os.buckDutyCycle = 0;
  8008  00FAAA  0E00               	movlw	0
  8009  00FAAC  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8010                           
  8011                           ; BSR set to: 2
  8012                           ;os.c: 337: os.buckLastStep = -1;
  8013  00FAAE  6904               	setf	(_os+4)& (0+255),b	;volatile
  8014                           
  8015                           ; BSR set to: 2
  8016                           ;os.c: 338: os.display_mode = DISPLAY_MODE_OVERVIEW;
  8017  00FAB0  0E00               	movlw	0
  8018  00FAB2  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8019                           
  8020                           ; BSR set to: 2
  8021                           ;os.c: 341: os.output_voltage = 13000;
  8022  00FAB4  0E32               	movlw	50
  8023  00FAB6  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8024  00FAB8  0EC8               	movlw	200
  8025  00FABA  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8026                           
  8027                           ; BSR set to: 2
  8028                           ;os.c: 345: PIR1bits.TMR1IF = 0;
  8029  00FABC  909E               	bcf	3998,0,c	;volatile
  8030                           
  8031                           ; BSR set to: 2
  8032                           ;os.c: 347: TMR1H = 0xFC;
  8033  00FABE  0EFC               	movlw	252
  8034  00FAC0  6ECF               	movwf	4047,c	;volatile
  8035                           
  8036                           ; BSR set to: 2
  8037                           ;os.c: 348: TMR1L = 0x00;
  8038  00FAC2  0E00               	movlw	0
  8039  00FAC4  6ECE               	movwf	4046,c	;volatile
  8040                           
  8041                           ; BSR set to: 2
  8042                           ;os.c: 350: T1CONbits.TMR1ON = 1;
  8043  00FAC6  80CD               	bsf	4045,0,c	;volatile
  8044                           
  8045                           ; BSR set to: 2
  8046                           ;os.c: 352: T1CONbits.T1OSCEN = 1;
  8047  00FAC8  86CD               	bsf	4045,3,c	;volatile
  8048  00FACA                     
  8049                           ; BSR set to: 2
  8050  00FACA  A09E               	btfss	3998,0,c	;volatile
  8051  00FACC  D7FE               	goto	l1391
  8052                           
  8053                           ;os.c: 356: T1CONbits.TMR1ON = 0;
  8054  00FACE  90CD               	bcf	4045,0,c	;volatile
  8055                           
  8056                           ;os.c: 359: i2c_init();
  8057  00FAD0  EC2E  F09F         	call	_i2c_init	;wreg free
  8058                           
  8059                           ;os.c: 361: ui_init();
  8060  00FAD4  ECA3  F09E         	call	_ui_init	;wreg free
  8061                           
  8062                           ;os.c: 364: adc_init();
  8063  00FAD8  ECBA  F09D         	call	_adc_init	;wreg free
  8064                           
  8065                           ;os.c: 367: rtcc_init();
  8066  00FADC  ECE4  F09D         	call	_rtcc_init	;wreg free
  8067                           
  8068                           ;os.c: 370: i2c_eeprom_read_calibration();
  8069  00FAE0  EC44  F079         	call	_i2c_eeprom_read_calibration	;wreg free
  8070                           
  8071                           ;os.c: 385: _system_timer0_init();
  8072  00FAE4  EC49  F099         	call	__system_timer0_init	;wreg free
  8073                           
  8074                           ;os.c: 394: _system_encoder_init();
  8075  00FAE8  EC69  F099         	call	__system_encoder_init	;wreg free
  8076                           
  8077                           ;os.c: 396: flash_init();
  8078  00FAEC  ECA0  F098         	call	_flash_init	;wreg free
  8079                           
  8080                           ;os.c: 430: buck_init();
  8081  00FAF0  ECFD  F09E         	call	_buck_init	;wreg free
  8082                           
  8083                           ;os.c: 433: log_start_new();
  8084  00FAF4  EC19  F083         	call	_log_start_new	;wreg free
  8085  00FAF8  0012               	return		;funcret
  8086  00FAFA                     __end_of_system_init:
  8087                           	opt stack 0
  8088                           tblptru	equ	0xFF8
  8089                           tblptrh	equ	0xFF7
  8090                           tblptrl	equ	0xFF6
  8091                           tablat	equ	0xFF5
  8092                           intcon3	equ	0xFF0
  8093                           postinc0	equ	0xFEE
  8094                           wreg	equ	0xFE8
  8095                           postdec1	equ	0xFE5
  8096                           plusw1	equ	0xFE3
  8097                           fsr1h	equ	0xFE2
  8098                           fsr1l	equ	0xFE1
  8099                           postinc2	equ	0xFDE
  8100                           postdec2	equ	0xFDD
  8101                           plusw2	equ	0xFDB
  8102                           fsr2h	equ	0xFDA
  8103                           fsr2l	equ	0xFD9
  8104                           status	equ	0xFD8
  8105                           
  8106 ;; *************** function _ui_init *****************
  8107 ;; Defined at:
  8108 ;;		line 325 in file "ui.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;Total ram usage:        0 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:   10
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_system_init
  8133 ;;		_ui_run
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text25
  8138  013D46                     __ptext25:
  8139                           	opt stack 0
  8140  013D46                     _ui_init:
  8141                           	opt stack 19
  8142                           
  8143                           ;ui.c: 327: system_ui_inactive_count = 0;
  8144                           
  8145                           ;incstack = 0
  8146  013D46  0E00               	movlw	0
  8147  013D48  0101               	movlb	1	; () banked
  8148  013D4A  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8149  013D4C  0E00               	movlw	0
  8150  013D4E  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  8151                           
  8152                           ; BSR set to: 1
  8153                           ;ui.c: 329: LATCbits.LC2 = 1;
  8154  013D50  848B               	bsf	3979,2,c	;volatile
  8155                           
  8156                           ;ui.c: 330: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8157  013D52  0E01               	movlw	1
  8158  013D54  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  8159                           
  8160                           ; BSR set to: 1
  8161  013D56  0012               	return		;funcret
  8162  013D58                     __end_of_ui_init:
  8163                           	opt stack 0
  8164                           tblptru	equ	0xFF8
  8165                           tblptrh	equ	0xFF7
  8166                           tblptrl	equ	0xFF6
  8167                           tablat	equ	0xFF5
  8168                           intcon3	equ	0xFF0
  8169                           postinc0	equ	0xFEE
  8170                           wreg	equ	0xFE8
  8171                           postdec1	equ	0xFE5
  8172                           plusw1	equ	0xFE3
  8173                           fsr1h	equ	0xFE2
  8174                           fsr1l	equ	0xFE1
  8175                           postinc2	equ	0xFDE
  8176                           postdec2	equ	0xFDD
  8177                           plusw2	equ	0xFDB
  8178                           fsr2h	equ	0xFDA
  8179                           fsr2l	equ	0xFD9
  8180                           status	equ	0xFD8
  8181                           
  8182 ;; *************** function _rtcc_init *****************
  8183 ;; Defined at:
  8184 ;;		line 105 in file "rtcc.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;		None
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;		None
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8202 ;;Total ram usage:        0 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:   15
  8205 ;; This function calls:
  8206 ;;		_rtcc_read_eeprom
  8207 ;; This function is called by:
  8208 ;;		_system_init
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text26
  8213  013BC8                     __ptext26:
  8214                           	opt stack 0
  8215  013BC8                     _rtcc_init:
  8216                           	opt stack 14
  8217                           
  8218                           ;rtcc.c: 107: EECON2 = 0x55;
  8219                           
  8220                           ; BSR set to: 1
  8221                           ;incstack = 0
  8222  013BC8  0E55               	movlw	85
  8223  013BCA  6EA7               	movwf	4007,c	;volsfr
  8224                           
  8225                           ;rtcc.c: 108: EECON2 = 0xAA;
  8226  013BCC  0EAA               	movlw	170
  8227  013BCE  6EA7               	movwf	4007,c	;volsfr
  8228                           
  8229                           ;rtcc.c: 109: RTCCFGbits.RTCWREN = 1;
  8230  013BD0  010F               	movlb	15	; () banked
  8231  013BD2  8B3F               	bsf	63,5,b	;volatile
  8232                           
  8233                           ; BSR set to: 15
  8234                           ;rtcc.c: 110: RTCCFGbits.RTCEN = 1;
  8235  013BD4  8F3F               	bsf	63,7,b	;volatile
  8236                           
  8237                           ; BSR set to: 15
  8238                           ;rtcc.c: 111: RTCCFGbits.RTCOE = 0;
  8239  013BD6  953F               	bcf	63,2,b	;volatile
  8240                           
  8241                           ;rtcc.c: 112: RTCCAL = 0x00;
  8242  013BD8  0E00               	movlw	0
  8243  013BDA  6F3E               	movwf	62,b	;volatile
  8244                           
  8245                           ; BSR set to: 15
  8246                           ;rtcc.c: 115: rtcc_read_eeprom();
  8247  013BDC  ECBB  F075         	call	_rtcc_read_eeprom	;wreg free
  8248  013BE0  0012               	return		;funcret
  8249  013BE2                     __end_of_rtcc_init:
  8250                           	opt stack 0
  8251                           tblptru	equ	0xFF8
  8252                           tblptrh	equ	0xFF7
  8253                           tblptrl	equ	0xFF6
  8254                           tablat	equ	0xFF5
  8255                           intcon3	equ	0xFF0
  8256                           postinc0	equ	0xFEE
  8257                           wreg	equ	0xFE8
  8258                           postdec1	equ	0xFE5
  8259                           plusw1	equ	0xFE3
  8260                           fsr1h	equ	0xFE2
  8261                           fsr1l	equ	0xFE1
  8262                           postinc2	equ	0xFDE
  8263                           postdec2	equ	0xFDD
  8264                           plusw2	equ	0xFDB
  8265                           fsr2h	equ	0xFDA
  8266                           fsr2l	equ	0xFD9
  8267                           status	equ	0xFD8
  8268                           
  8269 ;; *************** function _rtcc_read_eeprom *****************
  8270 ;; Defined at:
  8271 ;;		line 354 in file "rtcc.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;		None
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  date            6   44[BANK0 ] unsigned char [6]
  8276 ;;  buffer          1   50[BANK0 ] unsigned char 
  8277 ;;  error_found     1   43[BANK0 ] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8288 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8290 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;Total ram usage:        8 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:   14
  8294 ;; This function calls:
  8295 ;;		__rtcc_verify_bcd
  8296 ;;		_i2c_eeprom_read
  8297 ;;		_rtcc_correct_day
  8298 ;;		_rtcc_get_day
  8299 ;;		_rtcc_set_day
  8300 ;;		_rtcc_set_hours
  8301 ;;		_rtcc_set_minutes
  8302 ;;		_rtcc_set_month
  8303 ;;		_rtcc_set_seconds
  8304 ;;		_rtcc_set_year
  8305 ;;		_rtcc_write_eeprom
  8306 ;; This function is called by:
  8307 ;;		_rtcc_init
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text27
  8312  00EB76                     __ptext27:
  8313                           	opt stack 0
  8314  00EB76                     _rtcc_read_eeprom:
  8315                           	opt stack 14
  8316                           
  8317                           ;rtcc.c: 356: uint8_t date[6];;rtcc.c: 357: uint8_t buffer;;rtcc.c: 358: uint8_t error_f
      +                          ound = 0;
  8318                           
  8319                           ;incstack = 0
  8320  00EB76  0E00               	movlw	0
  8321  00EB78  0100               	movlb	0	; () banked
  8322  00EB7A  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;rtcc.c: 361: i2c_eeprom_read(0x040, &date[0], 6);
  8326  00EB7C  0E00               	movlw	0
  8327  00EB7E  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  8328  00EB80  0E40               	movlw	64
  8329  00EB82  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  8330  00EB84  0E8C               	movlw	low rtcc_read_eeprom@date
  8331  00EB86  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  8332  00EB88  0E00               	movlw	high rtcc_read_eeprom@date
  8333  00EB8A  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  8334  00EB8C  0E06               	movlw	6
  8335  00EB8E  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  8336  00EB90  EC7F  F096         	call	_i2c_eeprom_read	;wreg free
  8337                           
  8338                           ;rtcc.c: 367: buffer = _rtcc_verify_bcd(date[0], 0x00, 0x99);
  8339  00EB94  0E00               	movlw	0
  8340  00EB96  0100               	movlb	0	; () banked
  8341  00EB98  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8342  00EB9A  0E99               	movlw	153
  8343  00EB9C  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8344  00EB9E  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8345  00EBA0  EC7D  F098         	call	__rtcc_verify_bcd
  8346  00EBA4  0100               	movlb	0	; () banked
  8347  00EBA6  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;rtcc.c: 368: if(buffer != date[0])
  8351  00EBA8  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8352  00EBAA  198C               	xorwf	rtcc_read_eeprom@date& (0+255),w,b
  8353  00EBAC  B4D8               	btfsc	status,2,c
  8354  00EBAE  D004               	goto	l2396
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;rtcc.c: 369: {;rtcc.c: 370: date[0] = buffer;
  8358  00EBB0  C092  F08C         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;rtcc.c: 371: error_found = 1;
  8362  00EBB4  0E01               	movlw	1
  8363  00EBB6  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8364  00EBB8                     l2396:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;rtcc.c: 372: };rtcc.c: 373: rtcc_set_year(date[0]);
  8368                           
  8369                           ; BSR set to: 0
  8370  00EBB8  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8371  00EBBA  EC23  F09E         	call	_rtcc_set_year
  8372                           
  8373                           ;rtcc.c: 376: buffer = _rtcc_verify_bcd(date[1], 0x01, 0x12);
  8374  00EBBE  0E01               	movlw	1
  8375  00EBC0  0100               	movlb	0	; () banked
  8376  00EBC2  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8377  00EBC4  0E12               	movlw	18
  8378  00EBC6  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8379  00EBC8  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8380  00EBCA  EC7D  F098         	call	__rtcc_verify_bcd
  8381  00EBCE  0100               	movlb	0	; () banked
  8382  00EBD0  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8383                           
  8384                           ;rtcc.c: 377: if(buffer != date[1])
  8385  00EBD2  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8386  00EBD4  198D               	xorwf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8387  00EBD6  B4D8               	btfsc	status,2,c
  8388  00EBD8  D004               	goto	l2397
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;rtcc.c: 378: {;rtcc.c: 379: date[1] = buffer;
  8392  00EBDA  C092  F08D         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+1
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;rtcc.c: 380: error_found = 1;
  8396  00EBDE  0E01               	movlw	1
  8397  00EBE0  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8398  00EBE2                     l2397:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;rtcc.c: 381: };rtcc.c: 382: rtcc_set_month(date[1]);
  8402                           
  8403                           ; BSR set to: 0
  8404  00EBE2  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8405  00EBE4  EC3B  F09E         	call	_rtcc_set_month
  8406                           
  8407                           ;rtcc.c: 385: buffer = _rtcc_verify_bcd(date[2], 0x01, 0x31);
  8408  00EBE8  0E01               	movlw	1
  8409  00EBEA  0100               	movlb	0	; () banked
  8410  00EBEC  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8411  00EBEE  0E31               	movlw	49
  8412  00EBF0  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8413  00EBF2  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8414  00EBF4  EC7D  F098         	call	__rtcc_verify_bcd
  8415  00EBF8  0100               	movlb	0	; () banked
  8416  00EBFA  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8417                           
  8418                           ;rtcc.c: 386: if(buffer != date[2])
  8419  00EBFC  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8420  00EBFE  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8421  00EC00  B4D8               	btfsc	status,2,c
  8422  00EC02  D004               	goto	l2398
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;rtcc.c: 387: {;rtcc.c: 388: date[2] = buffer;
  8426  00EC04  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;rtcc.c: 389: error_found = 1;
  8430  00EC08  0E01               	movlw	1
  8431  00EC0A  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8432  00EC0C                     l2398:
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;rtcc.c: 390: };rtcc.c: 391: rtcc_set_day(date[2]);
  8436                           
  8437                           ; BSR set to: 0
  8438  00EC0C  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8439  00EC0E  EC5F  F09E         	call	_rtcc_set_day
  8440                           
  8441                           ;rtcc.c: 394: rtcc_correct_day();
  8442  00EC12  EC8B  F09D         	call	_rtcc_correct_day	;wreg free
  8443                           
  8444                           ;rtcc.c: 395: buffer = rtcc_get_day();
  8445  00EC16  EC27  F09F         	call	_rtcc_get_day	;wreg free
  8446  00EC1A  0100               	movlb	0	; () banked
  8447  00EC1C  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;rtcc.c: 396: if(buffer != date[2])
  8451  00EC1E  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8452  00EC20  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8453  00EC22  B4D8               	btfsc	status,2,c
  8454  00EC24  D004               	goto	l2399
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;rtcc.c: 397: {;rtcc.c: 398: date[2] = buffer;
  8458  00EC26  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;rtcc.c: 399: error_found = 1;
  8462  00EC2A  0E01               	movlw	1
  8463  00EC2C  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8464  00EC2E                     l2399:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;rtcc.c: 400: };rtcc.c: 403: buffer = _rtcc_verify_bcd(date[3], 0x00, 0x23);
  8468                           
  8469                           ; BSR set to: 0
  8470  00EC2E  0E00               	movlw	0
  8471  00EC30  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8472  00EC32  0E23               	movlw	35
  8473  00EC34  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8474  00EC36  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8475  00EC38  EC7D  F098         	call	__rtcc_verify_bcd
  8476  00EC3C  0100               	movlb	0	; () banked
  8477  00EC3E  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;rtcc.c: 404: if(buffer != date[3])
  8481  00EC40  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8482  00EC42  198F               	xorwf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8483  00EC44  B4D8               	btfsc	status,2,c
  8484  00EC46  D004               	goto	l2400
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;rtcc.c: 405: {;rtcc.c: 406: date[3] = buffer;
  8488  00EC48  C092  F08F         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+3
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;rtcc.c: 407: error_found = 1;
  8492  00EC4C  0E01               	movlw	1
  8493  00EC4E  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8494  00EC50                     l2400:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;rtcc.c: 408: };rtcc.c: 409: rtcc_set_hours(date[3]);
  8498                           
  8499                           ; BSR set to: 0
  8500  00EC50  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8501  00EC52  EC53  F09E         	call	_rtcc_set_hours
  8502                           
  8503                           ;rtcc.c: 412: buffer = _rtcc_verify_bcd(date[4], 0x00, 0x59);
  8504  00EC56  0E00               	movlw	0
  8505  00EC58  0100               	movlb	0	; () banked
  8506  00EC5A  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8507  00EC5C  0E59               	movlw	89
  8508  00EC5E  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8509  00EC60  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8510  00EC62  EC7D  F098         	call	__rtcc_verify_bcd
  8511  00EC66  0100               	movlb	0	; () banked
  8512  00EC68  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8513                           
  8514                           ;rtcc.c: 413: if(buffer != date[4])
  8515  00EC6A  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8516  00EC6C  1990               	xorwf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8517  00EC6E  B4D8               	btfsc	status,2,c
  8518  00EC70  D004               	goto	l2401
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;rtcc.c: 414: {;rtcc.c: 415: date[4] = buffer;
  8522  00EC72  C092  F090         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+4
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;rtcc.c: 416: error_found = 1;
  8526  00EC76  0E01               	movlw	1
  8527  00EC78  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8528  00EC7A                     l2401:
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;rtcc.c: 417: };rtcc.c: 418: rtcc_set_minutes(date[4]);
  8532                           
  8533                           ; BSR set to: 0
  8534  00EC7A  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8535  00EC7C  EC47  F09E         	call	_rtcc_set_minutes
  8536                           
  8537                           ;rtcc.c: 421: buffer = _rtcc_verify_bcd(date[5], 0x00, 0x59);
  8538  00EC80  0E00               	movlw	0
  8539  00EC82  0100               	movlb	0	; () banked
  8540  00EC84  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  8541  00EC86  0E59               	movlw	89
  8542  00EC88  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  8543  00EC8A  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8544  00EC8C  EC7D  F098         	call	__rtcc_verify_bcd
  8545  00EC90  0100               	movlb	0	; () banked
  8546  00EC92  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  8547                           
  8548                           ;rtcc.c: 422: if(buffer != date[5])
  8549  00EC94  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  8550  00EC96  1991               	xorwf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8551  00EC98  B4D8               	btfsc	status,2,c
  8552  00EC9A  D004               	goto	l2402
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;rtcc.c: 423: {;rtcc.c: 424: date[5] = buffer;
  8556  00EC9C  C092  F091         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+5
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;rtcc.c: 425: error_found = 1;
  8560  00ECA0  0E01               	movlw	1
  8561  00ECA2  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  8562  00ECA4                     l2402:
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;rtcc.c: 426: };rtcc.c: 427: rtcc_set_seconds(date[5]);
  8566                           
  8567                           ; BSR set to: 0
  8568  00ECA4  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8569  00ECA6  EC2F  F09E         	call	_rtcc_set_seconds
  8570                           
  8571                           ;rtcc.c: 430: if(error_found)
  8572  00ECAA  0100               	movlb	0	; () banked
  8573  00ECAC  518B               	movf	rtcc_read_eeprom@error_found& (0+255),w,b
  8574  00ECAE  B4D8               	btfsc	status,2,c
  8575  00ECB0  0012               	return	
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;rtcc.c: 431: {;rtcc.c: 432: rtcc_write_eeprom();
  8579  00ECB2  EC33  F098         	call	_rtcc_write_eeprom	;wreg free
  8580  00ECB6  0012               	return	
  8581  00ECB8                     __end_of_rtcc_read_eeprom:
  8582                           	opt stack 0
  8583                           tblptru	equ	0xFF8
  8584                           tblptrh	equ	0xFF7
  8585                           tblptrl	equ	0xFF6
  8586                           tablat	equ	0xFF5
  8587                           intcon3	equ	0xFF0
  8588                           postinc0	equ	0xFEE
  8589                           wreg	equ	0xFE8
  8590                           postdec1	equ	0xFE5
  8591                           plusw1	equ	0xFE3
  8592                           fsr1h	equ	0xFE2
  8593                           fsr1l	equ	0xFE1
  8594                           postinc2	equ	0xFDE
  8595                           postdec2	equ	0xFDD
  8596                           plusw2	equ	0xFDB
  8597                           fsr2h	equ	0xFDA
  8598                           fsr2l	equ	0xFD9
  8599                           status	equ	0xFD8
  8600                           
  8601 ;; *************** function _rtcc_correct_day *****************
  8602 ;; Defined at:
  8603 ;;		line 118 in file "rtcc.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;		None
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;  max             1    5[BANK0 ] unsigned char 
  8608 ;;  day             1    4[BANK0 ] unsigned char 
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1    wreg      void 
  8611 ;; Registers used:
  8612 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8619 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8622 ;;Total ram usage:        2 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:   12
  8625 ;; This function calls:
  8626 ;;		__number_of_days
  8627 ;;		_rtcc_get_day
  8628 ;;		_rtcc_set_day
  8629 ;; This function is called by:
  8630 ;;		__ui_encoder
  8631 ;;		_rtcc_read_eeprom
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text28
  8636  013B16                     __ptext28:
  8637                           	opt stack 0
  8638  013B16                     _rtcc_correct_day:
  8639                           	opt stack 16
  8640                           
  8641                           ;rtcc.c: 120: uint8_t day = rtcc_get_day();
  8642                           
  8643                           ;incstack = 0
  8644  013B16  EC27  F09F         	call	_rtcc_get_day	;wreg free
  8645  013B1A  0100               	movlb	0	; () banked
  8646  013B1C  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;rtcc.c: 121: uint8_t max = _number_of_days();
  8650  013B1E  ECF6  F091         	call	__number_of_days	;wreg free
  8651  013B22  0100               	movlb	0	; () banked
  8652  013B24  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;rtcc.c: 122: if(day>max)
  8656  013B26  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  8657  013B28  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  8658  013B2A  B0D8               	btfsc	status,0,c
  8659  013B2C  0012               	return	
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;rtcc.c: 123: rtcc_set_day(max);
  8663  013B2E  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  8664  013B30  EC5F  F09E         	call	_rtcc_set_day
  8665  013B34  0012               	return	
  8666  013B36                     __end_of_rtcc_correct_day:
  8667                           	opt stack 0
  8668                           tblptru	equ	0xFF8
  8669                           tblptrh	equ	0xFF7
  8670                           tblptrl	equ	0xFF6
  8671                           tablat	equ	0xFF5
  8672                           intcon3	equ	0xFF0
  8673                           postinc0	equ	0xFEE
  8674                           wreg	equ	0xFE8
  8675                           postdec1	equ	0xFE5
  8676                           plusw1	equ	0xFE3
  8677                           fsr1h	equ	0xFE2
  8678                           fsr1l	equ	0xFE1
  8679                           postinc2	equ	0xFDE
  8680                           postdec2	equ	0xFDD
  8681                           plusw2	equ	0xFDB
  8682                           fsr2h	equ	0xFDA
  8683                           fsr2l	equ	0xFD9
  8684                           status	equ	0xFD8
  8685                           
  8686 ;; *************** function __number_of_days *****************
  8687 ;; Defined at:
  8688 ;;		line 60 in file "rtcc.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;		None
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  month           1    3[BANK0 ] unsigned char 
  8693 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  8694 ;;  year            1    1[BANK0 ] unsigned char 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      unsigned char 
  8697 ;; Registers used:
  8698 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;Total ram usage:        4 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; Hardware stack levels required when called:   11
  8711 ;; This function calls:
  8712 ;;		_rtcc_get_month
  8713 ;;		_rtcc_get_year
  8714 ;; This function is called by:
  8715 ;;		_rtcc_correct_day
  8716 ;;		_rtcc_increment_day
  8717 ;;		_rtcc_decrement_day
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text29
  8722  0123EC                     __ptext29:
  8723                           	opt stack 0
  8724  0123EC                     __number_of_days:
  8725                           	opt stack 16
  8726                           
  8727                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  8728                           
  8729                           ;incstack = 0
  8730  0123EC  EC12  F09F         	call	_rtcc_get_month	;wreg free
  8731  0123F0  0100               	movlb	0	; () banked
  8732  0123F2  6F63               	movwf	__number_of_days@month& (0+255),b
  8733                           
  8734                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  8735  0123F4  EC04  F09F         	call	_rtcc_get_year	;wreg free
  8736  0123F8  0100               	movlb	0	; () banked
  8737  0123FA  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;rtcc.c: 64: uint8_t year;;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || m
      +                          onth==0x11)
  8741  0123FC  0E04               	movlw	4
  8742  0123FE  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8743  012400  B4D8               	btfsc	status,2,c
  8744  012402  D00C               	goto	u17830
  8745                           
  8746                           ; BSR set to: 0
  8747  012404  0E06               	movlw	6
  8748  012406  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8749  012408  B4D8               	btfsc	status,2,c
  8750  01240A  D008               	goto	u17830
  8751                           
  8752                           ; BSR set to: 0
  8753  01240C  0E09               	movlw	9
  8754  01240E  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8755  012410  B4D8               	btfsc	status,2,c
  8756  012412  D004               	goto	u17830
  8757                           
  8758                           ; BSR set to: 0
  8759  012414  0E11               	movlw	17
  8760  012416  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8761  012418  A4D8               	btfss	status,2,c
  8762  01241A  D002               	goto	l2265
  8763  01241C                     u17830:
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;rtcc.c: 66: return 0x30;
  8767                           
  8768                           ; BSR set to: 0
  8769  01241C  0E30               	movlw	48
  8770                           
  8771                           ; BSR set to: 0
  8772  01241E  0012               	return	
  8773  012420                     l2265:
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;rtcc.c: 67: if(month==0x02)
  8777                           
  8778                           ; BSR set to: 0
  8779  012420  0E02               	movlw	2
  8780  012422  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8781  012424  A4D8               	btfss	status,2,c
  8782  012426  D014               	goto	l2271
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;rtcc.c: 68: {;rtcc.c: 69: year = bcd_year>>4;
  8786  012428  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  8787  01242A  0B0F               	andlw	15
  8788  01242C  6F61               	movwf	__number_of_days@year& (0+255),b
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;rtcc.c: 70: year *= 10;
  8792  01242E  0E0A               	movlw	10
  8793  012430  0361               	mulwf	__number_of_days@year& (0+255),b
  8794  012432  50F3               	movf	prodl,w,c
  8795  012434  6F61               	movwf	__number_of_days@year& (0+255),b
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  8799  012436  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  8800  012438  0B0F               	andlw	15
  8801  01243A  2761               	addwf	__number_of_days@year& (0+255),f,b
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;rtcc.c: 72: if(year&0b11)
  8805  01243C  C061  F060         	movff	__number_of_days@year,??__number_of_days
  8806  012440  0E03               	movlw	3
  8807  012442  1760               	andwf	??__number_of_days& (0+255),f,b
  8808  012444  B4D8               	btfsc	status,2,c
  8809  012446  D002               	goto	l2270
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;rtcc.c: 73: return 0x28;
  8813  012448  0E28               	movlw	40
  8814                           
  8815                           ; BSR set to: 0
  8816  01244A  0012               	return	
  8817  01244C                     l2270:
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;rtcc.c: 74: else;rtcc.c: 75: return 0x29;
  8821                           
  8822                           ; BSR set to: 0
  8823  01244C  0E29               	movlw	41
  8824                           
  8825                           ; BSR set to: 0
  8826  01244E  0012               	return	
  8827  012450                     l2271:
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;rtcc.c: 76: };rtcc.c: 77: return 0x31;
  8831                           
  8832                           ; BSR set to: 0
  8833                           
  8834                           ; BSR set to: 0
  8835  012450  0E31               	movlw	49
  8836  012452  0012               	return	
  8837  012454                     __end_of__number_of_days:
  8838                           	opt stack 0
  8839                           tblptru	equ	0xFF8
  8840                           tblptrh	equ	0xFF7
  8841                           tblptrl	equ	0xFF6
  8842                           tablat	equ	0xFF5
  8843                           prodl	equ	0xFF3
  8844                           intcon3	equ	0xFF0
  8845                           postinc0	equ	0xFEE
  8846                           wreg	equ	0xFE8
  8847                           postdec1	equ	0xFE5
  8848                           plusw1	equ	0xFE3
  8849                           fsr1h	equ	0xFE2
  8850                           fsr1l	equ	0xFE1
  8851                           postinc2	equ	0xFDE
  8852                           postdec2	equ	0xFDD
  8853                           plusw2	equ	0xFDB
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function __rtcc_verify_bcd *****************
  8859 ;; Defined at:
  8860 ;;		line 80 in file "rtcc.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  value           1    wreg     unsigned char 
  8863 ;;  min             1    0[BANK0 ] unsigned char 
  8864 ;;  max             1    1[BANK0 ] unsigned char 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;  value           1    3[BANK0 ] unsigned char 
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      unsigned char 
  8869 ;; Registers used:
  8870 ;;		wreg, status,2, status,0
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8879 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8880 ;;Total ram usage:        4 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:   10
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_rtcc_read_eeprom
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text30
  8891  0130FA                     __ptext30:
  8892                           	opt stack 0
  8893  0130FA                     __rtcc_verify_bcd:
  8894                           	opt stack 17
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;incstack = 0
  8898                           ;__rtcc_verify_bcd@value stored from wreg
  8899  0130FA  0100               	movlb	0	; () banked
  8900  0130FC  6F63               	movwf	__rtcc_verify_bcd@value& (0+255),b
  8901                           
  8902                           ;rtcc.c: 83: if((value&0x0F)>0x09)
  8903  0130FE  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  8904  013102  0E0F               	movlw	15
  8905  013104  0100               	movlb	0	; () banked
  8906  013106  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  8907  013108  0E09               	movlw	9
  8908  01310A  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  8909  01310C  D002               	goto	l2274
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;rtcc.c: 84: {;rtcc.c: 85: return min;
  8913  01310E  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8914                           
  8915                           ; BSR set to: 0
  8916  013110  0012               	return	
  8917  013112                     l2274:
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;rtcc.c: 86: };rtcc.c: 87: if((value&0xF0)>0x90)
  8921                           
  8922                           ; BSR set to: 0
  8923  013112  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  8924  013116  0EF0               	movlw	240
  8925  013118  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  8926  01311A  0E90               	movlw	144
  8927  01311C  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  8928  01311E  D002               	goto	l2276
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;rtcc.c: 88: {;rtcc.c: 89: return min;
  8932  013120  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8933                           
  8934                           ; BSR set to: 0
  8935  013122  0012               	return	
  8936  013124                     l2276:
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;rtcc.c: 90: };rtcc.c: 92: if(value<min)
  8940                           
  8941                           ; BSR set to: 0
  8942  013124  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8943  013126  5D63               	subwf	__rtcc_verify_bcd@value& (0+255),w,b
  8944  013128  B0D8               	btfsc	status,0,c
  8945  01312A  D002               	goto	l2277
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;rtcc.c: 93: {;rtcc.c: 94: return min;
  8949  01312C  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  8950                           
  8951                           ; BSR set to: 0
  8952  01312E  0012               	return	
  8953  013130                     l2277:
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;rtcc.c: 95: };rtcc.c: 96: if(value>max)
  8957                           
  8958                           ; BSR set to: 0
  8959  013130  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  8960  013132  5D61               	subwf	__rtcc_verify_bcd@max& (0+255),w,b
  8961  013134  B0D8               	btfsc	status,0,c
  8962  013136  D002               	goto	l2278
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;rtcc.c: 97: {;rtcc.c: 98: return max;
  8966  013138  5161               	movf	__rtcc_verify_bcd@max& (0+255),w,b
  8967                           
  8968                           ; BSR set to: 0
  8969  01313A  0012               	return	
  8970  01313C                     l2278:
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;rtcc.c: 99: };rtcc.c: 101: return value;
  8974                           
  8975                           ; BSR set to: 0
  8976  01313C  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  8977  01313E  0012               	return	
  8978  013140                     __end_of__rtcc_verify_bcd:
  8979                           	opt stack 0
  8980                           tblptru	equ	0xFF8
  8981                           tblptrh	equ	0xFF7
  8982                           tblptrl	equ	0xFF6
  8983                           tablat	equ	0xFF5
  8984                           prodl	equ	0xFF3
  8985                           intcon3	equ	0xFF0
  8986                           postinc0	equ	0xFEE
  8987                           wreg	equ	0xFE8
  8988                           postdec1	equ	0xFE5
  8989                           plusw1	equ	0xFE3
  8990                           fsr1h	equ	0xFE2
  8991                           fsr1l	equ	0xFE1
  8992                           postinc2	equ	0xFDE
  8993                           postdec2	equ	0xFDD
  8994                           plusw2	equ	0xFDB
  8995                           fsr2h	equ	0xFDA
  8996                           fsr2l	equ	0xFD9
  8997                           status	equ	0xFD8
  8998                           
  8999 ;; *************** function _log_start_new *****************
  9000 ;; Defined at:
  9001 ;;		line 71 in file "log.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;Total ram usage:        0 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:   12
  9022 ;; This function calls:
  9023 ;;		_rtcc_get_seconds_decimal
  9024 ;; This function is called by:
  9025 ;;		_main
  9026 ;;		_system_init
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text31
  9031  010632                     __ptext31:
  9032                           	opt stack 0
  9033  010632                     _log_start_new:
  9034                           	opt stack 17
  9035                           
  9036                           ;log.c: 73: inputVoltageSum = 0;
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;incstack = 0
  9040  010632  0E00               	movlw	0
  9041  010634  0102               	movlb	2	; () banked
  9042  010636  6F9A               	movwf	_inputVoltageSum& (0+255),b
  9043  010638  0E00               	movlw	0
  9044  01063A  6F9B               	movwf	(_inputVoltageSum+1)& (0+255),b
  9045  01063C  0E00               	movlw	0
  9046  01063E  6F9C               	movwf	(_inputVoltageSum+2)& (0+255),b
  9047  010640  0E00               	movlw	0
  9048  010642  6F9D               	movwf	(_inputVoltageSum+3)& (0+255),b
  9049                           
  9050                           ;log.c: 74: inputCurrentSum = 0;
  9051  010644  0E00               	movlw	0
  9052  010646  6F96               	movwf	_inputCurrentSum& (0+255),b
  9053  010648  0E00               	movlw	0
  9054  01064A  6F97               	movwf	(_inputCurrentSum+1)& (0+255),b
  9055  01064C  0E00               	movlw	0
  9056  01064E  6F98               	movwf	(_inputCurrentSum+2)& (0+255),b
  9057  010650  0E00               	movlw	0
  9058  010652  6F99               	movwf	(_inputCurrentSum+3)& (0+255),b
  9059                           
  9060                           ;log.c: 75: outputVoltageSum = 0;
  9061  010654  0E00               	movlw	0
  9062  010656  6F92               	movwf	_outputVoltageSum& (0+255),b
  9063  010658  0E00               	movlw	0
  9064  01065A  6F93               	movwf	(_outputVoltageSum+1)& (0+255),b
  9065  01065C  0E00               	movlw	0
  9066  01065E  6F94               	movwf	(_outputVoltageSum+2)& (0+255),b
  9067  010660  0E00               	movlw	0
  9068  010662  6F95               	movwf	(_outputVoltageSum+3)& (0+255),b
  9069                           
  9070                           ;log.c: 76: outputCurrentSum = 0;
  9071  010664  0E00               	movlw	0
  9072  010666  6F8E               	movwf	_outputCurrentSum& (0+255),b
  9073  010668  0E00               	movlw	0
  9074  01066A  6F8F               	movwf	(_outputCurrentSum+1)& (0+255),b
  9075  01066C  0E00               	movlw	0
  9076  01066E  6F90               	movwf	(_outputCurrentSum+2)& (0+255),b
  9077  010670  0E00               	movlw	0
  9078  010672  6F91               	movwf	(_outputCurrentSum+3)& (0+255),b
  9079                           
  9080                           ;log.c: 77: inputPowerSum = 0;
  9081  010674  0E00               	movlw	0
  9082  010676  6F8A               	movwf	_inputPowerSum& (0+255),b
  9083  010678  0E00               	movlw	0
  9084  01067A  6F8B               	movwf	(_inputPowerSum+1)& (0+255),b
  9085  01067C  0E00               	movlw	0
  9086  01067E  6F8C               	movwf	(_inputPowerSum+2)& (0+255),b
  9087  010680  0E00               	movlw	0
  9088  010682  6F8D               	movwf	(_inputPowerSum+3)& (0+255),b
  9089                           
  9090                           ;log.c: 78: outputPowerSum = 0;
  9091  010684  0E00               	movlw	0
  9092  010686  6F86               	movwf	_outputPowerSum& (0+255),b
  9093  010688  0E00               	movlw	0
  9094  01068A  6F87               	movwf	(_outputPowerSum+1)& (0+255),b
  9095  01068C  0E00               	movlw	0
  9096  01068E  6F88               	movwf	(_outputPowerSum+2)& (0+255),b
  9097  010690  0E00               	movlw	0
  9098  010692  6F89               	movwf	(_outputPowerSum+3)& (0+255),b
  9099                           
  9100                           ;log.c: 79: inputCapacitySum = 0;
  9101  010694  0E00               	movlw	0
  9102  010696  6F82               	movwf	_inputCapacitySum& (0+255),b
  9103  010698  0E00               	movlw	0
  9104  01069A  6F83               	movwf	(_inputCapacitySum+1)& (0+255),b
  9105  01069C  0E00               	movlw	0
  9106  01069E  6F84               	movwf	(_inputCapacitySum+2)& (0+255),b
  9107  0106A0  0E00               	movlw	0
  9108  0106A2  6F85               	movwf	(_inputCapacitySum+3)& (0+255),b
  9109                           
  9110                           ;log.c: 80: outputCapacitySum = 0;
  9111  0106A4  0E00               	movlw	0
  9112  0106A6  6F7E               	movwf	_outputCapacitySum& (0+255),b
  9113  0106A8  0E00               	movlw	0
  9114  0106AA  6F7F               	movwf	(_outputCapacitySum+1)& (0+255),b
  9115  0106AC  0E00               	movlw	0
  9116  0106AE  6F80               	movwf	(_outputCapacitySum+2)& (0+255),b
  9117  0106B0  0E00               	movlw	0
  9118  0106B2  6F81               	movwf	(_outputCapacitySum+3)& (0+255),b
  9119                           
  9120                           ;log.c: 81: temperatureOnboardSum = 0;
  9121  0106B4  0E00               	movlw	0
  9122  0106B6  6F7A               	movwf	_temperatureOnboardSum& (0+255),b
  9123  0106B8  0E00               	movlw	0
  9124  0106BA  6F7B               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  9125  0106BC  0E00               	movlw	0
  9126  0106BE  6F7C               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  9127  0106C0  0E00               	movlw	0
  9128  0106C2  6F7D               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  9129                           
  9130                           ;log.c: 82: temperatureExternal1Sum = 0;
  9131  0106C4  0E00               	movlw	0
  9132  0106C6  6F76               	movwf	_temperatureExternal1Sum& (0+255),b
  9133  0106C8  0E00               	movlw	0
  9134  0106CA  6F77               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  9135  0106CC  0E00               	movlw	0
  9136  0106CE  6F78               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  9137  0106D0  0E00               	movlw	0
  9138  0106D2  6F79               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  9139                           
  9140                           ;log.c: 83: temperatureExternal2Sum = 0;
  9141  0106D4  0E00               	movlw	0
  9142  0106D6  6F72               	movwf	_temperatureExternal2Sum& (0+255),b
  9143  0106D8  0E00               	movlw	0
  9144  0106DA  6F73               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  9145  0106DC  0E00               	movlw	0
  9146  0106DE  6F74               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  9147  0106E0  0E00               	movlw	0
  9148  0106E2  6F75               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  9149                           
  9150                           ;log.c: 84: chargerOnTime = 0;
  9151  0106E4  0E00               	movlw	0
  9152  0106E6  6FB1               	movwf	(_chargerOnTime+1)& (0+255),b
  9153  0106E8  0E00               	movlw	0
  9154  0106EA  6FB0               	movwf	_chargerOnTime& (0+255),b
  9155                           
  9156                           ;log.c: 85: lowPowerTime = 0;
  9157  0106EC  0E00               	movlw	0
  9158  0106EE  6FAF               	movwf	(_lowPowerTime+1)& (0+255),b
  9159  0106F0  0E00               	movlw	0
  9160  0106F2  6FAE               	movwf	_lowPowerTime& (0+255),b
  9161                           
  9162                           ;log.c: 86: status = 0;
  9163  0106F4  0E00               	movlw	0
  9164  0106F6  0101               	movlb	1	; () banked
  9165  0106F8  6FF0               	movwf	_status& (0+255),b
  9166                           
  9167                           ;log.c: 87: averageCount = 0;
  9168  0106FA  0E00               	movlw	0
  9169  0106FC  6E17               	movwf	_averageCount+1,c
  9170  0106FE  0E00               	movlw	0
  9171  010700  6E16               	movwf	_averageCount,c
  9172                           
  9173                           ; BSR set to: 1
  9174                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  9175  010702  ECED  F09E         	call	_rtcc_get_seconds_decimal	;wreg free
  9176  010706  0101               	movlb	1	; () banked
  9177  010708  6FEF               	movwf	_lastSecond& (0+255),b
  9178                           
  9179                           ; BSR set to: 1
  9180  01070A  0012               	return		;funcret
  9181  01070C                     __end_of_log_start_new:
  9182                           	opt stack 0
  9183                           tblptru	equ	0xFF8
  9184                           tblptrh	equ	0xFF7
  9185                           tblptrl	equ	0xFF6
  9186                           tablat	equ	0xFF5
  9187                           prodl	equ	0xFF3
  9188                           intcon3	equ	0xFF0
  9189                           postinc0	equ	0xFEE
  9190                           wreg	equ	0xFE8
  9191                           postdec1	equ	0xFE5
  9192                           plusw1	equ	0xFE3
  9193                           fsr1h	equ	0xFE2
  9194                           fsr1l	equ	0xFE1
  9195                           postinc2	equ	0xFDE
  9196                           postdec2	equ	0xFDD
  9197                           plusw2	equ	0xFDB
  9198                           fsr2h	equ	0xFDA
  9199                           fsr2l	equ	0xFD9
  9200                           status	equ	0xFD8
  9201                           
  9202 ;; *************** function _i2c_init *****************
  9203 ;; Defined at:
  9204 ;;		line 94 in file "i2c.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, status,2, status,0, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9222 ;;Total ram usage:        0 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; Hardware stack levels required when called:   11
  9225 ;; This function calls:
  9226 ;;		__i2c_open_1
  9227 ;;		_i2c_set_frequency
  9228 ;; This function is called by:
  9229 ;;		_system_init
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text32
  9234  013E5C                     __ptext32:
  9235                           	opt stack 0
  9236  013E5C                     _i2c_init:
  9237                           	opt stack 18
  9238                           
  9239                           ;i2c.c: 96: _i2c_open_1();
  9240                           
  9241                           ; BSR set to: 1
  9242                           ;incstack = 0
  9243  013E5C  EC0B  F09E         	call	__i2c_open_1	;wreg free
  9244                           
  9245                           ;i2c.c: 98: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9246  013E60  0E00               	movlw	0
  9247  013E62  ECB3  F090         	call	_i2c_set_frequency
  9248  013E66  0012               	return		;funcret
  9249  013E68                     __end_of_i2c_init:
  9250                           	opt stack 0
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodl	equ	0xFF3
  9256                           intcon3	equ	0xFF0
  9257                           postinc0	equ	0xFEE
  9258                           wreg	equ	0xFE8
  9259                           postdec1	equ	0xFE5
  9260                           plusw1	equ	0xFE3
  9261                           fsr1h	equ	0xFE2
  9262                           fsr1l	equ	0xFE1
  9263                           postinc2	equ	0xFDE
  9264                           postdec2	equ	0xFDD
  9265                           plusw2	equ	0xFDB
  9266                           fsr2h	equ	0xFDA
  9267                           fsr2l	equ	0xFD9
  9268                           status	equ	0xFD8
  9269                           
  9270 ;; *************** function __i2c_open_1 *****************
  9271 ;; Defined at:
  9272 ;;		line 33 in file "i2c.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;		None
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9290 ;;Total ram usage:        0 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:   10
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_i2c_init
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text33
  9301  013C16                     __ptext33:
  9302                           	opt stack 0
  9303  013C16                     __i2c_open_1:
  9304                           	opt stack 18
  9305                           
  9306                           ;i2c.c: 35: SSP1STATbits.SMP = 0;
  9307                           
  9308                           ;incstack = 0
  9309  013C16  9EC7               	bcf	4039,7,c	;volatile
  9310                           
  9311                           ;i2c.c: 36: SSP1STATbits.CKE = 0;
  9312  013C18  9CC7               	bcf	4039,6,c	;volatile
  9313                           
  9314                           ;i2c.c: 37: SSP1ADD = 29;
  9315  013C1A  0E1D               	movlw	29
  9316  013C1C  6EC8               	movwf	4040,c	;volatile
  9317                           
  9318                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  9319  013C1E  9EC6               	bcf	4038,7,c	;volatile
  9320                           
  9321                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  9322  013C20  9CC6               	bcf	4038,6,c	;volatile
  9323                           
  9324                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  9325  013C22  50C6               	movf	4038,w,c	;volatile
  9326  013C24  0BF0               	andlw	-16
  9327  013C26  0908               	iorlw	8
  9328  013C28  6EC6               	movwf	4038,c	;volatile
  9329                           
  9330                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  9331  013C2A  8AC6               	bsf	4038,5,c	;volatile
  9332  013C2C  0012               	return		;funcret
  9333  013C2E                     __end_of__i2c_open_1:
  9334                           	opt stack 0
  9335                           tblptru	equ	0xFF8
  9336                           tblptrh	equ	0xFF7
  9337                           tblptrl	equ	0xFF6
  9338                           tablat	equ	0xFF5
  9339                           prodl	equ	0xFF3
  9340                           intcon3	equ	0xFF0
  9341                           postinc0	equ	0xFEE
  9342                           wreg	equ	0xFE8
  9343                           postdec1	equ	0xFE5
  9344                           plusw1	equ	0xFE3
  9345                           fsr1h	equ	0xFE2
  9346                           fsr1l	equ	0xFE1
  9347                           postinc2	equ	0xFDE
  9348                           postdec2	equ	0xFDD
  9349                           plusw2	equ	0xFDB
  9350                           fsr2h	equ	0xFDA
  9351                           fsr2l	equ	0xFD9
  9352                           status	equ	0xFD8
  9353                           
  9354 ;; *************** function _i2c_eeprom_read_calibration *****************
  9355 ;; Defined at:
  9356 ;;		line 579 in file "i2c.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  buffer          4   27[BANK0 ] unsigned char [4]
  9361 ;;  addr            2   31[BANK0 ] unsigned int 
  9362 ;;  cntr            1   33[BANK0 ] unsigned char 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;Total ram usage:        9 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:   13
  9379 ;; This function calls:
  9380 ;;		__i2c_eeprom_load_default_calibration
  9381 ;;		_i2c_eeprom_read
  9382 ;;		_schedule_eeprom_write_task
  9383 ;; This function is called by:
  9384 ;;		_system_init
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text34
  9389  00F288                     __ptext34:
  9390                           	opt stack 0
  9391  00F288                     _i2c_eeprom_read_calibration:
  9392                           	opt stack 16
  9393                           
  9394                           ;i2c.c: 581: uint8_t buffer[4];;i2c.c: 582: uint8_t cntr;;i2c.c: 583: uint16_t addr;;i2c
      +                          .c: 585: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  9395                           
  9396                           ;incstack = 0
  9397  00F288  0E00               	movlw	0
  9398  00F28A  0100               	movlb	0	; () banked
  9399  00F28C  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
  9400  00F28E                     l20899:
  9401                           
  9402                           ; BSR set to: 0
  9403  00F28E  0E06               	movlw	6
  9404  00F290  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
  9405  00F292  D001               	goto	l1624
  9406  00F294  0012               	return	
  9407  00F296                     l1624:
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;i2c.c: 586: {;i2c.c: 588: addr = 0x0200 + (cntr<<4);
  9411                           
  9412                           ; BSR set to: 0
  9413  00F296  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9414  00F298  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
  9415  00F29A  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
  9416  00F29C  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9417  00F29E  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9418  00F2A0  0EF0               	movlw	240
  9419  00F2A2  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9420  00F2A4  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9421  00F2A6  0B0F               	andlw	15
  9422  00F2A8  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9423  00F2AA  0EF0               	movlw	240
  9424  00F2AC  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9425  00F2AE  0E00               	movlw	0
  9426  00F2B0  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9427  00F2B2  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
  9428  00F2B4  0E02               	movlw	2
  9429  00F2B6  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
  9430  00F2B8  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;i2c.c: 589: i2c_eeprom_read(addr, &buffer[0], 4);
  9434  00F2BA  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9435  00F2BE  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9436  00F2C2  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
  9437  00F2C4  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9438  00F2C6  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  9439  00F2C8  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9440  00F2CA  0E04               	movlw	4
  9441  00F2CC  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9442  00F2CE  EC7F  F096         	call	_i2c_eeprom_read	;wreg free
  9443                           
  9444                           ;i2c.c: 591: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  9445  00F2D2  0E77               	movlw	119
  9446  00F2D4  0100               	movlb	0	; () banked
  9447  00F2D6  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
  9448  00F2D8  A4D8               	btfss	status,2,c
  9449  00F2DA  D021               	goto	l1626
  9450                           
  9451                           ; BSR set to: 0
  9452  00F2DC  0E55               	movlw	85
  9453  00F2DE  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
  9454  00F2E0  A4D8               	btfss	status,2,c
  9455  00F2E2  D01D               	goto	l1626
  9456                           
  9457                           ; BSR set to: 0
  9458  00F2E4  0E33               	movlw	51
  9459  00F2E6  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
  9460  00F2E8  A4D8               	btfss	status,2,c
  9461  00F2EA  D019               	goto	l1626
  9462                           
  9463                           ; BSR set to: 0
  9464  00F2EC  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9465  00F2EE  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
  9466  00F2F0  A4D8               	btfss	status,2,c
  9467  00F2F2  D015               	goto	l1626
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;i2c.c: 592: {;i2c.c: 594: addr += 4;
  9471  00F2F4  0E04               	movlw	4
  9472  00F2F6  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
  9473  00F2F8  0E00               	movlw	0
  9474  00F2FA  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;i2c.c: 595: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  9478  00F2FC  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9479  00F300  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9480  00F304  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9481  00F306  0D0C               	mullw	12
  9482  00F308  0E00               	movlw	low _calibrationParameters
  9483  00F30A  24F3               	addwf	prodl,w,c
  9484  00F30C  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9485  00F30E  0E03               	movlw	high _calibrationParameters
  9486  00F310  20F4               	addwfc	prodh,w,c
  9487  00F312  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9488  00F314  0E0C               	movlw	12
  9489  00F316  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9490  00F318  EC7F  F096         	call	_i2c_eeprom_read	;wreg free
  9491                           
  9492                           ;i2c.c: 596: }
  9493  00F31C  D041               	goto	l1630
  9494  00F31E                     l1626:
  9495                           
  9496                           ;i2c.c: 597: else;i2c.c: 598: {;i2c.c: 600: _i2c_eeprom_load_default_calibration(&calibr
      +                          ationParameters[cntr], cntr);
  9497  00F31E  0100               	movlb	0	; () banked
  9498  00F320  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9499  00F322  0D0C               	mullw	12
  9500  00F324  0E00               	movlw	low _calibrationParameters
  9501  00F326  24F3               	addwf	prodl,w,c
  9502  00F328  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
  9503  00F32A  0E03               	movlw	high _calibrationParameters
  9504  00F32C  20F4               	addwfc	prodh,w,c
  9505  00F32E  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
  9506  00F330  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  9507  00F334  EC77  F059         	call	__i2c_eeprom_load_default_calibration	;wreg free
  9508                           
  9509                           ;i2c.c: 602: switch((calibrationIndex_t) cntr)
  9510  00F338  D01C               	goto	l1628
  9511  00F33A                     
  9512                           ;i2c.c: 605: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  9513  00F33A  0E02               	movlw	2
  9514  00F33C  EC4A  F097         	call	_schedule_eeprom_write_task
  9515                           
  9516                           ;i2c.c: 606: break;
  9517  00F340  D02F               	goto	l1630
  9518  00F342                     
  9519                           ;i2c.c: 608: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  9520  00F342  0E03               	movlw	3
  9521  00F344  EC4A  F097         	call	_schedule_eeprom_write_task
  9522                           
  9523                           ;i2c.c: 609: break;
  9524  00F348  D02B               	goto	l1630
  9525  00F34A                     
  9526                           ;i2c.c: 611: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  9527  00F34A  0E04               	movlw	4
  9528  00F34C  EC4A  F097         	call	_schedule_eeprom_write_task
  9529                           
  9530                           ;i2c.c: 612: break;
  9531  00F350  D027               	goto	l1630
  9532  00F352                     
  9533                           ;i2c.c: 614: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  9534  00F352  0E05               	movlw	5
  9535  00F354  EC4A  F097         	call	_schedule_eeprom_write_task
  9536                           
  9537                           ;i2c.c: 615: break;
  9538  00F358  D023               	goto	l1630
  9539  00F35A                     
  9540                           ;i2c.c: 617: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  9541  00F35A  0E06               	movlw	6
  9542  00F35C  EC4A  F097         	call	_schedule_eeprom_write_task
  9543                           
  9544                           ;i2c.c: 618: break;
  9545  00F360  D01F               	goto	l1630
  9546  00F362                     
  9547                           ;i2c.c: 620: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  9548  00F362  0E07               	movlw	7
  9549  00F364  EC4A  F097         	call	_schedule_eeprom_write_task
  9550                           
  9551                           ;i2c.c: 621: break;
  9552  00F368  D01B               	goto	l1630
  9553  00F36A                     
  9554                           ;i2c.c: 623: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  9555  00F36A  0E08               	movlw	8
  9556  00F36C  EC4A  F097         	call	_schedule_eeprom_write_task
  9557                           
  9558                           ;i2c.c: 625: }
  9559                           
  9560                           ;i2c.c: 624: break;
  9561  00F370  D017               	goto	l1630
  9562  00F372                     l1628:
  9563  00F372  0100               	movlb	0	; () banked
  9564  00F374  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9565                           
  9566                           ; Switch size 1, requested type "space"
  9567                           ; Number of cases is 7, Range of values is 0 to 6
  9568                           ; switch strategies available:
  9569                           ; Name         Instructions Cycles
  9570                           ; simple_byte           22    12 (average)
  9571                           ;	Chosen strategy is simple_byte
  9572  00F376  0A00               	xorlw	0	; case 0
  9573  00F378  B4D8               	btfsc	status,2,c
  9574  00F37A  D7DF               	goto	l1629
  9575  00F37C  0A01               	xorlw	1	; case 1
  9576  00F37E  B4D8               	btfsc	status,2,c
  9577  00F380  D7E0               	goto	l1631
  9578  00F382  0A03               	xorlw	3	; case 2
  9579  00F384  B4D8               	btfsc	status,2,c
  9580  00F386  D7E1               	goto	l1632
  9581  00F388  0A01               	xorlw	1	; case 3
  9582  00F38A  B4D8               	btfsc	status,2,c
  9583  00F38C  D7E2               	goto	l1633
  9584  00F38E  0A07               	xorlw	7	; case 4
  9585  00F390  B4D8               	btfsc	status,2,c
  9586  00F392  D7E3               	goto	l1634
  9587  00F394  0A01               	xorlw	1	; case 5
  9588  00F396  B4D8               	btfsc	status,2,c
  9589  00F398  D7E4               	goto	l1635
  9590  00F39A  0A03               	xorlw	3	; case 6
  9591  00F39C  B4D8               	btfsc	status,2,c
  9592  00F39E  D7E5               	goto	l1636
  9593  00F3A0                     l1630:
  9594                           
  9595                           ; BSR set to: 0
  9596                           
  9597                           ; BSR set to: 0
  9598  00F3A0  0100               	movlb	0	; () banked
  9599  00F3A2  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
  9600  00F3A4  D774               	goto	l20899
  9601  00F3A6                     __end_of_i2c_eeprom_read_calibration:
  9602                           	opt stack 0
  9603                           tblptru	equ	0xFF8
  9604                           tblptrh	equ	0xFF7
  9605                           tblptrl	equ	0xFF6
  9606                           tablat	equ	0xFF5
  9607                           prodh	equ	0xFF4
  9608                           prodl	equ	0xFF3
  9609                           intcon3	equ	0xFF0
  9610                           postinc0	equ	0xFEE
  9611                           wreg	equ	0xFE8
  9612                           postdec1	equ	0xFE5
  9613                           plusw1	equ	0xFE3
  9614                           fsr1h	equ	0xFE2
  9615                           fsr1l	equ	0xFE1
  9616                           postinc2	equ	0xFDE
  9617                           postdec2	equ	0xFDD
  9618                           plusw2	equ	0xFDB
  9619                           fsr2h	equ	0xFDA
  9620                           fsr2l	equ	0xFD9
  9621                           status	equ	0xFD8
  9622                           
  9623 ;; *************** function _i2c_eeprom_read *****************
  9624 ;; Defined at:
  9625 ;;		line 563 in file "i2c.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  address         2   17[BANK0 ] unsigned int 
  9628 ;;  data            2   19[BANK0 ] PTR unsigned char 
  9629 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
  9630 ;;  length          1   21[BANK0 ] unsigned char 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  9633 ;;  addr            1   23[BANK0 ] unsigned char 
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9643 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9645 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9646 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9647 ;;Total ram usage:        8 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:   12
  9650 ;; This function calls:
  9651 ;;		__i2c_read
  9652 ;;		__i2c_write
  9653 ;;		_i2c_set_frequency
  9654 ;; This function is called by:
  9655 ;;		_i2c_eeprom_read_calibration
  9656 ;;		_rtcc_read_eeprom
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text35
  9661  012CFE                     __ptext35:
  9662                           	opt stack 0
  9663  012CFE                     _i2c_eeprom_read:
  9664                           	opt stack 15
  9665                           
  9666                           ;i2c.c: 565: uint8_t slave_address;;i2c.c: 566: uint8_t addr;;i2c.c: 567: addr = address
      +                           & 0xFF;
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;incstack = 0
  9670  012CFE  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  9671                           
  9672                           ;i2c.c: 568: address &= 0b0000011100000000;
  9673  012D02  0100               	movlb	0	; () banked
  9674  012D04  0E00               	movlw	0
  9675  012D06  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  9676  012D08  0E07               	movlw	7
  9677  012D0A  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9678                           
  9679                           ;i2c.c: 569: address >>= 7;
  9680  012D0C  0E07               	movlw	7
  9681  012D0E  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  9682  012D10                     u18065:
  9683  012D10  90D8               	bcf	status,0,c
  9684  012D12  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9685  012D14  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  9686  012D16  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  9687  012D18  D7FB               	goto	u18065
  9688                           
  9689                           ;i2c.c: 570: slave_address = 0b10100000 | address;
  9690  012D1A  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  9691  012D1C  09A0               	iorlw	160
  9692  012D1E  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;i2c.c: 573: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  9696  012D20  0E02               	movlw	2
  9697  012D22  ECB3  F090         	call	_i2c_set_frequency
  9698                           
  9699                           ;i2c.c: 575: _i2c_write(slave_address, &addr, 1);
  9700  012D26  0E77               	movlw	low i2c_eeprom_read@addr
  9701  012D28  0100               	movlb	0	; () banked
  9702  012D2A  6F65               	movwf	__i2c_write@data& (0+255),b
  9703  012D2C  0E00               	movlw	high i2c_eeprom_read@addr
  9704  012D2E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  9705  012D30  0E01               	movlw	1
  9706  012D32  6F67               	movwf	__i2c_write@length& (0+255),b
  9707  012D34  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9708  012D36  EC22  F097         	call	__i2c_write
  9709                           
  9710                           ;i2c.c: 576: _i2c_read(slave_address, &data[0], length);
  9711  012D3A  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  9712  012D3E  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  9713  012D42  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  9714  012D46  0100               	movlb	0	; () banked
  9715  012D48  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9716  012D4A  EC51  F08A         	call	__i2c_read
  9717  012D4E  0012               	return		;funcret
  9718  012D50                     __end_of_i2c_eeprom_read:
  9719                           	opt stack 0
  9720                           tblptru	equ	0xFF8
  9721                           tblptrh	equ	0xFF7
  9722                           tblptrl	equ	0xFF6
  9723                           tablat	equ	0xFF5
  9724                           prodh	equ	0xFF4
  9725                           prodl	equ	0xFF3
  9726                           intcon3	equ	0xFF0
  9727                           postinc0	equ	0xFEE
  9728                           wreg	equ	0xFE8
  9729                           postdec1	equ	0xFE5
  9730                           plusw1	equ	0xFE3
  9731                           fsr1h	equ	0xFE2
  9732                           fsr1l	equ	0xFE1
  9733                           postinc2	equ	0xFDE
  9734                           postdec2	equ	0xFDD
  9735                           plusw2	equ	0xFDB
  9736                           fsr2h	equ	0xFDA
  9737                           fsr2l	equ	0xFD9
  9738                           status	equ	0xFD8
  9739                           
  9740 ;; *************** function __i2c_read *****************
  9741 ;; Defined at:
  9742 ;;		line 167 in file "i2c.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  slave_addres    1    wreg     unsigned char 
  9745 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9746 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
  9747 ;;  length          1    7[BANK0 ] unsigned char 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  9750 ;;  cntr            1   16[BANK0 ] unsigned char 
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      void 
  9753 ;; Registers used:
  9754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9760 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9761 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9762 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9763 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9764 ;;Total ram usage:       12 bytes
  9765 ;; Hardware stack levels used:    1
  9766 ;; Hardware stack levels required when called:   11
  9767 ;; This function calls:
  9768 ;;		__i2c_acknowledge
  9769 ;;		__i2c_get
  9770 ;;		__i2c_not_acknowledge
  9771 ;;		__i2c_send
  9772 ;;		__i2c_start
  9773 ;;		__i2c_stop
  9774 ;;		__i2c_wait_idle
  9775 ;; This function is called by:
  9776 ;;		_i2c_eeprom_read
  9777 ;;		_i2c_eeprom_readByte
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           	psect	text36
  9782  0114A2                     __ptext36:
  9783                           	opt stack 0
  9784  0114A2                     __i2c_read:
  9785                           	opt stack 15
  9786                           
  9787                           ;incstack = 0
  9788                           ;__i2c_read@slave_address stored from wreg
  9789  0114A2  0100               	movlb	0	; () banked
  9790  0114A4  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  9791                           
  9792                           ;i2c.c: 169: uint8_t cntr;;i2c.c: 171: _i2c_wait_idle();
  9793  0114A6  EC90  F092         	call	__i2c_wait_idle	;wreg free
  9794                           
  9795                           ;i2c.c: 172: _i2c_start();
  9796  0114AA  EC62  F09F         	call	__i2c_start	;wreg free
  9797                           
  9798                           ;i2c.c: 173: _i2c_wait_idle();
  9799  0114AE  EC90  F092         	call	__i2c_wait_idle	;wreg free
  9800                           
  9801                           ;i2c.c: 174: _i2c_send(slave_address | 0x01);
  9802  0114B2  0100               	movlb	0	; () banked
  9803  0114B4  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  9804  0114B6  0901               	iorlw	1
  9805  0114B8  EC59  F09F         	call	__i2c_send
  9806                           
  9807                           ;i2c.c: 175: _i2c_wait_idle();
  9808  0114BC  EC90  F092         	call	__i2c_wait_idle	;wreg free
  9809                           
  9810                           ;i2c.c: 185: for(cntr=0; cntr<length-1; ++cntr)
  9811  0114C0  0E00               	movlw	0
  9812  0114C2  0100               	movlb	0	; () banked
  9813  0114C4  6F70               	movwf	__i2c_read@cntr& (0+255),b
  9814  0114C6  D00F               	goto	l1557
  9815  0114C8                     
  9816                           ; BSR set to: 0
  9817                           ;i2c.c: 186: {;i2c.c: 187: data[cntr] = _i2c_get();
  9818                           
  9819                           ; BSR set to: 0
  9820  0114C8  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9821  0114CA  0D01               	mullw	1
  9822  0114CC  50F3               	movf	prodl,w,c
  9823  0114CE  2565               	addwf	__i2c_read@data& (0+255),w,b
  9824  0114D0  6ED9               	movwf	fsr2l,c
  9825  0114D2  50F4               	movf	prodh,w,c
  9826  0114D4  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9827  0114D6  6EDA               	movwf	fsr2h,c
  9828  0114D8  EC4A  F09F         	call	__i2c_get	;wreg free
  9829  0114DC  6EDF               	movwf	indf2,c
  9830                           
  9831                           ;i2c.c: 188: _i2c_acknowledge();
  9832  0114DE  EC4F  F09F         	call	__i2c_acknowledge	;wreg free
  9833  0114E2  0100               	movlb	0	; () banked
  9834  0114E4  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  9835  0114E6                     l1557:
  9836                           
  9837                           ; BSR set to: 0
  9838                           
  9839                           ; BSR set to: 0
  9840  0114E6  0EFF               	movlw	255
  9841  0114E8  6F68               	movwf	??__i2c_read& (0+255),b
  9842  0114EA  0EFF               	movlw	255
  9843  0114EC  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  9844  0114EE  5167               	movf	__i2c_read@length& (0+255),w,b
  9845  0114F0  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  9846  0114F2  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  9847  0114F4  5168               	movf	??__i2c_read& (0+255),w,b
  9848  0114F6  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  9849  0114F8  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  9850  0114FA  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  9851  0114FC  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9852  0114FE  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  9853  011500  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  9854  011502  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  9855  011504  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  9856  011506  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  9857  011508  0A80               	xorlw	128
  9858  01150A  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  9859  01150C  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  9860  01150E  0A80               	xorlw	128
  9861  011510  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  9862  011512  A0D8               	btfss	status,0,c
  9863  011514  D7D9               	goto	l1558
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;i2c.c: 189: };i2c.c: 190: data[cntr] = _i2c_get();
  9867                           
  9868                           ; BSR set to: 0
  9869  011516  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9870  011518  0D01               	mullw	1
  9871  01151A  50F3               	movf	prodl,w,c
  9872  01151C  2565               	addwf	__i2c_read@data& (0+255),w,b
  9873  01151E  6ED9               	movwf	fsr2l,c
  9874  011520  50F4               	movf	prodh,w,c
  9875  011522  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9876  011524  6EDA               	movwf	fsr2h,c
  9877  011526  EC4A  F09F         	call	__i2c_get	;wreg free
  9878  01152A  6EDF               	movwf	indf2,c
  9879                           
  9880                           ;i2c.c: 191: _i2c_not_acknowledge();
  9881  01152C  EC45  F09F         	call	__i2c_not_acknowledge	;wreg free
  9882                           
  9883                           ;i2c.c: 193: _i2c_stop();
  9884  011530  EC5E  F09F         	call	__i2c_stop	;wreg free
  9885  011534  0012               	return		;funcret
  9886  011536                     __end_of__i2c_read:
  9887                           	opt stack 0
  9888                           tblptru	equ	0xFF8
  9889                           tblptrh	equ	0xFF7
  9890                           tblptrl	equ	0xFF6
  9891                           tablat	equ	0xFF5
  9892                           prodh	equ	0xFF4
  9893                           prodl	equ	0xFF3
  9894                           intcon3	equ	0xFF0
  9895                           postinc0	equ	0xFEE
  9896                           wreg	equ	0xFE8
  9897                           postdec1	equ	0xFE5
  9898                           plusw1	equ	0xFE3
  9899                           fsr1h	equ	0xFE2
  9900                           fsr1l	equ	0xFE1
  9901                           indf2	equ	0xFDF
  9902                           postinc2	equ	0xFDE
  9903                           postdec2	equ	0xFDD
  9904                           plusw2	equ	0xFDB
  9905                           fsr2h	equ	0xFDA
  9906                           fsr2l	equ	0xFD9
  9907                           status	equ	0xFD8
  9908                           
  9909 ;; *************** function __i2c_eeprom_load_default_calibration *****************
  9910 ;; Defined at:
  9911 ;;		line 645 in file "i2c.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  buffer          2    0[BANK0 ] PTR struct .
  9914 ;;		 -> calibrationParameters(84), 
  9915 ;;  index           1    2[BANK0 ] enum E6665
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9927 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9930 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9931 ;;Total ram usage:        3 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:   10
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_i2c_eeprom_read_calibration
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text37
  9942  00B2EE                     __ptext37:
  9943                           	opt stack 0
  9944  00B2EE                     __i2c_eeprom_load_default_calibration:
  9945                           	opt stack 18
  9946                           
  9947                           ;i2c.c: 647: switch(index)
  9948                           
  9949                           ;incstack = 0
  9950  00B2EE  D1C8               	goto	l1640
  9951  00B2F0                     
  9952                           ;i2c.c: 650: (*buffer).NeutralOffset = 0;
  9953  00B2F0  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  9954  00B2F4  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  9955  00B2F8  0E00               	movlw	0
  9956  00B2FA  6EDE               	movwf	postinc2,c
  9957  00B2FC  0E00               	movlw	0
  9958  00B2FE  6EDD               	movwf	postdec2,c
  9959                           
  9960                           ;i2c.c: 651: (*buffer).NeutralMultiplier = 11;
  9961  00B300  0100               	movlb	0	; () banked
  9962  00B302  EE20 F002          	lfsr	2,2
  9963  00B306  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9964  00B308  26D9               	addwf	fsr2l,f,c
  9965  00B30A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9966  00B30C  22DA               	addwfc	fsr2h,f,c
  9967  00B30E  0E0B               	movlw	11
  9968  00B310  6EDE               	movwf	postinc2,c
  9969  00B312  0E00               	movlw	0
  9970  00B314  6EDD               	movwf	postdec2,c
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;i2c.c: 652: (*buffer).NeutralShift = 4;
  9974  00B316  EE20 F004          	lfsr	2,4
  9975  00B31A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9976  00B31C  26D9               	addwf	fsr2l,f,c
  9977  00B31E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9978  00B320  22DA               	addwfc	fsr2h,f,c
  9979  00B322  0E04               	movlw	4
  9980  00B324  6EDF               	movwf	indf2,c
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;i2c.c: 653: (*buffer).Offset = 0;
  9984  00B326  EE20 F005          	lfsr	2,5
  9985  00B32A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9986  00B32C  26D9               	addwf	fsr2l,f,c
  9987  00B32E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9988  00B330  22DA               	addwfc	fsr2h,f,c
  9989  00B332  0E00               	movlw	0
  9990  00B334  6EDE               	movwf	postinc2,c
  9991  00B336  0E00               	movlw	0
  9992  00B338  6EDD               	movwf	postdec2,c
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;i2c.c: 654: (*buffer).Multiplier = 11;
  9996  00B33A  EE20 F007          	lfsr	2,7
  9997  00B33E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9998  00B340  26D9               	addwf	fsr2l,f,c
  9999  00B342  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10000  00B344  22DA               	addwfc	fsr2h,f,c
 10001  00B346  0E0B               	movlw	11
 10002  00B348  6EDE               	movwf	postinc2,c
 10003  00B34A  0E00               	movlw	0
 10004  00B34C  6EDD               	movwf	postdec2,c
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;i2c.c: 655: (*buffer).Shift = 4;
 10008  00B34E  EE20 F009          	lfsr	2,9
 10009  00B352  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10010  00B354  26D9               	addwf	fsr2l,f,c
 10011  00B356  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10012  00B358  22DA               	addwfc	fsr2h,f,c
 10013  00B35A  0E04               	movlw	4
 10014  00B35C  6EDF               	movwf	indf2,c
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;i2c.c: 656: (*buffer).AutoCalibration = 0;
 10018  00B35E  EE20 F00A          	lfsr	2,10
 10019  00B362  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10020  00B364  26D9               	addwf	fsr2l,f,c
 10021  00B366  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10022  00B368  22DA               	addwfc	fsr2h,f,c
 10023  00B36A  0E00               	movlw	0
 10024  00B36C  6EDE               	movwf	postinc2,c
 10025  00B36E  0E00               	movlw	0
 10026  00B370  6EDD               	movwf	postdec2,c
 10027                           
 10028                           ;i2c.c: 657: break;
 10029  00B372  0012               	return	
 10030  00B374                     
 10031                           ; BSR set to: 0
 10032                           ;i2c.c: 659: (*buffer).NeutralOffset = 0;
 10033                           
 10034                           ; BSR set to: 0
 10035  00B374  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10036  00B378  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10037  00B37C  0E00               	movlw	0
 10038  00B37E  6EDE               	movwf	postinc2,c
 10039  00B380  0E00               	movlw	0
 10040  00B382  6EDD               	movwf	postdec2,c
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;i2c.c: 660: (*buffer).NeutralMultiplier = 17;
 10044  00B384  EE20 F002          	lfsr	2,2
 10045  00B388  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10046  00B38A  26D9               	addwf	fsr2l,f,c
 10047  00B38C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10048  00B38E  22DA               	addwfc	fsr2h,f,c
 10049  00B390  0E11               	movlw	17
 10050  00B392  6EDE               	movwf	postinc2,c
 10051  00B394  0E00               	movlw	0
 10052  00B396  6EDD               	movwf	postdec2,c
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;i2c.c: 661: (*buffer).NeutralShift = 5;
 10056  00B398  EE20 F004          	lfsr	2,4
 10057  00B39C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10058  00B39E  26D9               	addwf	fsr2l,f,c
 10059  00B3A0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10060  00B3A2  22DA               	addwfc	fsr2h,f,c
 10061  00B3A4  0E05               	movlw	5
 10062  00B3A6  6EDF               	movwf	indf2,c
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;i2c.c: 662: (*buffer).Offset = 0;
 10066  00B3A8  EE20 F005          	lfsr	2,5
 10067  00B3AC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10068  00B3AE  26D9               	addwf	fsr2l,f,c
 10069  00B3B0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10070  00B3B2  22DA               	addwfc	fsr2h,f,c
 10071  00B3B4  0E00               	movlw	0
 10072  00B3B6  6EDE               	movwf	postinc2,c
 10073  00B3B8  0E00               	movlw	0
 10074  00B3BA  6EDD               	movwf	postdec2,c
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;i2c.c: 663: (*buffer).Multiplier = 17;
 10078  00B3BC  EE20 F007          	lfsr	2,7
 10079  00B3C0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10080  00B3C2  26D9               	addwf	fsr2l,f,c
 10081  00B3C4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10082  00B3C6  22DA               	addwfc	fsr2h,f,c
 10083  00B3C8  0E11               	movlw	17
 10084  00B3CA  6EDE               	movwf	postinc2,c
 10085  00B3CC  0E00               	movlw	0
 10086  00B3CE  6EDD               	movwf	postdec2,c
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;i2c.c: 664: (*buffer).Shift = 5;
 10090  00B3D0  EE20 F009          	lfsr	2,9
 10091  00B3D4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10092  00B3D6  26D9               	addwf	fsr2l,f,c
 10093  00B3D8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10094  00B3DA  22DA               	addwfc	fsr2h,f,c
 10095  00B3DC  0E05               	movlw	5
 10096  00B3DE  6EDF               	movwf	indf2,c
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;i2c.c: 665: (*buffer).AutoCalibration = 0;
 10100  00B3E0  EE20 F00A          	lfsr	2,10
 10101  00B3E4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10102  00B3E6  26D9               	addwf	fsr2l,f,c
 10103  00B3E8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10104  00B3EA  22DA               	addwfc	fsr2h,f,c
 10105  00B3EC  0E00               	movlw	0
 10106  00B3EE  6EDE               	movwf	postinc2,c
 10107  00B3F0  0E00               	movlw	0
 10108  00B3F2  6EDD               	movwf	postdec2,c
 10109                           
 10110                           ;i2c.c: 666: break;
 10111  00B3F4  0012               	return	
 10112  00B3F6                     
 10113                           ; BSR set to: 0
 10114                           ;i2c.c: 668: (*buffer).NeutralOffset = 0;
 10115                           
 10116                           ; BSR set to: 0
 10117  00B3F6  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10118  00B3FA  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10119  00B3FE  0E00               	movlw	0
 10120  00B400  6EDE               	movwf	postinc2,c
 10121  00B402  0E00               	movlw	0
 10122  00B404  6EDD               	movwf	postdec2,c
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;i2c.c: 669: (*buffer).NeutralMultiplier = 5851;
 10126  00B406  EE20 F002          	lfsr	2,2
 10127  00B40A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10128  00B40C  26D9               	addwf	fsr2l,f,c
 10129  00B40E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10130  00B410  22DA               	addwfc	fsr2h,f,c
 10131  00B412  0EDB               	movlw	219
 10132  00B414  6EDE               	movwf	postinc2,c
 10133  00B416  0E16               	movlw	22
 10134  00B418  6EDD               	movwf	postdec2,c
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;i2c.c: 670: (*buffer).NeutralShift = 15;
 10138  00B41A  EE20 F004          	lfsr	2,4
 10139  00B41E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10140  00B420  26D9               	addwf	fsr2l,f,c
 10141  00B422  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10142  00B424  22DA               	addwfc	fsr2h,f,c
 10143  00B426  0E0F               	movlw	15
 10144  00B428  6EDF               	movwf	indf2,c
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;i2c.c: 671: (*buffer).Offset = 0;
 10148  00B42A  EE20 F005          	lfsr	2,5
 10149  00B42E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10150  00B430  26D9               	addwf	fsr2l,f,c
 10151  00B432  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10152  00B434  22DA               	addwfc	fsr2h,f,c
 10153  00B436  0E00               	movlw	0
 10154  00B438  6EDE               	movwf	postinc2,c
 10155  00B43A  0E00               	movlw	0
 10156  00B43C  6EDD               	movwf	postdec2,c
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;i2c.c: 672: (*buffer).Multiplier = 5851;
 10160  00B43E  EE20 F007          	lfsr	2,7
 10161  00B442  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10162  00B444  26D9               	addwf	fsr2l,f,c
 10163  00B446  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10164  00B448  22DA               	addwfc	fsr2h,f,c
 10165  00B44A  0EDB               	movlw	219
 10166  00B44C  6EDE               	movwf	postinc2,c
 10167  00B44E  0E16               	movlw	22
 10168  00B450  6EDD               	movwf	postdec2,c
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;i2c.c: 673: (*buffer).Shift = 15;
 10172  00B452  EE20 F009          	lfsr	2,9
 10173  00B456  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10174  00B458  26D9               	addwf	fsr2l,f,c
 10175  00B45A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10176  00B45C  22DA               	addwfc	fsr2h,f,c
 10177  00B45E  0E0F               	movlw	15
 10178  00B460  6EDF               	movwf	indf2,c
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;i2c.c: 674: (*buffer).AutoCalibration = 0;
 10182  00B462  EE20 F00A          	lfsr	2,10
 10183  00B466  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10184  00B468  26D9               	addwf	fsr2l,f,c
 10185  00B46A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10186  00B46C  22DA               	addwfc	fsr2h,f,c
 10187  00B46E  0E00               	movlw	0
 10188  00B470  6EDE               	movwf	postinc2,c
 10189  00B472  0E00               	movlw	0
 10190  00B474  6EDD               	movwf	postdec2,c
 10191                           
 10192                           ;i2c.c: 675: break;
 10193  00B476  0012               	return	
 10194  00B478                     
 10195                           ; BSR set to: 0
 10196                           ;i2c.c: 677: (*buffer).NeutralOffset = 0;
 10197                           
 10198                           ; BSR set to: 0
 10199  00B478  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10200  00B47C  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10201  00B480  0E00               	movlw	0
 10202  00B482  6EDE               	movwf	postinc2,c
 10203  00B484  0E00               	movlw	0
 10204  00B486  6EDD               	movwf	postdec2,c
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;i2c.c: 678: (*buffer).NeutralMultiplier = 5851;
 10208  00B488  EE20 F002          	lfsr	2,2
 10209  00B48C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10210  00B48E  26D9               	addwf	fsr2l,f,c
 10211  00B490  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10212  00B492  22DA               	addwfc	fsr2h,f,c
 10213  00B494  0EDB               	movlw	219
 10214  00B496  6EDE               	movwf	postinc2,c
 10215  00B498  0E16               	movlw	22
 10216  00B49A  6EDD               	movwf	postdec2,c
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;i2c.c: 679: (*buffer).NeutralShift = 15;
 10220  00B49C  EE20 F004          	lfsr	2,4
 10221  00B4A0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10222  00B4A2  26D9               	addwf	fsr2l,f,c
 10223  00B4A4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10224  00B4A6  22DA               	addwfc	fsr2h,f,c
 10225  00B4A8  0E0F               	movlw	15
 10226  00B4AA  6EDF               	movwf	indf2,c
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;i2c.c: 680: (*buffer).Offset = 0;
 10230  00B4AC  EE20 F005          	lfsr	2,5
 10231  00B4B0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10232  00B4B2  26D9               	addwf	fsr2l,f,c
 10233  00B4B4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10234  00B4B6  22DA               	addwfc	fsr2h,f,c
 10235  00B4B8  0E00               	movlw	0
 10236  00B4BA  6EDE               	movwf	postinc2,c
 10237  00B4BC  0E00               	movlw	0
 10238  00B4BE  6EDD               	movwf	postdec2,c
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;i2c.c: 681: (*buffer).Multiplier = 5851;
 10242  00B4C0  EE20 F007          	lfsr	2,7
 10243  00B4C4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10244  00B4C6  26D9               	addwf	fsr2l,f,c
 10245  00B4C8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10246  00B4CA  22DA               	addwfc	fsr2h,f,c
 10247  00B4CC  0EDB               	movlw	219
 10248  00B4CE  6EDE               	movwf	postinc2,c
 10249  00B4D0  0E16               	movlw	22
 10250  00B4D2  6EDD               	movwf	postdec2,c
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;i2c.c: 682: (*buffer).Shift = 15;
 10254  00B4D4  EE20 F009          	lfsr	2,9
 10255  00B4D8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10256  00B4DA  26D9               	addwf	fsr2l,f,c
 10257  00B4DC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10258  00B4DE  22DA               	addwfc	fsr2h,f,c
 10259  00B4E0  0E0F               	movlw	15
 10260  00B4E2  6EDF               	movwf	indf2,c
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;i2c.c: 683: (*buffer).AutoCalibration = 0;
 10264  00B4E4  EE20 F00A          	lfsr	2,10
 10265  00B4E8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10266  00B4EA  26D9               	addwf	fsr2l,f,c
 10267  00B4EC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10268  00B4EE  22DA               	addwfc	fsr2h,f,c
 10269  00B4F0  0E00               	movlw	0
 10270  00B4F2  6EDE               	movwf	postinc2,c
 10271  00B4F4  0E00               	movlw	0
 10272  00B4F6  6EDD               	movwf	postdec2,c
 10273                           
 10274                           ;i2c.c: 684: break;
 10275  00B4F8  0012               	return	
 10276  00B4FA                     
 10277                           ; BSR set to: 0
 10278                           ;i2c.c: 686: (*buffer).NeutralOffset = -13769;
 10279                           
 10280                           ; BSR set to: 0
 10281  00B4FA  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10282  00B4FE  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10283  00B502  0E37               	movlw	55
 10284  00B504  6EDE               	movwf	postinc2,c
 10285  00B506  0ECA               	movlw	202
 10286  00B508  6EDD               	movwf	postdec2,c
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;i2c.c: 687: (*buffer).NeutralMultiplier = -11479;
 10290  00B50A  EE20 F002          	lfsr	2,2
 10291  00B50E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10292  00B510  26D9               	addwf	fsr2l,f,c
 10293  00B512  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10294  00B514  22DA               	addwfc	fsr2h,f,c
 10295  00B516  0E29               	movlw	41
 10296  00B518  6EDE               	movwf	postinc2,c
 10297  00B51A  0ED3               	movlw	211
 10298  00B51C  6EDD               	movwf	postdec2,c
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;i2c.c: 688: (*buffer).NeutralShift = 13;
 10302  00B51E  EE20 F004          	lfsr	2,4
 10303  00B522  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10304  00B524  26D9               	addwf	fsr2l,f,c
 10305  00B526  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10306  00B528  22DA               	addwfc	fsr2h,f,c
 10307  00B52A  0E0D               	movlw	13
 10308  00B52C  6EDF               	movwf	indf2,c
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;i2c.c: 689: (*buffer).Offset = -13769;
 10312  00B52E  EE20 F005          	lfsr	2,5
 10313  00B532  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10314  00B534  26D9               	addwf	fsr2l,f,c
 10315  00B536  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10316  00B538  22DA               	addwfc	fsr2h,f,c
 10317  00B53A  0E37               	movlw	55
 10318  00B53C  6EDE               	movwf	postinc2,c
 10319  00B53E  0ECA               	movlw	202
 10320  00B540  6EDD               	movwf	postdec2,c
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;i2c.c: 690: (*buffer).Multiplier = -11479;
 10324  00B542  EE20 F007          	lfsr	2,7
 10325  00B546  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10326  00B548  26D9               	addwf	fsr2l,f,c
 10327  00B54A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10328  00B54C  22DA               	addwfc	fsr2h,f,c
 10329  00B54E  0E29               	movlw	41
 10330  00B550  6EDE               	movwf	postinc2,c
 10331  00B552  0ED3               	movlw	211
 10332  00B554  6EDD               	movwf	postdec2,c
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;i2c.c: 691: (*buffer).Shift = 13;
 10336  00B556  EE20 F009          	lfsr	2,9
 10337  00B55A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10338  00B55C  26D9               	addwf	fsr2l,f,c
 10339  00B55E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10340  00B560  22DA               	addwfc	fsr2h,f,c
 10341  00B562  0E0D               	movlw	13
 10342  00B564  6EDF               	movwf	indf2,c
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;i2c.c: 692: (*buffer).AutoCalibration = 0;
 10346  00B566  EE20 F00A          	lfsr	2,10
 10347  00B56A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10348  00B56C  26D9               	addwf	fsr2l,f,c
 10349  00B56E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10350  00B570  22DA               	addwfc	fsr2h,f,c
 10351  00B572  0E00               	movlw	0
 10352  00B574  6EDE               	movwf	postinc2,c
 10353  00B576  0E00               	movlw	0
 10354  00B578  6EDD               	movwf	postdec2,c
 10355                           
 10356                           ;i2c.c: 693: break;
 10357  00B57A  0012               	return	
 10358  00B57C                     
 10359                           ; BSR set to: 0
 10360                           ;i2c.c: 695: (*buffer).NeutralOffset = -13769;
 10361                           
 10362                           ; BSR set to: 0
 10363  00B57C  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10364  00B580  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10365  00B584  0E37               	movlw	55
 10366  00B586  6EDE               	movwf	postinc2,c
 10367  00B588  0ECA               	movlw	202
 10368  00B58A  6EDD               	movwf	postdec2,c
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;i2c.c: 696: (*buffer).NeutralMultiplier = -11479;
 10372  00B58C  EE20 F002          	lfsr	2,2
 10373  00B590  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10374  00B592  26D9               	addwf	fsr2l,f,c
 10375  00B594  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10376  00B596  22DA               	addwfc	fsr2h,f,c
 10377  00B598  0E29               	movlw	41
 10378  00B59A  6EDE               	movwf	postinc2,c
 10379  00B59C  0ED3               	movlw	211
 10380  00B59E  6EDD               	movwf	postdec2,c
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;i2c.c: 697: (*buffer).NeutralShift = 13;
 10384  00B5A0  EE20 F004          	lfsr	2,4
 10385  00B5A4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10386  00B5A6  26D9               	addwf	fsr2l,f,c
 10387  00B5A8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10388  00B5AA  22DA               	addwfc	fsr2h,f,c
 10389  00B5AC  0E0D               	movlw	13
 10390  00B5AE  6EDF               	movwf	indf2,c
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;i2c.c: 698: (*buffer).Offset = -13769;
 10394  00B5B0  EE20 F005          	lfsr	2,5
 10395  00B5B4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10396  00B5B6  26D9               	addwf	fsr2l,f,c
 10397  00B5B8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10398  00B5BA  22DA               	addwfc	fsr2h,f,c
 10399  00B5BC  0E37               	movlw	55
 10400  00B5BE  6EDE               	movwf	postinc2,c
 10401  00B5C0  0ECA               	movlw	202
 10402  00B5C2  6EDD               	movwf	postdec2,c
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;i2c.c: 699: (*buffer).Multiplier = -11479;
 10406  00B5C4  EE20 F007          	lfsr	2,7
 10407  00B5C8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10408  00B5CA  26D9               	addwf	fsr2l,f,c
 10409  00B5CC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10410  00B5CE  22DA               	addwfc	fsr2h,f,c
 10411  00B5D0  0E29               	movlw	41
 10412  00B5D2  6EDE               	movwf	postinc2,c
 10413  00B5D4  0ED3               	movlw	211
 10414  00B5D6  6EDD               	movwf	postdec2,c
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;i2c.c: 700: (*buffer).Shift = 13;
 10418  00B5D8  EE20 F009          	lfsr	2,9
 10419  00B5DC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10420  00B5DE  26D9               	addwf	fsr2l,f,c
 10421  00B5E0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10422  00B5E2  22DA               	addwfc	fsr2h,f,c
 10423  00B5E4  0E0D               	movlw	13
 10424  00B5E6  6EDF               	movwf	indf2,c
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;i2c.c: 701: (*buffer).AutoCalibration = 0;
 10428  00B5E8  EE20 F00A          	lfsr	2,10
 10429  00B5EC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10430  00B5EE  26D9               	addwf	fsr2l,f,c
 10431  00B5F0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10432  00B5F2  22DA               	addwfc	fsr2h,f,c
 10433  00B5F4  0E00               	movlw	0
 10434  00B5F6  6EDE               	movwf	postinc2,c
 10435  00B5F8  0E00               	movlw	0
 10436  00B5FA  6EDD               	movwf	postdec2,c
 10437                           
 10438                           ;i2c.c: 702: break;
 10439  00B5FC  0012               	return	
 10440  00B5FE                     
 10441                           ; BSR set to: 0
 10442                           ;i2c.c: 704: (*buffer).NeutralOffset = -13769;
 10443                           
 10444                           ; BSR set to: 0
 10445  00B5FE  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10446  00B602  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10447  00B606  0E37               	movlw	55
 10448  00B608  6EDE               	movwf	postinc2,c
 10449  00B60A  0ECA               	movlw	202
 10450  00B60C  6EDD               	movwf	postdec2,c
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;i2c.c: 705: (*buffer).NeutralMultiplier = -11479;
 10454  00B60E  EE20 F002          	lfsr	2,2
 10455  00B612  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10456  00B614  26D9               	addwf	fsr2l,f,c
 10457  00B616  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10458  00B618  22DA               	addwfc	fsr2h,f,c
 10459  00B61A  0E29               	movlw	41
 10460  00B61C  6EDE               	movwf	postinc2,c
 10461  00B61E  0ED3               	movlw	211
 10462  00B620  6EDD               	movwf	postdec2,c
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;i2c.c: 706: (*buffer).NeutralShift = 13;
 10466  00B622  EE20 F004          	lfsr	2,4
 10467  00B626  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10468  00B628  26D9               	addwf	fsr2l,f,c
 10469  00B62A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10470  00B62C  22DA               	addwfc	fsr2h,f,c
 10471  00B62E  0E0D               	movlw	13
 10472  00B630  6EDF               	movwf	indf2,c
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;i2c.c: 707: (*buffer).Offset = -13769;
 10476  00B632  EE20 F005          	lfsr	2,5
 10477  00B636  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10478  00B638  26D9               	addwf	fsr2l,f,c
 10479  00B63A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10480  00B63C  22DA               	addwfc	fsr2h,f,c
 10481  00B63E  0E37               	movlw	55
 10482  00B640  6EDE               	movwf	postinc2,c
 10483  00B642  0ECA               	movlw	202
 10484  00B644  6EDD               	movwf	postdec2,c
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;i2c.c: 708: (*buffer).Multiplier = -11479;
 10488  00B646  EE20 F007          	lfsr	2,7
 10489  00B64A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10490  00B64C  26D9               	addwf	fsr2l,f,c
 10491  00B64E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10492  00B650  22DA               	addwfc	fsr2h,f,c
 10493  00B652  0E29               	movlw	41
 10494  00B654  6EDE               	movwf	postinc2,c
 10495  00B656  0ED3               	movlw	211
 10496  00B658  6EDD               	movwf	postdec2,c
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;i2c.c: 709: (*buffer).Shift = 13;
 10500  00B65A  EE20 F009          	lfsr	2,9
 10501  00B65E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10502  00B660  26D9               	addwf	fsr2l,f,c
 10503  00B662  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10504  00B664  22DA               	addwfc	fsr2h,f,c
 10505  00B666  0E0D               	movlw	13
 10506  00B668  6EDF               	movwf	indf2,c
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;i2c.c: 710: (*buffer).AutoCalibration = 0;
 10510  00B66A  EE20 F00A          	lfsr	2,10
 10511  00B66E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10512  00B670  26D9               	addwf	fsr2l,f,c
 10513  00B672  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10514  00B674  22DA               	addwfc	fsr2h,f,c
 10515  00B676  0E00               	movlw	0
 10516  00B678  6EDE               	movwf	postinc2,c
 10517  00B67A  0E00               	movlw	0
 10518  00B67C  6EDD               	movwf	postdec2,c
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;i2c.c: 712: }
 10522                           
 10523                           ;i2c.c: 711: break;
 10524  00B67E  0012               	return	
 10525  00B680                     l1640:
 10526                           
 10527                           ; BSR set to: 0
 10528  00B680  0100               	movlb	0	; () banked
 10529  00B682  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 10530                           
 10531                           ; Switch size 1, requested type "space"
 10532                           ; Number of cases is 7, Range of values is 0 to 6
 10533                           ; switch strategies available:
 10534                           ; Name         Instructions Cycles
 10535                           ; simple_byte           22    12 (average)
 10536                           ;	Chosen strategy is simple_byte
 10537  00B684  0A00               	xorlw	0	; case 0
 10538  00B686  B4D8               	btfsc	status,2,c
 10539  00B688  D633               	goto	l1641
 10540  00B68A  0A01               	xorlw	1	; case 1
 10541  00B68C  B4D8               	btfsc	status,2,c
 10542  00B68E  D672               	goto	l1643
 10543  00B690  0A03               	xorlw	3	; case 2
 10544  00B692  B4D8               	btfsc	status,2,c
 10545  00B694  D6B0               	goto	l1644
 10546  00B696  0A01               	xorlw	1	; case 3
 10547  00B698  B4D8               	btfsc	status,2,c
 10548  00B69A  D6EE               	goto	l1645
 10549  00B69C  0A07               	xorlw	7	; case 4
 10550  00B69E  B4D8               	btfsc	status,2,c
 10551  00B6A0  D72C               	goto	l1646
 10552  00B6A2  0A01               	xorlw	1	; case 5
 10553  00B6A4  B4D8               	btfsc	status,2,c
 10554  00B6A6  D76A               	goto	l1647
 10555  00B6A8  0A03               	xorlw	3	; case 6
 10556  00B6AA  A4D8               	btfss	status,2,c
 10557  00B6AC  0012               	return	
 10558  00B6AE  D7A7               	goto	l1648
 10559  00B6B0                     __end_of__i2c_eeprom_load_default_calibration:
 10560                           	opt stack 0
 10561                           tblptru	equ	0xFF8
 10562                           tblptrh	equ	0xFF7
 10563                           tblptrl	equ	0xFF6
 10564                           tablat	equ	0xFF5
 10565                           prodh	equ	0xFF4
 10566                           prodl	equ	0xFF3
 10567                           intcon3	equ	0xFF0
 10568                           postinc0	equ	0xFEE
 10569                           wreg	equ	0xFE8
 10570                           postdec1	equ	0xFE5
 10571                           plusw1	equ	0xFE3
 10572                           fsr1h	equ	0xFE2
 10573                           fsr1l	equ	0xFE1
 10574                           indf2	equ	0xFDF
 10575                           postinc2	equ	0xFDE
 10576                           postdec2	equ	0xFDD
 10577                           plusw2	equ	0xFDB
 10578                           fsr2h	equ	0xFDA
 10579                           fsr2l	equ	0xFD9
 10580                           status	equ	0xFD8
 10581                           
 10582 ;; *************** function _flash_init *****************
 10583 ;; Defined at:
 10584 ;;		line 448 in file "flash.c"
 10585 ;; Parameters:    Size  Location     Type
 10586 ;;		None
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;		None
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  1    wreg      void 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10602 ;;Total ram usage:        0 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; Hardware stack levels required when called:   14
 10605 ;; This function calls:
 10606 ;;		__flash_set_page_size
 10607 ;; This function is called by:
 10608 ;;		_system_init
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text38
 10613  013140                     __ptext38:
 10614                           	opt stack 0
 10615  013140                     _flash_init:
 10616                           	opt stack 15
 10617                           
 10618                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;incstack = 0
 10622  013140  0E55               	movlw	85
 10623  013142  6EA7               	movwf	4007,c	;volsfr
 10624  013144  0EAA               	movlw	170
 10625  013146  6EA7               	movwf	4007,c	;volsfr
 10626  013148  010E               	movlb	14	; () banked
 10627  01314A  91BF               	bcf	191,0,b	;volatile
 10628                           
 10629                           ;flash.c: 452: RPINR21 = 23;
 10630  01314C  0E17               	movlw	23
 10631  01314E  6FFC               	movwf	252,b	;volatile
 10632                           
 10633                           ;flash.c: 453: RPOR21 = 10;
 10634  013150  0E0A               	movlw	10
 10635  013152  6FD5               	movwf	213,b	;volatile
 10636                           
 10637                           ;flash.c: 455: RPOR22 = 11;
 10638  013154  0E0B               	movlw	11
 10639  013156  6FD6               	movwf	214,b	;volatile
 10640                           
 10641                           ;flash.c: 456: RPINR22 = 22;
 10642  013158  0E16               	movlw	22
 10643  01315A  6FFD               	movwf	253,b	;volatile
 10644                           
 10645                           ;flash.c: 457: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 10646  01315C  0E55               	movlw	85
 10647  01315E  6EA7               	movwf	4007,c	;volsfr
 10648  013160  0EAA               	movlw	170
 10649  013162  6EA7               	movwf	4007,c	;volsfr
 10650                           
 10651                           ; BSR set to: 14
 10652  013164  81BF               	bsf	191,0,b	;volatile
 10653                           
 10654                           ; BSR set to: 14
 10655                           ;flash.c: 460: SSP2STATbits.SMP = 1;
 10656  013166  8E73               	bsf	3955,7,c	;volatile
 10657                           
 10658                           ; BSR set to: 14
 10659                           ;flash.c: 461: SSP2STATbits.CKE = 1;
 10660  013168  8C73               	bsf	3955,6,c	;volatile
 10661                           
 10662                           ; BSR set to: 14
 10663                           ;flash.c: 462: SSP2CON1bits.CKP = 0;
 10664  01316A  9872               	bcf	3954,4,c	;volatile
 10665                           
 10666                           ; BSR set to: 14
 10667                           ;flash.c: 463: SSP2CON1bits.SSPM =0b0000;
 10668  01316C  9072               	bcf	3954,0,c	;volatile
 10669  01316E  9272               	bcf	3954,1,c	;volatile
 10670  013170  9472               	bcf	3954,2,c	;volatile
 10671  013172  9672               	bcf	3954,3,c	;volatile
 10672                           
 10673                           ; BSR set to: 14
 10674                           ;flash.c: 464: SSP2CON1bits.SSPEN = 1;
 10675  013174  8A72               	bsf	3954,5,c	;volatile
 10676                           
 10677                           ;flash.c: 467: power_state = FLASH_POWER_STATE_NORMAL;
 10678  013176  0E00               	movlw	0
 10679  013178  0100               	movlb	0	; () banked
 10680  01317A  6FDF               	movwf	_power_state& (0+255),b
 10681                           
 10682                           ; BSR set to: 0
 10683                           ;flash.c: 470: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 10684  01317C  0E00               	movlw	0
 10685  01317E  ECEB  F090         	call	__flash_set_page_size
 10686  013182  0012               	return		;funcret
 10687  013184                     __end_of_flash_init:
 10688                           	opt stack 0
 10689                           tblptru	equ	0xFF8
 10690                           tblptrh	equ	0xFF7
 10691                           tblptrl	equ	0xFF6
 10692                           tablat	equ	0xFF5
 10693                           prodh	equ	0xFF4
 10694                           prodl	equ	0xFF3
 10695                           intcon3	equ	0xFF0
 10696                           postinc0	equ	0xFEE
 10697                           wreg	equ	0xFE8
 10698                           postdec1	equ	0xFE5
 10699                           plusw1	equ	0xFE3
 10700                           fsr1h	equ	0xFE2
 10701                           fsr1l	equ	0xFE1
 10702                           indf2	equ	0xFDF
 10703                           postinc2	equ	0xFDE
 10704                           postdec2	equ	0xFDD
 10705                           plusw2	equ	0xFDB
 10706                           fsr2h	equ	0xFDA
 10707                           fsr2l	equ	0xFD9
 10708                           status	equ	0xFD8
 10709                           
 10710 ;; *************** function __flash_set_page_size *****************
 10711 ;; Defined at:
 10712 ;;		line 260 in file "flash.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;  size            1    wreg     enum E6850
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;  size            1   23[BANK0 ] enum E6850
 10717 ;;  command         4   19[BANK0 ] unsigned char [4]
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1    wreg      void 
 10720 ;; Registers used:
 10721 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10728 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;Total ram usage:        5 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:   13
 10734 ;; This function calls:
 10735 ;;		__flash_spi_tx
 10736 ;;		_flash_is_busy
 10737 ;;		_memcpy
 10738 ;; This function is called by:
 10739 ;;		_flash_init
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           	psect	text39
 10744  0121D6                     __ptext39:
 10745                           	opt stack 0
 10746  0121D6                     __flash_set_page_size:
 10747                           	opt stack 15
 10748                           
 10749                           ;incstack = 0
 10750                           ;__flash_set_page_size@size stored from wreg
 10751  0121D6  0100               	movlb	0	; () banked
 10752  0121D8  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 10753  0121DA                     
 10754                           ;flash.c: 262: uint8_t command[4];;flash.c: 265: while(flash_is_busy());
 10755  0121DA  ECAC  F09C         	call	_flash_is_busy	;wreg free
 10756  0121DE  0900               	iorlw	0
 10757  0121E0  A4D8               	btfss	status,2,c
 10758  0121E2  D7FB               	goto	l20073
 10759                           
 10760                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
 10761  0121E4  0100               	movlb	0	; () banked
 10762  0121E6  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 10763  0121E8  A4D8               	btfss	status,2,c
 10764  0121EA  D00E               	goto	l2777
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
 10768  0121EC  0E73               	movlw	low __flash_set_page_size@command
 10769  0121EE  6F60               	movwf	memcpy@d1& (0+255),b
 10770  0121F0  0E00               	movlw	high __flash_set_page_size@command
 10771  0121F2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10772  0121F4  0E2E               	movlw	low _flash_command_pagesize_512
 10773  0121F6  6F62               	movwf	memcpy@s1& (0+255),b
 10774  0121F8  0EA4               	movlw	high _flash_command_pagesize_512
 10775  0121FA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10776  0121FC  0E00               	movlw	0
 10777  0121FE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10778  012200  0E04               	movlw	4
 10779  012202  6F64               	movwf	memcpy@n& (0+255),b
 10780  012204  EC86  F093         	call	_memcpy	;wreg free
 10781  012208                     l2777:
 10782                           
 10783                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
 10784  012208  0100               	movlb	0	; () banked
 10785  01220A  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 10786  01220C  A4D8               	btfss	status,2,c
 10787  01220E  D00E               	goto	l2778
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
 10791  012210  0E73               	movlw	low __flash_set_page_size@command
 10792  012212  6F60               	movwf	memcpy@d1& (0+255),b
 10793  012214  0E00               	movlw	high __flash_set_page_size@command
 10794  012216  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10795  012218  0E2A               	movlw	low _flash_command_pagesize_528
 10796  01221A  6F62               	movwf	memcpy@s1& (0+255),b
 10797  01221C  0EA4               	movlw	high _flash_command_pagesize_528
 10798  01221E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10799  012220  0E00               	movlw	0
 10800  012222  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10801  012224  0E04               	movlw	4
 10802  012226  6F64               	movwf	memcpy@n& (0+255),b
 10803  012228  EC86  F093         	call	_memcpy	;wreg free
 10804  01222C                     l2778:
 10805                           
 10806                           ;flash.c: 274: _flash_spi_tx(command, 4);
 10807  01222C  0E73               	movlw	low __flash_set_page_size@command
 10808  01222E  0100               	movlb	0	; () banked
 10809  012230  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 10810  012232  0E00               	movlw	high __flash_set_page_size@command
 10811  012234  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 10812  012236  0E00               	movlw	0
 10813  012238  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 10814  01223A  0E04               	movlw	4
 10815  01223C  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 10816  01223E  EC50  F095         	call	__flash_spi_tx	;wreg free
 10817  012242  0012               	return		;funcret
 10818  012244                     __end_of__flash_set_page_size:
 10819                           	opt stack 0
 10820                           tblptru	equ	0xFF8
 10821                           tblptrh	equ	0xFF7
 10822                           tblptrl	equ	0xFF6
 10823                           tablat	equ	0xFF5
 10824                           prodh	equ	0xFF4
 10825                           prodl	equ	0xFF3
 10826                           intcon3	equ	0xFF0
 10827                           postinc0	equ	0xFEE
 10828                           wreg	equ	0xFE8
 10829                           postdec1	equ	0xFE5
 10830                           plusw1	equ	0xFE3
 10831                           fsr1h	equ	0xFE2
 10832                           fsr1l	equ	0xFE1
 10833                           indf2	equ	0xFDF
 10834                           postinc2	equ	0xFDE
 10835                           postdec2	equ	0xFDD
 10836                           plusw2	equ	0xFDB
 10837                           fsr2h	equ	0xFDA
 10838                           fsr2l	equ	0xFD9
 10839                           status	equ	0xFD8
 10840                           
 10841 ;; *************** function _buck_init *****************
 10842 ;; Defined at:
 10843 ;;		line 543 in file "buck.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;		None
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10861 ;;Total ram usage:        0 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:   11
 10864 ;; This function calls:
 10865 ;;		__buck_pin_init
 10866 ;;		__buck_timer2_init
 10867 ;; This function is called by:
 10868 ;;		_system_init
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text40
 10873  013DFA                     __ptext40:
 10874                           	opt stack 0
 10875  013DFA                     _buck_init:
 10876                           	opt stack 18
 10877                           
 10878                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 10879                           
 10880                           ;incstack = 0
 10881  013DFA  0E00               	movlw	0
 10882  013DFC  6E1C               	movwf	_buck_status,c
 10883                           
 10884                           ;buck.c: 546: _buck_timer2_init();
 10885  013DFE  EC17  F09E         	call	__buck_timer2_init	;wreg free
 10886                           
 10887                           ;buck.c: 547: _buck_pin_init();
 10888  013E02  ECD3  F09A         	call	__buck_pin_init	;wreg free
 10889  013E06  0012               	return		;funcret
 10890  013E08                     __end_of_buck_init:
 10891                           	opt stack 0
 10892                           tblptru	equ	0xFF8
 10893                           tblptrh	equ	0xFF7
 10894                           tblptrl	equ	0xFF6
 10895                           tablat	equ	0xFF5
 10896                           prodh	equ	0xFF4
 10897                           prodl	equ	0xFF3
 10898                           intcon3	equ	0xFF0
 10899                           postinc0	equ	0xFEE
 10900                           wreg	equ	0xFE8
 10901                           postdec1	equ	0xFE5
 10902                           plusw1	equ	0xFE3
 10903                           fsr1h	equ	0xFE2
 10904                           fsr1l	equ	0xFE1
 10905                           indf2	equ	0xFDF
 10906                           postinc2	equ	0xFDE
 10907                           postdec2	equ	0xFDD
 10908                           plusw2	equ	0xFDB
 10909                           fsr2h	equ	0xFDA
 10910                           fsr2l	equ	0xFD9
 10911                           status	equ	0xFD8
 10912                           
 10913 ;; *************** function __buck_timer2_init *****************
 10914 ;; Defined at:
 10915 ;;		line 64 in file "buck.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;		None
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;		None
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  1    wreg      void 
 10922 ;; Registers used:
 10923 ;;		None
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10933 ;;Total ram usage:        0 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:   10
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_buck_init
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           	psect	text41
 10944  013C2E                     __ptext41:
 10945                           	opt stack 0
 10946  013C2E                     __buck_timer2_init:
 10947                           	opt stack 18
 10948                           
 10949                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 10950                           
 10951                           ;incstack = 0
 10952  013C2E  010F               	movlb	15	; () banked
 10953  013C30  9152               	bcf	82,0,b	;volatile
 10954  013C32  9352               	bcf	82,1,b	;volatile
 10955  013C34  9552               	bcf	82,2,b	;volatile
 10956                           
 10957                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 10958  013C36  86CA               	bsf	4042,3,c	;volatile
 10959  013C38  88CA               	bsf	4042,4,c	;volatile
 10960  013C3A  8ACA               	bsf	4042,5,c	;volatile
 10961  013C3C  8CCA               	bsf	4042,6,c	;volatile
 10962                           
 10963                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 10964  013C3E  92CA               	bcf	4042,1,c	;volatile
 10965                           
 10966                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 10967  013C40  90CA               	bcf	4042,0,c	;volatile
 10968                           
 10969                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 10970  013C42  94CA               	bcf	4042,2,c	;volatile
 10971                           
 10972                           ; BSR set to: 15
 10973  013C44  0012               	return		;funcret
 10974  013C46                     __end_of__buck_timer2_init:
 10975                           	opt stack 0
 10976                           tblptru	equ	0xFF8
 10977                           tblptrh	equ	0xFF7
 10978                           tblptrl	equ	0xFF6
 10979                           tablat	equ	0xFF5
 10980                           prodh	equ	0xFF4
 10981                           prodl	equ	0xFF3
 10982                           intcon3	equ	0xFF0
 10983                           postinc0	equ	0xFEE
 10984                           wreg	equ	0xFE8
 10985                           postdec1	equ	0xFE5
 10986                           plusw1	equ	0xFE3
 10987                           fsr1h	equ	0xFE2
 10988                           fsr1l	equ	0xFE1
 10989                           indf2	equ	0xFDF
 10990                           postinc2	equ	0xFDE
 10991                           postdec2	equ	0xFDD
 10992                           plusw2	equ	0xFDB
 10993                           fsr2h	equ	0xFDA
 10994                           fsr2l	equ	0xFD9
 10995                           status	equ	0xFD8
 10996                           
 10997 ;; *************** function __buck_pin_init *****************
 10998 ;; Defined at:
 10999 ;;		line 41 in file "buck.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;		None
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;		None
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  1    wreg      void 
 11006 ;; Registers used:
 11007 ;;		wreg, status,2
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11017 ;;Total ram usage:        0 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:   10
 11020 ;; This function calls:
 11021 ;;		Nothing
 11022 ;; This function is called by:
 11023 ;;		_buck_init
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text42
 11028  0135A6                     __ptext42:
 11029                           	opt stack 0
 11030  0135A6                     __buck_pin_init:
 11031                           	opt stack 18
 11032                           
 11033                           ;buck.c: 44: LATBbits.LB1 = 0;
 11034                           
 11035                           ; BSR set to: 15
 11036                           ;incstack = 0
 11037  0135A6  928A               	bcf	3978,1,c	;volatile
 11038                           
 11039                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 11040  0135A8  9293               	bcf	3987,1,c	;volatile
 11041                           
 11042                           ;buck.c: 46: LATBbits.LB2 = 0;
 11043  0135AA  948A               	bcf	3978,2,c	;volatile
 11044                           
 11045                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 11046  0135AC  9493               	bcf	3987,2,c	;volatile
 11047                           
 11048                           ;buck.c: 48: LATBbits.LB3 = 0;
 11049  0135AE  968A               	bcf	3978,3,c	;volatile
 11050                           
 11051                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 11052  0135B0  9693               	bcf	3987,3,c	;volatile
 11053                           
 11054                           ;buck.c: 52: LATBbits.LATB2 = 0;
 11055  0135B2  948A               	bcf	3978,2,c	;volatile
 11056                           
 11057                           ;buck.c: 53: LATBbits.LATB1 = 0;
 11058  0135B4  928A               	bcf	3978,1,c	;volatile
 11059                           
 11060                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11061  0135B6  0E55               	movlw	85
 11062  0135B8  6EA7               	movwf	4007,c	;volsfr
 11063  0135BA  0EAA               	movlw	170
 11064  0135BC  6EA7               	movwf	4007,c	;volsfr
 11065  0135BE  010E               	movlb	14	; () banked
 11066  0135C0  91BF               	bcf	191,0,b	;volatile
 11067                           
 11068                           ;buck.c: 57: RPOR6 = 14;
 11069  0135C2  0E0E               	movlw	14
 11070  0135C4  6FC6               	movwf	198,b	;volatile
 11071                           
 11072                           ;buck.c: 58: RPOR5 = 15;
 11073  0135C6  0E0F               	movlw	15
 11074  0135C8  6FC5               	movwf	197,b	;volatile
 11075                           
 11076                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11077  0135CA  0E55               	movlw	85
 11078  0135CC  6EA7               	movwf	4007,c	;volsfr
 11079  0135CE  0EAA               	movlw	170
 11080  0135D0  6EA7               	movwf	4007,c	;volsfr
 11081                           
 11082                           ; BSR set to: 14
 11083  0135D2  81BF               	bsf	191,0,b	;volatile
 11084                           
 11085                           ; BSR set to: 14
 11086  0135D4  0012               	return		;funcret
 11087  0135D6                     __end_of__buck_pin_init:
 11088                           	opt stack 0
 11089                           tblptru	equ	0xFF8
 11090                           tblptrh	equ	0xFF7
 11091                           tblptrl	equ	0xFF6
 11092                           tablat	equ	0xFF5
 11093                           prodh	equ	0xFF4
 11094                           prodl	equ	0xFF3
 11095                           intcon3	equ	0xFF0
 11096                           postinc0	equ	0xFEE
 11097                           wreg	equ	0xFE8
 11098                           postdec1	equ	0xFE5
 11099                           plusw1	equ	0xFE3
 11100                           fsr1h	equ	0xFE2
 11101                           fsr1l	equ	0xFE1
 11102                           indf2	equ	0xFDF
 11103                           postinc2	equ	0xFDE
 11104                           postdec2	equ	0xFDD
 11105                           plusw2	equ	0xFDB
 11106                           fsr2h	equ	0xFDA
 11107                           fsr2l	equ	0xFD9
 11108                           status	equ	0xFD8
 11109                           
 11110 ;; *************** function _adc_init *****************
 11111 ;; Defined at:
 11112 ;;		line 9 in file "adc.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;		None
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;		None
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  1    wreg      void 
 11119 ;; Registers used:
 11120 ;;		wreg, status,2
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11130 ;;Total ram usage:        0 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:   10
 11133 ;; This function calls:
 11134 ;;		Nothing
 11135 ;; This function is called by:
 11136 ;;		_system_init
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text43
 11141  013B74                     __ptext43:
 11142                           	opt stack 0
 11143  013B74                     _adc_init:
 11144                           	opt stack 19
 11145                           
 11146                           ;adc.c: 11: ADCON0bits.VCFG1 = 0;
 11147                           
 11148                           ; BSR set to: 14
 11149                           ;incstack = 0
 11150  013B74  9EC2               	bcf	4034,7,c	;volatile
 11151                           
 11152                           ;adc.c: 12: ADCON0bits.VCFG0 = 1;
 11153  013B76  8CC2               	bsf	4034,6,c	;volatile
 11154                           
 11155                           ;adc.c: 13: ADCON0bits.CHS = 0b1100;
 11156  013B78  50C2               	movf	4034,w,c	;volatile
 11157  013B7A  0BC3               	andlw	-61
 11158  013B7C  0930               	iorlw	48
 11159  013B7E  6EC2               	movwf	4034,c	;volatile
 11160                           
 11161                           ;adc.c: 14: ADCON0bits.ADON = 1;
 11162  013B80  80C2               	bsf	4034,0,c	;volatile
 11163                           
 11164                           ;adc.c: 15: ADCON1bits.ADFM = 0;
 11165  013B82  9EC1               	bcf	4033,7,c	;volatile
 11166                           
 11167                           ;adc.c: 16: ADCON1bits.ADCAL = 0;
 11168  013B84  9CC1               	bcf	4033,6,c	;volatile
 11169                           
 11170                           ;adc.c: 17: ADCON1bits.ADCS = 0b110;
 11171  013B86  50C1               	movf	4033,w,c	;volatile
 11172  013B88  0BF8               	andlw	-8
 11173  013B8A  0906               	iorlw	6
 11174  013B8C  6EC1               	movwf	4033,c	;volatile
 11175  013B8E  0012               	return		;funcret
 11176  013B90                     __end_of_adc_init:
 11177                           	opt stack 0
 11178                           tblptru	equ	0xFF8
 11179                           tblptrh	equ	0xFF7
 11180                           tblptrl	equ	0xFF6
 11181                           tablat	equ	0xFF5
 11182                           prodh	equ	0xFF4
 11183                           prodl	equ	0xFF3
 11184                           intcon3	equ	0xFF0
 11185                           postinc0	equ	0xFEE
 11186                           wreg	equ	0xFE8
 11187                           postdec1	equ	0xFE5
 11188                           plusw1	equ	0xFE3
 11189                           fsr1h	equ	0xFE2
 11190                           fsr1l	equ	0xFE1
 11191                           indf2	equ	0xFDF
 11192                           postinc2	equ	0xFDE
 11193                           postdec2	equ	0xFDD
 11194                           plusw2	equ	0xFDB
 11195                           fsr2h	equ	0xFDA
 11196                           fsr2l	equ	0xFD9
 11197                           status	equ	0xFD8
 11198                           
 11199 ;; *************** function __system_timer0_init *****************
 11200 ;; Defined at:
 11201 ;;		line 214 in file "os.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;		None
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;		None
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  1    wreg      void 
 11208 ;; Registers used:
 11209 ;;		wreg, status,2, status,0
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11219 ;;Total ram usage:        0 bytes
 11220 ;; Hardware stack levels used:    1
 11221 ;; Hardware stack levels required when called:   10
 11222 ;; This function calls:
 11223 ;;		Nothing
 11224 ;; This function is called by:
 11225 ;;		_system_init
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text44
 11230  013292                     __ptext44:
 11231                           	opt stack 0
 11232  013292                     __system_timer0_init:
 11233                           	opt stack 19
 11234                           
 11235                           ;os.c: 217: T0CONbits.T0CS = 0;
 11236                           
 11237                           ;incstack = 0
 11238  013292  9AD5               	bcf	4053,5,c	;volatile
 11239                           
 11240                           ;os.c: 219: T0CONbits.T08BIT = 0;
 11241  013294  9CD5               	bcf	4053,6,c	;volatile
 11242                           
 11243                           ;os.c: 221: T0CONbits.T0PS2 = 0;
 11244  013296  94D5               	bcf	4053,2,c	;volatile
 11245                           
 11246                           ;os.c: 222: T0CONbits.T0PS1 = 1;
 11247  013298  82D5               	bsf	4053,1,c	;volatile
 11248                           
 11249                           ;os.c: 223: T0CONbits.T0PS0 = 0;
 11250  01329A  90D5               	bcf	4053,0,c	;volatile
 11251                           
 11252                           ;os.c: 225: T0CONbits.PSA = 0;
 11253  01329C  96D5               	bcf	4053,3,c	;volatile
 11254                           
 11255                           ;os.c: 227: switch(os.clockFrequency)
 11256  01329E  D009               	goto	l1373
 11257  0132A0                     
 11258                           ;os.c: 230: TMR0H = 0xF8;
 11259  0132A0  0EF8               	movlw	248
 11260  0132A2  6ED7               	movwf	4055,c	;volatile
 11261                           
 11262                           ;os.c: 231: TMR0L = 0x30;
 11263  0132A4  0E30               	movlw	48
 11264  0132A6  D003               	goto	L8
 11265  0132A8                     
 11266                           ;os.c: 234: TMR0H = 0xD1;
 11267  0132A8  0ED1               	movlw	209
 11268  0132AA  6ED7               	movwf	4055,c	;volatile
 11269                           
 11270                           ;os.c: 235: TMR0L = 0x20;
 11271  0132AC  0E20               	movlw	32
 11272  0132AE                     L8:
 11273  0132AE  6ED6               	movwf	4054,c	;volatile
 11274                           
 11275                           ;os.c: 237: }
 11276                           
 11277                           ;os.c: 236: break;
 11278  0132B0  D008               	goto	l1375
 11279  0132B2                     l1373:
 11280  0132B2  0102               	movlb	2	; () banked
 11281  0132B4  5100               	movf	_os& (0+255),w,b	;volatile
 11282                           
 11283                           ; Switch size 1, requested type "space"
 11284                           ; Number of cases is 2, Range of values is 1 to 2
 11285                           ; switch strategies available:
 11286                           ; Name         Instructions Cycles
 11287                           ; simple_byte            7     4 (average)
 11288                           ;	Chosen strategy is simple_byte
 11289  0132B6  0A01               	xorlw	1	; case 1
 11290  0132B8  B4D8               	btfsc	status,2,c
 11291  0132BA  D7F2               	goto	l1374
 11292  0132BC  0A03               	xorlw	3	; case 2
 11293  0132BE  B4D8               	btfsc	status,2,c
 11294  0132C0  D7F3               	goto	l1376
 11295  0132C2                     l1375:
 11296                           
 11297                           ;os.c: 239: T0CONbits.TMR0ON = 1;
 11298  0132C2  8ED5               	bsf	4053,7,c	;volatile
 11299                           
 11300                           ;os.c: 242: INTCONbits.TMR0IF = 0;
 11301  0132C4  94F2               	bcf	intcon,2,c	;volatile
 11302                           
 11303                           ;os.c: 243: INTCONbits.TMR0IE = 1;
 11304  0132C6  8AF2               	bsf	intcon,5,c	;volatile
 11305                           
 11306                           ;os.c: 244: INTCONbits.GIE = 1;
 11307  0132C8  8EF2               	bsf	intcon,7,c	;volatile
 11308                           
 11309                           ;os.c: 247: os.timeSlot = 0;
 11310  0132CA  0E00               	movlw	0
 11311  0132CC  0102               	movlb	2	; () banked
 11312  0132CE  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 11313                           
 11314                           ; BSR set to: 2
 11315  0132D0  0012               	return		;funcret
 11316  0132D2                     __end_of__system_timer0_init:
 11317                           	opt stack 0
 11318                           tblptru	equ	0xFF8
 11319                           tblptrh	equ	0xFF7
 11320                           tblptrl	equ	0xFF6
 11321                           tablat	equ	0xFF5
 11322                           prodh	equ	0xFF4
 11323                           prodl	equ	0xFF3
 11324                           intcon	equ	0xFF2
 11325                           intcon3	equ	0xFF0
 11326                           postinc0	equ	0xFEE
 11327                           wreg	equ	0xFE8
 11328                           postdec1	equ	0xFE5
 11329                           plusw1	equ	0xFE3
 11330                           fsr1h	equ	0xFE2
 11331                           fsr1l	equ	0xFE1
 11332                           indf2	equ	0xFDF
 11333                           postinc2	equ	0xFDE
 11334                           postdec2	equ	0xFDD
 11335                           plusw2	equ	0xFDB
 11336                           fsr2h	equ	0xFDA
 11337                           fsr2l	equ	0xFD9
 11338                           status	equ	0xFD8
 11339                           
 11340 ;; *************** function __system_encoder_init *****************
 11341 ;; Defined at:
 11342 ;;		line 160 in file "os.c"
 11343 ;; Parameters:    Size  Location     Type
 11344 ;;		None
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;		None
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  1    wreg      void 
 11349 ;; Registers used:
 11350 ;;		wreg, status,2
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11360 ;;Total ram usage:        0 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:   10
 11363 ;; This function calls:
 11364 ;;		Nothing
 11365 ;; This function is called by:
 11366 ;;		_system_init
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370                           	psect	text45
 11371  0132D2                     __ptext45:
 11372                           	opt stack 0
 11373  0132D2                     __system_encoder_init:
 11374                           	opt stack 19
 11375                           
 11376                           ;os.c: 162: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11377                           
 11378                           ; BSR set to: 2
 11379                           ;incstack = 0
 11380  0132D2  0E55               	movlw	85
 11381  0132D4  6EA7               	movwf	4007,c	;volsfr
 11382  0132D6  0EAA               	movlw	170
 11383  0132D8  6EA7               	movwf	4007,c	;volsfr
 11384  0132DA  010E               	movlb	14	; () banked
 11385  0132DC  91BF               	bcf	191,0,b	;volatile
 11386                           
 11387                           ;os.c: 163: RPINR1 = 0;
 11388  0132DE  0E00               	movlw	0
 11389  0132E0  6FE1               	movwf	225,b	;volatile
 11390                           
 11391                           ;os.c: 164: RPINR3 = 9;
 11392  0132E2  0E09               	movlw	9
 11393  0132E4  6FE3               	movwf	227,b	;volatile
 11394                           
 11395                           ;os.c: 165: RPINR2 = 10;
 11396  0132E6  0E0A               	movlw	10
 11397  0132E8  6FE2               	movwf	226,b	;volatile
 11398                           
 11399                           ;os.c: 166: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 11400  0132EA  0E55               	movlw	85
 11401  0132EC  6EA7               	movwf	4007,c	;volsfr
 11402  0132EE  0EAA               	movlw	170
 11403  0132F0  6EA7               	movwf	4007,c	;volsfr
 11404                           
 11405                           ; BSR set to: 14
 11406  0132F2  91BF               	bcf	191,0,b	;volatile
 11407                           
 11408                           ; BSR set to: 14
 11409                           ;os.c: 173: INTCON2bits.INTEDG1 = 0;
 11410  0132F4  9AF1               	bcf	intcon2,5,c	;volatile
 11411                           
 11412                           ; BSR set to: 14
 11413                           ;os.c: 174: INTCON3bits.INT1IF = 0;
 11414  0132F6  90F0               	bcf	intcon3,0,c	;volatile
 11415                           
 11416                           ; BSR set to: 14
 11417                           ;os.c: 175: INTCON3bits.INT1IE = 1;
 11418  0132F8  86F0               	bsf	intcon3,3,c	;volatile
 11419                           
 11420                           ; BSR set to: 14
 11421                           ;os.c: 177: INTCON2bits.INTEDG2 = 1;
 11422  0132FA  88F1               	bsf	intcon2,4,c	;volatile
 11423                           
 11424                           ; BSR set to: 14
 11425                           ;os.c: 178: INTCON3bits.INT2IF = 0;
 11426  0132FC  92F0               	bcf	intcon3,1,c	;volatile
 11427                           
 11428                           ; BSR set to: 14
 11429                           ;os.c: 181: INTCON2bits.INTEDG3 = 1;
 11430  0132FE  86F1               	bsf	intcon2,3,c	;volatile
 11431                           
 11432                           ; BSR set to: 14
 11433                           ;os.c: 182: INTCON3bits.INT3IF = 0;
 11434  013300  94F0               	bcf	intcon3,2,c	;volatile
 11435                           
 11436                           ; BSR set to: 14
 11437                           ;os.c: 185: INTCONbits.GIE = 1;
 11438  013302  8EF2               	bsf	intcon,7,c	;volatile
 11439                           
 11440                           ;os.c: 187: os.encoderCount = 0;
 11441  013304  0E00               	movlw	0
 11442  013306  0102               	movlb	2	; () banked
 11443  013308  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 11444                           
 11445                           ;os.c: 188: os.buttonCount = 0;
 11446  01330A  0E00               	movlw	0
 11447  01330C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 11448                           
 11449                           ; BSR set to: 2
 11450  01330E  0012               	return		;funcret
 11451  013310                     __end_of__system_encoder_init:
 11452                           	opt stack 0
 11453                           tblptru	equ	0xFF8
 11454                           tblptrh	equ	0xFF7
 11455                           tblptrl	equ	0xFF6
 11456                           tablat	equ	0xFF5
 11457                           prodh	equ	0xFF4
 11458                           prodl	equ	0xFF3
 11459                           intcon	equ	0xFF2
 11460                           intcon2	equ	0xFF1
 11461                           intcon3	equ	0xFF0
 11462                           postinc0	equ	0xFEE
 11463                           wreg	equ	0xFE8
 11464                           postdec1	equ	0xFE5
 11465                           plusw1	equ	0xFE3
 11466                           fsr1h	equ	0xFE2
 11467                           fsr1l	equ	0xFE1
 11468                           indf2	equ	0xFDF
 11469                           postinc2	equ	0xFDE
 11470                           postdec2	equ	0xFDD
 11471                           plusw2	equ	0xFDB
 11472                           fsr2h	equ	0xFDA
 11473                           fsr2l	equ	0xFD9
 11474                           status	equ	0xFD8
 11475                           
 11476 ;; *************** function _system_calculate_output_voltage *****************
 11477 ;; Defined at:
 11478 ;;		line 587 in file "os.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;		None
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;  tmp             4   16[BANK0 ] long 
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;Total ram usage:        8 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; Hardware stack levels required when called:   11
 11499 ;; This function calls:
 11500 ;;		___lmul
 11501 ;; This function is called by:
 11502 ;;		_main
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text46
 11507  010392                     __ptext46:
 11508                           	opt stack 0
 11509  010392                     _system_calculate_output_voltage:
 11510                           	opt stack 19
 11511                           
 11512                           ;os.c: 589: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 11513                           
 11514                           ; BSR set to: 2
 11515                           ;incstack = 0
 11516  010392  0102               	movlb	2	; () banked
 11517  010394  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 11518  010396  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 11519  010398  0100               	movlb	0	; () banked
 11520  01039A  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 11521  01039C  0102               	movlb	2	; () banked
 11522  01039E  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 11523  0103A0  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 11524  0103A2  0100               	movlb	0	; () banked
 11525  0103A4  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11526  0103A6  0102               	movlb	2	; () banked
 11527  0103A8  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 11528  0103AA  0100               	movlb	0	; () banked
 11529  0103AC  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11530  0103AE  0102               	movlb	2	; () banked
 11531  0103B0  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 11532  0103B2  0100               	movlb	0	; () banked
 11533  0103B4  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11534  0103B6  0102               	movlb	2	; () banked
 11535  0103B8  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 11536  0103BA  0100               	movlb	0	; () banked
 11537  0103BC  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11538  0103BE  0102               	movlb	2	; () banked
 11539  0103C0  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 11540  0103C2  0100               	movlb	0	; () banked
 11541  0103C4  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11542  0103C6  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 11543  0103CA  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 11544  0103CE  0E00               	movlw	0
 11545  0103D0  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 11546  0103D2  0EFF               	movlw	-1
 11547  0103D4  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 11548  0103D6  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 11549                           
 11550                           ;os.c: 590: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 11551  0103D8  C311  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 11552  0103DC  C312  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 11553  0103E0  0E00               	movlw	0
 11554  0103E2  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 11555  0103E4  0EFF               	movlw	255
 11556  0103E6  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 11557  0103E8  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 11558  0103EA  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 11559  0103EC  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11560  0103EE  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 11561  0103F0  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11562  0103F2  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 11563  0103F4  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11564  0103F6  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 11565  0103F8  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;os.c: 591: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 11569  0103FA  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 11570  0103FE  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 11571  010402  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 11572  010406  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 11573  01040A  EE23  F013         	lfsr	2,_calibrationParameters+19
 11574  01040E  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11575  010412  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11576  010416  0E00               	movlw	0
 11577  010418  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11578  01041A  0EFF               	movlw	-1
 11579  01041C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11580  01041E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11581  010420  EC7D  F095         	call	___lmul	;wreg free
 11582  010424  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 11583  010428  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 11584  01042C  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 11585  010430  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 11586                           
 11587                           ;os.c: 592: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 11588  010434  C315  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 11589  010438  0EFF               	movlw	-1
 11590  01043A  0100               	movlb	0	; () banked
 11591  01043C  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11592  01043E  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 11593  010440  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11594  010442  D005               	goto	u22460
 11595  010444                     u22465:
 11596  010444  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11597  010446  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11598  010448  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11599  01044A  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11600  01044C  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11601  01044E                     u22460:
 11602  01044E  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11603  010450  D7F9               	goto	u22465
 11604                           
 11605                           ;os.c: 593: tmp += 1;
 11606  010452  0E01               	movlw	1
 11607  010454  0100               	movlb	0	; () banked
 11608  010456  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11609  010458  0E00               	movlw	0
 11610  01045A  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11611  01045C  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11612  01045E  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;os.c: 594: tmp >>= 1;
 11616  010460  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11617  010462  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11618  010464  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11619  010466  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11620  010468  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;os.c: 595: os.output_voltage = (int16_t) tmp;
 11624  01046A  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 11625  01046E  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 11626                           
 11627                           ; BSR set to: 0
 11628  010472  0012               	return		;funcret
 11629  010474                     __end_of_system_calculate_output_voltage:
 11630                           	opt stack 0
 11631                           tblptru	equ	0xFF8
 11632                           tblptrh	equ	0xFF7
 11633                           tblptrl	equ	0xFF6
 11634                           tablat	equ	0xFF5
 11635                           prodh	equ	0xFF4
 11636                           prodl	equ	0xFF3
 11637                           intcon	equ	0xFF2
 11638                           intcon2	equ	0xFF1
 11639                           intcon3	equ	0xFF0
 11640                           postinc0	equ	0xFEE
 11641                           wreg	equ	0xFE8
 11642                           postdec1	equ	0xFE5
 11643                           plusw1	equ	0xFE3
 11644                           fsr1h	equ	0xFE2
 11645                           fsr1l	equ	0xFE1
 11646                           indf2	equ	0xFDF
 11647                           postinc2	equ	0xFDE
 11648                           postdec2	equ	0xFDD
 11649                           plusw2	equ	0xFDB
 11650                           fsr2h	equ	0xFDA
 11651                           fsr2l	equ	0xFD9
 11652                           status	equ	0xFD8
 11653                           
 11654 ;; *************** function _system_calculate_output_current *****************
 11655 ;; Defined at:
 11656 ;;		line 625 in file "os.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  tmp             4   16[BANK0 ] long 
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11671 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11672 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11673 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11674 ;;Total ram usage:        8 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:   11
 11677 ;; This function calls:
 11678 ;;		___lmul
 11679 ;;		_buck_get_mode
 11680 ;; This function is called by:
 11681 ;;		_main
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           	psect	text47
 11686  00F040                     __ptext47:
 11687                           	opt stack 0
 11688  00F040                     _system_calculate_output_current:
 11689                           	opt stack 19
 11690                           
 11691                           ;os.c: 627: int32_t tmp;;os.c: 629: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_m
      +                          ode()==BUCK_STATUS_REMOTE_OFF))
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;incstack = 0
 11695  00F040  EC74  F09F         	call	_buck_get_mode	;wreg free
 11696  00F044  0900               	iorlw	0
 11697  00F046  B4D8               	btfsc	status,2,c
 11698  00F048  D005               	goto	u22490
 11699  00F04A  EC74  F09F         	call	_buck_get_mode	;wreg free
 11700  00F04E  0A80               	xorlw	128
 11701  00F050  A4D8               	btfss	status,2,c
 11702  00F052  D006               	goto	l1440
 11703  00F054                     u22490:
 11704                           
 11705                           ;os.c: 630: {;os.c: 631: os.output_current = 0;
 11706  00F054  0E00               	movlw	0
 11707  00F056  0102               	movlb	2	; () banked
 11708  00F058  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 11709  00F05A  0E00               	movlw	0
 11710  00F05C  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 11711                           
 11712                           ;os.c: 632: }
 11713  00F05E  0012               	return	
 11714  00F060                     l1440:
 11715                           
 11716                           ;os.c: 633: else;os.c: 634: {;os.c: 635: tmp = (int32_t) (os.output_current_adc[0] + os.
      +                          output_current_adc[1] + os.output_current_adc[2] + os.output_current_adc[3]);
 11717                           
 11718                           ; BSR set to: 2
 11719  00F060  0102               	movlb	2	; () banked
 11720  00F062  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 11721  00F064  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 11722  00F066  0100               	movlb	0	; () banked
 11723  00F068  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 11724  00F06A  0102               	movlb	2	; () banked
 11725  00F06C  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 11726  00F06E  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 11727  00F070  0100               	movlb	0	; () banked
 11728  00F072  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11729  00F074  0102               	movlb	2	; () banked
 11730  00F076  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 11731  00F078  0100               	movlb	0	; () banked
 11732  00F07A  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11733  00F07C  0102               	movlb	2	; () banked
 11734  00F07E  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 11735  00F080  0100               	movlb	0	; () banked
 11736  00F082  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11737  00F084  0102               	movlb	2	; () banked
 11738  00F086  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 11739  00F088  0100               	movlb	0	; () banked
 11740  00F08A  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11741  00F08C  0102               	movlb	2	; () banked
 11742  00F08E  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 11743  00F090  0100               	movlb	0	; () banked
 11744  00F092  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11745  00F094  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 11746  00F098  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 11747  00F09C  0E00               	movlw	0
 11748  00F09E  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 11749  00F0A0  0EFF               	movlw	-1
 11750  00F0A2  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 11751  00F0A4  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 11752                           
 11753                           ;os.c: 636: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 11754  00F0A6  C32E  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 11755  00F0AA  C32F  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 11756  00F0AE  0E00               	movlw	0
 11757  00F0B0  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11758  00F0B2  0EFF               	movlw	255
 11759  00F0B4  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11760  00F0B6  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11761  00F0B8  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11762  00F0BA  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11763  00F0BC  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11764  00F0BE  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11765  00F0C0  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11766  00F0C2  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11767  00F0C4  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11768  00F0C6  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11769                           
 11770                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 11771  00F0C8  C329  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 11772  00F0CC  C32A  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 11773  00F0D0  0E00               	movlw	0
 11774  00F0D2  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11775  00F0D4  0EFF               	movlw	255
 11776  00F0D6  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11777  00F0D8  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11778  00F0DA  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11779  00F0DC  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11780  00F0DE  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11781  00F0E0  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11782  00F0E2  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11783  00F0E4  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11784  00F0E6  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11785  00F0E8  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;os.c: 638: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 11789  00F0EA  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 11790  00F0EE  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 11791  00F0F2  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 11792  00F0F6  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 11793  00F0FA  EE23  F02B         	lfsr	2,_calibrationParameters+43
 11794  00F0FE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11795  00F102  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11796  00F106  0E00               	movlw	0
 11797  00F108  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11798  00F10A  0EFF               	movlw	-1
 11799  00F10C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11800  00F10E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11801  00F110  EC7D  F095         	call	___lmul	;wreg free
 11802  00F114  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 11803  00F118  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 11804  00F11C  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 11805  00F120  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 11806                           
 11807                           ;os.c: 639: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 11808  00F124  C32D  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 11809  00F128  0EFF               	movlw	-1
 11810  00F12A  0100               	movlb	0	; () banked
 11811  00F12C  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11812  00F12E  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 11813  00F130  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11814  00F132  D005               	goto	u22500
 11815  00F134                     u22505:
 11816  00F134  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11817  00F136  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11818  00F138  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11819  00F13A  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11820  00F13C  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11821  00F13E                     u22500:
 11822  00F13E  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 11823  00F140  D7F9               	goto	u22505
 11824                           
 11825                           ;os.c: 640: tmp += 1;
 11826  00F142  0E01               	movlw	1
 11827  00F144  0100               	movlb	0	; () banked
 11828  00F146  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11829  00F148  0E00               	movlw	0
 11830  00F14A  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11831  00F14C  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11832  00F14E  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;os.c: 641: tmp >>= 1;
 11836  00F150  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11837  00F152  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11838  00F154  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11839  00F156  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11840  00F158  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;os.c: 642: os.output_current = (int16_t) tmp;
 11844  00F15A  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 11845  00F15E  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 11846  00F162  0012               	return	
 11847  00F164                     __end_of_system_calculate_output_current:
 11848                           	opt stack 0
 11849                           tblptru	equ	0xFF8
 11850                           tblptrh	equ	0xFF7
 11851                           tblptrl	equ	0xFF6
 11852                           tablat	equ	0xFF5
 11853                           prodh	equ	0xFF4
 11854                           prodl	equ	0xFF3
 11855                           intcon	equ	0xFF2
 11856                           intcon2	equ	0xFF1
 11857                           intcon3	equ	0xFF0
 11858                           postinc0	equ	0xFEE
 11859                           wreg	equ	0xFE8
 11860                           postdec1	equ	0xFE5
 11861                           plusw1	equ	0xFE3
 11862                           fsr1h	equ	0xFE2
 11863                           fsr1l	equ	0xFE1
 11864                           indf2	equ	0xFDF
 11865                           postinc2	equ	0xFDE
 11866                           postdec2	equ	0xFDD
 11867                           plusw2	equ	0xFDB
 11868                           fsr2h	equ	0xFDA
 11869                           fsr2l	equ	0xFD9
 11870                           status	equ	0xFD8
 11871                           
 11872 ;; *************** function _system_calculate_input_voltage *****************
 11873 ;; Defined at:
 11874 ;;		line 570 in file "os.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;  tmp             4   16[BANK0 ] long 
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11890 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11891 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;Total ram usage:        8 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:   11
 11895 ;; This function calls:
 11896 ;;		___lmul
 11897 ;; This function is called by:
 11898 ;;		_main
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text48
 11903  010474                     __ptext48:
 11904                           	opt stack 0
 11905  010474                     _system_calculate_input_voltage:
 11906                           	opt stack 19
 11907                           
 11908                           ;os.c: 572: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 11909                           
 11910                           ;incstack = 0
 11911  010474  0102               	movlb	2	; () banked
 11912  010476  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 11913  010478  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 11914  01047A  0100               	movlb	0	; () banked
 11915  01047C  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 11916  01047E  0102               	movlb	2	; () banked
 11917  010480  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 11918  010482  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 11919  010484  0100               	movlb	0	; () banked
 11920  010486  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 11921  010488  0102               	movlb	2	; () banked
 11922  01048A  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 11923  01048C  0100               	movlb	0	; () banked
 11924  01048E  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11925  010490  0102               	movlb	2	; () banked
 11926  010492  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 11927  010494  0100               	movlb	0	; () banked
 11928  010496  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11929  010498  0102               	movlb	2	; () banked
 11930  01049A  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 11931  01049C  0100               	movlb	0	; () banked
 11932  01049E  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11933  0104A0  0102               	movlb	2	; () banked
 11934  0104A2  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 11935  0104A4  0100               	movlb	0	; () banked
 11936  0104A6  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11937  0104A8  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 11938  0104AC  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 11939  0104B0  0E00               	movlw	0
 11940  0104B2  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 11941  0104B4  0EFF               	movlw	-1
 11942  0104B6  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 11943  0104B8  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 11944                           
 11945                           ;os.c: 573: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 11946  0104BA  C305  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 11947  0104BE  C306  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 11948  0104C2  0E00               	movlw	0
 11949  0104C4  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 11950  0104C6  0EFF               	movlw	255
 11951  0104C8  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 11952  0104CA  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 11953  0104CC  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 11954  0104CE  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 11955  0104D0  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 11956  0104D2  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11957  0104D4  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 11958  0104D6  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11959  0104D8  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 11960  0104DA  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;os.c: 574: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 11964  0104DC  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 11965  0104E0  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 11966  0104E4  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 11967  0104E8  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 11968  0104EC  EE23  F007         	lfsr	2,_calibrationParameters+7
 11969  0104F0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11970  0104F4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11971  0104F8  0E00               	movlw	0
 11972  0104FA  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11973  0104FC  0EFF               	movlw	-1
 11974  0104FE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11975  010500  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11976  010502  EC7D  F095         	call	___lmul	;wreg free
 11977  010506  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 11978  01050A  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 11979  01050E  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 11980  010512  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 11981                           
 11982                           ;os.c: 575: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 11983  010516  C309  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 11984  01051A  0EFF               	movlw	-1
 11985  01051C  0100               	movlb	0	; () banked
 11986  01051E  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 11987  010520  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 11988  010522  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 11989  010524  D005               	goto	u22470
 11990  010526                     u22475:
 11991  010526  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 11992  010528  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 11993  01052A  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 11994  01052C  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 11995  01052E  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 11996  010530                     u22470:
 11997  010530  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 11998  010532  D7F9               	goto	u22475
 11999                           
 12000                           ;os.c: 576: tmp += 1;
 12001  010534  0E01               	movlw	1
 12002  010536  0100               	movlb	0	; () banked
 12003  010538  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12004  01053A  0E00               	movlw	0
 12005  01053C  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12006  01053E  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12007  010540  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;os.c: 577: tmp >>= 1;
 12011  010542  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12012  010544  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12013  010546  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12014  010548  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12015  01054A  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;os.c: 578: os.input_voltage = (int16_t) tmp;
 12019  01054C  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 12020  010550  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 12021                           
 12022                           ; BSR set to: 0
 12023  010554  0012               	return		;funcret
 12024  010556                     __end_of_system_calculate_input_voltage:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           intcon2	equ	0xFF1
 12034                           intcon3	equ	0xFF0
 12035                           postinc0	equ	0xFEE
 12036                           wreg	equ	0xFE8
 12037                           postdec1	equ	0xFE5
 12038                           plusw1	equ	0xFE3
 12039                           fsr1h	equ	0xFE2
 12040                           fsr1l	equ	0xFE1
 12041                           indf2	equ	0xFDF
 12042                           postinc2	equ	0xFDE
 12043                           postdec2	equ	0xFDD
 12044                           plusw2	equ	0xFDB
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8
 12048                           
 12049 ;; *************** function _system_calculate_input_current *****************
 12050 ;; Defined at:
 12051 ;;		line 604 in file "os.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;		None
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;  tmp             4   16[BANK0 ] long 
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  1    wreg      void 
 12058 ;; Registers used:
 12059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12066 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12068 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12069 ;;Total ram usage:        8 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; Hardware stack levels required when called:   11
 12072 ;; This function calls:
 12073 ;;		___lmul
 12074 ;;		_buck_get_mode
 12075 ;; This function is called by:
 12076 ;;		_main
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text49
 12081  00F164                     __ptext49:
 12082                           	opt stack 0
 12083  00F164                     _system_calculate_input_current:
 12084                           	opt stack 19
 12085                           
 12086                           ;os.c: 606: int32_t tmp;;os.c: 608: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_m
      +                          ode()==BUCK_STATUS_REMOTE_OFF))
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;incstack = 0
 12090  00F164  EC74  F09F         	call	_buck_get_mode	;wreg free
 12091  00F168  0900               	iorlw	0
 12092  00F16A  B4D8               	btfsc	status,2,c
 12093  00F16C  D005               	goto	u22620
 12094  00F16E  EC74  F09F         	call	_buck_get_mode	;wreg free
 12095  00F172  0A80               	xorlw	128
 12096  00F174  A4D8               	btfss	status,2,c
 12097  00F176  D006               	goto	l1433
 12098  00F178                     u22620:
 12099                           
 12100                           ;os.c: 609: {;os.c: 610: os.input_current = 0;
 12101  00F178  0E00               	movlw	0
 12102  00F17A  0102               	movlb	2	; () banked
 12103  00F17C  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 12104  00F17E  0E00               	movlw	0
 12105  00F180  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 12106                           
 12107                           ;os.c: 611: }
 12108  00F182  0012               	return	
 12109  00F184                     l1433:
 12110                           
 12111                           ;os.c: 612: else;os.c: 613: {;os.c: 614: tmp = (int32_t) (os.input_current_adc[0] + os.i
      +                          nput_current_adc[1] + os.input_current_adc[2] + os.input_current_adc[3]);
 12112                           
 12113                           ; BSR set to: 2
 12114  00F184  0102               	movlb	2	; () banked
 12115  00F186  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 12116  00F188  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 12117  00F18A  0100               	movlb	0	; () banked
 12118  00F18C  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 12119  00F18E  0102               	movlb	2	; () banked
 12120  00F190  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 12121  00F192  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 12122  00F194  0100               	movlb	0	; () banked
 12123  00F196  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12124  00F198  0102               	movlb	2	; () banked
 12125  00F19A  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 12126  00F19C  0100               	movlb	0	; () banked
 12127  00F19E  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12128  00F1A0  0102               	movlb	2	; () banked
 12129  00F1A2  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 12130  00F1A4  0100               	movlb	0	; () banked
 12131  00F1A6  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12132  00F1A8  0102               	movlb	2	; () banked
 12133  00F1AA  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 12134  00F1AC  0100               	movlb	0	; () banked
 12135  00F1AE  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12136  00F1B0  0102               	movlb	2	; () banked
 12137  00F1B2  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 12138  00F1B4  0100               	movlb	0	; () banked
 12139  00F1B6  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12140  00F1B8  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 12141  00F1BC  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 12142  00F1C0  0E00               	movlw	0
 12143  00F1C2  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 12144  00F1C4  0EFF               	movlw	-1
 12145  00F1C6  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 12146  00F1C8  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 12147                           
 12148                           ;os.c: 615: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 12149  00F1CA  C322  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 12150  00F1CE  C323  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 12151  00F1D2  0E00               	movlw	0
 12152  00F1D4  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12153  00F1D6  0EFF               	movlw	255
 12154  00F1D8  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12155  00F1DA  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12156  00F1DC  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12157  00F1DE  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12158  00F1E0  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12159  00F1E2  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12160  00F1E4  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12161  00F1E6  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12162  00F1E8  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12163  00F1EA  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12164                           
 12165                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 12166  00F1EC  C31D  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 12167  00F1F0  C31E  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 12168  00F1F4  0E00               	movlw	0
 12169  00F1F6  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12170  00F1F8  0EFF               	movlw	255
 12171  00F1FA  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12172  00F1FC  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12173  00F1FE  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12174  00F200  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12175  00F202  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12176  00F204  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12177  00F206  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12178  00F208  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12179  00F20A  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12180  00F20C  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;os.c: 617: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 12184  00F20E  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 12185  00F212  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 12186  00F216  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 12187  00F21A  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 12188  00F21E  EE23  F01F         	lfsr	2,_calibrationParameters+31
 12189  00F222  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12190  00F226  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12191  00F22A  0E00               	movlw	0
 12192  00F22C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12193  00F22E  0EFF               	movlw	-1
 12194  00F230  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12195  00F232  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12196  00F234  EC7D  F095         	call	___lmul	;wreg free
 12197  00F238  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 12198  00F23C  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 12199  00F240  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 12200  00F244  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 12201                           
 12202                           ;os.c: 618: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 12203  00F248  C321  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 12204  00F24C  0EFF               	movlw	-1
 12205  00F24E  0100               	movlb	0	; () banked
 12206  00F250  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12207  00F252  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 12208  00F254  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12209  00F256  D005               	goto	u22630
 12210  00F258                     u22635:
 12211  00F258  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12212  00F25A  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12213  00F25C  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12214  00F25E  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12215  00F260  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12216  00F262                     u22630:
 12217  00F262  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 12218  00F264  D7F9               	goto	u22635
 12219                           
 12220                           ;os.c: 619: tmp += 1;
 12221  00F266  0E01               	movlw	1
 12222  00F268  0100               	movlb	0	; () banked
 12223  00F26A  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12224  00F26C  0E00               	movlw	0
 12225  00F26E  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12226  00F270  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12227  00F272  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;os.c: 620: tmp >>= 1;
 12231  00F274  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12232  00F276  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12233  00F278  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12234  00F27A  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12235  00F27C  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;os.c: 621: os.input_current = (int16_t) tmp;
 12239  00F27E  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 12240  00F282  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 12241  00F286  0012               	return	
 12242  00F288                     __end_of_system_calculate_input_current:
 12243                           	opt stack 0
 12244                           tblptru	equ	0xFF8
 12245                           tblptrh	equ	0xFF7
 12246                           tblptrl	equ	0xFF6
 12247                           tablat	equ	0xFF5
 12248                           prodh	equ	0xFF4
 12249                           prodl	equ	0xFF3
 12250                           intcon	equ	0xFF2
 12251                           intcon2	equ	0xFF1
 12252                           intcon3	equ	0xFF0
 12253                           postinc0	equ	0xFEE
 12254                           wreg	equ	0xFE8
 12255                           postdec1	equ	0xFE5
 12256                           plusw1	equ	0xFE3
 12257                           fsr1h	equ	0xFE2
 12258                           fsr1l	equ	0xFE1
 12259                           indf2	equ	0xFDF
 12260                           postinc2	equ	0xFDE
 12261                           postdec2	equ	0xFDD
 12262                           plusw2	equ	0xFDB
 12263                           fsr2h	equ	0xFDA
 12264                           fsr2l	equ	0xFD9
 12265                           status	equ	0xFD8
 12266                           
 12267 ;; *************** function _log_write_to_disk *****************
 12268 ;; Defined at:
 12269 ;;		line 199 in file "log.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;		None
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;  log_entry      32    1[BANK1 ] struct .
 12274 ;;  file_number     1    0[BANK1 ] unsigned char 
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      void 
 12277 ;; Registers used:
 12278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12287 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12288 ;;Total ram usage:       33 bytes
 12289 ;; Hardware stack levels used:    1
 12290 ;; Hardware stack levels required when called:   17
 12291 ;; This function calls:
 12292 ;;		_fat_append_to_file
 12293 ;;		_fat_create_file
 12294 ;;		_fat_find_file
 12295 ;;		_log_generate_entry
 12296 ;; This function is called by:
 12297 ;;		_main
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text50
 12302  01200E                     __ptext50:
 12303                           	opt stack 0
 12304  01200E                     _log_write_to_disk:
 12305                           	opt stack 13
 12306                           
 12307                           ;log.c: 201: uint8_t file_number;;log.c: 202: logEntry_t log_entry;;log.c: 205: log_gene
      +                          rate_entry(&log_entry);
 12308                           
 12309                           ;incstack = 0
 12310  01200E  0E01               	movlw	low log_write_to_disk@log_entry
 12311  012010  0100               	movlb	0	; () banked
 12312  012012  6F78               	movwf	log_generate_entry@log_entry& (0+255),b
 12313  012014  0E01               	movlw	high log_write_to_disk@log_entry
 12314  012016  6F79               	movwf	(log_generate_entry@log_entry+1)& (0+255),b
 12315  012018  EC22  F05D         	call	_log_generate_entry	;wreg free
 12316                           
 12317                           ;log.c: 208: file_number = fat_find_file(filename, extension);
 12318  01201C  0EEB               	movlw	low _filename
 12319  01201E  0100               	movlb	0	; () banked
 12320  012020  6F87               	movwf	fat_find_file@name& (0+255),b
 12321  012022  0E02               	movlw	high _filename
 12322  012024  6F88               	movwf	(fat_find_file@name+1)& (0+255),b
 12323  012026  0EF4               	movlw	low _extension
 12324  012028  6F89               	movwf	fat_find_file@extension& (0+255),b
 12325  01202A  0E02               	movlw	high _extension
 12326  01202C  6F8A               	movwf	(fat_find_file@extension+1)& (0+255),b
 12327  01202E  EC29  F085         	call	_fat_find_file	;wreg free
 12328  012032  0101               	movlb	1	; () banked
 12329  012034  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12330                           
 12331                           ; BSR set to: 1
 12332                           ;log.c: 209: if(file_number==0xFF)
 12333  012036  2900               	incf	log_write_to_disk@file_number& (0+255),w,b
 12334  012038  A4D8               	btfss	status,2,c
 12335  01203A  D015               	goto	l3315
 12336                           
 12337                           ; BSR set to: 1
 12338                           ;log.c: 210: {;log.c: 212: file_number = fat_create_file(filename, extension, 0);
 12339  01203C  0EEB               	movlw	low _filename
 12340  01203E  0100               	movlb	0	; () banked
 12341  012040  6F9B               	movwf	fat_create_file@name& (0+255),b
 12342  012042  0E02               	movlw	high _filename
 12343  012044  6F9C               	movwf	(fat_create_file@name+1)& (0+255),b
 12344  012046  0EF4               	movlw	low _extension
 12345  012048  6F9D               	movwf	fat_create_file@extension& (0+255),b
 12346  01204A  0E02               	movlw	high _extension
 12347  01204C  6F9E               	movwf	(fat_create_file@extension+1)& (0+255),b
 12348  01204E  0E00               	movlw	0
 12349  012050  6F9F               	movwf	fat_create_file@size& (0+255),b
 12350  012052  0E00               	movlw	0
 12351  012054  6FA0               	movwf	(fat_create_file@size+1)& (0+255),b
 12352  012056  0E00               	movlw	0
 12353  012058  6FA1               	movwf	(fat_create_file@size+2)& (0+255),b
 12354  01205A  0E00               	movlw	0
 12355  01205C  6FA2               	movwf	(fat_create_file@size+3)& (0+255),b
 12356  01205E  EC8B  F071         	call	_fat_create_file	;wreg free
 12357  012062  0101               	movlb	1	; () banked
 12358  012064  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12359  012066                     l3315:
 12360                           
 12361                           ; BSR set to: 1
 12362                           ;log.c: 213: };log.c: 216: fat_append_to_file(file_number, sizeof(logEntry_t), &log_entr
      +                          y);
 12363                           
 12364                           ; BSR set to: 1
 12365  012066  0E00               	movlw	0
 12366  012068  0100               	movlb	0	; () banked
 12367  01206A  6F92               	movwf	(fat_append_to_file@number_of_bytes+1)& (0+255),b
 12368  01206C  0E20               	movlw	32
 12369  01206E  6F91               	movwf	fat_append_to_file@number_of_bytes& (0+255),b
 12370  012070  0E01               	movlw	low log_write_to_disk@log_entry
 12371  012072  6F93               	movwf	fat_append_to_file@data& (0+255),b
 12372  012074  0E01               	movlw	high log_write_to_disk@log_entry
 12373  012076  6F94               	movwf	(fat_append_to_file@data+1)& (0+255),b
 12374  012078  0101               	movlb	1	; () banked
 12375  01207A  5100               	movf	log_write_to_disk@file_number& (0+255),w,b
 12376  01207C  EC9C  F06B         	call	_fat_append_to_file
 12377  012080  0012               	return		;funcret
 12378  012082                     __end_of_log_write_to_disk:
 12379                           	opt stack 0
 12380                           tblptru	equ	0xFF8
 12381                           tblptrh	equ	0xFF7
 12382                           tblptrl	equ	0xFF6
 12383                           tablat	equ	0xFF5
 12384                           prodh	equ	0xFF4
 12385                           prodl	equ	0xFF3
 12386                           intcon	equ	0xFF2
 12387                           intcon2	equ	0xFF1
 12388                           intcon3	equ	0xFF0
 12389                           postinc0	equ	0xFEE
 12390                           wreg	equ	0xFE8
 12391                           postdec1	equ	0xFE5
 12392                           plusw1	equ	0xFE3
 12393                           fsr1h	equ	0xFE2
 12394                           fsr1l	equ	0xFE1
 12395                           indf2	equ	0xFDF
 12396                           postinc2	equ	0xFDE
 12397                           postdec2	equ	0xFDD
 12398                           plusw2	equ	0xFDB
 12399                           fsr2h	equ	0xFDA
 12400                           fsr2l	equ	0xFD9
 12401                           status	equ	0xFD8
 12402                           
 12403 ;; *************** function _log_generate_entry *****************
 12404 ;; Defined at:
 12405 ;;		line 174 in file "log.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;  log_entry       2   24[BANK0 ] PTR struct .
 12408 ;;		 -> log_write_to_disk@log_entry(32), 
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;		None
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12424 ;;Total ram usage:        4 bytes
 12425 ;; Hardware stack levels used:    1
 12426 ;; Hardware stack levels required when called:   13
 12427 ;; This function calls:
 12428 ;;		___aldiv
 12429 ;;		___lldiv
 12430 ;;		__get_checksum
 12431 ;;		__get_dateTime
 12432 ;;		__get_temperature
 12433 ;; This function is called by:
 12434 ;;		_log_write_to_disk
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           	psect	text51
 12439  00BA44                     __ptext51:
 12440                           	opt stack 0
 12441  00BA44                     _log_generate_entry:
 12442                           	opt stack 16
 12443                           
 12444                           ;log.c: 176: log_entry->dateTime = _get_dateTime();
 12445                           
 12446                           ;incstack = 0
 12447  00BA44  ECD4  F073         	call	__get_dateTime	;wreg free
 12448  00BA48  C078  FFD9         	movff	log_generate_entry@log_entry,fsr2l
 12449  00BA4C  C079  FFDA         	movff	log_generate_entry@log_entry+1,fsr2h
 12450  00BA50  0100               	movlb	0	; () banked
 12451  00BA52  C064  FFDE         	movff	?__get_dateTime,postinc2
 12452  00BA56  C065  FFDE         	movff	?__get_dateTime+1,postinc2
 12453  00BA5A  C066  FFDE         	movff	?__get_dateTime+2,postinc2
 12454  00BA5E  C067  FFDE         	movff	?__get_dateTime+3,postinc2
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;log.c: 177: log_entry->inputVoltage = inputVoltageSum / averageCount;
 12458  00BA62  C29A  F060         	movff	_inputVoltageSum,___lldiv@dividend
 12459  00BA66  C29B  F061         	movff	_inputVoltageSum+1,___lldiv@dividend+1
 12460  00BA6A  C29C  F062         	movff	_inputVoltageSum+2,___lldiv@dividend+2
 12461  00BA6E  C29D  F063         	movff	_inputVoltageSum+3,___lldiv@dividend+3
 12462  00BA72  C016  F064         	movff	_averageCount,___lldiv@divisor
 12463  00BA76  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12464  00BA7A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12465  00BA7C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12466  00BA7E  ECD1  F08C         	call	___lldiv	;wreg free
 12467  00BA82  0100               	movlb	0	; () banked
 12468  00BA84  EE20 F004          	lfsr	2,4
 12469  00BA88  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12470  00BA8A  26D9               	addwf	fsr2l,f,c
 12471  00BA8C  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12472  00BA8E  22DA               	addwfc	fsr2h,f,c
 12473  00BA90  C060  FFDE         	movff	?___lldiv,postinc2
 12474  00BA94  C061  FFDD         	movff	?___lldiv+1,postdec2
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;log.c: 178: log_entry->inputCurrent = inputCurrentSum / averageCount;
 12478  00BA98  C296  F060         	movff	_inputCurrentSum,___lldiv@dividend
 12479  00BA9C  C297  F061         	movff	_inputCurrentSum+1,___lldiv@dividend+1
 12480  00BAA0  C298  F062         	movff	_inputCurrentSum+2,___lldiv@dividend+2
 12481  00BAA4  C299  F063         	movff	_inputCurrentSum+3,___lldiv@dividend+3
 12482  00BAA8  C016  F064         	movff	_averageCount,___lldiv@divisor
 12483  00BAAC  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12484  00BAB0  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12485  00BAB2  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12486  00BAB4  ECD1  F08C         	call	___lldiv	;wreg free
 12487  00BAB8  0100               	movlb	0	; () banked
 12488  00BABA  EE20 F006          	lfsr	2,6
 12489  00BABE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12490  00BAC0  26D9               	addwf	fsr2l,f,c
 12491  00BAC2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12492  00BAC4  22DA               	addwfc	fsr2h,f,c
 12493  00BAC6  C060  FFDE         	movff	?___lldiv,postinc2
 12494  00BACA  C061  FFDD         	movff	?___lldiv+1,postdec2
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;log.c: 179: log_entry->outputVoltage = outputVoltageSum / averageCount;
 12498  00BACE  C292  F060         	movff	_outputVoltageSum,___lldiv@dividend
 12499  00BAD2  C293  F061         	movff	_outputVoltageSum+1,___lldiv@dividend+1
 12500  00BAD6  C294  F062         	movff	_outputVoltageSum+2,___lldiv@dividend+2
 12501  00BADA  C295  F063         	movff	_outputVoltageSum+3,___lldiv@dividend+3
 12502  00BADE  C016  F064         	movff	_averageCount,___lldiv@divisor
 12503  00BAE2  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12504  00BAE6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12505  00BAE8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12506  00BAEA  ECD1  F08C         	call	___lldiv	;wreg free
 12507  00BAEE  0100               	movlb	0	; () banked
 12508  00BAF0  EE20 F008          	lfsr	2,8
 12509  00BAF4  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12510  00BAF6  26D9               	addwf	fsr2l,f,c
 12511  00BAF8  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12512  00BAFA  22DA               	addwfc	fsr2h,f,c
 12513  00BAFC  C060  FFDE         	movff	?___lldiv,postinc2
 12514  00BB00  C061  FFDD         	movff	?___lldiv+1,postdec2
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;log.c: 180: log_entry->outputCurrent = outputCurrentSum / averageCount;
 12518  00BB04  C28E  F060         	movff	_outputCurrentSum,___lldiv@dividend
 12519  00BB08  C28F  F061         	movff	_outputCurrentSum+1,___lldiv@dividend+1
 12520  00BB0C  C290  F062         	movff	_outputCurrentSum+2,___lldiv@dividend+2
 12521  00BB10  C291  F063         	movff	_outputCurrentSum+3,___lldiv@dividend+3
 12522  00BB14  C016  F064         	movff	_averageCount,___lldiv@divisor
 12523  00BB18  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12524  00BB1C  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12525  00BB1E  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12526  00BB20  ECD1  F08C         	call	___lldiv	;wreg free
 12527  00BB24  0100               	movlb	0	; () banked
 12528  00BB26  EE20 F00A          	lfsr	2,10
 12529  00BB2A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12530  00BB2C  26D9               	addwf	fsr2l,f,c
 12531  00BB2E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12532  00BB30  22DA               	addwfc	fsr2h,f,c
 12533  00BB32  C060  FFDE         	movff	?___lldiv,postinc2
 12534  00BB36  C061  FFDD         	movff	?___lldiv+1,postdec2
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;log.c: 181: log_entry->inputPower = inputPowerSum / averageCount;
 12538  00BB3A  C28A  F060         	movff	_inputPowerSum,___lldiv@dividend
 12539  00BB3E  C28B  F061         	movff	_inputPowerSum+1,___lldiv@dividend+1
 12540  00BB42  C28C  F062         	movff	_inputPowerSum+2,___lldiv@dividend+2
 12541  00BB46  C28D  F063         	movff	_inputPowerSum+3,___lldiv@dividend+3
 12542  00BB4A  C016  F064         	movff	_averageCount,___lldiv@divisor
 12543  00BB4E  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12544  00BB52  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12545  00BB54  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12546  00BB56  ECD1  F08C         	call	___lldiv	;wreg free
 12547  00BB5A  0100               	movlb	0	; () banked
 12548  00BB5C  EE20 F00C          	lfsr	2,12
 12549  00BB60  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12550  00BB62  26D9               	addwf	fsr2l,f,c
 12551  00BB64  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12552  00BB66  22DA               	addwfc	fsr2h,f,c
 12553  00BB68  C060  FFDE         	movff	?___lldiv,postinc2
 12554  00BB6C  C061  FFDD         	movff	?___lldiv+1,postdec2
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;log.c: 182: log_entry->outputPower = outputPowerSum / averageCount;
 12558  00BB70  C286  F060         	movff	_outputPowerSum,___lldiv@dividend
 12559  00BB74  C287  F061         	movff	_outputPowerSum+1,___lldiv@dividend+1
 12560  00BB78  C288  F062         	movff	_outputPowerSum+2,___lldiv@dividend+2
 12561  00BB7C  C289  F063         	movff	_outputPowerSum+3,___lldiv@dividend+3
 12562  00BB80  C016  F064         	movff	_averageCount,___lldiv@divisor
 12563  00BB84  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12564  00BB88  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12565  00BB8A  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12566  00BB8C  ECD1  F08C         	call	___lldiv	;wreg free
 12567  00BB90  0100               	movlb	0	; () banked
 12568  00BB92  EE20 F00E          	lfsr	2,14
 12569  00BB96  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12570  00BB98  26D9               	addwf	fsr2l,f,c
 12571  00BB9A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12572  00BB9C  22DA               	addwfc	fsr2h,f,c
 12573  00BB9E  C060  FFDE         	movff	?___lldiv,postinc2
 12574  00BBA2  C061  FFDD         	movff	?___lldiv+1,postdec2
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;log.c: 183: log_entry->inputCapacity = (inputCapacitySum+500) / 1000;
 12578  00BBA6  0EF4               	movlw	244
 12579  00BBA8  0102               	movlb	2	; () banked
 12580  00BBAA  2582               	addwf	_inputCapacitySum& (0+255),w,b
 12581  00BBAC  0100               	movlb	0	; () banked
 12582  00BBAE  6F60               	movwf	___lldiv@dividend& (0+255),b
 12583  00BBB0  0E01               	movlw	1
 12584  00BBB2  0102               	movlb	2	; () banked
 12585  00BBB4  2183               	addwfc	(_inputCapacitySum+1)& (0+255),w,b
 12586  00BBB6  0100               	movlb	0	; () banked
 12587  00BBB8  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12588  00BBBA  0E00               	movlw	0
 12589  00BBBC  0102               	movlb	2	; () banked
 12590  00BBBE  2184               	addwfc	(_inputCapacitySum+2)& (0+255),w,b
 12591  00BBC0  0100               	movlb	0	; () banked
 12592  00BBC2  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12593  00BBC4  0E00               	movlw	0
 12594  00BBC6  0102               	movlb	2	; () banked
 12595  00BBC8  2185               	addwfc	(_inputCapacitySum+3)& (0+255),w,b
 12596  00BBCA  0100               	movlb	0	; () banked
 12597  00BBCC  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12598  00BBCE  0EE8               	movlw	232
 12599  00BBD0  6F64               	movwf	___lldiv@divisor& (0+255),b
 12600  00BBD2  0E03               	movlw	3
 12601  00BBD4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12602  00BBD6  0E00               	movlw	0
 12603  00BBD8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12604  00BBDA  0E00               	movlw	0
 12605  00BBDC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12606  00BBDE  ECD1  F08C         	call	___lldiv	;wreg free
 12607  00BBE2  0100               	movlb	0	; () banked
 12608  00BBE4  EE20 F010          	lfsr	2,16
 12609  00BBE8  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12610  00BBEA  26D9               	addwf	fsr2l,f,c
 12611  00BBEC  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12612  00BBEE  22DA               	addwfc	fsr2h,f,c
 12613  00BBF0  C060  FFDE         	movff	?___lldiv,postinc2
 12614  00BBF4  C061  FFDD         	movff	?___lldiv+1,postdec2
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;log.c: 184: log_entry->outputCapacity = (outputCapacitySum+500) / 1000;
 12618  00BBF8  0EF4               	movlw	244
 12619  00BBFA  0102               	movlb	2	; () banked
 12620  00BBFC  257E               	addwf	_outputCapacitySum& (0+255),w,b
 12621  00BBFE  0100               	movlb	0	; () banked
 12622  00BC00  6F60               	movwf	___lldiv@dividend& (0+255),b
 12623  00BC02  0E01               	movlw	1
 12624  00BC04  0102               	movlb	2	; () banked
 12625  00BC06  217F               	addwfc	(_outputCapacitySum+1)& (0+255),w,b
 12626  00BC08  0100               	movlb	0	; () banked
 12627  00BC0A  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12628  00BC0C  0E00               	movlw	0
 12629  00BC0E  0102               	movlb	2	; () banked
 12630  00BC10  2180               	addwfc	(_outputCapacitySum+2)& (0+255),w,b
 12631  00BC12  0100               	movlb	0	; () banked
 12632  00BC14  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12633  00BC16  0E00               	movlw	0
 12634  00BC18  0102               	movlb	2	; () banked
 12635  00BC1A  2181               	addwfc	(_outputCapacitySum+3)& (0+255),w,b
 12636  00BC1C  0100               	movlb	0	; () banked
 12637  00BC1E  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12638  00BC20  0EE8               	movlw	232
 12639  00BC22  6F64               	movwf	___lldiv@divisor& (0+255),b
 12640  00BC24  0E03               	movlw	3
 12641  00BC26  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12642  00BC28  0E00               	movlw	0
 12643  00BC2A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12644  00BC2C  0E00               	movlw	0
 12645  00BC2E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12646  00BC30  ECD1  F08C         	call	___lldiv	;wreg free
 12647  00BC34  0100               	movlb	0	; () banked
 12648  00BC36  EE20 F012          	lfsr	2,18
 12649  00BC3A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12650  00BC3C  26D9               	addwf	fsr2l,f,c
 12651  00BC3E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12652  00BC40  22DA               	addwfc	fsr2h,f,c
 12653  00BC42  C060  FFDE         	movff	?___lldiv,postinc2
 12654  00BC46  C061  FFDD         	movff	?___lldiv+1,postdec2
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;log.c: 185: log_entry->temperatureOnboard = _get_temperature(temperatureOnboardSum/aver
      +                          ageCount);
 12658  00BC4A  EE20 F014          	lfsr	2,20
 12659  00BC4E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12660  00BC50  26D9               	addwf	fsr2l,f,c
 12661  00BC52  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12662  00BC54  22DA               	addwfc	fsr2h,f,c
 12663  00BC56  C27A  F060         	movff	_temperatureOnboardSum,___aldiv@dividend
 12664  00BC5A  C27B  F061         	movff	_temperatureOnboardSum+1,___aldiv@dividend+1
 12665  00BC5E  C27C  F062         	movff	_temperatureOnboardSum+2,___aldiv@dividend+2
 12666  00BC62  C27D  F063         	movff	_temperatureOnboardSum+3,___aldiv@dividend+3
 12667  00BC66  C016  F064         	movff	_averageCount,___aldiv@divisor
 12668  00BC6A  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12669  00BC6E  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12670  00BC70  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12671  00BC72  ECC2  F084         	call	___aldiv	;wreg free
 12672  00BC76  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12673  00BC7A  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12674  00BC7E  EC8D  F09B         	call	__get_temperature	;wreg free
 12675  00BC82  6EDF               	movwf	indf2,c
 12676                           
 12677                           ;log.c: 186: log_entry->temperatureExternal1 = _get_temperature(temperatureExternal1Sum/
      +                          averageCount);
 12678  00BC84  0100               	movlb	0	; () banked
 12679  00BC86  EE20 F015          	lfsr	2,21
 12680  00BC8A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12681  00BC8C  26D9               	addwf	fsr2l,f,c
 12682  00BC8E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12683  00BC90  22DA               	addwfc	fsr2h,f,c
 12684  00BC92  C276  F060         	movff	_temperatureExternal1Sum,___aldiv@dividend
 12685  00BC96  C277  F061         	movff	_temperatureExternal1Sum+1,___aldiv@dividend+1
 12686  00BC9A  C278  F062         	movff	_temperatureExternal1Sum+2,___aldiv@dividend+2
 12687  00BC9E  C279  F063         	movff	_temperatureExternal1Sum+3,___aldiv@dividend+3
 12688  00BCA2  C016  F064         	movff	_averageCount,___aldiv@divisor
 12689  00BCA6  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12690  00BCAA  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12691  00BCAC  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12692  00BCAE  ECC2  F084         	call	___aldiv	;wreg free
 12693  00BCB2  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12694  00BCB6  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12695  00BCBA  EC8D  F09B         	call	__get_temperature	;wreg free
 12696  00BCBE  6EDF               	movwf	indf2,c
 12697                           
 12698                           ;log.c: 187: log_entry->temperatureExternal2 = _get_temperature(temperatureExternal2Sum/
      +                          averageCount);
 12699  00BCC0  0100               	movlb	0	; () banked
 12700  00BCC2  EE20 F016          	lfsr	2,22
 12701  00BCC6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12702  00BCC8  26D9               	addwf	fsr2l,f,c
 12703  00BCCA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12704  00BCCC  22DA               	addwfc	fsr2h,f,c
 12705  00BCCE  C272  F060         	movff	_temperatureExternal2Sum,___aldiv@dividend
 12706  00BCD2  C273  F061         	movff	_temperatureExternal2Sum+1,___aldiv@dividend+1
 12707  00BCD6  C274  F062         	movff	_temperatureExternal2Sum+2,___aldiv@dividend+2
 12708  00BCDA  C275  F063         	movff	_temperatureExternal2Sum+3,___aldiv@dividend+3
 12709  00BCDE  C016  F064         	movff	_averageCount,___aldiv@divisor
 12710  00BCE2  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12711  00BCE6  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12712  00BCE8  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12713  00BCEA  ECC2  F084         	call	___aldiv	;wreg free
 12714  00BCEE  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12715  00BCF2  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12716  00BCF6  EC8D  F09B         	call	__get_temperature	;wreg free
 12717  00BCFA  6EDF               	movwf	indf2,c
 12718                           
 12719                           ;log.c: 188: log_entry->chargerOnTime = chargerOnTime >> 1;
 12720  00BCFC  0100               	movlb	0	; () banked
 12721  00BCFE  EE20 F017          	lfsr	2,23
 12722  00BD02  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12723  00BD04  26D9               	addwf	fsr2l,f,c
 12724  00BD06  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12725  00BD08  22DA               	addwfc	fsr2h,f,c
 12726  00BD0A  90D8               	bcf	status,0,c
 12727  00BD0C  0102               	movlb	2	; () banked
 12728  00BD0E  31B1               	rrcf	(_chargerOnTime+1)& (0+255),w,b
 12729  00BD10  0100               	movlb	0	; () banked
 12730  00BD12  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12731  00BD14  0102               	movlb	2	; () banked
 12732  00BD16  31B0               	rrcf	_chargerOnTime& (0+255),w,b
 12733  00BD18  0100               	movlb	0	; () banked
 12734  00BD1A  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12735  00BD1C  517A               	movf	??_log_generate_entry& (0+255),w,b
 12736  00BD1E  6EDF               	movwf	indf2,c
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;log.c: 189: log_entry->lowPowerTime = lowPowerTime >> 1;
 12740  00BD20  EE20 F018          	lfsr	2,24
 12741  00BD24  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12742  00BD26  26D9               	addwf	fsr2l,f,c
 12743  00BD28  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12744  00BD2A  22DA               	addwfc	fsr2h,f,c
 12745  00BD2C  90D8               	bcf	status,0,c
 12746  00BD2E  0102               	movlb	2	; () banked
 12747  00BD30  31AF               	rrcf	(_lowPowerTime+1)& (0+255),w,b
 12748  00BD32  0100               	movlb	0	; () banked
 12749  00BD34  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12750  00BD36  0102               	movlb	2	; () banked
 12751  00BD38  31AE               	rrcf	_lowPowerTime& (0+255),w,b
 12752  00BD3A  0100               	movlb	0	; () banked
 12753  00BD3C  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12754  00BD3E  517A               	movf	??_log_generate_entry& (0+255),w,b
 12755  00BD40  6EDF               	movwf	indf2,c
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;log.c: 190: log_entry->unused[0] = 0x00;
 12759  00BD42  EE20 F019          	lfsr	2,25
 12760  00BD46  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12761  00BD48  26D9               	addwf	fsr2l,f,c
 12762  00BD4A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12763  00BD4C  22DA               	addwfc	fsr2h,f,c
 12764  00BD4E  0E00               	movlw	0
 12765  00BD50  6EDF               	movwf	indf2,c
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;log.c: 191: log_entry->unused[1] = 0x00;
 12769  00BD52  EE20 F01A          	lfsr	2,26
 12770  00BD56  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12771  00BD58  26D9               	addwf	fsr2l,f,c
 12772  00BD5A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12773  00BD5C  22DA               	addwfc	fsr2h,f,c
 12774  00BD5E  0E00               	movlw	0
 12775  00BD60  6EDF               	movwf	indf2,c
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;log.c: 192: log_entry->unused[2] = 0x00;
 12779  00BD62  EE20 F01B          	lfsr	2,27
 12780  00BD66  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12781  00BD68  26D9               	addwf	fsr2l,f,c
 12782  00BD6A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12783  00BD6C  22DA               	addwfc	fsr2h,f,c
 12784  00BD6E  0E00               	movlw	0
 12785  00BD70  6EDF               	movwf	indf2,c
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;log.c: 193: log_entry->unused[3] = 0x00;
 12789  00BD72  EE20 F01C          	lfsr	2,28
 12790  00BD76  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12791  00BD78  26D9               	addwf	fsr2l,f,c
 12792  00BD7A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12793  00BD7C  22DA               	addwfc	fsr2h,f,c
 12794  00BD7E  0E00               	movlw	0
 12795  00BD80  6EDF               	movwf	indf2,c
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;log.c: 194: log_entry->unused[4] = 0x00;
 12799  00BD82  EE20 F01D          	lfsr	2,29
 12800  00BD86  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12801  00BD88  26D9               	addwf	fsr2l,f,c
 12802  00BD8A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12803  00BD8C  22DA               	addwfc	fsr2h,f,c
 12804  00BD8E  0E00               	movlw	0
 12805  00BD90  6EDF               	movwf	indf2,c
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;log.c: 195: log_entry->status = status;
 12809  00BD92  EE20 F01E          	lfsr	2,30
 12810  00BD96  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12811  00BD98  26D9               	addwf	fsr2l,f,c
 12812  00BD9A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12813  00BD9C  22DA               	addwfc	fsr2h,f,c
 12814  00BD9E  C1F0  FFDF         	movff	_status,indf2
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;log.c: 196: log_entry->checksum = _get_checksum(log_entry);
 12818  00BDA2  C078  F060         	movff	log_generate_entry@log_entry,__get_checksum@log_entry
 12819  00BDA6  C079  F061         	movff	log_generate_entry@log_entry+1,__get_checksum@log_entry+1
 12820  00BDAA  EC01  F09A         	call	__get_checksum	;wreg free
 12821  00BDAE  0100               	movlb	0	; () banked
 12822  00BDB0  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12823  00BDB2  EE20 F01F          	lfsr	2,31
 12824  00BDB6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12825  00BDB8  26D9               	addwf	fsr2l,f,c
 12826  00BDBA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12827  00BDBC  22DA               	addwfc	fsr2h,f,c
 12828  00BDBE  C07A  FFDF         	movff	??_log_generate_entry,indf2
 12829                           
 12830                           ; BSR set to: 0
 12831  00BDC2  0012               	return		;funcret
 12832  00BDC4                     __end_of_log_generate_entry:
 12833                           	opt stack 0
 12834                           tblptru	equ	0xFF8
 12835                           tblptrh	equ	0xFF7
 12836                           tblptrl	equ	0xFF6
 12837                           tablat	equ	0xFF5
 12838                           prodh	equ	0xFF4
 12839                           prodl	equ	0xFF3
 12840                           intcon	equ	0xFF2
 12841                           intcon2	equ	0xFF1
 12842                           intcon3	equ	0xFF0
 12843                           postinc0	equ	0xFEE
 12844                           wreg	equ	0xFE8
 12845                           postdec1	equ	0xFE5
 12846                           plusw1	equ	0xFE3
 12847                           fsr1h	equ	0xFE2
 12848                           fsr1l	equ	0xFE1
 12849                           indf2	equ	0xFDF
 12850                           postinc2	equ	0xFDE
 12851                           postdec2	equ	0xFDD
 12852                           plusw2	equ	0xFDB
 12853                           fsr2h	equ	0xFDA
 12854                           fsr2l	equ	0xFD9
 12855                           status	equ	0xFD8
 12856                           
 12857 ;; *************** function __get_temperature *****************
 12858 ;; Defined at:
 12859 ;;		line 107 in file "log.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;  temperature     2   14[BANK0 ] int 
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;		None
 12864 ;; Return value:  Size  Location     Type
 12865 ;;                  1    wreg      unsigned char 
 12866 ;; Registers used:
 12867 ;;		wreg, status,2, status,0, cstack
 12868 ;; Tracked objects:
 12869 ;;		On entry : 0/0
 12870 ;;		On exit  : 0/0
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12877 ;;Total ram usage:        2 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:   11
 12880 ;; This function calls:
 12881 ;;		___awdiv
 12882 ;; This function is called by:
 12883 ;;		_log_generate_entry
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887                           	psect	text52
 12888  01371A                     __ptext52:
 12889                           	opt stack 0
 12890  01371A                     __get_temperature:
 12891                           	opt stack 17
 12892                           
 12893                           ;log.c: 109: temperature += 4025;
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;incstack = 0
 12897  01371A  0100               	movlb	0	; () banked
 12898  01371C  0EB9               	movlw	185
 12899  01371E  276E               	addwf	__get_temperature@temperature& (0+255),f,b
 12900  013720  0E0F               	movlw	15
 12901  013722  236F               	addwfc	(__get_temperature@temperature+1)& (0+255),f,b
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;log.c: 110: temperature /= 50;
 12905  013724  C06E  F060         	movff	__get_temperature@temperature,___awdiv@dividend
 12906  013728  C06F  F061         	movff	__get_temperature@temperature+1,___awdiv@dividend+1
 12907  01372C  0E00               	movlw	0
 12908  01372E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 12909  013730  0E32               	movlw	50
 12910  013732  6F62               	movwf	___awdiv@divisor& (0+255),b
 12911  013734  EC08  F08C         	call	___awdiv	;wreg free
 12912  013738  C060  F06E         	movff	?___awdiv,__get_temperature@temperature
 12913  01373C  C061  F06F         	movff	?___awdiv+1,__get_temperature@temperature+1
 12914                           
 12915                           ;log.c: 111: return (uint8_t) temperature;
 12916  013740  0100               	movlb	0	; () banked
 12917  013742  516E               	movf	__get_temperature@temperature& (0+255),w,b
 12918  013744  0012               	return	
 12919  013746                     __end_of__get_temperature:
 12920                           	opt stack 0
 12921                           tblptru	equ	0xFF8
 12922                           tblptrh	equ	0xFF7
 12923                           tblptrl	equ	0xFF6
 12924                           tablat	equ	0xFF5
 12925                           prodh	equ	0xFF4
 12926                           prodl	equ	0xFF3
 12927                           intcon	equ	0xFF2
 12928                           intcon2	equ	0xFF1
 12929                           intcon3	equ	0xFF0
 12930                           postinc0	equ	0xFEE
 12931                           wreg	equ	0xFE8
 12932                           postdec1	equ	0xFE5
 12933                           plusw1	equ	0xFE3
 12934                           fsr1h	equ	0xFE2
 12935                           fsr1l	equ	0xFE1
 12936                           indf2	equ	0xFDF
 12937                           postinc2	equ	0xFDE
 12938                           postdec2	equ	0xFDD
 12939                           plusw2	equ	0xFDB
 12940                           fsr2h	equ	0xFDA
 12941                           fsr2l	equ	0xFD9
 12942                           status	equ	0xFD8
 12943                           
 12944 ;; *************** function ___awdiv *****************
 12945 ;; Defined at:
 12946 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12947 ;; Parameters:    Size  Location     Type
 12948 ;;  dividend        2    0[BANK0 ] int 
 12949 ;;  divisor         2    2[BANK0 ] int 
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;  quotient        2    6[BANK0 ] int 
 12952 ;;  sign            1    5[BANK0 ] unsigned char 
 12953 ;;  counter         1    4[BANK0 ] unsigned char 
 12954 ;; Return value:  Size  Location     Type
 12955 ;;                  2    0[BANK0 ] int 
 12956 ;; Registers used:
 12957 ;;		wreg, status,2, status,0
 12958 ;; Tracked objects:
 12959 ;;		On entry : 0/0
 12960 ;;		On exit  : 0/0
 12961 ;;		Unchanged: 0/0
 12962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12964 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12966 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12967 ;;Total ram usage:        8 bytes
 12968 ;; Hardware stack levels used:    1
 12969 ;; Hardware stack levels required when called:   10
 12970 ;; This function calls:
 12971 ;;		Nothing
 12972 ;; This function is called by:
 12973 ;;		__get_temperature
 12974 ;; This function uses a non-reentrant model
 12975 ;;
 12976                           
 12977                           	psect	text53
 12978  011810                     __ptext53:
 12979                           	opt stack 0
 12980  011810                     ___awdiv:
 12981                           	opt stack 17
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;incstack = 0
 12985  011810  0E00               	movlw	0
 12986  011812  0100               	movlb	0	; () banked
 12987  011814  6F65               	movwf	___awdiv@sign& (0+255),b
 12988                           
 12989                           ; BSR set to: 0
 12990  011816  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12991  011818  D006               	goto	l3540
 12992                           
 12993                           ; BSR set to: 0
 12994  01181A  6D62               	negf	___awdiv@divisor& (0+255),b
 12995  01181C  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12996  01181E  B0D8               	btfsc	status,0,c
 12997  011820  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12998                           
 12999                           ; BSR set to: 0
 13000  011822  0E01               	movlw	1
 13001  011824  6F65               	movwf	___awdiv@sign& (0+255),b
 13002  011826                     l3540:
 13003                           
 13004                           ; BSR set to: 0
 13005                           
 13006                           ; BSR set to: 0
 13007  011826  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13008  011828  D006               	goto	l3541
 13009                           
 13010                           ; BSR set to: 0
 13011  01182A  6D60               	negf	___awdiv@dividend& (0+255),b
 13012  01182C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13013  01182E  B0D8               	btfsc	status,0,c
 13014  011830  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13015                           
 13016                           ; BSR set to: 0
 13017  011832  0E01               	movlw	1
 13018  011834  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13019  011836                     l3541:
 13020                           
 13021                           ; BSR set to: 0
 13022                           
 13023                           ; BSR set to: 0
 13024  011836  0E00               	movlw	0
 13025  011838  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13026  01183A  0E00               	movlw	0
 13027  01183C  6F66               	movwf	___awdiv@quotient& (0+255),b
 13028                           
 13029                           ; BSR set to: 0
 13030  01183E  5162               	movf	___awdiv@divisor& (0+255),w,b
 13031  011840  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13032  011842  B4D8               	btfsc	status,2,c
 13033  011844  D01C               	goto	l3548
 13034                           
 13035                           ; BSR set to: 0
 13036  011846  0E01               	movlw	1
 13037  011848  6F64               	movwf	___awdiv@counter& (0+255),b
 13038  01184A  D004               	goto	l3543
 13039  01184C                     
 13040                           ; BSR set to: 0
 13041                           
 13042                           ; BSR set to: 0
 13043  01184C  90D8               	bcf	status,0,c
 13044  01184E  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13045  011850  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13046  011852  2B64               	incf	___awdiv@counter& (0+255),f,b
 13047  011854                     l3543:
 13048                           
 13049                           ; BSR set to: 0
 13050                           
 13051                           ; BSR set to: 0
 13052  011854  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13053  011856  D7FA               	goto	l3544
 13054  011858                     u18450:
 13055                           
 13056                           ; BSR set to: 0
 13057                           
 13058                           ; BSR set to: 0
 13059                           
 13060                           ; BSR set to: 0
 13061  011858  90D8               	bcf	status,0,c
 13062  01185A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13063  01185C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13064                           
 13065                           ; BSR set to: 0
 13066  01185E  5162               	movf	___awdiv@divisor& (0+255),w,b
 13067  011860  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13068  011862  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13069  011864  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13070  011866  A0D8               	btfss	status,0,c
 13071  011868  D005               	goto	l3547
 13072                           
 13073                           ; BSR set to: 0
 13074  01186A  5162               	movf	___awdiv@divisor& (0+255),w,b
 13075  01186C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13076  01186E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13077  011870  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13078                           
 13079                           ; BSR set to: 0
 13080  011872  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13081  011874                     l3547:
 13082                           
 13083                           ; BSR set to: 0
 13084                           
 13085                           ; BSR set to: 0
 13086  011874  90D8               	bcf	status,0,c
 13087  011876  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13088  011878  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13089                           
 13090                           ; BSR set to: 0
 13091  01187A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13092  01187C  D7ED               	goto	u18450
 13093  01187E                     l3548:
 13094                           
 13095                           ; BSR set to: 0
 13096                           
 13097                           ; BSR set to: 0
 13098                           
 13099                           ; BSR set to: 0
 13100  01187E  5165               	movf	___awdiv@sign& (0+255),w,b
 13101  011880  B4D8               	btfsc	status,2,c
 13102  011882  D004               	goto	l3549
 13103                           
 13104                           ; BSR set to: 0
 13105  011884  6D66               	negf	___awdiv@quotient& (0+255),b
 13106  011886  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13107  011888  B0D8               	btfsc	status,0,c
 13108  01188A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13109  01188C                     l3549:
 13110                           
 13111                           ; BSR set to: 0
 13112                           
 13113                           ; BSR set to: 0
 13114  01188C  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13115  011890  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13116  011894  0012               	return	
 13117  011896                     __end_of___awdiv:
 13118                           	opt stack 0
 13119                           tblptru	equ	0xFF8
 13120                           tblptrh	equ	0xFF7
 13121                           tblptrl	equ	0xFF6
 13122                           tablat	equ	0xFF5
 13123                           prodh	equ	0xFF4
 13124                           prodl	equ	0xFF3
 13125                           intcon	equ	0xFF2
 13126                           intcon2	equ	0xFF1
 13127                           intcon3	equ	0xFF0
 13128                           postinc0	equ	0xFEE
 13129                           wreg	equ	0xFE8
 13130                           postdec1	equ	0xFE5
 13131                           plusw1	equ	0xFE3
 13132                           fsr1h	equ	0xFE2
 13133                           fsr1l	equ	0xFE1
 13134                           indf2	equ	0xFDF
 13135                           postinc2	equ	0xFDE
 13136                           postdec2	equ	0xFDD
 13137                           plusw2	equ	0xFDB
 13138                           fsr2h	equ	0xFDA
 13139                           fsr2l	equ	0xFD9
 13140                           status	equ	0xFD8
 13141                           
 13142 ;; *************** function __get_dateTime *****************
 13143 ;; Defined at:
 13144 ;;		line 39 in file "log.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  datetime        4   20[BANK0 ] unsigned long 
 13149 ;;  seconds         1   19[BANK0 ] unsigned char 
 13150 ;;  minutes         1   18[BANK0 ] unsigned char 
 13151 ;;  hours           1   17[BANK0 ] unsigned char 
 13152 ;;  day             1   16[BANK0 ] unsigned char 
 13153 ;;  month           1   15[BANK0 ] unsigned char 
 13154 ;;  year            1   14[BANK0 ] unsigned char 
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  4    4[BANK0 ] unsigned long 
 13157 ;; Registers used:
 13158 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13165 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13166 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13167 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13168 ;;Total ram usage:       20 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:   12
 13171 ;; This function calls:
 13172 ;;		_rtcc_get_day_decimal
 13173 ;;		_rtcc_get_hours_decimal
 13174 ;;		_rtcc_get_minutes_decimal
 13175 ;;		_rtcc_get_month_decimal
 13176 ;;		_rtcc_get_seconds_decimal
 13177 ;;		_rtcc_get_year_decimal
 13178 ;; This function is called by:
 13179 ;;		_log_generate_entry
 13180 ;; This function uses a non-reentrant model
 13181 ;;
 13182                           
 13183                           	psect	text54
 13184  00E7A8                     __ptext54:
 13185                           	opt stack 0
 13186  00E7A8                     __get_dateTime:
 13187                           	opt stack 16
 13188                           
 13189                           ;log.c: 41: uint32_t datetime;;log.c: 42: uint8_t year = rtcc_get_year_decimal();
 13190                           
 13191                           ; BSR set to: 0
 13192                           ;incstack = 0
 13193  00E7A8  ECCD  F09E         	call	_rtcc_get_year_decimal	;wreg free
 13194  00E7AC  0100               	movlb	0	; () banked
 13195  00E7AE  6F6E               	movwf	__get_dateTime@year& (0+255),b
 13196                           
 13197                           ;log.c: 43: uint8_t month = rtcc_get_month_decimal();
 13198  00E7B0  ECD5  F09E         	call	_rtcc_get_month_decimal	;wreg free
 13199  00E7B4  0100               	movlb	0	; () banked
 13200  00E7B6  6F6F               	movwf	__get_dateTime@month& (0+255),b
 13201                           
 13202                           ;log.c: 44: uint8_t day = rtcc_get_day_decimal();
 13203  00E7B8  ECDD  F09E         	call	_rtcc_get_day_decimal	;wreg free
 13204  00E7BC  0100               	movlb	0	; () banked
 13205  00E7BE  6F70               	movwf	__get_dateTime@day& (0+255),b
 13206                           
 13207                           ;log.c: 45: uint8_t hours = rtcc_get_hours_decimal();
 13208  00E7C0  ECC5  F09E         	call	_rtcc_get_hours_decimal	;wreg free
 13209  00E7C4  0100               	movlb	0	; () banked
 13210  00E7C6  6F71               	movwf	__get_dateTime@hours& (0+255),b
 13211                           
 13212                           ;log.c: 46: uint8_t minutes = rtcc_get_minutes_decimal();
 13213  00E7C8  ECBD  F09E         	call	_rtcc_get_minutes_decimal	;wreg free
 13214  00E7CC  0100               	movlb	0	; () banked
 13215  00E7CE  6F72               	movwf	__get_dateTime@minutes& (0+255),b
 13216                           
 13217                           ;log.c: 47: uint8_t seconds = rtcc_get_seconds_decimal();
 13218  00E7D0  ECED  F09E         	call	_rtcc_get_seconds_decimal	;wreg free
 13219  00E7D4  0100               	movlb	0	; () banked
 13220  00E7D6  6F73               	movwf	__get_dateTime@seconds& (0+255),b
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;log.c: 48: datetime = (((uint32_t)(year&0b111111)) << 26);
 13224  00E7D8  C06E  F068         	movff	__get_dateTime@year,??__get_dateTime
 13225  00E7DC  0E3F               	movlw	63
 13226  00E7DE  1768               	andwf	??__get_dateTime& (0+255),f,b
 13227  00E7E0  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13228  00E7E4  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13229  00E7E6  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13230  00E7E8  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13231  00E7EA  0E1A               	movlw	26
 13232  00E7EC                     u19245:
 13233  00E7EC  90D8               	bcf	status,0,c
 13234  00E7EE  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13235  00E7F0  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13236  00E7F2  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13237  00E7F4  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13238  00E7F6  2EE8               	decfsz	wreg,f,c
 13239  00E7F8  D7F9               	goto	u19245
 13240  00E7FA  C069  F074         	movff	??__get_dateTime+1,__get_dateTime@datetime
 13241  00E7FE  C06A  F075         	movff	??__get_dateTime+2,__get_dateTime@datetime+1
 13242  00E802  C06B  F076         	movff	??__get_dateTime+3,__get_dateTime@datetime+2
 13243  00E806  C06C  F077         	movff	??__get_dateTime+4,__get_dateTime@datetime+3
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;log.c: 49: datetime |= (((uint32_t)(month&0b1111)) << 22);
 13247  00E80A  C06F  F068         	movff	__get_dateTime@month,??__get_dateTime
 13248  00E80E  0E0F               	movlw	15
 13249  00E810  1768               	andwf	??__get_dateTime& (0+255),f,b
 13250  00E812  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13251  00E816  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13252  00E818  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13253  00E81A  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13254  00E81C  0E16               	movlw	22
 13255  00E81E                     u19255:
 13256  00E81E  90D8               	bcf	status,0,c
 13257  00E820  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13258  00E822  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13259  00E824  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13260  00E826  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13261  00E828  2EE8               	decfsz	wreg,f,c
 13262  00E82A  D7F9               	goto	u19255
 13263  00E82C  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13264  00E82E  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13265  00E830  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13266  00E832  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13267  00E834  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13268  00E836  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13269  00E838  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13270  00E83A  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;log.c: 50: datetime |= (((uint32_t)day&0b11111)) << 17;
 13274  00E83C  C070  F068         	movff	__get_dateTime@day,??__get_dateTime
 13275  00E840  0E1F               	movlw	31
 13276  00E842  1768               	andwf	??__get_dateTime& (0+255),f,b
 13277  00E844  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13278  00E848  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13279  00E84A  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13280  00E84C  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13281  00E84E  0E11               	movlw	17
 13282  00E850                     u19265:
 13283  00E850  90D8               	bcf	status,0,c
 13284  00E852  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13285  00E854  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13286  00E856  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13287  00E858  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13288  00E85A  2EE8               	decfsz	wreg,f,c
 13289  00E85C  D7F9               	goto	u19265
 13290  00E85E  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13291  00E860  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13292  00E862  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13293  00E864  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13294  00E866  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13295  00E868  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13296  00E86A  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13297  00E86C  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;log.c: 51: datetime |= (((uint32_t)(hours&0b11111)) << 12);
 13301  00E86E  C071  F068         	movff	__get_dateTime@hours,??__get_dateTime
 13302  00E872  0E1F               	movlw	31
 13303  00E874  1768               	andwf	??__get_dateTime& (0+255),f,b
 13304  00E876  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13305  00E87A  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13306  00E87C  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13307  00E87E  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13308  00E880  0E0C               	movlw	12
 13309  00E882                     u19275:
 13310  00E882  90D8               	bcf	status,0,c
 13311  00E884  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13312  00E886  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13313  00E888  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13314  00E88A  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13315  00E88C  2EE8               	decfsz	wreg,f,c
 13316  00E88E  D7F9               	goto	u19275
 13317  00E890  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13318  00E892  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13319  00E894  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13320  00E896  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13321  00E898  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13322  00E89A  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13323  00E89C  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13324  00E89E  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;log.c: 52: datetime |= (((uint16_t)(minutes&0b111111)) << 6);
 13328  00E8A0  5172               	movf	__get_dateTime@minutes& (0+255),w,b
 13329  00E8A2  0B3F               	andlw	63
 13330  00E8A4  6F68               	movwf	??__get_dateTime& (0+255),b
 13331  00E8A6  6B69               	clrf	(??__get_dateTime+1)& (0+255),b
 13332  00E8A8  0E06               	movlw	6
 13333  00E8AA                     u19285:
 13334  00E8AA  90D8               	bcf	status,0,c
 13335  00E8AC  3768               	rlcf	??__get_dateTime& (0+255),f,b
 13336  00E8AE  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13337  00E8B0  2EE8               	decfsz	wreg,f,c
 13338  00E8B2  D7FB               	goto	u19285
 13339  00E8B4  5168               	movf	??__get_dateTime& (0+255),w,b
 13340  00E8B6  6F6A               	movwf	(??__get_dateTime+2)& (0+255),b
 13341  00E8B8  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13342  00E8BA  6F6B               	movwf	(??__get_dateTime+3)& (0+255),b
 13343  00E8BC  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13344  00E8BE  6B6D               	clrf	(??__get_dateTime+5)& (0+255),b
 13345  00E8C0  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13346  00E8C2  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13347  00E8C4  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13348  00E8C6  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13349  00E8C8  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13350  00E8CA  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13351  00E8CC  516D               	movf	(??__get_dateTime+5)& (0+255),w,b
 13352  00E8CE  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;log.c: 53: datetime |= (seconds&0b111111);
 13356  00E8D0  C073  F068         	movff	__get_dateTime@seconds,??__get_dateTime
 13357  00E8D4  0E3F               	movlw	63
 13358  00E8D6  1768               	andwf	??__get_dateTime& (0+255),f,b
 13359  00E8D8  5168               	movf	??__get_dateTime& (0+255),w,b
 13360  00E8DA  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;log.c: 54: return datetime;
 13364  00E8DC  C074  F064         	movff	__get_dateTime@datetime,?__get_dateTime
 13365  00E8E0  C075  F065         	movff	__get_dateTime@datetime+1,?__get_dateTime+1
 13366  00E8E4  C076  F066         	movff	__get_dateTime@datetime+2,?__get_dateTime+2
 13367  00E8E8  C077  F067         	movff	__get_dateTime@datetime+3,?__get_dateTime+3
 13368  00E8EC  0012               	return	
 13369  00E8EE                     __end_of__get_dateTime:
 13370                           	opt stack 0
 13371                           tblptru	equ	0xFF8
 13372                           tblptrh	equ	0xFF7
 13373                           tblptrl	equ	0xFF6
 13374                           tablat	equ	0xFF5
 13375                           prodh	equ	0xFF4
 13376                           prodl	equ	0xFF3
 13377                           intcon	equ	0xFF2
 13378                           intcon2	equ	0xFF1
 13379                           intcon3	equ	0xFF0
 13380                           postinc0	equ	0xFEE
 13381                           wreg	equ	0xFE8
 13382                           postdec1	equ	0xFE5
 13383                           plusw1	equ	0xFE3
 13384                           fsr1h	equ	0xFE2
 13385                           fsr1l	equ	0xFE1
 13386                           indf2	equ	0xFDF
 13387                           postinc2	equ	0xFDE
 13388                           postdec2	equ	0xFDD
 13389                           plusw2	equ	0xFDB
 13390                           fsr2h	equ	0xFDA
 13391                           fsr2l	equ	0xFD9
 13392                           status	equ	0xFD8
 13393                           
 13394 ;; *************** function __get_checksum *****************
 13395 ;; Defined at:
 13396 ;;		line 57 in file "log.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;  log_entry       2    0[BANK0 ] PTR struct .
 13399 ;;		 -> log_write_to_disk@log_entry(32), 
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;  byte_array      2    2[BANK0 ] PTR unsigned char 
 13402 ;;		 -> log_write_to_disk@log_entry(32), 
 13403 ;;  cntr            1    5[BANK0 ] unsigned char 
 13404 ;;  checksum        1    4[BANK0 ] unsigned char 
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  1    wreg      unsigned char 
 13407 ;; Registers used:
 13408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13417 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13418 ;;Total ram usage:        6 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; Hardware stack levels required when called:   10
 13421 ;; This function calls:
 13422 ;;		Nothing
 13423 ;; This function is called by:
 13424 ;;		_log_generate_entry
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text55
 13429  013402                     __ptext55:
 13430                           	opt stack 0
 13431  013402                     __get_checksum:
 13432                           	opt stack 18
 13433                           
 13434                           ;log.c: 59: uint8_t checksum;;log.c: 60: uint8_t *byte_array;;log.c: 61: uint8_t cntr;;l
      +                          og.c: 62: byte_array = (uint8_t*) log_entry;
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;incstack = 0
 13438  013402  C060  F062         	movff	__get_checksum@log_entry,__get_checksum@byte_array
 13439  013406  C061  F063         	movff	__get_checksum@log_entry+1,__get_checksum@byte_array+1
 13440                           
 13441                           ;log.c: 63: checksum = 0x00;
 13442  01340A  0E00               	movlw	0
 13443  01340C  0100               	movlb	0	; () banked
 13444  01340E  6F64               	movwf	__get_checksum@checksum& (0+255),b
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;log.c: 64: for(cntr=0; cntr<31; ++cntr)
 13448  013410  0E00               	movlw	0
 13449  013412  6F65               	movwf	__get_checksum@cntr& (0+255),b
 13450  013414  0E1E               	movlw	30
 13451  013416  6565               	cpfsgt	__get_checksum@cntr& (0+255),b
 13452  013418  D001               	goto	l3280
 13453  01341A  D00C               	goto	u19300
 13454  01341C                     l3280:
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;log.c: 65: {;log.c: 66: checksum ^= byte_array[cntr];
 13458                           
 13459                           ; BSR set to: 0
 13460  01341C  5165               	movf	__get_checksum@cntr& (0+255),w,b
 13461  01341E  0D01               	mullw	1
 13462  013420  50F3               	movf	prodl,w,c
 13463  013422  2562               	addwf	__get_checksum@byte_array& (0+255),w,b
 13464  013424  6ED9               	movwf	fsr2l,c
 13465  013426  50F4               	movf	prodh,w,c
 13466  013428  2163               	addwfc	(__get_checksum@byte_array+1)& (0+255),w,b
 13467  01342A  6EDA               	movwf	fsr2h,c
 13468  01342C  50DF               	movf	indf2,w,c
 13469  01342E  1B64               	xorwf	__get_checksum@checksum& (0+255),f,b
 13470                           
 13471                           ; BSR set to: 0
 13472  013430  2B65               	incf	__get_checksum@cntr& (0+255),f,b
 13473  013432  D7F0               	goto	L9
 13474  013434                     u19300:
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;log.c: 67: };log.c: 68: return checksum;
 13478                           
 13479                           ; BSR set to: 0
 13480  013434  5164               	movf	__get_checksum@checksum& (0+255),w,b
 13481  013436  0012               	return	
 13482  013438                     __end_of__get_checksum:
 13483                           	opt stack 0
 13484                           tblptru	equ	0xFF8
 13485                           tblptrh	equ	0xFF7
 13486                           tblptrl	equ	0xFF6
 13487                           tablat	equ	0xFF5
 13488                           prodh	equ	0xFF4
 13489                           prodl	equ	0xFF3
 13490                           intcon	equ	0xFF2
 13491                           intcon2	equ	0xFF1
 13492                           intcon3	equ	0xFF0
 13493                           postinc0	equ	0xFEE
 13494                           wreg	equ	0xFE8
 13495                           postdec1	equ	0xFE5
 13496                           plusw1	equ	0xFE3
 13497                           fsr1h	equ	0xFE2
 13498                           fsr1l	equ	0xFE1
 13499                           indf2	equ	0xFDF
 13500                           postinc2	equ	0xFDE
 13501                           postdec2	equ	0xFDD
 13502                           plusw2	equ	0xFDB
 13503                           fsr2h	equ	0xFDA
 13504                           fsr2l	equ	0xFD9
 13505                           status	equ	0xFD8
 13506                           
 13507 ;; *************** function _fat_create_file *****************
 13508 ;; Defined at:
 13509 ;;		line 321 in file "fat16.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  name            2   59[BANK0 ] PTR unsigned char 
 13512 ;;		 -> filename(9), 
 13513 ;;  extension       2   61[BANK0 ] PTR unsigned char 
 13514 ;;		 -> extension(4), 
 13515 ;;  size            4   63[BANK0 ] unsigned long 
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;  root_entry     32   80[BANK0 ] struct .
 13518 ;;  cluster         2   78[BANK0 ] unsigned int 
 13519 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 13520 ;;  cluster_coun    2   73[BANK0 ] unsigned int 
 13521 ;;  next_cluster    2   71[BANK0 ] unsigned int 
 13522 ;;  root_slot       1   75[BANK0 ] unsigned char 
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      unsigned char 
 13525 ;; Registers used:
 13526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13532 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13533 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13535 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13536 ;;Total ram usage:       53 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:   16
 13539 ;; This function calls:
 13540 ;;		__get_available_root_entry
 13541 ;;		__get_date
 13542 ;;		__get_empty_cluster
 13543 ;;		__get_time
 13544 ;;		__write_fat
 13545 ;;		__write_root
 13546 ;;		_fat_find_file
 13547 ;;		_fat_get_empty_clusters
 13548 ;;		_memcpy
 13549 ;; This function is called by:
 13550 ;;		_log_write_to_disk
 13551 ;; This function uses a non-reentrant model
 13552 ;;
 13553                           
 13554                           	psect	text56
 13555  00E316                     __ptext56:
 13556                           	opt stack 0
 13557  00E316                     _fat_create_file:
 13558                           	opt stack 13
 13559                           
 13560                           ;fat16.c: 323: uint8_t root_slot;;fat16.c: 324: rootEntry_t root_entry;;fat16.c: 325: ui
      +                          nt16_t cluster;;fat16.c: 326: uint16_t next_cluster;;fat16.c: 327: uint16_t number_of_cl
      +                          usters;;fat16.c: 328: uint16_t cluster_count;;fat16.c: 332: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;incstack = 0
 13564  00E316  C09B  F087         	movff	fat_create_file@name,fat_find_file@name
 13565  00E31A  C09C  F088         	movff	fat_create_file@name+1,fat_find_file@name+1
 13566  00E31E  C09D  F089         	movff	fat_create_file@extension,fat_find_file@extension
 13567  00E322  C09E  F08A         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13568  00E326  EC29  F085         	call	_fat_find_file	;wreg free
 13569  00E32A  0AFF               	xorlw	255
 13570  00E32C  B4D8               	btfsc	status,2,c
 13571  00E32E  D002               	goto	l3014
 13572                           
 13573                           ;fat16.c: 333: {;fat16.c: 336: return 0xFF;
 13574  00E330  0EFF               	movlw	255
 13575  00E332  0012               	return	
 13576  00E334                     l3014:
 13577                           
 13578                           ;fat16.c: 337: };fat16.c: 341: root_slot = _get_available_root_entry();
 13579  00E334  ECFB  F09B         	call	__get_available_root_entry	;wreg free
 13580  00E338  0100               	movlb	0	; () banked
 13581  00E33A  6FAB               	movwf	fat_create_file@root_slot& (0+255),b
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;fat16.c: 342: if(root_slot == 0xFF)
 13585  00E33C  29AB               	incf	fat_create_file@root_slot& (0+255),w,b
 13586  00E33E  A4D8               	btfss	status,2,c
 13587  00E340  D002               	goto	l3016
 13588                           
 13589                           ; BSR set to: 0
 13590                           ;fat16.c: 343: {;fat16.c: 346: return 0xFE;
 13591  00E342  0EFE               	movlw	254
 13592                           
 13593                           ; BSR set to: 0
 13594  00E344  0012               	return	
 13595  00E346                     l3016:
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;fat16.c: 347: };fat16.c: 350: number_of_clusters = (size>>9) + 1;
 13599                           
 13600                           ; BSR set to: 0
 13601  00E346  C09F  F0A3         	movff	fat_create_file@size,??_fat_create_file
 13602  00E34A  C0A0  F0A4         	movff	fat_create_file@size+1,??_fat_create_file+1
 13603  00E34E  C0A1  F0A5         	movff	fat_create_file@size+2,??_fat_create_file+2
 13604  00E352  C0A2  F0A6         	movff	fat_create_file@size+3,??_fat_create_file+3
 13605  00E356  0E0A               	movlw	10
 13606  00E358  D005               	goto	u21710
 13607  00E35A                     u21715:
 13608  00E35A  90D8               	bcf	status,0,c
 13609  00E35C  33A6               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13610  00E35E  33A5               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13611  00E360  33A4               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13612  00E362  33A3               	rrcf	??_fat_create_file& (0+255),f,b
 13613  00E364                     u21710:
 13614  00E364  2EE8               	decfsz	wreg,f,c
 13615  00E366  D7F9               	goto	u21715
 13616  00E368  0E01               	movlw	1
 13617  00E36A  25A3               	addwf	??_fat_create_file& (0+255),w,b
 13618  00E36C  6FAC               	movwf	fat_create_file@number_of_clusters& (0+255),b
 13619  00E36E  0E00               	movlw	0
 13620  00E370  21A4               	addwfc	(??_fat_create_file+1)& (0+255),w,b
 13621  00E372  6FAD               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;fat16.c: 351: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 13625  00E374  C0AC  F087         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 13626  00E378  C0AD  F088         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 13627  00E37C  EC2F  F08B         	call	_fat_get_empty_clusters	;wreg free
 13628  00E380  0100               	movlb	0	; () banked
 13629  00E382  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13630  00E384  1987               	xorwf	?_fat_get_empty_clusters& (0+255),w,b
 13631  00E386  E104               	bnz	u21720
 13632  00E388  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13633  00E38A  1988               	xorwf	(?_fat_get_empty_clusters+1)& (0+255),w,b
 13634  00E38C  B4D8               	btfsc	status,2,c
 13635  00E38E  D002               	goto	l3017
 13636  00E390                     u21720:
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;fat16.c: 352: {;fat16.c: 355: return 0xFD;
 13640  00E390  0EFD               	movlw	253
 13641                           
 13642                           ; BSR set to: 0
 13643  00E392  0012               	return	
 13644  00E394                     l3017:
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;fat16.c: 356: };fat16.c: 359: cluster = _get_empty_cluster(2);
 13648                           
 13649                           ; BSR set to: 0
 13650  00E394  0E00               	movlw	0
 13651  00E396  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13652  00E398  0E02               	movlw	2
 13653  00E39A  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13654  00E39C  EC13  F08F         	call	__get_empty_cluster	;wreg free
 13655  00E3A0  C087  F0AE         	movff	?__get_empty_cluster,fat_create_file@cluster
 13656  00E3A4  C088  F0AF         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 13657                           
 13658                           ;fat16.c: 362: memcpy(root_entry.fileName, name, 8);
 13659  00E3A8  0EB0               	movlw	low fat_create_file@root_entry
 13660  00E3AA  0100               	movlb	0	; () banked
 13661  00E3AC  6F60               	movwf	memcpy@d1& (0+255),b
 13662  00E3AE  0E00               	movlw	high fat_create_file@root_entry
 13663  00E3B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13664  00E3B2  C09B  F062         	movff	fat_create_file@name,memcpy@s1
 13665  00E3B6  C09C  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13666  00E3BA  0E00               	movlw	0
 13667  00E3BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13668  00E3BE  0E08               	movlw	8
 13669  00E3C0  6F64               	movwf	memcpy@n& (0+255),b
 13670  00E3C2  EC86  F093         	call	_memcpy	;wreg free
 13671                           
 13672                           ;fat16.c: 363: memcpy(root_entry.fileExtension, extension, 3);
 13673  00E3C6  0EB8               	movlw	low (fat_create_file@root_entry+8)
 13674  00E3C8  0100               	movlb	0	; () banked
 13675  00E3CA  6F60               	movwf	memcpy@d1& (0+255),b
 13676  00E3CC  0E00               	movlw	high (fat_create_file@root_entry+8)
 13677  00E3CE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13678  00E3D0  C09D  F062         	movff	fat_create_file@extension,memcpy@s1
 13679  00E3D4  C09E  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13680  00E3D8  0E00               	movlw	0
 13681  00E3DA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13682  00E3DC  0E03               	movlw	3
 13683  00E3DE  6F64               	movwf	memcpy@n& (0+255),b
 13684  00E3E0  EC86  F093         	call	_memcpy	;wreg free
 13685                           
 13686                           ;fat16.c: 364: root_entry.attributes = 0x00;
 13687  00E3E4  0E00               	movlw	0
 13688  00E3E6  0100               	movlb	0	; () banked
 13689  00E3E8  6FBB               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;fat16.c: 365: root_entry.reserved1 = 0x00;
 13693  00E3EA  0E00               	movlw	0
 13694  00E3EC  6FBC               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;fat16.c: 366: root_entry.secondFractions = 0x00;
 13698  00E3EE  0E00               	movlw	0
 13699  00E3F0  6FBD               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;fat16.c: 367: root_entry.createdTime = _get_time();
 13703  00E3F2  EC58  F091         	call	__get_time	;wreg free
 13704  00E3F6  C064  F0BE         	movff	?__get_time,fat_create_file@root_entry+14
 13705  00E3FA  C065  F0BF         	movff	?__get_time+1,fat_create_file@root_entry+15
 13706                           
 13707                           ;fat16.c: 368: root_entry.createdDate = _get_date();
 13708  00E3FE  EC2A  F092         	call	__get_date	;wreg free
 13709  00E402  C064  F0C0         	movff	?__get_date,fat_create_file@root_entry+16
 13710  00E406  C065  F0C1         	movff	?__get_date+1,fat_create_file@root_entry+17
 13711                           
 13712                           ;fat16.c: 369: root_entry.lastAccessDate = root_entry.createdDate;
 13713  00E40A  C0C0  F0C2         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13714  00E40E  C0C1  F0C3         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13715                           
 13716                           ;fat16.c: 370: root_entry.reserved2 = 0x00;
 13717  00E412  0E00               	movlw	0
 13718  00E414  0100               	movlb	0	; () banked
 13719  00E416  6FC5               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13720  00E418  0E00               	movlw	0
 13721  00E41A  6FC4               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;fat16.c: 371: root_entry.modifiedTime = root_entry.createdTime;
 13725  00E41C  C0BE  F0C6         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13726  00E420  C0BF  F0C7         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;fat16.c: 372: root_entry.modifiedDate = root_entry.createdDate;
 13730  00E424  C0C0  F0C8         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13731  00E428  C0C1  F0C9         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;fat16.c: 373: root_entry.firstCluster = cluster;
 13735  00E42C  C0AE  F0CA         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 13736  00E430  C0AF  F0CB         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;fat16.c: 374: root_entry.fileSize = size;
 13740  00E434  C09F  F0CC         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13741  00E438  C0A0  F0CD         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13742  00E43C  C0A1  F0CE         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13743  00E440  C0A2  F0CF         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13744                           
 13745                           ;fat16.c: 377: _write_root(root_slot, &root_entry);
 13746  00E444  0EB0               	movlw	low fat_create_file@root_entry
 13747  00E446  6F88               	movwf	__write_root@data& (0+255),b
 13748  00E448  0E00               	movlw	high fat_create_file@root_entry
 13749  00E44A  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13750  00E44C  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 13751  00E44E  ECB6  F093         	call	__write_root
 13752                           
 13753                           ;fat16.c: 382: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 13754  00E452  0E00               	movlw	0
 13755  00E454  0100               	movlb	0	; () banked
 13756  00E456  6FAA               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 13757  00E458  0E01               	movlw	1
 13758  00E45A  6FA9               	movwf	fat_create_file@cluster_count& (0+255),b
 13759  00E45C  D02F               	goto	l3018
 13760  00E45E                     
 13761                           ; BSR set to: 0
 13762                           ;fat16.c: 383: {;fat16.c: 385: if(cluster_count==number_of_clusters)
 13763                           
 13764                           ; BSR set to: 0
 13765  00E45E  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13766  00E460  19A9               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 13767  00E462  E10E               	bnz	l21989
 13768  00E464  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13769  00E466  19AA               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 13770  00E468  A4D8               	btfss	status,2,c
 13771  00E46A  D00A               	goto	l3020
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;fat16.c: 386: {;fat16.c: 388: _write_fat(cluster, 0xFFFF);
 13775  00E46C  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 13776  00E470  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 13777  00E474  0EFF               	movlw	255
 13778  00E476  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 13779  00E478  698A               	setf	__write_fat@value& (0+255),b
 13780  00E47A  EC28  F099         	call	__write_fat	;wreg free
 13781                           
 13782                           ;fat16.c: 389: }
 13783  00E47E  D01B               	goto	l3021
 13784  00E480                     l3020:
 13785  00E480                     l21989:
 13786                           
 13787                           ;fat16.c: 390: else;fat16.c: 391: {;fat16.c: 393: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 13788  00E480  0E01               	movlw	1
 13789  00E482  0100               	movlb	0	; () banked
 13790  00E484  25AE               	addwf	fat_create_file@cluster& (0+255),w,b
 13791  00E486  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13792  00E488  0E00               	movlw	0
 13793  00E48A  21AF               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 13794  00E48C  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13795  00E48E  EC13  F08F         	call	__get_empty_cluster	;wreg free
 13796  00E492  C087  F0A7         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 13797  00E496  C088  F0A8         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 13798                           
 13799                           ;fat16.c: 395: _write_fat(cluster, next_cluster);
 13800  00E49A  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 13801  00E49E  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 13802  00E4A2  C0A7  F08A         	movff	fat_create_file@next_cluster,__write_fat@value
 13803  00E4A6  C0A8  F08B         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 13804  00E4AA  EC28  F099         	call	__write_fat	;wreg free
 13805                           
 13806                           ;fat16.c: 397: cluster = next_cluster;
 13807  00E4AE  C0A7  F0AE         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 13808  00E4B2  C0A8  F0AF         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 13809  00E4B6                     l3021:
 13810  00E4B6  0100               	movlb	0	; () banked
 13811  00E4B8  4BA9               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 13812  00E4BA  2BAA               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 13813  00E4BC                     l3018:
 13814                           
 13815                           ; BSR set to: 0
 13816                           
 13817                           ; BSR set to: 0
 13818  00E4BC  51A9               	movf	fat_create_file@cluster_count& (0+255),w,b
 13819  00E4BE  5DAC               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 13820  00E4C0  51AA               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 13821  00E4C2  59AD               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13822  00E4C4  B0D8               	btfsc	status,0,c
 13823  00E4C6  D7CB               	goto	l3019
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;fat16.c: 398: };fat16.c: 399: };fat16.c: 400: return root_slot;
 13827                           
 13828                           ; BSR set to: 0
 13829  00E4C8  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 13830  00E4CA  0012               	return	
 13831  00E4CC                     __end_of_fat_create_file:
 13832                           	opt stack 0
 13833                           tblptru	equ	0xFF8
 13834                           tblptrh	equ	0xFF7
 13835                           tblptrl	equ	0xFF6
 13836                           tablat	equ	0xFF5
 13837                           prodh	equ	0xFF4
 13838                           prodl	equ	0xFF3
 13839                           intcon	equ	0xFF2
 13840                           intcon2	equ	0xFF1
 13841                           intcon3	equ	0xFF0
 13842                           postinc0	equ	0xFEE
 13843                           wreg	equ	0xFE8
 13844                           postdec1	equ	0xFE5
 13845                           plusw1	equ	0xFE3
 13846                           fsr1h	equ	0xFE2
 13847                           fsr1l	equ	0xFE1
 13848                           indf2	equ	0xFDF
 13849                           postinc2	equ	0xFDE
 13850                           postdec2	equ	0xFDD
 13851                           plusw2	equ	0xFDB
 13852                           fsr2h	equ	0xFDA
 13853                           fsr2l	equ	0xFD9
 13854                           status	equ	0xFD8
 13855                           
 13856 ;; *************** function _fat_get_empty_clusters *****************
 13857 ;; Defined at:
 13858 ;;		line 132 in file "fat16.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;  maximum         2   39[BANK0 ] unsigned int 
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;  cluster         2   49[BANK0 ] unsigned int 
 13863 ;;  empty_cluste    2   47[BANK0 ] unsigned int 
 13864 ;;  value           2   45[BANK0 ] unsigned int 
 13865 ;;  offset          2   43[BANK0 ] unsigned int 
 13866 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  2   39[BANK0 ] unsigned int 
 13869 ;; Registers used:
 13870 ;;		wreg, status,2, status,0, cstack
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13877 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13879 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13880 ;;Total ram usage:       12 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:   14
 13883 ;; This function calls:
 13884 ;;		_flash_partial_read
 13885 ;; This function is called by:
 13886 ;;		_fat_create_file
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           	psect	text57
 13891  01165E                     __ptext57:
 13892                           	opt stack 0
 13893  01165E                     _fat_get_empty_clusters:
 13894                           	opt stack 14
 13895                           
 13896                           ;fat16.c: 134: uint16_t empty_clusters = 0;
 13897                           
 13898                           ;incstack = 0
 13899  01165E  0E00               	movlw	0
 13900  011660  0100               	movlb	0	; () banked
 13901  011662  6F90               	movwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),b
 13902  011664  0E00               	movlw	0
 13903  011666  6F8F               	movwf	fat_get_empty_clusters@empty_clusters& (0+255),b
 13904                           
 13905                           ;fat16.c: 135: uint16_t cluster;;fat16.c: 136: uint16_t fat_sector;;fat16.c: 137: uint16
      +                          _t offset;;fat16.c: 138: uint16_t value;;fat16.c: 141: for(cluster=2; cluster<(8170+2); 
      +                          ++cluster)
 13906  011668  0E00               	movlw	0
 13907  01166A  6F92               	movwf	(fat_get_empty_clusters@cluster+1)& (0+255),b
 13908  01166C  0E02               	movlw	2
 13909  01166E  6F91               	movwf	fat_get_empty_clusters@cluster& (0+255),b
 13910  011670  D034               	goto	l20163
 13911  011672                     
 13912                           ; BSR set to: 0
 13913                           ;fat16.c: 142: {;fat16.c: 143: fat_sector = cluster>>8;
 13914                           
 13915                           ; BSR set to: 0
 13916  011672  5192               	movf	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 13917  011674  6F89               	movwf	fat_get_empty_clusters@fat_sector& (0+255),b
 13918  011676  6B8A               	clrf	(fat_get_empty_clusters@fat_sector+1)& (0+255),b
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;fat16.c: 144: fat_sector += 2;
 13922  011678  0E02               	movlw	2
 13923  01167A  2789               	addwf	fat_get_empty_clusters@fat_sector& (0+255),f,b
 13924  01167C  0E00               	movlw	0
 13925  01167E  238A               	addwfc	(fat_get_empty_clusters@fat_sector+1)& (0+255),f,b
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;fat16.c: 145: offset = cluster & 0xFF;
 13929  011680  5191               	movf	fat_get_empty_clusters@cluster& (0+255),w,b
 13930  011682  6F8B               	movwf	fat_get_empty_clusters@offset& (0+255),b
 13931  011684  6B8C               	clrf	(fat_get_empty_clusters@offset+1)& (0+255),b
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;fat16.c: 146: offset <<= 1;
 13935  011686  90D8               	bcf	status,0,c
 13936  011688  378B               	rlcf	fat_get_empty_clusters@offset& (0+255),f,b
 13937  01168A  378C               	rlcf	(fat_get_empty_clusters@offset+1)& (0+255),f,b
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;fat16.c: 147: flash_partial_read(fat_sector, offset, 2, &value);
 13941  01168C  C089  F073         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 13942  011690  C08A  F074         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 13943  011694  C08B  F075         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 13944  011698  C08C  F076         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 13945  01169C  0E00               	movlw	0
 13946  01169E  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 13947  0116A0  0E02               	movlw	2
 13948  0116A2  6F77               	movwf	flash_partial_read@length& (0+255),b
 13949  0116A4  0E8D               	movlw	low fat_get_empty_clusters@value
 13950  0116A6  6F79               	movwf	flash_partial_read@data& (0+255),b
 13951  0116A8  0E00               	movlw	high fat_get_empty_clusters@value
 13952  0116AA  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 13953  0116AC  ECCA  F08F         	call	_flash_partial_read	;wreg free
 13954                           
 13955                           ;fat16.c: 148: if(value==0x0000)
 13956  0116B0  0100               	movlb	0	; () banked
 13957  0116B2  518D               	movf	fat_get_empty_clusters@value& (0+255),w,b
 13958  0116B4  118E               	iorwf	(fat_get_empty_clusters@value+1)& (0+255),w,b
 13959  0116B6  A4D8               	btfss	status,2,c
 13960  0116B8  D00E               	goto	l2970
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;fat16.c: 149: {;fat16.c: 150: ++empty_clusters;
 13964  0116BA  4B8F               	infsnz	fat_get_empty_clusters@empty_clusters& (0+255),f,b
 13965  0116BC  2B90               	incf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),f,b
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;fat16.c: 151: if(empty_clusters==maximum)
 13969  0116BE  5187               	movf	fat_get_empty_clusters@maximum& (0+255),w,b
 13970  0116C0  198F               	xorwf	fat_get_empty_clusters@empty_clusters& (0+255),w,b
 13971  0116C2  E109               	bnz	l20161
 13972  0116C4  5188               	movf	(fat_get_empty_clusters@maximum+1)& (0+255),w,b
 13973  0116C6  1990               	xorwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),w,b
 13974  0116C8  A4D8               	btfss	status,2,c
 13975  0116CA  D005               	goto	l2970
 13976                           
 13977                           ; BSR set to: 0
 13978                           ;fat16.c: 152: {;fat16.c: 153: return empty_clusters;
 13979  0116CC  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 13980  0116D0  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 13981  0116D4  0012               	return	
 13982  0116D6                     l2970:
 13983  0116D6                     l20161:
 13984                           
 13985                           ; BSR set to: 0
 13986  0116D6  4B91               	infsnz	fat_get_empty_clusters@cluster& (0+255),f,b
 13987  0116D8  2B92               	incf	(fat_get_empty_clusters@cluster+1)& (0+255),f,b
 13988  0116DA                     l20163:
 13989                           
 13990                           ; BSR set to: 0
 13991  0116DA  0EEC               	movlw	236
 13992  0116DC  5D91               	subwf	fat_get_empty_clusters@cluster& (0+255),w,b
 13993  0116DE  0E1F               	movlw	31
 13994  0116E0  5992               	subwfb	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 13995  0116E2  A0D8               	btfss	status,0,c
 13996  0116E4  D7C6               	goto	l2967
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;fat16.c: 154: };fat16.c: 155: };fat16.c: 156: };fat16.c: 157: return empty_clusters;
 14000  0116E6  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14001  0116EA  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14002                           
 14003                           ; BSR set to: 0
 14004  0116EE  0012               	return		;funcret
 14005  0116F0                     __end_of_fat_get_empty_clusters:
 14006                           	opt stack 0
 14007                           tblptru	equ	0xFF8
 14008                           tblptrh	equ	0xFF7
 14009                           tblptrl	equ	0xFF6
 14010                           tablat	equ	0xFF5
 14011                           prodh	equ	0xFF4
 14012                           prodl	equ	0xFF3
 14013                           intcon	equ	0xFF2
 14014                           intcon2	equ	0xFF1
 14015                           intcon3	equ	0xFF0
 14016                           postinc0	equ	0xFEE
 14017                           wreg	equ	0xFE8
 14018                           postdec1	equ	0xFE5
 14019                           plusw1	equ	0xFE3
 14020                           fsr1h	equ	0xFE2
 14021                           fsr1l	equ	0xFE1
 14022                           indf2	equ	0xFDF
 14023                           postinc2	equ	0xFDE
 14024                           postdec2	equ	0xFDD
 14025                           plusw2	equ	0xFDB
 14026                           fsr2h	equ	0xFDA
 14027                           fsr2l	equ	0xFD9
 14028                           status	equ	0xFD8
 14029                           
 14030 ;; *************** function _fat_find_file *****************
 14031 ;; Defined at:
 14032 ;;		line 262 in file "fat16.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;  name            2   39[BANK0 ] PTR unsigned char 
 14035 ;;		 -> filename(9), 
 14036 ;;  extension       2   41[BANK0 ] PTR unsigned char 
 14037 ;;		 -> extension(4), 
 14038 ;; Auto vars:     Size  Location     Type
 14039 ;;  buffer         11   43[BANK0 ] unsigned char [11]
 14040 ;;  offset          2   57[BANK0 ] unsigned int 
 14041 ;;  sector          2   55[BANK0 ] unsigned int 
 14042 ;;  slot            1   54[BANK0 ] unsigned char 
 14043 ;; Return value:  Size  Location     Type
 14044 ;;                  1    wreg      unsigned char 
 14045 ;; Registers used:
 14046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14047 ;; Tracked objects:
 14048 ;;		On entry : 0/0
 14049 ;;		On exit  : 0/0
 14050 ;;		Unchanged: 0/0
 14051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14053 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14055 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14056 ;;Total ram usage:       20 bytes
 14057 ;; Hardware stack levels used:    1
 14058 ;; Hardware stack levels required when called:   14
 14059 ;; This function calls:
 14060 ;;		_flash_partial_read
 14061 ;;		_strncmp
 14062 ;; This function is called by:
 14063 ;;		_fat_create_file
 14064 ;;		_log_write_to_disk
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           	psect	text58
 14069  010A52                     __ptext58:
 14070                           	opt stack 0
 14071  010A52                     _fat_find_file:
 14072                           	opt stack 15
 14073                           
 14074                           ;fat16.c: 264: uint8_t slot;;fat16.c: 265: uint16_t sector;;fat16.c: 266: uint16_t offse
      +                          t;;fat16.c: 267: uint8_t buffer[11];;fat16.c: 268: slot = 0;
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;incstack = 0
 14078  010A52  0E00               	movlw	0
 14079  010A54  0100               	movlb	0	; () banked
 14080  010A56  6F96               	movwf	fat_find_file@slot& (0+255),b
 14081                           
 14082                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 14083  010A58  0E00               	movlw	0
 14084  010A5A  6F98               	movwf	(fat_find_file@sector+1)& (0+255),b
 14085  010A5C  0E12               	movlw	18
 14086  010A5E  6F97               	movwf	fat_find_file@sector& (0+255),b
 14087  010A60                     l20199:
 14088                           
 14089                           ; BSR set to: 0
 14090  010A60  5198               	movf	(fat_find_file@sector+1)& (0+255),w,b
 14091  010A62  E159               	bnz	l20241
 14092  010A64  0E16               	movlw	22
 14093  010A66  5D97               	subwf	fat_find_file@sector& (0+255),w,b
 14094  010A68  B0D8               	btfsc	status,0,c
 14095  010A6A  D055               	goto	u19230
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;fat16.c: 270: {;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 14099                           
 14100                           ; BSR set to: 0
 14101                           
 14102                           ; BSR set to: 0
 14103  010A6C  0E00               	movlw	0
 14104  010A6E  6F9A               	movwf	(fat_find_file@offset+1)& (0+255),b
 14105  010A70  0E00               	movlw	0
 14106  010A72  6F99               	movwf	fat_find_file@offset& (0+255),b
 14107  010A74                     l20205:
 14108                           
 14109                           ; BSR set to: 0
 14110  010A74  0E02               	movlw	2
 14111  010A76  5D9A               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 14112  010A78  B0D8               	btfsc	status,0,c
 14113  010A7A  D04A               	goto	u19220
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;fat16.c: 272: {;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 14117                           
 14118                           ; BSR set to: 0
 14119                           
 14120                           ; BSR set to: 0
 14121  010A7C  C097  F073         	movff	fat_find_file@sector,flash_partial_read@page
 14122  010A80  C098  F074         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 14123  010A84  C099  F075         	movff	fat_find_file@offset,flash_partial_read@start
 14124  010A88  C09A  F076         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 14125  010A8C  0E00               	movlw	0
 14126  010A8E  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14127  010A90  0E0B               	movlw	11
 14128  010A92  6F77               	movwf	flash_partial_read@length& (0+255),b
 14129  010A94  0E8B               	movlw	low fat_find_file@buffer
 14130  010A96  6F79               	movwf	flash_partial_read@data& (0+255),b
 14131  010A98  0E00               	movlw	high fat_find_file@buffer
 14132  010A9A  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14133  010A9C  ECCA  F08F         	call	_flash_partial_read	;wreg free
 14134                           
 14135                           ;fat16.c: 274: if(buffer[0]==0x00)
 14136  010AA0  0100               	movlb	0	; () banked
 14137  010AA2  518B               	movf	fat_find_file@buffer& (0+255),w,b
 14138  010AA4  A4D8               	btfss	status,2,c
 14139  010AA6  D002               	goto	l3002
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;fat16.c: 275: {;fat16.c: 278: return 0xFF;
 14143  010AA8  0EFF               	movlw	255
 14144                           
 14145                           ; BSR set to: 0
 14146  010AAA  0012               	return	
 14147  010AAC                     l3002:
 14148                           
 14149                           ; BSR set to: 0
 14150                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 14151                           
 14152                           ; BSR set to: 0
 14153  010AAC  0EE5               	movlw	229
 14154  010AAE  198B               	xorwf	fat_find_file@buffer& (0+255),w,b
 14155  010AB0  B4D8               	btfsc	status,2,c
 14156  010AB2  D028               	goto	l3008
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;fat16.c: 286: else;fat16.c: 287: {;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 14160                           
 14161                           ; BSR set to: 0
 14162                           
 14163                           ; BSR set to: 0
 14164                           ;fat16.c: 281: {;fat16.c: 285: }
 14165  010AB4  C087  F060         	movff	fat_find_file@name,strncmp@s1
 14166  010AB8  C088  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 14167  010ABC  0E8B               	movlw	low fat_find_file@buffer
 14168  010ABE  6F62               	movwf	strncmp@s2& (0+255),b
 14169  010AC0  0E00               	movlw	high fat_find_file@buffer
 14170  010AC2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14171  010AC4  0E00               	movlw	0
 14172  010AC6  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14173  010AC8  0E08               	movlw	8
 14174  010ACA  6F64               	movwf	strncmp@len& (0+255),b
 14175  010ACC  EC17  F08E         	call	_strncmp	;wreg free
 14176  010AD0  0100               	movlb	0	; () banked
 14177  010AD2  5160               	movf	?_strncmp& (0+255),w,b
 14178  010AD4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14179  010AD6  A4D8               	btfss	status,2,c
 14180  010AD8  D015               	goto	l3008
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;fat16.c: 290: {;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 14184  010ADA  C089  F060         	movff	fat_find_file@extension,strncmp@s1
 14185  010ADE  C08A  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 14186  010AE2  0E93               	movlw	low (fat_find_file@buffer+8)
 14187  010AE4  6F62               	movwf	strncmp@s2& (0+255),b
 14188  010AE6  0E00               	movlw	high (fat_find_file@buffer+8)
 14189  010AE8  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14190  010AEA  0E00               	movlw	0
 14191  010AEC  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14192  010AEE  0E03               	movlw	3
 14193  010AF0  6F64               	movwf	strncmp@len& (0+255),b
 14194  010AF2  EC17  F08E         	call	_strncmp	;wreg free
 14195  010AF6  0100               	movlb	0	; () banked
 14196  010AF8  5160               	movf	?_strncmp& (0+255),w,b
 14197  010AFA  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14198  010AFC  A4D8               	btfss	status,2,c
 14199  010AFE  D002               	goto	l3008
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;fat16.c: 293: {;fat16.c: 296: return slot;
 14203  010B00  5196               	movf	fat_find_file@slot& (0+255),w,b
 14204                           
 14205                           ; BSR set to: 0
 14206  010B02  0012               	return	
 14207  010B04                     l3008:
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;fat16.c: 297: };fat16.c: 298: };fat16.c: 299: };fat16.c: 300: ++slot;
 14211                           
 14212                           ; BSR set to: 0
 14213                           
 14214                           ; BSR set to: 0
 14215                           
 14216                           ; BSR set to: 0
 14217                           
 14218                           ; BSR set to: 0
 14219  010B04  2B96               	incf	fat_find_file@slot& (0+255),f,b
 14220                           
 14221                           ; BSR set to: 0
 14222  010B06  0E20               	movlw	32
 14223  010B08  2799               	addwf	fat_find_file@offset& (0+255),f,b
 14224  010B0A  0E00               	movlw	0
 14225  010B0C  239A               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 14226  010B0E  D7B2               	goto	l20205
 14227  010B10                     u19220:
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ; BSR set to: 0
 14232  010B10  4B97               	infsnz	fat_find_file@sector& (0+255),f,b
 14233  010B12  2B98               	incf	(fat_find_file@sector+1)& (0+255),f,b
 14234  010B14  D7A5               	goto	l20199
 14235  010B16                     u19230:
 14236  010B16                     l20241:
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;fat16.c: 301: };fat16.c: 302: };fat16.c: 303: return 0xFF;
 14240  010B16  0EFF               	movlw	255
 14241  010B18  0012               	return	
 14242  010B1A                     __end_of_fat_find_file:
 14243                           	opt stack 0
 14244                           tblptru	equ	0xFF8
 14245                           tblptrh	equ	0xFF7
 14246                           tblptrl	equ	0xFF6
 14247                           tablat	equ	0xFF5
 14248                           prodh	equ	0xFF4
 14249                           prodl	equ	0xFF3
 14250                           intcon	equ	0xFF2
 14251                           intcon2	equ	0xFF1
 14252                           intcon3	equ	0xFF0
 14253                           postinc0	equ	0xFEE
 14254                           wreg	equ	0xFE8
 14255                           postdec1	equ	0xFE5
 14256                           plusw1	equ	0xFE3
 14257                           fsr1h	equ	0xFE2
 14258                           fsr1l	equ	0xFE1
 14259                           indf2	equ	0xFDF
 14260                           postinc2	equ	0xFDE
 14261                           postdec2	equ	0xFDD
 14262                           plusw2	equ	0xFDB
 14263                           fsr2h	equ	0xFDA
 14264                           fsr2l	equ	0xFD9
 14265                           status	equ	0xFD8
 14266                           
 14267 ;; *************** function _strncmp *****************
 14268 ;; Defined at:
 14269 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 14272 ;;		 -> extension(4), filename(9), 
 14273 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 14274 ;;		 -> fat_find_file@buffer(11), 
 14275 ;;  len             2    4[BANK0 ] unsigned int 
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  2    0[BANK0 ] int 
 14280 ;; Registers used:
 14281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14287 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14289 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14290 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14291 ;;Total ram usage:        9 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:   10
 14294 ;; This function calls:
 14295 ;;		Nothing
 14296 ;; This function is called by:
 14297 ;;		_fat_find_file
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text59
 14302  011C2E                     __ptext59:
 14303                           	opt stack 0
 14304  011C2E                     _strncmp:
 14305                           	opt stack 18
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;incstack = 0
 14309  011C2E  D031               	goto	l4013
 14310  011C30                     l19419:
 14311  011C30  C060  FFD9         	movff	strncmp@s1,fsr2l
 14312  011C34  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14313  011C38  50DF               	movf	indf2,w,c
 14314  011C3A  B4D8               	btfsc	status,2,c
 14315  011C3C  D00C               	goto	u18320
 14316  011C3E  C062  FFD9         	movff	strncmp@s2,fsr2l
 14317  011C42  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14318  011C46  C060  FFE1         	movff	strncmp@s1,fsr1l
 14319  011C4A  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 14320  011C4E  50DE               	movf	postinc2,w,c
 14321  011C50  18E6               	xorwf	postinc1,w,c
 14322  011C52  B4D8               	btfsc	status,2,c
 14323  011C54  D019               	goto	l4015
 14324  011C56                     u18320:
 14325  011C56  C062  FFD9         	movff	strncmp@s2,fsr2l
 14326  011C5A  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14327  011C5E  50DF               	movf	indf2,w,c
 14328  011C60  0100               	movlb	0	; () banked
 14329  011C62  6F66               	movwf	??_strncmp& (0+255),b
 14330  011C64  6B67               	clrf	(??_strncmp+1)& (0+255),b
 14331  011C66  1F66               	comf	??_strncmp& (0+255),f,b
 14332  011C68  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 14333  011C6A  4B66               	infsnz	??_strncmp& (0+255),f,b
 14334  011C6C  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 14335  011C6E  C060  FFD9         	movff	strncmp@s1,fsr2l
 14336  011C72  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14337  011C76  50DF               	movf	indf2,w,c
 14338  011C78  6F68               	movwf	(??_strncmp+2)& (0+255),b
 14339  011C7A  5168               	movf	(??_strncmp+2)& (0+255),w,b
 14340  011C7C  2566               	addwf	??_strncmp& (0+255),w,b
 14341  011C7E  6F60               	movwf	?_strncmp& (0+255),b
 14342  011C80  0E00               	movlw	0
 14343  011C82  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 14344  011C84  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14345                           
 14346                           ; BSR set to: 0
 14347  011C86  0012               	return	
 14348  011C88                     l4015:
 14349                           
 14350                           ; BSR set to: 0
 14351  011C88  0100               	movlb	0	; () banked
 14352  011C8A  4B60               	infsnz	strncmp@s1& (0+255),f,b
 14353  011C8C  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 14354  011C8E  4B62               	infsnz	strncmp@s2& (0+255),f,b
 14355  011C90  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 14356  011C92                     l4013:
 14357                           
 14358                           ; BSR set to: 0
 14359  011C92  0100               	movlb	0	; () banked
 14360  011C94  0764               	decf	strncmp@len& (0+255),f,b
 14361  011C96  A0D8               	btfss	status,0,c
 14362  011C98  0765               	decf	(strncmp@len+1)& (0+255),f,b
 14363  011C9A  2964               	incf	strncmp@len& (0+255),w,b
 14364  011C9C  E1C9               	bnz	l19419
 14365  011C9E  2965               	incf	(strncmp@len+1)& (0+255),w,b
 14366  011CA0  A4D8               	btfss	status,2,c
 14367  011CA2  D7C6               	goto	l4014
 14368                           
 14369                           ; BSR set to: 0
 14370                           
 14371                           ; BSR set to: 0
 14372  011CA4  0E00               	movlw	0
 14373  011CA6  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14374  011CA8  0E00               	movlw	0
 14375  011CAA  6F60               	movwf	?_strncmp& (0+255),b
 14376  011CAC  0012               	return	
 14377  011CAE                     __end_of_strncmp:
 14378                           	opt stack 0
 14379                           tblptru	equ	0xFF8
 14380                           tblptrh	equ	0xFF7
 14381                           tblptrl	equ	0xFF6
 14382                           tablat	equ	0xFF5
 14383                           prodh	equ	0xFF4
 14384                           prodl	equ	0xFF3
 14385                           intcon	equ	0xFF2
 14386                           intcon2	equ	0xFF1
 14387                           intcon3	equ	0xFF0
 14388                           postinc0	equ	0xFEE
 14389                           wreg	equ	0xFE8
 14390                           postinc1	equ	0xFE6
 14391                           postdec1	equ	0xFE5
 14392                           plusw1	equ	0xFE3
 14393                           fsr1h	equ	0xFE2
 14394                           fsr1l	equ	0xFE1
 14395                           indf2	equ	0xFDF
 14396                           postinc2	equ	0xFDE
 14397                           postdec2	equ	0xFDD
 14398                           plusw2	equ	0xFDB
 14399                           fsr2h	equ	0xFDA
 14400                           fsr2l	equ	0xFD9
 14401                           status	equ	0xFD8
 14402                           
 14403 ;; *************** function __get_available_root_entry *****************
 14404 ;; Defined at:
 14405 ;;		line 96 in file "fat16.c"
 14406 ;; Parameters:    Size  Location     Type
 14407 ;;		None
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;  file_number     1   46[BANK0 ] unsigned char 
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  1    wreg      unsigned char 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0, cstack
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14423 ;;Total ram usage:        1 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:   15
 14426 ;; This function calls:
 14427 ;;		__root_is_available
 14428 ;; This function is called by:
 14429 ;;		_fat_create_file
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text60
 14434  0137F6                     __ptext60:
 14435                           	opt stack 0
 14436  0137F6                     __get_available_root_entry:
 14437                           	opt stack 13
 14438                           
 14439                           ;fat16.c: 98: uint8_t file_number;;fat16.c: 99: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;incstack = 0
 14443  0137F6  0E00               	movlw	0
 14444  0137F8  0100               	movlb	0	; () banked
 14445  0137FA  6F8E               	movwf	__get_available_root_entry@file_number& (0+255),b
 14446  0137FC                     l20091:
 14447                           
 14448                           ; BSR set to: 0
 14449  0137FC  0E3F               	movlw	63
 14450  0137FE  658E               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14451  013800  D001               	goto	l2955
 14452  013802  D00C               	goto	u19060
 14453  013804                     l2955:
 14454                           
 14455                           ; BSR set to: 0
 14456                           ;fat16.c: 100: {;fat16.c: 101: if(_root_is_available(file_number))
 14457                           
 14458                           ; BSR set to: 0
 14459  013804  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14460  013806  EC97  F08E         	call	__root_is_available
 14461  01380A  0900               	iorlw	0
 14462  01380C  B4D8               	btfsc	status,2,c
 14463  01380E  D003               	goto	l2957
 14464                           
 14465                           ;fat16.c: 102: {;fat16.c: 103: return file_number;
 14466  013810  0100               	movlb	0	; () banked
 14467  013812  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14468                           
 14469                           ; BSR set to: 0
 14470  013814  0012               	return	
 14471  013816                     l2957:
 14472                           
 14473                           ; BSR set to: 0
 14474  013816  0100               	movlb	0	; () banked
 14475  013818  2B8E               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14476  01381A  D7F0               	goto	l20091
 14477  01381C                     u19060:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;fat16.c: 104: };fat16.c: 105: };fat16.c: 106: return 0xFF;
 14481                           
 14482                           ; BSR set to: 0
 14483  01381C  0EFF               	movlw	255
 14484  01381E  0012               	return	
 14485  013820                     __end_of__get_available_root_entry:
 14486                           	opt stack 0
 14487                           tblptru	equ	0xFF8
 14488                           tblptrh	equ	0xFF7
 14489                           tblptrl	equ	0xFF6
 14490                           tablat	equ	0xFF5
 14491                           prodh	equ	0xFF4
 14492                           prodl	equ	0xFF3
 14493                           intcon	equ	0xFF2
 14494                           intcon2	equ	0xFF1
 14495                           intcon3	equ	0xFF0
 14496                           postinc0	equ	0xFEE
 14497                           wreg	equ	0xFE8
 14498                           postinc1	equ	0xFE6
 14499                           postdec1	equ	0xFE5
 14500                           plusw1	equ	0xFE3
 14501                           fsr1h	equ	0xFE2
 14502                           fsr1l	equ	0xFE1
 14503                           indf2	equ	0xFDF
 14504                           postinc2	equ	0xFDE
 14505                           postdec2	equ	0xFDD
 14506                           plusw2	equ	0xFDB
 14507                           fsr2h	equ	0xFDA
 14508                           fsr2l	equ	0xFD9
 14509                           status	equ	0xFD8
 14510                           
 14511 ;; *************** function _fat_append_to_file *****************
 14512 ;; Defined at:
 14513 ;;		line 460 in file "fat16.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;  file_number     1    wreg     unsigned char 
 14516 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 14517 ;;  data            2   51[BANK0 ] PTR unsigned char 
 14518 ;;		 -> log_write_to_disk@log_entry(32), 
 14519 ;; Auto vars:     Size  Location     Type
 14520 ;;  file_number     1   73[BANK0 ] unsigned char 
 14521 ;;  root           32   80[BANK0 ] struct .
 14522 ;;  position        4   76[BANK0 ] unsigned long 
 14523 ;;  file_size       4   63[BANK0 ] unsigned long 
 14524 ;;  length          2   74[BANK0 ] unsigned int 
 14525 ;;  offset          2   71[BANK0 ] unsigned int 
 14526 ;;  fat_cluster     2   69[BANK0 ] unsigned int 
 14527 ;;  new_cluster     2   67[BANK0 ] unsigned int 
 14528 ;;  sector          2   61[BANK0 ] unsigned int 
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      unsigned char 
 14531 ;; Registers used:
 14532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14533 ;; Tracked objects:
 14534 ;;		On entry : 0/0
 14535 ;;		On exit  : 0/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14539 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14540 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14541 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14542 ;;Total ram usage:       63 bytes
 14543 ;; Hardware stack levels used:    1
 14544 ;; Hardware stack levels required when called:   16
 14545 ;; This function calls:
 14546 ;;		__get_empty_cluster
 14547 ;;		__read_fat
 14548 ;;		__read_root
 14549 ;;		__root_is_available
 14550 ;;		__sector_from_cluster
 14551 ;;		__update_modified_time
 14552 ;;		__write_fat
 14553 ;;		__write_root
 14554 ;;		_flash_partial_write
 14555 ;; This function is called by:
 14556 ;;		_log_write_to_disk
 14557 ;; This function uses a non-reentrant model
 14558 ;;
 14559                           
 14560                           	psect	text61
 14561  00D738                     __ptext61:
 14562                           	opt stack 0
 14563  00D738                     _fat_append_to_file:
 14564                           	opt stack 13
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;incstack = 0
 14568                           ;fat_append_to_file@file_number stored from wreg
 14569  00D738  0100               	movlb	0	; () banked
 14570  00D73A  6FA9               	movwf	fat_append_to_file@file_number& (0+255),b
 14571                           
 14572                           ;fat16.c: 462: rootEntry_t root;;fat16.c: 463: uint32_t file_size;;fat16.c: 464: uint16_
      +                          t fat_cluster;;fat16.c: 465: uint16_t new_cluster;;fat16.c: 466: uint32_t position;;fat1
      +                          6.c: 467: uint16_t offset;;fat16.c: 468: uint16_t sector;;fat16.c: 469: uint16_t length;
      +                          ;fat16.c: 472: if(file_number>=64)
 14573  00D73C  0E3F               	movlw	63
 14574  00D73E  0100               	movlb	0	; () banked
 14575  00D740  65A9               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 14576  00D742  D001               	goto	l3038
 14577  00D744  0012               	return	
 14578  00D746                     l3038:
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;fat16.c: 476: };fat16.c: 479: if(_root_is_available(file_number))
 14582                           
 14583                           ; BSR set to: 0
 14584  00D746  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14585  00D748  EC97  F08E         	call	__root_is_available
 14586  00D74C  0900               	iorlw	0
 14587  00D74E  A4D8               	btfss	status,2,c
 14588  00D750  0012               	return	
 14589                           
 14590                           ;fat16.c: 483: };fat16.c: 486: _read_root(file_number, &root);
 14591                           
 14592                           ;fat16.c: 480: {;fat16.c: 482: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 14593  00D752  0EB0               	movlw	low fat_append_to_file@root
 14594  00D754  0100               	movlb	0	; () banked
 14595  00D756  6F87               	movwf	__read_root@data& (0+255),b
 14596  00D758  0E00               	movlw	high fat_append_to_file@root
 14597  00D75A  6F88               	movwf	(__read_root@data+1)& (0+255),b
 14598  00D75C  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14599  00D75E  ECE4  F093         	call	__read_root
 14600                           
 14601                           ;fat16.c: 487: file_size = root.fileSize;
 14602  00D762  C0CC  F09F         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 14603  00D766  C0CD  F0A0         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 14604  00D76A  C0CE  F0A1         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 14605  00D76E  C0CF  F0A2         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 14606                           
 14607                           ;fat16.c: 488: fat_cluster = root.firstCluster;
 14608  00D772  C0CA  F0A5         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 14609  00D776  C0CB  F0A6         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 14610                           
 14611                           ;fat16.c: 491: position = 0;
 14612  00D77A  0E00               	movlw	0
 14613  00D77C  0100               	movlb	0	; () banked
 14614  00D77E  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14615  00D780  0E00               	movlw	0
 14616  00D782  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14617  00D784  0E00               	movlw	0
 14618  00D786  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14619  00D788  0E00               	movlw	0
 14620  00D78A  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14621                           
 14622                           ;fat16.c: 492: while((file_size-position)>512)
 14623  00D78C  D013               	goto	l3041
 14624  00D78E                     l22017:
 14625                           
 14626                           ; BSR set to: 0
 14627                           ;fat16.c: 493: {;fat16.c: 494: fat_cluster = _read_fat(fat_cluster);
 14628  00D78E  C0A5  F087         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 14629  00D792  C0A6  F088         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 14630  00D796  ECE9  F097         	call	__read_fat	;wreg free
 14631  00D79A  C087  F0A5         	movff	?__read_fat,fat_append_to_file@fat_cluster
 14632  00D79E  C088  F0A6         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 14633                           
 14634                           ;fat16.c: 495: position += 512;
 14635  00D7A2  0E00               	movlw	0
 14636  00D7A4  0100               	movlb	0	; () banked
 14637  00D7A6  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 14638  00D7A8  0E02               	movlw	2
 14639  00D7AA  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 14640  00D7AC  0E00               	movlw	0
 14641  00D7AE  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 14642  00D7B0  0E00               	movlw	0
 14643  00D7B2  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 14644  00D7B4                     l3041:
 14645                           
 14646                           ; BSR set to: 0
 14647                           
 14648                           ; BSR set to: 0
 14649  00D7B4  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14650  00D7B8  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14651  00D7BC  C0AE  F097         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 14652  00D7C0  C0AF  F098         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 14653  00D7C4  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14654  00D7C6  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14655  00D7C8  1F97               	comf	(??_fat_append_to_file+2)& (0+255),f,b
 14656  00D7CA  1F98               	comf	(??_fat_append_to_file+3)& (0+255),f,b
 14657  00D7CC  2B95               	incf	??_fat_append_to_file& (0+255),f,b
 14658  00D7CE  0E00               	movlw	0
 14659  00D7D0  2396               	addwfc	(??_fat_append_to_file+1)& (0+255),f,b
 14660  00D7D2  2397               	addwfc	(??_fat_append_to_file+2)& (0+255),f,b
 14661  00D7D4  2398               	addwfc	(??_fat_append_to_file+3)& (0+255),f,b
 14662  00D7D6  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14663  00D7D8  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14664  00D7DA  6F99               	movwf	(??_fat_append_to_file+4)& (0+255),b
 14665  00D7DC  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14666  00D7DE  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14667  00D7E0  6F9A               	movwf	(??_fat_append_to_file+5)& (0+255),b
 14668  00D7E2  51A1               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 14669  00D7E4  2197               	addwfc	(??_fat_append_to_file+2)& (0+255),w,b
 14670  00D7E6  6F9B               	movwf	(??_fat_append_to_file+6)& (0+255),b
 14671  00D7E8  51A2               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 14672  00D7EA  2198               	addwfc	(??_fat_append_to_file+3)& (0+255),w,b
 14673  00D7EC  6F9C               	movwf	(??_fat_append_to_file+7)& (0+255),b
 14674  00D7EE  519C               	movf	(??_fat_append_to_file+7)& (0+255),w,b
 14675  00D7F0  119B               	iorwf	(??_fat_append_to_file+6)& (0+255),w,b
 14676  00D7F2  E1CD               	bnz	l22017
 14677  00D7F4  0599               	decf	(??_fat_append_to_file+4)& (0+255),w,b
 14678  00D7F6  0E02               	movlw	2
 14679  00D7F8  599A               	subwfb	(??_fat_append_to_file+5)& (0+255),w,b
 14680  00D7FA  B0D8               	btfsc	status,0,c
 14681  00D7FC  D7C8               	goto	l3042
 14682                           
 14683                           ; BSR set to: 0
 14684                           ;fat16.c: 496: };fat16.c: 499: offset = file_size - position;
 14685                           
 14686                           ; BSR set to: 0
 14687  00D7FE  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 14688  00D802  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 14689  00D806  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14690  00D808  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14691  00D80A  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 14692  00D80C  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 14693  00D80E  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 14694  00D810  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14695  00D812  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 14696  00D814  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 14697  00D816  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14698  00D818  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;fat16.c: 502: position = 0;
 14702  00D81A  0E00               	movlw	0
 14703  00D81C  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 14704  00D81E  0E00               	movlw	0
 14705  00D820  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 14706  00D822  0E00               	movlw	0
 14707  00D824  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 14708  00D826  0E00               	movlw	0
 14709  00D828  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 14710                           
 14711                           ;fat16.c: 503: while(position < number_of_bytes)
 14712  00D82A  D070               	goto	l3044
 14713  00D82C                     
 14714                           ; BSR set to: 0
 14715                           ;fat16.c: 504: {;fat16.c: 506: if(offset==512)
 14716                           
 14717                           ; BSR set to: 0
 14718  00D82C  0E02               	movlw	2
 14719  00D82E  19A8               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 14720  00D830  11A7               	iorwf	fat_append_to_file@offset& (0+255),w,b
 14721  00D832  A4D8               	btfss	status,2,c
 14722  00D834  D027               	goto	l3046
 14723                           
 14724                           ; BSR set to: 0
 14725                           ;fat16.c: 507: {;fat16.c: 510: new_cluster = _get_empty_cluster(0x0000);
 14726  00D836  0E00               	movlw	0
 14727  00D838  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14728  00D83A  0E00               	movlw	0
 14729  00D83C  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14730  00D83E  EC13  F08F         	call	__get_empty_cluster	;wreg free
 14731  00D842  C087  F0A3         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 14732  00D846  C088  F0A4         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 14733                           
 14734                           ;fat16.c: 512: _write_fat(fat_cluster, new_cluster);
 14735  00D84A  C0A5  F088         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 14736  00D84E  C0A6  F089         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 14737  00D852  C0A3  F08A         	movff	fat_append_to_file@new_cluster,__write_fat@value
 14738  00D856  C0A4  F08B         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 14739  00D85A  EC28  F099         	call	__write_fat	;wreg free
 14740                           
 14741                           ;fat16.c: 514: _write_fat(new_cluster, 0xFFFF);
 14742  00D85E  C0A3  F088         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 14743  00D862  C0A4  F089         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 14744  00D866  0EFF               	movlw	255
 14745  00D868  0100               	movlb	0	; () banked
 14746  00D86A  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 14747  00D86C  698A               	setf	__write_fat@value& (0+255),b
 14748  00D86E  EC28  F099         	call	__write_fat	;wreg free
 14749                           
 14750                           ;fat16.c: 516: fat_cluster = new_cluster;
 14751  00D872  C0A3  F0A5         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 14752  00D876  C0A4  F0A6         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 14753                           
 14754                           ;fat16.c: 517: offset = 0;
 14755  00D87A  0E00               	movlw	0
 14756  00D87C  0100               	movlb	0	; () banked
 14757  00D87E  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 14758  00D880  0E00               	movlw	0
 14759  00D882  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 14760  00D884                     l3046:
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;fat16.c: 518: };fat16.c: 521: sector = _sector_from_cluster(fat_cluster);
 14764                           
 14765                           ; BSR set to: 0
 14766  00D884  C0A5  F060         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 14767  00D888  C0A6  F061         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 14768  00D88C  ECE5  F09E         	call	__sector_from_cluster	;wreg free
 14769  00D890  C060  F09D         	movff	?__sector_from_cluster,fat_append_to_file@sector
 14770  00D894  C061  F09E         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 14771                           
 14772                           ;fat16.c: 524: length = 512 - offset;
 14773  00D898  C0A7  F095         	movff	fat_append_to_file@offset,??_fat_append_to_file
 14774  00D89C  C0A8  F096         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 14775  00D8A0  0100               	movlb	0	; () banked
 14776  00D8A2  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 14777  00D8A4  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 14778  00D8A6  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 14779  00D8A8  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 14780  00D8AA  0E00               	movlw	0
 14781  00D8AC  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 14782  00D8AE  6FAA               	movwf	fat_append_to_file@length& (0+255),b
 14783  00D8B0  0E02               	movlw	2
 14784  00D8B2  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 14785  00D8B4  6FAB               	movwf	(fat_append_to_file@length+1)& (0+255),b
 14786                           
 14787                           ; BSR set to: 0
 14788                           ;fat16.c: 525: if(length>number_of_bytes)
 14789  00D8B6  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14790  00D8B8  5D91               	subwf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14791  00D8BA  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14792  00D8BC  5992               	subwfb	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14793  00D8BE  B0D8               	btfsc	status,0,c
 14794  00D8C0  D004               	goto	l3047
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;fat16.c: 526: {;fat16.c: 527: length = number_of_bytes;
 14798  00D8C2  C091  F0AA         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 14799  00D8C6  C092  F0AB         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 14800  00D8CA                     l3047:
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;fat16.c: 528: };fat16.c: 531: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 14804                           
 14805                           ; BSR set to: 0
 14806  00D8CA  C09D  F07F         	movff	fat_append_to_file@sector,flash_partial_write@page
 14807  00D8CE  C09E  F080         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 14808  00D8D2  C0A7  F081         	movff	fat_append_to_file@offset,flash_partial_write@start
 14809  00D8D6  C0A8  F082         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 14810  00D8DA  C0AA  F083         	movff	fat_append_to_file@length,flash_partial_write@length
 14811  00D8DE  C0AB  F084         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 14812  00D8E2  51AC               	movf	fat_append_to_file@position& (0+255),w,b
 14813  00D8E4  2593               	addwf	fat_append_to_file@data& (0+255),w,b
 14814  00D8E6  6F85               	movwf	flash_partial_write@data& (0+255),b
 14815  00D8E8  51AD               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 14816  00D8EA  2194               	addwfc	(fat_append_to_file@data+1)& (0+255),w,b
 14817  00D8EC  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 14818  00D8EE  EC22  F091         	call	_flash_partial_write	;wreg free
 14819                           
 14820                           ;fat16.c: 534: position += length;
 14821  00D8F2  0100               	movlb	0	; () banked
 14822  00D8F4  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14823  00D8F6  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 14824  00D8F8  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14825  00D8FA  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 14826  00D8FC  0E00               	movlw	0
 14827  00D8FE  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 14828  00D900  0E00               	movlw	0
 14829  00D902  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;fat16.c: 535: offset += length;
 14833  00D904  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 14834  00D906  27A7               	addwf	fat_append_to_file@offset& (0+255),f,b
 14835  00D908  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 14836  00D90A  23A8               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 14837  00D90C                     l3044:
 14838                           
 14839                           ; BSR set to: 0
 14840                           
 14841                           ; BSR set to: 0
 14842  00D90C  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14843  00D90E  6F95               	movwf	??_fat_append_to_file& (0+255),b
 14844  00D910  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14845  00D912  6F96               	movwf	(??_fat_append_to_file+1)& (0+255),b
 14846  00D914  6B97               	clrf	(??_fat_append_to_file+2)& (0+255),b
 14847  00D916  6B98               	clrf	(??_fat_append_to_file+3)& (0+255),b
 14848  00D918  5195               	movf	??_fat_append_to_file& (0+255),w,b
 14849  00D91A  5DAC               	subwf	fat_append_to_file@position& (0+255),w,b
 14850  00D91C  5196               	movf	(??_fat_append_to_file+1)& (0+255),w,b
 14851  00D91E  59AD               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 14852  00D920  5197               	movf	(??_fat_append_to_file+2)& (0+255),w,b
 14853  00D922  59AE               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 14854  00D924  5198               	movf	(??_fat_append_to_file+3)& (0+255),w,b
 14855  00D926  59AF               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 14856  00D928  A0D8               	btfss	status,0,c
 14857  00D92A  D780               	goto	l3045
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;fat16.c: 536: };fat16.c: 540: root.fileSize += number_of_bytes;
 14861                           
 14862                           ; BSR set to: 0
 14863  00D92C  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 14864  00D92E  27CC               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 14865  00D930  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 14866  00D932  23CD               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 14867  00D934  0E00               	movlw	0
 14868  00D936  23CE               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 14869  00D938  0E00               	movlw	0
 14870  00D93A  23CF               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;fat16.c: 541: _update_modified_time(&root);
 14874  00D93C  0EB0               	movlw	low fat_append_to_file@root
 14875  00D93E  6F6D               	movwf	__update_modified_time@root& (0+255),b
 14876  00D940  0E00               	movlw	high fat_append_to_file@root
 14877  00D942  6F6E               	movwf	(__update_modified_time@root+1)& (0+255),b
 14878  00D944  EC1C  F09A         	call	__update_modified_time	;wreg free
 14879                           
 14880                           ;fat16.c: 542: _write_root(file_number, &root);
 14881  00D948  0EB0               	movlw	low fat_append_to_file@root
 14882  00D94A  0100               	movlb	0	; () banked
 14883  00D94C  6F88               	movwf	__write_root@data& (0+255),b
 14884  00D94E  0E00               	movlw	high fat_append_to_file@root
 14885  00D950  6F89               	movwf	(__write_root@data+1)& (0+255),b
 14886  00D952  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 14887  00D954  ECB6  F093         	call	__write_root
 14888  00D958  0012               	return	
 14889  00D95A                     __end_of_fat_append_to_file:
 14890                           	opt stack 0
 14891                           tblptru	equ	0xFF8
 14892                           tblptrh	equ	0xFF7
 14893                           tblptrl	equ	0xFF6
 14894                           tablat	equ	0xFF5
 14895                           prodh	equ	0xFF4
 14896                           prodl	equ	0xFF3
 14897                           intcon	equ	0xFF2
 14898                           intcon2	equ	0xFF1
 14899                           intcon3	equ	0xFF0
 14900                           postinc0	equ	0xFEE
 14901                           wreg	equ	0xFE8
 14902                           postinc1	equ	0xFE6
 14903                           postdec1	equ	0xFE5
 14904                           plusw1	equ	0xFE3
 14905                           fsr1h	equ	0xFE2
 14906                           fsr1l	equ	0xFE1
 14907                           indf2	equ	0xFDF
 14908                           postinc2	equ	0xFDE
 14909                           postdec2	equ	0xFDD
 14910                           plusw2	equ	0xFDB
 14911                           fsr2h	equ	0xFDA
 14912                           fsr2l	equ	0xFD9
 14913                           status	equ	0xFD8
 14914                           
 14915 ;; *************** function __write_root *****************
 14916 ;; Defined at:
 14917 ;;		line 184 in file "fat16.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;  slot            1    wreg     unsigned char 
 14920 ;;  data            2   40[BANK0 ] PTR struct .
 14921 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;  slot            1   47[BANK0 ] unsigned char 
 14924 ;;  offset          2   45[BANK0 ] unsigned int 
 14925 ;;  root_sector     2   43[BANK0 ] unsigned int 
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  1    wreg      void 
 14928 ;; Registers used:
 14929 ;;		wreg, status,2, status,0, cstack
 14930 ;; Tracked objects:
 14931 ;;		On entry : 0/0
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14936 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14937 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14938 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14939 ;;Total ram usage:        8 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:   15
 14942 ;; This function calls:
 14943 ;;		_flash_partial_write
 14944 ;; This function is called by:
 14945 ;;		_fat_create_file
 14946 ;;		_fat_append_to_file
 14947 ;;		_fat_rename_file
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           	psect	text62
 14952  01276C                     __ptext62:
 14953                           	opt stack 0
 14954  01276C                     __write_root:
 14955                           	opt stack 13
 14956                           
 14957                           ;incstack = 0
 14958                           ;__write_root@slot stored from wreg
 14959  01276C  0100               	movlb	0	; () banked
 14960  01276E  6F8F               	movwf	__write_root@slot& (0+255),b
 14961                           
 14962                           ;fat16.c: 186: uint16_t root_sector;;fat16.c: 187: uint16_t offset;;fat16.c: 188: root_s
      +                          ector = (slot >> 4) + 18;
 14963  012770  C08F  F08A         	movff	__write_root@slot,??__write_root
 14964  012774  0100               	movlb	0	; () banked
 14965  012776  3B8A               	swapf	??__write_root& (0+255),f,b
 14966  012778  0E0F               	movlw	15
 14967  01277A  178A               	andwf	??__write_root& (0+255),f,b
 14968  01277C  0E12               	movlw	18
 14969  01277E  258A               	addwf	??__write_root& (0+255),w,b
 14970  012780  6F8B               	movwf	__write_root@root_sector& (0+255),b
 14971  012782  6B8C               	clrf	(__write_root@root_sector+1)& (0+255),b
 14972  012784  0E00               	movlw	0
 14973  012786  238C               	addwfc	(__write_root@root_sector+1)& (0+255),f,b
 14974                           
 14975                           ;fat16.c: 189: offset = (slot & 0b1111);
 14976  012788  C08F  F08A         	movff	__write_root@slot,??__write_root
 14977  01278C  0E0F               	movlw	15
 14978  01278E  178A               	andwf	??__write_root& (0+255),f,b
 14979  012790  518A               	movf	??__write_root& (0+255),w,b
 14980  012792  6F8D               	movwf	__write_root@offset& (0+255),b
 14981  012794  6B8E               	clrf	(__write_root@offset+1)& (0+255),b
 14982                           
 14983                           ;fat16.c: 190: offset <<= 5;
 14984  012796  0E05               	movlw	5
 14985  012798                     u19145:
 14986  012798  90D8               	bcf	status,0,c
 14987  01279A  378D               	rlcf	__write_root@offset& (0+255),f,b
 14988  01279C  378E               	rlcf	(__write_root@offset+1)& (0+255),f,b
 14989  01279E  2EE8               	decfsz	wreg,f,c
 14990  0127A0  D7FB               	goto	u19145
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;fat16.c: 191: flash_partial_write(root_sector, offset, 32, data);
 14994  0127A2  C08B  F07F         	movff	__write_root@root_sector,flash_partial_write@page
 14995  0127A6  C08C  F080         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 14996  0127AA  C08D  F081         	movff	__write_root@offset,flash_partial_write@start
 14997  0127AE  C08E  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 14998  0127B2  0E00               	movlw	0
 14999  0127B4  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15000  0127B6  0E20               	movlw	32
 15001  0127B8  6F83               	movwf	flash_partial_write@length& (0+255),b
 15002  0127BA  C088  F085         	movff	__write_root@data,flash_partial_write@data
 15003  0127BE  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 15004  0127C2  EC22  F091         	call	_flash_partial_write	;wreg free
 15005  0127C6  0012               	return		;funcret
 15006  0127C8                     __end_of__write_root:
 15007                           	opt stack 0
 15008                           tblptru	equ	0xFF8
 15009                           tblptrh	equ	0xFF7
 15010                           tblptrl	equ	0xFF6
 15011                           tablat	equ	0xFF5
 15012                           prodh	equ	0xFF4
 15013                           prodl	equ	0xFF3
 15014                           intcon	equ	0xFF2
 15015                           intcon2	equ	0xFF1
 15016                           intcon3	equ	0xFF0
 15017                           postinc0	equ	0xFEE
 15018                           wreg	equ	0xFE8
 15019                           postinc1	equ	0xFE6
 15020                           postdec1	equ	0xFE5
 15021                           plusw1	equ	0xFE3
 15022                           fsr1h	equ	0xFE2
 15023                           fsr1l	equ	0xFE1
 15024                           indf2	equ	0xFDF
 15025                           postinc2	equ	0xFDE
 15026                           postdec2	equ	0xFDD
 15027                           plusw2	equ	0xFDB
 15028                           fsr2h	equ	0xFDA
 15029                           fsr2l	equ	0xFD9
 15030                           status	equ	0xFD8
 15031                           
 15032 ;; *************** function __write_fat *****************
 15033 ;; Defined at:
 15034 ;;		line 160 in file "fat16.c"
 15035 ;; Parameters:    Size  Location     Type
 15036 ;;  cluster         2   40[BANK0 ] unsigned int 
 15037 ;;  value           2   42[BANK0 ] unsigned int 
 15038 ;; Auto vars:     Size  Location     Type
 15039 ;;  offset          2   46[BANK0 ] unsigned int 
 15040 ;;  fat_sector      2   44[BANK0 ] unsigned int 
 15041 ;; Return value:  Size  Location     Type
 15042 ;;                  1    wreg      void 
 15043 ;; Registers used:
 15044 ;;		wreg, status,2, status,0, cstack
 15045 ;; Tracked objects:
 15046 ;;		On entry : 0/0
 15047 ;;		On exit  : 0/0
 15048 ;;		Unchanged: 0/0
 15049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15050 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15051 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15053 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15054 ;;Total ram usage:        8 bytes
 15055 ;; Hardware stack levels used:    1
 15056 ;; Hardware stack levels required when called:   15
 15057 ;; This function calls:
 15058 ;;		_flash_partial_write
 15059 ;; This function is called by:
 15060 ;;		_fat_create_file
 15061 ;;		_fat_append_to_file
 15062 ;;		_fat_delete_file
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066                           	psect	text63
 15067  013250                     __ptext63:
 15068                           	opt stack 0
 15069  013250                     __write_fat:
 15070                           	opt stack 13
 15071                           
 15072                           ;fat16.c: 162: uint16_t fat_sector;;fat16.c: 163: uint16_t offset;;fat16.c: 164: fat_sec
      +                          tor = cluster>>8;
 15073                           
 15074                           ;incstack = 0
 15075  013250  0100               	movlb	0	; () banked
 15076  013252  5189               	movf	(__write_fat@cluster+1)& (0+255),w,b
 15077  013254  6F8C               	movwf	__write_fat@fat_sector& (0+255),b
 15078  013256  6B8D               	clrf	(__write_fat@fat_sector+1)& (0+255),b
 15079                           
 15080                           ; BSR set to: 0
 15081                           ;fat16.c: 165: fat_sector += 2;
 15082  013258  0E02               	movlw	2
 15083  01325A  278C               	addwf	__write_fat@fat_sector& (0+255),f,b
 15084  01325C  0E00               	movlw	0
 15085  01325E  238D               	addwfc	(__write_fat@fat_sector+1)& (0+255),f,b
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;fat16.c: 166: offset = cluster & 0xFF;
 15089  013260  5188               	movf	__write_fat@cluster& (0+255),w,b
 15090  013262  6F8E               	movwf	__write_fat@offset& (0+255),b
 15091  013264  6B8F               	clrf	(__write_fat@offset+1)& (0+255),b
 15092                           
 15093                           ; BSR set to: 0
 15094                           ;fat16.c: 167: offset <<= 1;
 15095  013266  90D8               	bcf	status,0,c
 15096  013268  378E               	rlcf	__write_fat@offset& (0+255),f,b
 15097  01326A  378F               	rlcf	(__write_fat@offset+1)& (0+255),f,b
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;fat16.c: 168: flash_partial_write(fat_sector, offset, 2, &value);
 15101  01326C  C08C  F07F         	movff	__write_fat@fat_sector,flash_partial_write@page
 15102  013270  C08D  F080         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 15103  013274  C08E  F081         	movff	__write_fat@offset,flash_partial_write@start
 15104  013278  C08F  F082         	movff	__write_fat@offset+1,flash_partial_write@start+1
 15105  01327C  0E00               	movlw	0
 15106  01327E  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15107  013280  0E02               	movlw	2
 15108  013282  6F83               	movwf	flash_partial_write@length& (0+255),b
 15109  013284  0E8A               	movlw	low __write_fat@value
 15110  013286  6F85               	movwf	flash_partial_write@data& (0+255),b
 15111  013288  0E00               	movlw	high __write_fat@value
 15112  01328A  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15113  01328C  EC22  F091         	call	_flash_partial_write	;wreg free
 15114  013290  0012               	return		;funcret
 15115  013292                     __end_of__write_fat:
 15116                           	opt stack 0
 15117                           tblptru	equ	0xFF8
 15118                           tblptrh	equ	0xFF7
 15119                           tblptrl	equ	0xFF6
 15120                           tablat	equ	0xFF5
 15121                           prodh	equ	0xFF4
 15122                           prodl	equ	0xFF3
 15123                           intcon	equ	0xFF2
 15124                           intcon2	equ	0xFF1
 15125                           intcon3	equ	0xFF0
 15126                           postinc0	equ	0xFEE
 15127                           wreg	equ	0xFE8
 15128                           postinc1	equ	0xFE6
 15129                           postdec1	equ	0xFE5
 15130                           plusw1	equ	0xFE3
 15131                           fsr1h	equ	0xFE2
 15132                           fsr1l	equ	0xFE1
 15133                           indf2	equ	0xFDF
 15134                           postinc2	equ	0xFDE
 15135                           postdec2	equ	0xFDD
 15136                           plusw2	equ	0xFDB
 15137                           fsr2h	equ	0xFDA
 15138                           fsr2l	equ	0xFD9
 15139                           status	equ	0xFD8
 15140                           
 15141 ;; *************** function _flash_partial_write *****************
 15142 ;; Defined at:
 15143 ;;		line 589 in file "flash.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;  page            2   31[BANK0 ] unsigned int 
 15146 ;;  start           2   33[BANK0 ] unsigned int 
 15147 ;;  length          2   35[BANK0 ] unsigned int 
 15148 ;;  data            2   37[BANK0 ] PTR unsigned char 
 15149 ;;		 -> log_write_to_disk@log_entry(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_ent
      +ry(32), 
 15150 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), 
 15151 ;; Auto vars:     Size  Location     Type
 15152 ;;  match           1   39[BANK0 ] enum E6858
 15153 ;; Return value:  Size  Location     Type
 15154 ;;                  1    wreg      void 
 15155 ;; Registers used:
 15156 ;;		wreg, status,2, status,0, cstack
 15157 ;; Tracked objects:
 15158 ;;		On entry : 0/0
 15159 ;;		On exit  : 0/0
 15160 ;;		Unchanged: 0/0
 15161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15162 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15165 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15166 ;;Total ram usage:        9 bytes
 15167 ;; Hardware stack levels used:    1
 15168 ;; Hardware stack levels required when called:   14
 15169 ;; This function calls:
 15170 ;;		__flash_compare_page_to_buffer
 15171 ;;		__flash_copy_page_to_buffer
 15172 ;;		__flash_write_page_from_buffer
 15173 ;;		__flash_write_to_buffer
 15174 ;;		_flash_is_busy
 15175 ;; This function is called by:
 15176 ;;		__write_fat
 15177 ;;		__write_root
 15178 ;;		_fat_append_to_file
 15179 ;;		__delete_root
 15180 ;;		__write_file_size
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           	psect	text64
 15185  012244                     __ptext64:
 15186                           	opt stack 0
 15187  012244                     _flash_partial_write:
 15188                           	opt stack 13
 15189                           
 15190                           ;flash.c: 591: flashMatchResult_t match;;flash.c: 594: while(flash_is_busy());
 15191                           
 15192                           ;incstack = 0
 15193  012244  ECAC  F09C         	call	_flash_is_busy	;wreg free
 15194  012248  0900               	iorlw	0
 15195  01224A  A4D8               	btfss	status,2,c
 15196  01224C  D7FB               	goto	_flash_partial_write
 15197                           
 15198                           ;flash.c: 597: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 15199  01224E  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 15200  012252  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 15201  012256  0E00               	movlw	0
 15202  012258  0100               	movlb	0	; () banked
 15203  01225A  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 15204  01225C  EC9C  F094         	call	__flash_copy_page_to_buffer	;wreg free
 15205                           
 15206                           ;flash.c: 600: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 15207  012260  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 15208  012264  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 15209  012268  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 15210  01226C  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 15211  012270  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 15212  012274  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 15213  012278  0E00               	movlw	0
 15214  01227A  0100               	movlb	0	; () banked
 15215  01227C  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 15216  01227E  ECD1  F096         	call	__flash_write_to_buffer	;wreg free
 15217                           
 15218                           ;flash.c: 603: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 15219  012282  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 15220  012286  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 15221  01228A  0E00               	movlw	0
 15222  01228C  0100               	movlb	0	; () banked
 15223  01228E  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 15224  012290  ECD5  F08E         	call	__flash_compare_page_to_buffer	;wreg free
 15225  012294  0100               	movlb	0	; () banked
 15226  012296  6F87               	movwf	flash_partial_write@match& (0+255),b
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;flash.c: 606: if(match==DATA_DOES_NOT_MATCH)
 15230  012298  0587               	decf	flash_partial_write@match& (0+255),w,b
 15231  01229A  A4D8               	btfss	status,2,c
 15232  01229C  0012               	return	
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;flash.c: 607: {;flash.c: 608: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 15236  01229E  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 15237  0122A2  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 15238  0122A6  0E00               	movlw	0
 15239  0122A8  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 15240  0122AA  EC23  F095         	call	__flash_write_page_from_buffer	;wreg free
 15241  0122AE  0012               	return	
 15242  0122B0                     __end_of_flash_partial_write:
 15243                           	opt stack 0
 15244                           tblptru	equ	0xFF8
 15245                           tblptrh	equ	0xFF7
 15246                           tblptrl	equ	0xFF6
 15247                           tablat	equ	0xFF5
 15248                           prodh	equ	0xFF4
 15249                           prodl	equ	0xFF3
 15250                           intcon	equ	0xFF2
 15251                           intcon2	equ	0xFF1
 15252                           intcon3	equ	0xFF0
 15253                           postinc0	equ	0xFEE
 15254                           wreg	equ	0xFE8
 15255                           postinc1	equ	0xFE6
 15256                           postdec1	equ	0xFE5
 15257                           plusw1	equ	0xFE3
 15258                           fsr1h	equ	0xFE2
 15259                           fsr1l	equ	0xFE1
 15260                           indf2	equ	0xFDF
 15261                           postinc2	equ	0xFDE
 15262                           postdec2	equ	0xFDD
 15263                           plusw2	equ	0xFDB
 15264                           fsr2h	equ	0xFDA
 15265                           fsr2l	equ	0xFD9
 15266                           status	equ	0xFD8
 15267                           
 15268 ;; *************** function __flash_copy_page_to_buffer *****************
 15269 ;; Defined at:
 15270 ;;		line 315 in file "flash.c"
 15271 ;; Parameters:    Size  Location     Type
 15272 ;;  page            2   19[BANK0 ] unsigned int 
 15273 ;;  buffer          1   21[BANK0 ] enum E6854
 15274 ;; Auto vars:     Size  Location     Type
 15275 ;;  command         4   25[BANK0 ] unsigned char [4]
 15276 ;; Return value:  Size  Location     Type
 15277 ;;                  1    wreg      void 
 15278 ;; Registers used:
 15279 ;;		wreg, status,2, status,0, cstack
 15280 ;; Tracked objects:
 15281 ;;		On entry : 0/0
 15282 ;;		On exit  : 0/0
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15285 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15287 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15288 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15289 ;;Total ram usage:       10 bytes
 15290 ;; Hardware stack levels used:    1
 15291 ;; Hardware stack levels required when called:   13
 15292 ;; This function calls:
 15293 ;;		__flash_spi_tx
 15294 ;;		_flash_is_busy
 15295 ;; This function is called by:
 15296 ;;		_flash_partial_write
 15297 ;; This function uses a non-reentrant model
 15298 ;;
 15299                           
 15300                           	psect	text65
 15301  012938                     __ptext65:
 15302                           	opt stack 0
 15303  012938                     __flash_copy_page_to_buffer:
 15304                           	opt stack 13
 15305                           
 15306                           ;flash.c: 317: uint8_t command[4];;flash.c: 320: while(flash_is_busy());
 15307                           
 15308                           ;incstack = 0
 15309  012938  ECAC  F09C         	call	_flash_is_busy	;wreg free
 15310  01293C  0900               	iorlw	0
 15311  01293E  A4D8               	btfss	status,2,c
 15312  012940  D7FB               	goto	__flash_copy_page_to_buffer
 15313                           
 15314                           ;flash.c: 323: if(buffer==FLASH_BUFFER_1)
 15315  012942  0100               	movlb	0	; () banked
 15316  012944  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15317  012946  A4D8               	btfss	status,2,c
 15318  012948  D002               	goto	l2795
 15319                           
 15320                           ; BSR set to: 0
 15321                           ;flash.c: 324: command[0] = 0x53;
 15322  01294A  0E53               	movlw	83
 15323  01294C  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15324  01294E                     l2795:
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;flash.c: 325: if(buffer==FLASH_BUFFER_2)
 15328                           
 15329                           ; BSR set to: 0
 15330  01294E  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15331  012950  A4D8               	btfss	status,2,c
 15332  012952  D002               	goto	l2796
 15333                           
 15334                           ; BSR set to: 0
 15335                           ;flash.c: 326: command[0] = 0x55;
 15336  012954  0E55               	movlw	85
 15337  012956  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15338  012958                     l2796:
 15339                           
 15340                           ; BSR set to: 0
 15341                           ;flash.c: 328: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 15342                           
 15343                           ; BSR set to: 0
 15344  012958  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 15345  01295C  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 15346  012960  0E07               	movlw	7
 15347  012962  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 15348  012964                     u17965:
 15349  012964  90D8               	bcf	status,0,c
 15350  012966  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 15351  012968  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 15352  01296A  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 15353  01296C  D7FB               	goto	u17965
 15354  01296E  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 15355  012970  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 15356                           
 15357                           ; BSR set to: 0
 15358                           ;flash.c: 329: command[2] = ((unsigned char)((page<<1)&0xFF));
 15359  012972  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15360  012974  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15361  012976  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 15362                           
 15363                           ;flash.c: 330: command[3] = 0x00;
 15364  012978  0E00               	movlw	0
 15365  01297A  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;flash.c: 333: _flash_spi_tx(command, 4);
 15369  01297C  0E79               	movlw	low __flash_copy_page_to_buffer@command
 15370  01297E  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 15371  012980  0E00               	movlw	high __flash_copy_page_to_buffer@command
 15372  012982  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 15373  012984  0E00               	movlw	0
 15374  012986  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 15375  012988  0E04               	movlw	4
 15376  01298A  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 15377  01298C  EC50  F095         	call	__flash_spi_tx	;wreg free
 15378  012990  0012               	return		;funcret
 15379  012992                     __end_of__flash_copy_page_to_buffer:
 15380                           	opt stack 0
 15381                           tblptru	equ	0xFF8
 15382                           tblptrh	equ	0xFF7
 15383                           tblptrl	equ	0xFF6
 15384                           tablat	equ	0xFF5
 15385                           prodh	equ	0xFF4
 15386                           prodl	equ	0xFF3
 15387                           intcon	equ	0xFF2
 15388                           intcon2	equ	0xFF1
 15389                           intcon3	equ	0xFF0
 15390                           postinc0	equ	0xFEE
 15391                           wreg	equ	0xFE8
 15392                           postinc1	equ	0xFE6
 15393                           postdec1	equ	0xFE5
 15394                           plusw1	equ	0xFE3
 15395                           fsr1h	equ	0xFE2
 15396                           fsr1l	equ	0xFE1
 15397                           indf2	equ	0xFDF
 15398                           postinc2	equ	0xFDE
 15399                           postdec2	equ	0xFDD
 15400                           plusw2	equ	0xFDB
 15401                           fsr2h	equ	0xFDA
 15402                           fsr2l	equ	0xFD9
 15403                           status	equ	0xFD8
 15404                           
 15405 ;; *************** function __update_modified_time *****************
 15406 ;; Defined at:
 15407 ;;		line 55 in file "fat16.c"
 15408 ;; Parameters:    Size  Location     Type
 15409 ;;  root            2   13[BANK0 ] PTR struct .
 15410 ;;		 -> fat_append_to_file@root(32), 
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15426 ;;Total ram usage:        2 bytes
 15427 ;; Hardware stack levels used:    1
 15428 ;; Hardware stack levels required when called:   13
 15429 ;; This function calls:
 15430 ;;		__get_date
 15431 ;;		__get_time
 15432 ;; This function is called by:
 15433 ;;		_fat_append_to_file
 15434 ;; This function uses a non-reentrant model
 15435 ;;
 15436                           
 15437                           	psect	text66
 15438  013438                     __ptext66:
 15439                           	opt stack 0
 15440  013438                     __update_modified_time:
 15441                           	opt stack 15
 15442                           
 15443                           ;fat16.c: 57: root->modifiedDate = _get_date();
 15444                           
 15445                           ;incstack = 0
 15446  013438  EC2A  F092         	call	__get_date	;wreg free
 15447  01343C  0100               	movlb	0	; () banked
 15448  01343E  EE20 F018          	lfsr	2,24
 15449  013442  516D               	movf	__update_modified_time@root& (0+255),w,b
 15450  013444  26D9               	addwf	fsr2l,f,c
 15451  013446  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15452  013448  22DA               	addwfc	fsr2h,f,c
 15453  01344A  C064  FFDE         	movff	?__get_date,postinc2
 15454  01344E  C065  FFDD         	movff	?__get_date+1,postdec2
 15455                           
 15456                           ;fat16.c: 58: root->modifiedTime = _get_time();
 15457  013452  EC58  F091         	call	__get_time	;wreg free
 15458  013456  0100               	movlb	0	; () banked
 15459  013458  EE20 F016          	lfsr	2,22
 15460  01345C  516D               	movf	__update_modified_time@root& (0+255),w,b
 15461  01345E  26D9               	addwf	fsr2l,f,c
 15462  013460  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15463  013462  22DA               	addwfc	fsr2h,f,c
 15464  013464  C064  FFDE         	movff	?__get_time,postinc2
 15465  013468  C065  FFDD         	movff	?__get_time+1,postdec2
 15466                           
 15467                           ; BSR set to: 0
 15468  01346C  0012               	return		;funcret
 15469  01346E                     __end_of__update_modified_time:
 15470                           	opt stack 0
 15471                           tblptru	equ	0xFF8
 15472                           tblptrh	equ	0xFF7
 15473                           tblptrl	equ	0xFF6
 15474                           tablat	equ	0xFF5
 15475                           prodh	equ	0xFF4
 15476                           prodl	equ	0xFF3
 15477                           intcon	equ	0xFF2
 15478                           intcon2	equ	0xFF1
 15479                           intcon3	equ	0xFF0
 15480                           postinc0	equ	0xFEE
 15481                           wreg	equ	0xFE8
 15482                           postinc1	equ	0xFE6
 15483                           postdec1	equ	0xFE5
 15484                           plusw1	equ	0xFE3
 15485                           fsr1h	equ	0xFE2
 15486                           fsr1l	equ	0xFE1
 15487                           indf2	equ	0xFDF
 15488                           postinc2	equ	0xFDE
 15489                           postdec2	equ	0xFDD
 15490                           plusw2	equ	0xFDB
 15491                           fsr2h	equ	0xFDA
 15492                           fsr2l	equ	0xFD9
 15493                           status	equ	0xFD8
 15494                           
 15495 ;; *************** function __get_time *****************
 15496 ;; Defined at:
 15497 ;;		line 31 in file "fat16.c"
 15498 ;; Parameters:    Size  Location     Type
 15499 ;;		None
 15500 ;; Auto vars:     Size  Location     Type
 15501 ;;  time            2   11[BANK0 ] unsigned int 
 15502 ;;  seconds         1   10[BANK0 ] unsigned char 
 15503 ;;  minutes         1    9[BANK0 ] unsigned char 
 15504 ;;  hours           1    8[BANK0 ] unsigned char 
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  2    4[BANK0 ] unsigned int 
 15507 ;; Registers used:
 15508 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15515 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15517 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15518 ;;Total ram usage:        9 bytes
 15519 ;; Hardware stack levels used:    1
 15520 ;; Hardware stack levels required when called:   12
 15521 ;; This function calls:
 15522 ;;		_rtcc_get_hours_decimal
 15523 ;;		_rtcc_get_minutes_decimal
 15524 ;;		_rtcc_get_seconds_decimal
 15525 ;; This function is called by:
 15526 ;;		__update_modified_time
 15527 ;;		_fat_create_file
 15528 ;; This function uses a non-reentrant model
 15529 ;;
 15530                           
 15531                           	psect	text67
 15532  0122B0                     __ptext67:
 15533                           	opt stack 0
 15534  0122B0                     __get_time:
 15535                           	opt stack 16
 15536                           
 15537                           ;fat16.c: 33: uint16_t time;;fat16.c: 34: uint8_t hours = rtcc_get_hours_decimal();
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;incstack = 0
 15541  0122B0  ECC5  F09E         	call	_rtcc_get_hours_decimal	;wreg free
 15542  0122B4  0100               	movlb	0	; () banked
 15543  0122B6  6F68               	movwf	__get_time@hours& (0+255),b
 15544                           
 15545                           ;fat16.c: 35: uint8_t minutes = rtcc_get_minutes_decimal();
 15546  0122B8  ECBD  F09E         	call	_rtcc_get_minutes_decimal	;wreg free
 15547  0122BC  0100               	movlb	0	; () banked
 15548  0122BE  6F69               	movwf	__get_time@minutes& (0+255),b
 15549                           
 15550                           ;fat16.c: 36: uint8_t seconds = rtcc_get_seconds_decimal();
 15551  0122C0  ECED  F09E         	call	_rtcc_get_seconds_decimal	;wreg free
 15552  0122C4  0100               	movlb	0	; () banked
 15553  0122C6  6F6A               	movwf	__get_time@seconds& (0+255),b
 15554                           
 15555                           ; BSR set to: 0
 15556                           ;fat16.c: 37: time = ((hours&0b11111) << 11);
 15557  0122C8  5168               	movf	__get_time@hours& (0+255),w,b
 15558  0122CA  0B1F               	andlw	31
 15559  0122CC  6F66               	movwf	??__get_time& (0+255),b
 15560  0122CE  6B67               	clrf	(??__get_time+1)& (0+255),b
 15561  0122D0  0E0B               	movlw	11
 15562  0122D2                     u18235:
 15563  0122D2  90D8               	bcf	status,0,c
 15564  0122D4  3766               	rlcf	??__get_time& (0+255),f,b
 15565  0122D6  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15566  0122D8  2EE8               	decfsz	wreg,f,c
 15567  0122DA  D7FB               	goto	u18235
 15568  0122DC  C066  F06B         	movff	??__get_time,__get_time@time
 15569  0122E0  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 15570                           
 15571                           ; BSR set to: 0
 15572                           ;fat16.c: 38: time |= ((minutes&0b111111) << 5);
 15573  0122E4  5169               	movf	__get_time@minutes& (0+255),w,b
 15574  0122E6  0B3F               	andlw	63
 15575  0122E8  6F66               	movwf	??__get_time& (0+255),b
 15576  0122EA  6B67               	clrf	(??__get_time+1)& (0+255),b
 15577  0122EC  0E05               	movlw	5
 15578  0122EE                     u18245:
 15579  0122EE  90D8               	bcf	status,0,c
 15580  0122F0  3766               	rlcf	??__get_time& (0+255),f,b
 15581  0122F2  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 15582  0122F4  2EE8               	decfsz	wreg,f,c
 15583  0122F6  D7FB               	goto	u18245
 15584  0122F8  5166               	movf	??__get_time& (0+255),w,b
 15585  0122FA  136B               	iorwf	__get_time@time& (0+255),f,b
 15586  0122FC  5167               	movf	(??__get_time+1)& (0+255),w,b
 15587  0122FE  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 15588                           
 15589                           ; BSR set to: 0
 15590                           ;fat16.c: 39: time |= ((seconds>>1)&0b11111);
 15591  012300  C06A  F066         	movff	__get_time@seconds,??__get_time
 15592  012304  90D8               	bcf	status,0,c
 15593  012306  3366               	rrcf	??__get_time& (0+255),f,b
 15594  012308  0E1F               	movlw	31
 15595  01230A  1766               	andwf	??__get_time& (0+255),f,b
 15596  01230C  5166               	movf	??__get_time& (0+255),w,b
 15597  01230E  136B               	iorwf	__get_time@time& (0+255),f,b
 15598                           
 15599                           ; BSR set to: 0
 15600                           ;fat16.c: 40: return time;
 15601  012310  C06B  F064         	movff	__get_time@time,?__get_time
 15602  012314  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 15603  012318  0012               	return	
 15604  01231A                     __end_of__get_time:
 15605                           	opt stack 0
 15606                           tblptru	equ	0xFF8
 15607                           tblptrh	equ	0xFF7
 15608                           tblptrl	equ	0xFF6
 15609                           tablat	equ	0xFF5
 15610                           prodh	equ	0xFF4
 15611                           prodl	equ	0xFF3
 15612                           intcon	equ	0xFF2
 15613                           intcon2	equ	0xFF1
 15614                           intcon3	equ	0xFF0
 15615                           postinc0	equ	0xFEE
 15616                           wreg	equ	0xFE8
 15617                           postinc1	equ	0xFE6
 15618                           postdec1	equ	0xFE5
 15619                           plusw1	equ	0xFE3
 15620                           fsr1h	equ	0xFE2
 15621                           fsr1l	equ	0xFE1
 15622                           indf2	equ	0xFDF
 15623                           postinc2	equ	0xFDE
 15624                           postdec2	equ	0xFDD
 15625                           plusw2	equ	0xFDB
 15626                           fsr2h	equ	0xFDA
 15627                           fsr2l	equ	0xFD9
 15628                           status	equ	0xFD8
 15629                           
 15630 ;; *************** function _rtcc_get_minutes_decimal *****************
 15631 ;; Defined at:
 15632 ;;		line 287 in file "rtcc.c"
 15633 ;; Parameters:    Size  Location     Type
 15634 ;;		None
 15635 ;; Auto vars:     Size  Location     Type
 15636 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 15637 ;; Return value:  Size  Location     Type
 15638 ;;                  1    wreg      unsigned char 
 15639 ;; Registers used:
 15640 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15641 ;; Tracked objects:
 15642 ;;		On entry : 0/0
 15643 ;;		On exit  : 0/0
 15644 ;;		Unchanged: 0/0
 15645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15649 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15650 ;;Total ram usage:        1 bytes
 15651 ;; Hardware stack levels used:    1
 15652 ;; Hardware stack levels required when called:   11
 15653 ;; This function calls:
 15654 ;;		__rtcc_bcd_to_decimal
 15655 ;;		_rtcc_get_minutes
 15656 ;; This function is called by:
 15657 ;;		__get_time
 15658 ;;		__get_dateTime
 15659 ;; This function uses a non-reentrant model
 15660 ;;
 15661                           
 15662                           	psect	text68
 15663  013D7A                     __ptext68:
 15664                           	opt stack 0
 15665  013D7A                     _rtcc_get_minutes_decimal:
 15666                           	opt stack 16
 15667                           
 15668                           ;rtcc.c: 289: uint8_t bcd_minutes = rtcc_get_minutes();
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;incstack = 0
 15672  013D7A  EC19  F09F         	call	_rtcc_get_minutes	;wreg free
 15673  013D7E  0100               	movlb	0	; () banked
 15674  013D80  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 15675                           
 15676                           ; BSR set to: 0
 15677                           ;rtcc.c: 290: return _rtcc_bcd_to_decimal(bcd_minutes);
 15678  013D82  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 15679  013D84  ECAB  F09D         	call	__rtcc_bcd_to_decimal
 15680  013D88  0012               	return	
 15681  013D8A                     __end_of_rtcc_get_minutes_decimal:
 15682                           	opt stack 0
 15683                           tblptru	equ	0xFF8
 15684                           tblptrh	equ	0xFF7
 15685                           tblptrl	equ	0xFF6
 15686                           tablat	equ	0xFF5
 15687                           prodh	equ	0xFF4
 15688                           prodl	equ	0xFF3
 15689                           intcon	equ	0xFF2
 15690                           intcon2	equ	0xFF1
 15691                           intcon3	equ	0xFF0
 15692                           postinc0	equ	0xFEE
 15693                           wreg	equ	0xFE8
 15694                           postinc1	equ	0xFE6
 15695                           postdec1	equ	0xFE5
 15696                           plusw1	equ	0xFE3
 15697                           fsr1h	equ	0xFE2
 15698                           fsr1l	equ	0xFE1
 15699                           indf2	equ	0xFDF
 15700                           postinc2	equ	0xFDE
 15701                           postdec2	equ	0xFDD
 15702                           plusw2	equ	0xFDB
 15703                           fsr2h	equ	0xFDA
 15704                           fsr2l	equ	0xFD9
 15705                           status	equ	0xFD8
 15706                           
 15707 ;; *************** function _rtcc_get_hours_decimal *****************
 15708 ;; Defined at:
 15709 ;;		line 249 in file "rtcc.c"
 15710 ;; Parameters:    Size  Location     Type
 15711 ;;		None
 15712 ;; Auto vars:     Size  Location     Type
 15713 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  1    wreg      unsigned char 
 15716 ;; Registers used:
 15717 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15718 ;; Tracked objects:
 15719 ;;		On entry : 0/0
 15720 ;;		On exit  : 0/0
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15726 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15727 ;;Total ram usage:        1 bytes
 15728 ;; Hardware stack levels used:    1
 15729 ;; Hardware stack levels required when called:   11
 15730 ;; This function calls:
 15731 ;;		__rtcc_bcd_to_decimal
 15732 ;;		_rtcc_get_hours
 15733 ;; This function is called by:
 15734 ;;		__get_time
 15735 ;;		__get_dateTime
 15736 ;; This function uses a non-reentrant model
 15737 ;;
 15738                           
 15739                           	psect	text69
 15740  013D8A                     __ptext69:
 15741                           	opt stack 0
 15742  013D8A                     _rtcc_get_hours_decimal:
 15743                           	opt stack 16
 15744                           
 15745                           ;rtcc.c: 251: uint8_t bcd_hours = rtcc_get_hours();
 15746                           
 15747                           ;incstack = 0
 15748  013D8A  EC20  F09F         	call	_rtcc_get_hours	;wreg free
 15749  013D8E  0100               	movlb	0	; () banked
 15750  013D90  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 15751                           
 15752                           ; BSR set to: 0
 15753                           ;rtcc.c: 252: return _rtcc_bcd_to_decimal(bcd_hours);
 15754  013D92  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 15755  013D94  ECAB  F09D         	call	__rtcc_bcd_to_decimal
 15756  013D98  0012               	return	
 15757  013D9A                     __end_of_rtcc_get_hours_decimal:
 15758                           	opt stack 0
 15759                           tblptru	equ	0xFF8
 15760                           tblptrh	equ	0xFF7
 15761                           tblptrl	equ	0xFF6
 15762                           tablat	equ	0xFF5
 15763                           prodh	equ	0xFF4
 15764                           prodl	equ	0xFF3
 15765                           intcon	equ	0xFF2
 15766                           intcon2	equ	0xFF1
 15767                           intcon3	equ	0xFF0
 15768                           postinc0	equ	0xFEE
 15769                           wreg	equ	0xFE8
 15770                           postinc1	equ	0xFE6
 15771                           postdec1	equ	0xFE5
 15772                           plusw1	equ	0xFE3
 15773                           fsr1h	equ	0xFE2
 15774                           fsr1l	equ	0xFE1
 15775                           indf2	equ	0xFDF
 15776                           postinc2	equ	0xFDE
 15777                           postdec2	equ	0xFDD
 15778                           plusw2	equ	0xFDB
 15779                           fsr2h	equ	0xFDA
 15780                           fsr2l	equ	0xFD9
 15781                           status	equ	0xFD8
 15782                           
 15783 ;; *************** function __get_date *****************
 15784 ;; Defined at:
 15785 ;;		line 43 in file "fat16.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;		None
 15788 ;; Auto vars:     Size  Location     Type
 15789 ;;  date            2   11[BANK0 ] unsigned int 
 15790 ;;  day             1   10[BANK0 ] unsigned char 
 15791 ;;  month           1    9[BANK0 ] unsigned char 
 15792 ;;  year            1    8[BANK0 ] unsigned char 
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  2    4[BANK0 ] unsigned int 
 15795 ;; Registers used:
 15796 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15803 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15804 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15805 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15806 ;;Total ram usage:        9 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; Hardware stack levels required when called:   12
 15809 ;; This function calls:
 15810 ;;		_rtcc_get_day_decimal
 15811 ;;		_rtcc_get_month_decimal
 15812 ;;		_rtcc_get_year_decimal
 15813 ;; This function is called by:
 15814 ;;		__update_modified_time
 15815 ;;		_fat_create_file
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text70
 15820  012454                     __ptext70:
 15821                           	opt stack 0
 15822  012454                     __get_date:
 15823                           	opt stack 16
 15824                           
 15825                           ;fat16.c: 45: uint16_t date;;fat16.c: 46: uint8_t year = rtcc_get_year_decimal();
 15826                           
 15827                           ;incstack = 0
 15828  012454  ECCD  F09E         	call	_rtcc_get_year_decimal	;wreg free
 15829  012458  0100               	movlb	0	; () banked
 15830  01245A  6F68               	movwf	__get_date@year& (0+255),b
 15831                           
 15832                           ;fat16.c: 47: uint8_t month = rtcc_get_month_decimal();
 15833  01245C  ECD5  F09E         	call	_rtcc_get_month_decimal	;wreg free
 15834  012460  0100               	movlb	0	; () banked
 15835  012462  6F69               	movwf	__get_date@month& (0+255),b
 15836                           
 15837                           ;fat16.c: 48: uint8_t day = rtcc_get_day_decimal();
 15838  012464  ECDD  F09E         	call	_rtcc_get_day_decimal	;wreg free
 15839  012468  0100               	movlb	0	; () banked
 15840  01246A  6F6A               	movwf	__get_date@day& (0+255),b
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;fat16.c: 49: date = (((year+20)&0b1111111) << 9);
 15844  01246C  5168               	movf	__get_date@year& (0+255),w,b
 15845  01246E  0F14               	addlw	20
 15846  012470  0B7F               	andlw	127
 15847  012472  6F66               	movwf	??__get_date& (0+255),b
 15848  012474  6B67               	clrf	(??__get_date+1)& (0+255),b
 15849  012476  0E09               	movlw	9
 15850  012478                     u18255:
 15851  012478  90D8               	bcf	status,0,c
 15852  01247A  3766               	rlcf	??__get_date& (0+255),f,b
 15853  01247C  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 15854  01247E  2EE8               	decfsz	wreg,f,c
 15855  012480  D7FB               	goto	u18255
 15856  012482  C066  F06B         	movff	??__get_date,__get_date@date
 15857  012486  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 15858                           
 15859                           ; BSR set to: 0
 15860                           ;fat16.c: 50: date |= ((month&0b1111) << 5);
 15861  01248A  5169               	movf	__get_date@month& (0+255),w,b
 15862  01248C  0B0F               	andlw	15
 15863  01248E  6F66               	movwf	??__get_date& (0+255),b
 15864  012490  6B67               	clrf	(??__get_date+1)& (0+255),b
 15865  012492  0E05               	movlw	5
 15866  012494                     u18265:
 15867  012494  90D8               	bcf	status,0,c
 15868  012496  3766               	rlcf	??__get_date& (0+255),f,b
 15869  012498  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 15870  01249A  2EE8               	decfsz	wreg,f,c
 15871  01249C  D7FB               	goto	u18265
 15872  01249E  5166               	movf	??__get_date& (0+255),w,b
 15873  0124A0  136B               	iorwf	__get_date@date& (0+255),f,b
 15874  0124A2  5167               	movf	(??__get_date+1)& (0+255),w,b
 15875  0124A4  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 15876                           
 15877                           ; BSR set to: 0
 15878                           ;fat16.c: 51: date |= (day&0b11111);
 15879  0124A6  C06A  F066         	movff	__get_date@day,??__get_date
 15880  0124AA  0E1F               	movlw	31
 15881  0124AC  1766               	andwf	??__get_date& (0+255),f,b
 15882  0124AE  5166               	movf	??__get_date& (0+255),w,b
 15883  0124B0  136B               	iorwf	__get_date@date& (0+255),f,b
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;fat16.c: 52: return date;
 15887  0124B2  C06B  F064         	movff	__get_date@date,?__get_date
 15888  0124B6  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 15889  0124BA  0012               	return	
 15890  0124BC                     __end_of__get_date:
 15891                           	opt stack 0
 15892                           tblptru	equ	0xFF8
 15893                           tblptrh	equ	0xFF7
 15894                           tblptrl	equ	0xFF6
 15895                           tablat	equ	0xFF5
 15896                           prodh	equ	0xFF4
 15897                           prodl	equ	0xFF3
 15898                           intcon	equ	0xFF2
 15899                           intcon2	equ	0xFF1
 15900                           intcon3	equ	0xFF0
 15901                           postinc0	equ	0xFEE
 15902                           wreg	equ	0xFE8
 15903                           postinc1	equ	0xFE6
 15904                           postdec1	equ	0xFE5
 15905                           plusw1	equ	0xFE3
 15906                           fsr1h	equ	0xFE2
 15907                           fsr1l	equ	0xFE1
 15908                           indf2	equ	0xFDF
 15909                           postinc2	equ	0xFDE
 15910                           postdec2	equ	0xFDD
 15911                           plusw2	equ	0xFDB
 15912                           fsr2h	equ	0xFDA
 15913                           fsr2l	equ	0xFD9
 15914                           status	equ	0xFD8
 15915                           
 15916 ;; *************** function _rtcc_get_year_decimal *****************
 15917 ;; Defined at:
 15918 ;;		line 135 in file "rtcc.c"
 15919 ;; Parameters:    Size  Location     Type
 15920 ;;		None
 15921 ;; Auto vars:     Size  Location     Type
 15922 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 15923 ;; Return value:  Size  Location     Type
 15924 ;;                  1    wreg      unsigned char 
 15925 ;; Registers used:
 15926 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15927 ;; Tracked objects:
 15928 ;;		On entry : 0/0
 15929 ;;		On exit  : 0/0
 15930 ;;		Unchanged: 0/0
 15931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15936 ;;Total ram usage:        1 bytes
 15937 ;; Hardware stack levels used:    1
 15938 ;; Hardware stack levels required when called:   11
 15939 ;; This function calls:
 15940 ;;		__rtcc_bcd_to_decimal
 15941 ;;		_rtcc_get_year
 15942 ;; This function is called by:
 15943 ;;		__get_date
 15944 ;;		__get_dateTime
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948                           	psect	text71
 15949  013D9A                     __ptext71:
 15950                           	opt stack 0
 15951  013D9A                     _rtcc_get_year_decimal:
 15952                           	opt stack 16
 15953                           
 15954                           ;rtcc.c: 137: uint8_t bcd_year = rtcc_get_year();
 15955                           
 15956                           ; BSR set to: 0
 15957                           ;incstack = 0
 15958  013D9A  EC04  F09F         	call	_rtcc_get_year	;wreg free
 15959  013D9E  0100               	movlb	0	; () banked
 15960  013DA0  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 15961                           
 15962                           ; BSR set to: 0
 15963                           ;rtcc.c: 138: return _rtcc_bcd_to_decimal(bcd_year);
 15964  013DA2  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 15965  013DA4  ECAB  F09D         	call	__rtcc_bcd_to_decimal
 15966  013DA8  0012               	return	
 15967  013DAA                     __end_of_rtcc_get_year_decimal:
 15968                           	opt stack 0
 15969                           tblptru	equ	0xFF8
 15970                           tblptrh	equ	0xFF7
 15971                           tblptrl	equ	0xFF6
 15972                           tablat	equ	0xFF5
 15973                           prodh	equ	0xFF4
 15974                           prodl	equ	0xFF3
 15975                           intcon	equ	0xFF2
 15976                           intcon2	equ	0xFF1
 15977                           intcon3	equ	0xFF0
 15978                           postinc0	equ	0xFEE
 15979                           wreg	equ	0xFE8
 15980                           postinc1	equ	0xFE6
 15981                           postdec1	equ	0xFE5
 15982                           plusw1	equ	0xFE3
 15983                           fsr1h	equ	0xFE2
 15984                           fsr1l	equ	0xFE1
 15985                           indf2	equ	0xFDF
 15986                           postinc2	equ	0xFDE
 15987                           postdec2	equ	0xFDD
 15988                           plusw2	equ	0xFDB
 15989                           fsr2h	equ	0xFDA
 15990                           fsr2l	equ	0xFD9
 15991                           status	equ	0xFD8
 15992                           
 15993 ;; *************** function _rtcc_get_month_decimal *****************
 15994 ;; Defined at:
 15995 ;;		line 173 in file "rtcc.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;		None
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      unsigned char 
 16002 ;; Registers used:
 16003 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16012 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16013 ;;Total ram usage:        1 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; Hardware stack levels required when called:   11
 16016 ;; This function calls:
 16017 ;;		__rtcc_bcd_to_decimal
 16018 ;;		_rtcc_get_month
 16019 ;; This function is called by:
 16020 ;;		__get_date
 16021 ;;		__get_dateTime
 16022 ;; This function uses a non-reentrant model
 16023 ;;
 16024                           
 16025                           	psect	text72
 16026  013DAA                     __ptext72:
 16027                           	opt stack 0
 16028  013DAA                     _rtcc_get_month_decimal:
 16029                           	opt stack 16
 16030                           
 16031                           ;rtcc.c: 175: uint8_t bcd_month = rtcc_get_month();
 16032                           
 16033                           ;incstack = 0
 16034  013DAA  EC12  F09F         	call	_rtcc_get_month	;wreg free
 16035  013DAE  0100               	movlb	0	; () banked
 16036  013DB0  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 16037                           
 16038                           ; BSR set to: 0
 16039                           ;rtcc.c: 176: return _rtcc_bcd_to_decimal(bcd_month);
 16040  013DB2  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 16041  013DB4  ECAB  F09D         	call	__rtcc_bcd_to_decimal
 16042  013DB8  0012               	return	
 16043  013DBA                     __end_of_rtcc_get_month_decimal:
 16044                           	opt stack 0
 16045                           tblptru	equ	0xFF8
 16046                           tblptrh	equ	0xFF7
 16047                           tblptrl	equ	0xFF6
 16048                           tablat	equ	0xFF5
 16049                           prodh	equ	0xFF4
 16050                           prodl	equ	0xFF3
 16051                           intcon	equ	0xFF2
 16052                           intcon2	equ	0xFF1
 16053                           intcon3	equ	0xFF0
 16054                           postinc0	equ	0xFEE
 16055                           wreg	equ	0xFE8
 16056                           postinc1	equ	0xFE6
 16057                           postdec1	equ	0xFE5
 16058                           plusw1	equ	0xFE3
 16059                           fsr1h	equ	0xFE2
 16060                           fsr1l	equ	0xFE1
 16061                           indf2	equ	0xFDF
 16062                           postinc2	equ	0xFDE
 16063                           postdec2	equ	0xFDD
 16064                           plusw2	equ	0xFDB
 16065                           fsr2h	equ	0xFDA
 16066                           fsr2l	equ	0xFD9
 16067                           status	equ	0xFD8
 16068                           
 16069 ;; *************** function _rtcc_get_day_decimal *****************
 16070 ;; Defined at:
 16071 ;;		line 211 in file "rtcc.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;		None
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 16076 ;; Return value:  Size  Location     Type
 16077 ;;                  1    wreg      unsigned char 
 16078 ;; Registers used:
 16079 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16089 ;;Total ram usage:        1 bytes
 16090 ;; Hardware stack levels used:    1
 16091 ;; Hardware stack levels required when called:   11
 16092 ;; This function calls:
 16093 ;;		__rtcc_bcd_to_decimal
 16094 ;;		_rtcc_get_day
 16095 ;; This function is called by:
 16096 ;;		__get_date
 16097 ;;		__get_dateTime
 16098 ;; This function uses a non-reentrant model
 16099 ;;
 16100                           
 16101                           	psect	text73
 16102  013DBA                     __ptext73:
 16103                           	opt stack 0
 16104  013DBA                     _rtcc_get_day_decimal:
 16105                           	opt stack 16
 16106                           
 16107                           ;rtcc.c: 213: uint8_t bcd_day = rtcc_get_day();
 16108                           
 16109                           ;incstack = 0
 16110  013DBA  EC27  F09F         	call	_rtcc_get_day	;wreg free
 16111  013DBE  0100               	movlb	0	; () banked
 16112  013DC0  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 16113                           
 16114                           ; BSR set to: 0
 16115                           ;rtcc.c: 214: return _rtcc_bcd_to_decimal(bcd_day);
 16116  013DC2  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 16117  013DC4  ECAB  F09D         	call	__rtcc_bcd_to_decimal
 16118  013DC8  0012               	return	
 16119  013DCA                     __end_of_rtcc_get_day_decimal:
 16120                           	opt stack 0
 16121                           tblptru	equ	0xFF8
 16122                           tblptrh	equ	0xFF7
 16123                           tblptrl	equ	0xFF6
 16124                           tablat	equ	0xFF5
 16125                           prodh	equ	0xFF4
 16126                           prodl	equ	0xFF3
 16127                           intcon	equ	0xFF2
 16128                           intcon2	equ	0xFF1
 16129                           intcon3	equ	0xFF0
 16130                           postinc0	equ	0xFEE
 16131                           wreg	equ	0xFE8
 16132                           postinc1	equ	0xFE6
 16133                           postdec1	equ	0xFE5
 16134                           plusw1	equ	0xFE3
 16135                           fsr1h	equ	0xFE2
 16136                           fsr1l	equ	0xFE1
 16137                           indf2	equ	0xFDF
 16138                           postinc2	equ	0xFDE
 16139                           postdec2	equ	0xFDD
 16140                           plusw2	equ	0xFDB
 16141                           fsr2h	equ	0xFDA
 16142                           fsr2l	equ	0xFD9
 16143                           status	equ	0xFD8
 16144                           
 16145 ;; *************** function __sector_from_cluster *****************
 16146 ;; Defined at:
 16147 ;;		line 455 in file "fat16.c"
 16148 ;; Parameters:    Size  Location     Type
 16149 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16150 ;; Auto vars:     Size  Location     Type
 16151 ;;		None
 16152 ;; Return value:  Size  Location     Type
 16153 ;;                  2    0[BANK0 ] unsigned int 
 16154 ;; Registers used:
 16155 ;;		wreg, status,2, status,0
 16156 ;; Tracked objects:
 16157 ;;		On entry : 0/0
 16158 ;;		On exit  : 0/0
 16159 ;;		Unchanged: 0/0
 16160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16161 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16165 ;;Total ram usage:        2 bytes
 16166 ;; Hardware stack levels used:    1
 16167 ;; Hardware stack levels required when called:   10
 16168 ;; This function calls:
 16169 ;;		Nothing
 16170 ;; This function is called by:
 16171 ;;		_fat_append_to_file
 16172 ;;		_fat_read_from_file
 16173 ;; This function uses a non-reentrant model
 16174 ;;
 16175                           
 16176                           	psect	text74
 16177  013DCA                     __ptext74:
 16178                           	opt stack 0
 16179  013DCA                     __sector_from_cluster:
 16180                           	opt stack 18
 16181                           
 16182                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 16183                           
 16184                           ;incstack = 0
 16185  013DCA  0E14               	movlw	20
 16186  013DCC  0100               	movlb	0	; () banked
 16187  013DCE  2560               	addwf	__sector_from_cluster@fat_cluster& (0+255),w,b
 16188  013DD0  6F60               	movwf	?__sector_from_cluster& (0+255),b
 16189  013DD2  0E00               	movlw	0
 16190  013DD4  2161               	addwfc	(__sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16191  013DD6  6F61               	movwf	(?__sector_from_cluster+1)& (0+255),b
 16192  013DD8  0012               	return	
 16193  013DDA                     __end_of__sector_from_cluster:
 16194                           	opt stack 0
 16195                           tblptru	equ	0xFF8
 16196                           tblptrh	equ	0xFF7
 16197                           tblptrl	equ	0xFF6
 16198                           tablat	equ	0xFF5
 16199                           prodh	equ	0xFF4
 16200                           prodl	equ	0xFF3
 16201                           intcon	equ	0xFF2
 16202                           intcon2	equ	0xFF1
 16203                           intcon3	equ	0xFF0
 16204                           postinc0	equ	0xFEE
 16205                           wreg	equ	0xFE8
 16206                           postinc1	equ	0xFE6
 16207                           postdec1	equ	0xFE5
 16208                           plusw1	equ	0xFE3
 16209                           fsr1h	equ	0xFE2
 16210                           fsr1l	equ	0xFE1
 16211                           indf2	equ	0xFDF
 16212                           postinc2	equ	0xFDE
 16213                           postdec2	equ	0xFDD
 16214                           plusw2	equ	0xFDB
 16215                           fsr2h	equ	0xFDA
 16216                           fsr2l	equ	0xFD9
 16217                           status	equ	0xFD8
 16218                           
 16219 ;; *************** function __root_is_available *****************
 16220 ;; Defined at:
 16221 ;;		line 61 in file "fat16.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;  file_number     1    wreg     unsigned char 
 16224 ;; Auto vars:     Size  Location     Type
 16225 ;;  file_number     1   44[BANK0 ] unsigned char 
 16226 ;;  offset          2   42[BANK0 ] unsigned int 
 16227 ;;  root_sector     2   40[BANK0 ] unsigned int 
 16228 ;;  first_byte      1   45[BANK0 ] unsigned char 
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      unsigned char 
 16231 ;; Registers used:
 16232 ;;		wreg, status,2, status,0, cstack
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16239 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16240 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16241 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16242 ;;Total ram usage:        7 bytes
 16243 ;; Hardware stack levels used:    1
 16244 ;; Hardware stack levels required when called:   14
 16245 ;; This function calls:
 16246 ;;		_flash_partial_read
 16247 ;; This function is called by:
 16248 ;;		__get_available_root_entry
 16249 ;;		_fat_append_to_file
 16250 ;;		_fat_delete_file
 16251 ;; This function uses a non-reentrant model
 16252 ;;
 16253                           
 16254                           	psect	text75
 16255  011D2E                     __ptext75:
 16256                           	opt stack 0
 16257  011D2E                     __root_is_available:
 16258                           	opt stack 13
 16259                           
 16260                           ; BSR set to: 0
 16261                           ;incstack = 0
 16262                           ;__root_is_available@file_number stored from wreg
 16263  011D2E  0100               	movlb	0	; () banked
 16264  011D30  6F8C               	movwf	__root_is_available@file_number& (0+255),b
 16265                           
 16266                           ;fat16.c: 63: uint16_t root_sector;;fat16.c: 64: uint16_t offset;;fat16.c: 65: uint8_t f
      +                          irst_byte;;fat16.c: 69: if(file_number>=64)
 16267  011D32  0E3F               	movlw	63
 16268  011D34  0100               	movlb	0	; () banked
 16269  011D36  658C               	cpfsgt	__root_is_available@file_number& (0+255),b
 16270  011D38  D002               	goto	l2947
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;fat16.c: 70: {;fat16.c: 72: return 0;
 16274  011D3A  0E00               	movlw	0
 16275                           
 16276                           ; BSR set to: 0
 16277  011D3C  0012               	return	
 16278  011D3E                     l2947:
 16279                           
 16280                           ; BSR set to: 0
 16281                           ;fat16.c: 73: };fat16.c: 76: root_sector = (file_number >> 4) + 18;
 16282                           
 16283                           ; BSR set to: 0
 16284  011D3E  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16285  011D42  3B87               	swapf	??__root_is_available& (0+255),f,b
 16286  011D44  0E0F               	movlw	15
 16287  011D46  1787               	andwf	??__root_is_available& (0+255),f,b
 16288  011D48  0E12               	movlw	18
 16289  011D4A  2587               	addwf	??__root_is_available& (0+255),w,b
 16290  011D4C  6F88               	movwf	__root_is_available@root_sector& (0+255),b
 16291  011D4E  6B89               	clrf	(__root_is_available@root_sector+1)& (0+255),b
 16292  011D50  0E00               	movlw	0
 16293  011D52  2389               	addwfc	(__root_is_available@root_sector+1)& (0+255),f,b
 16294                           
 16295                           ;fat16.c: 77: offset = (file_number & 0b1111);
 16296  011D54  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16297  011D58  0E0F               	movlw	15
 16298  011D5A  1787               	andwf	??__root_is_available& (0+255),f,b
 16299  011D5C  5187               	movf	??__root_is_available& (0+255),w,b
 16300  011D5E  6F8A               	movwf	__root_is_available@offset& (0+255),b
 16301  011D60  6B8B               	clrf	(__root_is_available@offset+1)& (0+255),b
 16302                           
 16303                           ;fat16.c: 78: offset <<= 5;
 16304  011D62  0E05               	movlw	5
 16305  011D64                     u18285:
 16306  011D64  90D8               	bcf	status,0,c
 16307  011D66  378A               	rlcf	__root_is_available@offset& (0+255),f,b
 16308  011D68  378B               	rlcf	(__root_is_available@offset+1)& (0+255),f,b
 16309  011D6A  2EE8               	decfsz	wreg,f,c
 16310  011D6C  D7FB               	goto	u18285
 16311                           
 16312                           ; BSR set to: 0
 16313                           ;fat16.c: 81: flash_partial_read(root_sector, offset, 1, &first_byte);
 16314  011D6E  C088  F073         	movff	__root_is_available@root_sector,flash_partial_read@page
 16315  011D72  C089  F074         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 16316  011D76  C08A  F075         	movff	__root_is_available@offset,flash_partial_read@start
 16317  011D7A  C08B  F076         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 16318  011D7E  0E00               	movlw	0
 16319  011D80  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16320  011D82  0E01               	movlw	1
 16321  011D84  6F77               	movwf	flash_partial_read@length& (0+255),b
 16322  011D86  0E8D               	movlw	low __root_is_available@first_byte
 16323  011D88  6F79               	movwf	flash_partial_read@data& (0+255),b
 16324  011D8A  0E00               	movlw	high __root_is_available@first_byte
 16325  011D8C  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16326  011D8E  ECCA  F08F         	call	_flash_partial_read	;wreg free
 16327                           
 16328                           ;fat16.c: 84: if((first_byte==0x00) || (first_byte==0xE5))
 16329  011D92  0100               	movlb	0	; () banked
 16330  011D94  518D               	movf	__root_is_available@first_byte& (0+255),w,b
 16331  011D96  B4D8               	btfsc	status,2,c
 16332  011D98  D004               	goto	u18300
 16333                           
 16334                           ; BSR set to: 0
 16335  011D9A  0EE5               	movlw	229
 16336  011D9C  198D               	xorwf	__root_is_available@first_byte& (0+255),w,b
 16337  011D9E  A4D8               	btfss	status,2,c
 16338  011DA0  D002               	goto	l2949
 16339  011DA2                     u18300:
 16340                           
 16341                           ; BSR set to: 0
 16342                           ;fat16.c: 85: {;fat16.c: 87: return 1;
 16343                           
 16344                           ; BSR set to: 0
 16345  011DA2  0E01               	movlw	1
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;fat16.c: 88: }
 16349                           
 16350                           ; BSR set to: 0
 16351  011DA4  0012               	return	
 16352  011DA6                     l2949:
 16353                           
 16354                           ; BSR set to: 0
 16355                           ;fat16.c: 89: else;fat16.c: 90: {;fat16.c: 92: return 0;
 16356                           
 16357                           ; BSR set to: 0
 16358  011DA6  0E00               	movlw	0
 16359                           
 16360                           ; BSR set to: 0
 16361  011DA8  0012               	return	
 16362  011DAA                     __end_of__root_is_available:
 16363                           	opt stack 0
 16364                           tblptru	equ	0xFF8
 16365                           tblptrh	equ	0xFF7
 16366                           tblptrl	equ	0xFF6
 16367                           tablat	equ	0xFF5
 16368                           prodh	equ	0xFF4
 16369                           prodl	equ	0xFF3
 16370                           intcon	equ	0xFF2
 16371                           intcon2	equ	0xFF1
 16372                           intcon3	equ	0xFF0
 16373                           postinc0	equ	0xFEE
 16374                           wreg	equ	0xFE8
 16375                           postinc1	equ	0xFE6
 16376                           postdec1	equ	0xFE5
 16377                           plusw1	equ	0xFE3
 16378                           fsr1h	equ	0xFE2
 16379                           fsr1l	equ	0xFE1
 16380                           indf2	equ	0xFDF
 16381                           postinc2	equ	0xFDE
 16382                           postdec2	equ	0xFDD
 16383                           plusw2	equ	0xFDB
 16384                           fsr2h	equ	0xFDA
 16385                           fsr2l	equ	0xFD9
 16386                           status	equ	0xFD8
 16387                           
 16388 ;; *************** function __read_root *****************
 16389 ;; Defined at:
 16390 ;;		line 194 in file "fat16.c"
 16391 ;; Parameters:    Size  Location     Type
 16392 ;;  slot            1    wreg     unsigned char 
 16393 ;;  data            2   39[BANK0 ] PTR struct .
 16394 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 16395 ;; Auto vars:     Size  Location     Type
 16396 ;;  slot            1   46[BANK0 ] unsigned char 
 16397 ;;  offset          2   44[BANK0 ] unsigned int 
 16398 ;;  root_sector     2   42[BANK0 ] unsigned int 
 16399 ;; Return value:  Size  Location     Type
 16400 ;;                  1    wreg      void 
 16401 ;; Registers used:
 16402 ;;		wreg, status,2, status,0, cstack
 16403 ;; Tracked objects:
 16404 ;;		On entry : 0/0
 16405 ;;		On exit  : 0/0
 16406 ;;		Unchanged: 0/0
 16407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16408 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16409 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16410 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16411 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16412 ;;Total ram usage:        8 bytes
 16413 ;; Hardware stack levels used:    1
 16414 ;; Hardware stack levels required when called:   14
 16415 ;; This function calls:
 16416 ;;		_flash_partial_read
 16417 ;; This function is called by:
 16418 ;;		_fat_append_to_file
 16419 ;;		_fat_rename_file
 16420 ;;		_fat_read_from_file
 16421 ;; This function uses a non-reentrant model
 16422 ;;
 16423                           
 16424                           	psect	text76
 16425  0127C8                     __ptext76:
 16426                           	opt stack 0
 16427  0127C8                     __read_root:
 16428                           	opt stack 14
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;incstack = 0
 16432                           ;__read_root@slot stored from wreg
 16433  0127C8  0100               	movlb	0	; () banked
 16434  0127CA  6F8E               	movwf	__read_root@slot& (0+255),b
 16435                           
 16436                           ;fat16.c: 196: uint16_t root_sector;;fat16.c: 197: uint16_t offset;;fat16.c: 198: root_s
      +                          ector = (slot >> 4) + 18;
 16437  0127CC  C08E  F089         	movff	__read_root@slot,??__read_root
 16438  0127D0  0100               	movlb	0	; () banked
 16439  0127D2  3B89               	swapf	??__read_root& (0+255),f,b
 16440  0127D4  0E0F               	movlw	15
 16441  0127D6  1789               	andwf	??__read_root& (0+255),f,b
 16442  0127D8  0E12               	movlw	18
 16443  0127DA  2589               	addwf	??__read_root& (0+255),w,b
 16444  0127DC  6F8A               	movwf	__read_root@root_sector& (0+255),b
 16445  0127DE  6B8B               	clrf	(__read_root@root_sector+1)& (0+255),b
 16446  0127E0  0E00               	movlw	0
 16447  0127E2  238B               	addwfc	(__read_root@root_sector+1)& (0+255),f,b
 16448                           
 16449                           ;fat16.c: 199: offset = (slot & 0b1111);
 16450  0127E4  C08E  F089         	movff	__read_root@slot,??__read_root
 16451  0127E8  0E0F               	movlw	15
 16452  0127EA  1789               	andwf	??__read_root& (0+255),f,b
 16453  0127EC  5189               	movf	??__read_root& (0+255),w,b
 16454  0127EE  6F8C               	movwf	__read_root@offset& (0+255),b
 16455  0127F0  6B8D               	clrf	(__read_root@offset+1)& (0+255),b
 16456                           
 16457                           ;fat16.c: 200: offset <<= 5;
 16458  0127F2  0E05               	movlw	5
 16459  0127F4                     u19155:
 16460  0127F4  90D8               	bcf	status,0,c
 16461  0127F6  378C               	rlcf	__read_root@offset& (0+255),f,b
 16462  0127F8  378D               	rlcf	(__read_root@offset+1)& (0+255),f,b
 16463  0127FA  2EE8               	decfsz	wreg,f,c
 16464  0127FC  D7FB               	goto	u19155
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 16468  0127FE  C08A  F073         	movff	__read_root@root_sector,flash_partial_read@page
 16469  012802  C08B  F074         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 16470  012806  C08C  F075         	movff	__read_root@offset,flash_partial_read@start
 16471  01280A  C08D  F076         	movff	__read_root@offset+1,flash_partial_read@start+1
 16472  01280E  0E00               	movlw	0
 16473  012810  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16474  012812  0E20               	movlw	32
 16475  012814  6F77               	movwf	flash_partial_read@length& (0+255),b
 16476  012816  C087  F079         	movff	__read_root@data,flash_partial_read@data
 16477  01281A  C088  F07A         	movff	__read_root@data+1,flash_partial_read@data+1
 16478  01281E  ECCA  F08F         	call	_flash_partial_read	;wreg free
 16479  012822  0012               	return		;funcret
 16480  012824                     __end_of__read_root:
 16481                           	opt stack 0
 16482                           tblptru	equ	0xFF8
 16483                           tblptrh	equ	0xFF7
 16484                           tblptrl	equ	0xFF6
 16485                           tablat	equ	0xFF5
 16486                           prodh	equ	0xFF4
 16487                           prodl	equ	0xFF3
 16488                           intcon	equ	0xFF2
 16489                           intcon2	equ	0xFF1
 16490                           intcon3	equ	0xFF0
 16491                           postinc0	equ	0xFEE
 16492                           wreg	equ	0xFE8
 16493                           postinc1	equ	0xFE6
 16494                           postdec1	equ	0xFE5
 16495                           plusw1	equ	0xFE3
 16496                           fsr1h	equ	0xFE2
 16497                           fsr1l	equ	0xFE1
 16498                           indf2	equ	0xFDF
 16499                           postinc2	equ	0xFDE
 16500                           postdec2	equ	0xFDD
 16501                           plusw2	equ	0xFDB
 16502                           fsr2h	equ	0xFDA
 16503                           fsr2l	equ	0xFD9
 16504                           status	equ	0xFD8
 16505                           
 16506 ;; *************** function __read_fat *****************
 16507 ;; Defined at:
 16508 ;;		line 171 in file "fat16.c"
 16509 ;; Parameters:    Size  Location     Type
 16510 ;;  cluster         2   39[BANK0 ] unsigned int 
 16511 ;; Auto vars:     Size  Location     Type
 16512 ;;  value           2   45[BANK0 ] unsigned int 
 16513 ;;  offset          2   43[BANK0 ] unsigned int 
 16514 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16515 ;; Return value:  Size  Location     Type
 16516 ;;                  2   39[BANK0 ] unsigned int 
 16517 ;; Registers used:
 16518 ;;		wreg, status,2, status,0, cstack
 16519 ;; Tracked objects:
 16520 ;;		On entry : 0/0
 16521 ;;		On exit  : 0/0
 16522 ;;		Unchanged: 0/0
 16523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16525 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16527 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16528 ;;Total ram usage:        8 bytes
 16529 ;; Hardware stack levels used:    1
 16530 ;; Hardware stack levels required when called:   14
 16531 ;; This function calls:
 16532 ;;		_flash_partial_read
 16533 ;; This function is called by:
 16534 ;;		_fat_append_to_file
 16535 ;;		_fat_delete_file
 16536 ;;		_fat_read_from_file
 16537 ;; This function uses a non-reentrant model
 16538 ;;
 16539                           
 16540                           	psect	text77
 16541  012FD2                     __ptext77:
 16542                           	opt stack 0
 16543  012FD2                     __read_fat:
 16544                           	opt stack 14
 16545                           
 16546                           ;fat16.c: 173: uint16_t fat_sector;;fat16.c: 174: uint16_t offset;;fat16.c: 175: uint16_
      +                          t value;;fat16.c: 176: fat_sector = cluster>>8;
 16547                           
 16548                           ;incstack = 0
 16549  012FD2  0100               	movlb	0	; () banked
 16550  012FD4  5188               	movf	(__read_fat@cluster+1)& (0+255),w,b
 16551  012FD6  6F89               	movwf	__read_fat@fat_sector& (0+255),b
 16552  012FD8  6B8A               	clrf	(__read_fat@fat_sector+1)& (0+255),b
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;fat16.c: 177: fat_sector += 2;
 16556  012FDA  0E02               	movlw	2
 16557  012FDC  2789               	addwf	__read_fat@fat_sector& (0+255),f,b
 16558  012FDE  0E00               	movlw	0
 16559  012FE0  238A               	addwfc	(__read_fat@fat_sector+1)& (0+255),f,b
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;fat16.c: 178: offset = cluster & 0xFF;
 16563  012FE2  5187               	movf	__read_fat@cluster& (0+255),w,b
 16564  012FE4  6F8B               	movwf	__read_fat@offset& (0+255),b
 16565  012FE6  6B8C               	clrf	(__read_fat@offset+1)& (0+255),b
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;fat16.c: 179: offset <<= 1;
 16569  012FE8  90D8               	bcf	status,0,c
 16570  012FEA  378B               	rlcf	__read_fat@offset& (0+255),f,b
 16571  012FEC  378C               	rlcf	(__read_fat@offset+1)& (0+255),f,b
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 16575  012FEE  C089  F073         	movff	__read_fat@fat_sector,flash_partial_read@page
 16576  012FF2  C08A  F074         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 16577  012FF6  C08B  F075         	movff	__read_fat@offset,flash_partial_read@start
 16578  012FFA  C08C  F076         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16579  012FFE  0E00               	movlw	0
 16580  013000  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16581  013002  0E02               	movlw	2
 16582  013004  6F77               	movwf	flash_partial_read@length& (0+255),b
 16583  013006  0E8D               	movlw	low __read_fat@value
 16584  013008  6F79               	movwf	flash_partial_read@data& (0+255),b
 16585  01300A  0E00               	movlw	high __read_fat@value
 16586  01300C  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16587  01300E  ECCA  F08F         	call	_flash_partial_read	;wreg free
 16588                           
 16589                           ;fat16.c: 181: return value;
 16590  013012  C08D  F087         	movff	__read_fat@value,?__read_fat
 16591  013016  C08E  F088         	movff	__read_fat@value+1,?__read_fat+1
 16592  01301A  0012               	return	
 16593  01301C                     __end_of__read_fat:
 16594                           	opt stack 0
 16595                           tblptru	equ	0xFF8
 16596                           tblptrh	equ	0xFF7
 16597                           tblptrl	equ	0xFF6
 16598                           tablat	equ	0xFF5
 16599                           prodh	equ	0xFF4
 16600                           prodl	equ	0xFF3
 16601                           intcon	equ	0xFF2
 16602                           intcon2	equ	0xFF1
 16603                           intcon3	equ	0xFF0
 16604                           postinc0	equ	0xFEE
 16605                           wreg	equ	0xFE8
 16606                           postinc1	equ	0xFE6
 16607                           postdec1	equ	0xFE5
 16608                           plusw1	equ	0xFE3
 16609                           fsr1h	equ	0xFE2
 16610                           fsr1l	equ	0xFE1
 16611                           indf2	equ	0xFDF
 16612                           postinc2	equ	0xFDE
 16613                           postdec2	equ	0xFDD
 16614                           plusw2	equ	0xFDB
 16615                           fsr2h	equ	0xFDA
 16616                           fsr2l	equ	0xFD9
 16617                           status	equ	0xFD8
 16618                           
 16619 ;; *************** function __get_empty_cluster *****************
 16620 ;; Defined at:
 16621 ;;		line 109 in file "fat16.c"
 16622 ;; Parameters:    Size  Location     Type
 16623 ;;  first_cluste    2   39[BANK0 ] unsigned int 
 16624 ;; Auto vars:     Size  Location     Type
 16625 ;;  cluster         2   47[BANK0 ] unsigned int 
 16626 ;;  value           2   45[BANK0 ] unsigned int 
 16627 ;;  offset          2   43[BANK0 ] unsigned int 
 16628 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 16629 ;; Return value:  Size  Location     Type
 16630 ;;                  2   39[BANK0 ] unsigned int 
 16631 ;; Registers used:
 16632 ;;		wreg, status,2, status,0, cstack
 16633 ;; Tracked objects:
 16634 ;;		On entry : 0/0
 16635 ;;		On exit  : 0/0
 16636 ;;		Unchanged: 0/0
 16637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16639 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16641 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16642 ;;Total ram usage:       10 bytes
 16643 ;; Hardware stack levels used:    1
 16644 ;; Hardware stack levels required when called:   14
 16645 ;; This function calls:
 16646 ;;		_flash_partial_read
 16647 ;; This function is called by:
 16648 ;;		_fat_create_file
 16649 ;;		_fat_append_to_file
 16650 ;; This function uses a non-reentrant model
 16651 ;;
 16652                           
 16653                           	psect	text78
 16654  011E26                     __ptext78:
 16655                           	opt stack 0
 16656  011E26                     __get_empty_cluster:
 16657                           	opt stack 14
 16658                           
 16659                           ;fat16.c: 111: uint16_t cluster;;fat16.c: 112: uint16_t fat_sector;;fat16.c: 113: uint16
      +                          _t offset;;fat16.c: 114: uint16_t value;;fat16.c: 117: for(cluster=first_cluster; cluste
      +                          r<(8170+2); ++cluster)
 16660                           
 16661                           ;incstack = 0
 16662  011E26  C087  F08F         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 16663  011E2A  C088  F090         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 16664  011E2E  0EEC               	movlw	236
 16665  011E30  0100               	movlb	0	; () banked
 16666  011E32  5D8F               	subwf	__get_empty_cluster@cluster& (0+255),w,b
 16667  011E34  0E1F               	movlw	31
 16668  011E36  5990               	subwfb	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16669  011E38  B0D8               	btfsc	status,0,c
 16670  011E3A  D02D               	goto	u19090
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;fat16.c: 118: {;fat16.c: 119: fat_sector = cluster>>8;
 16674                           
 16675                           ; BSR set to: 0
 16676                           
 16677                           ; BSR set to: 0
 16678  011E3C  5190               	movf	(__get_empty_cluster@cluster+1)& (0+255),w,b
 16679  011E3E  6F89               	movwf	__get_empty_cluster@fat_sector& (0+255),b
 16680  011E40  6B8A               	clrf	(__get_empty_cluster@fat_sector+1)& (0+255),b
 16681                           
 16682                           ; BSR set to: 0
 16683                           ;fat16.c: 120: fat_sector += 2;
 16684  011E42  0E02               	movlw	2
 16685  011E44  2789               	addwf	__get_empty_cluster@fat_sector& (0+255),f,b
 16686  011E46  0E00               	movlw	0
 16687  011E48  238A               	addwfc	(__get_empty_cluster@fat_sector+1)& (0+255),f,b
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;fat16.c: 121: offset = cluster & 0xFF;
 16691  011E4A  518F               	movf	__get_empty_cluster@cluster& (0+255),w,b
 16692  011E4C  6F8B               	movwf	__get_empty_cluster@offset& (0+255),b
 16693  011E4E  6B8C               	clrf	(__get_empty_cluster@offset+1)& (0+255),b
 16694                           
 16695                           ; BSR set to: 0
 16696                           ;fat16.c: 122: offset <<= 1;
 16697  011E50  90D8               	bcf	status,0,c
 16698  011E52  378B               	rlcf	__get_empty_cluster@offset& (0+255),f,b
 16699  011E54  378C               	rlcf	(__get_empty_cluster@offset+1)& (0+255),f,b
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;fat16.c: 123: flash_partial_read(fat_sector, offset, 2, &value);
 16703  011E56  C089  F073         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 16704  011E5A  C08A  F074         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 16705  011E5E  C08B  F075         	movff	__get_empty_cluster@offset,flash_partial_read@start
 16706  011E62  C08C  F076         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 16707  011E66  0E00               	movlw	0
 16708  011E68  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16709  011E6A  0E02               	movlw	2
 16710  011E6C  6F77               	movwf	flash_partial_read@length& (0+255),b
 16711  011E6E  0E8D               	movlw	low __get_empty_cluster@value
 16712  011E70  6F79               	movwf	flash_partial_read@data& (0+255),b
 16713  011E72  0E00               	movlw	high __get_empty_cluster@value
 16714  011E74  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16715  011E76  ECCA  F08F         	call	_flash_partial_read	;wreg free
 16716                           
 16717                           ;fat16.c: 124: if(value==0x0000)
 16718  011E7A  0100               	movlb	0	; () banked
 16719  011E7C  518D               	movf	__get_empty_cluster@value& (0+255),w,b
 16720  011E7E  118E               	iorwf	(__get_empty_cluster@value+1)& (0+255),w,b
 16721  011E80  A4D8               	btfss	status,2,c
 16722  011E82  D005               	goto	l2963
 16723                           
 16724                           ; BSR set to: 0
 16725                           ;fat16.c: 125: {;fat16.c: 126: return cluster;
 16726  011E84  C08F  F087         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 16727  011E88  C090  F088         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 16728  011E8C  0012               	return	
 16729  011E8E                     l2963:
 16730                           
 16731                           ; BSR set to: 0
 16732                           
 16733                           ; BSR set to: 0
 16734  011E8E  4B8F               	infsnz	__get_empty_cluster@cluster& (0+255),f,b
 16735  011E90  2B90               	incf	(__get_empty_cluster@cluster+1)& (0+255),f,b
 16736                           
 16737                           ; BSR set to: 0
 16738  011E92  0EEC               	movlw	236
 16739  011E94  D7CE               	goto	L10
 16740  011E96                     u19090:
 16741                           
 16742                           ; BSR set to: 0
 16743                           ;fat16.c: 127: };fat16.c: 128: };fat16.c: 129: return 0x0000;
 16744                           
 16745                           ; BSR set to: 0
 16746  011E96  0E00               	movlw	0
 16747  011E98  6F88               	movwf	(?__get_empty_cluster+1)& (0+255),b
 16748  011E9A  0E00               	movlw	0
 16749  011E9C  6F87               	movwf	?__get_empty_cluster& (0+255),b
 16750  011E9E  0012               	return	
 16751  011EA0                     __end_of__get_empty_cluster:
 16752                           	opt stack 0
 16753                           tblptru	equ	0xFF8
 16754                           tblptrh	equ	0xFF7
 16755                           tblptrl	equ	0xFF6
 16756                           tablat	equ	0xFF5
 16757                           prodh	equ	0xFF4
 16758                           prodl	equ	0xFF3
 16759                           intcon	equ	0xFF2
 16760                           intcon2	equ	0xFF1
 16761                           intcon3	equ	0xFF0
 16762                           postinc0	equ	0xFEE
 16763                           wreg	equ	0xFE8
 16764                           postinc1	equ	0xFE6
 16765                           postdec1	equ	0xFE5
 16766                           plusw1	equ	0xFE3
 16767                           fsr1h	equ	0xFE2
 16768                           fsr1l	equ	0xFE1
 16769                           indf2	equ	0xFDF
 16770                           postinc2	equ	0xFDE
 16771                           postdec2	equ	0xFDD
 16772                           plusw2	equ	0xFDB
 16773                           fsr2h	equ	0xFDA
 16774                           fsr2l	equ	0xFD9
 16775                           status	equ	0xFD8
 16776                           
 16777 ;; *************** function _log_get_number_of_samples *****************
 16778 ;; Defined at:
 16779 ;;		line 169 in file "log.c"
 16780 ;; Parameters:    Size  Location     Type
 16781 ;;		None
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;		None
 16784 ;; Return value:  Size  Location     Type
 16785 ;;                  2    0[BANK0 ] unsigned int 
 16786 ;; Registers used:
 16787 ;;		None
 16788 ;; Tracked objects:
 16789 ;;		On entry : 0/0
 16790 ;;		On exit  : 0/0
 16791 ;;		Unchanged: 0/0
 16792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16793 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16796 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16797 ;;Total ram usage:        2 bytes
 16798 ;; Hardware stack levels used:    1
 16799 ;; Hardware stack levels required when called:   10
 16800 ;; This function calls:
 16801 ;;		Nothing
 16802 ;; This function is called by:
 16803 ;;		_main
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           	psect	text79
 16808  013E80                     __ptext79:
 16809                           	opt stack 0
 16810  013E80                     _log_get_number_of_samples:
 16811                           	opt stack 20
 16812                           
 16813                           ;log.c: 171: return averageCount;
 16814                           
 16815                           ; BSR set to: 0
 16816                           ;incstack = 0
 16817  013E80  C016  F060         	movff	_averageCount,?_log_get_number_of_samples
 16818  013E84  C017  F061         	movff	_averageCount+1,?_log_get_number_of_samples+1
 16819  013E88  0012               	return		;funcret
 16820  013E8A                     __end_of_log_get_number_of_samples:
 16821                           	opt stack 0
 16822                           tblptru	equ	0xFF8
 16823                           tblptrh	equ	0xFF7
 16824                           tblptrl	equ	0xFF6
 16825                           tablat	equ	0xFF5
 16826                           prodh	equ	0xFF4
 16827                           prodl	equ	0xFF3
 16828                           intcon	equ	0xFF2
 16829                           intcon2	equ	0xFF1
 16830                           intcon3	equ	0xFF0
 16831                           postinc0	equ	0xFEE
 16832                           wreg	equ	0xFE8
 16833                           postinc1	equ	0xFE6
 16834                           postdec1	equ	0xFE5
 16835                           plusw1	equ	0xFE3
 16836                           fsr1h	equ	0xFE2
 16837                           fsr1l	equ	0xFE1
 16838                           indf2	equ	0xFDF
 16839                           postinc2	equ	0xFDE
 16840                           postdec2	equ	0xFDD
 16841                           plusw2	equ	0xFDB
 16842                           fsr2h	equ	0xFDA
 16843                           fsr2l	equ	0xFD9
 16844                           status	equ	0xFD8
 16845                           
 16846 ;; *************** function _log_collect_data *****************
 16847 ;; Defined at:
 16848 ;;		line 114 in file "log.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;		None
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;  temp            2   24[BANK0 ] unsigned int 
 16853 ;; Return value:  Size  Location     Type
 16854 ;;                  1    wreg      void 
 16855 ;; Registers used:
 16856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16863 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16864 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16865 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16866 ;;Total ram usage:        6 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:   12
 16869 ;; This function calls:
 16870 ;;		__get_input_power
 16871 ;;		__get_output_power
 16872 ;;		_buck_get_mode
 16873 ;;		_rtcc_get_seconds_decimal
 16874 ;;		_system_output_is_on
 16875 ;; This function is called by:
 16876 ;;		_main
 16877 ;; This function uses a non-reentrant model
 16878 ;;
 16879                           
 16880                           	psect	text80
 16881  00CD66                     __ptext80:
 16882                           	opt stack 0
 16883  00CD66                     _log_collect_data:
 16884                           	opt stack 18
 16885                           
 16886                           ;log.c: 116: uint16_t temp;;log.c: 119: temp = rtcc_get_seconds_decimal();
 16887                           
 16888                           ;incstack = 0
 16889  00CD66  ECED  F09E         	call	_rtcc_get_seconds_decimal	;wreg free
 16890  00CD6A  0100               	movlb	0	; () banked
 16891  00CD6C  6F74               	movwf	??_log_collect_data& (0+255),b
 16892  00CD6E  5174               	movf	??_log_collect_data& (0+255),w,b
 16893  00CD70  6F78               	movwf	log_collect_data@temp& (0+255),b
 16894  00CD72  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;log.c: 120: if(lastSecond==temp)
 16898  00CD74  0101               	movlb	1	; () banked
 16899  00CD76  51EF               	movf	_lastSecond& (0+255),w,b
 16900  00CD78  0100               	movlb	0	; () banked
 16901  00CD7A  6F74               	movwf	??_log_collect_data& (0+255),b
 16902  00CD7C  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 16903  00CD7E  5178               	movf	log_collect_data@temp& (0+255),w,b
 16904  00CD80  1974               	xorwf	??_log_collect_data& (0+255),w,b
 16905  00CD82  E104               	bnz	l3297
 16906  00CD84  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 16907  00CD86  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 16908  00CD88  B4D8               	btfsc	status,2,c
 16909  00CD8A  0012               	return	
 16910  00CD8C                     l3297:
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;log.c: 123: };log.c: 126: lastSecond = (uint8_t) temp;
 16914  00CD8C  C078  F1EF         	movff	log_collect_data@temp,_lastSecond
 16915                           
 16916                           ; BSR set to: 0
 16917                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 16918  00CD90  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 16919  00CD94  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 16920  00CD98  0E00               	movlw	0
 16921  00CD9A  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16922  00CD9C  0EFF               	movlw	255
 16923  00CD9E  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16924  00CDA0  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16925  00CDA2  5174               	movf	??_log_collect_data& (0+255),w,b
 16926  00CDA4  0102               	movlb	2	; () banked
 16927  00CDA6  279A               	addwf	_inputVoltageSum& (0+255),f,b
 16928  00CDA8  0100               	movlb	0	; () banked
 16929  00CDAA  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16930  00CDAC  0102               	movlb	2	; () banked
 16931  00CDAE  239B               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 16932  00CDB0  0100               	movlb	0	; () banked
 16933  00CDB2  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16934  00CDB4  0102               	movlb	2	; () banked
 16935  00CDB6  239C               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 16936  00CDB8  0100               	movlb	0	; () banked
 16937  00CDBA  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16938  00CDBC  0102               	movlb	2	; () banked
 16939  00CDBE  239D               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 16940                           
 16941                           ;log.c: 130: inputCurrentSum += os.input_current;
 16942  00CDC0  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 16943  00CDC4  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 16944  00CDC8  0E00               	movlw	0
 16945  00CDCA  0100               	movlb	0	; () banked
 16946  00CDCC  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16947  00CDCE  0EFF               	movlw	255
 16948  00CDD0  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16949  00CDD2  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16950  00CDD4  5174               	movf	??_log_collect_data& (0+255),w,b
 16951  00CDD6  0102               	movlb	2	; () banked
 16952  00CDD8  2796               	addwf	_inputCurrentSum& (0+255),f,b
 16953  00CDDA  0100               	movlb	0	; () banked
 16954  00CDDC  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16955  00CDDE  0102               	movlb	2	; () banked
 16956  00CDE0  2397               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 16957  00CDE2  0100               	movlb	0	; () banked
 16958  00CDE4  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16959  00CDE6  0102               	movlb	2	; () banked
 16960  00CDE8  2398               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 16961  00CDEA  0100               	movlb	0	; () banked
 16962  00CDEC  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16963  00CDEE  0102               	movlb	2	; () banked
 16964  00CDF0  2399               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 16965                           
 16966                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 16967  00CDF2  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 16968  00CDF6  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 16969  00CDFA  0E00               	movlw	0
 16970  00CDFC  0100               	movlb	0	; () banked
 16971  00CDFE  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16972  00CE00  0EFF               	movlw	255
 16973  00CE02  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16974  00CE04  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 16975  00CE06  5174               	movf	??_log_collect_data& (0+255),w,b
 16976  00CE08  0102               	movlb	2	; () banked
 16977  00CE0A  2792               	addwf	_outputVoltageSum& (0+255),f,b
 16978  00CE0C  0100               	movlb	0	; () banked
 16979  00CE0E  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 16980  00CE10  0102               	movlb	2	; () banked
 16981  00CE12  2393               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 16982  00CE14  0100               	movlb	0	; () banked
 16983  00CE16  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 16984  00CE18  0102               	movlb	2	; () banked
 16985  00CE1A  2394               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 16986  00CE1C  0100               	movlb	0	; () banked
 16987  00CE1E  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 16988  00CE20  0102               	movlb	2	; () banked
 16989  00CE22  2395               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 16990                           
 16991                           ;log.c: 132: outputCurrentSum += os.output_current;
 16992  00CE24  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 16993  00CE28  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 16994  00CE2C  0E00               	movlw	0
 16995  00CE2E  0100               	movlb	0	; () banked
 16996  00CE30  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 16997  00CE32  0EFF               	movlw	255
 16998  00CE34  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 16999  00CE36  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17000  00CE38  5174               	movf	??_log_collect_data& (0+255),w,b
 17001  00CE3A  0102               	movlb	2	; () banked
 17002  00CE3C  278E               	addwf	_outputCurrentSum& (0+255),f,b
 17003  00CE3E  0100               	movlb	0	; () banked
 17004  00CE40  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17005  00CE42  0102               	movlb	2	; () banked
 17006  00CE44  238F               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 17007  00CE46  0100               	movlb	0	; () banked
 17008  00CE48  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17009  00CE4A  0102               	movlb	2	; () banked
 17010  00CE4C  2390               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 17011  00CE4E  0100               	movlb	0	; () banked
 17012  00CE50  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17013  00CE52  0102               	movlb	2	; () banked
 17014  00CE54  2391               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 17015                           
 17016                           ; BSR set to: 2
 17017                           ;log.c: 133: temp = _get_input_power();
 17018  00CE56  EC54  F08D         	call	__get_input_power	;wreg free
 17019  00CE5A  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 17020  00CE5E  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 17021                           
 17022                           ;log.c: 134: inputPowerSum += temp>>1;
 17023  00CE62  90D8               	bcf	status,0,c
 17024  00CE64  0100               	movlb	0	; () banked
 17025  00CE66  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17026  00CE68  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17027  00CE6A  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17028  00CE6C  6F74               	movwf	??_log_collect_data& (0+255),b
 17029  00CE6E  5174               	movf	??_log_collect_data& (0+255),w,b
 17030  00CE70  0102               	movlb	2	; () banked
 17031  00CE72  278A               	addwf	_inputPowerSum& (0+255),f,b
 17032  00CE74  0100               	movlb	0	; () banked
 17033  00CE76  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17034  00CE78  0102               	movlb	2	; () banked
 17035  00CE7A  238B               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 17036  00CE7C  0E00               	movlw	0
 17037  00CE7E  238C               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 17038  00CE80  0E00               	movlw	0
 17039  00CE82  238D               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 17040                           
 17041                           ; BSR set to: 2
 17042                           ;log.c: 135: inputCapacitySum += temp;
 17043  00CE84  0100               	movlb	0	; () banked
 17044  00CE86  5178               	movf	log_collect_data@temp& (0+255),w,b
 17045  00CE88  0102               	movlb	2	; () banked
 17046  00CE8A  2782               	addwf	_inputCapacitySum& (0+255),f,b
 17047  00CE8C  0100               	movlb	0	; () banked
 17048  00CE8E  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17049  00CE90  0102               	movlb	2	; () banked
 17050  00CE92  2383               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 17051  00CE94  0E00               	movlw	0
 17052  00CE96  2384               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 17053  00CE98  0E00               	movlw	0
 17054  00CE9A  2385               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 17055                           
 17056                           ; BSR set to: 2
 17057                           ;log.c: 136: temp = _get_output_power();
 17058  00CE9C  EC13  F08D         	call	__get_output_power	;wreg free
 17059  00CEA0  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 17060  00CEA4  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 17061                           
 17062                           ;log.c: 137: outputPowerSum += temp>>1;
 17063  00CEA8  90D8               	bcf	status,0,c
 17064  00CEAA  0100               	movlb	0	; () banked
 17065  00CEAC  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17066  00CEAE  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17067  00CEB0  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17068  00CEB2  6F74               	movwf	??_log_collect_data& (0+255),b
 17069  00CEB4  5174               	movf	??_log_collect_data& (0+255),w,b
 17070  00CEB6  0102               	movlb	2	; () banked
 17071  00CEB8  2786               	addwf	_outputPowerSum& (0+255),f,b
 17072  00CEBA  0100               	movlb	0	; () banked
 17073  00CEBC  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17074  00CEBE  0102               	movlb	2	; () banked
 17075  00CEC0  2387               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 17076  00CEC2  0E00               	movlw	0
 17077  00CEC4  2388               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 17078  00CEC6  0E00               	movlw	0
 17079  00CEC8  2389               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 17080                           
 17081                           ; BSR set to: 2
 17082                           ;log.c: 138: outputCapacitySum += temp;
 17083  00CECA  0100               	movlb	0	; () banked
 17084  00CECC  5178               	movf	log_collect_data@temp& (0+255),w,b
 17085  00CECE  0102               	movlb	2	; () banked
 17086  00CED0  277E               	addwf	_outputCapacitySum& (0+255),f,b
 17087  00CED2  0100               	movlb	0	; () banked
 17088  00CED4  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17089  00CED6  0102               	movlb	2	; () banked
 17090  00CED8  237F               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 17091  00CEDA  0E00               	movlw	0
 17092  00CEDC  2380               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 17093  00CEDE  0E00               	movlw	0
 17094  00CEE0  2381               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 17095                           
 17096                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 17097  00CEE2  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 17098  00CEE6  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 17099  00CEEA  0E00               	movlw	0
 17100  00CEEC  0100               	movlb	0	; () banked
 17101  00CEEE  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17102  00CEF0  0EFF               	movlw	255
 17103  00CEF2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17104  00CEF4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17105  00CEF6  5174               	movf	??_log_collect_data& (0+255),w,b
 17106  00CEF8  0102               	movlb	2	; () banked
 17107  00CEFA  277A               	addwf	_temperatureOnboardSum& (0+255),f,b
 17108  00CEFC  0100               	movlb	0	; () banked
 17109  00CEFE  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17110  00CF00  0102               	movlb	2	; () banked
 17111  00CF02  237B               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 17112  00CF04  0100               	movlb	0	; () banked
 17113  00CF06  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17114  00CF08  0102               	movlb	2	; () banked
 17115  00CF0A  237C               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 17116  00CF0C  0100               	movlb	0	; () banked
 17117  00CF0E  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17118  00CF10  0102               	movlb	2	; () banked
 17119  00CF12  237D               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 17120                           
 17121                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 17122  00CF14  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 17123  00CF18  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 17124  00CF1C  0E00               	movlw	0
 17125  00CF1E  0100               	movlb	0	; () banked
 17126  00CF20  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17127  00CF22  0EFF               	movlw	255
 17128  00CF24  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17129  00CF26  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17130  00CF28  5174               	movf	??_log_collect_data& (0+255),w,b
 17131  00CF2A  0102               	movlb	2	; () banked
 17132  00CF2C  2776               	addwf	_temperatureExternal1Sum& (0+255),f,b
 17133  00CF2E  0100               	movlb	0	; () banked
 17134  00CF30  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17135  00CF32  0102               	movlb	2	; () banked
 17136  00CF34  2377               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 17137  00CF36  0100               	movlb	0	; () banked
 17138  00CF38  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17139  00CF3A  0102               	movlb	2	; () banked
 17140  00CF3C  2378               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 17141  00CF3E  0100               	movlb	0	; () banked
 17142  00CF40  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17143  00CF42  0102               	movlb	2	; () banked
 17144  00CF44  2379               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 17145                           
 17146                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 17147  00CF46  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 17148  00CF4A  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 17149  00CF4E  0E00               	movlw	0
 17150  00CF50  0100               	movlb	0	; () banked
 17151  00CF52  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17152  00CF54  0EFF               	movlw	255
 17153  00CF56  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17154  00CF58  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17155  00CF5A  5174               	movf	??_log_collect_data& (0+255),w,b
 17156  00CF5C  0102               	movlb	2	; () banked
 17157  00CF5E  2772               	addwf	_temperatureExternal2Sum& (0+255),f,b
 17158  00CF60  0100               	movlb	0	; () banked
 17159  00CF62  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17160  00CF64  0102               	movlb	2	; () banked
 17161  00CF66  2373               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 17162  00CF68  0100               	movlb	0	; () banked
 17163  00CF6A  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17164  00CF6C  0102               	movlb	2	; () banked
 17165  00CF6E  2374               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 17166  00CF70  0100               	movlb	0	; () banked
 17167  00CF72  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17168  00CF74  0102               	movlb	2	; () banked
 17169  00CF76  2375               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 17170                           
 17171                           ; BSR set to: 2
 17172                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 17173  00CF78  EC74  F09F         	call	_buck_get_mode	;wreg free
 17174  00CF7C  0100               	movlb	0	; () banked
 17175  00CF7E  6F74               	movwf	??_log_collect_data& (0+255),b
 17176  00CF80  0E7F               	movlw	127
 17177  00CF82  1774               	andwf	??_log_collect_data& (0+255),f,b
 17178  00CF84  B4D8               	btfsc	status,2,c
 17179  00CF86  D003               	goto	l3299
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;log.c: 143: {;log.c: 144: ++chargerOnTime;
 17183  00CF88  0102               	movlb	2	; () banked
 17184  00CF8A  4BB0               	infsnz	_chargerOnTime& (0+255),f,b
 17185  00CF8C  2BB1               	incf	(_chargerOnTime+1)& (0+255),f,b
 17186  00CF8E                     l3299:
 17187                           
 17188                           ;log.c: 145: };log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 17189                           
 17190                           ; BSR set to: 2
 17191  00CF8E  0102               	movlb	2	; () banked
 17192  00CF90  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 17193  00CF92  A4D8               	btfss	status,2,c
 17194  00CF94  D002               	goto	l3300
 17195                           
 17196                           ; BSR set to: 2
 17197                           ;log.c: 147: {;log.c: 148: ++lowPowerTime;
 17198  00CF96  4BAE               	infsnz	_lowPowerTime& (0+255),f,b
 17199  00CF98  2BAF               	incf	(_lowPowerTime+1)& (0+255),f,b
 17200  00CF9A                     l3300:
 17201                           
 17202                           ; BSR set to: 2
 17203                           ;log.c: 149: };log.c: 150: if(system_output_is_on(OUTPUT_1))
 17204                           
 17205                           ; BSR set to: 2
 17206  00CF9A  0E01               	movlw	1
 17207  00CF9C  ECF1  F09D         	call	_system_output_is_on
 17208  00CFA0  0900               	iorlw	0
 17209  00CFA2  B4D8               	btfsc	status,2,c
 17210  00CFA4  D002               	goto	l3301
 17211                           
 17212                           ;log.c: 151: status |= 0b10000000;
 17213  00CFA6  0101               	movlb	1	; () banked
 17214  00CFA8  8FF0               	bsf	_status& (0+255),7,b
 17215  00CFAA                     l3301:
 17216                           
 17217                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 17218                           
 17219                           ; BSR set to: 1
 17220  00CFAA  0E02               	movlw	2
 17221  00CFAC  ECF1  F09D         	call	_system_output_is_on
 17222  00CFB0  0900               	iorlw	0
 17223  00CFB2  B4D8               	btfsc	status,2,c
 17224  00CFB4  D002               	goto	l3302
 17225                           
 17226                           ;log.c: 153: status |= 0b01000000;
 17227  00CFB6  0101               	movlb	1	; () banked
 17228  00CFB8  8DF0               	bsf	_status& (0+255),6,b
 17229  00CFBA                     l3302:
 17230                           
 17231                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 17232                           
 17233                           ; BSR set to: 1
 17234  00CFBA  0E04               	movlw	4
 17235  00CFBC  ECF1  F09D         	call	_system_output_is_on
 17236  00CFC0  0900               	iorlw	0
 17237  00CFC2  B4D8               	btfsc	status,2,c
 17238  00CFC4  D002               	goto	l3303
 17239                           
 17240                           ;log.c: 155: status |= 0b00100000;
 17241  00CFC6  0101               	movlb	1	; () banked
 17242  00CFC8  8BF0               	bsf	_status& (0+255),5,b
 17243  00CFCA                     l3303:
 17244                           
 17245                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 17246                           
 17247                           ; BSR set to: 1
 17248  00CFCA  0E08               	movlw	8
 17249  00CFCC  ECF1  F09D         	call	_system_output_is_on
 17250  00CFD0  0900               	iorlw	0
 17251  00CFD2  B4D8               	btfsc	status,2,c
 17252  00CFD4  D002               	goto	l3304
 17253                           
 17254                           ;log.c: 157: status |= 0b00010000;
 17255  00CFD6  0101               	movlb	1	; () banked
 17256  00CFD8  89F0               	bsf	_status& (0+255),4,b
 17257  00CFDA                     l3304:
 17258                           
 17259                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 17260                           
 17261                           ; BSR set to: 1
 17262  00CFDA  0E10               	movlw	16
 17263  00CFDC  ECF1  F09D         	call	_system_output_is_on
 17264  00CFE0  0900               	iorlw	0
 17265  00CFE2  B4D8               	btfsc	status,2,c
 17266  00CFE4  D002               	goto	l3305
 17267                           
 17268                           ;log.c: 159: status |= 0b00001000;
 17269  00CFE6  0101               	movlb	1	; () banked
 17270  00CFE8  87F0               	bsf	_status& (0+255),3,b
 17271  00CFEA                     l3305:
 17272                           
 17273                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 17274                           
 17275                           ; BSR set to: 1
 17276  00CFEA  0E20               	movlw	32
 17277  00CFEC  ECF1  F09D         	call	_system_output_is_on
 17278  00CFF0  0900               	iorlw	0
 17279  00CFF2  B4D8               	btfsc	status,2,c
 17280  00CFF4  D002               	goto	l3306
 17281                           
 17282                           ;log.c: 161: status |= 0b00000100;
 17283  00CFF6  0101               	movlb	1	; () banked
 17284  00CFF8  85F0               	bsf	_status& (0+255),2,b
 17285  00CFFA                     l3306:
 17286                           
 17287                           ;log.c: 163: status |= 0b00000010;
 17288  00CFFA  0101               	movlb	1	; () banked
 17289  00CFFC  83F0               	bsf	_status& (0+255),1,b
 17290                           
 17291                           ;log.c: 164: ++averageCount;
 17292  00CFFE  4A16               	infsnz	_averageCount,f,c
 17293  00D000  2A17               	incf	_averageCount+1,f,c
 17294  00D002  0012               	return		;funcret
 17295  00D004                     __end_of_log_collect_data:
 17296                           	opt stack 0
 17297                           tblptru	equ	0xFF8
 17298                           tblptrh	equ	0xFF7
 17299                           tblptrl	equ	0xFF6
 17300                           tablat	equ	0xFF5
 17301                           prodh	equ	0xFF4
 17302                           prodl	equ	0xFF3
 17303                           intcon	equ	0xFF2
 17304                           intcon2	equ	0xFF1
 17305                           intcon3	equ	0xFF0
 17306                           postinc0	equ	0xFEE
 17307                           wreg	equ	0xFE8
 17308                           postinc1	equ	0xFE6
 17309                           postdec1	equ	0xFE5
 17310                           plusw1	equ	0xFE3
 17311                           fsr1h	equ	0xFE2
 17312                           fsr1l	equ	0xFE1
 17313                           indf2	equ	0xFDF
 17314                           postinc2	equ	0xFDE
 17315                           postdec2	equ	0xFDD
 17316                           plusw2	equ	0xFDB
 17317                           fsr2h	equ	0xFDA
 17318                           fsr2l	equ	0xFD9
 17319                           status	equ	0xFD8
 17320                           
 17321 ;; *************** function _system_output_is_on *****************
 17322 ;; Defined at:
 17323 ;;		line 491 in file "os.c"
 17324 ;; Parameters:    Size  Location     Type
 17325 ;;  output          1    wreg     enum E6652
 17326 ;; Auto vars:     Size  Location     Type
 17327 ;;  output          1    0[BANK0 ] enum E6652
 17328 ;; Return value:  Size  Location     Type
 17329 ;;                  1    wreg      unsigned char 
 17330 ;; Registers used:
 17331 ;;		wreg, status,2, status,0
 17332 ;; Tracked objects:
 17333 ;;		On entry : 0/0
 17334 ;;		On exit  : 0/0
 17335 ;;		Unchanged: 0/0
 17336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17341 ;;Total ram usage:        1 bytes
 17342 ;; Hardware stack levels used:    1
 17343 ;; Hardware stack levels required when called:   10
 17344 ;; This function calls:
 17345 ;;		Nothing
 17346 ;; This function is called by:
 17347 ;;		_system_output_toggle
 17348 ;;		_log_collect_data
 17349 ;; This function uses a non-reentrant model
 17350 ;;
 17351                           
 17352                           	psect	text81
 17353  013BE2                     __ptext81:
 17354                           	opt stack 0
 17355  013BE2                     _system_output_is_on:
 17356                           	opt stack 17
 17357                           
 17358                           ;incstack = 0
 17359                           ;system_output_is_on@output stored from wreg
 17360  013BE2  0100               	movlb	0	; () banked
 17361  013BE4  6F60               	movwf	system_output_is_on@output& (0+255),b
 17362                           
 17363                           ;os.c: 493: if(os.outputs&output)
 17364  013BE6  0102               	movlb	2	; () banked
 17365  013BE8  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 17366  013BEA  0100               	movlb	0	; () banked
 17367  013BEC  1560               	andwf	system_output_is_on@output& (0+255),w,b
 17368  013BEE  0900               	iorlw	0
 17369  013BF0  B4D8               	btfsc	status,2,c
 17370  013BF2  D002               	goto	l1396
 17371                           
 17372                           ; BSR set to: 0
 17373                           ;os.c: 494: return 1;
 17374  013BF4  0E01               	movlw	1
 17375                           
 17376                           ; BSR set to: 0
 17377                           
 17378                           ; BSR set to: 0
 17379  013BF6  0012               	return	
 17380  013BF8                     l1396:
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;os.c: 495: else;os.c: 496: return 0;
 17384                           
 17385                           ; BSR set to: 0
 17386  013BF8  0E00               	movlw	0
 17387                           
 17388                           ; BSR set to: 0
 17389  013BFA  0012               	return	
 17390  013BFC                     __end_of_system_output_is_on:
 17391                           	opt stack 0
 17392                           tblptru	equ	0xFF8
 17393                           tblptrh	equ	0xFF7
 17394                           tblptrl	equ	0xFF6
 17395                           tablat	equ	0xFF5
 17396                           prodh	equ	0xFF4
 17397                           prodl	equ	0xFF3
 17398                           intcon	equ	0xFF2
 17399                           intcon2	equ	0xFF1
 17400                           intcon3	equ	0xFF0
 17401                           postinc0	equ	0xFEE
 17402                           wreg	equ	0xFE8
 17403                           postinc1	equ	0xFE6
 17404                           postdec1	equ	0xFE5
 17405                           plusw1	equ	0xFE3
 17406                           fsr1h	equ	0xFE2
 17407                           fsr1l	equ	0xFE1
 17408                           indf2	equ	0xFDF
 17409                           postinc2	equ	0xFDE
 17410                           postdec2	equ	0xFDD
 17411                           plusw2	equ	0xFDB
 17412                           fsr2h	equ	0xFDA
 17413                           fsr2l	equ	0xFD9
 17414                           status	equ	0xFD8
 17415                           
 17416 ;; *************** function _rtcc_get_seconds_decimal *****************
 17417 ;; Defined at:
 17418 ;;		line 325 in file "rtcc.c"
 17419 ;; Parameters:    Size  Location     Type
 17420 ;;		None
 17421 ;; Auto vars:     Size  Location     Type
 17422 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 17423 ;; Return value:  Size  Location     Type
 17424 ;;                  1    wreg      unsigned char 
 17425 ;; Registers used:
 17426 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17427 ;; Tracked objects:
 17428 ;;		On entry : 0/0
 17429 ;;		On exit  : 0/0
 17430 ;;		Unchanged: 0/0
 17431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17433 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17435 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17436 ;;Total ram usage:        1 bytes
 17437 ;; Hardware stack levels used:    1
 17438 ;; Hardware stack levels required when called:   11
 17439 ;; This function calls:
 17440 ;;		__rtcc_bcd_to_decimal
 17441 ;;		_rtcc_get_seconds
 17442 ;; This function is called by:
 17443 ;;		__get_time
 17444 ;;		__get_dateTime
 17445 ;;		_log_start_new
 17446 ;;		_log_collect_data
 17447 ;; This function uses a non-reentrant model
 17448 ;;
 17449                           
 17450                           	psect	text82
 17451  013DDA                     __ptext82:
 17452                           	opt stack 0
 17453  013DDA                     _rtcc_get_seconds_decimal:
 17454                           	opt stack 17
 17455                           
 17456                           ;rtcc.c: 327: uint8_t bcd_seconds = rtcc_get_seconds();
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;incstack = 0
 17460  013DDA  EC0B  F09F         	call	_rtcc_get_seconds	;wreg free
 17461  013DDE  0100               	movlb	0	; () banked
 17462  013DE0  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;rtcc.c: 328: return _rtcc_bcd_to_decimal(bcd_seconds);
 17466  013DE2  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 17467  013DE4  ECAB  F09D         	call	__rtcc_bcd_to_decimal
 17468  013DE8  0012               	return	
 17469  013DEA                     __end_of_rtcc_get_seconds_decimal:
 17470                           	opt stack 0
 17471                           tblptru	equ	0xFF8
 17472                           tblptrh	equ	0xFF7
 17473                           tblptrl	equ	0xFF6
 17474                           tablat	equ	0xFF5
 17475                           prodh	equ	0xFF4
 17476                           prodl	equ	0xFF3
 17477                           intcon	equ	0xFF2
 17478                           intcon2	equ	0xFF1
 17479                           intcon3	equ	0xFF0
 17480                           postinc0	equ	0xFEE
 17481                           wreg	equ	0xFE8
 17482                           postinc1	equ	0xFE6
 17483                           postdec1	equ	0xFE5
 17484                           plusw1	equ	0xFE3
 17485                           fsr1h	equ	0xFE2
 17486                           fsr1l	equ	0xFE1
 17487                           indf2	equ	0xFDF
 17488                           postinc2	equ	0xFDE
 17489                           postdec2	equ	0xFDD
 17490                           plusw2	equ	0xFDB
 17491                           fsr2h	equ	0xFDA
 17492                           fsr2l	equ	0xFD9
 17493                           status	equ	0xFD8
 17494                           
 17495 ;; *************** function __rtcc_bcd_to_decimal *****************
 17496 ;; Defined at:
 17497 ;;		line 7 in file "rtcc.c"
 17498 ;; Parameters:    Size  Location     Type
 17499 ;;  input           1    wreg     unsigned char 
 17500 ;; Auto vars:     Size  Location     Type
 17501 ;;  input           1    2[BANK0 ] unsigned char 
 17502 ;;  ones            1    1[BANK0 ] unsigned char 
 17503 ;;  tens            1    0[BANK0 ] unsigned char 
 17504 ;; Return value:  Size  Location     Type
 17505 ;;                  1    wreg      unsigned char 
 17506 ;; Registers used:
 17507 ;;		wreg, status,2, status,0, prodl, prodh
 17508 ;; Tracked objects:
 17509 ;;		On entry : 0/0
 17510 ;;		On exit  : 0/0
 17511 ;;		Unchanged: 0/0
 17512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17516 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17517 ;;Total ram usage:        3 bytes
 17518 ;; Hardware stack levels used:    1
 17519 ;; Hardware stack levels required when called:   10
 17520 ;; This function calls:
 17521 ;;		Nothing
 17522 ;; This function is called by:
 17523 ;;		_rtcc_get_year_decimal
 17524 ;;		_rtcc_get_month_decimal
 17525 ;;		_rtcc_get_day_decimal
 17526 ;;		_rtcc_get_hours_decimal
 17527 ;;		_rtcc_get_minutes_decimal
 17528 ;;		_rtcc_get_seconds_decimal
 17529 ;; This function uses a non-reentrant model
 17530 ;;
 17531                           
 17532                           	psect	text83
 17533  013B56                     __ptext83:
 17534                           	opt stack 0
 17535  013B56                     __rtcc_bcd_to_decimal:
 17536                           	opt stack 17
 17537                           
 17538                           ;incstack = 0
 17539                           ;__rtcc_bcd_to_decimal@input stored from wreg
 17540  013B56  0100               	movlb	0	; () banked
 17541  013B58  6F62               	movwf	__rtcc_bcd_to_decimal@input& (0+255),b
 17542                           
 17543                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 17544  013B5A  0100               	movlb	0	; () banked
 17545  013B5C  3962               	swapf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 17546  013B5E  0B0F               	andlw	15
 17547  013B60  0B0F               	andlw	15
 17548  013B62  6F60               	movwf	__rtcc_bcd_to_decimal@tens& (0+255),b
 17549                           
 17550                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 17551  013B64  5162               	movf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 17552  013B66  0B0F               	andlw	15
 17553  013B68  6F61               	movwf	__rtcc_bcd_to_decimal@ones& (0+255),b
 17554                           
 17555                           ; BSR set to: 0
 17556                           ;rtcc.c: 11: return ((10*tens) + ones);
 17557  013B6A  5160               	movf	__rtcc_bcd_to_decimal@tens& (0+255),w,b
 17558  013B6C  0D0A               	mullw	10
 17559  013B6E  50F3               	movf	prodl,w,c
 17560  013B70  2561               	addwf	__rtcc_bcd_to_decimal@ones& (0+255),w,b
 17561  013B72  0012               	return	
 17562  013B74                     __end_of__rtcc_bcd_to_decimal:
 17563                           	opt stack 0
 17564                           tblptru	equ	0xFF8
 17565                           tblptrh	equ	0xFF7
 17566                           tblptrl	equ	0xFF6
 17567                           tablat	equ	0xFF5
 17568                           prodh	equ	0xFF4
 17569                           prodl	equ	0xFF3
 17570                           intcon	equ	0xFF2
 17571                           intcon2	equ	0xFF1
 17572                           intcon3	equ	0xFF0
 17573                           postinc0	equ	0xFEE
 17574                           wreg	equ	0xFE8
 17575                           postinc1	equ	0xFE6
 17576                           postdec1	equ	0xFE5
 17577                           plusw1	equ	0xFE3
 17578                           fsr1h	equ	0xFE2
 17579                           fsr1l	equ	0xFE1
 17580                           indf2	equ	0xFDF
 17581                           postinc2	equ	0xFDE
 17582                           postdec2	equ	0xFDD
 17583                           plusw2	equ	0xFDB
 17584                           fsr2h	equ	0xFDA
 17585                           fsr2l	equ	0xFD9
 17586                           status	equ	0xFD8
 17587                           
 17588 ;; *************** function __get_output_power *****************
 17589 ;; Defined at:
 17590 ;;		line 99 in file "log.c"
 17591 ;; Parameters:    Size  Location     Type
 17592 ;;		None
 17593 ;; Auto vars:     Size  Location     Type
 17594 ;;  pwr             4   15[BANK0 ] unsigned long 
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  2   13[BANK0 ] unsigned int 
 17597 ;; Registers used:
 17598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17599 ;; Tracked objects:
 17600 ;;		On entry : 0/0
 17601 ;;		On exit  : 0/0
 17602 ;;		Unchanged: 0/0
 17603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17608 ;;Total ram usage:        6 bytes
 17609 ;; Hardware stack levels used:    1
 17610 ;; Hardware stack levels required when called:   11
 17611 ;; This function calls:
 17612 ;;		___lldiv
 17613 ;;		___lmul
 17614 ;; This function is called by:
 17615 ;;		_log_collect_data
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619                           	psect	text84
 17620  011A26                     __ptext84:
 17621                           	opt stack 0
 17622  011A26                     __get_output_power:
 17623                           	opt stack 18
 17624                           
 17625                           ;log.c: 101: uint32_t pwr;;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) 
      +                          os.output_current);
 17626                           
 17627                           ; BSR set to: 0
 17628                           ;incstack = 0
 17629  011A26  EE22  F027         	lfsr	2,_os+39	;volatile
 17630  011A2A  CFDE F060          	movff	postinc2,___lmul@multiplier
 17631  011A2E  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 17632  011A32  0100               	movlb	0	; () banked
 17633  011A34  0E00               	movlw	0
 17634  011A36  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17635  011A38  0EFF               	movlw	-1
 17636  011A3A  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 17637  011A3C  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 17638  011A3E  EE22  F032         	lfsr	2,_os+50	;volatile
 17639  011A42  CFDE F064          	movff	postinc2,___lmul@multiplicand
 17640  011A46  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 17641  011A4A  0E00               	movlw	0
 17642  011A4C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17643  011A4E  0EFF               	movlw	-1
 17644  011A50  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17645  011A52  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17646  011A54  EC7D  F095         	call	___lmul	;wreg free
 17647  011A58  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 17648  011A5C  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 17649  011A60  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 17650  011A64  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 17651                           
 17652                           ;log.c: 103: pwr /= 1000;
 17653  011A68  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 17654  011A6C  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 17655  011A70  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 17656  011A74  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 17657  011A78  0EE8               	movlw	232
 17658  011A7A  0100               	movlb	0	; () banked
 17659  011A7C  6F64               	movwf	___lldiv@divisor& (0+255),b
 17660  011A7E  0E03               	movlw	3
 17661  011A80  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 17662  011A82  0E00               	movlw	0
 17663  011A84  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 17664  011A86  0E00               	movlw	0
 17665  011A88  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 17666  011A8A  ECD1  F08C         	call	___lldiv	;wreg free
 17667  011A8E  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 17668  011A92  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 17669  011A96  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 17670  011A9A  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 17671                           
 17672                           ;log.c: 104: return (uint16_t) pwr;
 17673  011A9E  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 17674  011AA2  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 17675  011AA6  0012               	return	
 17676  011AA8                     __end_of__get_output_power:
 17677                           	opt stack 0
 17678                           tblptru	equ	0xFF8
 17679                           tblptrh	equ	0xFF7
 17680                           tblptrl	equ	0xFF6
 17681                           tablat	equ	0xFF5
 17682                           prodh	equ	0xFF4
 17683                           prodl	equ	0xFF3
 17684                           intcon	equ	0xFF2
 17685                           intcon2	equ	0xFF1
 17686                           intcon3	equ	0xFF0
 17687                           postinc0	equ	0xFEE
 17688                           wreg	equ	0xFE8
 17689                           postinc1	equ	0xFE6
 17690                           postdec1	equ	0xFE5
 17691                           plusw1	equ	0xFE3
 17692                           fsr1h	equ	0xFE2
 17693                           fsr1l	equ	0xFE1
 17694                           indf2	equ	0xFDF
 17695                           postinc2	equ	0xFDE
 17696                           postdec2	equ	0xFDD
 17697                           plusw2	equ	0xFDB
 17698                           fsr2h	equ	0xFDA
 17699                           fsr2l	equ	0xFD9
 17700                           status	equ	0xFD8
 17701                           
 17702 ;; *************** function __get_input_power *****************
 17703 ;; Defined at:
 17704 ;;		line 91 in file "log.c"
 17705 ;; Parameters:    Size  Location     Type
 17706 ;;		None
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;  pwr             4   16[BANK0 ] long 
 17709 ;; Return value:  Size  Location     Type
 17710 ;;                  2   14[BANK0 ] unsigned int 
 17711 ;; Registers used:
 17712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17713 ;; Tracked objects:
 17714 ;;		On entry : 0/0
 17715 ;;		On exit  : 0/0
 17716 ;;		Unchanged: 0/0
 17717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17719 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17721 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17722 ;;Total ram usage:        6 bytes
 17723 ;; Hardware stack levels used:    1
 17724 ;; Hardware stack levels required when called:   11
 17725 ;; This function calls:
 17726 ;;		___aldiv
 17727 ;;		___lmul
 17728 ;; This function is called by:
 17729 ;;		_log_collect_data
 17730 ;; This function uses a non-reentrant model
 17731 ;;
 17732                           
 17733                           	psect	text85
 17734  011AA8                     __ptext85:
 17735                           	opt stack 0
 17736  011AA8                     __get_input_power:
 17737                           	opt stack 18
 17738                           
 17739                           ;log.c: 93: int32_t pwr;;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.i
      +                          nput_current);
 17740                           
 17741                           ;incstack = 0
 17742  011AA8  EE22  F012         	lfsr	2,_os+18	;volatile
 17743  011AAC  CFDE F060          	movff	postinc2,___lmul@multiplier
 17744  011AB0  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 17745  011AB4  0100               	movlb	0	; () banked
 17746  011AB6  0E00               	movlw	0
 17747  011AB8  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17748  011ABA  0EFF               	movlw	-1
 17749  011ABC  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 17750  011ABE  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 17751  011AC0  EE22  F01D         	lfsr	2,_os+29	;volatile
 17752  011AC4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 17753  011AC8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 17754  011ACC  0E00               	movlw	0
 17755  011ACE  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17756  011AD0  0EFF               	movlw	-1
 17757  011AD2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17758  011AD4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17759  011AD6  EC7D  F095         	call	___lmul	;wreg free
 17760  011ADA  C060  F070         	movff	?___lmul,__get_input_power@pwr
 17761  011ADE  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 17762  011AE2  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 17763  011AE6  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 17764                           
 17765                           ;log.c: 95: pwr /= 1000;
 17766  011AEA  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 17767  011AEE  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 17768  011AF2  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 17769  011AF6  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 17770  011AFA  0EE8               	movlw	232
 17771  011AFC  0100               	movlb	0	; () banked
 17772  011AFE  6F64               	movwf	___aldiv@divisor& (0+255),b
 17773  011B00  0E03               	movlw	3
 17774  011B02  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 17775  011B04  0E00               	movlw	0
 17776  011B06  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 17777  011B08  0E00               	movlw	0
 17778  011B0A  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 17779  011B0C  ECC2  F084         	call	___aldiv	;wreg free
 17780  011B10  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 17781  011B14  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 17782  011B18  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 17783  011B1C  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 17784                           
 17785                           ;log.c: 96: return (uint16_t) pwr;
 17786  011B20  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 17787  011B24  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 17788  011B28  0012               	return	
 17789  011B2A                     __end_of__get_input_power:
 17790                           	opt stack 0
 17791                           tblptru	equ	0xFF8
 17792                           tblptrh	equ	0xFF7
 17793                           tblptrl	equ	0xFF6
 17794                           tablat	equ	0xFF5
 17795                           prodh	equ	0xFF4
 17796                           prodl	equ	0xFF3
 17797                           intcon	equ	0xFF2
 17798                           intcon2	equ	0xFF1
 17799                           intcon3	equ	0xFF0
 17800                           postinc0	equ	0xFEE
 17801                           wreg	equ	0xFE8
 17802                           postinc1	equ	0xFE6
 17803                           postdec1	equ	0xFE5
 17804                           plusw1	equ	0xFE3
 17805                           fsr1h	equ	0xFE2
 17806                           fsr1l	equ	0xFE1
 17807                           indf2	equ	0xFDF
 17808                           postinc2	equ	0xFDE
 17809                           postdec2	equ	0xFDD
 17810                           plusw2	equ	0xFDB
 17811                           fsr2h	equ	0xFDA
 17812                           fsr2l	equ	0xFD9
 17813                           status	equ	0xFD8
 17814                           
 17815 ;; *************** function _i2c_eeprom_tasks *****************
 17816 ;; Defined at:
 17817 ;;		line 779 in file "i2c.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;		None
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;		None
 17822 ;; Return value:  Size  Location     Type
 17823 ;;                  1    wreg      void 
 17824 ;; Registers used:
 17825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17826 ;; Tracked objects:
 17827 ;;		On entry : 0/0
 17828 ;;		On exit  : 0/0
 17829 ;;		Unchanged: 0/0
 17830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17835 ;;Total ram usage:        0 bytes
 17836 ;; Hardware stack levels used:    1
 17837 ;; Hardware stack levels required when called:   14
 17838 ;; This function calls:
 17839 ;;		__write_calibration
 17840 ;;		_get_next_eeprom_write_task
 17841 ;; This function is called by:
 17842 ;;		_main
 17843 ;; This function uses a non-reentrant model
 17844 ;;
 17845                           
 17846                           	psect	text86
 17847  0120F6                     __ptext86:
 17848                           	opt stack 0
 17849  0120F6                     _i2c_eeprom_tasks:
 17850                           	opt stack 16
 17851                           
 17852                           ;i2c.c: 781: switch(get_next_eeprom_write_task())
 17853                           
 17854                           ;incstack = 0
 17855  0120F6  D01C               	goto	l1672
 17856  0120F8                     
 17857                           ;i2c.c: 786: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 17858  0120F8  0E00               	movlw	0
 17859  0120FA  EC9B  F08A         	call	__write_calibration
 17860                           
 17861                           ;i2c.c: 787: break;
 17862  0120FE  0012               	return	
 17863  012100                     
 17864                           ;i2c.c: 789: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 17865  012100  0E01               	movlw	1
 17866  012102  EC9B  F08A         	call	__write_calibration
 17867                           
 17868                           ;i2c.c: 790: break;
 17869  012106  0012               	return	
 17870  012108                     
 17871                           ;i2c.c: 792: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 17872  012108  0E02               	movlw	2
 17873  01210A  EC9B  F08A         	call	__write_calibration
 17874                           
 17875                           ;i2c.c: 793: break;
 17876  01210E  0012               	return	
 17877  012110                     
 17878                           ;i2c.c: 795: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 17879  012110  0E03               	movlw	3
 17880  012112  EC9B  F08A         	call	__write_calibration
 17881                           
 17882                           ;i2c.c: 796: break;
 17883  012116  0012               	return	
 17884  012118                     
 17885                           ;i2c.c: 798: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 17886  012118  0E04               	movlw	4
 17887  01211A  EC9B  F08A         	call	__write_calibration
 17888                           
 17889                           ;i2c.c: 799: break;
 17890  01211E  0012               	return	
 17891  012120                     
 17892                           ;i2c.c: 801: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 17893  012120  0E05               	movlw	5
 17894  012122  EC9B  F08A         	call	__write_calibration
 17895                           
 17896                           ;i2c.c: 802: break;
 17897  012126  0012               	return	
 17898  012128                     
 17899                           ;i2c.c: 804: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 17900  012128  0E06               	movlw	6
 17901  01212A  EC9B  F08A         	call	__write_calibration
 17902                           
 17903                           ;i2c.c: 806: }
 17904                           
 17905                           ;i2c.c: 805: break;
 17906  01212E  0012               	return	
 17907  012130                     l1672:
 17908  012130  ECA3  F09B         	call	_get_next_eeprom_write_task	;wreg free
 17909                           
 17910                           ; Switch size 1, requested type "space"
 17911                           ; Number of cases is 8, Range of values is 1 to 8
 17912                           ; switch strategies available:
 17913                           ; Name         Instructions Cycles
 17914                           ; simple_byte           25    13 (average)
 17915                           ;	Chosen strategy is simple_byte
 17916  012134  0A01               	xorlw	1	; case 1
 17917  012136  B4D8               	btfsc	status,2,c
 17918  012138  0012               	return	
 17919  01213A  0A03               	xorlw	3	; case 2
 17920  01213C  B4D8               	btfsc	status,2,c
 17921  01213E  D7DC               	goto	l1675
 17922  012140  0A01               	xorlw	1	; case 3
 17923  012142  B4D8               	btfsc	status,2,c
 17924  012144  D7DD               	goto	l1676
 17925  012146  0A07               	xorlw	7	; case 4
 17926  012148  B4D8               	btfsc	status,2,c
 17927  01214A  D7DE               	goto	l1677
 17928  01214C  0A01               	xorlw	1	; case 5
 17929  01214E  B4D8               	btfsc	status,2,c
 17930  012150  D7DF               	goto	l1678
 17931  012152  0A03               	xorlw	3	; case 6
 17932  012154  B4D8               	btfsc	status,2,c
 17933  012156  D7E0               	goto	l1679
 17934  012158  0A01               	xorlw	1	; case 7
 17935  01215A  B4D8               	btfsc	status,2,c
 17936  01215C  D7E1               	goto	l1680
 17937  01215E  0A0F               	xorlw	15	; case 8
 17938  012160  A4D8               	btfss	status,2,c
 17939  012162  0012               	return	
 17940  012164  D7E1               	goto	l1681
 17941  012166                     __end_of_i2c_eeprom_tasks:
 17942                           	opt stack 0
 17943                           tblptru	equ	0xFF8
 17944                           tblptrh	equ	0xFF7
 17945                           tblptrl	equ	0xFF6
 17946                           tablat	equ	0xFF5
 17947                           prodh	equ	0xFF4
 17948                           prodl	equ	0xFF3
 17949                           intcon	equ	0xFF2
 17950                           intcon2	equ	0xFF1
 17951                           intcon3	equ	0xFF0
 17952                           postinc0	equ	0xFEE
 17953                           wreg	equ	0xFE8
 17954                           postinc1	equ	0xFE6
 17955                           postdec1	equ	0xFE5
 17956                           plusw1	equ	0xFE3
 17957                           fsr1h	equ	0xFE2
 17958                           fsr1l	equ	0xFE1
 17959                           indf2	equ	0xFDF
 17960                           postinc2	equ	0xFDE
 17961                           postdec2	equ	0xFDD
 17962                           plusw2	equ	0xFDB
 17963                           fsr2h	equ	0xFDA
 17964                           fsr2l	equ	0xFD9
 17965                           status	equ	0xFD8
 17966                           
 17967 ;; *************** function _get_next_eeprom_write_task *****************
 17968 ;; Defined at:
 17969 ;;		line 759 in file "i2c.c"
 17970 ;; Parameters:    Size  Location     Type
 17971 ;;		None
 17972 ;; Auto vars:     Size  Location     Type
 17973 ;;  task            1    0[BANK0 ] enum E6775
 17974 ;; Return value:  Size  Location     Type
 17975 ;;                  1    wreg      enum E6775
 17976 ;; Registers used:
 17977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17978 ;; Tracked objects:
 17979 ;;		On entry : 0/0
 17980 ;;		On exit  : 0/0
 17981 ;;		Unchanged: 0/0
 17982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17986 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17987 ;;Total ram usage:        1 bytes
 17988 ;; Hardware stack levels used:    1
 17989 ;; Hardware stack levels required when called:   10
 17990 ;; This function calls:
 17991 ;;		Nothing
 17992 ;; This function is called by:
 17993 ;;		_i2c_eeprom_tasks
 17994 ;; This function uses a non-reentrant model
 17995 ;;
 17996                           
 17997                           	psect	text87
 17998  013746                     __ptext87:
 17999                           	opt stack 0
 18000  013746                     _get_next_eeprom_write_task:
 18001                           	opt stack 19
 18002                           
 18003                           ;i2c.c: 761: eeprom_write_task_t task;;i2c.c: 762: if (task_list_read_index == task_list
      +                          _write_index)
 18004                           
 18005                           ;incstack = 0
 18006  013746  501D               	movf	_task_list_write_index,w,c
 18007  013748  181E               	xorwf	_task_list_read_index,w,c
 18008  01374A  A4D8               	btfss	status,2,c
 18009  01374C  D002               	goto	l1667
 18010                           
 18011                           ;i2c.c: 763: {;i2c.c: 765: return EEPROM_WRITE_TASK_NONE;
 18012  01374E  0E00               	movlw	0
 18013                           
 18014                           ;i2c.c: 766: }
 18015  013750  0012               	return	
 18016  013752                     l1667:
 18017                           
 18018                           ;i2c.c: 767: else;i2c.c: 768: {;i2c.c: 770: task = task_list[task_list_read_index];
 18019  013752  501E               	movf	_task_list_read_index,w,c
 18020  013754  0D01               	mullw	1
 18021  013756  0E68               	movlw	low _task_list
 18022  013758  24F3               	addwf	prodl,w,c
 18023  01375A  6ED9               	movwf	fsr2l,c
 18024  01375C  0E04               	movlw	high _task_list
 18025  01375E  20F4               	addwfc	prodh,w,c
 18026  013760  6EDA               	movwf	fsr2h,c
 18027  013762  50DF               	movf	indf2,w,c
 18028  013764  0100               	movlb	0	; () banked
 18029  013766  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 18030                           
 18031                           ; BSR set to: 0
 18032                           ;i2c.c: 772: ++task_list_read_index;
 18033  013768  2A1E               	incf	_task_list_read_index,f,c
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;i2c.c: 773: task_list_read_index &= 0x0F;
 18037  01376A  0E0F               	movlw	15
 18038  01376C  161E               	andwf	_task_list_read_index,f,c
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;i2c.c: 775: return task;
 18042  01376E  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 18043                           
 18044                           ; BSR set to: 0
 18045  013770  0012               	return	
 18046  013772                     __end_of_get_next_eeprom_write_task:
 18047                           	opt stack 0
 18048                           tblptru	equ	0xFF8
 18049                           tblptrh	equ	0xFF7
 18050                           tblptrl	equ	0xFF6
 18051                           tablat	equ	0xFF5
 18052                           prodh	equ	0xFF4
 18053                           prodl	equ	0xFF3
 18054                           intcon	equ	0xFF2
 18055                           intcon2	equ	0xFF1
 18056                           intcon3	equ	0xFF0
 18057                           postinc0	equ	0xFEE
 18058                           wreg	equ	0xFE8
 18059                           postinc1	equ	0xFE6
 18060                           postdec1	equ	0xFE5
 18061                           plusw1	equ	0xFE3
 18062                           fsr1h	equ	0xFE2
 18063                           fsr1l	equ	0xFE1
 18064                           indf2	equ	0xFDF
 18065                           postinc2	equ	0xFDE
 18066                           postdec2	equ	0xFDD
 18067                           plusw2	equ	0xFDB
 18068                           fsr2h	equ	0xFDA
 18069                           fsr2l	equ	0xFD9
 18070                           status	equ	0xFD8
 18071                           
 18072 ;; *************** function __write_calibration *****************
 18073 ;; Defined at:
 18074 ;;		line 715 in file "i2c.c"
 18075 ;; Parameters:    Size  Location     Type
 18076 ;;  index           1    wreg     enum E6665
 18077 ;; Auto vars:     Size  Location     Type
 18078 ;;  index           1   59[BANK0 ] enum E6665
 18079 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 18080 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 18081 ;;		 -> calibrationParameters(84), 
 18082 ;;  addr            2   55[BANK0 ] unsigned int 
 18083 ;;  cntr            1   60[BANK0 ] unsigned char 
 18084 ;; Return value:  Size  Location     Type
 18085 ;;                  1    wreg      void 
 18086 ;; Registers used:
 18087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18088 ;; Tracked objects:
 18089 ;;		On entry : 0/0
 18090 ;;		On exit  : 0/0
 18091 ;;		Unchanged: 0/0
 18092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18094 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18095 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18096 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18097 ;;Total ram usage:       24 bytes
 18098 ;; Hardware stack levels used:    1
 18099 ;; Hardware stack levels required when called:   13
 18100 ;; This function calls:
 18101 ;;		_i2c_eeprom_write
 18102 ;; This function is called by:
 18103 ;;		_i2c_eeprom_tasks
 18104 ;; This function uses a non-reentrant model
 18105 ;;
 18106                           
 18107                           	psect	text88
 18108  011536                     __ptext88:
 18109                           	opt stack 0
 18110  011536                     __write_calibration:
 18111                           	opt stack 16
 18112                           
 18113                           ;incstack = 0
 18114                           ;__write_calibration@index stored from wreg
 18115  011536  0100               	movlb	0	; () banked
 18116  011538  6F9B               	movwf	__write_calibration@index& (0+255),b
 18117                           
 18118                           ;i2c.c: 717: uint8_t buffer[16];;i2c.c: 718: uint8_t *ptr;;i2c.c: 719: uint8_t cntr;;i2c
      +                          .c: 720: uint16_t addr;;i2c.c: 721: buffer[0] = 0x77;
 18119  01153A  0E77               	movlw	119
 18120  01153C  0100               	movlb	0	; () banked
 18121  01153E  6F87               	movwf	__write_calibration@buffer& (0+255),b
 18122                           
 18123                           ;i2c.c: 722: buffer[1] = 0x55;
 18124  011540  0E55               	movlw	85
 18125  011542  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 18126                           
 18127                           ;i2c.c: 723: buffer[2] = 0x33;
 18128  011544  0E33               	movlw	51
 18129  011546  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;i2c.c: 724: buffer[3] = (uint8_t) index;
 18133  011548  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;i2c.c: 725: ptr = (uint8_t*) &calibrationParameters[index];
 18137  01154C  519B               	movf	__write_calibration@index& (0+255),w,b
 18138  01154E  0D0C               	mullw	12
 18139  011550  0E00               	movlw	low _calibrationParameters
 18140  011552  24F3               	addwf	prodl,w,c
 18141  011554  6F99               	movwf	__write_calibration@ptr& (0+255),b
 18142  011556  0E03               	movlw	high _calibrationParameters
 18143  011558  20F4               	addwfc	prodh,w,c
 18144  01155A  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;i2c.c: 726: for(cntr=4; cntr<16; ++cntr)
 18148  01155C  0E04               	movlw	4
 18149  01155E  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 18150  011560                     l21031:
 18151                           
 18152                           ; BSR set to: 0
 18153  011560  0E0F               	movlw	15
 18154  011562  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 18155  011564  D001               	goto	l1652
 18156  011566  D012               	goto	u19930
 18157  011568                     l1652:
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;i2c.c: 727: {;i2c.c: 728: buffer[cntr] = *ptr;
 18161                           
 18162                           ; BSR set to: 0
 18163  011568  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 18164  01156C  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 18165  011570  519C               	movf	__write_calibration@cntr& (0+255),w,b
 18166  011572  0D01               	mullw	1
 18167  011574  0E87               	movlw	low __write_calibration@buffer
 18168  011576  24F3               	addwf	prodl,w,c
 18169  011578  6EE1               	movwf	fsr1l,c
 18170  01157A  0E00               	movlw	high __write_calibration@buffer
 18171  01157C  20F4               	addwfc	prodh,w,c
 18172  01157E  6EE2               	movwf	fsr1h,c
 18173  011580  CFDF FFE7          	movff	indf2,indf1
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;i2c.c: 729: ++ptr;
 18177  011584  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 18178  011586  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 18179                           
 18180                           ; BSR set to: 0
 18181  011588  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 18182  01158A  D7EA               	goto	l21031
 18183  01158C                     u19930:
 18184                           
 18185                           ; BSR set to: 0
 18186                           ;i2c.c: 730: };i2c.c: 731: addr = 0x0200 + (index<<4);
 18187                           
 18188                           ; BSR set to: 0
 18189  01158C  519B               	movf	__write_calibration@index& (0+255),w,b
 18190  01158E  6F85               	movwf	??__write_calibration& (0+255),b
 18191  011590  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 18192  011592  3B85               	swapf	??__write_calibration& (0+255),f,b
 18193  011594  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 18194  011596  0EF0               	movlw	240
 18195  011598  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 18196  01159A  5185               	movf	??__write_calibration& (0+255),w,b
 18197  01159C  0B0F               	andlw	15
 18198  01159E  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 18199  0115A0  0EF0               	movlw	240
 18200  0115A2  1785               	andwf	??__write_calibration& (0+255),f,b
 18201  0115A4  0E00               	movlw	0
 18202  0115A6  2585               	addwf	??__write_calibration& (0+255),w,b
 18203  0115A8  6F97               	movwf	__write_calibration@addr& (0+255),b
 18204  0115AA  0E02               	movlw	2
 18205  0115AC  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 18206  0115AE  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 18207                           
 18208                           ; BSR set to: 0
 18209                           ;i2c.c: 732: i2c_eeprom_write(addr, &buffer[0], 16);
 18210  0115B0  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 18211  0115B4  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 18212  0115B8  0E87               	movlw	low __write_calibration@buffer
 18213  0115BA  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 18214  0115BC  0E00               	movlw	high __write_calibration@buffer
 18215  0115BE  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 18216  0115C0  0E10               	movlw	16
 18217  0115C2  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 18218  0115C4  ECD6  F08D         	call	_i2c_eeprom_write	;wreg free
 18219  0115C8  0012               	return		;funcret
 18220  0115CA                     __end_of__write_calibration:
 18221                           	opt stack 0
 18222                           tblptru	equ	0xFF8
 18223                           tblptrh	equ	0xFF7
 18224                           tblptrl	equ	0xFF6
 18225                           tablat	equ	0xFF5
 18226                           prodh	equ	0xFF4
 18227                           prodl	equ	0xFF3
 18228                           intcon	equ	0xFF2
 18229                           intcon2	equ	0xFF1
 18230                           intcon3	equ	0xFF0
 18231                           postinc0	equ	0xFEE
 18232                           wreg	equ	0xFE8
 18233                           indf1	equ	0xFE7
 18234                           postinc1	equ	0xFE6
 18235                           postdec1	equ	0xFE5
 18236                           plusw1	equ	0xFE3
 18237                           fsr1h	equ	0xFE2
 18238                           fsr1l	equ	0xFE1
 18239                           indf2	equ	0xFDF
 18240                           postinc2	equ	0xFDE
 18241                           postdec2	equ	0xFDD
 18242                           plusw2	equ	0xFDB
 18243                           fsr2h	equ	0xFDA
 18244                           fsr2l	equ	0xFD9
 18245                           status	equ	0xFD8
 18246                           
 18247 ;; *************** function _i2c_adc_start *****************
 18248 ;; Defined at:
 18249 ;;		line 467 in file "i2c.c"
 18250 ;; Parameters:    Size  Location     Type
 18251 ;;  channel         1    wreg     enum E6747
 18252 ;;  resolution      1   10[BANK0 ] enum E6753
 18253 ;;  gain            1   11[BANK0 ] enum E6759
 18254 ;; Auto vars:     Size  Location     Type
 18255 ;;  channel         1   12[BANK0 ] enum E6747
 18256 ;;  configuratio    1   13[BANK0 ] unsigned char 
 18257 ;; Return value:  Size  Location     Type
 18258 ;;                  1    wreg      void 
 18259 ;; Registers used:
 18260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18261 ;; Tracked objects:
 18262 ;;		On entry : 0/0
 18263 ;;		On exit  : 0/0
 18264 ;;		Unchanged: 0/0
 18265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18267 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18269 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18270 ;;Total ram usage:        4 bytes
 18271 ;; Hardware stack levels used:    1
 18272 ;; Hardware stack levels required when called:   12
 18273 ;; This function calls:
 18274 ;;		__i2c_write
 18275 ;;		_i2c_set_frequency
 18276 ;; This function is called by:
 18277 ;;		_main
 18278 ;; This function uses a non-reentrant model
 18279 ;;
 18280                           
 18281                           	psect	text89
 18282  0133C8                     __ptext89:
 18283                           	opt stack 0
 18284  0133C8                     _i2c_adc_start:
 18285                           	opt stack 18
 18286                           
 18287                           ;incstack = 0
 18288                           ;i2c_adc_start@channel stored from wreg
 18289  0133C8  0100               	movlb	0	; () banked
 18290  0133CA  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 18291                           
 18292                           ;i2c.c: 469: uint8_t configuration_byte;;i2c.c: 470: configuration_byte = 0b10000000;
 18293  0133CC  0E80               	movlw	128
 18294  0133CE  0100               	movlb	0	; () banked
 18295  0133D0  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 18296                           
 18297                           ; BSR set to: 0
 18298                           ;i2c.c: 471: configuration_byte |= (channel<<5);
 18299  0133D2  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 18300  0133D4  46E8               	rlncf	wreg,f,c
 18301  0133D6  0BE0               	andlw	224
 18302  0133D8  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18303                           
 18304                           ; BSR set to: 0
 18305                           ;i2c.c: 472: configuration_byte |= (resolution<<2);
 18306  0133DA  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 18307  0133DC  46E8               	rlncf	wreg,f,c
 18308  0133DE  0BFC               	andlw	252
 18309  0133E0  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18310                           
 18311                           ; BSR set to: 0
 18312                           ;i2c.c: 473: configuration_byte |= gain;
 18313  0133E2  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 18314  0133E4  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;i2c.c: 476: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18318  0133E6  0E02               	movlw	2
 18319  0133E8  ECB3  F090         	call	_i2c_set_frequency
 18320                           
 18321                           ;i2c.c: 478: _i2c_write(0b11010000, &configuration_byte, 1);
 18322  0133EC  0E6D               	movlw	low i2c_adc_start@configuration_byte
 18323  0133EE  0100               	movlb	0	; () banked
 18324  0133F0  6F65               	movwf	__i2c_write@data& (0+255),b
 18325  0133F2  0E00               	movlw	high i2c_adc_start@configuration_byte
 18326  0133F4  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 18327  0133F6  0E01               	movlw	1
 18328  0133F8  6F67               	movwf	__i2c_write@length& (0+255),b
 18329  0133FA  0ED0               	movlw	208
 18330  0133FC  EC22  F097         	call	__i2c_write
 18331  013400  0012               	return		;funcret
 18332  013402                     __end_of_i2c_adc_start:
 18333                           	opt stack 0
 18334                           tblptru	equ	0xFF8
 18335                           tblptrh	equ	0xFF7
 18336                           tblptrl	equ	0xFF6
 18337                           tablat	equ	0xFF5
 18338                           prodh	equ	0xFF4
 18339                           prodl	equ	0xFF3
 18340                           intcon	equ	0xFF2
 18341                           intcon2	equ	0xFF1
 18342                           intcon3	equ	0xFF0
 18343                           postinc0	equ	0xFEE
 18344                           wreg	equ	0xFE8
 18345                           indf1	equ	0xFE7
 18346                           postinc1	equ	0xFE6
 18347                           postdec1	equ	0xFE5
 18348                           plusw1	equ	0xFE3
 18349                           fsr1h	equ	0xFE2
 18350                           fsr1l	equ	0xFE1
 18351                           indf2	equ	0xFDF
 18352                           postinc2	equ	0xFDE
 18353                           postdec2	equ	0xFDD
 18354                           plusw2	equ	0xFDB
 18355                           fsr2h	equ	0xFDA
 18356                           fsr2l	equ	0xFD9
 18357                           status	equ	0xFD8
 18358                           
 18359 ;; *************** function _i2c_adc_read *****************
 18360 ;; Defined at:
 18361 ;;		line 481 in file "i2c.c"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;		None
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;  result          2    8[BANK0 ] int 
 18366 ;; Return value:  Size  Location     Type
 18367 ;;                  2    5[BANK0 ] int 
 18368 ;; Registers used:
 18369 ;;		wreg, status,2, status,0, cstack
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18378 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18379 ;;Total ram usage:        5 bytes
 18380 ;; Hardware stack levels used:    1
 18381 ;; Hardware stack levels required when called:   11
 18382 ;; This function calls:
 18383 ;;		__i2c_acknowledge
 18384 ;;		__i2c_get
 18385 ;;		__i2c_not_acknowledge
 18386 ;;		__i2c_send
 18387 ;;		__i2c_start
 18388 ;;		__i2c_stop
 18389 ;;		__i2c_wait_idle
 18390 ;;		_i2c_set_frequency
 18391 ;; This function is called by:
 18392 ;;		_main
 18393 ;; This function uses a non-reentrant model
 18394 ;;
 18395                           
 18396                           	psect	text90
 18397  012D50                     __ptext90:
 18398                           	opt stack 0
 18399  012D50                     _i2c_adc_read:
 18400                           	opt stack 19
 18401                           
 18402                           ;i2c.c: 483: int16_t result;;i2c.c: 486: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 18403                           
 18404                           ;incstack = 0
 18405  012D50  0E02               	movlw	2
 18406  012D52  ECB3  F090         	call	_i2c_set_frequency
 18407                           
 18408                           ;i2c.c: 488: _i2c_wait_idle();
 18409  012D56  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18410                           
 18411                           ;i2c.c: 489: _i2c_start();
 18412  012D5A  EC62  F09F         	call	__i2c_start	;wreg free
 18413                           
 18414                           ;i2c.c: 490: _i2c_wait_idle();
 18415  012D5E  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18416                           
 18417                           ;i2c.c: 491: _i2c_send(0b11010000 | 0x01);
 18418  012D62  0ED1               	movlw	209
 18419  012D64  EC59  F09F         	call	__i2c_send
 18420                           
 18421                           ;i2c.c: 492: _i2c_wait_idle();
 18422  012D68  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18423                           
 18424                           ;i2c.c: 493: result = _i2c_get();
 18425  012D6C  EC4A  F09F         	call	__i2c_get	;wreg free
 18426  012D70  0100               	movlb	0	; () banked
 18427  012D72  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18428  012D74  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18429  012D76  6F68               	movwf	i2c_adc_read@result& (0+255),b
 18430  012D78  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 18431                           
 18432                           ; BSR set to: 0
 18433                           ;i2c.c: 494: result <<= 8;
 18434  012D7A  5168               	movf	i2c_adc_read@result& (0+255),w,b
 18435  012D7C  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 18436  012D7E  6B68               	clrf	i2c_adc_read@result& (0+255),b
 18437                           
 18438                           ; BSR set to: 0
 18439                           ;i2c.c: 495: _i2c_acknowledge();
 18440  012D80  EC4F  F09F         	call	__i2c_acknowledge	;wreg free
 18441                           
 18442                           ;i2c.c: 496: result |= _i2c_get();
 18443  012D84  EC4A  F09F         	call	__i2c_get	;wreg free
 18444  012D88  0100               	movlb	0	; () banked
 18445  012D8A  6F67               	movwf	??_i2c_adc_read& (0+255),b
 18446  012D8C  5167               	movf	??_i2c_adc_read& (0+255),w,b
 18447  012D8E  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;i2c.c: 497: _i2c_not_acknowledge();
 18451  012D90  EC45  F09F         	call	__i2c_not_acknowledge	;wreg free
 18452                           
 18453                           ;i2c.c: 498: _i2c_stop();
 18454  012D94  EC5E  F09F         	call	__i2c_stop	;wreg free
 18455                           
 18456                           ;i2c.c: 500: return result;
 18457  012D98  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 18458  012D9C  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 18459  012DA0  0012               	return	
 18460  012DA2                     __end_of_i2c_adc_read:
 18461                           	opt stack 0
 18462                           tblptru	equ	0xFF8
 18463                           tblptrh	equ	0xFF7
 18464                           tblptrl	equ	0xFF6
 18465                           tablat	equ	0xFF5
 18466                           prodh	equ	0xFF4
 18467                           prodl	equ	0xFF3
 18468                           intcon	equ	0xFF2
 18469                           intcon2	equ	0xFF1
 18470                           intcon3	equ	0xFF0
 18471                           postinc0	equ	0xFEE
 18472                           wreg	equ	0xFE8
 18473                           indf1	equ	0xFE7
 18474                           postinc1	equ	0xFE6
 18475                           postdec1	equ	0xFE5
 18476                           plusw1	equ	0xFE3
 18477                           fsr1h	equ	0xFE2
 18478                           fsr1l	equ	0xFE1
 18479                           indf2	equ	0xFDF
 18480                           postinc2	equ	0xFDE
 18481                           postdec2	equ	0xFDD
 18482                           plusw2	equ	0xFDB
 18483                           fsr2h	equ	0xFDA
 18484                           fsr2l	equ	0xFD9
 18485                           status	equ	0xFD8
 18486                           
 18487 ;; *************** function __i2c_not_acknowledge *****************
 18488 ;; Defined at:
 18489 ;;		line 87 in file "i2c.c"
 18490 ;; Parameters:    Size  Location     Type
 18491 ;;		None
 18492 ;; Auto vars:     Size  Location     Type
 18493 ;;		None
 18494 ;; Return value:  Size  Location     Type
 18495 ;;                  1    wreg      void 
 18496 ;; Registers used:
 18497 ;;		None
 18498 ;; Tracked objects:
 18499 ;;		On entry : 0/0
 18500 ;;		On exit  : 0/0
 18501 ;;		Unchanged: 0/0
 18502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18507 ;;Total ram usage:        0 bytes
 18508 ;; Hardware stack levels used:    1
 18509 ;; Hardware stack levels required when called:   10
 18510 ;; This function calls:
 18511 ;;		Nothing
 18512 ;; This function is called by:
 18513 ;;		__i2c_read
 18514 ;;		_i2c_adc_read
 18515 ;; This function uses a non-reentrant model
 18516 ;;
 18517                           
 18518                           	psect	text91
 18519  013E8A                     __ptext91:
 18520                           	opt stack 0
 18521  013E8A                     __i2c_not_acknowledge:
 18522                           	opt stack 15
 18523                           
 18524                           ;i2c.c: 89: SSP1CON2bits.ACKDT = 1;
 18525                           
 18526                           ;incstack = 0
 18527  013E8A  8AC5               	bsf	4037,5,c	;volatile
 18528                           
 18529                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
 18530  013E8C  88C5               	bsf	4037,4,c	;volatile
 18531  013E8E  A8C5               	btfss	4037,4,c	;volatile
 18532  013E90  0012               	return	
 18533  013E92  D7FD               	goto	l1522
 18534  013E94                     __end_of__i2c_not_acknowledge:
 18535                           	opt stack 0
 18536                           tblptru	equ	0xFF8
 18537                           tblptrh	equ	0xFF7
 18538                           tblptrl	equ	0xFF6
 18539                           tablat	equ	0xFF5
 18540                           prodh	equ	0xFF4
 18541                           prodl	equ	0xFF3
 18542                           intcon	equ	0xFF2
 18543                           intcon2	equ	0xFF1
 18544                           intcon3	equ	0xFF0
 18545                           postinc0	equ	0xFEE
 18546                           wreg	equ	0xFE8
 18547                           indf1	equ	0xFE7
 18548                           postinc1	equ	0xFE6
 18549                           postdec1	equ	0xFE5
 18550                           plusw1	equ	0xFE3
 18551                           fsr1h	equ	0xFE2
 18552                           fsr1l	equ	0xFE1
 18553                           indf2	equ	0xFDF
 18554                           postinc2	equ	0xFDE
 18555                           postdec2	equ	0xFDD
 18556                           plusw2	equ	0xFDB
 18557                           fsr2h	equ	0xFDA
 18558                           fsr2l	equ	0xFD9
 18559                           status	equ	0xFD8
 18560                           
 18561 ;; *************** function __i2c_get *****************
 18562 ;; Defined at:
 18563 ;;		line 64 in file "i2c.c"
 18564 ;; Parameters:    Size  Location     Type
 18565 ;;		None
 18566 ;; Auto vars:     Size  Location     Type
 18567 ;;		None
 18568 ;; Return value:  Size  Location     Type
 18569 ;;                  1    wreg      unsigned char 
 18570 ;; Registers used:
 18571 ;;		wreg, status,2
 18572 ;; Tracked objects:
 18573 ;;		On entry : 0/0
 18574 ;;		On exit  : 0/0
 18575 ;;		Unchanged: 0/0
 18576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18581 ;;Total ram usage:        0 bytes
 18582 ;; Hardware stack levels used:    1
 18583 ;; Hardware stack levels required when called:   10
 18584 ;; This function calls:
 18585 ;;		Nothing
 18586 ;; This function is called by:
 18587 ;;		__i2c_read
 18588 ;;		_i2c_adc_read
 18589 ;; This function uses a non-reentrant model
 18590 ;;
 18591                           
 18592                           	psect	text92
 18593  013E94                     __ptext92:
 18594                           	opt stack 0
 18595  013E94                     __i2c_get:
 18596                           	opt stack 15
 18597                           
 18598                           ;i2c.c: 66: SSP1CON2bits.RCEN = 1 ;
 18599                           
 18600                           ;incstack = 0
 18601  013E94  86C5               	bsf	4037,3,c	;volatile
 18602  013E96  B6C5               	btfsc	4037,3,c	;volatile
 18603  013E98  D7FE               	goto	l1504
 18604                           
 18605                           ;i2c.c: 68: return SSP1BUF;
 18606  013E9A  50C9               	movf	4041,w,c	;volatile
 18607  013E9C  0012               	return	
 18608  013E9E                     __end_of__i2c_get:
 18609                           	opt stack 0
 18610                           tblptru	equ	0xFF8
 18611                           tblptrh	equ	0xFF7
 18612                           tblptrl	equ	0xFF6
 18613                           tablat	equ	0xFF5
 18614                           prodh	equ	0xFF4
 18615                           prodl	equ	0xFF3
 18616                           intcon	equ	0xFF2
 18617                           intcon2	equ	0xFF1
 18618                           intcon3	equ	0xFF0
 18619                           postinc0	equ	0xFEE
 18620                           wreg	equ	0xFE8
 18621                           indf1	equ	0xFE7
 18622                           postinc1	equ	0xFE6
 18623                           postdec1	equ	0xFE5
 18624                           plusw1	equ	0xFE3
 18625                           fsr1h	equ	0xFE2
 18626                           fsr1l	equ	0xFE1
 18627                           indf2	equ	0xFDF
 18628                           postinc2	equ	0xFDE
 18629                           postdec2	equ	0xFDD
 18630                           plusw2	equ	0xFDB
 18631                           fsr2h	equ	0xFDA
 18632                           fsr2l	equ	0xFD9
 18633                           status	equ	0xFD8
 18634                           
 18635 ;; *************** function __i2c_acknowledge *****************
 18636 ;; Defined at:
 18637 ;;		line 79 in file "i2c.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;		None
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;		None
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  1    wreg      void 
 18644 ;; Registers used:
 18645 ;;		None
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;Total ram usage:        0 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:   10
 18658 ;; This function calls:
 18659 ;;		Nothing
 18660 ;; This function is called by:
 18661 ;;		__i2c_read
 18662 ;;		_i2c_adc_read
 18663 ;; This function uses a non-reentrant model
 18664 ;;
 18665                           
 18666                           	psect	text93
 18667  013E9E                     __ptext93:
 18668                           	opt stack 0
 18669  013E9E                     __i2c_acknowledge:
 18670                           	opt stack 15
 18671                           
 18672                           ;i2c.c: 81: SSP1CON2bits.ACKDT = 0;
 18673                           
 18674                           ;incstack = 0
 18675  013E9E  9AC5               	bcf	4037,5,c	;volatile
 18676                           
 18677                           ;i2c.c: 82: SSP1CON2bits.ACKEN = 1;
 18678  013EA0  88C5               	bsf	4037,4,c	;volatile
 18679  013EA2  A8C5               	btfss	4037,4,c	;volatile
 18680  013EA4  0012               	return	
 18681  013EA6  D7FD               	goto	l1516
 18682  013EA8                     __end_of__i2c_acknowledge:
 18683                           	opt stack 0
 18684                           tblptru	equ	0xFF8
 18685                           tblptrh	equ	0xFF7
 18686                           tblptrl	equ	0xFF6
 18687                           tablat	equ	0xFF5
 18688                           prodh	equ	0xFF4
 18689                           prodl	equ	0xFF3
 18690                           intcon	equ	0xFF2
 18691                           intcon2	equ	0xFF1
 18692                           intcon3	equ	0xFF0
 18693                           postinc0	equ	0xFEE
 18694                           wreg	equ	0xFE8
 18695                           indf1	equ	0xFE7
 18696                           postinc1	equ	0xFE6
 18697                           postdec1	equ	0xFE5
 18698                           plusw1	equ	0xFE3
 18699                           fsr1h	equ	0xFE2
 18700                           fsr1l	equ	0xFE1
 18701                           indf2	equ	0xFDF
 18702                           postinc2	equ	0xFDE
 18703                           postdec2	equ	0xFDD
 18704                           plusw2	equ	0xFDB
 18705                           fsr2h	equ	0xFDA
 18706                           fsr2l	equ	0xFD9
 18707                           status	equ	0xFD8
 18708                           
 18709 ;; *************** function _display_update *****************
 18710 ;; Defined at:
 18711 ;;		line 174 in file "display.c"
 18712 ;; Parameters:    Size  Location     Type
 18713 ;;		None
 18714 ;; Auto vars:     Size  Location     Type
 18715 ;;		None
 18716 ;; Return value:  Size  Location     Type
 18717 ;;                  1    wreg      void 
 18718 ;; Registers used:
 18719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18720 ;; Tracked objects:
 18721 ;;		On entry : 0/0
 18722 ;;		On exit  : 0/0
 18723 ;;		Unchanged: 0/0
 18724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18729 ;;Total ram usage:        0 bytes
 18730 ;; Hardware stack levels used:    1
 18731 ;; Hardware stack levels required when called:   14
 18732 ;; This function calls:
 18733 ;;		_i2c_display_cursor
 18734 ;;		_i2c_display_write_fixed
 18735 ;; This function is called by:
 18736 ;;		_main
 18737 ;; This function uses a non-reentrant model
 18738 ;;
 18739                           
 18740                           	psect	text94
 18741  011EA0                     __ptext94:
 18742                           	opt stack 0
 18743  011EA0                     _display_update:
 18744                           	opt stack 16
 18745                           
 18746                           ;display.c: 176: i2c_display_cursor(0, 0);
 18747                           
 18748                           ;incstack = 0
 18749  011EA0  0E00               	movlw	0
 18750  011EA2  0100               	movlb	0	; () banked
 18751  011EA4  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18752  011EA6  0E00               	movlw	0
 18753  011EA8  EC10  F09C         	call	_i2c_display_cursor
 18754                           
 18755                           ;display.c: 177: i2c_display_write_fixed(&display_content[0][0], 20);
 18756  011EAC  0E54               	movlw	low _display_content
 18757  011EAE  0100               	movlb	0	; () banked
 18758  011EB0  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18759  011EB2  0E03               	movlw	high _display_content
 18760  011EB4  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18761  011EB6  0E14               	movlw	20
 18762  011EB8  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18763  011EBA  ECC9  F094         	call	_i2c_display_write_fixed	;wreg free
 18764                           
 18765                           ;display.c: 178: i2c_display_cursor(1, 0);
 18766  011EBE  0E00               	movlw	0
 18767  011EC0  0100               	movlb	0	; () banked
 18768  011EC2  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18769  011EC4  0E01               	movlw	1
 18770  011EC6  EC10  F09C         	call	_i2c_display_cursor
 18771                           
 18772                           ;display.c: 179: i2c_display_write_fixed(&display_content[1][0], 20);
 18773  011ECA  0E68               	movlw	low (_display_content+20)
 18774  011ECC  0100               	movlb	0	; () banked
 18775  011ECE  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18776  011ED0  0E03               	movlw	high (_display_content+20)
 18777  011ED2  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18778  011ED4  0E14               	movlw	20
 18779  011ED6  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18780  011ED8  ECC9  F094         	call	_i2c_display_write_fixed	;wreg free
 18781                           
 18782                           ;display.c: 180: i2c_display_cursor(2, 0);
 18783  011EDC  0E00               	movlw	0
 18784  011EDE  0100               	movlb	0	; () banked
 18785  011EE0  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18786  011EE2  0E02               	movlw	2
 18787  011EE4  EC10  F09C         	call	_i2c_display_cursor
 18788                           
 18789                           ;display.c: 181: i2c_display_write_fixed(&display_content[2][0], 20);
 18790  011EE8  0E7C               	movlw	low (_display_content+40)
 18791  011EEA  0100               	movlb	0	; () banked
 18792  011EEC  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18793  011EEE  0E03               	movlw	high (_display_content+40)
 18794  011EF0  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18795  011EF2  0E14               	movlw	20
 18796  011EF4  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18797  011EF6  ECC9  F094         	call	_i2c_display_write_fixed	;wreg free
 18798                           
 18799                           ;display.c: 182: i2c_display_cursor(3, 0);
 18800  011EFA  0E00               	movlw	0
 18801  011EFC  0100               	movlb	0	; () banked
 18802  011EFE  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 18803  011F00  0E03               	movlw	3
 18804  011F02  EC10  F09C         	call	_i2c_display_cursor
 18805                           
 18806                           ;display.c: 183: i2c_display_write_fixed(&display_content[3][0], 20);
 18807  011F06  0E90               	movlw	low (_display_content+60)
 18808  011F08  0100               	movlb	0	; () banked
 18809  011F0A  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 18810  011F0C  0E03               	movlw	high (_display_content+60)
 18811  011F0E  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 18812  011F10  0E14               	movlw	20
 18813  011F12  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 18814  011F14  ECC9  F094         	call	_i2c_display_write_fixed	;wreg free
 18815  011F18  0012               	return		;funcret
 18816  011F1A                     __end_of_display_update:
 18817                           	opt stack 0
 18818                           tblptru	equ	0xFF8
 18819                           tblptrh	equ	0xFF7
 18820                           tblptrl	equ	0xFF6
 18821                           tablat	equ	0xFF5
 18822                           prodh	equ	0xFF4
 18823                           prodl	equ	0xFF3
 18824                           intcon	equ	0xFF2
 18825                           intcon2	equ	0xFF1
 18826                           intcon3	equ	0xFF0
 18827                           postinc0	equ	0xFEE
 18828                           wreg	equ	0xFE8
 18829                           indf1	equ	0xFE7
 18830                           postinc1	equ	0xFE6
 18831                           postdec1	equ	0xFE5
 18832                           plusw1	equ	0xFE3
 18833                           fsr1h	equ	0xFE2
 18834                           fsr1l	equ	0xFE1
 18835                           indf2	equ	0xFDF
 18836                           postinc2	equ	0xFDE
 18837                           postdec2	equ	0xFDD
 18838                           plusw2	equ	0xFDB
 18839                           fsr2h	equ	0xFDA
 18840                           fsr2l	equ	0xFD9
 18841                           status	equ	0xFD8
 18842                           
 18843 ;; *************** function _i2c_display_write_fixed *****************
 18844 ;; Defined at:
 18845 ;;		line 364 in file "i2c.c"
 18846 ;; Parameters:    Size  Location     Type
 18847 ;;  data            2    5[BANK0 ] PTR unsigned char 
 18848 ;;		 -> display_content(80), 
 18849 ;;  length          1    7[BANK0 ] unsigned char 
 18850 ;; Auto vars:     Size  Location     Type
 18851 ;;  pos             1    8[BANK0 ] unsigned char 
 18852 ;; Return value:  Size  Location     Type
 18853 ;;                  1    wreg      void 
 18854 ;; Registers used:
 18855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18856 ;; Tracked objects:
 18857 ;;		On entry : 0/0
 18858 ;;		On exit  : 0/0
 18859 ;;		Unchanged: 0/0
 18860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18861 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18864 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18865 ;;Total ram usage:        4 bytes
 18866 ;; Hardware stack levels used:    1
 18867 ;; Hardware stack levels required when called:   11
 18868 ;; This function calls:
 18869 ;;		__i2c_send
 18870 ;;		__i2c_start
 18871 ;;		__i2c_stop
 18872 ;;		__i2c_wait_idle
 18873 ;;		_i2c_set_frequency
 18874 ;; This function is called by:
 18875 ;;		_display_update
 18876 ;; This function uses a non-reentrant model
 18877 ;;
 18878                           
 18879                           	psect	text95
 18880  012992                     __ptext95:
 18881                           	opt stack 0
 18882  012992                     _i2c_display_write_fixed:
 18883                           	opt stack 18
 18884                           
 18885                           ;i2c.c: 366: uint8_t pos;;i2c.c: 369: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 18886                           
 18887                           ;incstack = 0
 18888  012992  0E00               	movlw	0
 18889  012994  ECB3  F090         	call	_i2c_set_frequency
 18890                           
 18891                           ;i2c.c: 371: _i2c_wait_idle();
 18892  012998  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18893                           
 18894                           ;i2c.c: 372: _i2c_start();
 18895  01299C  EC62  F09F         	call	__i2c_start	;wreg free
 18896                           
 18897                           ;i2c.c: 373: _i2c_wait_idle();
 18898  0129A0  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18899                           
 18900                           ;i2c.c: 374: _i2c_send(0b01111000);
 18901  0129A4  0E78               	movlw	120
 18902  0129A6  EC59  F09F         	call	__i2c_send
 18903                           
 18904                           ;i2c.c: 375: _i2c_wait_idle();
 18905  0129AA  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18906                           
 18907                           ;i2c.c: 376: _i2c_send(0b01000000);
 18908  0129AE  0E40               	movlw	64
 18909  0129B0  EC59  F09F         	call	__i2c_send
 18910                           
 18911                           ;i2c.c: 377: _i2c_wait_idle();
 18912  0129B4  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18913                           
 18914                           ;i2c.c: 380: for(pos=0; pos<length; ++pos)
 18915  0129B8  0E00               	movlw	0
 18916  0129BA  0100               	movlb	0	; () banked
 18917  0129BC  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 18918  0129BE  D00F               	goto	l1585
 18919  0129C0                     
 18920                           ; BSR set to: 0
 18921                           ;i2c.c: 381: {;i2c.c: 382: _i2c_send(data[pos]);
 18922                           
 18923                           ; BSR set to: 0
 18924  0129C0  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 18925  0129C2  0D01               	mullw	1
 18926  0129C4  50F3               	movf	prodl,w,c
 18927  0129C6  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 18928  0129C8  6ED9               	movwf	fsr2l,c
 18929  0129CA  50F4               	movf	prodh,w,c
 18930  0129CC  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 18931  0129CE  6EDA               	movwf	fsr2h,c
 18932  0129D0  50DF               	movf	indf2,w,c
 18933  0129D2  EC59  F09F         	call	__i2c_send
 18934                           
 18935                           ;i2c.c: 383: _i2c_wait_idle();
 18936  0129D6  EC90  F092         	call	__i2c_wait_idle	;wreg free
 18937  0129DA  0100               	movlb	0	; () banked
 18938  0129DC  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 18939  0129DE                     l1585:
 18940                           
 18941                           ; BSR set to: 0
 18942                           
 18943                           ; BSR set to: 0
 18944  0129DE  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 18945  0129E0  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 18946  0129E2  A0D8               	btfss	status,0,c
 18947  0129E4  D7ED               	goto	l1586
 18948                           
 18949                           ; BSR set to: 0
 18950                           ;i2c.c: 384: };i2c.c: 386: _i2c_stop();
 18951                           
 18952                           ; BSR set to: 0
 18953  0129E6  EC5E  F09F         	call	__i2c_stop	;wreg free
 18954  0129EA  0012               	return		;funcret
 18955  0129EC                     __end_of_i2c_display_write_fixed:
 18956                           	opt stack 0
 18957                           tblptru	equ	0xFF8
 18958                           tblptrh	equ	0xFF7
 18959                           tblptrl	equ	0xFF6
 18960                           tablat	equ	0xFF5
 18961                           prodh	equ	0xFF4
 18962                           prodl	equ	0xFF3
 18963                           intcon	equ	0xFF2
 18964                           intcon2	equ	0xFF1
 18965                           intcon3	equ	0xFF0
 18966                           postinc0	equ	0xFEE
 18967                           wreg	equ	0xFE8
 18968                           indf1	equ	0xFE7
 18969                           postinc1	equ	0xFE6
 18970                           postdec1	equ	0xFE5
 18971                           plusw1	equ	0xFE3
 18972                           fsr1h	equ	0xFE2
 18973                           fsr1l	equ	0xFE1
 18974                           indf2	equ	0xFDF
 18975                           postinc2	equ	0xFDE
 18976                           postdec2	equ	0xFDD
 18977                           plusw2	equ	0xFDB
 18978                           fsr2h	equ	0xFDA
 18979                           fsr2l	equ	0xFD9
 18980                           status	equ	0xFD8
 18981                           
 18982 ;; *************** function _i2c_display_cursor *****************
 18983 ;; Defined at:
 18984 ;;		line 324 in file "i2c.c"
 18985 ;; Parameters:    Size  Location     Type
 18986 ;;  line            1    wreg     unsigned char 
 18987 ;;  position        1   13[BANK0 ] unsigned char 
 18988 ;; Auto vars:     Size  Location     Type
 18989 ;;  line            1   14[BANK0 ] unsigned char 
 18990 ;;  address         1   15[BANK0 ] unsigned char 
 18991 ;; Return value:  Size  Location     Type
 18992 ;;                  1    wreg      void 
 18993 ;; Registers used:
 18994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18995 ;; Tracked objects:
 18996 ;;		On entry : 0/0
 18997 ;;		On exit  : 0/0
 18998 ;;		Unchanged: 0/0
 18999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19000 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19003 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19004 ;;Total ram usage:        3 bytes
 19005 ;; Hardware stack levels used:    1
 19006 ;; Hardware stack levels required when called:   13
 19007 ;; This function calls:
 19008 ;;		__ic2_display_set_address
 19009 ;;		_i2c_set_frequency
 19010 ;; This function is called by:
 19011 ;;		_display_update
 19012 ;; This function uses a non-reentrant model
 19013 ;;
 19014                           
 19015                           	psect	text96
 19016  013820                     __ptext96:
 19017                           	opt stack 0
 19018  013820                     _i2c_display_cursor:
 19019                           	opt stack 16
 19020                           
 19021                           ;incstack = 0
 19022                           ;i2c_display_cursor@line stored from wreg
 19023  013820  0100               	movlb	0	; () banked
 19024  013822  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 19025                           
 19026                           ;i2c.c: 326: uint8_t address;;i2c.c: 329: line &= 0b11;
 19027  013824  0E03               	movlw	3
 19028  013826  0100               	movlb	0	; () banked
 19029  013828  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 19030                           
 19031                           ;i2c.c: 330: address = line<<5;
 19032  01382A  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 19033  01382C  46E8               	rlncf	wreg,f,c
 19034  01382E  0BE0               	andlw	224
 19035  013830  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 19036                           
 19037                           ;i2c.c: 331: position &= 0b11111;
 19038  013832  0E1F               	movlw	31
 19039  013834  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 19040                           
 19041                           ;i2c.c: 332: address |= position;
 19042  013836  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 19043  013838  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;i2c.c: 335: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19047  01383A  0E00               	movlw	0
 19048  01383C  ECB3  F090         	call	_i2c_set_frequency
 19049                           
 19050                           ;i2c.c: 338: _ic2_display_set_address(address);
 19051  013840  0100               	movlb	0	; () banked
 19052  013842  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 19053  013844  ECB9  F09B         	call	__ic2_display_set_address
 19054  013848  0012               	return		;funcret
 19055  01384A                     __end_of_i2c_display_cursor:
 19056                           	opt stack 0
 19057                           tblptru	equ	0xFF8
 19058                           tblptrh	equ	0xFF7
 19059                           tblptrl	equ	0xFF6
 19060                           tablat	equ	0xFF5
 19061                           prodh	equ	0xFF4
 19062                           prodl	equ	0xFF3
 19063                           intcon	equ	0xFF2
 19064                           intcon2	equ	0xFF1
 19065                           intcon3	equ	0xFF0
 19066                           postinc0	equ	0xFEE
 19067                           wreg	equ	0xFE8
 19068                           indf1	equ	0xFE7
 19069                           postinc1	equ	0xFE6
 19070                           postdec1	equ	0xFE5
 19071                           plusw1	equ	0xFE3
 19072                           fsr1h	equ	0xFE2
 19073                           fsr1l	equ	0xFE1
 19074                           indf2	equ	0xFDF
 19075                           postinc2	equ	0xFDE
 19076                           postdec2	equ	0xFDD
 19077                           plusw2	equ	0xFDB
 19078                           fsr2h	equ	0xFDA
 19079                           fsr2l	equ	0xFD9
 19080                           status	equ	0xFD8
 19081                           
 19082 ;; *************** function __ic2_display_set_address *****************
 19083 ;; Defined at:
 19084 ;;		line 311 in file "i2c.c"
 19085 ;; Parameters:    Size  Location     Type
 19086 ;;  address         1    wreg     unsigned char 
 19087 ;; Auto vars:     Size  Location     Type
 19088 ;;  address         1   10[BANK0 ] unsigned char 
 19089 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 19090 ;; Return value:  Size  Location     Type
 19091 ;;                  1    wreg      void 
 19092 ;; Registers used:
 19093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19094 ;; Tracked objects:
 19095 ;;		On entry : 0/0
 19096 ;;		On exit  : 0/0
 19097 ;;		Unchanged: 0/0
 19098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19100 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19102 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19103 ;;Total ram usage:        3 bytes
 19104 ;; Hardware stack levels used:    1
 19105 ;; Hardware stack levels required when called:   12
 19106 ;; This function calls:
 19107 ;;		__i2c_write
 19108 ;;		_i2c_set_frequency
 19109 ;; This function is called by:
 19110 ;;		_i2c_display_cursor
 19111 ;; This function uses a non-reentrant model
 19112 ;;
 19113                           
 19114                           	psect	text97
 19115  013772                     __ptext97:
 19116                           	opt stack 0
 19117  013772                     __ic2_display_set_address:
 19118                           	opt stack 16
 19119                           
 19120                           ;incstack = 0
 19121                           ;__ic2_display_set_address@address stored from wreg
 19122  013772  0100               	movlb	0	; () banked
 19123  013774  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 19124                           
 19125                           ;i2c.c: 313: uint8_t data_array[2];;i2c.c: 314: data_array[0] = 0b00000000;
 19126  013776  0E00               	movlw	0
 19127  013778  0100               	movlb	0	; () banked
 19128  01377A  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;i2c.c: 315: data_array[1] = 0b10000000 | address;
 19132  01377C  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 19133  01377E  0980               	iorlw	128
 19134  013780  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 19135                           
 19136                           ; BSR set to: 0
 19137                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19138  013782  0E00               	movlw	0
 19139  013784  ECB3  F090         	call	_i2c_set_frequency
 19140                           
 19141                           ;i2c.c: 321: _i2c_write(0b01111000, &data_array[0], 2);
 19142  013788  0E6B               	movlw	low __ic2_display_set_address@data_array
 19143  01378A  0100               	movlb	0	; () banked
 19144  01378C  6F65               	movwf	__i2c_write@data& (0+255),b
 19145  01378E  0E00               	movlw	high __ic2_display_set_address@data_array
 19146  013790  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19147  013792  0E02               	movlw	2
 19148  013794  6F67               	movwf	__i2c_write@length& (0+255),b
 19149  013796  0E78               	movlw	120
 19150  013798  EC22  F097         	call	__i2c_write
 19151  01379C  0012               	return		;funcret
 19152  01379E                     __end_of__ic2_display_set_address:
 19153                           	opt stack 0
 19154                           tblptru	equ	0xFF8
 19155                           tblptrh	equ	0xFF7
 19156                           tblptrl	equ	0xFF6
 19157                           tablat	equ	0xFF5
 19158                           prodh	equ	0xFF4
 19159                           prodl	equ	0xFF3
 19160                           intcon	equ	0xFF2
 19161                           intcon2	equ	0xFF1
 19162                           intcon3	equ	0xFF0
 19163                           postinc0	equ	0xFEE
 19164                           wreg	equ	0xFE8
 19165                           indf1	equ	0xFE7
 19166                           postinc1	equ	0xFE6
 19167                           postdec1	equ	0xFE5
 19168                           plusw1	equ	0xFE3
 19169                           fsr1h	equ	0xFE2
 19170                           fsr1l	equ	0xFE1
 19171                           indf2	equ	0xFDF
 19172                           postinc2	equ	0xFDE
 19173                           postdec2	equ	0xFDD
 19174                           plusw2	equ	0xFDB
 19175                           fsr2h	equ	0xFDA
 19176                           fsr2l	equ	0xFD9
 19177                           status	equ	0xFD8
 19178                           
 19179 ;; *************** function _display_prepare *****************
 19180 ;; Defined at:
 19181 ;;		line 108 in file "display.c"
 19182 ;; Parameters:    Size  Location     Type
 19183 ;;  mode            1    wreg     unsigned char 
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;  mode            1  116[BANK0 ] unsigned char 
 19186 ;; Return value:  Size  Location     Type
 19187 ;;                  1    wreg      void 
 19188 ;; Registers used:
 19189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19190 ;; Tracked objects:
 19191 ;;		On entry : 0/0
 19192 ;;		On exit  : 0/0
 19193 ;;		Unchanged: 0/0
 19194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19197 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19198 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19199 ;;Total ram usage:        3 bytes
 19200 ;; Hardware stack levels used:    1
 19201 ;; Hardware stack levels required when called:   15
 19202 ;; This function calls:
 19203 ;;		__display_charger
 19204 ;;		__display_clear
 19205 ;;		__display_efficiency
 19206 ;;		__display_inout
 19207 ;;		__display_outputs
 19208 ;;		__display_temperature
 19209 ;;		__display_time
 19210 ;;		__display_usb
 19211 ;; This function is called by:
 19212 ;;		_main
 19213 ;; This function uses a non-reentrant model
 19214 ;;
 19215                           
 19216                           	psect	text98
 19217  011B2A                     __ptext98:
 19218                           	opt stack 0
 19219  011B2A                     _display_prepare:
 19220                           	opt stack 15
 19221                           
 19222                           ;incstack = 0
 19223                           ;display_prepare@mode stored from wreg
 19224  011B2A  0100               	movlb	0	; () banked
 19225  011B2C  6FD4               	movwf	display_prepare@mode& (0+255),b
 19226                           
 19227                           ;display.c: 110: _display_clear();
 19228  011B2E  EC0E  F098         	call	__display_clear	;wreg free
 19229                           
 19230                           ;display.c: 112: switch(mode&0xF0)
 19231  011B32  D01C               	goto	l1935
 19232  011B34                     
 19233                           ;display.c: 115: _display_inout();
 19234  011B34  ECC1  F06E         	call	__display_inout	;wreg free
 19235                           
 19236                           ;display.c: 116: break;
 19237  011B38  0012               	return	
 19238  011B3A                     
 19239                           ;display.c: 118: _display_time(mode);
 19240  011B3A  0100               	movlb	0	; () banked
 19241  011B3C  51D4               	movf	display_prepare@mode& (0+255),w,b
 19242  011B3E  EC33  F052         	call	__display_time
 19243                           
 19244                           ;display.c: 119: break;
 19245  011B42  0012               	return	
 19246  011B44                     
 19247                           ;display.c: 121: _display_usb();
 19248  011B44  EC66  F072         	call	__display_usb	;wreg free
 19249                           
 19250                           ;display.c: 122: break;
 19251  011B48  0012               	return	
 19252  011B4A                     
 19253                           ;display.c: 124: _display_outputs(mode);
 19254  011B4A  0100               	movlb	0	; () banked
 19255  011B4C  51D4               	movf	display_prepare@mode& (0+255),w,b
 19256  011B4E  ECAD  F06C         	call	__display_outputs
 19257                           
 19258                           ;display.c: 125: break;
 19259  011B52  0012               	return	
 19260  011B54                     
 19261                           ;display.c: 127: _display_charger();
 19262  011B54  ECC1  F063         	call	__display_charger	;wreg free
 19263                           
 19264                           ;display.c: 128: break;
 19265  011B58  0012               	return	
 19266  011B5A                     
 19267                           ;display.c: 130: _display_efficiency();
 19268  011B5A  EC94  F060         	call	__display_efficiency	;wreg free
 19269                           
 19270                           ;display.c: 131: break;
 19271  011B5E  0012               	return	
 19272  011B60                     
 19273                           ;display.c: 133: _display_temperature();
 19274  011B60  ECA7  F070         	call	__display_temperature	;wreg free
 19275                           
 19276                           ;display.c: 134: break;
 19277  011B64  0012               	return	
 19278  011B66                     
 19279                           ;display.c: 136: _display_inout();
 19280  011B66  ECC1  F06E         	call	__display_inout	;wreg free
 19281                           
 19282                           ;display.c: 137: }
 19283  011B6A  0012               	return	
 19284  011B6C                     l1935:
 19285  011B6C  0100               	movlb	0	; () banked
 19286  011B6E  51D4               	movf	display_prepare@mode& (0+255),w,b
 19287  011B70  0BF0               	andlw	240
 19288  011B72  6FD2               	movwf	??_display_prepare& (0+255),b
 19289  011B74  6BD3               	clrf	(??_display_prepare+1)& (0+255),b
 19290                           
 19291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19292                           ; Switch size 1, requested type "space"
 19293                           ; Number of cases is 1, Range of values is 0 to 0
 19294                           ; switch strategies available:
 19295                           ; Name         Instructions Cycles
 19296                           ; simple_byte            4     3 (average)
 19297                           ;	Chosen strategy is simple_byte
 19298  011B76  51D3               	movf	(??_display_prepare+1)& (0+255),w,b
 19299  011B78  0A00               	xorlw	0	; case 0
 19300  011B7A  A4D8               	btfss	status,2,c
 19301  011B7C  D7F4               	goto	l1944
 19302                           
 19303                           ; BSR set to: 0
 19304                           ; Switch size 1, requested type "space"
 19305                           ; Number of cases is 7, Range of values is 0 to 96
 19306                           ; switch strategies available:
 19307                           ; Name         Instructions Cycles
 19308                           ; simple_byte           22    12 (average)
 19309                           ;	Chosen strategy is simple_byte
 19310  011B7E  51D2               	movf	??_display_prepare& (0+255),w,b
 19311  011B80  0A00               	xorlw	0	; case 0
 19312  011B82  B4D8               	btfsc	status,2,c
 19313  011B84  D7D7               	goto	l1936
 19314  011B86  0A10               	xorlw	16	; case 16
 19315  011B88  B4D8               	btfsc	status,2,c
 19316  011B8A  D7D7               	goto	l1938
 19317  011B8C  0A30               	xorlw	48	; case 32
 19318  011B8E  B4D8               	btfsc	status,2,c
 19319  011B90  D7D9               	goto	l1939
 19320  011B92  0A10               	xorlw	16	; case 48
 19321  011B94  B4D8               	btfsc	status,2,c
 19322  011B96  D7D9               	goto	l1940
 19323  011B98  0A70               	xorlw	112	; case 64
 19324  011B9A  B4D8               	btfsc	status,2,c
 19325  011B9C  D7DB               	goto	l1941
 19326  011B9E  0A10               	xorlw	16	; case 80
 19327  011BA0  B4D8               	btfsc	status,2,c
 19328  011BA2  D7DB               	goto	l1942
 19329  011BA4  0A30               	xorlw	48	; case 96
 19330  011BA6  B4D8               	btfsc	status,2,c
 19331  011BA8  D7DB               	goto	l1943
 19332  011BAA  D7DD               	goto	l1944
 19333  011BAC                     __end_of_display_prepare:
 19334                           	opt stack 0
 19335                           tblptru	equ	0xFF8
 19336                           tblptrh	equ	0xFF7
 19337                           tblptrl	equ	0xFF6
 19338                           tablat	equ	0xFF5
 19339                           prodh	equ	0xFF4
 19340                           prodl	equ	0xFF3
 19341                           intcon	equ	0xFF2
 19342                           intcon2	equ	0xFF1
 19343                           intcon3	equ	0xFF0
 19344                           postinc0	equ	0xFEE
 19345                           wreg	equ	0xFE8
 19346                           indf1	equ	0xFE7
 19347                           postinc1	equ	0xFE6
 19348                           postdec1	equ	0xFE5
 19349                           plusw1	equ	0xFE3
 19350                           fsr1h	equ	0xFE2
 19351                           fsr1l	equ	0xFE1
 19352                           indf2	equ	0xFDF
 19353                           postinc2	equ	0xFDE
 19354                           postdec2	equ	0xFDD
 19355                           plusw2	equ	0xFDB
 19356                           fsr2h	equ	0xFDA
 19357                           fsr2l	equ	0xFD9
 19358                           status	equ	0xFD8
 19359                           
 19360 ;; *************** function __display_usb *****************
 19361 ;; Defined at:
 19362 ;;		line 303 in file "display.c"
 19363 ;; Parameters:    Size  Location     Type
 19364 ;;		None
 19365 ;; Auto vars:     Size  Location     Type
 19366 ;;  header         20    0[BANK0 ] const unsigned char [20]
 19367 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 19368 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 19369 ;;  low            16   37[BANK0 ] const unsigned char [16]
 19370 ;;  cntr            1   69[BANK0 ] unsigned char 
 19371 ;; Return value:  Size  Location     Type
 19372 ;;                  1    wreg      void 
 19373 ;; Registers used:
 19374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19375 ;; Tracked objects:
 19376 ;;		On entry : 0/0
 19377 ;;		On exit  : 0/0
 19378 ;;		Unchanged: 0/0
 19379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19381 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19383 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19384 ;;Total ram usage:       70 bytes
 19385 ;; Hardware stack levels used:    1
 19386 ;; Hardware stack levels required when called:   10
 19387 ;; This function calls:
 19388 ;;		Nothing
 19389 ;; This function is called by:
 19390 ;;		_display_prepare
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           	psect	text99
 19395  00E4CC                     __ptext99:
 19396                           	opt stack 0
 19397  00E4CC                     __display_usb:
 19398                           	opt stack 19
 19399                           
 19400                           ;display.c: 305: uint8_t cntr;;display.c: 306: const char header[] = "USB Charger Output
      +                          s";
 19401                           
 19402                           ;incstack = 0
 19403  00E4CC  0E07               	movlw	low __display_usb@F7235
 19404  00E4CE  6EF6               	movwf	tblptrl,c
 19405  00E4D0                     	if	1	;There is more than 1 active tblptr byte
 19406  00E4D0  0EA1               	movlw	high __display_usb@F7235
 19407  00E4D2  6EF7               	movwf	tblptrh,c
 19408  00E4D4                     	endif
 19409  00E4D4                     	if	1	;There are 3 active tblptr bytes
 19410  00E4D4  0E00               	movlw	low (__display_usb@F7235 shr (0+16))
 19411  00E4D6  6EF8               	movwf	tblptru,c
 19412  00E4D8                     	endif
 19413  00E4D8  EE20  F060         	lfsr	2,__display_usb@header
 19414  00E4DC  0E13               	movlw	19
 19415  00E4DE                     u20870:
 19416  00E4DE  0009               	tblrd		*+
 19417  00E4E0  CFF5 FFDE          	movff	tablat,postinc2
 19418  00E4E4  06E8               	decf	wreg,f,c
 19419  00E4E6  E2FB               	bc	u20870
 19420                           
 19421                           ;display.c: 307: const char low[] = "Battery too low";
 19422  00E4E8  0E2B               	movlw	low __display_usb@F7237
 19423  00E4EA  6EF6               	movwf	tblptrl,c
 19424  00E4EC                     	if	1	;There is more than 1 active tblptr byte
 19425  00E4EC  0EA2               	movlw	high __display_usb@F7237
 19426  00E4EE  6EF7               	movwf	tblptrh,c
 19427  00E4F0                     	endif
 19428  00E4F0                     	if	1	;There are 3 active tblptr bytes
 19429  00E4F0  0E00               	movlw	low (__display_usb@F7237 shr (0+16))
 19430  00E4F2  6EF8               	movwf	tblptru,c
 19431  00E4F4                     	endif
 19432  00E4F4  EE20  F085         	lfsr	2,__display_usb@low
 19433  00E4F8  0E0F               	movlw	15
 19434  00E4FA                     u20880:
 19435  00E4FA  0009               	tblrd		*+
 19436  00E4FC  CFF5 FFDE          	movff	tablat,postinc2
 19437  00E500  06E8               	decf	wreg,f,c
 19438  00E502  E2FB               	bc	u20880
 19439                           
 19440                           ;display.c: 308: const char usb_on[] = "USB charging on";
 19441  00E504  0E1B               	movlw	low __display_usb@F7239
 19442  00E506  6EF6               	movwf	tblptrl,c
 19443  00E508                     	if	1	;There is more than 1 active tblptr byte
 19444  00E508  0EA2               	movlw	high __display_usb@F7239
 19445  00E50A  6EF7               	movwf	tblptrh,c
 19446  00E50C                     	endif
 19447  00E50C                     	if	1	;There are 3 active tblptr bytes
 19448  00E50C  0E00               	movlw	low (__display_usb@F7239 shr (0+16))
 19449  00E50E  6EF8               	movwf	tblptru,c
 19450  00E510                     	endif
 19451  00E510  EE20  F095         	lfsr	2,__display_usb@usb_on
 19452  00E514  0E0F               	movlw	15
 19453  00E516                     u20890:
 19454  00E516  0009               	tblrd		*+
 19455  00E518  CFF5 FFDE          	movff	tablat,postinc2
 19456  00E51C  06E8               	decf	wreg,f,c
 19457  00E51E  E2FB               	bc	u20890
 19458                           
 19459                           ;display.c: 309: const char usb_off[] = "USB charging off";
 19460  00E520  0EEA               	movlw	low __display_usb@F7241
 19461  00E522  6EF6               	movwf	tblptrl,c
 19462  00E524                     	if	1	;There is more than 1 active tblptr byte
 19463  00E524  0EA1               	movlw	high __display_usb@F7241
 19464  00E526  6EF7               	movwf	tblptrh,c
 19465  00E528                     	endif
 19466  00E528                     	if	1	;There are 3 active tblptr bytes
 19467  00E528  0E00               	movlw	low (__display_usb@F7241 shr (0+16))
 19468  00E52A  6EF8               	movwf	tblptru,c
 19469  00E52C                     	endif
 19470  00E52C  EE20  F074         	lfsr	2,__display_usb@usb_off
 19471  00E530  0E10               	movlw	16
 19472  00E532                     u20900:
 19473  00E532  0009               	tblrd		*+
 19474  00E534  CFF5 FFDE          	movff	tablat,postinc2
 19475  00E538  06E8               	decf	wreg,f,c
 19476  00E53A  E2FB               	bc	u20900
 19477                           
 19478                           ;display.c: 312: cntr = 0;
 19479  00E53C  0E00               	movlw	0
 19480  00E53E  0100               	movlb	0	; () banked
 19481  00E540  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19482                           
 19483                           ;display.c: 313: while(header[cntr])
 19484  00E542  D013               	goto	l2067
 19485  00E544                     
 19486                           ; BSR set to: 0
 19487                           ;display.c: 314: display_content[0][cntr] = header[cntr++];
 19488                           
 19489                           ; BSR set to: 0
 19490  00E544  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19491  00E546  0D01               	mullw	1
 19492  00E548  0E60               	movlw	low __display_usb@header
 19493  00E54A  24F3               	addwf	prodl,w,c
 19494  00E54C  6ED9               	movwf	fsr2l,c
 19495  00E54E  0E00               	movlw	high __display_usb@header
 19496  00E550  20F4               	addwfc	prodh,w,c
 19497  00E552  6EDA               	movwf	fsr2h,c
 19498  00E554  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19499  00E556  0D01               	mullw	1
 19500  00E558  0E54               	movlw	low _display_content
 19501  00E55A  24F3               	addwf	prodl,w,c
 19502  00E55C  6EE1               	movwf	fsr1l,c
 19503  00E55E  0E03               	movlw	high _display_content
 19504  00E560  20F4               	addwfc	prodh,w,c
 19505  00E562  6EE2               	movwf	fsr1h,c
 19506  00E564  CFDF FFE7          	movff	indf2,indf1
 19507                           
 19508                           ; BSR set to: 0
 19509  00E568  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19510  00E56A                     l2067:
 19511                           
 19512                           ; BSR set to: 0
 19513                           
 19514                           ; BSR set to: 0
 19515  00E56A  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19516  00E56C  0D01               	mullw	1
 19517  00E56E  0E60               	movlw	low __display_usb@header
 19518  00E570  24F3               	addwf	prodl,w,c
 19519  00E572  6ED9               	movwf	fsr2l,c
 19520  00E574  0E00               	movlw	high __display_usb@header
 19521  00E576  20F4               	addwfc	prodh,w,c
 19522  00E578  6EDA               	movwf	fsr2h,c
 19523  00E57A  50DF               	movf	indf2,w,c
 19524  00E57C  A4D8               	btfss	status,2,c
 19525  00E57E  D7E2               	goto	l2068
 19526                           
 19527                           ; BSR set to: 0
 19528                           ;display.c: 316: if(os.output_voltage<12000)
 19529                           
 19530                           ; BSR set to: 0
 19531  00E580  0102               	movlb	2	; () banked
 19532  00E582  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 19533  00E584  D006               	goto	u20920
 19534  00E586  0EE0               	movlw	224
 19535  00E588  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 19536  00E58A  0E2E               	movlw	46
 19537  00E58C  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 19538  00E58E  B0D8               	btfsc	status,0,c
 19539  00E590  D022               	goto	u20930
 19540  00E592                     u20920:
 19541                           
 19542                           ; BSR set to: 2
 19543                           ;display.c: 317: {;display.c: 318: cntr = 0;
 19544  00E592  0E00               	movlw	0
 19545  00E594  0100               	movlb	0	; () banked
 19546  00E596  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19547                           
 19548                           ;display.c: 319: while(low[cntr])
 19549  00E598  D013               	goto	l2071
 19550  00E59A                     
 19551                           ; BSR set to: 0
 19552                           ;display.c: 320: display_content[2][cntr] = low[cntr++];
 19553                           
 19554                           ; BSR set to: 0
 19555  00E59A  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19556  00E59C  0D01               	mullw	1
 19557  00E59E  0E85               	movlw	low __display_usb@low
 19558  00E5A0  24F3               	addwf	prodl,w,c
 19559  00E5A2  6ED9               	movwf	fsr2l,c
 19560  00E5A4  0E00               	movlw	high __display_usb@low
 19561  00E5A6  20F4               	addwfc	prodh,w,c
 19562  00E5A8  6EDA               	movwf	fsr2h,c
 19563  00E5AA  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19564  00E5AC  0D01               	mullw	1
 19565  00E5AE  0E7C               	movlw	low (_display_content+40)
 19566  00E5B0  24F3               	addwf	prodl,w,c
 19567  00E5B2  6EE1               	movwf	fsr1l,c
 19568  00E5B4  0E03               	movlw	high (_display_content+40)
 19569  00E5B6  20F4               	addwfc	prodh,w,c
 19570  00E5B8  6EE2               	movwf	fsr1h,c
 19571  00E5BA  CFDF FFE7          	movff	indf2,indf1
 19572                           
 19573                           ; BSR set to: 0
 19574  00E5BE  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19575  00E5C0                     l2071:
 19576                           
 19577                           ; BSR set to: 0
 19578                           
 19579                           ; BSR set to: 0
 19580  00E5C0  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19581  00E5C2  0D01               	mullw	1
 19582  00E5C4  0E85               	movlw	low __display_usb@low
 19583  00E5C6  24F3               	addwf	prodl,w,c
 19584  00E5C8  6ED9               	movwf	fsr2l,c
 19585  00E5CA  0E00               	movlw	high __display_usb@low
 19586  00E5CC  20F4               	addwfc	prodh,w,c
 19587  00E5CE  6EDA               	movwf	fsr2h,c
 19588  00E5D0  50DF               	movf	indf2,w,c
 19589  00E5D2  A4D8               	btfss	status,2,c
 19590  00E5D4  D7E2               	goto	l2072
 19591  00E5D6                     u20930:
 19592                           
 19593                           ;display.c: 321: };display.c: 323: cntr = 0;
 19594                           
 19595                           ; BSR set to: 0
 19596                           
 19597                           ; BSR set to: 0
 19598  00E5D6  0E00               	movlw	0
 19599  00E5D8  0100               	movlb	0	; () banked
 19600  00E5DA  6FA5               	movwf	__display_usb@cntr& (0+255),b
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;display.c: 324: if(LATDbits.LD3)
 19604  00E5DC  B68C               	btfsc	3980,3,c	;volatile
 19605  00E5DE  D014               	goto	l2075
 19606  00E5E0  D032               	goto	l2079
 19607  00E5E2                     
 19608                           ; BSR set to: 0
 19609                           ;display.c: 327: display_content[3][cntr] = usb_on[cntr++];
 19610                           
 19611                           ; BSR set to: 0
 19612  00E5E2  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19613  00E5E4  0D01               	mullw	1
 19614  00E5E6  0E95               	movlw	low __display_usb@usb_on
 19615  00E5E8  24F3               	addwf	prodl,w,c
 19616  00E5EA  6ED9               	movwf	fsr2l,c
 19617  00E5EC  0E00               	movlw	high __display_usb@usb_on
 19618  00E5EE  20F4               	addwfc	prodh,w,c
 19619  00E5F0  6EDA               	movwf	fsr2h,c
 19620  00E5F2  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19621  00E5F4  0D01               	mullw	1
 19622  00E5F6  0E90               	movlw	low (_display_content+60)
 19623  00E5F8  24F3               	addwf	prodl,w,c
 19624  00E5FA  6EE1               	movwf	fsr1l,c
 19625  00E5FC  0E03               	movlw	high (_display_content+60)
 19626  00E5FE  20F4               	addwfc	prodh,w,c
 19627  00E600  6EE2               	movwf	fsr1h,c
 19628  00E602  CFDF FFE7          	movff	indf2,indf1
 19629                           
 19630                           ; BSR set to: 0
 19631  00E606  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19632  00E608                     l2075:
 19633                           
 19634                           ; BSR set to: 0
 19635                           
 19636                           ; BSR set to: 0
 19637  00E608  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19638  00E60A  0D01               	mullw	1
 19639  00E60C  0E95               	movlw	low __display_usb@usb_on
 19640  00E60E  24F3               	addwf	prodl,w,c
 19641  00E610  6ED9               	movwf	fsr2l,c
 19642  00E612  0E00               	movlw	high __display_usb@usb_on
 19643  00E614  20F4               	addwfc	prodh,w,c
 19644  00E616  6EDA               	movwf	fsr2h,c
 19645  00E618  50DF               	movf	indf2,w,c
 19646  00E61A  B4D8               	btfsc	status,2,c
 19647  00E61C  0012               	return	
 19648  00E61E  D7E1               	goto	l2076
 19649  00E620                     
 19650                           ; BSR set to: 0
 19651                           ;display.c: 332: display_content[3][cntr] = usb_off[cntr++];
 19652                           
 19653                           ; BSR set to: 0
 19654  00E620  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19655  00E622  0D01               	mullw	1
 19656  00E624  0E74               	movlw	low __display_usb@usb_off
 19657  00E626  24F3               	addwf	prodl,w,c
 19658  00E628  6ED9               	movwf	fsr2l,c
 19659  00E62A  0E00               	movlw	high __display_usb@usb_off
 19660  00E62C  20F4               	addwfc	prodh,w,c
 19661  00E62E  6EDA               	movwf	fsr2h,c
 19662  00E630  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19663  00E632  0D01               	mullw	1
 19664  00E634  0E90               	movlw	low (_display_content+60)
 19665  00E636  24F3               	addwf	prodl,w,c
 19666  00E638  6EE1               	movwf	fsr1l,c
 19667  00E63A  0E03               	movlw	high (_display_content+60)
 19668  00E63C  20F4               	addwfc	prodh,w,c
 19669  00E63E  6EE2               	movwf	fsr1h,c
 19670  00E640  CFDF FFE7          	movff	indf2,indf1
 19671                           
 19672                           ; BSR set to: 0
 19673  00E644  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 19674  00E646                     l2079:
 19675                           
 19676                           ; BSR set to: 0
 19677                           
 19678                           ; BSR set to: 0
 19679  00E646  51A5               	movf	__display_usb@cntr& (0+255),w,b
 19680  00E648  0D01               	mullw	1
 19681  00E64A  0E74               	movlw	low __display_usb@usb_off
 19682  00E64C  24F3               	addwf	prodl,w,c
 19683  00E64E  6ED9               	movwf	fsr2l,c
 19684  00E650  0E00               	movlw	high __display_usb@usb_off
 19685  00E652  20F4               	addwfc	prodh,w,c
 19686  00E654  6EDA               	movwf	fsr2h,c
 19687  00E656  50DF               	movf	indf2,w,c
 19688  00E658  B4D8               	btfsc	status,2,c
 19689  00E65A  0012               	return	
 19690  00E65C  D7E1               	goto	l2080
 19691  00E65E                     __end_of__display_usb:
 19692                           	opt stack 0
 19693                           tblptru	equ	0xFF8
 19694                           tblptrh	equ	0xFF7
 19695                           tblptrl	equ	0xFF6
 19696                           tablat	equ	0xFF5
 19697                           prodh	equ	0xFF4
 19698                           prodl	equ	0xFF3
 19699                           intcon	equ	0xFF2
 19700                           intcon2	equ	0xFF1
 19701                           intcon3	equ	0xFF0
 19702                           postinc0	equ	0xFEE
 19703                           wreg	equ	0xFE8
 19704                           indf1	equ	0xFE7
 19705                           postinc1	equ	0xFE6
 19706                           postdec1	equ	0xFE5
 19707                           plusw1	equ	0xFE3
 19708                           fsr1h	equ	0xFE2
 19709                           fsr1l	equ	0xFE1
 19710                           indf2	equ	0xFDF
 19711                           postinc2	equ	0xFDE
 19712                           postdec2	equ	0xFDD
 19713                           plusw2	equ	0xFDB
 19714                           fsr2h	equ	0xFDA
 19715                           fsr2l	equ	0xFD9
 19716                           status	equ	0xFD8
 19717                           
 19718 ;; *************** function __display_time *****************
 19719 ;; Defined at:
 19720 ;;		line 186 in file "display.c"
 19721 ;; Parameters:    Size  Location     Type
 19722 ;;  mode            1    wreg     unsigned char 
 19723 ;; Auto vars:     Size  Location     Type
 19724 ;;  mode            1  203[BANK1 ] unsigned char 
 19725 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 19726 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 19727 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 19728 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 19729 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 19730 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 19731 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 19732 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 19733 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 19734 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 19735 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 19736 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 19737 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 19738 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 19739 ;;  cntr            1  210[BANK1 ] unsigned char 
 19740 ;;  seconds         1  209[BANK1 ] unsigned char 
 19741 ;;  minutes         1  208[BANK1 ] unsigned char 
 19742 ;;  hours           1  207[BANK1 ] unsigned char 
 19743 ;;  day             1  206[BANK1 ] unsigned char 
 19744 ;;  month           1  205[BANK1 ] unsigned char 
 19745 ;;  year            1  204[BANK1 ] unsigned char 
 19746 ;; Return value:  Size  Location     Type
 19747 ;;                  1    wreg      void 
 19748 ;; Registers used:
 19749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19750 ;; Tracked objects:
 19751 ;;		On entry : 0/0
 19752 ;;		On exit  : 0/0
 19753 ;;		Unchanged: 0/0
 19754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19756 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19758 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19759 ;;Total ram usage:      211 bytes
 19760 ;; Hardware stack levels used:    1
 19761 ;; Hardware stack levels required when called:   11
 19762 ;; This function calls:
 19763 ;;		_rtcc_get_day
 19764 ;;		_rtcc_get_hours
 19765 ;;		_rtcc_get_minutes
 19766 ;;		_rtcc_get_month
 19767 ;;		_rtcc_get_seconds
 19768 ;;		_rtcc_get_year
 19769 ;; This function is called by:
 19770 ;;		_display_prepare
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text100
 19775  00A466                     __ptext100:
 19776                           	opt stack 0
 19777  00A466                     __display_time:
 19778                           	opt stack 18
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;incstack = 0
 19782                           ;__display_time@mode stored from wreg
 19783  00A466  0101               	movlb	1	; () banked
 19784  00A468  6FCB               	movwf	__display_time@mode& (0+255),b
 19785                           
 19786                           ;display.c: 188: const char tad[] = "Time and Date";
 19787  00A46A  0E77               	movlw	low __display_time@F7198
 19788  00A46C  6EF6               	movwf	tblptrl,c
 19789  00A46E                     	if	1	;There is more than 1 active tblptr byte
 19790  00A46E  0EA2               	movlw	high __display_time@F7198
 19791  00A470  6EF7               	movwf	tblptrh,c
 19792  00A472                     	endif
 19793  00A472                     	if	1	;There are 3 active tblptr bytes
 19794  00A472  0E00               	movlw	low (__display_time@F7198 shr (0+16))
 19795  00A474  6EF8               	movwf	tblptru,c
 19796  00A476                     	endif
 19797  00A476  EE21  F080         	lfsr	2,__display_time@tad
 19798  00A47A  0E0D               	movlw	13
 19799  00A47C                     u20590:
 19800  00A47C  0009               	tblrd		*+
 19801  00A47E  CFF5 FFDE          	movff	tablat,postinc2
 19802  00A482  06E8               	decf	wreg,f,c
 19803  00A484  E2FB               	bc	u20590
 19804                           
 19805                           ;display.c: 189: const char setyear[] = "Set year";
 19806  00A486  0EEE               	movlw	low __display_time@F7200
 19807  00A488  6EF6               	movwf	tblptrl,c
 19808  00A48A                     	if	1	;There is more than 1 active tblptr byte
 19809  00A48A  0EA2               	movlw	high __display_time@F7200
 19810  00A48C  6EF7               	movwf	tblptrh,c
 19811  00A48E                     	endif
 19812  00A48E                     	if	1	;There are 3 active tblptr bytes
 19813  00A48E  0E00               	movlw	low (__display_time@F7200 shr (0+16))
 19814  00A490  6EF8               	movwf	tblptru,c
 19815  00A492                     	endif
 19816  00A492  EE21  F0BA         	lfsr	2,__display_time@setyear
 19817  00A496  0E08               	movlw	8
 19818  00A498                     u20600:
 19819  00A498  0009               	tblrd		*+
 19820  00A49A  CFF5 FFDE          	movff	tablat,postinc2
 19821  00A49E  06E8               	decf	wreg,f,c
 19822  00A4A0  E2FB               	bc	u20600
 19823                           
 19824                           ;display.c: 190: const char setmonth[] = "Set month";
 19825  00A4A2  0EE4               	movlw	low __display_time@F7202
 19826  00A4A4  6EF6               	movwf	tblptrl,c
 19827  00A4A6                     	if	1	;There is more than 1 active tblptr byte
 19828  00A4A6  0EA2               	movlw	high __display_time@F7202
 19829  00A4A8  6EF7               	movwf	tblptrh,c
 19830  00A4AA                     	endif
 19831  00A4AA                     	if	1	;There are 3 active tblptr bytes
 19832  00A4AA  0E00               	movlw	low (__display_time@F7202 shr (0+16))
 19833  00A4AC  6EF8               	movwf	tblptru,c
 19834  00A4AE                     	endif
 19835  00A4AE  EE21  F0A6         	lfsr	2,__display_time@setmonth
 19836  00A4B2  0E09               	movlw	9
 19837  00A4B4                     u20610:
 19838  00A4B4  0009               	tblrd		*+
 19839  00A4B6  CFF5 FFDE          	movff	tablat,postinc2
 19840  00A4BA  06E8               	decf	wreg,f,c
 19841  00A4BC  E2FB               	bc	u20610
 19842                           
 19843                           ;display.c: 191: const char setday[] = "Set day";
 19844  00A4BE  0EFF               	movlw	low __display_time@F7204
 19845  00A4C0  6EF6               	movwf	tblptrl,c
 19846  00A4C2                     	if	1	;There is more than 1 active tblptr byte
 19847  00A4C2  0EA2               	movlw	high __display_time@F7204
 19848  00A4C4  6EF7               	movwf	tblptrh,c
 19849  00A4C6                     	endif
 19850  00A4C6                     	if	1	;There are 3 active tblptr bytes
 19851  00A4C6  0E00               	movlw	low (__display_time@F7204 shr (0+16))
 19852  00A4C8  6EF8               	movwf	tblptru,c
 19853  00A4CA                     	endif
 19854  00A4CA  EE21  F0C3         	lfsr	2,__display_time@setday
 19855  00A4CE  0E07               	movlw	7
 19856  00A4D0                     u20620:
 19857  00A4D0  0009               	tblrd		*+
 19858  00A4D2  CFF5 FFDE          	movff	tablat,postinc2
 19859  00A4D6  06E8               	decf	wreg,f,c
 19860  00A4D8  E2FB               	bc	u20620
 19861                           
 19862                           ;display.c: 192: const char sethours[] = "Set hours";
 19863  00A4DA  0EDA               	movlw	low __display_time@F7206
 19864  00A4DC  6EF6               	movwf	tblptrl,c
 19865  00A4DE                     	if	1	;There is more than 1 active tblptr byte
 19866  00A4DE  0EA2               	movlw	high __display_time@F7206
 19867  00A4E0  6EF7               	movwf	tblptrh,c
 19868  00A4E2                     	endif
 19869  00A4E2                     	if	1	;There are 3 active tblptr bytes
 19870  00A4E2  0E00               	movlw	low (__display_time@F7206 shr (0+16))
 19871  00A4E4  6EF8               	movwf	tblptru,c
 19872  00A4E6                     	endif
 19873  00A4E6  EE21  F0B0         	lfsr	2,__display_time@sethours
 19874  00A4EA  0E09               	movlw	9
 19875  00A4EC                     u20630:
 19876  00A4EC  0009               	tblrd		*+
 19877  00A4EE  CFF5 FFDE          	movff	tablat,postinc2
 19878  00A4F2  06E8               	decf	wreg,f,c
 19879  00A4F4  E2FB               	bc	u20630
 19880                           
 19881                           ;display.c: 193: const char setminutes[] = "Set minutes";
 19882  00A4F6  0EC3               	movlw	low __display_time@F7208
 19883  00A4F8  6EF6               	movwf	tblptrl,c
 19884  00A4FA                     	if	1	;There is more than 1 active tblptr byte
 19885  00A4FA  0EA2               	movlw	high __display_time@F7208
 19886  00A4FC  6EF7               	movwf	tblptrh,c
 19887  00A4FE                     	endif
 19888  00A4FE                     	if	1	;There are 3 active tblptr bytes
 19889  00A4FE  0E00               	movlw	low (__display_time@F7208 shr (0+16))
 19890  00A500  6EF8               	movwf	tblptru,c
 19891  00A502                     	endif
 19892  00A502  EE21  F08E         	lfsr	2,__display_time@setminutes
 19893  00A506  0E0B               	movlw	11
 19894  00A508                     u20640:
 19895  00A508  0009               	tblrd		*+
 19896  00A50A  CFF5 FFDE          	movff	tablat,postinc2
 19897  00A50E  06E8               	decf	wreg,f,c
 19898  00A510  E2FB               	bc	u20640
 19899                           
 19900                           ;display.c: 194: const char setseconds[] = "Set seconds";
 19901  00A512  0EB7               	movlw	low __display_time@F7210
 19902  00A514  6EF6               	movwf	tblptrl,c
 19903  00A516                     	if	1	;There is more than 1 active tblptr byte
 19904  00A516  0EA2               	movlw	high __display_time@F7210
 19905  00A518  6EF7               	movwf	tblptrh,c
 19906  00A51A                     	endif
 19907  00A51A                     	if	1	;There are 3 active tblptr bytes
 19908  00A51A  0E00               	movlw	low (__display_time@F7210 shr (0+16))
 19909  00A51C  6EF8               	movwf	tblptru,c
 19910  00A51E                     	endif
 19911  00A51E  EE21  F09A         	lfsr	2,__display_time@setseconds
 19912  00A522  0E0B               	movlw	11
 19913  00A524                     u20650:
 19914  00A524  0009               	tblrd		*+
 19915  00A526  CFF5 FFDE          	movff	tablat,postinc2
 19916  00A52A  06E8               	decf	wreg,f,c
 19917  00A52C  E2FB               	bc	u20650
 19918                           
 19919                           ;display.c: 195: const char pts[] = "->Press to set time";
 19920  00A52E  0E43               	movlw	low __display_time@F7212
 19921  00A530  6EF6               	movwf	tblptrl,c
 19922  00A532                     	if	1	;There is more than 1 active tblptr byte
 19923  00A532  0EA1               	movlw	high __display_time@F7212
 19924  00A534  6EF7               	movwf	tblptrh,c
 19925  00A536                     	endif
 19926  00A536                     	if	1	;There are 3 active tblptr bytes
 19927  00A536  0E00               	movlw	low (__display_time@F7212 shr (0+16))
 19928  00A538  6EF8               	movwf	tblptru,c
 19929  00A53A                     	endif
 19930  00A53A  EE21  F000         	lfsr	2,__display_time@pts
 19931  00A53E  0E13               	movlw	19
 19932  00A540                     u20660:
 19933  00A540  0009               	tblrd		*+
 19934  00A542  CFF5 FFDE          	movff	tablat,postinc2
 19935  00A546  06E8               	decf	wreg,f,c
 19936  00A548  E2FB               	bc	u20660
 19937                           
 19938                           ;display.c: 196: const char pressmonth[] = "->Press for month";
 19939  00A54A  0EB4               	movlw	low __display_time@F7214
 19940  00A54C  6EF6               	movwf	tblptrl,c
 19941  00A54E                     	if	1	;There is more than 1 active tblptr byte
 19942  00A54E  0EA1               	movlw	high __display_time@F7214
 19943  00A550  6EF7               	movwf	tblptrh,c
 19944  00A552                     	endif
 19945  00A552                     	if	1	;There are 3 active tblptr bytes
 19946  00A552  0E00               	movlw	low (__display_time@F7214 shr (0+16))
 19947  00A554  6EF8               	movwf	tblptru,c
 19948  00A556                     	endif
 19949  00A556  EE21  F03C         	lfsr	2,__display_time@pressmonth
 19950  00A55A  0E11               	movlw	17
 19951  00A55C                     u20670:
 19952  00A55C  0009               	tblrd		*+
 19953  00A55E  CFF5 FFDE          	movff	tablat,postinc2
 19954  00A562  06E8               	decf	wreg,f,c
 19955  00A564  E2FB               	bc	u20670
 19956                           
 19957                           ;display.c: 197: const char pressday[] = "->Press for day";
 19958  00A566  0E4B               	movlw	low __display_time@F7216
 19959  00A568  6EF6               	movwf	tblptrl,c
 19960  00A56A                     	if	1	;There is more than 1 active tblptr byte
 19961  00A56A  0EA2               	movlw	high __display_time@F7216
 19962  00A56C  6EF7               	movwf	tblptrh,c
 19963  00A56E                     	endif
 19964  00A56E                     	if	1	;There are 3 active tblptr bytes
 19965  00A56E  0E00               	movlw	low (__display_time@F7216 shr (0+16))
 19966  00A570  6EF8               	movwf	tblptru,c
 19967  00A572                     	endif
 19968  00A572  EE21  F060         	lfsr	2,__display_time@pressday
 19969  00A576  0E0F               	movlw	15
 19970  00A578                     u20680:
 19971  00A578  0009               	tblrd		*+
 19972  00A57A  CFF5 FFDE          	movff	tablat,postinc2
 19973  00A57E  06E8               	decf	wreg,f,c
 19974  00A580  E2FB               	bc	u20680
 19975                           
 19976                           ;display.c: 198: const char presshours[] = "->Press for hours";
 19977  00A582  0EA2               	movlw	low __display_time@F7218
 19978  00A584  6EF6               	movwf	tblptrl,c
 19979  00A586                     	if	1	;There is more than 1 active tblptr byte
 19980  00A586  0EA1               	movlw	high __display_time@F7218
 19981  00A588  6EF7               	movwf	tblptrh,c
 19982  00A58A                     	endif
 19983  00A58A                     	if	1	;There are 3 active tblptr bytes
 19984  00A58A  0E00               	movlw	low (__display_time@F7218 shr (0+16))
 19985  00A58C  6EF8               	movwf	tblptru,c
 19986  00A58E                     	endif
 19987  00A58E  EE21  F04E         	lfsr	2,__display_time@presshours
 19988  00A592  0E11               	movlw	17
 19989  00A594                     u20690:
 19990  00A594  0009               	tblrd		*+
 19991  00A596  CFF5 FFDE          	movff	tablat,postinc2
 19992  00A59A  06E8               	decf	wreg,f,c
 19993  00A59C  E2FB               	bc	u20690
 19994                           
 19995                           ;display.c: 199: const char pressminutes[] = "->Press for minutes";
 19996  00A59E  0E2F               	movlw	low __display_time@F7220
 19997  00A5A0  6EF6               	movwf	tblptrl,c
 19998  00A5A2                     	if	1	;There is more than 1 active tblptr byte
 19999  00A5A2  0EA1               	movlw	high __display_time@F7220
 20000  00A5A4  6EF7               	movwf	tblptrh,c
 20001  00A5A6                     	endif
 20002  00A5A6                     	if	1	;There are 3 active tblptr bytes
 20003  00A5A6  0E00               	movlw	low (__display_time@F7220 shr (0+16))
 20004  00A5A8  6EF8               	movwf	tblptru,c
 20005  00A5AA                     	endif
 20006  00A5AA  EE21  F014         	lfsr	2,__display_time@pressminutes
 20007  00A5AE  0E13               	movlw	19
 20008  00A5B0                     u20700:
 20009  00A5B0  0009               	tblrd		*+
 20010  00A5B2  CFF5 FFDE          	movff	tablat,postinc2
 20011  00A5B6  06E8               	decf	wreg,f,c
 20012  00A5B8  E2FB               	bc	u20700
 20013                           
 20014                           ;display.c: 200: const char pressseconds[] = "->Press for seconds";
 20015  00A5BA  0E1B               	movlw	low __display_time@F7222
 20016  00A5BC  6EF6               	movwf	tblptrl,c
 20017  00A5BE                     	if	1	;There is more than 1 active tblptr byte
 20018  00A5BE  0EA1               	movlw	high __display_time@F7222
 20019  00A5C0  6EF7               	movwf	tblptrh,c
 20020  00A5C2                     	endif
 20021  00A5C2                     	if	1	;There are 3 active tblptr bytes
 20022  00A5C2  0E00               	movlw	low (__display_time@F7222 shr (0+16))
 20023  00A5C4  6EF8               	movwf	tblptru,c
 20024  00A5C6                     	endif
 20025  00A5C6  EE21  F028         	lfsr	2,__display_time@pressseconds
 20026  00A5CA  0E13               	movlw	19
 20027  00A5CC                     u20710:
 20028  00A5CC  0009               	tblrd		*+
 20029  00A5CE  CFF5 FFDE          	movff	tablat,postinc2
 20030  00A5D2  06E8               	decf	wreg,f,c
 20031  00A5D4  E2FB               	bc	u20710
 20032                           
 20033                           ;display.c: 201: const char presssave[] = "->Press to save";
 20034  00A5D6  0E3B               	movlw	low __display_time@F7224
 20035  00A5D8  6EF6               	movwf	tblptrl,c
 20036  00A5DA                     	if	1	;There is more than 1 active tblptr byte
 20037  00A5DA  0EA2               	movlw	high __display_time@F7224
 20038  00A5DC  6EF7               	movwf	tblptrh,c
 20039  00A5DE                     	endif
 20040  00A5DE                     	if	1	;There are 3 active tblptr bytes
 20041  00A5DE  0E00               	movlw	low (__display_time@F7224 shr (0+16))
 20042  00A5E0  6EF8               	movwf	tblptru,c
 20043  00A5E2                     	endif
 20044  00A5E2  EE21  F070         	lfsr	2,__display_time@presssave
 20045  00A5E6  0E0F               	movlw	15
 20046  00A5E8                     u20720:
 20047  00A5E8  0009               	tblrd		*+
 20048  00A5EA  CFF5 FFDE          	movff	tablat,postinc2
 20049  00A5EE  06E8               	decf	wreg,f,c
 20050  00A5F0  E2FB               	bc	u20720
 20051                           
 20052                           ;display.c: 203: uint8_t cntr;;display.c: 204: uint8_t year = rtcc_get_year();
 20053  00A5F2  EC04  F09F         	call	_rtcc_get_year	;wreg free
 20054  00A5F6  0101               	movlb	1	; () banked
 20055  00A5F8  6FCC               	movwf	__display_time@year& (0+255),b
 20056                           
 20057                           ; BSR set to: 1
 20058                           ;display.c: 205: uint8_t month = rtcc_get_month();
 20059  00A5FA  EC12  F09F         	call	_rtcc_get_month	;wreg free
 20060  00A5FE  0101               	movlb	1	; () banked
 20061  00A600  6FCD               	movwf	__display_time@month& (0+255),b
 20062                           
 20063                           ; BSR set to: 1
 20064                           ;display.c: 206: uint8_t day = rtcc_get_day();
 20065  00A602  EC27  F09F         	call	_rtcc_get_day	;wreg free
 20066  00A606  0101               	movlb	1	; () banked
 20067  00A608  6FCE               	movwf	__display_time@day& (0+255),b
 20068                           
 20069                           ; BSR set to: 1
 20070                           ;display.c: 207: uint8_t hours = rtcc_get_hours();
 20071  00A60A  EC20  F09F         	call	_rtcc_get_hours	;wreg free
 20072  00A60E  0101               	movlb	1	; () banked
 20073  00A610  6FCF               	movwf	__display_time@hours& (0+255),b
 20074                           
 20075                           ; BSR set to: 1
 20076                           ;display.c: 208: uint8_t minutes = rtcc_get_minutes();
 20077  00A612  EC19  F09F         	call	_rtcc_get_minutes	;wreg free
 20078  00A616  0101               	movlb	1	; () banked
 20079  00A618  6FD0               	movwf	__display_time@minutes& (0+255),b
 20080                           
 20081                           ; BSR set to: 1
 20082                           ;display.c: 209: uint8_t seconds = rtcc_get_seconds();
 20083  00A61A  EC0B  F09F         	call	_rtcc_get_seconds	;wreg free
 20084  00A61E  0101               	movlb	1	; () banked
 20085  00A620  6FD1               	movwf	__display_time@seconds& (0+255),b
 20086                           
 20087                           ;display.c: 211: switch(mode)
 20088  00A622  D1D5               	goto	l2005
 20089  00A624                     
 20090                           ; BSR set to: 1
 20091                           ;display.c: 214: cntr = 0;
 20092                           
 20093                           ; BSR set to: 1
 20094  00A624  0E00               	movlw	0
 20095  00A626  6FD2               	movwf	__display_time@cntr& (0+255),b
 20096                           
 20097                           ;display.c: 215: while(tad[cntr])
 20098  00A628  D013               	goto	l2007
 20099  00A62A                     
 20100                           ; BSR set to: 1
 20101                           ;display.c: 216: display_content[0][cntr] = tad[cntr++];
 20102                           
 20103                           ; BSR set to: 1
 20104  00A62A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20105  00A62C  0D01               	mullw	1
 20106  00A62E  0E80               	movlw	low __display_time@tad
 20107  00A630  24F3               	addwf	prodl,w,c
 20108  00A632  6ED9               	movwf	fsr2l,c
 20109  00A634  0E01               	movlw	high __display_time@tad
 20110  00A636  20F4               	addwfc	prodh,w,c
 20111  00A638  6EDA               	movwf	fsr2h,c
 20112  00A63A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20113  00A63C  0D01               	mullw	1
 20114  00A63E  0E54               	movlw	low _display_content
 20115  00A640  24F3               	addwf	prodl,w,c
 20116  00A642  6EE1               	movwf	fsr1l,c
 20117  00A644  0E03               	movlw	high _display_content
 20118  00A646  20F4               	addwfc	prodh,w,c
 20119  00A648  6EE2               	movwf	fsr1h,c
 20120  00A64A  CFDF FFE7          	movff	indf2,indf1
 20121                           
 20122                           ; BSR set to: 1
 20123  00A64E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20124  00A650                     l2007:
 20125                           
 20126                           ; BSR set to: 1
 20127                           
 20128                           ; BSR set to: 1
 20129  00A650  51D2               	movf	__display_time@cntr& (0+255),w,b
 20130  00A652  0D01               	mullw	1
 20131  00A654  0E80               	movlw	low __display_time@tad
 20132  00A656  24F3               	addwf	prodl,w,c
 20133  00A658  6ED9               	movwf	fsr2l,c
 20134  00A65A  0E01               	movlw	high __display_time@tad
 20135  00A65C  20F4               	addwfc	prodh,w,c
 20136  00A65E  6EDA               	movwf	fsr2h,c
 20137  00A660  50DF               	movf	indf2,w,c
 20138  00A662  A4D8               	btfss	status,2,c
 20139  00A664  D7E2               	goto	l2008
 20140                           
 20141                           ; BSR set to: 1
 20142                           ;display.c: 217: cntr = 0;
 20143                           
 20144                           ; BSR set to: 1
 20145  00A666  0E00               	movlw	0
 20146  00A668  6FD2               	movwf	__display_time@cntr& (0+255),b
 20147                           
 20148                           ;display.c: 218: while(pts[cntr])
 20149  00A66A  D013               	goto	l2010
 20150  00A66C                     
 20151                           ; BSR set to: 1
 20152                           ;display.c: 219: display_content[3][cntr] = pts[cntr++];
 20153                           
 20154                           ; BSR set to: 1
 20155  00A66C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20156  00A66E  0D01               	mullw	1
 20157  00A670  0E00               	movlw	low __display_time@pts
 20158  00A672  24F3               	addwf	prodl,w,c
 20159  00A674  6ED9               	movwf	fsr2l,c
 20160  00A676  0E01               	movlw	high __display_time@pts
 20161  00A678  20F4               	addwfc	prodh,w,c
 20162  00A67A  6EDA               	movwf	fsr2h,c
 20163  00A67C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20164  00A67E  0D01               	mullw	1
 20165  00A680  0E90               	movlw	low (_display_content+60)
 20166  00A682  24F3               	addwf	prodl,w,c
 20167  00A684  6EE1               	movwf	fsr1l,c
 20168  00A686  0E03               	movlw	high (_display_content+60)
 20169  00A688  20F4               	addwfc	prodh,w,c
 20170  00A68A  6EE2               	movwf	fsr1h,c
 20171  00A68C  CFDF FFE7          	movff	indf2,indf1
 20172                           
 20173                           ; BSR set to: 1
 20174  00A690  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20175  00A692                     l2010:
 20176                           
 20177                           ; BSR set to: 1
 20178                           
 20179                           ; BSR set to: 1
 20180  00A692  51D2               	movf	__display_time@cntr& (0+255),w,b
 20181  00A694  0D01               	mullw	1
 20182  00A696  0E00               	movlw	low __display_time@pts
 20183  00A698  24F3               	addwf	prodl,w,c
 20184  00A69A  6ED9               	movwf	fsr2l,c
 20185  00A69C  0E01               	movlw	high __display_time@pts
 20186  00A69E  20F4               	addwfc	prodh,w,c
 20187  00A6A0  6EDA               	movwf	fsr2h,c
 20188  00A6A2  50DF               	movf	indf2,w,c
 20189  00A6A4  B4D8               	btfsc	status,2,c
 20190  00A6A6  D1A9               	goto	l2013
 20191  00A6A8  D7E1               	goto	l2011
 20192  00A6AA                     
 20193                           ; BSR set to: 1
 20194                           ;display.c: 223: cntr = 0;
 20195                           
 20196                           ; BSR set to: 1
 20197  00A6AA  0E00               	movlw	0
 20198  00A6AC  6FD2               	movwf	__display_time@cntr& (0+255),b
 20199                           
 20200                           ;display.c: 224: while(setyear[cntr])
 20201  00A6AE  D013               	goto	l2015
 20202  00A6B0                     
 20203                           ; BSR set to: 1
 20204                           ;display.c: 225: display_content[0][cntr] = setyear[cntr++];
 20205                           
 20206                           ; BSR set to: 1
 20207  00A6B0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20208  00A6B2  0D01               	mullw	1
 20209  00A6B4  0EBA               	movlw	low __display_time@setyear
 20210  00A6B6  24F3               	addwf	prodl,w,c
 20211  00A6B8  6ED9               	movwf	fsr2l,c
 20212  00A6BA  0E01               	movlw	high __display_time@setyear
 20213  00A6BC  20F4               	addwfc	prodh,w,c
 20214  00A6BE  6EDA               	movwf	fsr2h,c
 20215  00A6C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20216  00A6C2  0D01               	mullw	1
 20217  00A6C4  0E54               	movlw	low _display_content
 20218  00A6C6  24F3               	addwf	prodl,w,c
 20219  00A6C8  6EE1               	movwf	fsr1l,c
 20220  00A6CA  0E03               	movlw	high _display_content
 20221  00A6CC  20F4               	addwfc	prodh,w,c
 20222  00A6CE  6EE2               	movwf	fsr1h,c
 20223  00A6D0  CFDF FFE7          	movff	indf2,indf1
 20224                           
 20225                           ; BSR set to: 1
 20226  00A6D4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20227  00A6D6                     l2015:
 20228                           
 20229                           ; BSR set to: 1
 20230                           
 20231                           ; BSR set to: 1
 20232  00A6D6  51D2               	movf	__display_time@cntr& (0+255),w,b
 20233  00A6D8  0D01               	mullw	1
 20234  00A6DA  0EBA               	movlw	low __display_time@setyear
 20235  00A6DC  24F3               	addwf	prodl,w,c
 20236  00A6DE  6ED9               	movwf	fsr2l,c
 20237  00A6E0  0E01               	movlw	high __display_time@setyear
 20238  00A6E2  20F4               	addwfc	prodh,w,c
 20239  00A6E4  6EDA               	movwf	fsr2h,c
 20240  00A6E6  50DF               	movf	indf2,w,c
 20241  00A6E8  A4D8               	btfss	status,2,c
 20242  00A6EA  D7E2               	goto	l2016
 20243                           
 20244                           ; BSR set to: 1
 20245                           ;display.c: 226: cntr = 0;
 20246                           
 20247                           ; BSR set to: 1
 20248  00A6EC  0E00               	movlw	0
 20249  00A6EE  6FD2               	movwf	__display_time@cntr& (0+255),b
 20250                           
 20251                           ;display.c: 227: while(pressmonth[cntr])
 20252  00A6F0  D013               	goto	l2018
 20253  00A6F2                     
 20254                           ; BSR set to: 1
 20255                           ;display.c: 228: display_content[3][cntr] = pressmonth[cntr++];
 20256                           
 20257                           ; BSR set to: 1
 20258  00A6F2  51D2               	movf	__display_time@cntr& (0+255),w,b
 20259  00A6F4  0D01               	mullw	1
 20260  00A6F6  0E3C               	movlw	low __display_time@pressmonth
 20261  00A6F8  24F3               	addwf	prodl,w,c
 20262  00A6FA  6ED9               	movwf	fsr2l,c
 20263  00A6FC  0E01               	movlw	high __display_time@pressmonth
 20264  00A6FE  20F4               	addwfc	prodh,w,c
 20265  00A700  6EDA               	movwf	fsr2h,c
 20266  00A702  51D2               	movf	__display_time@cntr& (0+255),w,b
 20267  00A704  0D01               	mullw	1
 20268  00A706  0E90               	movlw	low (_display_content+60)
 20269  00A708  24F3               	addwf	prodl,w,c
 20270  00A70A  6EE1               	movwf	fsr1l,c
 20271  00A70C  0E03               	movlw	high (_display_content+60)
 20272  00A70E  20F4               	addwfc	prodh,w,c
 20273  00A710  6EE2               	movwf	fsr1h,c
 20274  00A712  CFDF FFE7          	movff	indf2,indf1
 20275                           
 20276                           ; BSR set to: 1
 20277  00A716  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20278  00A718                     l2018:
 20279                           
 20280                           ; BSR set to: 1
 20281                           
 20282                           ; BSR set to: 1
 20283  00A718  51D2               	movf	__display_time@cntr& (0+255),w,b
 20284  00A71A  0D01               	mullw	1
 20285  00A71C  0E3C               	movlw	low __display_time@pressmonth
 20286  00A71E  24F3               	addwf	prodl,w,c
 20287  00A720  6ED9               	movwf	fsr2l,c
 20288  00A722  0E01               	movlw	high __display_time@pressmonth
 20289  00A724  20F4               	addwfc	prodh,w,c
 20290  00A726  6EDA               	movwf	fsr2h,c
 20291  00A728  50DF               	movf	indf2,w,c
 20292  00A72A  B4D8               	btfsc	status,2,c
 20293  00A72C  D166               	goto	l2013
 20294  00A72E  D7E1               	goto	l2019
 20295  00A730                     
 20296                           ; BSR set to: 1
 20297                           ;display.c: 232: cntr = 0;
 20298                           
 20299                           ; BSR set to: 1
 20300  00A730  0E00               	movlw	0
 20301  00A732  6FD2               	movwf	__display_time@cntr& (0+255),b
 20302                           
 20303                           ;display.c: 233: while(setmonth[cntr])
 20304  00A734  D013               	goto	l2022
 20305  00A736                     
 20306                           ; BSR set to: 1
 20307                           ;display.c: 234: display_content[0][cntr] = setmonth[cntr++];
 20308                           
 20309                           ; BSR set to: 1
 20310  00A736  51D2               	movf	__display_time@cntr& (0+255),w,b
 20311  00A738  0D01               	mullw	1
 20312  00A73A  0EA6               	movlw	low __display_time@setmonth
 20313  00A73C  24F3               	addwf	prodl,w,c
 20314  00A73E  6ED9               	movwf	fsr2l,c
 20315  00A740  0E01               	movlw	high __display_time@setmonth
 20316  00A742  20F4               	addwfc	prodh,w,c
 20317  00A744  6EDA               	movwf	fsr2h,c
 20318  00A746  51D2               	movf	__display_time@cntr& (0+255),w,b
 20319  00A748  0D01               	mullw	1
 20320  00A74A  0E54               	movlw	low _display_content
 20321  00A74C  24F3               	addwf	prodl,w,c
 20322  00A74E  6EE1               	movwf	fsr1l,c
 20323  00A750  0E03               	movlw	high _display_content
 20324  00A752  20F4               	addwfc	prodh,w,c
 20325  00A754  6EE2               	movwf	fsr1h,c
 20326  00A756  CFDF FFE7          	movff	indf2,indf1
 20327                           
 20328                           ; BSR set to: 1
 20329  00A75A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20330  00A75C                     l2022:
 20331                           
 20332                           ; BSR set to: 1
 20333                           
 20334                           ; BSR set to: 1
 20335  00A75C  51D2               	movf	__display_time@cntr& (0+255),w,b
 20336  00A75E  0D01               	mullw	1
 20337  00A760  0EA6               	movlw	low __display_time@setmonth
 20338  00A762  24F3               	addwf	prodl,w,c
 20339  00A764  6ED9               	movwf	fsr2l,c
 20340  00A766  0E01               	movlw	high __display_time@setmonth
 20341  00A768  20F4               	addwfc	prodh,w,c
 20342  00A76A  6EDA               	movwf	fsr2h,c
 20343  00A76C  50DF               	movf	indf2,w,c
 20344  00A76E  A4D8               	btfss	status,2,c
 20345  00A770  D7E2               	goto	l2023
 20346                           
 20347                           ; BSR set to: 1
 20348                           ;display.c: 235: cntr = 0;
 20349                           
 20350                           ; BSR set to: 1
 20351  00A772  0E00               	movlw	0
 20352  00A774  6FD2               	movwf	__display_time@cntr& (0+255),b
 20353                           
 20354                           ;display.c: 236: while(pressday[cntr])
 20355  00A776  D013               	goto	l2025
 20356  00A778                     
 20357                           ; BSR set to: 1
 20358                           ;display.c: 237: display_content[3][cntr] = pressday[cntr++];
 20359                           
 20360                           ; BSR set to: 1
 20361  00A778  51D2               	movf	__display_time@cntr& (0+255),w,b
 20362  00A77A  0D01               	mullw	1
 20363  00A77C  0E60               	movlw	low __display_time@pressday
 20364  00A77E  24F3               	addwf	prodl,w,c
 20365  00A780  6ED9               	movwf	fsr2l,c
 20366  00A782  0E01               	movlw	high __display_time@pressday
 20367  00A784  20F4               	addwfc	prodh,w,c
 20368  00A786  6EDA               	movwf	fsr2h,c
 20369  00A788  51D2               	movf	__display_time@cntr& (0+255),w,b
 20370  00A78A  0D01               	mullw	1
 20371  00A78C  0E90               	movlw	low (_display_content+60)
 20372  00A78E  24F3               	addwf	prodl,w,c
 20373  00A790  6EE1               	movwf	fsr1l,c
 20374  00A792  0E03               	movlw	high (_display_content+60)
 20375  00A794  20F4               	addwfc	prodh,w,c
 20376  00A796  6EE2               	movwf	fsr1h,c
 20377  00A798  CFDF FFE7          	movff	indf2,indf1
 20378                           
 20379                           ; BSR set to: 1
 20380  00A79C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20381  00A79E                     l2025:
 20382                           
 20383                           ; BSR set to: 1
 20384                           
 20385                           ; BSR set to: 1
 20386  00A79E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20387  00A7A0  0D01               	mullw	1
 20388  00A7A2  0E60               	movlw	low __display_time@pressday
 20389  00A7A4  24F3               	addwf	prodl,w,c
 20390  00A7A6  6ED9               	movwf	fsr2l,c
 20391  00A7A8  0E01               	movlw	high __display_time@pressday
 20392  00A7AA  20F4               	addwfc	prodh,w,c
 20393  00A7AC  6EDA               	movwf	fsr2h,c
 20394  00A7AE  50DF               	movf	indf2,w,c
 20395  00A7B0  B4D8               	btfsc	status,2,c
 20396  00A7B2  D123               	goto	l2013
 20397  00A7B4  D7E1               	goto	l2026
 20398  00A7B6                     
 20399                           ; BSR set to: 1
 20400                           ;display.c: 241: cntr = 0;
 20401                           
 20402                           ; BSR set to: 1
 20403  00A7B6  0E00               	movlw	0
 20404  00A7B8  6FD2               	movwf	__display_time@cntr& (0+255),b
 20405                           
 20406                           ;display.c: 242: while(setday[cntr])
 20407  00A7BA  D013               	goto	l2029
 20408  00A7BC                     
 20409                           ; BSR set to: 1
 20410                           ;display.c: 243: display_content[0][cntr] = setday[cntr++];
 20411                           
 20412                           ; BSR set to: 1
 20413  00A7BC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20414  00A7BE  0D01               	mullw	1
 20415  00A7C0  0EC3               	movlw	low __display_time@setday
 20416  00A7C2  24F3               	addwf	prodl,w,c
 20417  00A7C4  6ED9               	movwf	fsr2l,c
 20418  00A7C6  0E01               	movlw	high __display_time@setday
 20419  00A7C8  20F4               	addwfc	prodh,w,c
 20420  00A7CA  6EDA               	movwf	fsr2h,c
 20421  00A7CC  51D2               	movf	__display_time@cntr& (0+255),w,b
 20422  00A7CE  0D01               	mullw	1
 20423  00A7D0  0E54               	movlw	low _display_content
 20424  00A7D2  24F3               	addwf	prodl,w,c
 20425  00A7D4  6EE1               	movwf	fsr1l,c
 20426  00A7D6  0E03               	movlw	high _display_content
 20427  00A7D8  20F4               	addwfc	prodh,w,c
 20428  00A7DA  6EE2               	movwf	fsr1h,c
 20429  00A7DC  CFDF FFE7          	movff	indf2,indf1
 20430                           
 20431                           ; BSR set to: 1
 20432  00A7E0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20433  00A7E2                     l2029:
 20434                           
 20435                           ; BSR set to: 1
 20436                           
 20437                           ; BSR set to: 1
 20438  00A7E2  51D2               	movf	__display_time@cntr& (0+255),w,b
 20439  00A7E4  0D01               	mullw	1
 20440  00A7E6  0EC3               	movlw	low __display_time@setday
 20441  00A7E8  24F3               	addwf	prodl,w,c
 20442  00A7EA  6ED9               	movwf	fsr2l,c
 20443  00A7EC  0E01               	movlw	high __display_time@setday
 20444  00A7EE  20F4               	addwfc	prodh,w,c
 20445  00A7F0  6EDA               	movwf	fsr2h,c
 20446  00A7F2  50DF               	movf	indf2,w,c
 20447  00A7F4  A4D8               	btfss	status,2,c
 20448  00A7F6  D7E2               	goto	l2030
 20449                           
 20450                           ; BSR set to: 1
 20451                           ;display.c: 244: cntr = 0;
 20452                           
 20453                           ; BSR set to: 1
 20454  00A7F8  0E00               	movlw	0
 20455  00A7FA  6FD2               	movwf	__display_time@cntr& (0+255),b
 20456                           
 20457                           ;display.c: 245: while(presshours[cntr])
 20458  00A7FC  D013               	goto	l2032
 20459  00A7FE                     
 20460                           ; BSR set to: 1
 20461                           ;display.c: 246: display_content[3][cntr] = presshours[cntr++];
 20462                           
 20463                           ; BSR set to: 1
 20464  00A7FE  51D2               	movf	__display_time@cntr& (0+255),w,b
 20465  00A800  0D01               	mullw	1
 20466  00A802  0E4E               	movlw	low __display_time@presshours
 20467  00A804  24F3               	addwf	prodl,w,c
 20468  00A806  6ED9               	movwf	fsr2l,c
 20469  00A808  0E01               	movlw	high __display_time@presshours
 20470  00A80A  20F4               	addwfc	prodh,w,c
 20471  00A80C  6EDA               	movwf	fsr2h,c
 20472  00A80E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20473  00A810  0D01               	mullw	1
 20474  00A812  0E90               	movlw	low (_display_content+60)
 20475  00A814  24F3               	addwf	prodl,w,c
 20476  00A816  6EE1               	movwf	fsr1l,c
 20477  00A818  0E03               	movlw	high (_display_content+60)
 20478  00A81A  20F4               	addwfc	prodh,w,c
 20479  00A81C  6EE2               	movwf	fsr1h,c
 20480  00A81E  CFDF FFE7          	movff	indf2,indf1
 20481                           
 20482                           ; BSR set to: 1
 20483  00A822  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20484  00A824                     l2032:
 20485                           
 20486                           ; BSR set to: 1
 20487                           
 20488                           ; BSR set to: 1
 20489  00A824  51D2               	movf	__display_time@cntr& (0+255),w,b
 20490  00A826  0D01               	mullw	1
 20491  00A828  0E4E               	movlw	low __display_time@presshours
 20492  00A82A  24F3               	addwf	prodl,w,c
 20493  00A82C  6ED9               	movwf	fsr2l,c
 20494  00A82E  0E01               	movlw	high __display_time@presshours
 20495  00A830  20F4               	addwfc	prodh,w,c
 20496  00A832  6EDA               	movwf	fsr2h,c
 20497  00A834  50DF               	movf	indf2,w,c
 20498  00A836  B4D8               	btfsc	status,2,c
 20499  00A838  D0E0               	goto	l2013
 20500  00A83A  D7E1               	goto	l2033
 20501  00A83C                     
 20502                           ; BSR set to: 1
 20503                           ;display.c: 250: cntr = 0;
 20504                           
 20505                           ; BSR set to: 1
 20506  00A83C  0E00               	movlw	0
 20507  00A83E  6FD2               	movwf	__display_time@cntr& (0+255),b
 20508                           
 20509                           ;display.c: 251: while(sethours[cntr])
 20510  00A840  D013               	goto	l2036
 20511  00A842                     
 20512                           ; BSR set to: 1
 20513                           ;display.c: 252: display_content[0][cntr] = sethours[cntr++];
 20514                           
 20515                           ; BSR set to: 1
 20516  00A842  51D2               	movf	__display_time@cntr& (0+255),w,b
 20517  00A844  0D01               	mullw	1
 20518  00A846  0EB0               	movlw	low __display_time@sethours
 20519  00A848  24F3               	addwf	prodl,w,c
 20520  00A84A  6ED9               	movwf	fsr2l,c
 20521  00A84C  0E01               	movlw	high __display_time@sethours
 20522  00A84E  20F4               	addwfc	prodh,w,c
 20523  00A850  6EDA               	movwf	fsr2h,c
 20524  00A852  51D2               	movf	__display_time@cntr& (0+255),w,b
 20525  00A854  0D01               	mullw	1
 20526  00A856  0E54               	movlw	low _display_content
 20527  00A858  24F3               	addwf	prodl,w,c
 20528  00A85A  6EE1               	movwf	fsr1l,c
 20529  00A85C  0E03               	movlw	high _display_content
 20530  00A85E  20F4               	addwfc	prodh,w,c
 20531  00A860  6EE2               	movwf	fsr1h,c
 20532  00A862  CFDF FFE7          	movff	indf2,indf1
 20533                           
 20534                           ; BSR set to: 1
 20535  00A866  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20536  00A868                     l2036:
 20537                           
 20538                           ; BSR set to: 1
 20539                           
 20540                           ; BSR set to: 1
 20541  00A868  51D2               	movf	__display_time@cntr& (0+255),w,b
 20542  00A86A  0D01               	mullw	1
 20543  00A86C  0EB0               	movlw	low __display_time@sethours
 20544  00A86E  24F3               	addwf	prodl,w,c
 20545  00A870  6ED9               	movwf	fsr2l,c
 20546  00A872  0E01               	movlw	high __display_time@sethours
 20547  00A874  20F4               	addwfc	prodh,w,c
 20548  00A876  6EDA               	movwf	fsr2h,c
 20549  00A878  50DF               	movf	indf2,w,c
 20550  00A87A  A4D8               	btfss	status,2,c
 20551  00A87C  D7E2               	goto	l2037
 20552                           
 20553                           ; BSR set to: 1
 20554                           ;display.c: 253: cntr = 0;
 20555                           
 20556                           ; BSR set to: 1
 20557  00A87E  0E00               	movlw	0
 20558  00A880  6FD2               	movwf	__display_time@cntr& (0+255),b
 20559                           
 20560                           ;display.c: 254: while(pressminutes[cntr])
 20561  00A882  D013               	goto	l2039
 20562  00A884                     
 20563                           ; BSR set to: 1
 20564                           ;display.c: 255: display_content[3][cntr] = pressminutes[cntr++];
 20565                           
 20566                           ; BSR set to: 1
 20567  00A884  51D2               	movf	__display_time@cntr& (0+255),w,b
 20568  00A886  0D01               	mullw	1
 20569  00A888  0E14               	movlw	low __display_time@pressminutes
 20570  00A88A  24F3               	addwf	prodl,w,c
 20571  00A88C  6ED9               	movwf	fsr2l,c
 20572  00A88E  0E01               	movlw	high __display_time@pressminutes
 20573  00A890  20F4               	addwfc	prodh,w,c
 20574  00A892  6EDA               	movwf	fsr2h,c
 20575  00A894  51D2               	movf	__display_time@cntr& (0+255),w,b
 20576  00A896  0D01               	mullw	1
 20577  00A898  0E90               	movlw	low (_display_content+60)
 20578  00A89A  24F3               	addwf	prodl,w,c
 20579  00A89C  6EE1               	movwf	fsr1l,c
 20580  00A89E  0E03               	movlw	high (_display_content+60)
 20581  00A8A0  20F4               	addwfc	prodh,w,c
 20582  00A8A2  6EE2               	movwf	fsr1h,c
 20583  00A8A4  CFDF FFE7          	movff	indf2,indf1
 20584                           
 20585                           ; BSR set to: 1
 20586  00A8A8  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20587  00A8AA                     l2039:
 20588                           
 20589                           ; BSR set to: 1
 20590                           
 20591                           ; BSR set to: 1
 20592  00A8AA  51D2               	movf	__display_time@cntr& (0+255),w,b
 20593  00A8AC  0D01               	mullw	1
 20594  00A8AE  0E14               	movlw	low __display_time@pressminutes
 20595  00A8B0  24F3               	addwf	prodl,w,c
 20596  00A8B2  6ED9               	movwf	fsr2l,c
 20597  00A8B4  0E01               	movlw	high __display_time@pressminutes
 20598  00A8B6  20F4               	addwfc	prodh,w,c
 20599  00A8B8  6EDA               	movwf	fsr2h,c
 20600  00A8BA  50DF               	movf	indf2,w,c
 20601  00A8BC  B4D8               	btfsc	status,2,c
 20602  00A8BE  D09D               	goto	l2013
 20603  00A8C0  D7E1               	goto	l2040
 20604  00A8C2                     
 20605                           ; BSR set to: 1
 20606                           ;display.c: 259: cntr = 0;
 20607                           
 20608                           ; BSR set to: 1
 20609  00A8C2  0E00               	movlw	0
 20610  00A8C4  6FD2               	movwf	__display_time@cntr& (0+255),b
 20611                           
 20612                           ;display.c: 260: while(setminutes[cntr])
 20613  00A8C6  D013               	goto	l2043
 20614  00A8C8                     
 20615                           ; BSR set to: 1
 20616                           ;display.c: 261: display_content[0][cntr] = setminutes[cntr++];
 20617                           
 20618                           ; BSR set to: 1
 20619  00A8C8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20620  00A8CA  0D01               	mullw	1
 20621  00A8CC  0E8E               	movlw	low __display_time@setminutes
 20622  00A8CE  24F3               	addwf	prodl,w,c
 20623  00A8D0  6ED9               	movwf	fsr2l,c
 20624  00A8D2  0E01               	movlw	high __display_time@setminutes
 20625  00A8D4  20F4               	addwfc	prodh,w,c
 20626  00A8D6  6EDA               	movwf	fsr2h,c
 20627  00A8D8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20628  00A8DA  0D01               	mullw	1
 20629  00A8DC  0E54               	movlw	low _display_content
 20630  00A8DE  24F3               	addwf	prodl,w,c
 20631  00A8E0  6EE1               	movwf	fsr1l,c
 20632  00A8E2  0E03               	movlw	high _display_content
 20633  00A8E4  20F4               	addwfc	prodh,w,c
 20634  00A8E6  6EE2               	movwf	fsr1h,c
 20635  00A8E8  CFDF FFE7          	movff	indf2,indf1
 20636                           
 20637                           ; BSR set to: 1
 20638  00A8EC  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20639  00A8EE                     l2043:
 20640                           
 20641                           ; BSR set to: 1
 20642                           
 20643                           ; BSR set to: 1
 20644  00A8EE  51D2               	movf	__display_time@cntr& (0+255),w,b
 20645  00A8F0  0D01               	mullw	1
 20646  00A8F2  0E8E               	movlw	low __display_time@setminutes
 20647  00A8F4  24F3               	addwf	prodl,w,c
 20648  00A8F6  6ED9               	movwf	fsr2l,c
 20649  00A8F8  0E01               	movlw	high __display_time@setminutes
 20650  00A8FA  20F4               	addwfc	prodh,w,c
 20651  00A8FC  6EDA               	movwf	fsr2h,c
 20652  00A8FE  50DF               	movf	indf2,w,c
 20653  00A900  A4D8               	btfss	status,2,c
 20654  00A902  D7E2               	goto	l2044
 20655                           
 20656                           ; BSR set to: 1
 20657                           ;display.c: 262: cntr = 0;
 20658                           
 20659                           ; BSR set to: 1
 20660  00A904  0E00               	movlw	0
 20661  00A906  6FD2               	movwf	__display_time@cntr& (0+255),b
 20662                           
 20663                           ;display.c: 263: while(pressseconds[cntr])
 20664  00A908  D013               	goto	l2046
 20665  00A90A                     
 20666                           ; BSR set to: 1
 20667                           ;display.c: 264: display_content[3][cntr] = pressseconds[cntr++];
 20668                           
 20669                           ; BSR set to: 1
 20670  00A90A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20671  00A90C  0D01               	mullw	1
 20672  00A90E  0E28               	movlw	low __display_time@pressseconds
 20673  00A910  24F3               	addwf	prodl,w,c
 20674  00A912  6ED9               	movwf	fsr2l,c
 20675  00A914  0E01               	movlw	high __display_time@pressseconds
 20676  00A916  20F4               	addwfc	prodh,w,c
 20677  00A918  6EDA               	movwf	fsr2h,c
 20678  00A91A  51D2               	movf	__display_time@cntr& (0+255),w,b
 20679  00A91C  0D01               	mullw	1
 20680  00A91E  0E90               	movlw	low (_display_content+60)
 20681  00A920  24F3               	addwf	prodl,w,c
 20682  00A922  6EE1               	movwf	fsr1l,c
 20683  00A924  0E03               	movlw	high (_display_content+60)
 20684  00A926  20F4               	addwfc	prodh,w,c
 20685  00A928  6EE2               	movwf	fsr1h,c
 20686  00A92A  CFDF FFE7          	movff	indf2,indf1
 20687                           
 20688                           ; BSR set to: 1
 20689  00A92E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20690  00A930                     l2046:
 20691                           
 20692                           ; BSR set to: 1
 20693                           
 20694                           ; BSR set to: 1
 20695  00A930  51D2               	movf	__display_time@cntr& (0+255),w,b
 20696  00A932  0D01               	mullw	1
 20697  00A934  0E28               	movlw	low __display_time@pressseconds
 20698  00A936  24F3               	addwf	prodl,w,c
 20699  00A938  6ED9               	movwf	fsr2l,c
 20700  00A93A  0E01               	movlw	high __display_time@pressseconds
 20701  00A93C  20F4               	addwfc	prodh,w,c
 20702  00A93E  6EDA               	movwf	fsr2h,c
 20703  00A940  50DF               	movf	indf2,w,c
 20704  00A942  B4D8               	btfsc	status,2,c
 20705  00A944  D05A               	goto	l2013
 20706  00A946  D7E1               	goto	l2047
 20707  00A948                     
 20708                           ; BSR set to: 1
 20709                           ;display.c: 268: cntr = 0;
 20710                           
 20711                           ; BSR set to: 1
 20712  00A948  0E00               	movlw	0
 20713  00A94A  6FD2               	movwf	__display_time@cntr& (0+255),b
 20714                           
 20715                           ;display.c: 269: while(setseconds[cntr])
 20716  00A94C  D013               	goto	l2050
 20717  00A94E                     
 20718                           ; BSR set to: 1
 20719                           ;display.c: 270: display_content[0][cntr] = setseconds[cntr++];
 20720                           
 20721                           ; BSR set to: 1
 20722  00A94E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20723  00A950  0D01               	mullw	1
 20724  00A952  0E9A               	movlw	low __display_time@setseconds
 20725  00A954  24F3               	addwf	prodl,w,c
 20726  00A956  6ED9               	movwf	fsr2l,c
 20727  00A958  0E01               	movlw	high __display_time@setseconds
 20728  00A95A  20F4               	addwfc	prodh,w,c
 20729  00A95C  6EDA               	movwf	fsr2h,c
 20730  00A95E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20731  00A960  0D01               	mullw	1
 20732  00A962  0E54               	movlw	low _display_content
 20733  00A964  24F3               	addwf	prodl,w,c
 20734  00A966  6EE1               	movwf	fsr1l,c
 20735  00A968  0E03               	movlw	high _display_content
 20736  00A96A  20F4               	addwfc	prodh,w,c
 20737  00A96C  6EE2               	movwf	fsr1h,c
 20738  00A96E  CFDF FFE7          	movff	indf2,indf1
 20739                           
 20740                           ; BSR set to: 1
 20741  00A972  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20742  00A974                     l2050:
 20743                           
 20744                           ; BSR set to: 1
 20745                           
 20746                           ; BSR set to: 1
 20747  00A974  51D2               	movf	__display_time@cntr& (0+255),w,b
 20748  00A976  0D01               	mullw	1
 20749  00A978  0E9A               	movlw	low __display_time@setseconds
 20750  00A97A  24F3               	addwf	prodl,w,c
 20751  00A97C  6ED9               	movwf	fsr2l,c
 20752  00A97E  0E01               	movlw	high __display_time@setseconds
 20753  00A980  20F4               	addwfc	prodh,w,c
 20754  00A982  6EDA               	movwf	fsr2h,c
 20755  00A984  50DF               	movf	indf2,w,c
 20756  00A986  A4D8               	btfss	status,2,c
 20757  00A988  D7E2               	goto	l2051
 20758                           
 20759                           ; BSR set to: 1
 20760                           ;display.c: 271: cntr = 0;
 20761                           
 20762                           ; BSR set to: 1
 20763  00A98A  0E00               	movlw	0
 20764  00A98C  6FD2               	movwf	__display_time@cntr& (0+255),b
 20765                           
 20766                           ;display.c: 272: while(presssave[cntr])
 20767  00A98E  D013               	goto	l2053
 20768  00A990                     
 20769                           ; BSR set to: 1
 20770                           ;display.c: 273: display_content[3][cntr] = presssave[cntr++];
 20771                           
 20772                           ; BSR set to: 1
 20773  00A990  51D2               	movf	__display_time@cntr& (0+255),w,b
 20774  00A992  0D01               	mullw	1
 20775  00A994  0E70               	movlw	low __display_time@presssave
 20776  00A996  24F3               	addwf	prodl,w,c
 20777  00A998  6ED9               	movwf	fsr2l,c
 20778  00A99A  0E01               	movlw	high __display_time@presssave
 20779  00A99C  20F4               	addwfc	prodh,w,c
 20780  00A99E  6EDA               	movwf	fsr2h,c
 20781  00A9A0  51D2               	movf	__display_time@cntr& (0+255),w,b
 20782  00A9A2  0D01               	mullw	1
 20783  00A9A4  0E90               	movlw	low (_display_content+60)
 20784  00A9A6  24F3               	addwf	prodl,w,c
 20785  00A9A8  6EE1               	movwf	fsr1l,c
 20786  00A9AA  0E03               	movlw	high (_display_content+60)
 20787  00A9AC  20F4               	addwfc	prodh,w,c
 20788  00A9AE  6EE2               	movwf	fsr1h,c
 20789  00A9B0  CFDF FFE7          	movff	indf2,indf1
 20790                           
 20791                           ; BSR set to: 1
 20792  00A9B4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20793  00A9B6                     l2053:
 20794                           
 20795                           ; BSR set to: 1
 20796                           
 20797                           ; BSR set to: 1
 20798  00A9B6  51D2               	movf	__display_time@cntr& (0+255),w,b
 20799  00A9B8  0D01               	mullw	1
 20800  00A9BA  0E70               	movlw	low __display_time@presssave
 20801  00A9BC  24F3               	addwf	prodl,w,c
 20802  00A9BE  6ED9               	movwf	fsr2l,c
 20803  00A9C0  0E01               	movlw	high __display_time@presssave
 20804  00A9C2  20F4               	addwfc	prodh,w,c
 20805  00A9C4  6EDA               	movwf	fsr2h,c
 20806  00A9C6  50DF               	movf	indf2,w,c
 20807  00A9C8  B4D8               	btfsc	status,2,c
 20808  00A9CA  D017               	goto	l2013
 20809  00A9CC  D7E1               	goto	l2054
 20810  00A9CE                     l2005:
 20811                           
 20812                           ; BSR set to: 1
 20813                           
 20814                           ; BSR set to: 1
 20815  00A9CE  51CB               	movf	__display_time@mode& (0+255),w,b
 20816                           
 20817                           ; Switch size 1, requested type "space"
 20818                           ; Number of cases is 7, Range of values is 16 to 22
 20819                           ; switch strategies available:
 20820                           ; Name         Instructions Cycles
 20821                           ; simple_byte           22    12 (average)
 20822                           ;	Chosen strategy is simple_byte
 20823  00A9D0  0A10               	xorlw	16	; case 16
 20824  00A9D2  B4D8               	btfsc	status,2,c
 20825  00A9D4  D627               	goto	l2006
 20826  00A9D6  0A01               	xorlw	1	; case 17
 20827  00A9D8  B4D8               	btfsc	status,2,c
 20828  00A9DA  D667               	goto	l2014
 20829  00A9DC  0A03               	xorlw	3	; case 18
 20830  00A9DE  B4D8               	btfsc	status,2,c
 20831  00A9E0  D6A7               	goto	l2021
 20832  00A9E2  0A01               	xorlw	1	; case 19
 20833  00A9E4  B4D8               	btfsc	status,2,c
 20834  00A9E6  D6E7               	goto	l2028
 20835  00A9E8  0A07               	xorlw	7	; case 20
 20836  00A9EA  B4D8               	btfsc	status,2,c
 20837  00A9EC  D727               	goto	l2035
 20838  00A9EE  0A01               	xorlw	1	; case 21
 20839  00A9F0  B4D8               	btfsc	status,2,c
 20840  00A9F2  D767               	goto	l2042
 20841  00A9F4  0A03               	xorlw	3	; case 22
 20842  00A9F6  B4D8               	btfsc	status,2,c
 20843  00A9F8  D7A7               	goto	l2049
 20844  00A9FA                     l2013:
 20845                           
 20846                           ; BSR set to: 1
 20847                           ;display.c: 278: display_content[1][0] = '2';
 20848                           
 20849                           ; BSR set to: 1
 20850  00A9FA  0E32               	movlw	50
 20851  00A9FC  0103               	movlb	3	; () banked
 20852  00A9FE  6F68               	movwf	(_display_content+20)& (0+255),b
 20853                           
 20854                           ;display.c: 279: display_content[1][1] = '0';
 20855  00AA00  0E30               	movlw	48
 20856  00AA02  6F69               	movwf	(_display_content+21)& (0+255),b
 20857                           
 20858                           ; BSR set to: 3
 20859                           ;display.c: 280: display_content[1][2] = (year>>4) + 48;
 20860  00AA04  0101               	movlb	1	; () banked
 20861  00AA06  39CC               	swapf	__display_time@year& (0+255),w,b
 20862  00AA08  0B0F               	andlw	15
 20863  00AA0A  0F30               	addlw	48
 20864  00AA0C  0103               	movlb	3	; () banked
 20865  00AA0E  6F6A               	movwf	(_display_content+22)& (0+255),b
 20866                           
 20867                           ; BSR set to: 3
 20868                           ;display.c: 281: display_content[1][3] = (year&0x0F) + 48;
 20869  00AA10  0101               	movlb	1	; () banked
 20870  00AA12  51CC               	movf	__display_time@year& (0+255),w,b
 20871  00AA14  0B0F               	andlw	15
 20872  00AA16  0F30               	addlw	48
 20873  00AA18  0103               	movlb	3	; () banked
 20874  00AA1A  6F6B               	movwf	(_display_content+23)& (0+255),b
 20875                           
 20876                           ;display.c: 283: display_content[1][4] = '-';
 20877  00AA1C  0E2D               	movlw	45
 20878  00AA1E  6F6C               	movwf	(_display_content+24)& (0+255),b
 20879                           
 20880                           ; BSR set to: 3
 20881                           ;display.c: 284: display_content[1][5] = (month>>4) + 48;
 20882  00AA20  0101               	movlb	1	; () banked
 20883  00AA22  39CD               	swapf	__display_time@month& (0+255),w,b
 20884  00AA24  0B0F               	andlw	15
 20885  00AA26  0F30               	addlw	48
 20886  00AA28  0103               	movlb	3	; () banked
 20887  00AA2A  6F6D               	movwf	(_display_content+25)& (0+255),b
 20888                           
 20889                           ; BSR set to: 3
 20890                           ;display.c: 285: display_content[1][6] = (month&0x0F) + 48;
 20891  00AA2C  0101               	movlb	1	; () banked
 20892  00AA2E  51CD               	movf	__display_time@month& (0+255),w,b
 20893  00AA30  0B0F               	andlw	15
 20894  00AA32  0F30               	addlw	48
 20895  00AA34  0103               	movlb	3	; () banked
 20896  00AA36  6F6E               	movwf	(_display_content+26)& (0+255),b
 20897                           
 20898                           ;display.c: 287: display_content[1][7] = '-';
 20899  00AA38  0E2D               	movlw	45
 20900  00AA3A  6F6F               	movwf	(_display_content+27)& (0+255),b
 20901                           
 20902                           ; BSR set to: 3
 20903                           ;display.c: 288: display_content[1][8] = (day>>4) + 48;
 20904  00AA3C  0101               	movlb	1	; () banked
 20905  00AA3E  39CE               	swapf	__display_time@day& (0+255),w,b
 20906  00AA40  0B0F               	andlw	15
 20907  00AA42  0F30               	addlw	48
 20908  00AA44  0103               	movlb	3	; () banked
 20909  00AA46  6F70               	movwf	(_display_content+28)& (0+255),b
 20910                           
 20911                           ; BSR set to: 3
 20912                           ;display.c: 289: display_content[1][9] = (day&0x0F) + 48;
 20913  00AA48  0101               	movlb	1	; () banked
 20914  00AA4A  51CE               	movf	__display_time@day& (0+255),w,b
 20915  00AA4C  0B0F               	andlw	15
 20916  00AA4E  0F30               	addlw	48
 20917  00AA50  0103               	movlb	3	; () banked
 20918  00AA52  6F71               	movwf	(_display_content+29)& (0+255),b
 20919                           
 20920                           ; BSR set to: 3
 20921                           ;display.c: 291: display_content[2][0] = (hours>>4) + 48;
 20922  00AA54  0101               	movlb	1	; () banked
 20923  00AA56  39CF               	swapf	__display_time@hours& (0+255),w,b
 20924  00AA58  0B0F               	andlw	15
 20925  00AA5A  0F30               	addlw	48
 20926  00AA5C  0103               	movlb	3	; () banked
 20927  00AA5E  6F7C               	movwf	(_display_content+40)& (0+255),b
 20928                           
 20929                           ; BSR set to: 3
 20930                           ;display.c: 292: display_content[2][1] = (hours&0x0F) + 48;
 20931  00AA60  0101               	movlb	1	; () banked
 20932  00AA62  51CF               	movf	__display_time@hours& (0+255),w,b
 20933  00AA64  0B0F               	andlw	15
 20934  00AA66  0F30               	addlw	48
 20935  00AA68  0103               	movlb	3	; () banked
 20936  00AA6A  6F7D               	movwf	(_display_content+41)& (0+255),b
 20937                           
 20938                           ;display.c: 294: display_content[2][2] = ':';
 20939  00AA6C  0E3A               	movlw	58
 20940  00AA6E  6F7E               	movwf	(_display_content+42)& (0+255),b
 20941                           
 20942                           ; BSR set to: 3
 20943                           ;display.c: 295: display_content[2][3] = (minutes>>4) + 48;
 20944  00AA70  0101               	movlb	1	; () banked
 20945  00AA72  39D0               	swapf	__display_time@minutes& (0+255),w,b
 20946  00AA74  0B0F               	andlw	15
 20947  00AA76  0F30               	addlw	48
 20948  00AA78  0103               	movlb	3	; () banked
 20949  00AA7A  6F7F               	movwf	(_display_content+43)& (0+255),b
 20950                           
 20951                           ; BSR set to: 3
 20952                           ;display.c: 296: display_content[2][4] = (minutes&0x0F) + 48;
 20953  00AA7C  0101               	movlb	1	; () banked
 20954  00AA7E  51D0               	movf	__display_time@minutes& (0+255),w,b
 20955  00AA80  0B0F               	andlw	15
 20956  00AA82  0F30               	addlw	48
 20957  00AA84  0103               	movlb	3	; () banked
 20958  00AA86  6F80               	movwf	(_display_content+44)& (0+255),b
 20959                           
 20960                           ;display.c: 298: display_content[2][5] = ':';
 20961  00AA88  0E3A               	movlw	58
 20962  00AA8A  6F81               	movwf	(_display_content+45)& (0+255),b
 20963                           
 20964                           ; BSR set to: 3
 20965                           ;display.c: 299: display_content[2][6] = (seconds>>4) + 48;
 20966  00AA8C  0101               	movlb	1	; () banked
 20967  00AA8E  39D1               	swapf	__display_time@seconds& (0+255),w,b
 20968  00AA90  0B0F               	andlw	15
 20969  00AA92  0F30               	addlw	48
 20970  00AA94  0103               	movlb	3	; () banked
 20971  00AA96  6F82               	movwf	(_display_content+46)& (0+255),b
 20972                           
 20973                           ; BSR set to: 3
 20974                           ;display.c: 300: display_content[2][7] = (seconds&0x0F) + 48;
 20975  00AA98  0101               	movlb	1	; () banked
 20976  00AA9A  51D1               	movf	__display_time@seconds& (0+255),w,b
 20977  00AA9C  0B0F               	andlw	15
 20978  00AA9E  0F30               	addlw	48
 20979  00AAA0  0103               	movlb	3	; () banked
 20980  00AAA2  6F83               	movwf	(_display_content+47)& (0+255),b
 20981                           
 20982                           ; BSR set to: 3
 20983  00AAA4  0012               	return		;funcret
 20984  00AAA6                     __end_of__display_time:
 20985                           	opt stack 0
 20986                           tblptru	equ	0xFF8
 20987                           tblptrh	equ	0xFF7
 20988                           tblptrl	equ	0xFF6
 20989                           tablat	equ	0xFF5
 20990                           prodh	equ	0xFF4
 20991                           prodl	equ	0xFF3
 20992                           intcon	equ	0xFF2
 20993                           intcon2	equ	0xFF1
 20994                           intcon3	equ	0xFF0
 20995                           postinc0	equ	0xFEE
 20996                           wreg	equ	0xFE8
 20997                           indf1	equ	0xFE7
 20998                           postinc1	equ	0xFE6
 20999                           postdec1	equ	0xFE5
 21000                           plusw1	equ	0xFE3
 21001                           fsr1h	equ	0xFE2
 21002                           fsr1l	equ	0xFE1
 21003                           indf2	equ	0xFDF
 21004                           postinc2	equ	0xFDE
 21005                           postdec2	equ	0xFDD
 21006                           plusw2	equ	0xFDB
 21007                           fsr2h	equ	0xFDA
 21008                           fsr2l	equ	0xFD9
 21009                           status	equ	0xFD8
 21010                           
 21011 ;; *************** function __display_temperature *****************
 21012 ;; Defined at:
 21013 ;;		line 513 in file "display.c"
 21014 ;; Parameters:    Size  Location     Type
 21015 ;;		None
 21016 ;; Auto vars:     Size  Location     Type
 21017 ;;  header         20   48[BANK0 ] const unsigned char [20]
 21018 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 21019 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 21020 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 21021 ;;  cntr            1  103[BANK0 ] unsigned char 
 21022 ;; Return value:  Size  Location     Type
 21023 ;;                  1    wreg      void 
 21024 ;; Registers used:
 21025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21026 ;; Tracked objects:
 21027 ;;		On entry : 0/0
 21028 ;;		On exit  : 0/0
 21029 ;;		Unchanged: 0/0
 21030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21032 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21034 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21035 ;;Total ram usage:       56 bytes
 21036 ;; Hardware stack levels used:    1
 21037 ;; Hardware stack levels required when called:   14
 21038 ;; This function calls:
 21039 ;;		__display_itoa
 21040 ;; This function is called by:
 21041 ;;		_display_prepare
 21042 ;; This function uses a non-reentrant model
 21043 ;;
 21044                           
 21045                           	psect	text101
 21046  00E14E                     __ptext101:
 21047                           	opt stack 0
 21048  00E14E                     __display_temperature:
 21049                           	opt stack 15
 21050                           
 21051                           ;display.c: 515: uint8_t cntr;;display.c: 516: const char header[] = "Temperature Monito
      +                          r";
 21052                           
 21053                           ; BSR set to: 3
 21054                           ;incstack = 0
 21055  00E14E  0EDF               	movlw	low __display_temperature@F7296
 21056  00E150  6EF6               	movwf	tblptrl,c
 21057  00E152                     	if	1	;There is more than 1 active tblptr byte
 21058  00E152  0EA0               	movlw	high __display_temperature@F7296
 21059  00E154  6EF7               	movwf	tblptrh,c
 21060  00E156                     	endif
 21061  00E156                     	if	1	;There are 3 active tblptr bytes
 21062  00E156  0E00               	movlw	low (__display_temperature@F7296 shr (0+16))
 21063  00E158  6EF8               	movwf	tblptru,c
 21064  00E15A                     	endif
 21065  00E15A  EE20  F090         	lfsr	2,__display_temperature@header
 21066  00E15E  0E13               	movlw	19
 21067  00E160                     u21330:
 21068  00E160  0009               	tblrd		*+
 21069  00E162  CFF5 FFDE          	movff	tablat,postinc2
 21070  00E166  06E8               	decf	wreg,f,c
 21071  00E168  E2FB               	bc	u21330
 21072                           
 21073                           ;display.c: 517: const char internal[] = "On-board: ";
 21074  00E16A  0ECF               	movlw	low __display_temperature@F7298
 21075  00E16C  6EF6               	movwf	tblptrl,c
 21076  00E16E                     	if	1	;There is more than 1 active tblptr byte
 21077  00E16E  0EA2               	movlw	high __display_temperature@F7298
 21078  00E170  6EF7               	movwf	tblptrh,c
 21079  00E172                     	endif
 21080  00E172                     	if	1	;There are 3 active tblptr bytes
 21081  00E172  0E00               	movlw	low (__display_temperature@F7298 shr (0+16))
 21082  00E174  6EF8               	movwf	tblptru,c
 21083  00E176                     	endif
 21084  00E176  EE20  F0BC         	lfsr	2,__display_temperature@internal
 21085  00E17A  0E0A               	movlw	10
 21086  00E17C                     u21340:
 21087  00E17C  0009               	tblrd		*+
 21088  00E17E  CFF5 FFDE          	movff	tablat,postinc2
 21089  00E182  06E8               	decf	wreg,f,c
 21090  00E184  E2FB               	bc	u21340
 21091                           
 21092                           ;display.c: 518: const char external1[] = "External 1:";
 21093  00E186  0E9F               	movlw	low __display_temperature@F7300
 21094  00E188  6EF6               	movwf	tblptrl,c
 21095  00E18A                     	if	1	;There is more than 1 active tblptr byte
 21096  00E18A  0EA2               	movlw	high __display_temperature@F7300
 21097  00E18C  6EF7               	movwf	tblptrh,c
 21098  00E18E                     	endif
 21099  00E18E                     	if	1	;There are 3 active tblptr bytes
 21100  00E18E  0E00               	movlw	low (__display_temperature@F7300 shr (0+16))
 21101  00E190  6EF8               	movwf	tblptru,c
 21102  00E192                     	endif
 21103  00E192  EE20  F0A4         	lfsr	2,__display_temperature@external1
 21104  00E196  0E0B               	movlw	11
 21105  00E198                     u21350:
 21106  00E198  0009               	tblrd		*+
 21107  00E19A  CFF5 FFDE          	movff	tablat,postinc2
 21108  00E19E  06E8               	decf	wreg,f,c
 21109  00E1A0  E2FB               	bc	u21350
 21110                           
 21111                           ;display.c: 519: const char external2[] = "External 2:";
 21112  00E1A2  0E93               	movlw	low __display_temperature@F7302
 21113  00E1A4  6EF6               	movwf	tblptrl,c
 21114  00E1A6                     	if	1	;There is more than 1 active tblptr byte
 21115  00E1A6  0EA2               	movlw	high __display_temperature@F7302
 21116  00E1A8  6EF7               	movwf	tblptrh,c
 21117  00E1AA                     	endif
 21118  00E1AA                     	if	1	;There are 3 active tblptr bytes
 21119  00E1AA  0E00               	movlw	low (__display_temperature@F7302 shr (0+16))
 21120  00E1AC  6EF8               	movwf	tblptru,c
 21121  00E1AE                     	endif
 21122  00E1AE  EE20  F0B0         	lfsr	2,__display_temperature@external2
 21123  00E1B2  0E0B               	movlw	11
 21124  00E1B4                     u21360:
 21125  00E1B4  0009               	tblrd		*+
 21126  00E1B6  CFF5 FFDE          	movff	tablat,postinc2
 21127  00E1BA  06E8               	decf	wreg,f,c
 21128  00E1BC  E2FB               	bc	u21360
 21129                           
 21130                           ;display.c: 521: cntr = 0;
 21131  00E1BE  0E00               	movlw	0
 21132  00E1C0  0100               	movlb	0	; () banked
 21133  00E1C2  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21134                           
 21135                           ;display.c: 522: while(header[cntr])
 21136  00E1C4  D013               	goto	l2197
 21137  00E1C6                     
 21138                           ; BSR set to: 0
 21139                           ;display.c: 523: display_content[0][cntr] = header[cntr++];
 21140                           
 21141                           ; BSR set to: 0
 21142  00E1C6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21143  00E1C8  0D01               	mullw	1
 21144  00E1CA  0E90               	movlw	low __display_temperature@header
 21145  00E1CC  24F3               	addwf	prodl,w,c
 21146  00E1CE  6ED9               	movwf	fsr2l,c
 21147  00E1D0  0E00               	movlw	high __display_temperature@header
 21148  00E1D2  20F4               	addwfc	prodh,w,c
 21149  00E1D4  6EDA               	movwf	fsr2h,c
 21150  00E1D6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21151  00E1D8  0D01               	mullw	1
 21152  00E1DA  0E54               	movlw	low _display_content
 21153  00E1DC  24F3               	addwf	prodl,w,c
 21154  00E1DE  6EE1               	movwf	fsr1l,c
 21155  00E1E0  0E03               	movlw	high _display_content
 21156  00E1E2  20F4               	addwfc	prodh,w,c
 21157  00E1E4  6EE2               	movwf	fsr1h,c
 21158  00E1E6  CFDF FFE7          	movff	indf2,indf1
 21159                           
 21160                           ; BSR set to: 0
 21161  00E1EA  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21162  00E1EC                     l2197:
 21163                           
 21164                           ; BSR set to: 0
 21165                           
 21166                           ; BSR set to: 0
 21167  00E1EC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21168  00E1EE  0D01               	mullw	1
 21169  00E1F0  0E90               	movlw	low __display_temperature@header
 21170  00E1F2  24F3               	addwf	prodl,w,c
 21171  00E1F4  6ED9               	movwf	fsr2l,c
 21172  00E1F6  0E00               	movlw	high __display_temperature@header
 21173  00E1F8  20F4               	addwfc	prodh,w,c
 21174  00E1FA  6EDA               	movwf	fsr2h,c
 21175  00E1FC  50DF               	movf	indf2,w,c
 21176  00E1FE  A4D8               	btfss	status,2,c
 21177  00E200  D7E2               	goto	l2198
 21178                           
 21179                           ; BSR set to: 0
 21180                           ;display.c: 525: cntr = 0;
 21181                           
 21182                           ; BSR set to: 0
 21183  00E202  0E00               	movlw	0
 21184  00E204  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21185                           
 21186                           ;display.c: 526: while(internal[cntr])
 21187  00E206  D013               	goto	l2200
 21188  00E208                     
 21189                           ; BSR set to: 0
 21190                           ;display.c: 527: display_content[1][cntr] = internal[cntr++];
 21191                           
 21192                           ; BSR set to: 0
 21193  00E208  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21194  00E20A  0D01               	mullw	1
 21195  00E20C  0EBC               	movlw	low __display_temperature@internal
 21196  00E20E  24F3               	addwf	prodl,w,c
 21197  00E210  6ED9               	movwf	fsr2l,c
 21198  00E212  0E00               	movlw	high __display_temperature@internal
 21199  00E214  20F4               	addwfc	prodh,w,c
 21200  00E216  6EDA               	movwf	fsr2h,c
 21201  00E218  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21202  00E21A  0D01               	mullw	1
 21203  00E21C  0E68               	movlw	low (_display_content+20)
 21204  00E21E  24F3               	addwf	prodl,w,c
 21205  00E220  6EE1               	movwf	fsr1l,c
 21206  00E222  0E03               	movlw	high (_display_content+20)
 21207  00E224  20F4               	addwfc	prodh,w,c
 21208  00E226  6EE2               	movwf	fsr1h,c
 21209  00E228  CFDF FFE7          	movff	indf2,indf1
 21210                           
 21211                           ; BSR set to: 0
 21212  00E22C  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21213  00E22E                     l2200:
 21214                           
 21215                           ; BSR set to: 0
 21216                           
 21217                           ; BSR set to: 0
 21218  00E22E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21219  00E230  0D01               	mullw	1
 21220  00E232  0EBC               	movlw	low __display_temperature@internal
 21221  00E234  24F3               	addwf	prodl,w,c
 21222  00E236  6ED9               	movwf	fsr2l,c
 21223  00E238  0E00               	movlw	high __display_temperature@internal
 21224  00E23A  20F4               	addwfc	prodh,w,c
 21225  00E23C  6EDA               	movwf	fsr2h,c
 21226  00E23E  50DF               	movf	indf2,w,c
 21227  00E240  A4D8               	btfss	status,2,c
 21228  00E242  D7E2               	goto	l2201
 21229                           
 21230                           ; BSR set to: 0
 21231                           ;display.c: 529: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 21232                           
 21233                           ; BSR set to: 0
 21234  00E244  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 21235  00E248  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 21236  00E24C  0E02               	movlw	2
 21237  00E24E  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21238  00E250  0E74               	movlw	low (_display_content+32)
 21239  00E252  6F7B               	movwf	__display_itoa@text& (0+255),b
 21240  00E254  0E03               	movlw	high (_display_content+32)
 21241  00E256  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21242  00E258  ECBE  F06D         	call	__display_itoa	;wreg free
 21243                           
 21244                           ;display.c: 531: cntr = 0;
 21245  00E25C  0E00               	movlw	0
 21246  00E25E  0100               	movlb	0	; () banked
 21247  00E260  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21248                           
 21249                           ;display.c: 532: while(external1[cntr])
 21250  00E262  D013               	goto	l2203
 21251  00E264                     
 21252                           ; BSR set to: 0
 21253                           ;display.c: 533: display_content[2][cntr] = external1[cntr++];
 21254                           
 21255                           ; BSR set to: 0
 21256  00E264  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21257  00E266  0D01               	mullw	1
 21258  00E268  0EA4               	movlw	low __display_temperature@external1
 21259  00E26A  24F3               	addwf	prodl,w,c
 21260  00E26C  6ED9               	movwf	fsr2l,c
 21261  00E26E  0E00               	movlw	high __display_temperature@external1
 21262  00E270  20F4               	addwfc	prodh,w,c
 21263  00E272  6EDA               	movwf	fsr2h,c
 21264  00E274  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21265  00E276  0D01               	mullw	1
 21266  00E278  0E7C               	movlw	low (_display_content+40)
 21267  00E27A  24F3               	addwf	prodl,w,c
 21268  00E27C  6EE1               	movwf	fsr1l,c
 21269  00E27E  0E03               	movlw	high (_display_content+40)
 21270  00E280  20F4               	addwfc	prodh,w,c
 21271  00E282  6EE2               	movwf	fsr1h,c
 21272  00E284  CFDF FFE7          	movff	indf2,indf1
 21273                           
 21274                           ; BSR set to: 0
 21275  00E288  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21276  00E28A                     l2203:
 21277                           
 21278                           ; BSR set to: 0
 21279                           
 21280                           ; BSR set to: 0
 21281  00E28A  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21282  00E28C  0D01               	mullw	1
 21283  00E28E  0EA4               	movlw	low __display_temperature@external1
 21284  00E290  24F3               	addwf	prodl,w,c
 21285  00E292  6ED9               	movwf	fsr2l,c
 21286  00E294  0E00               	movlw	high __display_temperature@external1
 21287  00E296  20F4               	addwfc	prodh,w,c
 21288  00E298  6EDA               	movwf	fsr2h,c
 21289  00E29A  50DF               	movf	indf2,w,c
 21290  00E29C  A4D8               	btfss	status,2,c
 21291  00E29E  D7E2               	goto	l2204
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;display.c: 535: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 21295                           
 21296                           ; BSR set to: 0
 21297  00E2A0  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 21298  00E2A4  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 21299  00E2A8  0E02               	movlw	2
 21300  00E2AA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21301  00E2AC  0E88               	movlw	low (_display_content+52)
 21302  00E2AE  6F7B               	movwf	__display_itoa@text& (0+255),b
 21303  00E2B0  0E03               	movlw	high (_display_content+52)
 21304  00E2B2  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21305  00E2B4  ECBE  F06D         	call	__display_itoa	;wreg free
 21306                           
 21307                           ;display.c: 537: cntr = 0;
 21308  00E2B8  0E00               	movlw	0
 21309  00E2BA  0100               	movlb	0	; () banked
 21310  00E2BC  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21311                           
 21312                           ;display.c: 538: while(external2[cntr])
 21313  00E2BE  D013               	goto	l2206
 21314  00E2C0                     
 21315                           ; BSR set to: 0
 21316                           ;display.c: 539: display_content[3][cntr] = external2[cntr++];
 21317                           
 21318                           ; BSR set to: 0
 21319  00E2C0  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21320  00E2C2  0D01               	mullw	1
 21321  00E2C4  0EB0               	movlw	low __display_temperature@external2
 21322  00E2C6  24F3               	addwf	prodl,w,c
 21323  00E2C8  6ED9               	movwf	fsr2l,c
 21324  00E2CA  0E00               	movlw	high __display_temperature@external2
 21325  00E2CC  20F4               	addwfc	prodh,w,c
 21326  00E2CE  6EDA               	movwf	fsr2h,c
 21327  00E2D0  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21328  00E2D2  0D01               	mullw	1
 21329  00E2D4  0E90               	movlw	low (_display_content+60)
 21330  00E2D6  24F3               	addwf	prodl,w,c
 21331  00E2D8  6EE1               	movwf	fsr1l,c
 21332  00E2DA  0E03               	movlw	high (_display_content+60)
 21333  00E2DC  20F4               	addwfc	prodh,w,c
 21334  00E2DE  6EE2               	movwf	fsr1h,c
 21335  00E2E0  CFDF FFE7          	movff	indf2,indf1
 21336                           
 21337                           ; BSR set to: 0
 21338  00E2E4  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21339  00E2E6                     l2206:
 21340                           
 21341                           ; BSR set to: 0
 21342                           
 21343                           ; BSR set to: 0
 21344  00E2E6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21345  00E2E8  0D01               	mullw	1
 21346  00E2EA  0EB0               	movlw	low __display_temperature@external2
 21347  00E2EC  24F3               	addwf	prodl,w,c
 21348  00E2EE  6ED9               	movwf	fsr2l,c
 21349  00E2F0  0E00               	movlw	high __display_temperature@external2
 21350  00E2F2  20F4               	addwfc	prodh,w,c
 21351  00E2F4  6EDA               	movwf	fsr2h,c
 21352  00E2F6  50DF               	movf	indf2,w,c
 21353  00E2F8  A4D8               	btfss	status,2,c
 21354  00E2FA  D7E2               	goto	l2207
 21355                           
 21356                           ; BSR set to: 0
 21357                           ;display.c: 541: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 21358                           
 21359                           ; BSR set to: 0
 21360  00E2FC  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 21361  00E300  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 21362  00E304  0E02               	movlw	2
 21363  00E306  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21364  00E308  0E9C               	movlw	low (_display_content+72)
 21365  00E30A  6F7B               	movwf	__display_itoa@text& (0+255),b
 21366  00E30C  0E03               	movlw	high (_display_content+72)
 21367  00E30E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21368  00E310  ECBE  F06D         	call	__display_itoa	;wreg free
 21369  00E314  0012               	return		;funcret
 21370  00E316                     __end_of__display_temperature:
 21371                           	opt stack 0
 21372                           tblptru	equ	0xFF8
 21373                           tblptrh	equ	0xFF7
 21374                           tblptrl	equ	0xFF6
 21375                           tablat	equ	0xFF5
 21376                           prodh	equ	0xFF4
 21377                           prodl	equ	0xFF3
 21378                           intcon	equ	0xFF2
 21379                           intcon2	equ	0xFF1
 21380                           intcon3	equ	0xFF0
 21381                           postinc0	equ	0xFEE
 21382                           wreg	equ	0xFE8
 21383                           indf1	equ	0xFE7
 21384                           postinc1	equ	0xFE6
 21385                           postdec1	equ	0xFE5
 21386                           plusw1	equ	0xFE3
 21387                           fsr1h	equ	0xFE2
 21388                           fsr1l	equ	0xFE1
 21389                           indf2	equ	0xFDF
 21390                           postinc2	equ	0xFDE
 21391                           postdec2	equ	0xFDD
 21392                           plusw2	equ	0xFDB
 21393                           fsr2h	equ	0xFDA
 21394                           fsr2l	equ	0xFD9
 21395                           status	equ	0xFD8
 21396                           
 21397 ;; *************** function __display_outputs *****************
 21398 ;; Defined at:
 21399 ;;		line 336 in file "display.c"
 21400 ;; Parameters:    Size  Location     Type
 21401 ;;  mode            1    wreg     unsigned char 
 21402 ;; Auto vars:     Size  Location     Type
 21403 ;;  mode            1   72[BANK0 ] unsigned char 
 21404 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 21405 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 21406 ;;  low            16   42[BANK0 ] const unsigned char [16]
 21407 ;;  header         14   58[BANK0 ] const unsigned char [14]
 21408 ;;  cntr            1   73[BANK0 ] unsigned char 
 21409 ;; Return value:  Size  Location     Type
 21410 ;;                  1    wreg      void 
 21411 ;; Registers used:
 21412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21413 ;; Tracked objects:
 21414 ;;		On entry : 0/0
 21415 ;;		On exit  : 0/0
 21416 ;;		Unchanged: 0/0
 21417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21419 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21421 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21422 ;;Total ram usage:       74 bytes
 21423 ;; Hardware stack levels used:    1
 21424 ;; Hardware stack levels required when called:   10
 21425 ;; This function calls:
 21426 ;;		Nothing
 21427 ;; This function is called by:
 21428 ;;		_display_prepare
 21429 ;; This function uses a non-reentrant model
 21430 ;;
 21431                           
 21432                           	psect	text102
 21433  00D95A                     __ptext102:
 21434                           	opt stack 0
 21435  00D95A                     __display_outputs:
 21436                           	opt stack 19
 21437                           
 21438                           ;incstack = 0
 21439                           ;__display_outputs@mode stored from wreg
 21440  00D95A  0100               	movlb	0	; () banked
 21441  00D95C  6FA8               	movwf	__display_outputs@mode& (0+255),b
 21442                           
 21443                           ;display.c: 338: uint8_t cntr;;display.c: 339: const char header[] = "Power Outputs";
 21444  00D95E  0E69               	movlw	low __display_outputs@F7245
 21445  00D960  6EF6               	movwf	tblptrl,c
 21446  00D962                     	if	1	;There is more than 1 active tblptr byte
 21447  00D962  0EA2               	movlw	high __display_outputs@F7245
 21448  00D964  6EF7               	movwf	tblptrh,c
 21449  00D966                     	endif
 21450  00D966                     	if	1	;There are 3 active tblptr bytes
 21451  00D966  0E00               	movlw	low (__display_outputs@F7245 shr (0+16))
 21452  00D968  6EF8               	movwf	tblptru,c
 21453  00D96A                     	endif
 21454  00D96A  EE20  F09A         	lfsr	2,__display_outputs@header
 21455  00D96E  0E0D               	movlw	13
 21456  00D970                     u20970:
 21457  00D970  0009               	tblrd		*+
 21458  00D972  CFF5 FFDE          	movff	tablat,postinc2
 21459  00D976  06E8               	decf	wreg,f,c
 21460  00D978  E2FB               	bc	u20970
 21461                           
 21462                           ;display.c: 340: const char low[] = "Battery too low";
 21463  00D97A  0E0B               	movlw	low __display_outputs@F7247
 21464  00D97C  6EF6               	movwf	tblptrl,c
 21465  00D97E                     	if	1	;There is more than 1 active tblptr byte
 21466  00D97E  0EA2               	movlw	high __display_outputs@F7247
 21467  00D980  6EF7               	movwf	tblptrh,c
 21468  00D982                     	endif
 21469  00D982                     	if	1	;There are 3 active tblptr bytes
 21470  00D982  0E00               	movlw	low (__display_outputs@F7247 shr (0+16))
 21471  00D984  6EF8               	movwf	tblptru,c
 21472  00D986                     	endif
 21473  00D986  EE20  F08A         	lfsr	2,__display_outputs@low
 21474  00D98A  0E0F               	movlw	15
 21475  00D98C                     u20980:
 21476  00D98C  0009               	tblrd		*+
 21477  00D98E  CFF5 FFDE          	movff	tablat,postinc2
 21478  00D992  06E8               	decf	wreg,f,c
 21479  00D994  E2FB               	bc	u20980
 21480                           
 21481                           ;display.c: 341: const char line3[] = "  Out1 off  Out2 off";
 21482  00D996  0ECA               	movlw	low __display_outputs@F7249
 21483  00D998  6EF6               	movwf	tblptrl,c
 21484  00D99A                     	if	1	;There is more than 1 active tblptr byte
 21485  00D99A  0EA0               	movlw	high __display_outputs@F7249
 21486  00D99C  6EF7               	movwf	tblptrh,c
 21487  00D99E                     	endif
 21488  00D99E                     	if	1	;There are 3 active tblptr bytes
 21489  00D99E  0E00               	movlw	low (__display_outputs@F7249 shr (0+16))
 21490  00D9A0  6EF8               	movwf	tblptru,c
 21491  00D9A2                     	endif
 21492  00D9A2  EE20  F060         	lfsr	2,__display_outputs@line3
 21493  00D9A6  0E14               	movlw	20
 21494  00D9A8                     u20990:
 21495  00D9A8  0009               	tblrd		*+
 21496  00D9AA  CFF5 FFDE          	movff	tablat,postinc2
 21497  00D9AE  06E8               	decf	wreg,f,c
 21498  00D9B0  E2FB               	bc	u20990
 21499                           
 21500                           ;display.c: 342: const char line4[] = "  Out3 off  Out4 off";
 21501  00D9B2  0EB5               	movlw	low __display_outputs@F7251
 21502  00D9B4  6EF6               	movwf	tblptrl,c
 21503  00D9B6                     	if	1	;There is more than 1 active tblptr byte
 21504  00D9B6  0EA0               	movlw	high __display_outputs@F7251
 21505  00D9B8  6EF7               	movwf	tblptrh,c
 21506  00D9BA                     	endif
 21507  00D9BA                     	if	1	;There are 3 active tblptr bytes
 21508  00D9BA  0E00               	movlw	low (__display_outputs@F7251 shr (0+16))
 21509  00D9BC  6EF8               	movwf	tblptru,c
 21510  00D9BE                     	endif
 21511  00D9BE  EE20  F075         	lfsr	2,__display_outputs@line4
 21512  00D9C2  0E14               	movlw	20
 21513  00D9C4                     u21000:
 21514  00D9C4  0009               	tblrd		*+
 21515  00D9C6  CFF5 FFDE          	movff	tablat,postinc2
 21516  00D9CA  06E8               	decf	wreg,f,c
 21517  00D9CC  E2FB               	bc	u21000
 21518                           
 21519                           ;display.c: 344: cntr = 0;
 21520  00D9CE  0E00               	movlw	0
 21521  00D9D0  0100               	movlb	0	; () banked
 21522  00D9D2  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21523                           
 21524                           ;display.c: 345: while(header[cntr])
 21525  00D9D4  D013               	goto	l2093
 21526  00D9D6                     
 21527                           ; BSR set to: 0
 21528                           ;display.c: 346: display_content[0][cntr] = header[cntr++];
 21529                           
 21530                           ; BSR set to: 0
 21531  00D9D6  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21532  00D9D8  0D01               	mullw	1
 21533  00D9DA  0E9A               	movlw	low __display_outputs@header
 21534  00D9DC  24F3               	addwf	prodl,w,c
 21535  00D9DE  6ED9               	movwf	fsr2l,c
 21536  00D9E0  0E00               	movlw	high __display_outputs@header
 21537  00D9E2  20F4               	addwfc	prodh,w,c
 21538  00D9E4  6EDA               	movwf	fsr2h,c
 21539  00D9E6  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21540  00D9E8  0D01               	mullw	1
 21541  00D9EA  0E54               	movlw	low _display_content
 21542  00D9EC  24F3               	addwf	prodl,w,c
 21543  00D9EE  6EE1               	movwf	fsr1l,c
 21544  00D9F0  0E03               	movlw	high _display_content
 21545  00D9F2  20F4               	addwfc	prodh,w,c
 21546  00D9F4  6EE2               	movwf	fsr1h,c
 21547  00D9F6  CFDF FFE7          	movff	indf2,indf1
 21548                           
 21549                           ; BSR set to: 0
 21550  00D9FA  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21551  00D9FC                     l2093:
 21552                           
 21553                           ; BSR set to: 0
 21554                           
 21555                           ; BSR set to: 0
 21556  00D9FC  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21557  00D9FE  0D01               	mullw	1
 21558  00DA00  0E9A               	movlw	low __display_outputs@header
 21559  00DA02  24F3               	addwf	prodl,w,c
 21560  00DA04  6ED9               	movwf	fsr2l,c
 21561  00DA06  0E00               	movlw	high __display_outputs@header
 21562  00DA08  20F4               	addwfc	prodh,w,c
 21563  00DA0A  6EDA               	movwf	fsr2h,c
 21564  00DA0C  50DF               	movf	indf2,w,c
 21565  00DA0E  A4D8               	btfss	status,2,c
 21566  00DA10  D7E2               	goto	l2094
 21567                           
 21568                           ; BSR set to: 0
 21569                           ;display.c: 348: if(os.output_voltage<-1)
 21570                           
 21571                           ; BSR set to: 0
 21572  00DA12  0102               	movlb	2	; () banked
 21573  00DA14  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 21574  00DA16  D027               	goto	u21030
 21575  00DA18  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 21576  00DA1A  0EFF               	movlw	255
 21577  00DA1C  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 21578  00DA1E  B0D8               	btfsc	status,0,c
 21579  00DA20  D022               	goto	u21030
 21580                           
 21581                           ; BSR set to: 2
 21582                           ;display.c: 349: {;display.c: 350: cntr = 0;
 21583  00DA22  0E00               	movlw	0
 21584  00DA24  0100               	movlb	0	; () banked
 21585  00DA26  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21586                           
 21587                           ;display.c: 351: while(low[cntr])
 21588  00DA28  D013               	goto	l2097
 21589  00DA2A                     
 21590                           ; BSR set to: 0
 21591                           ;display.c: 352: display_content[1][cntr] = low[cntr++];
 21592                           
 21593                           ; BSR set to: 0
 21594  00DA2A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21595  00DA2C  0D01               	mullw	1
 21596  00DA2E  0E8A               	movlw	low __display_outputs@low
 21597  00DA30  24F3               	addwf	prodl,w,c
 21598  00DA32  6ED9               	movwf	fsr2l,c
 21599  00DA34  0E00               	movlw	high __display_outputs@low
 21600  00DA36  20F4               	addwfc	prodh,w,c
 21601  00DA38  6EDA               	movwf	fsr2h,c
 21602  00DA3A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21603  00DA3C  0D01               	mullw	1
 21604  00DA3E  0E68               	movlw	low (_display_content+20)
 21605  00DA40  24F3               	addwf	prodl,w,c
 21606  00DA42  6EE1               	movwf	fsr1l,c
 21607  00DA44  0E03               	movlw	high (_display_content+20)
 21608  00DA46  20F4               	addwfc	prodh,w,c
 21609  00DA48  6EE2               	movwf	fsr1h,c
 21610  00DA4A  CFDF FFE7          	movff	indf2,indf1
 21611                           
 21612                           ; BSR set to: 0
 21613  00DA4E  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21614  00DA50                     l2097:
 21615                           
 21616                           ; BSR set to: 0
 21617                           
 21618                           ; BSR set to: 0
 21619  00DA50  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21620  00DA52  0D01               	mullw	1
 21621  00DA54  0E8A               	movlw	low __display_outputs@low
 21622  00DA56  24F3               	addwf	prodl,w,c
 21623  00DA58  6ED9               	movwf	fsr2l,c
 21624  00DA5A  0E00               	movlw	high __display_outputs@low
 21625  00DA5C  20F4               	addwfc	prodh,w,c
 21626  00DA5E  6EDA               	movwf	fsr2h,c
 21627  00DA60  50DF               	movf	indf2,w,c
 21628  00DA62  A4D8               	btfss	status,2,c
 21629  00DA64  D7E2               	goto	l2098
 21630  00DA66                     u21030:
 21631                           
 21632                           ;display.c: 353: };display.c: 355: cntr = 0;
 21633                           
 21634                           ; BSR set to: 0
 21635                           
 21636                           ; BSR set to: 0
 21637  00DA66  0E00               	movlw	0
 21638  00DA68  0100               	movlb	0	; () banked
 21639  00DA6A  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21640                           
 21641                           ;display.c: 356: while(line3[cntr])
 21642  00DA6C  D013               	goto	l2100
 21643  00DA6E                     
 21644                           ; BSR set to: 0
 21645                           ;display.c: 357: display_content[2][cntr] = line3[cntr++];
 21646                           
 21647                           ; BSR set to: 0
 21648  00DA6E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21649  00DA70  0D01               	mullw	1
 21650  00DA72  0E60               	movlw	low __display_outputs@line3
 21651  00DA74  24F3               	addwf	prodl,w,c
 21652  00DA76  6ED9               	movwf	fsr2l,c
 21653  00DA78  0E00               	movlw	high __display_outputs@line3
 21654  00DA7A  20F4               	addwfc	prodh,w,c
 21655  00DA7C  6EDA               	movwf	fsr2h,c
 21656  00DA7E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21657  00DA80  0D01               	mullw	1
 21658  00DA82  0E7C               	movlw	low (_display_content+40)
 21659  00DA84  24F3               	addwf	prodl,w,c
 21660  00DA86  6EE1               	movwf	fsr1l,c
 21661  00DA88  0E03               	movlw	high (_display_content+40)
 21662  00DA8A  20F4               	addwfc	prodh,w,c
 21663  00DA8C  6EE2               	movwf	fsr1h,c
 21664  00DA8E  CFDF FFE7          	movff	indf2,indf1
 21665                           
 21666                           ; BSR set to: 0
 21667  00DA92  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21668  00DA94                     l2100:
 21669                           
 21670                           ; BSR set to: 0
 21671                           
 21672                           ; BSR set to: 0
 21673  00DA94  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21674  00DA96  0D01               	mullw	1
 21675  00DA98  0E60               	movlw	low __display_outputs@line3
 21676  00DA9A  24F3               	addwf	prodl,w,c
 21677  00DA9C  6ED9               	movwf	fsr2l,c
 21678  00DA9E  0E00               	movlw	high __display_outputs@line3
 21679  00DAA0  20F4               	addwfc	prodh,w,c
 21680  00DAA2  6EDA               	movwf	fsr2h,c
 21681  00DAA4  50DF               	movf	indf2,w,c
 21682  00DAA6  A4D8               	btfss	status,2,c
 21683  00DAA8  D7E2               	goto	l2101
 21684                           
 21685                           ; BSR set to: 0
 21686                           ;display.c: 359: cntr = 0;
 21687                           
 21688                           ; BSR set to: 0
 21689  00DAAA  0E00               	movlw	0
 21690  00DAAC  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 21691                           
 21692                           ;display.c: 360: while(line4[cntr])
 21693  00DAAE  D013               	goto	l2103
 21694  00DAB0                     
 21695                           ; BSR set to: 0
 21696                           ;display.c: 361: display_content[3][cntr] = line4[cntr++];
 21697                           
 21698                           ; BSR set to: 0
 21699  00DAB0  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21700  00DAB2  0D01               	mullw	1
 21701  00DAB4  0E75               	movlw	low __display_outputs@line4
 21702  00DAB6  24F3               	addwf	prodl,w,c
 21703  00DAB8  6ED9               	movwf	fsr2l,c
 21704  00DABA  0E00               	movlw	high __display_outputs@line4
 21705  00DABC  20F4               	addwfc	prodh,w,c
 21706  00DABE  6EDA               	movwf	fsr2h,c
 21707  00DAC0  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21708  00DAC2  0D01               	mullw	1
 21709  00DAC4  0E90               	movlw	low (_display_content+60)
 21710  00DAC6  24F3               	addwf	prodl,w,c
 21711  00DAC8  6EE1               	movwf	fsr1l,c
 21712  00DACA  0E03               	movlw	high (_display_content+60)
 21713  00DACC  20F4               	addwfc	prodh,w,c
 21714  00DACE  6EE2               	movwf	fsr1h,c
 21715  00DAD0  CFDF FFE7          	movff	indf2,indf1
 21716                           
 21717                           ; BSR set to: 0
 21718  00DAD4  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 21719  00DAD6                     l2103:
 21720                           
 21721                           ; BSR set to: 0
 21722                           
 21723                           ; BSR set to: 0
 21724  00DAD6  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 21725  00DAD8  0D01               	mullw	1
 21726  00DADA  0E75               	movlw	low __display_outputs@line4
 21727  00DADC  24F3               	addwf	prodl,w,c
 21728  00DADE  6ED9               	movwf	fsr2l,c
 21729  00DAE0  0E00               	movlw	high __display_outputs@line4
 21730  00DAE2  20F4               	addwfc	prodh,w,c
 21731  00DAE4  6EDA               	movwf	fsr2h,c
 21732  00DAE6  50DF               	movf	indf2,w,c
 21733  00DAE8  A4D8               	btfss	status,2,c
 21734  00DAEA  D7E2               	goto	l2104
 21735                           
 21736                           ; BSR set to: 0
 21737                           ;display.c: 363: if(os.outputs & OUTPUT_1)
 21738  00DAEC  0102               	movlb	2	; () banked
 21739  00DAEE  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 21740  00DAF0  D005               	goto	l2106
 21741                           
 21742                           ; BSR set to: 2
 21743                           ;display.c: 364: {;display.c: 365: display_content[2][8] = 'n';
 21744  00DAF2  0E6E               	movlw	110
 21745  00DAF4  0103               	movlb	3	; () banked
 21746  00DAF6  6F84               	movwf	(_display_content+48)& (0+255),b
 21747                           
 21748                           ;display.c: 366: display_content[2][9] = ' ';
 21749  00DAF8  0E20               	movlw	32
 21750  00DAFA  6F85               	movwf	(_display_content+49)& (0+255),b
 21751  00DAFC                     l2106:
 21752                           
 21753                           ;display.c: 367: };display.c: 368: if(os.outputs & OUTPUT_2)
 21754                           
 21755                           ; BSR set to: 3
 21756  00DAFC  0102               	movlb	2	; () banked
 21757  00DAFE  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 21758  00DB00  D005               	goto	l2107
 21759                           
 21760                           ; BSR set to: 2
 21761                           ;display.c: 369: {;display.c: 370: display_content[2][18] = 'n';
 21762  00DB02  0E6E               	movlw	110
 21763  00DB04  0103               	movlb	3	; () banked
 21764  00DB06  6F8E               	movwf	(_display_content+58)& (0+255),b
 21765                           
 21766                           ;display.c: 371: display_content[2][19] = ' ';
 21767  00DB08  0E20               	movlw	32
 21768  00DB0A  6F8F               	movwf	(_display_content+59)& (0+255),b
 21769  00DB0C                     l2107:
 21770                           
 21771                           ;display.c: 372: };display.c: 373: if(os.outputs & OUTPUT_3)
 21772                           
 21773                           ; BSR set to: 3
 21774  00DB0C  0102               	movlb	2	; () banked
 21775  00DB0E  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 21776  00DB10  D005               	goto	l2108
 21777                           
 21778                           ; BSR set to: 2
 21779                           ;display.c: 374: {;display.c: 375: display_content[3][8] = 'n';
 21780  00DB12  0E6E               	movlw	110
 21781  00DB14  0103               	movlb	3	; () banked
 21782  00DB16  6F98               	movwf	(_display_content+68)& (0+255),b
 21783                           
 21784                           ;display.c: 376: display_content[3][9] = ' ';
 21785  00DB18  0E20               	movlw	32
 21786  00DB1A  6F99               	movwf	(_display_content+69)& (0+255),b
 21787  00DB1C                     l2108:
 21788                           
 21789                           ;display.c: 377: };display.c: 378: if(os.outputs & OUTPUT_4)
 21790                           
 21791                           ; BSR set to: 3
 21792  00DB1C  0102               	movlb	2	; () banked
 21793  00DB1E  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 21794  00DB20  D01E               	goto	l2110
 21795                           
 21796                           ; BSR set to: 2
 21797                           ;display.c: 379: {;display.c: 380: display_content[3][18] = 'n';
 21798  00DB22  0E6E               	movlw	110
 21799  00DB24  0103               	movlb	3	; () banked
 21800  00DB26  6FA2               	movwf	(_display_content+78)& (0+255),b
 21801                           
 21802                           ;display.c: 381: display_content[3][19] = ' ';
 21803  00DB28  0E20               	movlw	32
 21804  00DB2A  6FA3               	movwf	(_display_content+79)& (0+255),b
 21805                           
 21806                           ; BSR set to: 3
 21807                           ;display.c: 382: };display.c: 384: switch(mode)
 21808  00DB2C  D018               	goto	l2110
 21809  00DB2E                     
 21810                           ;display.c: 387: display_content[2][0] = '-';
 21811                           
 21812                           ; BSR set to: 3
 21813  00DB2E  0E2D               	movlw	45
 21814  00DB30  0103               	movlb	3	; () banked
 21815  00DB32  6F7C               	movwf	(_display_content+40)& (0+255),b
 21816                           
 21817                           ;display.c: 388: display_content[2][1] = '>';
 21818  00DB34  0E3E               	movlw	62
 21819  00DB36  6F7D               	movwf	(_display_content+41)& (0+255),b
 21820                           
 21821                           ;display.c: 389: break;
 21822  00DB38  0012               	return	
 21823  00DB3A                     
 21824                           ;display.c: 391: display_content[2][10] = '-';
 21825                           
 21826                           ; BSR set to: 3
 21827  00DB3A  0E2D               	movlw	45
 21828  00DB3C  0103               	movlb	3	; () banked
 21829  00DB3E  6F86               	movwf	(_display_content+50)& (0+255),b
 21830                           
 21831                           ;display.c: 392: display_content[2][11] = '>';
 21832  00DB40  0E3E               	movlw	62
 21833  00DB42  6F87               	movwf	(_display_content+51)& (0+255),b
 21834                           
 21835                           ;display.c: 393: break;
 21836  00DB44  0012               	return	
 21837  00DB46                     
 21838                           ;display.c: 395: display_content[3][0] = '-';
 21839                           
 21840                           ; BSR set to: 3
 21841  00DB46  0E2D               	movlw	45
 21842  00DB48  0103               	movlb	3	; () banked
 21843  00DB4A  6F90               	movwf	(_display_content+60)& (0+255),b
 21844                           
 21845                           ;display.c: 396: display_content[3][1] = '>';
 21846  00DB4C  0E3E               	movlw	62
 21847  00DB4E  6F91               	movwf	(_display_content+61)& (0+255),b
 21848                           
 21849                           ;display.c: 397: break;
 21850  00DB50  0012               	return	
 21851  00DB52                     
 21852                           ;display.c: 399: display_content[3][10] = '-';
 21853                           
 21854                           ; BSR set to: 3
 21855  00DB52  0E2D               	movlw	45
 21856  00DB54  0103               	movlb	3	; () banked
 21857  00DB56  6F9A               	movwf	(_display_content+70)& (0+255),b
 21858                           
 21859                           ;display.c: 400: display_content[3][11] = '>';
 21860  00DB58  0E3E               	movlw	62
 21861  00DB5A  6F9B               	movwf	(_display_content+71)& (0+255),b
 21862                           
 21863                           ; BSR set to: 3
 21864                           ;display.c: 402: }
 21865                           
 21866                           ;display.c: 401: break;
 21867  00DB5C  0012               	return	
 21868  00DB5E                     l2110:
 21869                           
 21870                           ; BSR set to: 3
 21871  00DB5E  0100               	movlb	0	; () banked
 21872  00DB60  51A8               	movf	__display_outputs@mode& (0+255),w,b
 21873                           
 21874                           ; Switch size 1, requested type "space"
 21875                           ; Number of cases is 4, Range of values is 49 to 52
 21876                           ; switch strategies available:
 21877                           ; Name         Instructions Cycles
 21878                           ; simple_byte           13     7 (average)
 21879                           ;	Chosen strategy is simple_byte
 21880  00DB62  0A31               	xorlw	49	; case 49
 21881  00DB64  B4D8               	btfsc	status,2,c
 21882  00DB66  D7E3               	goto	l2111
 21883  00DB68  0A03               	xorlw	3	; case 50
 21884  00DB6A  B4D8               	btfsc	status,2,c
 21885  00DB6C  D7E6               	goto	l2113
 21886  00DB6E  0A01               	xorlw	1	; case 51
 21887  00DB70  B4D8               	btfsc	status,2,c
 21888  00DB72  D7E9               	goto	l2114
 21889  00DB74  0A07               	xorlw	7	; case 52
 21890  00DB76  A4D8               	btfss	status,2,c
 21891  00DB78  0012               	return	
 21892  00DB7A  D7EB               	goto	l2115
 21893  00DB7C                     __end_of__display_outputs:
 21894                           	opt stack 0
 21895                           tblptru	equ	0xFF8
 21896                           tblptrh	equ	0xFF7
 21897                           tblptrl	equ	0xFF6
 21898                           tablat	equ	0xFF5
 21899                           prodh	equ	0xFF4
 21900                           prodl	equ	0xFF3
 21901                           intcon	equ	0xFF2
 21902                           intcon2	equ	0xFF1
 21903                           intcon3	equ	0xFF0
 21904                           postinc0	equ	0xFEE
 21905                           wreg	equ	0xFE8
 21906                           indf1	equ	0xFE7
 21907                           postinc1	equ	0xFE6
 21908                           postdec1	equ	0xFE5
 21909                           plusw1	equ	0xFE3
 21910                           fsr1h	equ	0xFE2
 21911                           fsr1l	equ	0xFE1
 21912                           indf2	equ	0xFDF
 21913                           postinc2	equ	0xFDE
 21914                           postdec2	equ	0xFDD
 21915                           plusw2	equ	0xFDB
 21916                           fsr2h	equ	0xFDA
 21917                           fsr2l	equ	0xFD9
 21918                           status	equ	0xFD8
 21919                           
 21920 ;; *************** function __display_inout *****************
 21921 ;; Defined at:
 21922 ;;		line 141 in file "display.c"
 21923 ;; Parameters:    Size  Location     Type
 21924 ;;		None
 21925 ;; Auto vars:     Size  Location     Type
 21926 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 21927 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 21928 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 21929 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 21930 ;;  cntr            1  101[BANK0 ] unsigned char 
 21931 ;; Return value:  Size  Location     Type
 21932 ;;                  1    wreg      void 
 21933 ;; Registers used:
 21934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21935 ;; Tracked objects:
 21936 ;;		On entry : 0/0
 21937 ;;		On exit  : 0/0
 21938 ;;		Unchanged: 0/0
 21939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21941 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21943 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21944 ;;Total ram usage:       54 bytes
 21945 ;; Hardware stack levels used:    1
 21946 ;; Hardware stack levels required when called:   14
 21947 ;; This function calls:
 21948 ;;		__display_itoa
 21949 ;;		_buck_get_mode
 21950 ;; This function is called by:
 21951 ;;		_display_prepare
 21952 ;; This function uses a non-reentrant model
 21953 ;;
 21954                           
 21955                           	psect	text103
 21956  00DD82                     __ptext103:
 21957                           	opt stack 0
 21958  00DD82                     __display_inout:
 21959                           	opt stack 15
 21960                           
 21961                           ;display.c: 143: uint8_t cntr;;display.c: 144: const char line1[] = "Voltage & Current";
 21962                           
 21963                           ;incstack = 0
 21964  00DD82  0ED8               	movlw	low __display_inout@F7188
 21965  00DD84  6EF6               	movwf	tblptrl,c
 21966  00DD86                     	if	1	;There is more than 1 active tblptr byte
 21967  00DD86  0EA1               	movlw	high __display_inout@F7188
 21968  00DD88  6EF7               	movwf	tblptrh,c
 21969  00DD8A                     	endif
 21970  00DD8A                     	if	1	;There are 3 active tblptr bytes
 21971  00DD8A  0E00               	movlw	low (__display_inout@F7188 shr (0+16))
 21972  00DD8C  6EF8               	movwf	tblptru,c
 21973  00DD8E                     	endif
 21974  00DD8E  EE20  F090         	lfsr	2,__display_inout@line1
 21975  00DD92  0E11               	movlw	17
 21976  00DD94                     u20510:
 21977  00DD94  0009               	tblrd		*+
 21978  00DD96  CFF5 FFDE          	movff	tablat,postinc2
 21979  00DD9A  06E8               	decf	wreg,f,c
 21980  00DD9C  E2FB               	bc	u20510
 21981                           
 21982                           ;display.c: 145: const char line2[] = "   Input   Output";
 21983  00DD9E  0EC6               	movlw	low __display_inout@F7190
 21984  00DDA0  6EF6               	movwf	tblptrl,c
 21985  00DDA2                     	if	1	;There is more than 1 active tblptr byte
 21986  00DDA2  0EA1               	movlw	high __display_inout@F7190
 21987  00DDA4  6EF7               	movwf	tblptrh,c
 21988  00DDA6                     	endif
 21989  00DDA6                     	if	1	;There are 3 active tblptr bytes
 21990  00DDA6  0E00               	movlw	low (__display_inout@F7190 shr (0+16))
 21991  00DDA8  6EF8               	movwf	tblptru,c
 21992  00DDAA                     	endif
 21993  00DDAA  EE20  F0A2         	lfsr	2,__display_inout@line2
 21994  00DDAE  0E11               	movlw	17
 21995  00DDB0                     u20520:
 21996  00DDB0  0009               	tblrd		*+
 21997  00DDB2  CFF5 FFDE          	movff	tablat,postinc2
 21998  00DDB6  06E8               	decf	wreg,f,c
 21999  00DDB8  E2FB               	bc	u20520
 22000                           
 22001                           ;display.c: 146: const char line3[] = "V:";
 22002  00DDBA  0E16               	movlw	low __display_inout@F7192
 22003  00DDBC  6EF6               	movwf	tblptrl,c
 22004  00DDBE                     	if	1	;There is more than 1 active tblptr byte
 22005  00DDBE  0EA3               	movlw	high __display_inout@F7192
 22006  00DDC0  6EF7               	movwf	tblptrh,c
 22007  00DDC2                     	endif
 22008  00DDC2                     	if	1	;There are 3 active tblptr bytes
 22009  00DDC2  0E00               	movlw	low (__display_inout@F7192 shr (0+16))
 22010  00DDC4  6EF8               	movwf	tblptru,c
 22011  00DDC6                     	endif
 22012  00DDC6  0009               	tblrd		*+
 22013  00DDC8  CFF5 F0C2          	movff	tablat,__display_inout@line3
 22014  00DDCC  0009               	tblrd		*+
 22015  00DDCE  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 22016  00DDD2  000A               	tblrd		*-
 22017  00DDD4  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 22018                           
 22019                           ;display.c: 147: const char line4[] = "A: --      --";
 22020  00DDD8  0E85               	movlw	low __display_inout@F7194
 22021  00DDDA  6EF6               	movwf	tblptrl,c
 22022  00DDDC                     	if	1	;There is more than 1 active tblptr byte
 22023  00DDDC  0EA2               	movlw	high __display_inout@F7194
 22024  00DDDE  6EF7               	movwf	tblptrh,c
 22025  00DDE0                     	endif
 22026  00DDE0                     	if	1	;There are 3 active tblptr bytes
 22027  00DDE0  0E00               	movlw	low (__display_inout@F7194 shr (0+16))
 22028  00DDE2  6EF8               	movwf	tblptru,c
 22029  00DDE4                     	endif
 22030  00DDE4  EE20  F0B4         	lfsr	2,__display_inout@line4
 22031  00DDE8  0E0D               	movlw	13
 22032  00DDEA                     u20530:
 22033  00DDEA  0009               	tblrd		*+
 22034  00DDEC  CFF5 FFDE          	movff	tablat,postinc2
 22035  00DDF0  06E8               	decf	wreg,f,c
 22036  00DDF2  E2FB               	bc	u20530
 22037                           
 22038                           ;display.c: 149: cntr = 0;
 22039  00DDF4  0E00               	movlw	0
 22040  00DDF6  0100               	movlb	0	; () banked
 22041  00DDF8  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22042                           
 22043                           ;display.c: 150: while(line1[cntr])
 22044  00DDFA  D013               	goto	l1956
 22045  00DDFC                     
 22046                           ; BSR set to: 0
 22047                           ;display.c: 151: display_content[0][cntr] = line1[cntr++];
 22048                           
 22049                           ; BSR set to: 0
 22050  00DDFC  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22051  00DDFE  0D01               	mullw	1
 22052  00DE00  0E90               	movlw	low __display_inout@line1
 22053  00DE02  24F3               	addwf	prodl,w,c
 22054  00DE04  6ED9               	movwf	fsr2l,c
 22055  00DE06  0E00               	movlw	high __display_inout@line1
 22056  00DE08  20F4               	addwfc	prodh,w,c
 22057  00DE0A  6EDA               	movwf	fsr2h,c
 22058  00DE0C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22059  00DE0E  0D01               	mullw	1
 22060  00DE10  0E54               	movlw	low _display_content
 22061  00DE12  24F3               	addwf	prodl,w,c
 22062  00DE14  6EE1               	movwf	fsr1l,c
 22063  00DE16  0E03               	movlw	high _display_content
 22064  00DE18  20F4               	addwfc	prodh,w,c
 22065  00DE1A  6EE2               	movwf	fsr1h,c
 22066  00DE1C  CFDF FFE7          	movff	indf2,indf1
 22067                           
 22068                           ; BSR set to: 0
 22069  00DE20  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22070  00DE22                     l1956:
 22071                           
 22072                           ; BSR set to: 0
 22073                           
 22074                           ; BSR set to: 0
 22075  00DE22  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22076  00DE24  0D01               	mullw	1
 22077  00DE26  0E90               	movlw	low __display_inout@line1
 22078  00DE28  24F3               	addwf	prodl,w,c
 22079  00DE2A  6ED9               	movwf	fsr2l,c
 22080  00DE2C  0E00               	movlw	high __display_inout@line1
 22081  00DE2E  20F4               	addwfc	prodh,w,c
 22082  00DE30  6EDA               	movwf	fsr2h,c
 22083  00DE32  50DF               	movf	indf2,w,c
 22084  00DE34  A4D8               	btfss	status,2,c
 22085  00DE36  D7E2               	goto	l1957
 22086                           
 22087                           ; BSR set to: 0
 22088                           ;display.c: 153: cntr = 0;
 22089                           
 22090                           ; BSR set to: 0
 22091  00DE38  0E00               	movlw	0
 22092  00DE3A  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22093                           
 22094                           ;display.c: 154: while(line2[cntr])
 22095  00DE3C  D013               	goto	l1959
 22096  00DE3E                     
 22097                           ; BSR set to: 0
 22098                           ;display.c: 155: display_content[1][cntr] = line2[cntr++];
 22099                           
 22100                           ; BSR set to: 0
 22101  00DE3E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22102  00DE40  0D01               	mullw	1
 22103  00DE42  0EA2               	movlw	low __display_inout@line2
 22104  00DE44  24F3               	addwf	prodl,w,c
 22105  00DE46  6ED9               	movwf	fsr2l,c
 22106  00DE48  0E00               	movlw	high __display_inout@line2
 22107  00DE4A  20F4               	addwfc	prodh,w,c
 22108  00DE4C  6EDA               	movwf	fsr2h,c
 22109  00DE4E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22110  00DE50  0D01               	mullw	1
 22111  00DE52  0E68               	movlw	low (_display_content+20)
 22112  00DE54  24F3               	addwf	prodl,w,c
 22113  00DE56  6EE1               	movwf	fsr1l,c
 22114  00DE58  0E03               	movlw	high (_display_content+20)
 22115  00DE5A  20F4               	addwfc	prodh,w,c
 22116  00DE5C  6EE2               	movwf	fsr1h,c
 22117  00DE5E  CFDF FFE7          	movff	indf2,indf1
 22118                           
 22119                           ; BSR set to: 0
 22120  00DE62  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22121  00DE64                     l1959:
 22122                           
 22123                           ; BSR set to: 0
 22124                           
 22125                           ; BSR set to: 0
 22126  00DE64  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22127  00DE66  0D01               	mullw	1
 22128  00DE68  0EA2               	movlw	low __display_inout@line2
 22129  00DE6A  24F3               	addwf	prodl,w,c
 22130  00DE6C  6ED9               	movwf	fsr2l,c
 22131  00DE6E  0E00               	movlw	high __display_inout@line2
 22132  00DE70  20F4               	addwfc	prodh,w,c
 22133  00DE72  6EDA               	movwf	fsr2h,c
 22134  00DE74  50DF               	movf	indf2,w,c
 22135  00DE76  A4D8               	btfss	status,2,c
 22136  00DE78  D7E2               	goto	l1960
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;display.c: 157: cntr = 0;
 22140                           
 22141                           ; BSR set to: 0
 22142  00DE7A  0E00               	movlw	0
 22143  00DE7C  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22144                           
 22145                           ;display.c: 158: while(line3[cntr])
 22146  00DE7E  D013               	goto	l1962
 22147  00DE80                     
 22148                           ; BSR set to: 0
 22149                           ;display.c: 159: display_content[2][cntr] = line3[cntr++];
 22150                           
 22151                           ; BSR set to: 0
 22152  00DE80  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22153  00DE82  0D01               	mullw	1
 22154  00DE84  0EC2               	movlw	low __display_inout@line3
 22155  00DE86  24F3               	addwf	prodl,w,c
 22156  00DE88  6ED9               	movwf	fsr2l,c
 22157  00DE8A  0E00               	movlw	high __display_inout@line3
 22158  00DE8C  20F4               	addwfc	prodh,w,c
 22159  00DE8E  6EDA               	movwf	fsr2h,c
 22160  00DE90  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22161  00DE92  0D01               	mullw	1
 22162  00DE94  0E7C               	movlw	low (_display_content+40)
 22163  00DE96  24F3               	addwf	prodl,w,c
 22164  00DE98  6EE1               	movwf	fsr1l,c
 22165  00DE9A  0E03               	movlw	high (_display_content+40)
 22166  00DE9C  20F4               	addwfc	prodh,w,c
 22167  00DE9E  6EE2               	movwf	fsr1h,c
 22168  00DEA0  CFDF FFE7          	movff	indf2,indf1
 22169                           
 22170                           ; BSR set to: 0
 22171  00DEA4  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22172  00DEA6                     l1962:
 22173                           
 22174                           ; BSR set to: 0
 22175                           
 22176                           ; BSR set to: 0
 22177  00DEA6  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22178  00DEA8  0D01               	mullw	1
 22179  00DEAA  0EC2               	movlw	low __display_inout@line3
 22180  00DEAC  24F3               	addwf	prodl,w,c
 22181  00DEAE  6ED9               	movwf	fsr2l,c
 22182  00DEB0  0E00               	movlw	high __display_inout@line3
 22183  00DEB2  20F4               	addwfc	prodh,w,c
 22184  00DEB4  6EDA               	movwf	fsr2h,c
 22185  00DEB6  50DF               	movf	indf2,w,c
 22186  00DEB8  A4D8               	btfss	status,2,c
 22187  00DEBA  D7E2               	goto	l1963
 22188                           
 22189                           ; BSR set to: 0
 22190                           ;display.c: 160: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 22191                           
 22192                           ; BSR set to: 0
 22193  00DEBC  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 22194  00DEC0  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 22195  00DEC4  0E03               	movlw	3
 22196  00DEC6  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22197  00DEC8  0E7F               	movlw	low (_display_content+43)
 22198  00DECA  6F7B               	movwf	__display_itoa@text& (0+255),b
 22199  00DECC  0E03               	movlw	high (_display_content+43)
 22200  00DECE  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22201  00DED0  ECBE  F06D         	call	__display_itoa	;wreg free
 22202                           
 22203                           ;display.c: 161: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 22204  00DED4  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 22205  00DED8  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 22206  00DEDC  0E03               	movlw	3
 22207  00DEDE  0100               	movlb	0	; () banked
 22208  00DEE0  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22209  00DEE2  0E87               	movlw	low (_display_content+51)
 22210  00DEE4  6F7B               	movwf	__display_itoa@text& (0+255),b
 22211  00DEE6  0E03               	movlw	high (_display_content+51)
 22212  00DEE8  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22213  00DEEA  ECBE  F06D         	call	__display_itoa	;wreg free
 22214                           
 22215                           ;display.c: 163: cntr = 0;
 22216  00DEEE  0E00               	movlw	0
 22217  00DEF0  0100               	movlb	0	; () banked
 22218  00DEF2  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22219                           
 22220                           ;display.c: 164: while(line4[cntr])
 22221  00DEF4  D013               	goto	l1965
 22222  00DEF6                     
 22223                           ; BSR set to: 0
 22224                           ;display.c: 165: display_content[3][cntr] = line4[cntr++];
 22225                           
 22226                           ; BSR set to: 0
 22227  00DEF6  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22228  00DEF8  0D01               	mullw	1
 22229  00DEFA  0EB4               	movlw	low __display_inout@line4
 22230  00DEFC  24F3               	addwf	prodl,w,c
 22231  00DEFE  6ED9               	movwf	fsr2l,c
 22232  00DF00  0E00               	movlw	high __display_inout@line4
 22233  00DF02  20F4               	addwfc	prodh,w,c
 22234  00DF04  6EDA               	movwf	fsr2h,c
 22235  00DF06  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22236  00DF08  0D01               	mullw	1
 22237  00DF0A  0E90               	movlw	low (_display_content+60)
 22238  00DF0C  24F3               	addwf	prodl,w,c
 22239  00DF0E  6EE1               	movwf	fsr1l,c
 22240  00DF10  0E03               	movlw	high (_display_content+60)
 22241  00DF12  20F4               	addwfc	prodh,w,c
 22242  00DF14  6EE2               	movwf	fsr1h,c
 22243  00DF16  CFDF FFE7          	movff	indf2,indf1
 22244                           
 22245                           ; BSR set to: 0
 22246  00DF1A  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22247  00DF1C                     l1965:
 22248                           
 22249                           ; BSR set to: 0
 22250                           
 22251                           ; BSR set to: 0
 22252  00DF1C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22253  00DF1E  0D01               	mullw	1
 22254  00DF20  0EB4               	movlw	low __display_inout@line4
 22255  00DF22  24F3               	addwf	prodl,w,c
 22256  00DF24  6ED9               	movwf	fsr2l,c
 22257  00DF26  0E00               	movlw	high __display_inout@line4
 22258  00DF28  20F4               	addwfc	prodh,w,c
 22259  00DF2A  6EDA               	movwf	fsr2h,c
 22260  00DF2C  50DF               	movf	indf2,w,c
 22261  00DF2E  A4D8               	btfss	status,2,c
 22262  00DF30  D7E2               	goto	l1966
 22263                           
 22264                           ;display.c: 167: {;display.c: 168: _display_itoa(os.input_current, 3, &display_content[3
      +                          ][3]);
 22265                           
 22266                           ; BSR set to: 0
 22267                           
 22268                           ; BSR set to: 0
 22269                           ;display.c: 166: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 22270  00DF32  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 22271  00DF36  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 22272  00DF3A  0E03               	movlw	3
 22273  00DF3C  0100               	movlb	0	; () banked
 22274  00DF3E  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22275  00DF40  0E93               	movlw	low (_display_content+63)
 22276  00DF42  6F7B               	movwf	__display_itoa@text& (0+255),b
 22277  00DF44  0E03               	movlw	high (_display_content+63)
 22278  00DF46  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22279  00DF48  ECBE  F06D         	call	__display_itoa	;wreg free
 22280                           
 22281                           ;display.c: 169: _display_itoa(os.output_current, 3, &display_content[3][11]);
 22282  00DF4C  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 22283  00DF50  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 22284  00DF54  0E03               	movlw	3
 22285  00DF56  0100               	movlb	0	; () banked
 22286  00DF58  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22287  00DF5A  0E9B               	movlw	low (_display_content+71)
 22288  00DF5C  6F7B               	movwf	__display_itoa@text& (0+255),b
 22289  00DF5E  0E03               	movlw	high (_display_content+71)
 22290  00DF60  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22291  00DF62  ECBE  F06D         	call	__display_itoa	;wreg free
 22292  00DF66  0012               	return	
 22293  00DF68                     __end_of__display_inout:
 22294                           	opt stack 0
 22295                           tblptru	equ	0xFF8
 22296                           tblptrh	equ	0xFF7
 22297                           tblptrl	equ	0xFF6
 22298                           tablat	equ	0xFF5
 22299                           prodh	equ	0xFF4
 22300                           prodl	equ	0xFF3
 22301                           intcon	equ	0xFF2
 22302                           intcon2	equ	0xFF1
 22303                           intcon3	equ	0xFF0
 22304                           postinc0	equ	0xFEE
 22305                           wreg	equ	0xFE8
 22306                           indf1	equ	0xFE7
 22307                           postinc1	equ	0xFE6
 22308                           postdec1	equ	0xFE5
 22309                           plusw1	equ	0xFE3
 22310                           fsr1h	equ	0xFE2
 22311                           fsr1l	equ	0xFE1
 22312                           indf2	equ	0xFDF
 22313                           postinc2	equ	0xFDE
 22314                           postdec2	equ	0xFDD
 22315                           plusw2	equ	0xFDB
 22316                           fsr2h	equ	0xFDA
 22317                           fsr2l	equ	0xFD9
 22318                           status	equ	0xFD8
 22319                           
 22320 ;; *************** function __display_efficiency *****************
 22321 ;; Defined at:
 22322 ;;		line 475 in file "display.c"
 22323 ;; Parameters:    Size  Location     Type
 22324 ;;		None
 22325 ;; Auto vars:     Size  Location     Type
 22326 ;;  source         19   69[BANK0 ] const unsigned char [19]
 22327 ;;  header         19   50[BANK0 ] const unsigned char [19]
 22328 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 22329 ;;  battery         4  109[BANK0 ] long 
 22330 ;;  panel           4  105[BANK0 ] long 
 22331 ;;  efficiency      3  102[BANK0 ] float 
 22332 ;;  cntr            1  113[BANK0 ] unsigned char 
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  1    wreg      void 
 22335 ;; Registers used:
 22336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22343 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22345 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22346 ;;Total ram usage:       66 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:   14
 22349 ;; This function calls:
 22350 ;;		___aldiv
 22351 ;;		___altoft
 22352 ;;		___fttol
 22353 ;;		___lmul
 22354 ;;		__display_itoa
 22355 ;; This function is called by:
 22356 ;;		_display_prepare
 22357 ;; This function uses a non-reentrant model
 22358 ;;
 22359                           
 22360                           	psect	text104
 22361  00C128                     __ptext104:
 22362                           	opt stack 0
 22363  00C128                     __display_efficiency:
 22364                           	opt stack 15
 22365                           
 22366                           ;display.c: 477: uint8_t cntr;;display.c: 478: const char header[] = "Charger Efficiency
      +                          ";
 22367                           
 22368                           ;incstack = 0
 22369  00C128  0E6A               	movlw	low __display_efficiency@F7276
 22370  00C12A  6EF6               	movwf	tblptrl,c
 22371  00C12C                     	if	1	;There is more than 1 active tblptr byte
 22372  00C12C  0EA1               	movlw	high __display_efficiency@F7276
 22373  00C12E  6EF7               	movwf	tblptrh,c
 22374  00C130                     	endif
 22375  00C130                     	if	1	;There are 3 active tblptr bytes
 22376  00C130  0E00               	movlw	low (__display_efficiency@F7276 shr (0+16))
 22377  00C132  6EF8               	movwf	tblptru,c
 22378  00C134                     	endif
 22379  00C134  EE20  F092         	lfsr	2,__display_efficiency@header
 22380  00C138  0E12               	movlw	18
 22381  00C13A                     u21270:
 22382  00C13A  0009               	tblrd		*+
 22383  00C13C  CFF5 FFDE          	movff	tablat,postinc2
 22384  00C140  06E8               	decf	wreg,f,c
 22385  00C142  E2FB               	bc	u21270
 22386                           
 22387                           ;display.c: 479: const char source[] = "Panel:    Battery:";
 22388  00C144  0E57               	movlw	low __display_efficiency@F7278
 22389  00C146  6EF6               	movwf	tblptrl,c
 22390  00C148                     	if	1	;There is more than 1 active tblptr byte
 22391  00C148  0EA1               	movlw	high __display_efficiency@F7278
 22392  00C14A  6EF7               	movwf	tblptrh,c
 22393  00C14C                     	endif
 22394  00C14C                     	if	1	;There are 3 active tblptr bytes
 22395  00C14C  0E00               	movlw	low (__display_efficiency@F7278 shr (0+16))
 22396  00C14E  6EF8               	movwf	tblptru,c
 22397  00C150                     	endif
 22398  00C150  EE20  F0A5         	lfsr	2,__display_efficiency@source
 22399  00C154  0E12               	movlw	18
 22400  00C156                     u21280:
 22401  00C156  0009               	tblrd		*+
 22402  00C158  CFF5 FFDE          	movff	tablat,postinc2
 22403  00C15C  06E8               	decf	wreg,f,c
 22404  00C15E  E2FB               	bc	u21280
 22405                           
 22406                           ;display.c: 480: const char footer[] = "E:         L:";
 22407  00C160  0E5B               	movlw	low __display_efficiency@F7280
 22408  00C162  6EF6               	movwf	tblptrl,c
 22409  00C164                     	if	1	;There is more than 1 active tblptr byte
 22410  00C164  0EA2               	movlw	high __display_efficiency@F7280
 22411  00C166  6EF7               	movwf	tblptrh,c
 22412  00C168                     	endif
 22413  00C168                     	if	1	;There are 3 active tblptr bytes
 22414  00C168  0E00               	movlw	low (__display_efficiency@F7280 shr (0+16))
 22415  00C16A  6EF8               	movwf	tblptru,c
 22416  00C16C                     	endif
 22417  00C16C  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 22418  00C170  0E0D               	movlw	13
 22419  00C172                     u21290:
 22420  00C172  0009               	tblrd		*+
 22421  00C174  CFF5 FFDE          	movff	tablat,postinc2
 22422  00C178  06E8               	decf	wreg,f,c
 22423  00C17A  E2FB               	bc	u21290
 22424                           
 22425                           ;display.c: 481: int32_t panel;;display.c: 482: int32_t battery = (int32_t) os.output_vo
      +                          ltage * (int32_t) os.output_current;
 22426  00C17C  EE22  F027         	lfsr	2,_os+39	;volatile
 22427  00C180  CFDE F060          	movff	postinc2,___lmul@multiplier
 22428  00C184  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 22429  00C188  0100               	movlb	0	; () banked
 22430  00C18A  0E00               	movlw	0
 22431  00C18C  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22432  00C18E  0EFF               	movlw	-1
 22433  00C190  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 22434  00C192  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 22435  00C194  EE22  F032         	lfsr	2,_os+50	;volatile
 22436  00C198  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22437  00C19C  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22438  00C1A0  0E00               	movlw	0
 22439  00C1A2  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22440  00C1A4  0EFF               	movlw	-1
 22441  00C1A6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22442  00C1A8  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22443  00C1AA  EC7D  F095         	call	___lmul	;wreg free
 22444  00C1AE  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 22445  00C1B2  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 22446  00C1B6  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 22447  00C1BA  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 22448                           
 22449                           ;display.c: 483: float efficiency;;display.c: 485: panel = (int32_t) os.input_voltage;
 22450  00C1BE  EE22  F012         	lfsr	2,_os+18	;volatile
 22451  00C1C2  CFDE F0C9          	movff	postinc2,__display_efficiency@panel
 22452  00C1C6  CFDD F0CA          	movff	postdec2,__display_efficiency@panel+1
 22453  00C1CA  0100               	movlb	0	; () banked
 22454  00C1CC  0E00               	movlw	0
 22455  00C1CE  BFCA               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 22456  00C1D0  0EFF               	movlw	-1
 22457  00C1D2  6FCB               	movwf	(__display_efficiency@panel+2)& (0+255),b
 22458  00C1D4  6FCC               	movwf	(__display_efficiency@panel+3)& (0+255),b
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;display.c: 486: panel *= (int32_t) os.input_current;
 22462  00C1D6  C0C9  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 22463  00C1DA  C0CA  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 22464  00C1DE  C0CB  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 22465  00C1E2  C0CC  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 22466  00C1E6  EE22  F01D         	lfsr	2,_os+29	;volatile
 22467  00C1EA  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22468  00C1EE  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22469  00C1F2  0E00               	movlw	0
 22470  00C1F4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22471  00C1F6  0EFF               	movlw	-1
 22472  00C1F8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22473  00C1FA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22474  00C1FC  EC7D  F095         	call	___lmul	;wreg free
 22475  00C200  C060  F0C9         	movff	?___lmul,__display_efficiency@panel
 22476  00C204  C061  F0CA         	movff	?___lmul+1,__display_efficiency@panel+1
 22477  00C208  C062  F0CB         	movff	?___lmul+2,__display_efficiency@panel+2
 22478  00C20C  C063  F0CC         	movff	?___lmul+3,__display_efficiency@panel+3
 22479                           
 22480                           ;display.c: 487: panel /= 1000;
 22481  00C210  C0C9  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 22482  00C214  C0CA  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 22483  00C218  C0CB  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 22484  00C21C  C0CC  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 22485  00C220  0EE8               	movlw	232
 22486  00C222  0100               	movlb	0	; () banked
 22487  00C224  6F64               	movwf	___aldiv@divisor& (0+255),b
 22488  00C226  0E03               	movlw	3
 22489  00C228  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22490  00C22A  0E00               	movlw	0
 22491  00C22C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22492  00C22E  0E00               	movlw	0
 22493  00C230  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22494  00C232  ECC2  F084         	call	___aldiv	;wreg free
 22495  00C236  C060  F0C9         	movff	?___aldiv,__display_efficiency@panel
 22496  00C23A  C061  F0CA         	movff	?___aldiv+1,__display_efficiency@panel+1
 22497  00C23E  C062  F0CB         	movff	?___aldiv+2,__display_efficiency@panel+2
 22498  00C242  C063  F0CC         	movff	?___aldiv+3,__display_efficiency@panel+3
 22499                           
 22500                           ;display.c: 489: battery = (int32_t) os.output_voltage;
 22501  00C246  EE22  F027         	lfsr	2,_os+39	;volatile
 22502  00C24A  CFDE F0CD          	movff	postinc2,__display_efficiency@battery
 22503  00C24E  CFDD F0CE          	movff	postdec2,__display_efficiency@battery+1
 22504  00C252  0100               	movlb	0	; () banked
 22505  00C254  0E00               	movlw	0
 22506  00C256  BFCE               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 22507  00C258  0EFF               	movlw	-1
 22508  00C25A  6FCF               	movwf	(__display_efficiency@battery+2)& (0+255),b
 22509  00C25C  6FD0               	movwf	(__display_efficiency@battery+3)& (0+255),b
 22510                           
 22511                           ; BSR set to: 0
 22512                           ;display.c: 490: battery *= os.output_current;
 22513  00C25E  C0CD  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 22514  00C262  C0CE  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 22515  00C266  C0CF  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 22516  00C26A  C0D0  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 22517  00C26E  EE22  F032         	lfsr	2,_os+50	;volatile
 22518  00C272  CFDE F064          	movff	postinc2,___lmul@multiplicand
 22519  00C276  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 22520  00C27A  0E00               	movlw	0
 22521  00C27C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 22522  00C27E  0EFF               	movlw	-1
 22523  00C280  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22524  00C282  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22525  00C284  EC7D  F095         	call	___lmul	;wreg free
 22526  00C288  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 22527  00C28C  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 22528  00C290  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 22529  00C294  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 22530                           
 22531                           ;display.c: 491: efficiency = battery / panel;
 22532  00C298  C0C9  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 22533  00C29C  C0CA  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 22534  00C2A0  C0CB  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 22535  00C2A4  C0CC  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 22536  00C2A8  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22537  00C2AC  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22538  00C2B0  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22539  00C2B4  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22540  00C2B8  ECC2  F084         	call	___aldiv	;wreg free
 22541  00C2BC  C060  F06E         	movff	?___aldiv,___altoft@c
 22542  00C2C0  C061  F06F         	movff	?___aldiv+1,___altoft@c+1
 22543  00C2C4  C062  F070         	movff	?___aldiv+2,___altoft@c+2
 22544  00C2C8  C063  F071         	movff	?___aldiv+3,___altoft@c+3
 22545  00C2CC  EC8D  F08F         	call	___altoft	;wreg free
 22546  00C2D0  C06E  F0C6         	movff	?___altoft,__display_efficiency@efficiency
 22547  00C2D4  C06F  F0C7         	movff	?___altoft+1,__display_efficiency@efficiency+1
 22548  00C2D8  C070  F0C8         	movff	?___altoft+2,__display_efficiency@efficiency+2
 22549                           
 22550                           ;display.c: 492: battery /= 1000;
 22551  00C2DC  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 22552  00C2E0  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 22553  00C2E4  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 22554  00C2E8  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 22555  00C2EC  0EE8               	movlw	232
 22556  00C2EE  0100               	movlb	0	; () banked
 22557  00C2F0  6F64               	movwf	___aldiv@divisor& (0+255),b
 22558  00C2F2  0E03               	movlw	3
 22559  00C2F4  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 22560  00C2F6  0E00               	movlw	0
 22561  00C2F8  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 22562  00C2FA  0E00               	movlw	0
 22563  00C2FC  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 22564  00C2FE  ECC2  F084         	call	___aldiv	;wreg free
 22565  00C302  C060  F0CD         	movff	?___aldiv,__display_efficiency@battery
 22566  00C306  C061  F0CE         	movff	?___aldiv+1,__display_efficiency@battery+1
 22567  00C30A  C062  F0CF         	movff	?___aldiv+2,__display_efficiency@battery+2
 22568  00C30E  C063  F0D0         	movff	?___aldiv+3,__display_efficiency@battery+3
 22569                           
 22570                           ;display.c: 494: cntr = 0;
 22571  00C312  0E00               	movlw	0
 22572  00C314  0100               	movlb	0	; () banked
 22573  00C316  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22574                           
 22575                           ;display.c: 495: while(header[cntr])
 22576  00C318  D013               	goto	l2177
 22577  00C31A                     
 22578                           ; BSR set to: 0
 22579                           ;display.c: 496: display_content[0][cntr] = header[cntr++];
 22580                           
 22581                           ; BSR set to: 0
 22582  00C31A  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22583  00C31C  0D01               	mullw	1
 22584  00C31E  0E92               	movlw	low __display_efficiency@header
 22585  00C320  24F3               	addwf	prodl,w,c
 22586  00C322  6ED9               	movwf	fsr2l,c
 22587  00C324  0E00               	movlw	high __display_efficiency@header
 22588  00C326  20F4               	addwfc	prodh,w,c
 22589  00C328  6EDA               	movwf	fsr2h,c
 22590  00C32A  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22591  00C32C  0D01               	mullw	1
 22592  00C32E  0E54               	movlw	low _display_content
 22593  00C330  24F3               	addwf	prodl,w,c
 22594  00C332  6EE1               	movwf	fsr1l,c
 22595  00C334  0E03               	movlw	high _display_content
 22596  00C336  20F4               	addwfc	prodh,w,c
 22597  00C338  6EE2               	movwf	fsr1h,c
 22598  00C33A  CFDF FFE7          	movff	indf2,indf1
 22599                           
 22600                           ; BSR set to: 0
 22601  00C33E  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22602  00C340                     l2177:
 22603                           
 22604                           ; BSR set to: 0
 22605                           
 22606                           ; BSR set to: 0
 22607  00C340  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22608  00C342  0D01               	mullw	1
 22609  00C344  0E92               	movlw	low __display_efficiency@header
 22610  00C346  24F3               	addwf	prodl,w,c
 22611  00C348  6ED9               	movwf	fsr2l,c
 22612  00C34A  0E00               	movlw	high __display_efficiency@header
 22613  00C34C  20F4               	addwfc	prodh,w,c
 22614  00C34E  6EDA               	movwf	fsr2h,c
 22615  00C350  50DF               	movf	indf2,w,c
 22616  00C352  A4D8               	btfss	status,2,c
 22617  00C354  D7E2               	goto	l2178
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;display.c: 498: cntr = 0;
 22621                           
 22622                           ; BSR set to: 0
 22623  00C356  0E00               	movlw	0
 22624  00C358  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22625                           
 22626                           ;display.c: 499: while(source[cntr])
 22627  00C35A  D013               	goto	l2180
 22628  00C35C                     
 22629                           ; BSR set to: 0
 22630                           ;display.c: 500: display_content[1][cntr] = source[cntr++];
 22631                           
 22632                           ; BSR set to: 0
 22633  00C35C  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22634  00C35E  0D01               	mullw	1
 22635  00C360  0EA5               	movlw	low __display_efficiency@source
 22636  00C362  24F3               	addwf	prodl,w,c
 22637  00C364  6ED9               	movwf	fsr2l,c
 22638  00C366  0E00               	movlw	high __display_efficiency@source
 22639  00C368  20F4               	addwfc	prodh,w,c
 22640  00C36A  6EDA               	movwf	fsr2h,c
 22641  00C36C  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22642  00C36E  0D01               	mullw	1
 22643  00C370  0E68               	movlw	low (_display_content+20)
 22644  00C372  24F3               	addwf	prodl,w,c
 22645  00C374  6EE1               	movwf	fsr1l,c
 22646  00C376  0E03               	movlw	high (_display_content+20)
 22647  00C378  20F4               	addwfc	prodh,w,c
 22648  00C37A  6EE2               	movwf	fsr1h,c
 22649  00C37C  CFDF FFE7          	movff	indf2,indf1
 22650                           
 22651                           ; BSR set to: 0
 22652  00C380  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22653  00C382                     l2180:
 22654                           
 22655                           ; BSR set to: 0
 22656                           
 22657                           ; BSR set to: 0
 22658  00C382  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22659  00C384  0D01               	mullw	1
 22660  00C386  0EA5               	movlw	low __display_efficiency@source
 22661  00C388  24F3               	addwf	prodl,w,c
 22662  00C38A  6ED9               	movwf	fsr2l,c
 22663  00C38C  0E00               	movlw	high __display_efficiency@source
 22664  00C38E  20F4               	addwfc	prodh,w,c
 22665  00C390  6EDA               	movwf	fsr2h,c
 22666  00C392  50DF               	movf	indf2,w,c
 22667  00C394  A4D8               	btfss	status,2,c
 22668  00C396  D7E2               	goto	l2181
 22669                           
 22670                           ; BSR set to: 0
 22671                           ;display.c: 502: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 22672                           
 22673                           ; BSR set to: 0
 22674  00C398  C0C9  F078         	movff	__display_efficiency@panel,__display_itoa@value
 22675  00C39C  C0CA  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 22676  00C3A0  0E03               	movlw	3
 22677  00C3A2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22678  00C3A4  0E7C               	movlw	low (_display_content+40)
 22679  00C3A6  6F7B               	movwf	__display_itoa@text& (0+255),b
 22680  00C3A8  0E03               	movlw	high (_display_content+40)
 22681  00C3AA  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22682  00C3AC  ECBE  F06D         	call	__display_itoa	;wreg free
 22683                           
 22684                           ;display.c: 503: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 22685  00C3B0  C0CD  F078         	movff	__display_efficiency@battery,__display_itoa@value
 22686  00C3B4  C0CE  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 22687  00C3B8  0E03               	movlw	3
 22688  00C3BA  0100               	movlb	0	; () banked
 22689  00C3BC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22690  00C3BE  0E86               	movlw	low (_display_content+50)
 22691  00C3C0  6F7B               	movwf	__display_itoa@text& (0+255),b
 22692  00C3C2  0E03               	movlw	high (_display_content+50)
 22693  00C3C4  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22694  00C3C6  ECBE  F06D         	call	__display_itoa	;wreg free
 22695                           
 22696                           ;display.c: 505: cntr = 0;
 22697  00C3CA  0E00               	movlw	0
 22698  00C3CC  0100               	movlb	0	; () banked
 22699  00C3CE  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 22700                           
 22701                           ;display.c: 506: while(footer[cntr])
 22702  00C3D0  D013               	goto	l2183
 22703  00C3D2                     
 22704                           ; BSR set to: 0
 22705                           ;display.c: 507: display_content[3][cntr] = footer[cntr++];
 22706                           
 22707                           ; BSR set to: 0
 22708  00C3D2  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22709  00C3D4  0D01               	mullw	1
 22710  00C3D6  0EB8               	movlw	low __display_efficiency@footer
 22711  00C3D8  24F3               	addwf	prodl,w,c
 22712  00C3DA  6ED9               	movwf	fsr2l,c
 22713  00C3DC  0E00               	movlw	high __display_efficiency@footer
 22714  00C3DE  20F4               	addwfc	prodh,w,c
 22715  00C3E0  6EDA               	movwf	fsr2h,c
 22716  00C3E2  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22717  00C3E4  0D01               	mullw	1
 22718  00C3E6  0E90               	movlw	low (_display_content+60)
 22719  00C3E8  24F3               	addwf	prodl,w,c
 22720  00C3EA  6EE1               	movwf	fsr1l,c
 22721  00C3EC  0E03               	movlw	high (_display_content+60)
 22722  00C3EE  20F4               	addwfc	prodh,w,c
 22723  00C3F0  6EE2               	movwf	fsr1h,c
 22724  00C3F2  CFDF FFE7          	movff	indf2,indf1
 22725                           
 22726                           ; BSR set to: 0
 22727  00C3F6  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 22728  00C3F8                     l2183:
 22729                           
 22730                           ; BSR set to: 0
 22731                           
 22732                           ; BSR set to: 0
 22733  00C3F8  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 22734  00C3FA  0D01               	mullw	1
 22735  00C3FC  0EB8               	movlw	low __display_efficiency@footer
 22736  00C3FE  24F3               	addwf	prodl,w,c
 22737  00C400  6ED9               	movwf	fsr2l,c
 22738  00C402  0E00               	movlw	high __display_efficiency@footer
 22739  00C404  20F4               	addwfc	prodh,w,c
 22740  00C406  6EDA               	movwf	fsr2h,c
 22741  00C408  50DF               	movf	indf2,w,c
 22742  00C40A  A4D8               	btfss	status,2,c
 22743  00C40C  D7E2               	goto	l2184
 22744                           
 22745                           ; BSR set to: 0
 22746                           ;display.c: 509: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 22747                           
 22748                           ; BSR set to: 0
 22749  00C40E  C0C6  F060         	movff	__display_efficiency@efficiency,___fttol@f1
 22750  00C412  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fttol@f1+1
 22751  00C416  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fttol@f1+2
 22752  00C41A  ECFB  F07E         	call	___fttol	;wreg free
 22753  00C41E  C060  F078         	movff	?___fttol,__display_itoa@value
 22754  00C422  C061  F079         	movff	?___fttol+1,__display_itoa@value+1
 22755  00C426  0E01               	movlw	1
 22756  00C428  0100               	movlb	0	; () banked
 22757  00C42A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22758  00C42C  0E93               	movlw	low (_display_content+63)
 22759  00C42E  6F7B               	movwf	__display_itoa@text& (0+255),b
 22760  00C430  0E03               	movlw	high (_display_content+63)
 22761  00C432  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22762  00C434  ECBE  F06D         	call	__display_itoa	;wreg free
 22763                           
 22764                           ;display.c: 510: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 22765  00C438  C0CD  F090         	movff	__display_efficiency@battery,??__display_efficiency
 22766  00C43C  C0CE  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 22767  00C440  0100               	movlb	0	; () banked
 22768  00C442  1F90               	comf	??__display_efficiency& (0+255),f,b
 22769  00C444  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 22770  00C446  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 22771  00C448  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 22772  00C44A  51C9               	movf	__display_efficiency@panel& (0+255),w,b
 22773  00C44C  2590               	addwf	??__display_efficiency& (0+255),w,b
 22774  00C44E  6F78               	movwf	__display_itoa@value& (0+255),b
 22775  00C450  51CA               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 22776  00C452  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 22777  00C454  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 22778  00C456  0E03               	movlw	3
 22779  00C458  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22780  00C45A  0E9E               	movlw	low (_display_content+74)
 22781  00C45C  6F7B               	movwf	__display_itoa@text& (0+255),b
 22782  00C45E  0E03               	movlw	high (_display_content+74)
 22783  00C460  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22784  00C462  ECBE  F06D         	call	__display_itoa	;wreg free
 22785  00C466  0012               	return		;funcret
 22786  00C468                     __end_of__display_efficiency:
 22787                           	opt stack 0
 22788                           tblptru	equ	0xFF8
 22789                           tblptrh	equ	0xFF7
 22790                           tblptrl	equ	0xFF6
 22791                           tablat	equ	0xFF5
 22792                           prodh	equ	0xFF4
 22793                           prodl	equ	0xFF3
 22794                           intcon	equ	0xFF2
 22795                           intcon2	equ	0xFF1
 22796                           intcon3	equ	0xFF0
 22797                           postinc0	equ	0xFEE
 22798                           wreg	equ	0xFE8
 22799                           indf1	equ	0xFE7
 22800                           postinc1	equ	0xFE6
 22801                           postdec1	equ	0xFE5
 22802                           plusw1	equ	0xFE3
 22803                           fsr1h	equ	0xFE2
 22804                           fsr1l	equ	0xFE1
 22805                           indf2	equ	0xFDF
 22806                           postinc2	equ	0xFDE
 22807                           postdec2	equ	0xFDD
 22808                           plusw2	equ	0xFDB
 22809                           fsr2h	equ	0xFDA
 22810                           fsr2l	equ	0xFD9
 22811                           status	equ	0xFD8
 22812                           
 22813 ;; *************** function ___fttol *****************
 22814 ;; Defined at:
 22815 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fttol.c"
 22816 ;; Parameters:    Size  Location     Type
 22817 ;;  f1              3    0[BANK0 ] float 
 22818 ;; Auto vars:     Size  Location     Type
 22819 ;;  lval            4   10[BANK0 ] unsigned long 
 22820 ;;  exp1            1   14[BANK0 ] unsigned char 
 22821 ;;  sign1           1    9[BANK0 ] unsigned char 
 22822 ;; Return value:  Size  Location     Type
 22823 ;;                  4    0[BANK0 ] long 
 22824 ;; Registers used:
 22825 ;;		wreg, status,2, status,0
 22826 ;; Tracked objects:
 22827 ;;		On entry : 0/0
 22828 ;;		On exit  : 0/0
 22829 ;;		Unchanged: 0/0
 22830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22832 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22833 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22834 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22835 ;;Total ram usage:       15 bytes
 22836 ;; Hardware stack levels used:    1
 22837 ;; Hardware stack levels required when called:   10
 22838 ;; This function calls:
 22839 ;;		Nothing
 22840 ;; This function is called by:
 22841 ;;		__display_efficiency
 22842 ;; This function uses a non-reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text105
 22846  00FDF6                     __ptext105:
 22847                           	opt stack 0
 22848  00FDF6                     ___fttol:
 22849                           	opt stack 18
 22850                           
 22851                           ;incstack = 0
 22852  00FDF6  C062  F064         	movff	___fttol@f1+2,??___fttol
 22853  00FDFA  0100               	movlb	0	; () banked
 22854  00FDFC  6B65               	clrf	(??___fttol+1)& (0+255),b
 22855  00FDFE  6B66               	clrf	(??___fttol+2)& (0+255),b
 22856  00FE00  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
 22857  00FE02  3764               	rlcf	??___fttol& (0+255),f,b
 22858  00FE04  E301               	bnc	u19411
 22859  00FE06  8165               	bsf	(??___fttol+1)& (0+255),0,b
 22860  00FE08                     u19411:
 22861  00FE08  5164               	movf	??___fttol& (0+255),w,b
 22862  00FE0A  6F6E               	movwf	___fttol@exp1& (0+255),b
 22863  00FE0C  516E               	movf	___fttol@exp1& (0+255),w,b
 22864  00FE0E  A4D8               	btfss	status,2,c
 22865  00FE10  D009               	goto	l3692
 22866                           
 22867                           ; BSR set to: 0
 22868  00FE12  0E00               	movlw	0
 22869  00FE14  6F60               	movwf	?___fttol& (0+255),b
 22870  00FE16  0E00               	movlw	0
 22871  00FE18  6F61               	movwf	(?___fttol+1)& (0+255),b
 22872  00FE1A  0E00               	movlw	0
 22873  00FE1C  6F62               	movwf	(?___fttol+2)& (0+255),b
 22874  00FE1E  0E00               	movlw	0
 22875  00FE20  6F63               	movwf	(?___fttol+3)& (0+255),b
 22876                           
 22877                           ; BSR set to: 0
 22878  00FE22  0012               	return	
 22879  00FE24                     l3692:
 22880                           
 22881                           ; BSR set to: 0
 22882                           
 22883                           ; BSR set to: 0
 22884  00FE24  0E17               	movlw	23
 22885  00FE26  6F64               	movwf	??___fttol& (0+255),b
 22886  00FE28  C060  F065         	movff	___fttol@f1,??___fttol+1
 22887  00FE2C  C061  F066         	movff	___fttol@f1+1,??___fttol+2
 22888  00FE30  C062  F067         	movff	___fttol@f1+2,??___fttol+3
 22889  00FE34  2964               	incf	??___fttol& (0+255),w,b
 22890  00FE36  6F68               	movwf	(??___fttol+4)& (0+255),b
 22891  00FE38  D004               	goto	u19430
 22892  00FE3A                     u19435:
 22893  00FE3A  90D8               	bcf	status,0,c
 22894  00FE3C  3367               	rrcf	(??___fttol+3)& (0+255),f,b
 22895  00FE3E  3366               	rrcf	(??___fttol+2)& (0+255),f,b
 22896  00FE40  3365               	rrcf	(??___fttol+1)& (0+255),f,b
 22897  00FE42                     u19430:
 22898  00FE42  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
 22899  00FE44  D7FA               	goto	u19435
 22900  00FE46  0100               	movlb	0	; () banked
 22901  00FE48  5165               	movf	(??___fttol+1)& (0+255),w,b
 22902  00FE4A  6F69               	movwf	___fttol@sign1& (0+255),b
 22903                           
 22904                           ; BSR set to: 0
 22905  00FE4C  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
 22906                           
 22907                           ; BSR set to: 0
 22908  00FE4E  0EFF               	movlw	255
 22909  00FE50  1760               	andwf	___fttol@f1& (0+255),f,b
 22910  00FE52  0EFF               	movlw	255
 22911  00FE54  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
 22912  00FE56  0E00               	movlw	0
 22913  00FE58  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
 22914                           
 22915                           ; BSR set to: 0
 22916  00FE5A  5160               	movf	___fttol@f1& (0+255),w,b
 22917  00FE5C  6F6A               	movwf	___fttol@lval& (0+255),b
 22918  00FE5E  5161               	movf	(___fttol@f1+1)& (0+255),w,b
 22919  00FE60  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
 22920  00FE62  5162               	movf	(___fttol@f1+2)& (0+255),w,b
 22921  00FE64  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
 22922  00FE66  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
 22923                           
 22924                           ; BSR set to: 0
 22925  00FE68  0E8E               	movlw	142
 22926  00FE6A  5F6E               	subwf	___fttol@exp1& (0+255),f,b
 22927                           
 22928                           ; BSR set to: 0
 22929  00FE6C  AF6E               	btfss	___fttol@exp1& (0+255),7,b
 22930  00FE6E  D016               	goto	l3694
 22931                           
 22932                           ; BSR set to: 0
 22933  00FE70  516E               	movf	___fttol@exp1& (0+255),w,b
 22934  00FE72  0A80               	xorlw	128
 22935  00FE74  0F8F               	addlw	143
 22936  00FE76  B0D8               	btfsc	status,0,c
 22937  00FE78  D009               	goto	l3695
 22938                           
 22939                           ; BSR set to: 0
 22940  00FE7A  0E00               	movlw	0
 22941  00FE7C  6F60               	movwf	?___fttol& (0+255),b
 22942  00FE7E  0E00               	movlw	0
 22943  00FE80  6F61               	movwf	(?___fttol+1)& (0+255),b
 22944  00FE82  0E00               	movlw	0
 22945  00FE84  6F62               	movwf	(?___fttol+2)& (0+255),b
 22946  00FE86  0E00               	movlw	0
 22947  00FE88  6F63               	movwf	(?___fttol+3)& (0+255),b
 22948                           
 22949                           ; BSR set to: 0
 22950  00FE8A  0012               	return	
 22951  00FE8C                     l3695:
 22952                           
 22953                           ; BSR set to: 0
 22954                           
 22955                           ; BSR set to: 0
 22956                           
 22957                           ; BSR set to: 0
 22958  00FE8C  90D8               	bcf	status,0,c
 22959  00FE8E  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 22960  00FE90  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 22961  00FE92  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 22962  00FE94  336A               	rrcf	___fttol@lval& (0+255),f,b
 22963                           
 22964                           ; BSR set to: 0
 22965  00FE96  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
 22966  00FE98  D7F9               	goto	l3695
 22967                           
 22968                           ; BSR set to: 0
 22969  00FE9A  D015               	goto	u19470
 22970  00FE9C                     l3694:
 22971                           
 22972                           ; BSR set to: 0
 22973                           
 22974                           ; BSR set to: 0
 22975  00FE9C  0E17               	movlw	23
 22976  00FE9E  656E               	cpfsgt	___fttol@exp1& (0+255),b
 22977  00FEA0  D00F               	goto	l3700
 22978                           
 22979                           ; BSR set to: 0
 22980  00FEA2  0E00               	movlw	0
 22981  00FEA4  6F60               	movwf	?___fttol& (0+255),b
 22982  00FEA6  0E00               	movlw	0
 22983  00FEA8  6F61               	movwf	(?___fttol+1)& (0+255),b
 22984  00FEAA  0E00               	movlw	0
 22985  00FEAC  6F62               	movwf	(?___fttol+2)& (0+255),b
 22986  00FEAE  0E00               	movlw	0
 22987  00FEB0  6F63               	movwf	(?___fttol+3)& (0+255),b
 22988                           
 22989                           ; BSR set to: 0
 22990  00FEB2  0012               	return	
 22991  00FEB4                     
 22992                           ; BSR set to: 0
 22993                           
 22994                           ; BSR set to: 0
 22995  00FEB4  90D8               	bcf	status,0,c
 22996  00FEB6  376A               	rlcf	___fttol@lval& (0+255),f,b
 22997  00FEB8  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 22998  00FEBA  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 22999  00FEBC  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 23000  00FEBE  076E               	decf	___fttol@exp1& (0+255),f,b
 23001  00FEC0                     l3700:
 23002                           
 23003                           ; BSR set to: 0
 23004                           
 23005                           ; BSR set to: 0
 23006  00FEC0  516E               	movf	___fttol@exp1& (0+255),w,b
 23007  00FEC2  A4D8               	btfss	status,2,c
 23008  00FEC4  D7F7               	goto	l3701
 23009  00FEC6                     u19470:
 23010                           
 23011                           ; BSR set to: 0
 23012                           
 23013                           ; BSR set to: 0
 23014                           
 23015                           ; BSR set to: 0
 23016  00FEC6  5169               	movf	___fttol@sign1& (0+255),w,b
 23017  00FEC8  B4D8               	btfsc	status,2,c
 23018  00FECA  D008               	goto	l3703
 23019                           
 23020                           ; BSR set to: 0
 23021  00FECC  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
 23022  00FECE  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
 23023  00FED0  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
 23024  00FED2  6D6A               	negf	___fttol@lval& (0+255),b
 23025  00FED4  0E00               	movlw	0
 23026  00FED6  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 23027  00FED8  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 23028  00FEDA  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 23029  00FEDC                     l3703:
 23030                           
 23031                           ; BSR set to: 0
 23032                           
 23033                           ; BSR set to: 0
 23034  00FEDC  C06A  F060         	movff	___fttol@lval,?___fttol
 23035  00FEE0  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
 23036  00FEE4  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
 23037  00FEE8  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
 23038  00FEEC  0012               	return	
 23039  00FEEE                     __end_of___fttol:
 23040                           	opt stack 0
 23041                           tblptru	equ	0xFF8
 23042                           tblptrh	equ	0xFF7
 23043                           tblptrl	equ	0xFF6
 23044                           tablat	equ	0xFF5
 23045                           prodh	equ	0xFF4
 23046                           prodl	equ	0xFF3
 23047                           intcon	equ	0xFF2
 23048                           intcon2	equ	0xFF1
 23049                           intcon3	equ	0xFF0
 23050                           postinc0	equ	0xFEE
 23051                           wreg	equ	0xFE8
 23052                           indf1	equ	0xFE7
 23053                           postinc1	equ	0xFE6
 23054                           postdec1	equ	0xFE5
 23055                           plusw1	equ	0xFE3
 23056                           fsr1h	equ	0xFE2
 23057                           fsr1l	equ	0xFE1
 23058                           indf2	equ	0xFDF
 23059                           postinc2	equ	0xFDE
 23060                           postdec2	equ	0xFDD
 23061                           plusw2	equ	0xFDB
 23062                           fsr2h	equ	0xFDA
 23063                           fsr2l	equ	0xFD9
 23064                           status	equ	0xFD8
 23065                           
 23066 ;; *************** function ___altoft *****************
 23067 ;; Defined at:
 23068 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\altoft.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;  c               4   14[BANK0 ] long 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;  sign            1   23[BANK0 ] unsigned char 
 23073 ;;  exp             1   22[BANK0 ] unsigned char 
 23074 ;; Return value:  Size  Location     Type
 23075 ;;                  3   14[BANK0 ] float 
 23076 ;; Registers used:
 23077 ;;		wreg, status,2, status,0, cstack
 23078 ;; Tracked objects:
 23079 ;;		On entry : 0/0
 23080 ;;		On exit  : 0/0
 23081 ;;		Unchanged: 0/0
 23082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23086 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23087 ;;Total ram usage:       10 bytes
 23088 ;; Hardware stack levels used:    1
 23089 ;; Hardware stack levels required when called:   11
 23090 ;; This function calls:
 23091 ;;		___ftpack
 23092 ;; This function is called by:
 23093 ;;		__display_efficiency
 23094 ;; This function uses a non-reentrant model
 23095 ;;
 23096                           
 23097                           	psect	text106
 23098  011F1A                     __ptext106:
 23099                           	opt stack 0
 23100  011F1A                     ___altoft:
 23101                           	opt stack 17
 23102                           
 23103                           ; BSR set to: 0
 23104                           ;incstack = 0
 23105  011F1A  0E00               	movlw	0
 23106  011F1C  0100               	movlb	0	; () banked
 23107  011F1E  6F77               	movwf	___altoft@sign& (0+255),b
 23108  011F20  0E8E               	movlw	142
 23109  011F22  6F76               	movwf	___altoft@exp& (0+255),b
 23110                           
 23111                           ; BSR set to: 0
 23112  011F24  AF71               	btfss	(___altoft@c+3)& (0+255),7,b
 23113  011F26  D011               	goto	l3417
 23114                           
 23115                           ; BSR set to: 0
 23116  011F28  1F71               	comf	(___altoft@c+3)& (0+255),f,b
 23117  011F2A  1F70               	comf	(___altoft@c+2)& (0+255),f,b
 23118  011F2C  1F6F               	comf	(___altoft@c+1)& (0+255),f,b
 23119  011F2E  6D6E               	negf	___altoft@c& (0+255),b
 23120  011F30  0E00               	movlw	0
 23121  011F32  236F               	addwfc	(___altoft@c+1)& (0+255),f,b
 23122  011F34  2370               	addwfc	(___altoft@c+2)& (0+255),f,b
 23123  011F36  2371               	addwfc	(___altoft@c+3)& (0+255),f,b
 23124                           
 23125                           ; BSR set to: 0
 23126  011F38  0E01               	movlw	1
 23127  011F3A  6F77               	movwf	___altoft@sign& (0+255),b
 23128                           
 23129                           ; BSR set to: 0
 23130  011F3C  D006               	goto	l3417
 23131  011F3E                     
 23132                           ; BSR set to: 0
 23133                           
 23134                           ; BSR set to: 0
 23135  011F3E  90D8               	bcf	status,0,c
 23136  011F40  3371               	rrcf	(___altoft@c+3)& (0+255),f,b
 23137  011F42  3370               	rrcf	(___altoft@c+2)& (0+255),f,b
 23138  011F44  336F               	rrcf	(___altoft@c+1)& (0+255),f,b
 23139  011F46  336E               	rrcf	___altoft@c& (0+255),f,b
 23140  011F48  2B76               	incf	___altoft@exp& (0+255),f,b
 23141  011F4A                     l3417:
 23142                           
 23143                           ; BSR set to: 0
 23144                           
 23145                           ; BSR set to: 0
 23146  011F4A  0E00               	movlw	0
 23147  011F4C  156E               	andwf	___altoft@c& (0+255),w,b
 23148  011F4E  6F72               	movwf	??___altoft& (0+255),b
 23149  011F50  0E00               	movlw	0
 23150  011F52  156F               	andwf	(___altoft@c+1)& (0+255),w,b
 23151  011F54  6F73               	movwf	(??___altoft+1)& (0+255),b
 23152  011F56  0E00               	movlw	0
 23153  011F58  1570               	andwf	(___altoft@c+2)& (0+255),w,b
 23154  011F5A  6F74               	movwf	(??___altoft+2)& (0+255),b
 23155  011F5C  0EFF               	movlw	255
 23156  011F5E  1571               	andwf	(___altoft@c+3)& (0+255),w,b
 23157  011F60  6F75               	movwf	(??___altoft+3)& (0+255),b
 23158  011F62  5172               	movf	??___altoft& (0+255),w,b
 23159  011F64  1173               	iorwf	(??___altoft+1)& (0+255),w,b
 23160  011F66  1174               	iorwf	(??___altoft+2)& (0+255),w,b
 23161  011F68  1175               	iorwf	(??___altoft+3)& (0+255),w,b
 23162  011F6A  A4D8               	btfss	status,2,c
 23163  011F6C  D7E8               	goto	l3418
 23164                           
 23165                           ; BSR set to: 0
 23166                           
 23167                           ; BSR set to: 0
 23168  011F6E  C06E  F060         	movff	___altoft@c,___ftpack@arg
 23169  011F72  C06F  F061         	movff	___altoft@c+1,___ftpack@arg+1
 23170  011F76  C070  F062         	movff	___altoft@c+2,___ftpack@arg+2
 23171  011F7A  C076  F063         	movff	___altoft@exp,___ftpack@exp
 23172  011F7E  C077  F064         	movff	___altoft@sign,___ftpack@sign
 23173  011F82  EC28  F088         	call	___ftpack	;wreg free
 23174  011F86  C060  F06E         	movff	?___ftpack,?___altoft
 23175  011F8A  C061  F06F         	movff	?___ftpack+1,?___altoft+1
 23176  011F8E  C062  F070         	movff	?___ftpack+2,?___altoft+2
 23177  011F92  0012               	return	
 23178  011F94                     __end_of___altoft:
 23179                           	opt stack 0
 23180                           tblptru	equ	0xFF8
 23181                           tblptrh	equ	0xFF7
 23182                           tblptrl	equ	0xFF6
 23183                           tablat	equ	0xFF5
 23184                           prodh	equ	0xFF4
 23185                           prodl	equ	0xFF3
 23186                           intcon	equ	0xFF2
 23187                           intcon2	equ	0xFF1
 23188                           intcon3	equ	0xFF0
 23189                           postinc0	equ	0xFEE
 23190                           wreg	equ	0xFE8
 23191                           indf1	equ	0xFE7
 23192                           postinc1	equ	0xFE6
 23193                           postdec1	equ	0xFE5
 23194                           plusw1	equ	0xFE3
 23195                           fsr1h	equ	0xFE2
 23196                           fsr1l	equ	0xFE1
 23197                           indf2	equ	0xFDF
 23198                           postinc2	equ	0xFDE
 23199                           postdec2	equ	0xFDD
 23200                           plusw2	equ	0xFDB
 23201                           fsr2h	equ	0xFDA
 23202                           fsr2l	equ	0xFD9
 23203                           status	equ	0xFD8
 23204                           
 23205 ;; *************** function ___ftpack *****************
 23206 ;; Defined at:
 23207 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\float.c"
 23208 ;; Parameters:    Size  Location     Type
 23209 ;;  arg             3    0[BANK0 ] unsigned um
 23210 ;;  exp             1    3[BANK0 ] unsigned char 
 23211 ;;  sign            1    4[BANK0 ] unsigned char 
 23212 ;; Auto vars:     Size  Location     Type
 23213 ;;		None
 23214 ;; Return value:  Size  Location     Type
 23215 ;;                  3    0[BANK0 ] float 
 23216 ;; Registers used:
 23217 ;;		wreg, status,2, status,0
 23218 ;; Tracked objects:
 23219 ;;		On entry : 0/0
 23220 ;;		On exit  : 0/0
 23221 ;;		Unchanged: 0/0
 23222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23223 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23225 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23226 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23227 ;;Total ram usage:        8 bytes
 23228 ;; Hardware stack levels used:    1
 23229 ;; Hardware stack levels required when called:   10
 23230 ;; This function calls:
 23231 ;;		Nothing
 23232 ;; This function is called by:
 23233 ;;		___altoft
 23234 ;; This function uses a non-reentrant model
 23235 ;;
 23236                           
 23237                           	psect	text107
 23238  011050                     __ptext107:
 23239                           	opt stack 0
 23240  011050                     ___ftpack:
 23241                           	opt stack 17
 23242                           
 23243                           ;incstack = 0
 23244  011050  0100               	movlb	0	; () banked
 23245  011052  5163               	movf	___ftpack@exp& (0+255),w,b
 23246  011054  B4D8               	btfsc	status,2,c
 23247  011056  D005               	goto	u18350
 23248                           
 23249                           ; BSR set to: 0
 23250  011058  5160               	movf	___ftpack@arg& (0+255),w,b
 23251  01105A  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 23252  01105C  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 23253  01105E  A4D8               	btfss	status,2,c
 23254  011060  D00C               	goto	l3592
 23255  011062                     u18350:
 23256                           
 23257                           ; BSR set to: 0
 23258                           
 23259                           ; BSR set to: 0
 23260  011062  0E00               	movlw	0
 23261  011064  6F60               	movwf	?___ftpack& (0+255),b
 23262  011066  0E00               	movlw	0
 23263  011068  6F61               	movwf	(?___ftpack+1)& (0+255),b
 23264  01106A  0E00               	movlw	0
 23265  01106C  6F62               	movwf	(?___ftpack+2)& (0+255),b
 23266                           
 23267                           ; BSR set to: 0
 23268  01106E  0012               	return	
 23269  011070                     
 23270                           ; BSR set to: 0
 23271                           
 23272                           ; BSR set to: 0
 23273  011070  2B63               	incf	___ftpack@exp& (0+255),f,b
 23274  011072  90D8               	bcf	status,0,c
 23275  011074  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23276  011076  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23277  011078  3360               	rrcf	___ftpack@arg& (0+255),f,b
 23278  01107A                     l3592:
 23279                           
 23280                           ; BSR set to: 0
 23281                           
 23282                           ; BSR set to: 0
 23283  01107A  0E00               	movlw	0
 23284  01107C  1560               	andwf	___ftpack@arg& (0+255),w,b
 23285  01107E  6F65               	movwf	??___ftpack& (0+255),b
 23286  011080  0E00               	movlw	0
 23287  011082  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23288  011084  6F66               	movwf	(??___ftpack+1)& (0+255),b
 23289  011086  0EFE               	movlw	254
 23290  011088  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23291  01108A  6F67               	movwf	(??___ftpack+2)& (0+255),b
 23292  01108C  5165               	movf	??___ftpack& (0+255),w,b
 23293  01108E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 23294  011090  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 23295  011092  B4D8               	btfsc	status,2,c
 23296  011094  D00C               	goto	l3595
 23297  011096  D7EC               	goto	l3593
 23298  011098                     
 23299                           ; BSR set to: 0
 23300                           
 23301                           ; BSR set to: 0
 23302  011098  2B63               	incf	___ftpack@exp& (0+255),f,b
 23303                           
 23304                           ; BSR set to: 0
 23305  01109A  0E01               	movlw	1
 23306  01109C  2760               	addwf	___ftpack@arg& (0+255),f,b
 23307  01109E  0E00               	movlw	0
 23308  0110A0  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 23309  0110A2  0E00               	movlw	0
 23310  0110A4  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 23311  0110A6  90D8               	bcf	status,0,c
 23312  0110A8  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23313  0110AA  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23314  0110AC  3360               	rrcf	___ftpack@arg& (0+255),f,b
 23315  0110AE                     l3595:
 23316                           
 23317                           ; BSR set to: 0
 23318                           
 23319                           ; BSR set to: 0
 23320  0110AE  0E00               	movlw	0
 23321  0110B0  1560               	andwf	___ftpack@arg& (0+255),w,b
 23322  0110B2  6F65               	movwf	??___ftpack& (0+255),b
 23323  0110B4  0E00               	movlw	0
 23324  0110B6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23325  0110B8  6F66               	movwf	(??___ftpack+1)& (0+255),b
 23326  0110BA  0EFF               	movlw	255
 23327  0110BC  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23328  0110BE  6F67               	movwf	(??___ftpack+2)& (0+255),b
 23329  0110C0  5165               	movf	??___ftpack& (0+255),w,b
 23330  0110C2  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 23331  0110C4  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 23332  0110C6  B4D8               	btfsc	status,2,c
 23333  0110C8  D006               	goto	l3598
 23334  0110CA  D7E6               	goto	l3596
 23335  0110CC                     
 23336                           ; BSR set to: 0
 23337                           
 23338                           ; BSR set to: 0
 23339  0110CC  0763               	decf	___ftpack@exp& (0+255),f,b
 23340  0110CE  90D8               	bcf	status,0,c
 23341  0110D0  3760               	rlcf	___ftpack@arg& (0+255),f,b
 23342  0110D2  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 23343  0110D4  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 23344  0110D6                     l3598:
 23345                           
 23346                           ; BSR set to: 0
 23347                           
 23348                           ; BSR set to: 0
 23349  0110D6  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 23350  0110D8  D003               	goto	u18390
 23351                           
 23352                           ; BSR set to: 0
 23353  0110DA  0E02               	movlw	2
 23354  0110DC  6163               	cpfslt	___ftpack@exp& (0+255),b
 23355  0110DE  D7F6               	goto	l3599
 23356  0110E0                     u18390:
 23357                           
 23358                           ; BSR set to: 0
 23359                           
 23360                           ; BSR set to: 0
 23361  0110E0  A163               	btfss	___ftpack@exp& (0+255),0,b
 23362                           
 23363                           ; BSR set to: 0
 23364  0110E2  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 23365                           
 23366                           ; BSR set to: 0
 23367                           
 23368                           ; BSR set to: 0
 23369  0110E4  90D8               	bcf	status,0,c
 23370  0110E6  3363               	rrcf	___ftpack@exp& (0+255),f,b
 23371  0110E8  5163               	movf	___ftpack@exp& (0+255),w,b
 23372  0110EA  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 23373                           
 23374                           ; BSR set to: 0
 23375  0110EC  5164               	movf	___ftpack@sign& (0+255),w,b
 23376  0110EE  A4D8               	btfss	status,2,c
 23377                           
 23378                           ; BSR set to: 0
 23379  0110F0  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 23380                           
 23381                           ; BSR set to: 0
 23382                           
 23383                           ; BSR set to: 0
 23384  0110F2  C060  F060         	movff	___ftpack@arg,?___ftpack
 23385  0110F6  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 23386  0110FA  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 23387  0110FE  0012               	return	
 23388  011100                     __end_of___ftpack:
 23389                           	opt stack 0
 23390                           tblptru	equ	0xFF8
 23391                           tblptrh	equ	0xFF7
 23392                           tblptrl	equ	0xFF6
 23393                           tablat	equ	0xFF5
 23394                           prodh	equ	0xFF4
 23395                           prodl	equ	0xFF3
 23396                           intcon	equ	0xFF2
 23397                           intcon2	equ	0xFF1
 23398                           intcon3	equ	0xFF0
 23399                           postinc0	equ	0xFEE
 23400                           wreg	equ	0xFE8
 23401                           indf1	equ	0xFE7
 23402                           postinc1	equ	0xFE6
 23403                           postdec1	equ	0xFE5
 23404                           plusw1	equ	0xFE3
 23405                           fsr1h	equ	0xFE2
 23406                           fsr1l	equ	0xFE1
 23407                           indf2	equ	0xFDF
 23408                           postinc2	equ	0xFDE
 23409                           postdec2	equ	0xFDD
 23410                           plusw2	equ	0xFDB
 23411                           fsr2h	equ	0xFDA
 23412                           fsr2l	equ	0xFD9
 23413                           status	equ	0xFD8
 23414                           
 23415 ;; *************** function ___aldiv *****************
 23416 ;; Defined at:
 23417 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 23418 ;; Parameters:    Size  Location     Type
 23419 ;;  dividend        4    0[BANK0 ] long 
 23420 ;;  divisor         4    4[BANK0 ] long 
 23421 ;; Auto vars:     Size  Location     Type
 23422 ;;  quotient        4   10[BANK0 ] long 
 23423 ;;  sign            1    9[BANK0 ] unsigned char 
 23424 ;;  counter         1    8[BANK0 ] unsigned char 
 23425 ;; Return value:  Size  Location     Type
 23426 ;;                  4    0[BANK0 ] long 
 23427 ;; Registers used:
 23428 ;;		wreg, status,2, status,0
 23429 ;; Tracked objects:
 23430 ;;		On entry : 0/0
 23431 ;;		On exit  : 0/0
 23432 ;;		Unchanged: 0/0
 23433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23434 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23435 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23437 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23438 ;;Total ram usage:       14 bytes
 23439 ;; Hardware stack levels used:    1
 23440 ;; Hardware stack levels required when called:   10
 23441 ;; This function calls:
 23442 ;;		Nothing
 23443 ;; This function is called by:
 23444 ;;		__display_efficiency
 23445 ;;		__get_input_power
 23446 ;;		_log_generate_entry
 23447 ;; This function uses a non-reentrant model
 23448 ;;
 23449                           
 23450                           	psect	text108
 23451  010984                     __ptext108:
 23452                           	opt stack 0
 23453  010984                     ___aldiv:
 23454                           	opt stack 18
 23455                           
 23456                           ; BSR set to: 0
 23457                           ;incstack = 0
 23458  010984  0E00               	movlw	0
 23459  010986  0100               	movlb	0	; () banked
 23460  010988  6F69               	movwf	___aldiv@sign& (0+255),b
 23461                           
 23462                           ; BSR set to: 0
 23463  01098A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23464  01098C  D00A               	goto	l3388
 23465                           
 23466                           ; BSR set to: 0
 23467  01098E  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 23468  010990  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 23469  010992  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 23470  010994  6D64               	negf	___aldiv@divisor& (0+255),b
 23471  010996  0E00               	movlw	0
 23472  010998  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 23473  01099A  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 23474  01099C  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 23475                           
 23476                           ; BSR set to: 0
 23477  01099E  0E01               	movlw	1
 23478  0109A0  6F69               	movwf	___aldiv@sign& (0+255),b
 23479  0109A2                     l3388:
 23480                           
 23481                           ; BSR set to: 0
 23482                           
 23483                           ; BSR set to: 0
 23484  0109A2  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 23485  0109A4  D00A               	goto	l3389
 23486                           
 23487                           ; BSR set to: 0
 23488  0109A6  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 23489  0109A8  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 23490  0109AA  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 23491  0109AC  6D60               	negf	___aldiv@dividend& (0+255),b
 23492  0109AE  0E00               	movlw	0
 23493  0109B0  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 23494  0109B2  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 23495  0109B4  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 23496                           
 23497                           ; BSR set to: 0
 23498  0109B6  0E01               	movlw	1
 23499  0109B8  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 23500  0109BA                     l3389:
 23501                           
 23502                           ; BSR set to: 0
 23503                           
 23504                           ; BSR set to: 0
 23505  0109BA  0E00               	movlw	0
 23506  0109BC  6F6A               	movwf	___aldiv@quotient& (0+255),b
 23507  0109BE  0E00               	movlw	0
 23508  0109C0  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 23509  0109C2  0E00               	movlw	0
 23510  0109C4  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 23511  0109C6  0E00               	movlw	0
 23512  0109C8  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 23513                           
 23514                           ; BSR set to: 0
 23515  0109CA  5164               	movf	___aldiv@divisor& (0+255),w,b
 23516  0109CC  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 23517  0109CE  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 23518  0109D0  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 23519  0109D2  B4D8               	btfsc	status,2,c
 23520  0109D4  D02A               	goto	l3396
 23521                           
 23522                           ; BSR set to: 0
 23523  0109D6  0E01               	movlw	1
 23524  0109D8  6F68               	movwf	___aldiv@counter& (0+255),b
 23525  0109DA  D006               	goto	l3391
 23526  0109DC                     
 23527                           ; BSR set to: 0
 23528                           
 23529                           ; BSR set to: 0
 23530  0109DC  90D8               	bcf	status,0,c
 23531  0109DE  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 23532  0109E0  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 23533  0109E2  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 23534  0109E4  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 23535  0109E6  2B68               	incf	___aldiv@counter& (0+255),f,b
 23536  0109E8                     l3391:
 23537                           
 23538                           ; BSR set to: 0
 23539                           
 23540                           ; BSR set to: 0
 23541  0109E8  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 23542  0109EA  D7F8               	goto	l3392
 23543  0109EC                     u19360:
 23544                           
 23545                           ; BSR set to: 0
 23546                           
 23547                           ; BSR set to: 0
 23548                           
 23549                           ; BSR set to: 0
 23550  0109EC  90D8               	bcf	status,0,c
 23551  0109EE  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 23552  0109F0  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 23553  0109F2  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 23554  0109F4  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 23555                           
 23556                           ; BSR set to: 0
 23557  0109F6  5164               	movf	___aldiv@divisor& (0+255),w,b
 23558  0109F8  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 23559  0109FA  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23560  0109FC  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 23561  0109FE  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23562  010A00  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 23563  010A02  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23564  010A04  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 23565  010A06  A0D8               	btfss	status,0,c
 23566  010A08  D009               	goto	l3395
 23567                           
 23568                           ; BSR set to: 0
 23569  010A0A  5164               	movf	___aldiv@divisor& (0+255),w,b
 23570  010A0C  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 23571  010A0E  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 23572  010A10  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 23573  010A12  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 23574  010A14  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 23575  010A16  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 23576  010A18  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 23577                           
 23578                           ; BSR set to: 0
 23579  010A1A  816A               	bsf	___aldiv@quotient& (0+255),0,b
 23580  010A1C                     l3395:
 23581                           
 23582                           ; BSR set to: 0
 23583                           
 23584                           ; BSR set to: 0
 23585  010A1C  90D8               	bcf	status,0,c
 23586  010A1E  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 23587  010A20  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 23588  010A22  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 23589  010A24  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 23590                           
 23591                           ; BSR set to: 0
 23592  010A26  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 23593  010A28  D7E1               	goto	u19360
 23594  010A2A                     l3396:
 23595                           
 23596                           ; BSR set to: 0
 23597                           
 23598                           ; BSR set to: 0
 23599                           
 23600                           ; BSR set to: 0
 23601  010A2A  5169               	movf	___aldiv@sign& (0+255),w,b
 23602  010A2C  B4D8               	btfsc	status,2,c
 23603  010A2E  D008               	goto	l3397
 23604                           
 23605                           ; BSR set to: 0
 23606  010A30  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 23607  010A32  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 23608  010A34  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 23609  010A36  6D6A               	negf	___aldiv@quotient& (0+255),b
 23610  010A38  0E00               	movlw	0
 23611  010A3A  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 23612  010A3C  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 23613  010A3E  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 23614  010A40                     l3397:
 23615                           
 23616                           ; BSR set to: 0
 23617                           
 23618                           ; BSR set to: 0
 23619  010A40  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 23620  010A44  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 23621  010A48  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 23622  010A4C  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 23623  010A50  0012               	return	
 23624  010A52                     __end_of___aldiv:
 23625                           	opt stack 0
 23626                           tblptru	equ	0xFF8
 23627                           tblptrh	equ	0xFF7
 23628                           tblptrl	equ	0xFF6
 23629                           tablat	equ	0xFF5
 23630                           prodh	equ	0xFF4
 23631                           prodl	equ	0xFF3
 23632                           intcon	equ	0xFF2
 23633                           intcon2	equ	0xFF1
 23634                           intcon3	equ	0xFF0
 23635                           postinc0	equ	0xFEE
 23636                           wreg	equ	0xFE8
 23637                           indf1	equ	0xFE7
 23638                           postinc1	equ	0xFE6
 23639                           postdec1	equ	0xFE5
 23640                           plusw1	equ	0xFE3
 23641                           fsr1h	equ	0xFE2
 23642                           fsr1l	equ	0xFE1
 23643                           indf2	equ	0xFDF
 23644                           postinc2	equ	0xFDE
 23645                           postdec2	equ	0xFDD
 23646                           plusw2	equ	0xFDB
 23647                           fsr2h	equ	0xFDA
 23648                           fsr2l	equ	0xFD9
 23649                           status	equ	0xFD8
 23650                           
 23651 ;; *************** function __display_clear *****************
 23652 ;; Defined at:
 23653 ;;		line 28 in file "display.c"
 23654 ;; Parameters:    Size  Location     Type
 23655 ;;		None
 23656 ;; Auto vars:     Size  Location     Type
 23657 ;;  col             1    3[BANK0 ] unsigned char 
 23658 ;;  row             1    2[BANK0 ] unsigned char 
 23659 ;; Return value:  Size  Location     Type
 23660 ;;                  1    wreg      void 
 23661 ;; Registers used:
 23662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23663 ;; Tracked objects:
 23664 ;;		On entry : 0/0
 23665 ;;		On exit  : 0/0
 23666 ;;		Unchanged: 0/0
 23667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23670 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23671 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23672 ;;Total ram usage:        4 bytes
 23673 ;; Hardware stack levels used:    1
 23674 ;; Hardware stack levels required when called:   10
 23675 ;; This function calls:
 23676 ;;		Nothing
 23677 ;; This function is called by:
 23678 ;;		_display_prepare
 23679 ;; This function uses a non-reentrant model
 23680 ;;
 23681                           
 23682                           	psect	text109
 23683  01301C                     __ptext109:
 23684                           	opt stack 0
 23685  01301C                     __display_clear:
 23686                           	opt stack 19
 23687                           
 23688                           ;display.c: 30: uint8_t row;;display.c: 31: uint8_t col;;display.c: 32: for(row=0;row<4;
      +                          ++row)
 23689                           
 23690                           ; BSR set to: 0
 23691                           ;incstack = 0
 23692  01301C  0E00               	movlw	0
 23693  01301E  0100               	movlb	0	; () banked
 23694  013020  6F62               	movwf	__display_clear@row& (0+255),b
 23695  013022                     l21295:
 23696                           
 23697                           ; BSR set to: 0
 23698  013022  0E03               	movlw	3
 23699  013024  6562               	cpfsgt	__display_clear@row& (0+255),b
 23700  013026  D001               	goto	l1906
 23701  013028  0012               	return	
 23702  01302A                     l1906:
 23703                           
 23704                           ; BSR set to: 0
 23705                           ;display.c: 33: {;display.c: 34: for(col=0;col<20;++col)
 23706                           
 23707                           ; BSR set to: 0
 23708  01302A  0E00               	movlw	0
 23709  01302C  6F63               	movwf	__display_clear@col& (0+255),b
 23710  01302E                     l21301:
 23711                           
 23712                           ; BSR set to: 0
 23713  01302E  0E13               	movlw	19
 23714  013030  6563               	cpfsgt	__display_clear@col& (0+255),b
 23715  013032  D001               	goto	l1908
 23716  013034  D016               	goto	u20490
 23717  013036                     l1908:
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;display.c: 35: {;display.c: 36: display_content[row][col] = ' ';
 23721                           
 23722                           ; BSR set to: 0
 23723  013036  5162               	movf	__display_clear@row& (0+255),w,b
 23724  013038  0D14               	mullw	20
 23725  01303A  0E54               	movlw	low _display_content
 23726  01303C  6F60               	movwf	??__display_clear& (0+255),b
 23727  01303E  0E03               	movlw	high _display_content
 23728  013040  6F61               	movwf	(??__display_clear+1)& (0+255),b
 23729  013042  50F3               	movf	prodl,w,c
 23730  013044  2760               	addwf	??__display_clear& (0+255),f,b
 23731  013046  50F4               	movf	prodh,w,c
 23732  013048  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 23733  01304A  5163               	movf	__display_clear@col& (0+255),w,b
 23734  01304C  0D01               	mullw	1
 23735  01304E  50F3               	movf	prodl,w,c
 23736  013050  2560               	addwf	??__display_clear& (0+255),w,b
 23737  013052  6ED9               	movwf	fsr2l,c
 23738  013054  50F4               	movf	prodh,w,c
 23739  013056  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 23740  013058  6EDA               	movwf	fsr2h,c
 23741  01305A  0E20               	movlw	32
 23742  01305C  6EDF               	movwf	indf2,c
 23743                           
 23744                           ; BSR set to: 0
 23745  01305E  2B63               	incf	__display_clear@col& (0+255),f,b
 23746  013060  D7E6               	goto	l21301
 23747  013062                     u20490:
 23748                           
 23749                           ; BSR set to: 0
 23750                           
 23751                           ; BSR set to: 0
 23752  013062  2B62               	incf	__display_clear@row& (0+255),f,b
 23753  013064  D7DE               	goto	l21295
 23754  013066                     __end_of__display_clear:
 23755                           	opt stack 0
 23756                           tblptru	equ	0xFF8
 23757                           tblptrh	equ	0xFF7
 23758                           tblptrl	equ	0xFF6
 23759                           tablat	equ	0xFF5
 23760                           prodh	equ	0xFF4
 23761                           prodl	equ	0xFF3
 23762                           intcon	equ	0xFF2
 23763                           intcon2	equ	0xFF1
 23764                           intcon3	equ	0xFF0
 23765                           postinc0	equ	0xFEE
 23766                           wreg	equ	0xFE8
 23767                           indf1	equ	0xFE7
 23768                           postinc1	equ	0xFE6
 23769                           postdec1	equ	0xFE5
 23770                           plusw1	equ	0xFE3
 23771                           fsr1h	equ	0xFE2
 23772                           fsr1l	equ	0xFE1
 23773                           indf2	equ	0xFDF
 23774                           postinc2	equ	0xFDE
 23775                           postdec2	equ	0xFDD
 23776                           plusw2	equ	0xFDB
 23777                           fsr2h	equ	0xFDA
 23778                           fsr2l	equ	0xFD9
 23779                           status	equ	0xFD8
 23780                           
 23781 ;; *************** function __display_charger *****************
 23782 ;; Defined at:
 23783 ;;		line 405 in file "display.c"
 23784 ;; Parameters:    Size  Location     Type
 23785 ;;		None
 23786 ;; Auto vars:     Size  Location     Type
 23787 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 23788 ;;  header         21   15[BANK1 ] const unsigned char [21]
 23789 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 23790 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 23791 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 23792 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 23793 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 23794 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 23795 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 23796 ;;  cntr            1  142[BANK1 ] unsigned char 
 23797 ;; Return value:  Size  Location     Type
 23798 ;;                  1    wreg      void 
 23799 ;; Registers used:
 23800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23801 ;; Tracked objects:
 23802 ;;		On entry : 0/0
 23803 ;;		On exit  : 0/0
 23804 ;;		Unchanged: 0/0
 23805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23807 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23808 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23809 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23810 ;;Total ram usage:      144 bytes
 23811 ;; Hardware stack levels used:    1
 23812 ;; Hardware stack levels required when called:   14
 23813 ;; This function calls:
 23814 ;;		__display_itoa
 23815 ;;		_buck_get_dutycycle
 23816 ;;		_buck_get_mode
 23817 ;; This function is called by:
 23818 ;;		_display_prepare
 23819 ;; This function uses a non-reentrant model
 23820 ;;
 23821                           
 23822                           	psect	text110
 23823  00C782                     __ptext110:
 23824                           	opt stack 0
 23825  00C782                     __display_charger:
 23826                           	opt stack 15
 23827                           
 23828                           ;display.c: 407: uint8_t cntr;;display.c: 408: const char header[] = "MPPT Charger Detai
      +                          ls";
 23829                           
 23830                           ; BSR set to: 0
 23831                           ;incstack = 0
 23832  00C782  0EA0               	movlw	low __display_charger@F7255
 23833  00C784  6EF6               	movwf	tblptrl,c
 23834  00C786                     	if	1	;There is more than 1 active tblptr byte
 23835  00C786  0EA0               	movlw	high __display_charger@F7255
 23836  00C788  6EF7               	movwf	tblptrh,c
 23837  00C78A                     	endif
 23838  00C78A                     	if	1	;There are 3 active tblptr bytes
 23839  00C78A  0E00               	movlw	low (__display_charger@F7255 shr (0+16))
 23840  00C78C  6EF8               	movwf	tblptru,c
 23841  00C78E                     	endif
 23842  00C78E  EE21  F00F         	lfsr	2,__display_charger@header
 23843  00C792  0E14               	movlw	20
 23844  00C794                     u21100:
 23845  00C794  0009               	tblrd		*+
 23846  00C796  CFF5 FFDE          	movff	tablat,postinc2
 23847  00C79A  06E8               	decf	wreg,f,c
 23848  00C79C  E2FB               	bc	u21100
 23849                           
 23850                           ;display.c: 409: const char supply_on[] = "Charger supply on";
 23851  00C79E  0E90               	movlw	low __display_charger@F7257
 23852  00C7A0  6EF6               	movwf	tblptrl,c
 23853  00C7A2                     	if	1	;There is more than 1 active tblptr byte
 23854  00C7A2  0EA1               	movlw	high __display_charger@F7257
 23855  00C7A4  6EF7               	movwf	tblptrh,c
 23856  00C7A6                     	endif
 23857  00C7A6                     	if	1	;There are 3 active tblptr bytes
 23858  00C7A6  0E00               	movlw	low (__display_charger@F7257 shr (0+16))
 23859  00C7A8  6EF8               	movwf	tblptru,c
 23860  00C7AA                     	endif
 23861  00C7AA  EE21  F060         	lfsr	2,__display_charger@supply_on
 23862  00C7AE  0E11               	movlw	17
 23863  00C7B0                     u21110:
 23864  00C7B0  0009               	tblrd		*+
 23865  00C7B2  CFF5 FFDE          	movff	tablat,postinc2
 23866  00C7B6  06E8               	decf	wreg,f,c
 23867  00C7B8  E2FB               	bc	u21110
 23868                           
 23869                           ;display.c: 410: const char supply_off[] = "Charger supply off";
 23870  00C7BA  0E7D               	movlw	low __display_charger@F7259
 23871  00C7BC  6EF6               	movwf	tblptrl,c
 23872  00C7BE                     	if	1	;There is more than 1 active tblptr byte
 23873  00C7BE  0EA1               	movlw	high __display_charger@F7259
 23874  00C7C0  6EF7               	movwf	tblptrh,c
 23875  00C7C2                     	endif
 23876  00C7C2                     	if	1	;There are 3 active tblptr bytes
 23877  00C7C2  0E00               	movlw	low (__display_charger@F7259 shr (0+16))
 23878  00C7C4  6EF8               	movwf	tblptru,c
 23879  00C7C6                     	endif
 23880  00C7C6  EE21  F04D         	lfsr	2,__display_charger@supply_off
 23881  00C7CA  0E12               	movlw	18
 23882  00C7CC                     u21120:
 23883  00C7CC  0009               	tblrd		*+
 23884  00C7CE  CFF5 FFDE          	movff	tablat,postinc2
 23885  00C7D2  06E8               	decf	wreg,f,c
 23886  00C7D4  E2FB               	bc	u21120
 23887                           
 23888                           ;display.c: 411: const char fan_on[] = "Fan on";
 23889  00C7D6  0E0F               	movlw	low __display_charger@F7261
 23890  00C7D8  6EF6               	movwf	tblptrl,c
 23891  00C7DA                     	if	1	;There is more than 1 active tblptr byte
 23892  00C7DA  0EA3               	movlw	high __display_charger@F7261
 23893  00C7DC  6EF7               	movwf	tblptrh,c
 23894  00C7DE                     	endif
 23895  00C7DE                     	if	1	;There are 3 active tblptr bytes
 23896  00C7DE  0E00               	movlw	low (__display_charger@F7261 shr (0+16))
 23897  00C7E0  6EF8               	movwf	tblptru,c
 23898  00C7E2                     	endif
 23899  00C7E2  EE21  F008         	lfsr	2,__display_charger@fan_on
 23900  00C7E6  0E06               	movlw	6
 23901  00C7E8                     u21130:
 23902  00C7E8  0009               	tblrd		*+
 23903  00C7EA  CFF5 FFDE          	movff	tablat,postinc2
 23904  00C7EE  06E8               	decf	wreg,f,c
 23905  00C7F0  E2FB               	bc	u21130
 23906                           
 23907                           ;display.c: 412: const char fan_off[] = "Fan off";
 23908  00C7F2  0EF7               	movlw	low __display_charger@F7263
 23909  00C7F4  6EF6               	movwf	tblptrl,c
 23910  00C7F6                     	if	1	;There is more than 1 active tblptr byte
 23911  00C7F6  0EA2               	movlw	high __display_charger@F7263
 23912  00C7F8  6EF7               	movwf	tblptrh,c
 23913  00C7FA                     	endif
 23914  00C7FA                     	if	1	;There are 3 active tblptr bytes
 23915  00C7FA  0E00               	movlw	low (__display_charger@F7263 shr (0+16))
 23916  00C7FC  6EF8               	movwf	tblptru,c
 23917  00C7FE                     	endif
 23918  00C7FE  EE21  F000         	lfsr	2,__display_charger@fan_off
 23919  00C802  0E07               	movlw	7
 23920  00C804                     u21140:
 23921  00C804  0009               	tblrd		*+
 23922  00C806  CFF5 FFDE          	movff	tablat,postinc2
 23923  00C80A  06E8               	decf	wreg,f,c
 23924  00C80C  E2FB               	bc	u21140
 23925                           
 23926                           ;display.c: 414: const char charger_off[] = "Charger off";
 23927  00C80E  0EAB               	movlw	low __display_charger@F7265
 23928  00C810  6EF6               	movwf	tblptrl,c
 23929  00C812                     	if	1	;There is more than 1 active tblptr byte
 23930  00C812  0EA2               	movlw	high __display_charger@F7265
 23931  00C814  6EF7               	movwf	tblptrh,c
 23932  00C816                     	endif
 23933  00C816                     	if	1	;There are 3 active tblptr bytes
 23934  00C816  0E00               	movlw	low (__display_charger@F7265 shr (0+16))
 23935  00C818  6EF8               	movwf	tblptru,c
 23936  00C81A                     	endif
 23937  00C81A  EE21  F082         	lfsr	2,__display_charger@charger_off
 23938  00C81E  0E0B               	movlw	11
 23939  00C820                     u21150:
 23940  00C820  0009               	tblrd		*+
 23941  00C822  CFF5 FFDE          	movff	tablat,postinc2
 23942  00C826  06E8               	decf	wreg,f,c
 23943  00C828  E2FB               	bc	u21150
 23944                           
 23945                           ;display.c: 415: const char charger_startup[] = "Charger Startup";
 23946  00C82A  0EFB               	movlw	low __display_charger@F7267
 23947  00C82C  6EF6               	movwf	tblptrl,c
 23948  00C82E                     	if	1	;There is more than 1 active tblptr byte
 23949  00C82E  0EA1               	movlw	high __display_charger@F7267
 23950  00C830  6EF7               	movwf	tblptrh,c
 23951  00C832                     	endif
 23952  00C832                     	if	1	;There are 3 active tblptr bytes
 23953  00C832  0E00               	movlw	low (__display_charger@F7267 shr (0+16))
 23954  00C834  6EF8               	movwf	tblptru,c
 23955  00C836                     	endif
 23956  00C836  EE21  F072         	lfsr	2,__display_charger@charger_startup
 23957  00C83A  0E0F               	movlw	15
 23958  00C83C                     u21160:
 23959  00C83C  0009               	tblrd		*+
 23960  00C83E  CFF5 FFDE          	movff	tablat,postinc2
 23961  00C842  06E8               	decf	wreg,f,c
 23962  00C844  E2FB               	bc	u21160
 23963                           
 23964                           ;display.c: 416: const char charger_async[] = "Charger Asynchronous";
 23965  00C846  0E8B               	movlw	low __display_charger@F7269
 23966  00C848  6EF6               	movwf	tblptrl,c
 23967  00C84A                     	if	1	;There is more than 1 active tblptr byte
 23968  00C84A  0EA0               	movlw	high __display_charger@F7269
 23969  00C84C  6EF7               	movwf	tblptrh,c
 23970  00C84E                     	endif
 23971  00C84E                     	if	1	;There are 3 active tblptr bytes
 23972  00C84E  0E00               	movlw	low (__display_charger@F7269 shr (0+16))
 23973  00C850  6EF8               	movwf	tblptru,c
 23974  00C852                     	endif
 23975  00C852  EE21  F024         	lfsr	2,__display_charger@charger_async
 23976  00C856  0E14               	movlw	20
 23977  00C858                     u21170:
 23978  00C858  0009               	tblrd		*+
 23979  00C85A  CFF5 FFDE          	movff	tablat,postinc2
 23980  00C85E  06E8               	decf	wreg,f,c
 23981  00C860  E2FB               	bc	u21170
 23982                           
 23983                           ;display.c: 417: const char charger_sync[] = "Charger Synchronous";
 23984  00C862  0EF3               	movlw	low __display_charger@F7271
 23985  00C864  6EF6               	movwf	tblptrl,c
 23986  00C866                     	if	1	;There is more than 1 active tblptr byte
 23987  00C866  0EA0               	movlw	high __display_charger@F7271
 23988  00C868  6EF7               	movwf	tblptrh,c
 23989  00C86A                     	endif
 23990  00C86A                     	if	1	;There are 3 active tblptr bytes
 23991  00C86A  0E00               	movlw	low (__display_charger@F7271 shr (0+16))
 23992  00C86C  6EF8               	movwf	tblptru,c
 23993  00C86E                     	endif
 23994  00C86E  EE21  F039         	lfsr	2,__display_charger@charger_sync
 23995  00C872  0E13               	movlw	19
 23996  00C874                     u21180:
 23997  00C874  0009               	tblrd		*+
 23998  00C876  CFF5 FFDE          	movff	tablat,postinc2
 23999  00C87A  06E8               	decf	wreg,f,c
 24000  00C87C  E2FB               	bc	u21180
 24001                           
 24002                           ;display.c: 419: cntr = 0;
 24003  00C87E  0E00               	movlw	0
 24004  00C880  0101               	movlb	1	; () banked
 24005  00C882  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24006                           
 24007                           ;display.c: 420: while(header[cntr])
 24008  00C884  D013               	goto	l2137
 24009  00C886                     
 24010                           ; BSR set to: 1
 24011                           ;display.c: 421: display_content[0][cntr] = header[cntr++];
 24012                           
 24013                           ; BSR set to: 1
 24014  00C886  518E               	movf	__display_charger@cntr& (0+255),w,b
 24015  00C888  0D01               	mullw	1
 24016  00C88A  0E0F               	movlw	low __display_charger@header
 24017  00C88C  24F3               	addwf	prodl,w,c
 24018  00C88E  6ED9               	movwf	fsr2l,c
 24019  00C890  0E01               	movlw	high __display_charger@header
 24020  00C892  20F4               	addwfc	prodh,w,c
 24021  00C894  6EDA               	movwf	fsr2h,c
 24022  00C896  518E               	movf	__display_charger@cntr& (0+255),w,b
 24023  00C898  0D01               	mullw	1
 24024  00C89A  0E54               	movlw	low _display_content
 24025  00C89C  24F3               	addwf	prodl,w,c
 24026  00C89E  6EE1               	movwf	fsr1l,c
 24027  00C8A0  0E03               	movlw	high _display_content
 24028  00C8A2  20F4               	addwfc	prodh,w,c
 24029  00C8A4  6EE2               	movwf	fsr1h,c
 24030  00C8A6  CFDF FFE7          	movff	indf2,indf1
 24031                           
 24032                           ; BSR set to: 1
 24033  00C8AA  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24034  00C8AC                     l2137:
 24035                           
 24036                           ; BSR set to: 1
 24037                           
 24038                           ; BSR set to: 1
 24039  00C8AC  518E               	movf	__display_charger@cntr& (0+255),w,b
 24040  00C8AE  0D01               	mullw	1
 24041  00C8B0  0E0F               	movlw	low __display_charger@header
 24042  00C8B2  24F3               	addwf	prodl,w,c
 24043  00C8B4  6ED9               	movwf	fsr2l,c
 24044  00C8B6  0E01               	movlw	high __display_charger@header
 24045  00C8B8  20F4               	addwfc	prodh,w,c
 24046  00C8BA  6EDA               	movwf	fsr2h,c
 24047  00C8BC  50DF               	movf	indf2,w,c
 24048  00C8BE  A4D8               	btfss	status,2,c
 24049  00C8C0  D7E2               	goto	l2138
 24050                           
 24051                           ; BSR set to: 1
 24052                           ;display.c: 423: cntr = 0;
 24053                           
 24054                           ; BSR set to: 1
 24055  00C8C2  0E00               	movlw	0
 24056  00C8C4  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24057                           
 24058                           ;display.c: 424: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 24059  00C8C6  D014               	goto	l2143
 24060  00C8C8                     
 24061                           ;display.c: 427: display_content[1][cntr] = supply_on[cntr++];
 24062  00C8C8  0101               	movlb	1	; () banked
 24063  00C8CA  518E               	movf	__display_charger@cntr& (0+255),w,b
 24064  00C8CC  0D01               	mullw	1
 24065  00C8CE  0E60               	movlw	low __display_charger@supply_on
 24066  00C8D0  24F3               	addwf	prodl,w,c
 24067  00C8D2  6ED9               	movwf	fsr2l,c
 24068  00C8D4  0E01               	movlw	high __display_charger@supply_on
 24069  00C8D6  20F4               	addwfc	prodh,w,c
 24070  00C8D8  6EDA               	movwf	fsr2h,c
 24071  00C8DA  518E               	movf	__display_charger@cntr& (0+255),w,b
 24072  00C8DC  0D01               	mullw	1
 24073  00C8DE  0E68               	movlw	low (_display_content+20)
 24074  00C8E0  24F3               	addwf	prodl,w,c
 24075  00C8E2  6EE1               	movwf	fsr1l,c
 24076  00C8E4  0E03               	movlw	high (_display_content+20)
 24077  00C8E6  20F4               	addwfc	prodh,w,c
 24078  00C8E8  6EE2               	movwf	fsr1h,c
 24079  00C8EA  CFDF FFE7          	movff	indf2,indf1
 24080                           
 24081                           ; BSR set to: 1
 24082  00C8EE  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24083  00C8F0                     l2143:
 24084                           
 24085                           ; BSR set to: 1
 24086  00C8F0  0101               	movlb	1	; () banked
 24087  00C8F2  518E               	movf	__display_charger@cntr& (0+255),w,b
 24088  00C8F4  0D01               	mullw	1
 24089  00C8F6  0E60               	movlw	low __display_charger@supply_on
 24090  00C8F8  24F3               	addwf	prodl,w,c
 24091  00C8FA  6ED9               	movwf	fsr2l,c
 24092  00C8FC  0E01               	movlw	high __display_charger@supply_on
 24093  00C8FE  20F4               	addwfc	prodh,w,c
 24094  00C900  6EDA               	movwf	fsr2h,c
 24095  00C902  50DF               	movf	indf2,w,c
 24096  00C904  B4D8               	btfsc	status,2,c
 24097  00C906  D020               	goto	u21220
 24098  00C908  D7DF               	goto	l2144
 24099  00C90A                     
 24100                           ; BSR set to: 1
 24101                           ;display.c: 432: display_content[1][cntr] = supply_off[cntr++];
 24102                           
 24103                           ; BSR set to: 1
 24104  00C90A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24105  00C90C  0D01               	mullw	1
 24106  00C90E  0E4D               	movlw	low __display_charger@supply_off
 24107  00C910  24F3               	addwf	prodl,w,c
 24108  00C912  6ED9               	movwf	fsr2l,c
 24109  00C914  0E01               	movlw	high __display_charger@supply_off
 24110  00C916  20F4               	addwfc	prodh,w,c
 24111  00C918  6EDA               	movwf	fsr2h,c
 24112  00C91A  518E               	movf	__display_charger@cntr& (0+255),w,b
 24113  00C91C  0D01               	mullw	1
 24114  00C91E  0E68               	movlw	low (_display_content+20)
 24115  00C920  24F3               	addwf	prodl,w,c
 24116  00C922  6EE1               	movwf	fsr1l,c
 24117  00C924  0E03               	movlw	high (_display_content+20)
 24118  00C926  20F4               	addwfc	prodh,w,c
 24119  00C928  6EE2               	movwf	fsr1h,c
 24120  00C92A  CFDF FFE7          	movff	indf2,indf1
 24121                           
 24122                           ; BSR set to: 1
 24123  00C92E  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24124                           
 24125                           ; BSR set to: 1
 24126  00C930  0101               	movlb	1	; () banked
 24127  00C932  518E               	movf	__display_charger@cntr& (0+255),w,b
 24128  00C934  0D01               	mullw	1
 24129  00C936  0E4D               	movlw	low __display_charger@supply_off
 24130  00C938  24F3               	addwf	prodl,w,c
 24131  00C93A  6ED9               	movwf	fsr2l,c
 24132  00C93C  0E01               	movlw	high __display_charger@supply_off
 24133  00C93E  20F4               	addwfc	prodh,w,c
 24134  00C940  6EDA               	movwf	fsr2h,c
 24135  00C942  50DF               	movf	indf2,w,c
 24136  00C944  A4D8               	btfss	status,2,c
 24137  00C946  D7E1               	goto	l2148
 24138  00C948                     u21220:
 24139                           
 24140                           ; BSR set to: 1
 24141                           ;display.c: 433: };display.c: 435: cntr = 0;
 24142                           
 24143                           ; BSR set to: 1
 24144                           
 24145                           ; BSR set to: 1
 24146  00C948  0E00               	movlw	0
 24147  00C94A  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24148                           
 24149                           ;display.c: 436: switch(buck_get_mode())
 24150  00C94C  D080               	goto	l2150
 24151  00C94E                     
 24152                           ; BSR set to: 1
 24153                           ;display.c: 440: display_content[2][cntr] = charger_off[cntr++];
 24154                           
 24155                           ; BSR set to: 1
 24156  00C94E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24157  00C950  0D01               	mullw	1
 24158  00C952  0E82               	movlw	low __display_charger@charger_off
 24159  00C954  24F3               	addwf	prodl,w,c
 24160  00C956  6ED9               	movwf	fsr2l,c
 24161  00C958  0E01               	movlw	high __display_charger@charger_off
 24162  00C95A  20F4               	addwfc	prodh,w,c
 24163  00C95C  6EDA               	movwf	fsr2h,c
 24164  00C95E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24165  00C960  0D01               	mullw	1
 24166  00C962  0E7C               	movlw	low (_display_content+40)
 24167  00C964  24F3               	addwf	prodl,w,c
 24168  00C966  6EE1               	movwf	fsr1l,c
 24169  00C968  0E03               	movlw	high (_display_content+40)
 24170  00C96A  20F4               	addwfc	prodh,w,c
 24171  00C96C  6EE2               	movwf	fsr1h,c
 24172  00C96E  CFDF FFE7          	movff	indf2,indf1
 24173                           
 24174                           ; BSR set to: 1
 24175  00C972  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24176  00C974                     
 24177                           ; BSR set to: 1
 24178  00C974  0101               	movlb	1	; () banked
 24179  00C976  518E               	movf	__display_charger@cntr& (0+255),w,b
 24180  00C978  0D01               	mullw	1
 24181  00C97A  0E82               	movlw	low __display_charger@charger_off
 24182  00C97C  24F3               	addwf	prodl,w,c
 24183  00C97E  6ED9               	movwf	fsr2l,c
 24184  00C980  0E01               	movlw	high __display_charger@charger_off
 24185  00C982  20F4               	addwfc	prodh,w,c
 24186  00C984  6EDA               	movwf	fsr2h,c
 24187  00C986  50DF               	movf	indf2,w,c
 24188  00C988  B4D8               	btfsc	status,2,c
 24189  00C98A  D06F               	goto	l2155
 24190  00C98C  D7E0               	goto	l2153
 24191  00C98E                     
 24192                           ; BSR set to: 1
 24193                           ;display.c: 445: display_content[2][cntr] = charger_startup[cntr++];
 24194                           
 24195                           ; BSR set to: 1
 24196  00C98E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24197  00C990  0D01               	mullw	1
 24198  00C992  0E72               	movlw	low __display_charger@charger_startup
 24199  00C994  24F3               	addwf	prodl,w,c
 24200  00C996  6ED9               	movwf	fsr2l,c
 24201  00C998  0E01               	movlw	high __display_charger@charger_startup
 24202  00C99A  20F4               	addwfc	prodh,w,c
 24203  00C99C  6EDA               	movwf	fsr2h,c
 24204  00C99E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24205  00C9A0  0D01               	mullw	1
 24206  00C9A2  0E7C               	movlw	low (_display_content+40)
 24207  00C9A4  24F3               	addwf	prodl,w,c
 24208  00C9A6  6EE1               	movwf	fsr1l,c
 24209  00C9A8  0E03               	movlw	high (_display_content+40)
 24210  00C9AA  20F4               	addwfc	prodh,w,c
 24211  00C9AC  6EE2               	movwf	fsr1h,c
 24212  00C9AE  CFDF FFE7          	movff	indf2,indf1
 24213                           
 24214                           ; BSR set to: 1
 24215  00C9B2  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24216  00C9B4                     
 24217                           ; BSR set to: 1
 24218  00C9B4  0101               	movlb	1	; () banked
 24219  00C9B6  518E               	movf	__display_charger@cntr& (0+255),w,b
 24220  00C9B8  0D01               	mullw	1
 24221  00C9BA  0E72               	movlw	low __display_charger@charger_startup
 24222  00C9BC  24F3               	addwf	prodl,w,c
 24223  00C9BE  6ED9               	movwf	fsr2l,c
 24224  00C9C0  0E01               	movlw	high __display_charger@charger_startup
 24225  00C9C2  20F4               	addwfc	prodh,w,c
 24226  00C9C4  6EDA               	movwf	fsr2h,c
 24227  00C9C6  50DF               	movf	indf2,w,c
 24228  00C9C8  B4D8               	btfsc	status,2,c
 24229  00C9CA  D04F               	goto	l2155
 24230  00C9CC  D7E0               	goto	l2158
 24231  00C9CE                     
 24232                           ; BSR set to: 1
 24233                           ;display.c: 450: display_content[2][cntr] = charger_async[cntr++];
 24234                           
 24235                           ; BSR set to: 1
 24236  00C9CE  518E               	movf	__display_charger@cntr& (0+255),w,b
 24237  00C9D0  0D01               	mullw	1
 24238  00C9D2  0E24               	movlw	low __display_charger@charger_async
 24239  00C9D4  24F3               	addwf	prodl,w,c
 24240  00C9D6  6ED9               	movwf	fsr2l,c
 24241  00C9D8  0E01               	movlw	high __display_charger@charger_async
 24242  00C9DA  20F4               	addwfc	prodh,w,c
 24243  00C9DC  6EDA               	movwf	fsr2h,c
 24244  00C9DE  518E               	movf	__display_charger@cntr& (0+255),w,b
 24245  00C9E0  0D01               	mullw	1
 24246  00C9E2  0E7C               	movlw	low (_display_content+40)
 24247  00C9E4  24F3               	addwf	prodl,w,c
 24248  00C9E6  6EE1               	movwf	fsr1l,c
 24249  00C9E8  0E03               	movlw	high (_display_content+40)
 24250  00C9EA  20F4               	addwfc	prodh,w,c
 24251  00C9EC  6EE2               	movwf	fsr1h,c
 24252  00C9EE  CFDF FFE7          	movff	indf2,indf1
 24253                           
 24254                           ; BSR set to: 1
 24255  00C9F2  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24256  00C9F4                     
 24257                           ; BSR set to: 1
 24258  00C9F4  0101               	movlb	1	; () banked
 24259  00C9F6  518E               	movf	__display_charger@cntr& (0+255),w,b
 24260  00C9F8  0D01               	mullw	1
 24261  00C9FA  0E24               	movlw	low __display_charger@charger_async
 24262  00C9FC  24F3               	addwf	prodl,w,c
 24263  00C9FE  6ED9               	movwf	fsr2l,c
 24264  00CA00  0E01               	movlw	high __display_charger@charger_async
 24265  00CA02  20F4               	addwfc	prodh,w,c
 24266  00CA04  6EDA               	movwf	fsr2h,c
 24267  00CA06  50DF               	movf	indf2,w,c
 24268  00CA08  B4D8               	btfsc	status,2,c
 24269  00CA0A  D02F               	goto	l2155
 24270  00CA0C  D7E0               	goto	l2162
 24271  00CA0E                     
 24272                           ; BSR set to: 1
 24273                           ;display.c: 455: display_content[2][cntr] = charger_sync[cntr++];
 24274                           
 24275                           ; BSR set to: 1
 24276  00CA0E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24277  00CA10  0D01               	mullw	1
 24278  00CA12  0E39               	movlw	low __display_charger@charger_sync
 24279  00CA14  24F3               	addwf	prodl,w,c
 24280  00CA16  6ED9               	movwf	fsr2l,c
 24281  00CA18  0E01               	movlw	high __display_charger@charger_sync
 24282  00CA1A  20F4               	addwfc	prodh,w,c
 24283  00CA1C  6EDA               	movwf	fsr2h,c
 24284  00CA1E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24285  00CA20  0D01               	mullw	1
 24286  00CA22  0E7C               	movlw	low (_display_content+40)
 24287  00CA24  24F3               	addwf	prodl,w,c
 24288  00CA26  6EE1               	movwf	fsr1l,c
 24289  00CA28  0E03               	movlw	high (_display_content+40)
 24290  00CA2A  20F4               	addwfc	prodh,w,c
 24291  00CA2C  6EE2               	movwf	fsr1h,c
 24292  00CA2E  CFDF FFE7          	movff	indf2,indf1
 24293                           
 24294                           ; BSR set to: 1
 24295  00CA32  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24296  00CA34                     
 24297                           ; BSR set to: 1
 24298  00CA34  0101               	movlb	1	; () banked
 24299  00CA36  518E               	movf	__display_charger@cntr& (0+255),w,b
 24300  00CA38  0D01               	mullw	1
 24301  00CA3A  0E39               	movlw	low __display_charger@charger_sync
 24302  00CA3C  24F3               	addwf	prodl,w,c
 24303  00CA3E  6ED9               	movwf	fsr2l,c
 24304  00CA40  0E01               	movlw	high __display_charger@charger_sync
 24305  00CA42  20F4               	addwfc	prodh,w,c
 24306  00CA44  6EDA               	movwf	fsr2h,c
 24307  00CA46  50DF               	movf	indf2,w,c
 24308  00CA48  B4D8               	btfsc	status,2,c
 24309  00CA4A  D00F               	goto	l2155
 24310  00CA4C  D7E0               	goto	l2166
 24311  00CA4E                     l2150:
 24312                           
 24313                           ; BSR set to: 1
 24314                           
 24315                           ; BSR set to: 1
 24316  00CA4E  EC74  F09F         	call	_buck_get_mode	;wreg free
 24317                           
 24318                           ; Switch size 1, requested type "space"
 24319                           ; Number of cases is 4, Range of values is 0 to 3
 24320                           ; switch strategies available:
 24321                           ; Name         Instructions Cycles
 24322                           ; simple_byte           13     7 (average)
 24323                           ;	Chosen strategy is simple_byte
 24324  00CA52  0A00               	xorlw	0	; case 0
 24325  00CA54  B4D8               	btfsc	status,2,c
 24326  00CA56  D78E               	goto	l2152
 24327  00CA58  0A01               	xorlw	1	; case 1
 24328  00CA5A  B4D8               	btfsc	status,2,c
 24329  00CA5C  D7AB               	goto	l2157
 24330  00CA5E  0A03               	xorlw	3	; case 2
 24331  00CA60  B4D8               	btfsc	status,2,c
 24332  00CA62  D7C8               	goto	l2161
 24333  00CA64  0A01               	xorlw	1	; case 3
 24334  00CA66  B4D8               	btfsc	status,2,c
 24335  00CA68  D7E5               	goto	l2165
 24336  00CA6A                     l2155:
 24337                           
 24338                           ;display.c: 459: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 24339  00CA6A  EC6F  F09F         	call	_buck_get_dutycycle	;wreg free
 24340  00CA6E  0100               	movlb	0	; () banked
 24341  00CA70  6F90               	movwf	??__display_charger& (0+255),b
 24342  00CA72  5190               	movf	??__display_charger& (0+255),w,b
 24343  00CA74  6F78               	movwf	__display_itoa@value& (0+255),b
 24344  00CA76  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 24345  00CA78  0E00               	movlw	0
 24346  00CA7A  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24347  00CA7C  0E90               	movlw	low (_display_content+60)
 24348  00CA7E  6F7B               	movwf	__display_itoa@text& (0+255),b
 24349  00CA80  0E03               	movlw	high (_display_content+60)
 24350  00CA82  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 24351  00CA84  ECBE  F06D         	call	__display_itoa	;wreg free
 24352  00CA88  0012               	return		;funcret
 24353  00CA8A                     __end_of__display_charger:
 24354                           	opt stack 0
 24355                           tblptru	equ	0xFF8
 24356                           tblptrh	equ	0xFF7
 24357                           tblptrl	equ	0xFF6
 24358                           tablat	equ	0xFF5
 24359                           prodh	equ	0xFF4
 24360                           prodl	equ	0xFF3
 24361                           intcon	equ	0xFF2
 24362                           intcon2	equ	0xFF1
 24363                           intcon3	equ	0xFF0
 24364                           postinc0	equ	0xFEE
 24365                           wreg	equ	0xFE8
 24366                           indf1	equ	0xFE7
 24367                           postinc1	equ	0xFE6
 24368                           postdec1	equ	0xFE5
 24369                           plusw1	equ	0xFE3
 24370                           fsr1h	equ	0xFE2
 24371                           fsr1l	equ	0xFE1
 24372                           indf2	equ	0xFDF
 24373                           postinc2	equ	0xFDE
 24374                           postdec2	equ	0xFDD
 24375                           plusw2	equ	0xFDB
 24376                           fsr2h	equ	0xFDA
 24377                           fsr2l	equ	0xFD9
 24378                           status	equ	0xFD8
 24379                           
 24380 ;; *************** function __display_itoa *****************
 24381 ;; Defined at:
 24382 ;;		line 41 in file "display.c"
 24383 ;; Parameters:    Size  Location     Type
 24384 ;;  value           2   24[BANK0 ] int 
 24385 ;;  decimals        1   26[BANK0 ] unsigned char 
 24386 ;;  text            2   27[BANK0 ] PTR unsigned char 
 24387 ;;		 -> display_content(80), 
 24388 ;; Auto vars:     Size  Location     Type
 24389 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 24390 ;;  pos             1   47[BANK0 ] unsigned char 
 24391 ;;  missing         1   46[BANK0 ] char 
 24392 ;;  len             1   45[BANK0 ] unsigned char 
 24393 ;; Return value:  Size  Location     Type
 24394 ;;                  1    wreg      void 
 24395 ;; Registers used:
 24396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24397 ;; Tracked objects:
 24398 ;;		On entry : 0/0
 24399 ;;		On exit  : 0/0
 24400 ;;		Unchanged: 0/0
 24401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24402 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24403 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24404 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24405 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24406 ;;Total ram usage:       24 bytes
 24407 ;; Hardware stack levels used:    1
 24408 ;; Hardware stack levels required when called:   13
 24409 ;; This function calls:
 24410 ;;		_itoa
 24411 ;;		_strlen
 24412 ;; This function is called by:
 24413 ;;		__display_inout
 24414 ;;		__display_charger
 24415 ;;		__display_efficiency
 24416 ;;		__display_temperature
 24417 ;; This function uses a non-reentrant model
 24418 ;;
 24419                           
 24420                           	psect	text111
 24421  00DB7C                     __ptext111:
 24422                           	opt stack 0
 24423  00DB7C                     __display_itoa:
 24424                           	opt stack 15
 24425                           
 24426                           ;display.c: 43: uint8_t pos;;display.c: 44: uint8_t len;;display.c: 45: int8_t missing;;
      +                          display.c: 46: char tmp[10];;display.c: 47: itoa(tmp, value, 10);
 24427                           
 24428                           ;incstack = 0
 24429  00DB7C  0E83               	movlw	low __display_itoa@tmp
 24430  00DB7E  0100               	movlb	0	; () banked
 24431  00DB80  6F70               	movwf	itoa@buf& (0+255),b
 24432  00DB82  0E00               	movlw	high __display_itoa@tmp
 24433  00DB84  6F71               	movwf	(itoa@buf+1)& (0+255),b
 24434  00DB86  C078  F072         	movff	__display_itoa@value,itoa@val
 24435  00DB8A  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 24436  00DB8E  0E00               	movlw	0
 24437  00DB90  6F75               	movwf	(itoa@base+1)& (0+255),b
 24438  00DB92  0E0A               	movlw	10
 24439  00DB94  6F74               	movwf	itoa@base& (0+255),b
 24440  00DB96  ECC2  F098         	call	_itoa	;wreg free
 24441                           
 24442                           ;display.c: 48: len = strlen(tmp);
 24443  00DB9A  0E83               	movlw	low __display_itoa@tmp
 24444  00DB9C  0100               	movlb	0	; () banked
 24445  00DB9E  6F60               	movwf	strlen@s& (0+255),b
 24446  00DBA0  0E00               	movlw	high __display_itoa@tmp
 24447  00DBA2  6F61               	movwf	(strlen@s+1)& (0+255),b
 24448  00DBA4  EC88  F099         	call	_strlen	;wreg free
 24449  00DBA8  0100               	movlb	0	; () banked
 24450  00DBAA  5160               	movf	?_strlen& (0+255),w,b
 24451  00DBAC  6F8D               	movwf	__display_itoa@len& (0+255),b
 24452                           
 24453                           ; BSR set to: 0
 24454                           ;display.c: 50: if(value<0)
 24455  00DBAE  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 24456  00DBB0  D054               	goto	l1913
 24457                           
 24458                           ; BSR set to: 0
 24459                           ;display.c: 51: {;display.c: 52: missing = decimals + 2 - len;
 24460  00DBB2  518D               	movf	__display_itoa@len& (0+255),w,b
 24461  00DBB4  0800               	sublw	0
 24462  00DBB6  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24463  00DBB8  0F02               	addlw	2
 24464  00DBBA  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24465                           
 24466                           ;display.c: 53: if(missing>0)
 24467  00DBBC  518E               	movf	__display_itoa@missing& (0+255),w,b
 24468  00DBBE  0A80               	xorlw	128
 24469  00DBC0  0F7F               	addlw	-129
 24470  00DBC2  A0D8               	btfss	status,0,c
 24471  00DBC4  D090               	goto	l1920
 24472                           
 24473                           ; BSR set to: 0
 24474                           ;display.c: 54: {;display.c: 55: for(pos=decimals;pos!=0xFF;--pos)
 24475  00DBC6  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24476  00DBCA                     l19865:
 24477                           
 24478                           ; BSR set to: 0
 24479  00DBCA  298F               	incf	__display_itoa@pos& (0+255),w,b
 24480  00DBCC  B4D8               	btfsc	status,2,c
 24481  00DBCE  D042               	goto	u18740
 24482                           
 24483                           ; BSR set to: 0
 24484                           ;display.c: 56: {;display.c: 57: if(pos>=missing)
 24485                           
 24486                           ; BSR set to: 0
 24487                           
 24488                           ; BSR set to: 0
 24489  00DBD0  518F               	movf	__display_itoa@pos& (0+255),w,b
 24490  00DBD2  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24491  00DBD4  D004               	goto	u18730
 24492  00DBD6  0AFF               	xorlw	255
 24493  00DBD8  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24494  00DBDA  B0D8               	btfsc	status,0,c
 24495  00DBDC  D02A               	goto	l1917
 24496  00DBDE                     u18730:
 24497                           
 24498                           ; BSR set to: 0
 24499                           ;display.c: 58: {;display.c: 59: tmp[pos+1] = tmp[pos+1-missing];
 24500  00DBDE  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24501  00DBE2  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24502  00DBE4  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24503  00DBE6  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24504  00DBE8  1F7D               	comf	??__display_itoa& (0+255),f,b
 24505  00DBEA  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24506  00DBEC  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 24507  00DBEE  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 24508  00DBF0  518F               	movf	__display_itoa@pos& (0+255),w,b
 24509  00DBF2  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 24510  00DBF4  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 24511  00DBF6  517D               	movf	??__display_itoa& (0+255),w,b
 24512  00DBF8  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24513  00DBFA  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24514  00DBFC  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24515  00DBFE  0E01               	movlw	1
 24516  00DC00  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24517  00DC02  0E00               	movlw	0
 24518  00DC04  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24519  00DC06  0E83               	movlw	low __display_itoa@tmp
 24520  00DC08  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 24521  00DC0A  6ED9               	movwf	fsr2l,c
 24522  00DC0C  0E00               	movlw	high __display_itoa@tmp
 24523  00DC0E  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 24524  00DC10  6EDA               	movwf	fsr2h,c
 24525  00DC12  518F               	movf	__display_itoa@pos& (0+255),w,b
 24526  00DC14  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 24527  00DC16  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 24528  00DC18  0E01               	movlw	1
 24529  00DC1A  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 24530  00DC1C  0E00               	movlw	0
 24531  00DC1E  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 24532  00DC20  0E83               	movlw	low __display_itoa@tmp
 24533  00DC22  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 24534  00DC24  6EE1               	movwf	fsr1l,c
 24535  00DC26  0E00               	movlw	high __display_itoa@tmp
 24536  00DC28  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 24537  00DC2A  6EE2               	movwf	fsr1h,c
 24538  00DC2C  CFDF FFE7          	movff	indf2,indf1
 24539                           
 24540                           ;display.c: 60: }
 24541  00DC30  D00F               	goto	l1918
 24542  00DC32                     l1917:
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;display.c: 61: else;display.c: 62: {;display.c: 63: tmp[pos+1] = '0';
 24546                           
 24547                           ; BSR set to: 0
 24548  00DC32  518F               	movf	__display_itoa@pos& (0+255),w,b
 24549  00DC34  6F7D               	movwf	??__display_itoa& (0+255),b
 24550  00DC36  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24551  00DC38  0E01               	movlw	1
 24552  00DC3A  277D               	addwf	??__display_itoa& (0+255),f,b
 24553  00DC3C  0E00               	movlw	0
 24554  00DC3E  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 24555  00DC40  0E83               	movlw	low __display_itoa@tmp
 24556  00DC42  257D               	addwf	??__display_itoa& (0+255),w,b
 24557  00DC44  6ED9               	movwf	fsr2l,c
 24558  00DC46  0E00               	movlw	high __display_itoa@tmp
 24559  00DC48  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 24560  00DC4A  6EDA               	movwf	fsr2h,c
 24561  00DC4C  0E30               	movlw	48
 24562  00DC4E  6EDF               	movwf	indf2,c
 24563  00DC50                     l1918:
 24564                           
 24565                           ; BSR set to: 0
 24566                           
 24567                           ; BSR set to: 0
 24568  00DC50  078F               	decf	__display_itoa@pos& (0+255),f,b
 24569  00DC52  D7BB               	goto	l19865
 24570  00DC54                     u18740:
 24571                           
 24572                           ; BSR set to: 0
 24573                           ;display.c: 64: };display.c: 65: };display.c: 66: len = decimals + 2;
 24574                           
 24575                           ; BSR set to: 0
 24576  00DC54  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24577  00DC56  0F02               	addlw	2
 24578  00DC58  D045               	goto	L11
 24579  00DC5A                     l1913:
 24580                           
 24581                           ; BSR set to: 0
 24582                           ;display.c: 69: else;display.c: 70: {;display.c: 71: missing = decimals + 1 - len;
 24583                           
 24584                           ; BSR set to: 0
 24585  00DC5A  518D               	movf	__display_itoa@len& (0+255),w,b
 24586  00DC5C  0800               	sublw	0
 24587  00DC5E  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 24588  00DC60  6F7D               	movwf	??__display_itoa& (0+255),b
 24589  00DC62  297D               	incf	??__display_itoa& (0+255),w,b
 24590  00DC64  6F8E               	movwf	__display_itoa@missing& (0+255),b
 24591                           
 24592                           ;display.c: 72: if(missing>0)
 24593  00DC66  518E               	movf	__display_itoa@missing& (0+255),w,b
 24594  00DC68  0A80               	xorlw	128
 24595  00DC6A  0F7F               	addlw	-129
 24596  00DC6C  A0D8               	btfss	status,0,c
 24597  00DC6E  D03B               	goto	l1920
 24598                           
 24599                           ; BSR set to: 0
 24600                           ;display.c: 73: {;display.c: 74: for(pos=decimals;pos!=0xFF;--pos)
 24601  00DC70  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 24602  00DC74                     l19885:
 24603                           
 24604                           ; BSR set to: 0
 24605  00DC74  298F               	incf	__display_itoa@pos& (0+255),w,b
 24606  00DC76  B4D8               	btfsc	status,2,c
 24607  00DC78  D034               	goto	u18780
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;display.c: 75: {;display.c: 76: if(pos>=missing)
 24611                           
 24612                           ; BSR set to: 0
 24613                           
 24614                           ; BSR set to: 0
 24615  00DC7A  518F               	movf	__display_itoa@pos& (0+255),w,b
 24616  00DC7C  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 24617  00DC7E  D004               	goto	u18770
 24618  00DC80  0AFF               	xorlw	255
 24619  00DC82  258E               	addwf	__display_itoa@missing& (0+255),w,b
 24620  00DC84  B0D8               	btfsc	status,0,c
 24621  00DC86  D021               	goto	l1923
 24622  00DC88                     u18770:
 24623                           
 24624                           ; BSR set to: 0
 24625                           ;display.c: 77: {;display.c: 78: tmp[pos] = tmp[pos-missing];
 24626  00DC88  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 24627  00DC8C  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24628  00DC8E  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 24629  00DC90  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 24630  00DC92  1F7D               	comf	??__display_itoa& (0+255),f,b
 24631  00DC94  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 24632  00DC96  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 24633  00DC98  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 24634  00DC9A  518F               	movf	__display_itoa@pos& (0+255),w,b
 24635  00DC9C  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 24636  00DC9E  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 24637  00DCA0  517D               	movf	??__display_itoa& (0+255),w,b
 24638  00DCA2  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 24639  00DCA4  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24640  00DCA6  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 24641  00DCA8  0E83               	movlw	low __display_itoa@tmp
 24642  00DCAA  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 24643  00DCAC  6ED9               	movwf	fsr2l,c
 24644  00DCAE  0E00               	movlw	high __display_itoa@tmp
 24645  00DCB0  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 24646  00DCB2  6EDA               	movwf	fsr2h,c
 24647  00DCB4  518F               	movf	__display_itoa@pos& (0+255),w,b
 24648  00DCB6  0D01               	mullw	1
 24649  00DCB8  0E83               	movlw	low __display_itoa@tmp
 24650  00DCBA  24F3               	addwf	prodl,w,c
 24651  00DCBC  6EE1               	movwf	fsr1l,c
 24652  00DCBE  0E00               	movlw	high __display_itoa@tmp
 24653  00DCC0  20F4               	addwfc	prodh,w,c
 24654  00DCC2  6EE2               	movwf	fsr1h,c
 24655  00DCC4  CFDF FFE7          	movff	indf2,indf1
 24656                           
 24657                           ;display.c: 79: }
 24658  00DCC8  D00A               	goto	l1924
 24659  00DCCA                     l1923:
 24660                           
 24661                           ; BSR set to: 0
 24662                           ;display.c: 80: else;display.c: 81: {;display.c: 82: tmp[pos] = '0';
 24663                           
 24664                           ; BSR set to: 0
 24665  00DCCA  518F               	movf	__display_itoa@pos& (0+255),w,b
 24666  00DCCC  0D01               	mullw	1
 24667  00DCCE  0E83               	movlw	low __display_itoa@tmp
 24668  00DCD0  24F3               	addwf	prodl,w,c
 24669  00DCD2  6ED9               	movwf	fsr2l,c
 24670  00DCD4  0E00               	movlw	high __display_itoa@tmp
 24671  00DCD6  20F4               	addwfc	prodh,w,c
 24672  00DCD8  6EDA               	movwf	fsr2h,c
 24673  00DCDA  0E30               	movlw	48
 24674  00DCDC  6EDF               	movwf	indf2,c
 24675  00DCDE                     l1924:
 24676                           
 24677                           ; BSR set to: 0
 24678                           
 24679                           ; BSR set to: 0
 24680  00DCDE  078F               	decf	__display_itoa@pos& (0+255),f,b
 24681  00DCE0  D7C9               	goto	l19885
 24682  00DCE2                     u18780:
 24683                           
 24684                           ; BSR set to: 0
 24685                           ;display.c: 83: };display.c: 84: };display.c: 85: len = decimals + 1;
 24686                           
 24687                           ; BSR set to: 0
 24688  00DCE2  297A               	incf	__display_itoa@decimals& (0+255),w,b
 24689  00DCE4                     L11:
 24690  00DCE4  6F8D               	movwf	__display_itoa@len& (0+255),b
 24691  00DCE6                     l1920:
 24692                           
 24693                           ; BSR set to: 0
 24694                           ;display.c: 86: };display.c: 87: };display.c: 89: decimals = len - decimals - 1;
 24695                           
 24696                           ; BSR set to: 0
 24697  00DCE6  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24698  00DCE8  0800               	sublw	0
 24699  00DCEA  258D               	addwf	__display_itoa@len& (0+255),w,b
 24700  00DCEC  6F7D               	movwf	??__display_itoa& (0+255),b
 24701  00DCEE  057D               	decf	??__display_itoa& (0+255),w,b
 24702  00DCF0  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;display.c: 91: for(pos=0;pos<len;++pos)
 24706  00DCF2  0E00               	movlw	0
 24707  00DCF4  6F8F               	movwf	__display_itoa@pos& (0+255),b
 24708  00DCF6  D023               	goto	l1925
 24709  00DCF8                     
 24710                           ; BSR set to: 0
 24711                           ;display.c: 92: {;display.c: 93: text[pos] = tmp[pos];
 24712                           
 24713                           ; BSR set to: 0
 24714  00DCF8  518F               	movf	__display_itoa@pos& (0+255),w,b
 24715  00DCFA  0D01               	mullw	1
 24716  00DCFC  0E83               	movlw	low __display_itoa@tmp
 24717  00DCFE  24F3               	addwf	prodl,w,c
 24718  00DD00  6ED9               	movwf	fsr2l,c
 24719  00DD02  0E00               	movlw	high __display_itoa@tmp
 24720  00DD04  20F4               	addwfc	prodh,w,c
 24721  00DD06  6EDA               	movwf	fsr2h,c
 24722  00DD08  518F               	movf	__display_itoa@pos& (0+255),w,b
 24723  00DD0A  0D01               	mullw	1
 24724  00DD0C  50F3               	movf	prodl,w,c
 24725  00DD0E  257B               	addwf	__display_itoa@text& (0+255),w,b
 24726  00DD10  6EE1               	movwf	fsr1l,c
 24727  00DD12  50F4               	movf	prodh,w,c
 24728  00DD14  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24729  00DD16  6EE2               	movwf	fsr1h,c
 24730  00DD18  CFDF FFE7          	movff	indf2,indf1
 24731                           
 24732                           ; BSR set to: 0
 24733                           ;display.c: 94: if(pos==decimals)
 24734  00DD1C  517A               	movf	__display_itoa@decimals& (0+255),w,b
 24735  00DD1E  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 24736  00DD20  A4D8               	btfss	status,2,c
 24737  00DD22  D00C               	goto	l1927
 24738                           
 24739                           ; BSR set to: 0
 24740                           ;display.c: 95: {;display.c: 97: ++pos;
 24741  00DD24  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24742                           
 24743                           ; BSR set to: 0
 24744                           ;display.c: 98: text[pos] = '.';
 24745  00DD26  518F               	movf	__display_itoa@pos& (0+255),w,b
 24746  00DD28  0D01               	mullw	1
 24747  00DD2A  50F3               	movf	prodl,w,c
 24748  00DD2C  257B               	addwf	__display_itoa@text& (0+255),w,b
 24749  00DD2E  6ED9               	movwf	fsr2l,c
 24750  00DD30  50F4               	movf	prodh,w,c
 24751  00DD32  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24752  00DD34  6EDA               	movwf	fsr2h,c
 24753  00DD36  0E2E               	movlw	46
 24754  00DD38  6EDF               	movwf	indf2,c
 24755                           
 24756                           ;display.c: 99: break;
 24757  00DD3A  D01E               	goto	l1929
 24758  00DD3C                     l1927:
 24759                           
 24760                           ; BSR set to: 0
 24761                           
 24762                           ; BSR set to: 0
 24763  00DD3C  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24764  00DD3E                     l1925:
 24765                           
 24766                           ; BSR set to: 0
 24767                           
 24768                           ; BSR set to: 0
 24769  00DD3E  518D               	movf	__display_itoa@len& (0+255),w,b
 24770  00DD40  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 24771  00DD42  B0D8               	btfsc	status,0,c
 24772  00DD44  D019               	goto	l1929
 24773  00DD46  D7D8               	goto	l1926
 24774  00DD48                     
 24775                           ; BSR set to: 0
 24776                           ;display.c: 103: {;display.c: 104: text[pos+1] = tmp[pos];
 24777                           
 24778                           ; BSR set to: 0
 24779  00DD48  518F               	movf	__display_itoa@pos& (0+255),w,b
 24780  00DD4A  0D01               	mullw	1
 24781  00DD4C  0E83               	movlw	low __display_itoa@tmp
 24782  00DD4E  24F3               	addwf	prodl,w,c
 24783  00DD50  6ED9               	movwf	fsr2l,c
 24784  00DD52  0E00               	movlw	high __display_itoa@tmp
 24785  00DD54  20F4               	addwfc	prodh,w,c
 24786  00DD56  6EDA               	movwf	fsr2h,c
 24787  00DD58  518F               	movf	__display_itoa@pos& (0+255),w,b
 24788  00DD5A  6F7D               	movwf	??__display_itoa& (0+255),b
 24789  00DD5C  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 24790  00DD5E  0E01               	movlw	1
 24791  00DD60  277D               	addwf	??__display_itoa& (0+255),f,b
 24792  00DD62  0E00               	movlw	0
 24793  00DD64  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 24794  00DD66  517D               	movf	??__display_itoa& (0+255),w,b
 24795  00DD68  257B               	addwf	__display_itoa@text& (0+255),w,b
 24796  00DD6A  6EE1               	movwf	fsr1l,c
 24797  00DD6C  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 24798  00DD6E  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 24799  00DD70  6EE2               	movwf	fsr1h,c
 24800  00DD72  CFDF FFE7          	movff	indf2,indf1
 24801                           
 24802                           ; BSR set to: 0
 24803  00DD76  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 24804  00DD78                     l1929:
 24805                           
 24806                           ; BSR set to: 0
 24807                           
 24808                           ; BSR set to: 0
 24809  00DD78  518D               	movf	__display_itoa@len& (0+255),w,b
 24810  00DD7A  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 24811  00DD7C  B0D8               	btfsc	status,0,c
 24812  00DD7E  0012               	return	
 24813  00DD80  D7E3               	goto	l1930
 24814  00DD82                     __end_of__display_itoa:
 24815                           	opt stack 0
 24816                           tblptru	equ	0xFF8
 24817                           tblptrh	equ	0xFF7
 24818                           tblptrl	equ	0xFF6
 24819                           tablat	equ	0xFF5
 24820                           prodh	equ	0xFF4
 24821                           prodl	equ	0xFF3
 24822                           intcon	equ	0xFF2
 24823                           intcon2	equ	0xFF1
 24824                           intcon3	equ	0xFF0
 24825                           postinc0	equ	0xFEE
 24826                           wreg	equ	0xFE8
 24827                           indf1	equ	0xFE7
 24828                           postinc1	equ	0xFE6
 24829                           postdec1	equ	0xFE5
 24830                           plusw1	equ	0xFE3
 24831                           fsr1h	equ	0xFE2
 24832                           fsr1l	equ	0xFE1
 24833                           indf2	equ	0xFDF
 24834                           postinc2	equ	0xFDE
 24835                           postdec2	equ	0xFDD
 24836                           plusw2	equ	0xFDB
 24837                           fsr2h	equ	0xFDA
 24838                           fsr2l	equ	0xFD9
 24839                           status	equ	0xFD8
 24840                           
 24841 ;; *************** function _strlen *****************
 24842 ;; Defined at:
 24843 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 24844 ;; Parameters:    Size  Location     Type
 24845 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 24846 ;;		 -> _display_itoa@tmp(10), 
 24847 ;; Auto vars:     Size  Location     Type
 24848 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 24849 ;;		 -> _display_itoa@tmp(10), 
 24850 ;; Return value:  Size  Location     Type
 24851 ;;                  2    0[BANK0 ] unsigned int 
 24852 ;; Registers used:
 24853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24854 ;; Tracked objects:
 24855 ;;		On entry : 0/0
 24856 ;;		On exit  : 0/0
 24857 ;;		Unchanged: 0/0
 24858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24860 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24861 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24862 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24863 ;;Total ram usage:        6 bytes
 24864 ;; Hardware stack levels used:    1
 24865 ;; Hardware stack levels required when called:   10
 24866 ;; This function calls:
 24867 ;;		Nothing
 24868 ;; This function is called by:
 24869 ;;		__display_itoa
 24870 ;; This function uses a non-reentrant model
 24871 ;;
 24872                           
 24873                           	psect	text112
 24874  013310                     __ptext112:
 24875                           	opt stack 0
 24876  013310                     _strlen:
 24877                           	opt stack 17
 24878                           
 24879                           ; BSR set to: 0
 24880                           ;incstack = 0
 24881  013310  C060  F064         	movff	strlen@s,strlen@cp
 24882  013314  C061  F065         	movff	strlen@s+1,strlen@cp+1
 24883  013318  D003               	goto	l4007
 24884  01331A  0100               	movlb	0	; () banked
 24885  01331C  4B64               	infsnz	strlen@cp& (0+255),f,b
 24886  01331E  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 24887  013320                     l4007:
 24888                           
 24889                           ; BSR set to: 0
 24890  013320  C064  FFD9         	movff	strlen@cp,fsr2l
 24891  013324  C065  FFDA         	movff	strlen@cp+1,fsr2h
 24892  013328  50DF               	movf	indf2,w,c
 24893  01332A  A4D8               	btfss	status,2,c
 24894  01332C  D7F6               	goto	l4008
 24895  01332E  C060  F062         	movff	strlen@s,??_strlen
 24896  013332  C061  F063         	movff	strlen@s+1,??_strlen+1
 24897  013336  0100               	movlb	0	; () banked
 24898  013338  1F62               	comf	??_strlen& (0+255),f,b
 24899  01333A  1F63               	comf	(??_strlen+1)& (0+255),f,b
 24900  01333C  4B62               	infsnz	??_strlen& (0+255),f,b
 24901  01333E  2B63               	incf	(??_strlen+1)& (0+255),f,b
 24902  013340  5164               	movf	strlen@cp& (0+255),w,b
 24903  013342  2562               	addwf	??_strlen& (0+255),w,b
 24904  013344  6F60               	movwf	?_strlen& (0+255),b
 24905  013346  5165               	movf	(strlen@cp+1)& (0+255),w,b
 24906  013348  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 24907  01334A  6F61               	movwf	(?_strlen+1)& (0+255),b
 24908  01334C  0012               	return	
 24909  01334E                     __end_of_strlen:
 24910                           	opt stack 0
 24911                           tblptru	equ	0xFF8
 24912                           tblptrh	equ	0xFF7
 24913                           tblptrl	equ	0xFF6
 24914                           tablat	equ	0xFF5
 24915                           prodh	equ	0xFF4
 24916                           prodl	equ	0xFF3
 24917                           intcon	equ	0xFF2
 24918                           intcon2	equ	0xFF1
 24919                           intcon3	equ	0xFF0
 24920                           postinc0	equ	0xFEE
 24921                           wreg	equ	0xFE8
 24922                           indf1	equ	0xFE7
 24923                           postinc1	equ	0xFE6
 24924                           postdec1	equ	0xFE5
 24925                           plusw1	equ	0xFE3
 24926                           fsr1h	equ	0xFE2
 24927                           fsr1l	equ	0xFE1
 24928                           indf2	equ	0xFDF
 24929                           postinc2	equ	0xFDE
 24930                           postdec2	equ	0xFDD
 24931                           plusw2	equ	0xFDB
 24932                           fsr2h	equ	0xFDA
 24933                           fsr2l	equ	0xFD9
 24934                           status	equ	0xFD8
 24935                           
 24936 ;; *************** function _itoa *****************
 24937 ;; Defined at:
 24938 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 24939 ;; Parameters:    Size  Location     Type
 24940 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 24941 ;;		 -> _display_itoa@tmp(10), 
 24942 ;;  val             2   18[BANK0 ] int 
 24943 ;;  base            2   20[BANK0 ] int 
 24944 ;; Auto vars:     Size  Location     Type
 24945 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 24946 ;;		 -> _display_itoa@tmp(10), 
 24947 ;; Return value:  Size  Location     Type
 24948 ;;                  2   16[BANK0 ] PTR unsigned char 
 24949 ;; Registers used:
 24950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24951 ;; Tracked objects:
 24952 ;;		On entry : 0/0
 24953 ;;		On exit  : 0/0
 24954 ;;		Unchanged: 0/0
 24955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24956 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24959 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24960 ;;Total ram usage:        8 bytes
 24961 ;; Hardware stack levels used:    1
 24962 ;; Hardware stack levels required when called:   12
 24963 ;; This function calls:
 24964 ;;		_utoa
 24965 ;; This function is called by:
 24966 ;;		__display_itoa
 24967 ;; This function uses a non-reentrant model
 24968 ;;
 24969                           
 24970                           	psect	text113
 24971  013184                     __ptext113:
 24972                           	opt stack 0
 24973  013184                     _itoa:
 24974                           	opt stack 15
 24975                           
 24976                           ; BSR set to: 0
 24977                           ;incstack = 0
 24978  013184  C070  F076         	movff	itoa@buf,itoa@cp
 24979  013188  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 24980  01318C  0100               	movlb	0	; () banked
 24981  01318E  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 24982  013190  D00C               	goto	l3983
 24983                           
 24984                           ; BSR set to: 0
 24985  013192  C070  FFD9         	movff	itoa@buf,fsr2l
 24986  013196  C071  FFDA         	movff	itoa@buf+1,fsr2h
 24987  01319A  0E2D               	movlw	45
 24988  01319C  6EDF               	movwf	indf2,c
 24989                           
 24990                           ; BSR set to: 0
 24991  01319E  4B70               	infsnz	itoa@buf& (0+255),f,b
 24992  0131A0  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 24993                           
 24994                           ; BSR set to: 0
 24995  0131A2  6D72               	negf	itoa@val& (0+255),b
 24996  0131A4  1F73               	comf	(itoa@val+1)& (0+255),f,b
 24997  0131A6  B0D8               	btfsc	status,0,c
 24998  0131A8  2B73               	incf	(itoa@val+1)& (0+255),f,b
 24999  0131AA                     l3983:
 25000                           
 25001                           ; BSR set to: 0
 25002                           
 25003                           ; BSR set to: 0
 25004  0131AA  C070  F067         	movff	itoa@buf,utoa@buf
 25005  0131AE  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 25006  0131B2  C072  F069         	movff	itoa@val,utoa@val
 25007  0131B6  C073  F06A         	movff	itoa@val+1,utoa@val+1
 25008  0131BA  C074  F06B         	movff	itoa@base,utoa@base
 25009  0131BE  C075  F06C         	movff	itoa@base+1,utoa@base+1
 25010  0131C2  EC80  F088         	call	_utoa	;wreg free
 25011  0131C6  0012               	return	
 25012  0131C8                     __end_of_itoa:
 25013                           	opt stack 0
 25014                           tblptru	equ	0xFF8
 25015                           tblptrh	equ	0xFF7
 25016                           tblptrl	equ	0xFF6
 25017                           tablat	equ	0xFF5
 25018                           prodh	equ	0xFF4
 25019                           prodl	equ	0xFF3
 25020                           intcon	equ	0xFF2
 25021                           intcon2	equ	0xFF1
 25022                           intcon3	equ	0xFF0
 25023                           postinc0	equ	0xFEE
 25024                           wreg	equ	0xFE8
 25025                           indf1	equ	0xFE7
 25026                           postinc1	equ	0xFE6
 25027                           postdec1	equ	0xFE5
 25028                           plusw1	equ	0xFE3
 25029                           fsr1h	equ	0xFE2
 25030                           fsr1l	equ	0xFE1
 25031                           indf2	equ	0xFDF
 25032                           postinc2	equ	0xFDE
 25033                           postdec2	equ	0xFDD
 25034                           plusw2	equ	0xFDB
 25035                           fsr2h	equ	0xFDA
 25036                           fsr2l	equ	0xFD9
 25037                           status	equ	0xFD8
 25038                           
 25039 ;; *************** function _utoa *****************
 25040 ;; Defined at:
 25041 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 25042 ;; Parameters:    Size  Location     Type
 25043 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 25044 ;;		 -> _display_itoa@tmp(10), 
 25045 ;;  val             2    9[BANK0 ] unsigned int 
 25046 ;;  base            2   11[BANK0 ] int 
 25047 ;; Auto vars:     Size  Location     Type
 25048 ;;  v               2   13[BANK0 ] unsigned int 
 25049 ;;  c               1   15[BANK0 ] unsigned char 
 25050 ;; Return value:  Size  Location     Type
 25051 ;;                  2    7[BANK0 ] PTR unsigned char 
 25052 ;; Registers used:
 25053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25054 ;; Tracked objects:
 25055 ;;		On entry : 0/0
 25056 ;;		On exit  : 0/0
 25057 ;;		Unchanged: 0/0
 25058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25059 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25060 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25062 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25063 ;;Total ram usage:        9 bytes
 25064 ;; Hardware stack levels used:    1
 25065 ;; Hardware stack levels required when called:   11
 25066 ;; This function calls:
 25067 ;;		___lwdiv
 25068 ;;		___lwmod
 25069 ;; This function is called by:
 25070 ;;		_itoa
 25071 ;; This function uses a non-reentrant model
 25072 ;;
 25073                           
 25074                           	psect	text114
 25075  011100                     __ptext114:
 25076                           	opt stack 0
 25077  011100                     _utoa:
 25078                           	opt stack 15
 25079                           
 25080                           ;incstack = 0
 25081  011100  C069  F06D         	movff	utoa@val,utoa@v
 25082  011104  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 25083  011108  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 25084  01110C  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 25085  011110  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25086  011114  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25087  011118  EC2B  F096         	call	___lwdiv	;wreg free
 25088  01111C  C060  F06D         	movff	?___lwdiv,utoa@v
 25089  011120  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 25090  011124  0100               	movlb	0	; () banked
 25091  011126  4B67               	infsnz	utoa@buf& (0+255),f,b
 25092  011128  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25093                           
 25094                           ; BSR set to: 0
 25095  01112A  516D               	movf	utoa@v& (0+255),w,b
 25096  01112C  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 25097  01112E  A4D8               	btfss	status,2,c
 25098  011130  D7EB               	goto	l3987
 25099                           
 25100                           ; BSR set to: 0
 25101                           
 25102                           ; BSR set to: 0
 25103  011132  C067  FFD9         	movff	utoa@buf,fsr2l
 25104  011136  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25105  01113A  0E00               	movlw	0
 25106  01113C  6EDF               	movwf	indf2,c
 25107                           
 25108                           ; BSR set to: 0
 25109  01113E  0767               	decf	utoa@buf& (0+255),f,b
 25110  011140  A0D8               	btfss	status,0,c
 25111  011142  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25112  011144                     
 25113                           ; BSR set to: 0
 25114                           
 25115                           ; BSR set to: 0
 25116  011144  C069  F060         	movff	utoa@val,___lwmod@dividend
 25117  011148  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 25118  01114C  C06B  F062         	movff	utoa@base,___lwmod@divisor
 25119  011150  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 25120  011154  ECE4  F098         	call	___lwmod	;wreg free
 25121  011158  0100               	movlb	0	; () banked
 25122  01115A  5160               	movf	?___lwmod& (0+255),w,b
 25123  01115C  6F6F               	movwf	utoa@c& (0+255),b
 25124                           
 25125                           ; BSR set to: 0
 25126  01115E  C069  F060         	movff	utoa@val,___lwdiv@dividend
 25127  011162  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 25128  011166  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 25129  01116A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 25130  01116E  EC2B  F096         	call	___lwdiv	;wreg free
 25131  011172  C060  F069         	movff	?___lwdiv,utoa@val
 25132  011176  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 25133  01117A  0E09               	movlw	9
 25134  01117C  0100               	movlb	0	; () banked
 25135  01117E  656F               	cpfsgt	utoa@c& (0+255),b
 25136  011180  D002               	goto	l3990
 25137                           
 25138                           ; BSR set to: 0
 25139  011182  0E07               	movlw	7
 25140  011184  276F               	addwf	utoa@c& (0+255),f,b
 25141  011186                     l3990:
 25142                           
 25143                           ; BSR set to: 0
 25144  011186  0E30               	movlw	48
 25145  011188  276F               	addwf	utoa@c& (0+255),f,b
 25146                           
 25147                           ; BSR set to: 0
 25148  01118A  C067  FFD9         	movff	utoa@buf,fsr2l
 25149  01118E  C068  FFDA         	movff	utoa@buf+1,fsr2h
 25150  011192  C06F  FFDF         	movff	utoa@c,indf2
 25151                           
 25152                           ; BSR set to: 0
 25153  011196  0767               	decf	utoa@buf& (0+255),f,b
 25154  011198  A0D8               	btfss	status,0,c
 25155  01119A  0768               	decf	(utoa@buf+1)& (0+255),f,b
 25156                           
 25157                           ; BSR set to: 0
 25158  01119C  5169               	movf	utoa@val& (0+255),w,b
 25159  01119E  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 25160  0111A0  A4D8               	btfss	status,2,c
 25161  0111A2  D7D0               	goto	l3989
 25162                           
 25163                           ; BSR set to: 0
 25164                           ;	Return value of _utoa is never used
 25165                           
 25166                           ; BSR set to: 0
 25167  0111A4  4B67               	infsnz	utoa@buf& (0+255),f,b
 25168  0111A6  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 25169  0111A8  0012               	return	
 25170  0111AA                     __end_of_utoa:
 25171                           	opt stack 0
 25172                           tblptru	equ	0xFF8
 25173                           tblptrh	equ	0xFF7
 25174                           tblptrl	equ	0xFF6
 25175                           tablat	equ	0xFF5
 25176                           prodh	equ	0xFF4
 25177                           prodl	equ	0xFF3
 25178                           intcon	equ	0xFF2
 25179                           intcon2	equ	0xFF1
 25180                           intcon3	equ	0xFF0
 25181                           postinc0	equ	0xFEE
 25182                           wreg	equ	0xFE8
 25183                           indf1	equ	0xFE7
 25184                           postinc1	equ	0xFE6
 25185                           postdec1	equ	0xFE5
 25186                           plusw1	equ	0xFE3
 25187                           fsr1h	equ	0xFE2
 25188                           fsr1l	equ	0xFE1
 25189                           indf2	equ	0xFDF
 25190                           postinc2	equ	0xFDE
 25191                           postdec2	equ	0xFDD
 25192                           plusw2	equ	0xFDB
 25193                           fsr2h	equ	0xFDA
 25194                           fsr2l	equ	0xFD9
 25195                           status	equ	0xFD8
 25196                           
 25197 ;; *************** function ___lwmod *****************
 25198 ;; Defined at:
 25199 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 25200 ;; Parameters:    Size  Location     Type
 25201 ;;  dividend        2    0[BANK0 ] unsigned int 
 25202 ;;  divisor         2    2[BANK0 ] unsigned int 
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;  counter         1    4[BANK0 ] unsigned char 
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  2    0[BANK0 ] unsigned int 
 25207 ;; Registers used:
 25208 ;;		wreg, status,2, status,0
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/0
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25217 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25218 ;;Total ram usage:        5 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; Hardware stack levels required when called:   10
 25221 ;; This function calls:
 25222 ;;		Nothing
 25223 ;; This function is called by:
 25224 ;;		_utoa
 25225 ;; This function uses a non-reentrant model
 25226 ;;
 25227                           
 25228                           	psect	text115
 25229  0131C8                     __ptext115:
 25230                           	opt stack 0
 25231  0131C8                     ___lwmod:
 25232                           	opt stack 15
 25233                           
 25234                           ; BSR set to: 0
 25235                           ;incstack = 0
 25236  0131C8  0100               	movlb	0	; () banked
 25237  0131CA  5162               	movf	___lwmod@divisor& (0+255),w,b
 25238  0131CC  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 25239  0131CE  B4D8               	btfsc	status,2,c
 25240  0131D0  D018               	goto	l3814
 25241                           
 25242                           ; BSR set to: 0
 25243  0131D2  0E01               	movlw	1
 25244  0131D4  6F64               	movwf	___lwmod@counter& (0+255),b
 25245  0131D6  D004               	goto	l3809
 25246  0131D8                     
 25247                           ; BSR set to: 0
 25248                           
 25249                           ; BSR set to: 0
 25250  0131D8  90D8               	bcf	status,0,c
 25251  0131DA  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 25252  0131DC  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 25253  0131DE  2B64               	incf	___lwmod@counter& (0+255),f,b
 25254  0131E0                     l3809:
 25255                           
 25256                           ; BSR set to: 0
 25257                           
 25258                           ; BSR set to: 0
 25259  0131E0  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 25260  0131E2  D7FA               	goto	l3810
 25261  0131E4                     u17330:
 25262                           
 25263                           ; BSR set to: 0
 25264                           
 25265                           ; BSR set to: 0
 25266                           
 25267                           ; BSR set to: 0
 25268  0131E4  5162               	movf	___lwmod@divisor& (0+255),w,b
 25269  0131E6  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 25270  0131E8  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25271  0131EA  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 25272  0131EC  A0D8               	btfss	status,0,c
 25273  0131EE  D004               	goto	l3813
 25274                           
 25275                           ; BSR set to: 0
 25276  0131F0  5162               	movf	___lwmod@divisor& (0+255),w,b
 25277  0131F2  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 25278  0131F4  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25279  0131F6  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 25280  0131F8                     l3813:
 25281                           
 25282                           ; BSR set to: 0
 25283                           
 25284                           ; BSR set to: 0
 25285  0131F8  90D8               	bcf	status,0,c
 25286  0131FA  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 25287  0131FC  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 25288                           
 25289                           ; BSR set to: 0
 25290  0131FE  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 25291  013200  D7F1               	goto	u17330
 25292  013202                     l3814:
 25293                           
 25294                           ; BSR set to: 0
 25295                           
 25296                           ; BSR set to: 0
 25297  013202  C060  F060         	movff	___lwmod@dividend,?___lwmod
 25298  013206  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 25299                           
 25300                           ; BSR set to: 0
 25301  01320A  0012               	return		;funcret
 25302  01320C                     __end_of___lwmod:
 25303                           	opt stack 0
 25304                           tblptru	equ	0xFF8
 25305                           tblptrh	equ	0xFF7
 25306                           tblptrl	equ	0xFF6
 25307                           tablat	equ	0xFF5
 25308                           prodh	equ	0xFF4
 25309                           prodl	equ	0xFF3
 25310                           intcon	equ	0xFF2
 25311                           intcon2	equ	0xFF1
 25312                           intcon3	equ	0xFF0
 25313                           postinc0	equ	0xFEE
 25314                           wreg	equ	0xFE8
 25315                           indf1	equ	0xFE7
 25316                           postinc1	equ	0xFE6
 25317                           postdec1	equ	0xFE5
 25318                           plusw1	equ	0xFE3
 25319                           fsr1h	equ	0xFE2
 25320                           fsr1l	equ	0xFE1
 25321                           indf2	equ	0xFDF
 25322                           postinc2	equ	0xFDE
 25323                           postdec2	equ	0xFDD
 25324                           plusw2	equ	0xFDB
 25325                           fsr2h	equ	0xFDA
 25326                           fsr2l	equ	0xFD9
 25327                           status	equ	0xFD8
 25328                           
 25329 ;; *************** function ___lwdiv *****************
 25330 ;; Defined at:
 25331 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 25332 ;; Parameters:    Size  Location     Type
 25333 ;;  dividend        2    0[BANK0 ] unsigned int 
 25334 ;;  divisor         2    2[BANK0 ] unsigned int 
 25335 ;; Auto vars:     Size  Location     Type
 25336 ;;  quotient        2    5[BANK0 ] unsigned int 
 25337 ;;  counter         1    4[BANK0 ] unsigned char 
 25338 ;; Return value:  Size  Location     Type
 25339 ;;                  2    0[BANK0 ] unsigned int 
 25340 ;; Registers used:
 25341 ;;		wreg, status,2, status,0
 25342 ;; Tracked objects:
 25343 ;;		On entry : 0/0
 25344 ;;		On exit  : 0/0
 25345 ;;		Unchanged: 0/0
 25346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25348 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25350 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25351 ;;Total ram usage:        7 bytes
 25352 ;; Hardware stack levels used:    1
 25353 ;; Hardware stack levels required when called:   10
 25354 ;; This function calls:
 25355 ;;		Nothing
 25356 ;; This function is called by:
 25357 ;;		_utoa
 25358 ;; This function uses a non-reentrant model
 25359 ;;
 25360                           
 25361                           	psect	text116
 25362  012C56                     __ptext116:
 25363                           	opt stack 0
 25364  012C56                     ___lwdiv:
 25365                           	opt stack 15
 25366                           
 25367                           ; BSR set to: 0
 25368                           ;incstack = 0
 25369  012C56  0E00               	movlw	0
 25370  012C58  0100               	movlb	0	; () banked
 25371  012C5A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 25372  012C5C  0E00               	movlw	0
 25373  012C5E  6F65               	movwf	___lwdiv@quotient& (0+255),b
 25374                           
 25375                           ; BSR set to: 0
 25376  012C60  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25377  012C62  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 25378  012C64  B4D8               	btfsc	status,2,c
 25379  012C66  D01C               	goto	l3804
 25380                           
 25381                           ; BSR set to: 0
 25382  012C68  0E01               	movlw	1
 25383  012C6A  6F64               	movwf	___lwdiv@counter& (0+255),b
 25384  012C6C  D004               	goto	l3799
 25385  012C6E                     
 25386                           ; BSR set to: 0
 25387                           
 25388                           ; BSR set to: 0
 25389  012C6E  90D8               	bcf	status,0,c
 25390  012C70  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 25391  012C72  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 25392  012C74  2B64               	incf	___lwdiv@counter& (0+255),f,b
 25393  012C76                     l3799:
 25394                           
 25395                           ; BSR set to: 0
 25396                           
 25397                           ; BSR set to: 0
 25398  012C76  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 25399  012C78  D7FA               	goto	l3800
 25400  012C7A                     u17300:
 25401                           
 25402                           ; BSR set to: 0
 25403                           
 25404                           ; BSR set to: 0
 25405                           
 25406                           ; BSR set to: 0
 25407  012C7A  90D8               	bcf	status,0,c
 25408  012C7C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 25409  012C7E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 25410                           
 25411                           ; BSR set to: 0
 25412  012C80  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25413  012C82  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 25414  012C84  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25415  012C86  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 25416  012C88  A0D8               	btfss	status,0,c
 25417  012C8A  D005               	goto	l3803
 25418                           
 25419                           ; BSR set to: 0
 25420  012C8C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 25421  012C8E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 25422  012C90  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25423  012C92  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 25424                           
 25425                           ; BSR set to: 0
 25426  012C94  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 25427  012C96                     l3803:
 25428                           
 25429                           ; BSR set to: 0
 25430                           
 25431                           ; BSR set to: 0
 25432  012C96  90D8               	bcf	status,0,c
 25433  012C98  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 25434  012C9A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 25435                           
 25436                           ; BSR set to: 0
 25437  012C9C  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 25438  012C9E  D7ED               	goto	u17300
 25439  012CA0                     l3804:
 25440                           
 25441                           ; BSR set to: 0
 25442                           
 25443                           ; BSR set to: 0
 25444  012CA0  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 25445  012CA4  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 25446                           
 25447                           ; BSR set to: 0
 25448  012CA8  0012               	return		;funcret
 25449  012CAA                     __end_of___lwdiv:
 25450                           	opt stack 0
 25451                           tblptru	equ	0xFF8
 25452                           tblptrh	equ	0xFF7
 25453                           tblptrl	equ	0xFF6
 25454                           tablat	equ	0xFF5
 25455                           prodh	equ	0xFF4
 25456                           prodl	equ	0xFF3
 25457                           intcon	equ	0xFF2
 25458                           intcon2	equ	0xFF1
 25459                           intcon3	equ	0xFF0
 25460                           postinc0	equ	0xFEE
 25461                           wreg	equ	0xFE8
 25462                           indf1	equ	0xFE7
 25463                           postinc1	equ	0xFE6
 25464                           postdec1	equ	0xFE5
 25465                           plusw1	equ	0xFE3
 25466                           fsr1h	equ	0xFE2
 25467                           fsr1l	equ	0xFE1
 25468                           indf2	equ	0xFDF
 25469                           postinc2	equ	0xFDE
 25470                           postdec2	equ	0xFDD
 25471                           plusw2	equ	0xFDB
 25472                           fsr2h	equ	0xFDA
 25473                           fsr2l	equ	0xFD9
 25474                           status	equ	0xFD8
 25475                           
 25476 ;; *************** function _buck_operate *****************
 25477 ;; Defined at:
 25478 ;;		line 550 in file "buck.c"
 25479 ;; Parameters:    Size  Location     Type
 25480 ;;		None
 25481 ;; Auto vars:     Size  Location     Type
 25482 ;;		None
 25483 ;; Return value:  Size  Location     Type
 25484 ;;                  1    wreg      void 
 25485 ;; Registers used:
 25486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25487 ;; Tracked objects:
 25488 ;;		On entry : 0/0
 25489 ;;		On exit  : 0/0
 25490 ;;		Unchanged: 0/0
 25491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25496 ;;Total ram usage:        0 bytes
 25497 ;; Hardware stack levels used:    1
 25498 ;; Hardware stack levels required when called:   14
 25499 ;; This function calls:
 25500 ;;		__buck_operate_local
 25501 ;;		__buck_operate_remote
 25502 ;; This function is called by:
 25503 ;;		_main
 25504 ;; This function uses a non-reentrant model
 25505 ;;
 25506                           
 25507                           	psect	text117
 25508  012824                     __ptext117:
 25509                           	opt stack 0
 25510  012824                     _buck_operate:
 25511                           	opt stack 16
 25512                           
 25513                           ;buck.c: 553: if(buck_remote_enable)
 25514                           
 25515                           ; BSR set to: 0
 25516                           ;incstack = 0
 25517  012824  0101               	movlb	1	; () banked
 25518  012826  51F1               	movf	_buck_remote_enable& (0+255),w,b
 25519  012828  B4D8               	btfsc	status,2,c
 25520  01282A  D022               	goto	l2602
 25521                           
 25522                           ; BSR set to: 1
 25523                           ;buck.c: 554: {;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 25524  01282C  0E80               	movlw	128
 25525  01282E  601C               	cpfslt	_buck_status,c
 25526  012830  D01C               	goto	l2603
 25527  012832  D00D               	goto	l2604
 25528  012834                     
 25529                           ;buck.c: 563: buck_remote_on = 0;
 25530                           
 25531                           ; BSR set to: 1
 25532  012834  0E00               	movlw	0
 25533  012836  D001               	goto	L12
 25534  012838                     
 25535                           ;buck.c: 567: buck_remote_on = 1;
 25536                           
 25537                           ; BSR set to: 0
 25538  012838  0E01               	movlw	1
 25539  01283A                     L12:
 25540  01283A  0100               	movlb	0	; () banked
 25541  01283C  6FE3               	movwf	_buck_remote_on& (0+255),b
 25542                           
 25543                           ;buck.c: 568: buck_remote_synchronous = 0;
 25544  01283E  0E00               	movlw	0
 25545  012840  D004               	goto	L13
 25546  012842                     
 25547                           ;buck.c: 571: buck_remote_on = 1;
 25548                           
 25549                           ; BSR set to: 0
 25550  012842  0E01               	movlw	1
 25551  012844  0100               	movlb	0	; () banked
 25552  012846  6FE3               	movwf	_buck_remote_on& (0+255),b
 25553                           
 25554                           ;buck.c: 572: buck_remote_synchronous = 1;
 25555  012848  0E01               	movlw	1
 25556  01284A                     L13:
 25557  01284A  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;buck.c: 574: }
 25561                           
 25562                           ;buck.c: 573: break;
 25563  01284C  D00A               	goto	l2606
 25564  01284E                     l2604:
 25565                           
 25566                           ; BSR set to: 0
 25567  01284E  501C               	movf	_buck_status,w,c
 25568                           
 25569                           ; Switch size 1, requested type "space"
 25570                           ; Number of cases is 3, Range of values is 0 to 3
 25571                           ; switch strategies available:
 25572                           ; Name         Instructions Cycles
 25573                           ; simple_byte           10     6 (average)
 25574                           ;	Chosen strategy is simple_byte
 25575  012850  0A00               	xorlw	0	; case 0
 25576  012852  B4D8               	btfsc	status,2,c
 25577  012854  D7EF               	goto	l2605
 25578  012856  0A02               	xorlw	2	; case 2
 25579  012858  B4D8               	btfsc	status,2,c
 25580  01285A  D7EE               	goto	l2607
 25581  01285C  0A01               	xorlw	1	; case 3
 25582  01285E  B4D8               	btfsc	status,2,c
 25583  012860  D7F0               	goto	l2608
 25584  012862                     l2606:
 25585                           
 25586                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 25587  012862  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25588                           
 25589                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 25590  012866  0E80               	movlw	128
 25591  012868  261C               	addwf	_buck_status,f,c
 25592  01286A                     l2603:
 25593                           
 25594                           ;buck.c: 577: };buck.c: 578: _buck_operate_remote();
 25595  01286A  ECFE  F07D         	call	__buck_operate_remote	;wreg free
 25596                           
 25597                           ;buck.c: 579: }
 25598  01286E  0012               	return	
 25599  012870                     l2602:
 25600                           
 25601                           ;buck.c: 580: else;buck.c: 581: {;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 25602  012870  0E7F               	movlw	127
 25603  012872  641C               	cpfsgt	_buck_status,c
 25604  012874  D002               	goto	l2610
 25605                           
 25606                           ;buck.c: 583: {;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 25607  012876  0E80               	movlw	128
 25608  012878  5E1C               	subwf	_buck_status,f,c
 25609  01287A                     l2610:
 25610                           
 25611                           ;buck.c: 587: };buck.c: 588: _buck_operate_local();
 25612  01287A  EC53  F055         	call	__buck_operate_local	;wreg free
 25613  01287E  0012               	return	
 25614  012880                     __end_of_buck_operate:
 25615                           	opt stack 0
 25616                           tblptru	equ	0xFF8
 25617                           tblptrh	equ	0xFF7
 25618                           tblptrl	equ	0xFF6
 25619                           tablat	equ	0xFF5
 25620                           prodh	equ	0xFF4
 25621                           prodl	equ	0xFF3
 25622                           intcon	equ	0xFF2
 25623                           intcon2	equ	0xFF1
 25624                           intcon3	equ	0xFF0
 25625                           postinc0	equ	0xFEE
 25626                           wreg	equ	0xFE8
 25627                           indf1	equ	0xFE7
 25628                           postinc1	equ	0xFE6
 25629                           postdec1	equ	0xFE5
 25630                           plusw1	equ	0xFE3
 25631                           fsr1h	equ	0xFE2
 25632                           fsr1l	equ	0xFE1
 25633                           indf2	equ	0xFDF
 25634                           postinc2	equ	0xFDE
 25635                           postdec2	equ	0xFDD
 25636                           plusw2	equ	0xFDB
 25637                           fsr2h	equ	0xFDA
 25638                           fsr2l	equ	0xFD9
 25639                           status	equ	0xFD8
 25640                           
 25641 ;; *************** function __buck_operate_remote *****************
 25642 ;; Defined at:
 25643 ;;		line 453 in file "buck.c"
 25644 ;; Parameters:    Size  Location     Type
 25645 ;;		None
 25646 ;; Auto vars:     Size  Location     Type
 25647 ;;		None
 25648 ;; Return value:  Size  Location     Type
 25649 ;;                  1    wreg      void 
 25650 ;; Registers used:
 25651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25652 ;; Tracked objects:
 25653 ;;		On entry : 0/0
 25654 ;;		On exit  : 0/0
 25655 ;;		Unchanged: 0/0
 25656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25661 ;;Total ram usage:        1 bytes
 25662 ;; Hardware stack levels used:    1
 25663 ;; Hardware stack levels required when called:   13
 25664 ;; This function calls:
 25665 ;;		__buck_initial_dutycycle
 25666 ;;		__buck_prepare
 25667 ;;		__buck_set_dutycycle
 25668 ;;		__buck_set_sync_async
 25669 ;;		__buck_start
 25670 ;;		__buck_stop
 25671 ;; This function is called by:
 25672 ;;		_buck_operate
 25673 ;; This function uses a non-reentrant model
 25674 ;;
 25675                           
 25676                           	psect	text118
 25677  00FBFC                     __ptext118:
 25678                           	opt stack 0
 25679  00FBFC                     __buck_operate_remote:
 25680                           	opt stack 16
 25681                           
 25682                           ;buck.c: 455: switch(buck_status)
 25683                           
 25684                           ;incstack = 0
 25685  00FBFC  D070               	goto	l2574
 25686  00FBFE                     
 25687                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 25688  00FBFE  0102               	movlb	2	; () banked
 25689  00FC00  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 25690  00FC02  0B30               	andlw	48
 25691  00FC04  0A30               	xorlw	48
 25692  00FC06  A4D8               	btfss	status,2,c
 25693  00FC08  0012               	return	
 25694                           
 25695                           ; BSR set to: 2
 25696                           ;buck.c: 459: {;buck.c: 460: if(buck_remote_on)
 25697  00FC0A  0100               	movlb	0	; () banked
 25698  00FC0C  51E3               	movf	_buck_remote_on& (0+255),w,b
 25699  00FC0E  B4D8               	btfsc	status,2,c
 25700  00FC10  0012               	return	
 25701                           
 25702                           ; BSR set to: 0
 25703                           ;buck.c: 461: {;buck.c: 464: _buck_prepare();
 25704  00FC12  EC5E  F092         	call	__buck_prepare	;wreg free
 25705                           
 25706                           ;buck.c: 465: };buck.c: 466: };buck.c: 467: break;
 25707  00FC16  0012               	return	
 25708  00FC18                     
 25709                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 25710  00FC18  0102               	movlb	2	; () banked
 25711  00FC1A  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 25712  00FC1C  0B30               	andlw	48
 25713  00FC1E  0A30               	xorlw	48
 25714  00FC20  A4D8               	btfss	status,2,c
 25715  00FC22  0012               	return	
 25716                           
 25717                           ; BSR set to: 2
 25718                           ;buck.c: 471: {;buck.c: 473: if(buck_remote_synchronous)
 25719  00FC24  0100               	movlb	0	; () banked
 25720  00FC26  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 25721  00FC28  B4D8               	btfsc	status,2,c
 25722  00FC2A  D00C               	goto	l2581
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;buck.c: 474: {;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle(
      +                          ));
 25726  00FC2C  EC72  F087         	call	__buck_initial_dutycycle	;wreg free
 25727  00FC30  0100               	movlb	0	; () banked
 25728  00FC32  6F76               	movwf	__buck_operate_remote$8818& (0+255),b
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;buck.c: 474: {;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle(
      +                          ));
 25732  00FC34  C076  F072         	movff	__buck_operate_remote$8818,__buck_start@dutycycle
 25733  00FC38  0E01               	movlw	1
 25734  00FC3A  ECF0  F085         	call	__buck_start
 25735                           
 25736                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 25737  00FC3E  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25738                           
 25739                           ;buck.c: 478: }
 25740  00FC42  0012               	return	
 25741  00FC44                     l2581:
 25742                           
 25743                           ;buck.c: 479: else;buck.c: 480: {;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 25744  00FC44  0E28               	movlw	40
 25745  00FC46  0100               	movlb	0	; () banked
 25746  00FC48  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 25747  00FC4A  0E00               	movlw	0
 25748  00FC4C  ECF0  F085         	call	__buck_start
 25749                           
 25750                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 25751  00FC50  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 25752                           
 25753                           ;buck.c: 484: };buck.c: 485: };buck.c: 486: break;
 25754  00FC54  0012               	return	
 25755  00FC56                     
 25756                           ;buck.c: 490: if(!buck_remote_on)
 25757  00FC56  0100               	movlb	0	; () banked
 25758  00FC58  51E3               	movf	_buck_remote_on& (0+255),w,b
 25759  00FC5A  A4D8               	btfss	status,2,c
 25760  00FC5C  D003               	goto	l2584
 25761                           
 25762                           ; BSR set to: 0
 25763                           ;buck.c: 491: {;buck.c: 493: _buck_stop();
 25764  00FC5E  ECCF  F09B         	call	__buck_stop	;wreg free
 25765                           
 25766                           ;buck.c: 494: }
 25767  00FC62  0012               	return	
 25768  00FC64                     l2584:
 25769                           
 25770                           ;buck.c: 496: else if(buck_remote_synchronous)
 25771  00FC64  0100               	movlb	0	; () banked
 25772  00FC66  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 25773  00FC68  B4D8               	btfsc	status,2,c
 25774  00FC6A  D00A               	goto	l2586
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;buck.c: 497: {;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 25778  00FC6C  EC72  F087         	call	__buck_initial_dutycycle	;wreg free
 25779  00FC70  0100               	movlb	0	; () banked
 25780  00FC72  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 25781                           
 25782                           ; BSR set to: 0
 25783                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 25784  00FC74  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 25785  00FC78  0E01               	movlw	1
 25786  00FC7A  EC41  F090         	call	__buck_set_sync_async
 25787                           
 25788                           ;buck.c: 502: }
 25789  00FC7E  0012               	return	
 25790  00FC80                     l2586:
 25791                           
 25792                           ;buck.c: 503: else;buck.c: 504: {;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 25793  00FC80  0100               	movlb	0	; () banked
 25794  00FC82  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 25795  00FC84  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 25796  00FC86  B4D8               	btfsc	status,2,c
 25797  00FC88  0012               	return	
 25798                           
 25799                           ; BSR set to: 0
 25800                           ;buck.c: 507: {;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 25801  00FC8A  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 25802  00FC8C  EC8D  F091         	call	__buck_set_dutycycle
 25803                           
 25804                           ;buck.c: 509: };buck.c: 510: };buck.c: 511: break;
 25805  00FC90  0012               	return	
 25806  00FC92                     
 25807                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 25808  00FC92  0100               	movlb	0	; () banked
 25809  00FC94  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 25810  00FC96  EC8D  F091         	call	__buck_set_dutycycle
 25811                           
 25812                           ;buck.c: 515: if(!buck_remote_on)
 25813  00FC9A  0100               	movlb	0	; () banked
 25814  00FC9C  51E3               	movf	_buck_remote_on& (0+255),w,b
 25815  00FC9E  A4D8               	btfss	status,2,c
 25816  00FCA0  D003               	goto	l2590
 25817                           
 25818                           ; BSR set to: 0
 25819                           ;buck.c: 516: {;buck.c: 518: _buck_stop();
 25820  00FCA2  ECCF  F09B         	call	__buck_stop	;wreg free
 25821                           
 25822                           ;buck.c: 519: }
 25823  00FCA6  0012               	return	
 25824  00FCA8                     l2590:
 25825                           
 25826                           ;buck.c: 521: else if(!buck_remote_synchronous)
 25827  00FCA8  0100               	movlb	0	; () banked
 25828  00FCAA  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 25829  00FCAC  A4D8               	btfss	status,2,c
 25830  00FCAE  D00B               	goto	l2592
 25831                           
 25832                           ; BSR set to: 0
 25833                           ;buck.c: 522: {;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 25834  00FCB0  EC72  F087         	call	__buck_initial_dutycycle	;wreg free
 25835  00FCB4  0FFB               	addlw	251
 25836  00FCB6  0100               	movlb	0	; () banked
 25837  00FCB8  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 25838                           
 25839                           ; BSR set to: 0
 25840                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 25841  00FCBA  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 25842  00FCBE  0E00               	movlw	0
 25843  00FCC0  EC41  F090         	call	__buck_set_sync_async
 25844                           
 25845                           ;buck.c: 526: }
 25846  00FCC4  0012               	return	
 25847  00FCC6                     l2592:
 25848                           
 25849                           ;buck.c: 527: else;buck.c: 528: {;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 25850  00FCC6  0100               	movlb	0	; () banked
 25851  00FCC8  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 25852  00FCCA  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 25853  00FCCC  B4D8               	btfsc	status,2,c
 25854  00FCCE  0012               	return	
 25855                           
 25856                           ; BSR set to: 0
 25857                           ;buck.c: 531: {;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 25858  00FCD0  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 25859  00FCD2  EC8D  F091         	call	__buck_set_dutycycle
 25860                           
 25861                           ;buck.c: 533: };buck.c: 534: };buck.c: 535: break;
 25862  00FCD6  0012               	return	
 25863  00FCD8                     
 25864                           ;buck.c: 539: _buck_stop();
 25865  00FCD8  ECCF  F09B         	call	__buck_stop	;wreg free
 25866                           
 25867                           ;buck.c: 540: }
 25868  00FCDC  0012               	return	
 25869  00FCDE                     l2574:
 25870  00FCDE  501C               	movf	_buck_status,w,c
 25871                           
 25872                           ; Switch size 1, requested type "space"
 25873                           ; Number of cases is 4, Range of values is 128 to 131
 25874                           ; switch strategies available:
 25875                           ; Name         Instructions Cycles
 25876                           ; simple_byte           13     7 (average)
 25877                           ;	Chosen strategy is simple_byte
 25878  00FCE0  0A80               	xorlw	128	; case 128
 25879  00FCE2  B4D8               	btfsc	status,2,c
 25880  00FCE4  D78C               	goto	l2575
 25881  00FCE6  0A01               	xorlw	1	; case 129
 25882  00FCE8  B4D8               	btfsc	status,2,c
 25883  00FCEA  D796               	goto	l2579
 25884  00FCEC  0A03               	xorlw	3	; case 130
 25885  00FCEE  B4D8               	btfsc	status,2,c
 25886  00FCF0  D7B2               	goto	l2583
 25887  00FCF2  0A01               	xorlw	1	; case 131
 25888  00FCF4  B4D8               	btfsc	status,2,c
 25889  00FCF6  D7CD               	goto	l2589
 25890  00FCF8  D7EF               	goto	l2595
 25891  00FCFA                     __end_of__buck_operate_remote:
 25892                           	opt stack 0
 25893                           tblptru	equ	0xFF8
 25894                           tblptrh	equ	0xFF7
 25895                           tblptrl	equ	0xFF6
 25896                           tablat	equ	0xFF5
 25897                           prodh	equ	0xFF4
 25898                           prodl	equ	0xFF3
 25899                           intcon	equ	0xFF2
 25900                           intcon2	equ	0xFF1
 25901                           intcon3	equ	0xFF0
 25902                           postinc0	equ	0xFEE
 25903                           wreg	equ	0xFE8
 25904                           indf1	equ	0xFE7
 25905                           postinc1	equ	0xFE6
 25906                           postdec1	equ	0xFE5
 25907                           plusw1	equ	0xFE3
 25908                           fsr1h	equ	0xFE2
 25909                           fsr1l	equ	0xFE1
 25910                           indf2	equ	0xFDF
 25911                           postinc2	equ	0xFDE
 25912                           postdec2	equ	0xFDD
 25913                           plusw2	equ	0xFDB
 25914                           fsr2h	equ	0xFDA
 25915                           fsr2l	equ	0xFD9
 25916                           status	equ	0xFD8
 25917                           
 25918 ;; *************** function __buck_prepare *****************
 25919 ;; Defined at:
 25920 ;;		line 125 in file "buck.c"
 25921 ;; Parameters:    Size  Location     Type
 25922 ;;		None
 25923 ;; Auto vars:     Size  Location     Type
 25924 ;;  cntr            1    0[BANK0 ] unsigned char 
 25925 ;; Return value:  Size  Location     Type
 25926 ;;                  1    wreg      void 
 25927 ;; Registers used:
 25928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25929 ;; Tracked objects:
 25930 ;;		On entry : 0/0
 25931 ;;		On exit  : 0/0
 25932 ;;		Unchanged: 0/0
 25933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25938 ;;Total ram usage:        1 bytes
 25939 ;; Hardware stack levels used:    1
 25940 ;; Hardware stack levels required when called:   10
 25941 ;; This function calls:
 25942 ;;		Nothing
 25943 ;; This function is called by:
 25944 ;;		__buck_operate_remote
 25945 ;; This function uses a non-reentrant model
 25946 ;;
 25947                           
 25948                           	psect	text119
 25949  0124BC                     __ptext119:
 25950                           	opt stack 0
 25951  0124BC                     __buck_prepare:
 25952                           	opt stack 18
 25953                           
 25954                           ;buck.c: 127: uint8_t cntr;;buck.c: 128: LATBbits.LB1 = 1;
 25955                           
 25956                           ;incstack = 0
 25957  0124BC  828A               	bsf	3978,1,c	;volatile
 25958                           
 25959                           ;buck.c: 129: if(buck_status<0x80)
 25960  0124BE  0E80               	movlw	128
 25961  0124C0  601C               	cpfslt	_buck_status,c
 25962  0124C2  D002               	goto	l2492
 25963                           
 25964                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 25965  0124C4  0E01               	movlw	1
 25966  0124C6  D001               	goto	L14
 25967  0124C8                     l2492:
 25968                           
 25969                           ;buck.c: 131: else;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 25970  0124C8  0E81               	movlw	129
 25971  0124CA                     L14:
 25972  0124CA  6E1C               	movwf	_buck_status,c
 25973                           
 25974                           ;buck.c: 134: os.input_current = 0;
 25975  0124CC  0E00               	movlw	0
 25976  0124CE  0102               	movlb	2	; () banked
 25977  0124D0  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 25978  0124D2  0E00               	movlw	0
 25979  0124D4  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 25980                           
 25981                           ;buck.c: 135: os.output_current = 0;
 25982  0124D6  0E00               	movlw	0
 25983  0124D8  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 25984  0124DA  0E00               	movlw	0
 25985  0124DC  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 25986                           
 25987                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 25988  0124DE  0E00               	movlw	0
 25989  0124E0  0100               	movlb	0	; () banked
 25990  0124E2  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 25991  0124E4                     l20009:
 25992                           
 25993                           ; BSR set to: 0
 25994  0124E4  0E03               	movlw	3
 25995  0124E6  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 25996  0124E8  D001               	goto	l2494
 25997  0124EA  0012               	return	
 25998  0124EC                     l2494:
 25999                           
 26000                           ; BSR set to: 0
 26001                           ;buck.c: 137: {;buck.c: 138: os.input_current_adc[cntr] = 0;
 26002                           
 26003                           ; BSR set to: 0
 26004  0124EC  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 26005  0124EE  0D02               	mullw	2
 26006  0124F0  0E14               	movlw	low (_os+20)
 26007  0124F2  24F3               	addwf	prodl,w,c
 26008  0124F4  6ED9               	movwf	fsr2l,c
 26009  0124F6  0E02               	movlw	high (_os+20)
 26010  0124F8  20F4               	addwfc	prodh,w,c
 26011  0124FA  6EDA               	movwf	fsr2h,c
 26012  0124FC  0E00               	movlw	0
 26013  0124FE  6EDE               	movwf	postinc2,c
 26014  012500  0E00               	movlw	0
 26015  012502  6EDD               	movwf	postdec2,c
 26016                           
 26017                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 26018  012504  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 26019  012506  0D02               	mullw	2
 26020  012508  0E29               	movlw	low (_os+41)
 26021  01250A  24F3               	addwf	prodl,w,c
 26022  01250C  6ED9               	movwf	fsr2l,c
 26023  01250E  0E02               	movlw	high (_os+41)
 26024  012510  20F4               	addwfc	prodh,w,c
 26025  012512  6EDA               	movwf	fsr2h,c
 26026  012514  0E00               	movlw	0
 26027  012516  6EDE               	movwf	postinc2,c
 26028  012518  0E00               	movlw	0
 26029  01251A  6EDD               	movwf	postdec2,c
 26030                           
 26031                           ; BSR set to: 0
 26032  01251C  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 26033  01251E  D7E2               	goto	l20009
 26034  012520                     __end_of__buck_prepare:
 26035                           	opt stack 0
 26036                           tblptru	equ	0xFF8
 26037                           tblptrh	equ	0xFF7
 26038                           tblptrl	equ	0xFF6
 26039                           tablat	equ	0xFF5
 26040                           prodh	equ	0xFF4
 26041                           prodl	equ	0xFF3
 26042                           intcon	equ	0xFF2
 26043                           intcon2	equ	0xFF1
 26044                           intcon3	equ	0xFF0
 26045                           postinc0	equ	0xFEE
 26046                           wreg	equ	0xFE8
 26047                           indf1	equ	0xFE7
 26048                           postinc1	equ	0xFE6
 26049                           postdec1	equ	0xFE5
 26050                           plusw1	equ	0xFE3
 26051                           fsr1h	equ	0xFE2
 26052                           fsr1l	equ	0xFE1
 26053                           indf2	equ	0xFDF
 26054                           postinc2	equ	0xFDE
 26055                           postdec2	equ	0xFDD
 26056                           plusw2	equ	0xFDB
 26057                           fsr2h	equ	0xFDA
 26058                           fsr2l	equ	0xFD9
 26059                           status	equ	0xFD8
 26060                           
 26061 ;; *************** function __buck_operate_local *****************
 26062 ;; Defined at:
 26063 ;;		line 308 in file "buck.c"
 26064 ;; Parameters:    Size  Location     Type
 26065 ;;		None
 26066 ;; Auto vars:     Size  Location     Type
 26067 ;;  cntr            1   29[BANK0 ] unsigned char 
 26068 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 26069 ;; Return value:  Size  Location     Type
 26070 ;;                  1    wreg      void 
 26071 ;; Registers used:
 26072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26073 ;; Tracked objects:
 26074 ;;		On entry : 0/0
 26075 ;;		On exit  : 0/0
 26076 ;;		Unchanged: 0/0
 26077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26079 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26080 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26081 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26082 ;;Total ram usage:        8 bytes
 26083 ;; Hardware stack levels used:    1
 26084 ;; Hardware stack levels required when called:   13
 26085 ;; This function calls:
 26086 ;;		___lmul
 26087 ;;		__buck_initial_dutycycle
 26088 ;;		__buck_set_dutycycle
 26089 ;;		__buck_set_sync_async
 26090 ;;		__buck_start
 26091 ;;		__buck_stop
 26092 ;; This function is called by:
 26093 ;;		_buck_operate
 26094 ;; This function uses a non-reentrant model
 26095 ;;
 26096                           
 26097                           	psect	text120
 26098  00AAA6                     __ptext120:
 26099                           	opt stack 0
 26100  00AAA6                     __buck_operate_local:
 26101                           	opt stack 16
 26102                           
 26103                           ;buck.c: 310: uint8_t cntr;;buck.c: 311: uint8_t tmp_dutycycle;;buck.c: 313: switch(buck
      +                          _status)
 26104                           
 26105                           ; BSR set to: 0
 26106                           ;incstack = 0
 26107  00AAA6  D230               	goto	l2537
 26108  00AAA8                     
 26109                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 26110  00AAA8  0102               	movlb	2	; () banked
 26111  00AAAA  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26112  00AAAC  0B30               	andlw	48
 26113  00AAAE  0A30               	xorlw	48
 26114  00AAB0  A4D8               	btfss	status,2,c
 26115  00AAB2  0012               	return	
 26116                           
 26117                           ; BSR set to: 2
 26118                           ;buck.c: 317: {;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 26119  00AAB4  0E0C               	movlw	12
 26120  00AAB6  0100               	movlb	0	; () banked
 26121  00AAB8  6F76               	movwf	??__buck_operate_local& (0+255),b
 26122  00AABA  0EFE               	movlw	254
 26123  00AABC  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 26124  00AABE  EE22  F012         	lfsr	2,_os+18	;volatile
 26125  00AAC2  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 26126  00AAC6  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 26127  00AACA  5176               	movf	??__buck_operate_local& (0+255),w,b
 26128  00AACC  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 26129  00AACE  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 26130  00AAD0  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 26131  00AAD2  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 26132  00AAD4  0102               	movlb	2	; () banked
 26133  00AAD6  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 26134  00AAD8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26135  00AADA  0A80               	xorlw	128
 26136  00AADC  0100               	movlb	0	; () banked
 26137  00AADE  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 26138  00AAE0  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 26139  00AAE2  0A80               	xorlw	128
 26140  00AAE4  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 26141  00AAE6  B0D8               	btfsc	status,0,c
 26142  00AAE8  0012               	return	
 26143                           
 26144                           ; BSR set to: 0
 26145                           ;buck.c: 319: {;buck.c: 320: LATBbits.LB1 = 1;
 26146  00AAEA  828A               	bsf	3978,1,c	;volatile
 26147                           
 26148                           ; BSR set to: 0
 26149                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 26150  00AAEC  0E01               	movlw	1
 26151  00AAEE  6E1C               	movwf	_buck_status,c
 26152                           
 26153                           ;buck.c: 323: os.input_current = 0;
 26154  00AAF0  0E00               	movlw	0
 26155  00AAF2  0102               	movlb	2	; () banked
 26156  00AAF4  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 26157  00AAF6  0E00               	movlw	0
 26158  00AAF8  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 26159                           
 26160                           ;buck.c: 324: os.output_current = 0;
 26161  00AAFA  0E00               	movlw	0
 26162  00AAFC  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 26163  00AAFE  0E00               	movlw	0
 26164  00AB00  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 26165                           
 26166                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 26167  00AB02  0E00               	movlw	0
 26168  00AB04  0100               	movlb	0	; () banked
 26169  00AB06  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26170  00AB08                     l21769:
 26171                           
 26172                           ; BSR set to: 0
 26173  00AB08  0E03               	movlw	3
 26174  00AB0A  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26175  00AB0C  D001               	goto	l2541
 26176  00AB0E  0012               	return	
 26177  00AB10                     l2541:
 26178                           
 26179                           ; BSR set to: 0
 26180                           ;buck.c: 326: {;buck.c: 327: os.input_current_adc[cntr] = 0;
 26181                           
 26182                           ; BSR set to: 0
 26183  00AB10  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26184  00AB12  0D02               	mullw	2
 26185  00AB14  0E14               	movlw	low (_os+20)
 26186  00AB16  24F3               	addwf	prodl,w,c
 26187  00AB18  6ED9               	movwf	fsr2l,c
 26188  00AB1A  0E02               	movlw	high (_os+20)
 26189  00AB1C  20F4               	addwfc	prodh,w,c
 26190  00AB1E  6EDA               	movwf	fsr2h,c
 26191  00AB20  0E00               	movlw	0
 26192  00AB22  6EDE               	movwf	postinc2,c
 26193  00AB24  0E00               	movlw	0
 26194  00AB26  6EDD               	movwf	postdec2,c
 26195                           
 26196                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 26197  00AB28  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26198  00AB2A  0D02               	mullw	2
 26199  00AB2C  0E29               	movlw	low (_os+41)
 26200  00AB2E  24F3               	addwf	prodl,w,c
 26201  00AB30  6ED9               	movwf	fsr2l,c
 26202  00AB32  0E02               	movlw	high (_os+41)
 26203  00AB34  20F4               	addwfc	prodh,w,c
 26204  00AB36  6EDA               	movwf	fsr2h,c
 26205  00AB38  0E00               	movlw	0
 26206  00AB3A  6EDE               	movwf	postinc2,c
 26207  00AB3C  0E00               	movlw	0
 26208  00AB3E  6EDD               	movwf	postdec2,c
 26209                           
 26210                           ; BSR set to: 0
 26211  00AB40  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26212  00AB42  D7E2               	goto	l21769
 26213  00AB44                     
 26214                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 26215                           
 26216                           ; BSR set to: 0
 26217  00AB44  0102               	movlb	2	; () banked
 26218  00AB46  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26219  00AB48  0B30               	andlw	48
 26220  00AB4A  0A30               	xorlw	48
 26221  00AB4C  A4D8               	btfss	status,2,c
 26222  00AB4E  0012               	return	
 26223                           
 26224                           ; BSR set to: 2
 26225                           ;buck.c: 336: {;buck.c: 338: os.input_current_calibration = 0;
 26226  00AB50  0E00               	movlw	0
 26227  00AB52  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 26228                           
 26229                           ;buck.c: 339: os.output_current_calibration = 0;
 26230  00AB54  0E00               	movlw	0
 26231  00AB56  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 26232                           
 26233                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 26234  00AB58  0E00               	movlw	0
 26235  00AB5A  0100               	movlb	0	; () banked
 26236  00AB5C  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 26237  00AB5E                     l21783:
 26238                           
 26239                           ; BSR set to: 0
 26240  00AB5E  0E03               	movlw	3
 26241  00AB60  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 26242  00AB62  D001               	goto	l2546
 26243  00AB64  D01A               	goto	u21470
 26244  00AB66                     l2546:
 26245                           
 26246                           ; BSR set to: 0
 26247                           ;buck.c: 341: {;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 26248                           
 26249                           ; BSR set to: 0
 26250  00AB66  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26251  00AB68  0D02               	mullw	2
 26252  00AB6A  0E14               	movlw	low (_os+20)
 26253  00AB6C  24F3               	addwf	prodl,w,c
 26254  00AB6E  6ED9               	movwf	fsr2l,c
 26255  00AB70  0E02               	movlw	high (_os+20)
 26256  00AB72  20F4               	addwfc	prodh,w,c
 26257  00AB74  6EDA               	movwf	fsr2h,c
 26258  00AB76  50DF               	movf	indf2,w,c
 26259  00AB78  0102               	movlb	2	; () banked
 26260  00AB7A  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 26261                           
 26262                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 26263  00AB7C  0100               	movlb	0	; () banked
 26264  00AB7E  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 26265  00AB80  0D02               	mullw	2
 26266  00AB82  0E29               	movlw	low (_os+41)
 26267  00AB84  24F3               	addwf	prodl,w,c
 26268  00AB86  6ED9               	movwf	fsr2l,c
 26269  00AB88  0E02               	movlw	high (_os+41)
 26270  00AB8A  20F4               	addwfc	prodh,w,c
 26271  00AB8C  6EDA               	movwf	fsr2h,c
 26272  00AB8E  50DF               	movf	indf2,w,c
 26273  00AB90  0102               	movlb	2	; () banked
 26274  00AB92  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 26275                           
 26276                           ; BSR set to: 2
 26277  00AB94  0100               	movlb	0	; () banked
 26278  00AB96  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 26279  00AB98  D7E2               	goto	l21783
 26280  00AB9A                     u21470:
 26281                           
 26282                           ; BSR set to: 0
 26283                           ;buck.c: 344: };buck.c: 346: buck_dutycycle_last_step = 1;
 26284                           
 26285                           ; BSR set to: 0
 26286  00AB9A  0E01               	movlw	1
 26287  00AB9C  0101               	movlb	1	; () banked
 26288  00AB9E  6FF2               	movwf	_buck_dutycycle_last_step& (0+255),b
 26289                           
 26290                           ; BSR set to: 1
 26291                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26292  00ABA0  EC72  F087         	call	__buck_initial_dutycycle	;wreg free
 26293  00ABA4  0100               	movlb	0	; () banked
 26294  00ABA6  6F7B               	movwf	__buck_operate_local$8817& (0+255),b
 26295                           
 26296                           ; BSR set to: 0
 26297                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 26298  00ABA8  C07B  F072         	movff	__buck_operate_local$8817,__buck_start@dutycycle
 26299  00ABAC  0E00               	movlw	0
 26300  00ABAE  ECF0  F085         	call	__buck_start
 26301                           
 26302                           ;buck.c: 349: };buck.c: 350: break;
 26303  00ABB2  0012               	return	
 26304  00ABB4                     l2548:
 26305                           
 26306                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 26307  00ABB4  0102               	movlb	2	; () banked
 26308  00ABB6  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 26309  00ABB8  0012               	return	
 26310                           
 26311                           ; BSR set to: 2
 26312                           ;buck.c: 354: {;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 26313  00ABBA  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26314  00ABBC  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 26315  00ABBE  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 26316  00ABC0  0A80               	xorlw	128
 26317  00ABC2  0100               	movlb	0	; () banked
 26318  00ABC4  6F76               	movwf	??__buck_operate_local& (0+255),b
 26319  00ABC6  0102               	movlb	2	; () banked
 26320  00ABC8  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26321  00ABCA  0A80               	xorlw	128
 26322  00ABCC  0100               	movlb	0	; () banked
 26323  00ABCE  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26324  00ABD0  B0D8               	btfsc	status,0,c
 26325  00ABD2  D006               	goto	l2550
 26326                           
 26327                           ; BSR set to: 0
 26328                           ;buck.c: 357: {;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26329  00ABD4  05E4               	decf	_buck_dutycycle& (0+255),w,b
 26330  00ABD6  EC8D  F091         	call	__buck_set_dutycycle
 26331                           
 26332                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 26333  00ABDA  0101               	movlb	1	; () banked
 26334  00ABDC  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 26335                           
 26336                           ;buck.c: 360: }
 26337  00ABDE  0012               	return	
 26338  00ABE0                     l2550:
 26339                           
 26340                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 26341                           
 26342                           ; BSR set to: 1
 26343  00ABE0  0102               	movlb	2	; () banked
 26344  00ABE2  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26345  00ABE4  D013               	goto	u21510
 26346  00ABE6  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 26347  00ABE8  E104               	bnz	u21500
 26348  00ABEA  0E05               	movlw	5
 26349  00ABEC  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26350  00ABEE  A0D8               	btfss	status,0,c
 26351  00ABF0  D00D               	goto	u21510
 26352  00ABF2                     u21500:
 26353                           
 26354                           ; BSR set to: 2
 26355  00ABF2  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26356  00ABF4  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26357  00ABF6  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26358  00ABF8  0A80               	xorlw	128
 26359  00ABFA  0100               	movlb	0	; () banked
 26360  00ABFC  6F76               	movwf	??__buck_operate_local& (0+255),b
 26361  00ABFE  0102               	movlb	2	; () banked
 26362  00AC00  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26363  00AC02  0A80               	xorlw	128
 26364  00AC04  0100               	movlb	0	; () banked
 26365  00AC06  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26366  00AC08  B0D8               	btfsc	status,0,c
 26367  00AC0A  D005               	goto	l2552
 26368  00AC0C                     u21510:
 26369                           
 26370                           ;buck.c: 363: {;buck.c: 364: _buck_stop();
 26371                           
 26372                           ; BSR set to: 0
 26373  00AC0C  ECCF  F09B         	call	__buck_stop	;wreg free
 26374                           
 26375                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 26376  00AC10  0E00               	movlw	0
 26377  00AC12  6E1C               	movwf	_buck_status,c
 26378                           
 26379                           ;buck.c: 366: }
 26380  00AC14  0012               	return	
 26381  00AC16                     l2552:
 26382                           
 26383                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 26384  00AC16  EE22  F027         	lfsr	2,_os+39	;volatile
 26385  00AC1A  CFDE F076          	movff	postinc2,??__buck_operate_local
 26386  00AC1E  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 26387  00AC22  0100               	movlb	0	; () banked
 26388  00AC24  1F76               	comf	??__buck_operate_local& (0+255),f,b
 26389  00AC26  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 26390  00AC28  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 26391  00AC2A  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 26392  00AC2C  0102               	movlb	2	; () banked
 26393  00AC2E  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 26394  00AC30  0100               	movlb	0	; () banked
 26395  00AC32  2776               	addwf	??__buck_operate_local& (0+255),f,b
 26396  00AC34  0102               	movlb	2	; () banked
 26397  00AC36  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 26398  00AC38  0100               	movlb	0	; () banked
 26399  00AC3A  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 26400  00AC3C  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 26401  00AC3E  D006               	goto	u21520
 26402  00AC40  0EE8               	movlw	232
 26403  00AC42  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 26404  00AC44  0E03               	movlw	3
 26405  00AC46  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 26406  00AC48  B0D8               	btfsc	status,0,c
 26407  00AC4A  D006               	goto	l2556
 26408  00AC4C                     u21520:
 26409                           
 26410                           ; BSR set to: 0
 26411                           ;buck.c: 369: {;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 26412  00AC4C  05E4               	decf	_buck_dutycycle& (0+255),w,b
 26413  00AC4E  EC8D  F091         	call	__buck_set_dutycycle
 26414                           
 26415                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 26416  00AC52  0101               	movlb	1	; () banked
 26417  00AC54  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 26418                           
 26419                           ;buck.c: 372: }
 26420  00AC56  0012               	return	
 26421  00AC58                     l2556:
 26422                           
 26423                           ;buck.c: 374: else if (os.input_current>600)
 26424                           
 26425                           ; BSR set to: 1
 26426  00AC58  0102               	movlb	2	; () banked
 26427  00AC5A  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26428  00AC5C  D011               	goto	l2558
 26429  00AC5E  0E59               	movlw	89
 26430  00AC60  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26431  00AC62  0E02               	movlw	2
 26432  00AC64  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 26433  00AC66  A0D8               	btfss	status,0,c
 26434  00AC68  D00B               	goto	l2558
 26435                           
 26436                           ; BSR set to: 2
 26437                           ;buck.c: 375: {;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 26438  00AC6A  EC72  F087         	call	__buck_initial_dutycycle	;wreg free
 26439  00AC6E  0F05               	addlw	5
 26440  00AC70  0100               	movlb	0	; () banked
 26441  00AC72  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 26442                           
 26443                           ; BSR set to: 0
 26444                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 26445  00AC74  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 26446  00AC78  0E01               	movlw	1
 26447  00AC7A  EC41  F090         	call	__buck_set_sync_async
 26448                           
 26449                           ;buck.c: 380: }
 26450  00AC7E  0012               	return	
 26451  00AC80                     l2558:
 26452                           
 26453                           ;buck.c: 382: else;buck.c: 383: {;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000
      +                          );
 26454  00AC80  0102               	movlb	2	; () banked
 26455  00AC82  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26456  00AC84  0B30               	andlw	48
 26457  00AC86  0100               	movlb	0	; () banked
 26458  00AC88  6FE0               	movwf	_idx& (0+255),b
 26459                           
 26460                           ;buck.c: 386: idx >>= 4;
 26461  00AC8A  3BE0               	swapf	_idx& (0+255),f,b
 26462  00AC8C  0E0F               	movlw	15
 26463  00AC8E  17E0               	andwf	_idx& (0+255),f,b
 26464                           
 26465                           ; BSR set to: 0
 26466                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 26467  00AC90  51E0               	movf	_idx& (0+255),w,b
 26468  00AC92  0D02               	mullw	2
 26469  00AC94  0E0A               	movlw	low (_os+10)
 26470  00AC96  24F3               	addwf	prodl,w,c
 26471  00AC98  6ED9               	movwf	fsr2l,c
 26472  00AC9A  0E02               	movlw	high (_os+10)
 26473  00AC9C  20F4               	addwfc	prodh,w,c
 26474  00AC9E  6EDA               	movwf	fsr2h,c
 26475  00ACA0  CFDE F29E          	movff	postinc2,_now
 26476  00ACA4  CFDD F29F          	movff	postdec2,_now+1
 26477  00ACA8  0102               	movlb	2	; () banked
 26478  00ACAA  0E00               	movlw	0
 26479  00ACAC  BF9F               	btfsc	(_now+1)& (0+255),7,b
 26480  00ACAE  0EFF               	movlw	-1
 26481  00ACB0  6FA0               	movwf	(_now+2)& (0+255),b
 26482  00ACB2  6FA1               	movwf	(_now+3)& (0+255),b
 26483                           
 26484                           ; BSR set to: 2
 26485                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 26486  00ACB4  C29E  F060         	movff	_now,___lmul@multiplier
 26487  00ACB8  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 26488  00ACBC  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 26489  00ACC0  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 26490  00ACC4  0100               	movlb	0	; () banked
 26491  00ACC6  51E0               	movf	_idx& (0+255),w,b
 26492  00ACC8  0D02               	mullw	2
 26493  00ACCA  0E14               	movlw	low (_os+20)
 26494  00ACCC  24F3               	addwf	prodl,w,c
 26495  00ACCE  6ED9               	movwf	fsr2l,c
 26496  00ACD0  0E02               	movlw	high (_os+20)
 26497  00ACD2  20F4               	addwfc	prodh,w,c
 26498  00ACD4  6EDA               	movwf	fsr2h,c
 26499  00ACD6  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26500  00ACDA  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26501  00ACDE  0E00               	movlw	0
 26502  00ACE0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26503  00ACE2  0EFF               	movlw	-1
 26504  00ACE4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26505  00ACE6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26506  00ACE8  EC7D  F095         	call	___lmul	;wreg free
 26507  00ACEC  C060  F29E         	movff	?___lmul,_now
 26508  00ACF0  C061  F29F         	movff	?___lmul+1,_now+1
 26509  00ACF4  C062  F2A0         	movff	?___lmul+2,_now+2
 26510  00ACF8  C063  F2A1         	movff	?___lmul+3,_now+3
 26511                           
 26512                           ;buck.c: 390: idx += 2;
 26513  00ACFC  0E02               	movlw	2
 26514  00ACFE  0100               	movlb	0	; () banked
 26515  00AD00  27E0               	addwf	_idx& (0+255),f,b
 26516                           
 26517                           ; BSR set to: 0
 26518                           ;buck.c: 391: idx &= 0b11;
 26519  00AD02  0E03               	movlw	3
 26520  00AD04  17E0               	andwf	_idx& (0+255),f,b
 26521                           
 26522                           ; BSR set to: 0
 26523                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 26524  00AD06  51E0               	movf	_idx& (0+255),w,b
 26525  00AD08  0D02               	mullw	2
 26526  00AD0A  0E0A               	movlw	low (_os+10)
 26527  00AD0C  24F3               	addwf	prodl,w,c
 26528  00AD0E  6ED9               	movwf	fsr2l,c
 26529  00AD10  0E02               	movlw	high (_os+10)
 26530  00AD12  20F4               	addwfc	prodh,w,c
 26531  00AD14  6EDA               	movwf	fsr2h,c
 26532  00AD16  CFDE F2A2          	movff	postinc2,_last
 26533  00AD1A  CFDD F2A3          	movff	postdec2,_last+1
 26534  00AD1E  0102               	movlb	2	; () banked
 26535  00AD20  0E00               	movlw	0
 26536  00AD22  BFA3               	btfsc	(_last+1)& (0+255),7,b
 26537  00AD24  0EFF               	movlw	-1
 26538  00AD26  6FA4               	movwf	(_last+2)& (0+255),b
 26539  00AD28  6FA5               	movwf	(_last+3)& (0+255),b
 26540                           
 26541                           ; BSR set to: 2
 26542                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 26543  00AD2A  C2A2  F060         	movff	_last,___lmul@multiplier
 26544  00AD2E  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 26545  00AD32  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 26546  00AD36  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 26547  00AD3A  0100               	movlb	0	; () banked
 26548  00AD3C  51E0               	movf	_idx& (0+255),w,b
 26549  00AD3E  0D02               	mullw	2
 26550  00AD40  0E14               	movlw	low (_os+20)
 26551  00AD42  24F3               	addwf	prodl,w,c
 26552  00AD44  6ED9               	movwf	fsr2l,c
 26553  00AD46  0E02               	movlw	high (_os+20)
 26554  00AD48  20F4               	addwfc	prodh,w,c
 26555  00AD4A  6EDA               	movwf	fsr2h,c
 26556  00AD4C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26557  00AD50  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26558  00AD54  0E00               	movlw	0
 26559  00AD56  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26560  00AD58  0EFF               	movlw	-1
 26561  00AD5A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26562  00AD5C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26563  00AD5E  EC7D  F095         	call	___lmul	;wreg free
 26564  00AD62  C060  F2A2         	movff	?___lmul,_last
 26565  00AD66  C061  F2A3         	movff	?___lmul+1,_last+1
 26566  00AD6A  C062  F2A4         	movff	?___lmul+2,_last+2
 26567  00AD6E  C063  F2A5         	movff	?___lmul+3,_last+3
 26568                           
 26569                           ;buck.c: 395: if(os.input_voltage>15185)
 26570  00AD72  0102               	movlb	2	; () banked
 26571  00AD74  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 26572  00AD76  D00B               	goto	l2560
 26573  00AD78  0E52               	movlw	82
 26574  00AD7A  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26575  00AD7C  0E3B               	movlw	59
 26576  00AD7E  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 26577  00AD80  A0D8               	btfss	status,0,c
 26578  00AD82  D005               	goto	l2560
 26579                           
 26580                           ; BSR set to: 2
 26581                           ;buck.c: 396: {;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 26582  00AD84  0100               	movlb	0	; () banked
 26583  00AD86  29E4               	incf	_buck_dutycycle& (0+255),w,b
 26584  00AD88  EC8D  F091         	call	__buck_set_dutycycle
 26585                           
 26586                           ;buck.c: 398: }
 26587  00AD8C  0012               	return	
 26588  00AD8E                     l2560:
 26589                           
 26590                           ;buck.c: 399: else;buck.c: 400: {;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 26591  00AD8E  0100               	movlb	0	; () banked
 26592  00AD90  05E4               	decf	_buck_dutycycle& (0+255),w,b
 26593  00AD92  EC8D  F091         	call	__buck_set_dutycycle
 26594                           
 26595                           ;buck.c: 402: };buck.c: 403: };buck.c: 404: };buck.c: 405: break;
 26596  00AD96  0012               	return	
 26597  00AD98                     l2562:
 26598                           
 26599                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 26600  00AD98  0102               	movlb	2	; () banked
 26601  00AD9A  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 26602  00AD9C  0012               	return	
 26603                           
 26604                           ; BSR set to: 2
 26605                           ;buck.c: 409: {;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 26606  00AD9E  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 26607  00ADA0  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 26608  00ADA2  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 26609  00ADA4  0A80               	xorlw	128
 26610  00ADA6  0100               	movlb	0	; () banked
 26611  00ADA8  6F76               	movwf	??__buck_operate_local& (0+255),b
 26612  00ADAA  0102               	movlb	2	; () banked
 26613  00ADAC  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 26614  00ADAE  0A80               	xorlw	128
 26615  00ADB0  0100               	movlb	0	; () banked
 26616  00ADB2  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 26617  00ADB4  B0D8               	btfsc	status,0,c
 26618  00ADB6  D006               	goto	l2564
 26619                           
 26620                           ; BSR set to: 0
 26621                           ;buck.c: 412: {;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 26622  00ADB8  05E4               	decf	_buck_dutycycle& (0+255),w,b
 26623  00ADBA  EC8D  F091         	call	__buck_set_dutycycle
 26624                           
 26625                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 26626  00ADBE  0101               	movlb	1	; () banked
 26627  00ADC0  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 26628                           
 26629                           ;buck.c: 415: }
 26630  00ADC2  0012               	return	
 26631  00ADC4                     l2564:
 26632                           
 26633                           ;buck.c: 417: else if (os.input_current<200)
 26634                           
 26635                           ; BSR set to: 1
 26636  00ADC4  0102               	movlb	2	; () banked
 26637  00ADC6  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 26638  00ADC8  D006               	goto	u21570
 26639  00ADCA  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 26640  00ADCC  E10E               	bnz	l21855
 26641  00ADCE  0EC8               	movlw	200
 26642  00ADD0  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 26643  00ADD2  B0D8               	btfsc	status,0,c
 26644  00ADD4  D00A               	goto	l2566
 26645  00ADD6                     u21570:
 26646                           
 26647                           ; BSR set to: 2
 26648                           ;buck.c: 418: {;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 26649  00ADD6  0100               	movlb	0	; () banked
 26650  00ADD8  51E4               	movf	_buck_dutycycle& (0+255),w,b
 26651  00ADDA  0FFB               	addlw	251
 26652  00ADDC  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 26653                           
 26654                           ; BSR set to: 0
 26655                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 26656  00ADDE  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 26657  00ADE2  0E00               	movlw	0
 26658  00ADE4  EC41  F090         	call	__buck_set_sync_async
 26659                           
 26660                           ;buck.c: 421: }
 26661  00ADE8  0012               	return	
 26662  00ADEA                     l2566:
 26663  00ADEA                     l21855:
 26664                           
 26665                           ;buck.c: 423: else;buck.c: 424: {;buck.c: 426: idx = os.timeSlot & 0b00110000;
 26666  00ADEA  0102               	movlb	2	; () banked
 26667  00ADEC  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26668  00ADEE  0B30               	andlw	48
 26669  00ADF0  0100               	movlb	0	; () banked
 26670  00ADF2  6FE0               	movwf	_idx& (0+255),b
 26671                           
 26672                           ;buck.c: 427: idx >>= 4;
 26673  00ADF4  3BE0               	swapf	_idx& (0+255),f,b
 26674  00ADF6  0E0F               	movlw	15
 26675  00ADF8  17E0               	andwf	_idx& (0+255),f,b
 26676                           
 26677                           ; BSR set to: 0
 26678                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 26679  00ADFA  51E0               	movf	_idx& (0+255),w,b
 26680  00ADFC  0D02               	mullw	2
 26681  00ADFE  0E0A               	movlw	low (_os+10)
 26682  00AE00  24F3               	addwf	prodl,w,c
 26683  00AE02  6ED9               	movwf	fsr2l,c
 26684  00AE04  0E02               	movlw	high (_os+10)
 26685  00AE06  20F4               	addwfc	prodh,w,c
 26686  00AE08  6EDA               	movwf	fsr2h,c
 26687  00AE0A  CFDE F29E          	movff	postinc2,_now
 26688  00AE0E  CFDD F29F          	movff	postdec2,_now+1
 26689  00AE12  0102               	movlb	2	; () banked
 26690  00AE14  0E00               	movlw	0
 26691  00AE16  BF9F               	btfsc	(_now+1)& (0+255),7,b
 26692  00AE18  0EFF               	movlw	-1
 26693  00AE1A  6FA0               	movwf	(_now+2)& (0+255),b
 26694  00AE1C  6FA1               	movwf	(_now+3)& (0+255),b
 26695                           
 26696                           ; BSR set to: 2
 26697                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 26698  00AE1E  C29E  F060         	movff	_now,___lmul@multiplier
 26699  00AE22  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 26700  00AE26  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 26701  00AE2A  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 26702  00AE2E  0100               	movlb	0	; () banked
 26703  00AE30  51E0               	movf	_idx& (0+255),w,b
 26704  00AE32  0D02               	mullw	2
 26705  00AE34  0E14               	movlw	low (_os+20)
 26706  00AE36  24F3               	addwf	prodl,w,c
 26707  00AE38  6ED9               	movwf	fsr2l,c
 26708  00AE3A  0E02               	movlw	high (_os+20)
 26709  00AE3C  20F4               	addwfc	prodh,w,c
 26710  00AE3E  6EDA               	movwf	fsr2h,c
 26711  00AE40  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26712  00AE44  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26713  00AE48  0E00               	movlw	0
 26714  00AE4A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26715  00AE4C  0EFF               	movlw	-1
 26716  00AE4E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26717  00AE50  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26718  00AE52  EC7D  F095         	call	___lmul	;wreg free
 26719  00AE56  C060  F29E         	movff	?___lmul,_now
 26720  00AE5A  C061  F29F         	movff	?___lmul+1,_now+1
 26721  00AE5E  C062  F2A0         	movff	?___lmul+2,_now+2
 26722  00AE62  C063  F2A1         	movff	?___lmul+3,_now+3
 26723                           
 26724                           ;buck.c: 431: idx += 2;
 26725  00AE66  0E02               	movlw	2
 26726  00AE68  0100               	movlb	0	; () banked
 26727  00AE6A  27E0               	addwf	_idx& (0+255),f,b
 26728                           
 26729                           ; BSR set to: 0
 26730                           ;buck.c: 432: idx &= 0b11;
 26731  00AE6C  0E03               	movlw	3
 26732  00AE6E  17E0               	andwf	_idx& (0+255),f,b
 26733                           
 26734                           ; BSR set to: 0
 26735                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 26736  00AE70  51E0               	movf	_idx& (0+255),w,b
 26737  00AE72  0D02               	mullw	2
 26738  00AE74  0E0A               	movlw	low (_os+10)
 26739  00AE76  24F3               	addwf	prodl,w,c
 26740  00AE78  6ED9               	movwf	fsr2l,c
 26741  00AE7A  0E02               	movlw	high (_os+10)
 26742  00AE7C  20F4               	addwfc	prodh,w,c
 26743  00AE7E  6EDA               	movwf	fsr2h,c
 26744  00AE80  CFDE F2A2          	movff	postinc2,_last
 26745  00AE84  CFDD F2A3          	movff	postdec2,_last+1
 26746  00AE88  0102               	movlb	2	; () banked
 26747  00AE8A  0E00               	movlw	0
 26748  00AE8C  BFA3               	btfsc	(_last+1)& (0+255),7,b
 26749  00AE8E  0EFF               	movlw	-1
 26750  00AE90  6FA4               	movwf	(_last+2)& (0+255),b
 26751  00AE92  6FA5               	movwf	(_last+3)& (0+255),b
 26752                           
 26753                           ; BSR set to: 2
 26754                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 26755  00AE94  C2A2  F060         	movff	_last,___lmul@multiplier
 26756  00AE98  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 26757  00AE9C  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 26758  00AEA0  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 26759  00AEA4  0100               	movlb	0	; () banked
 26760  00AEA6  51E0               	movf	_idx& (0+255),w,b
 26761  00AEA8  0D02               	mullw	2
 26762  00AEAA  0E14               	movlw	low (_os+20)
 26763  00AEAC  24F3               	addwf	prodl,w,c
 26764  00AEAE  6ED9               	movwf	fsr2l,c
 26765  00AEB0  0E02               	movlw	high (_os+20)
 26766  00AEB2  20F4               	addwfc	prodh,w,c
 26767  00AEB4  6EDA               	movwf	fsr2h,c
 26768  00AEB6  CFDE F064          	movff	postinc2,___lmul@multiplicand
 26769  00AEBA  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 26770  00AEBE  0E00               	movlw	0
 26771  00AEC0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 26772  00AEC2  0EFF               	movlw	-1
 26773  00AEC4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26774  00AEC6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26775  00AEC8  EC7D  F095         	call	___lmul	;wreg free
 26776  00AECC  C060  F2A2         	movff	?___lmul,_last
 26777  00AED0  C061  F2A3         	movff	?___lmul+1,_last+1
 26778  00AED4  C062  F2A4         	movff	?___lmul+2,_last+2
 26779  00AED8  C063  F2A5         	movff	?___lmul+3,_last+3
 26780                           
 26781                           ;buck.c: 436: if(os.input_voltage>15185)
 26782  00AEDC  0102               	movlb	2	; () banked
 26783  00AEDE  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 26784  00AEE0  D00B               	goto	l2568
 26785  00AEE2  0E52               	movlw	82
 26786  00AEE4  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 26787  00AEE6  0E3B               	movlw	59
 26788  00AEE8  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 26789  00AEEA  A0D8               	btfss	status,0,c
 26790  00AEEC  D005               	goto	l2568
 26791                           
 26792                           ; BSR set to: 2
 26793                           ;buck.c: 437: {;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 26794  00AEEE  0100               	movlb	0	; () banked
 26795  00AEF0  29E4               	incf	_buck_dutycycle& (0+255),w,b
 26796  00AEF2  EC8D  F091         	call	__buck_set_dutycycle
 26797                           
 26798                           ;buck.c: 439: }
 26799  00AEF6  0012               	return	
 26800  00AEF8                     l2568:
 26801                           
 26802                           ;buck.c: 440: else;buck.c: 441: {;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 26803  00AEF8  0100               	movlb	0	; () banked
 26804  00AEFA  05E4               	decf	_buck_dutycycle& (0+255),w,b
 26805  00AEFC  EC8D  F091         	call	__buck_set_dutycycle
 26806                           
 26807                           ;buck.c: 443: };buck.c: 444: };buck.c: 445: };buck.c: 446: break;
 26808  00AF00  0012               	return	
 26809  00AF02                     
 26810                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 26811  00AF02  0E00               	movlw	0
 26812  00AF04  6E1C               	movwf	_buck_status,c
 26813                           
 26814                           ;buck.c: 450: }
 26815  00AF06  0012               	return	
 26816  00AF08                     l2537:
 26817  00AF08  501C               	movf	_buck_status,w,c
 26818                           
 26819                           ; Switch size 1, requested type "space"
 26820                           ; Number of cases is 4, Range of values is 0 to 3
 26821                           ; switch strategies available:
 26822                           ; Name         Instructions Cycles
 26823                           ; simple_byte           13     7 (average)
 26824                           ;	Chosen strategy is simple_byte
 26825  00AF0A  0A00               	xorlw	0	; case 0
 26826  00AF0C  B4D8               	btfsc	status,2,c
 26827  00AF0E  D5CC               	goto	l2538
 26828  00AF10  0A01               	xorlw	1	; case 1
 26829  00AF12  B4D8               	btfsc	status,2,c
 26830  00AF14  D617               	goto	l2544
 26831  00AF16  0A03               	xorlw	3	; case 2
 26832  00AF18  B4D8               	btfsc	status,2,c
 26833  00AF1A  D64C               	goto	l2548
 26834  00AF1C  0A01               	xorlw	1	; case 3
 26835  00AF1E  B4D8               	btfsc	status,2,c
 26836  00AF20  D73B               	goto	l2562
 26837  00AF22  D7EF               	goto	l2570
 26838  00AF24                     __end_of__buck_operate_local:
 26839                           	opt stack 0
 26840                           tblptru	equ	0xFF8
 26841                           tblptrh	equ	0xFF7
 26842                           tblptrl	equ	0xFF6
 26843                           tablat	equ	0xFF5
 26844                           prodh	equ	0xFF4
 26845                           prodl	equ	0xFF3
 26846                           intcon	equ	0xFF2
 26847                           intcon2	equ	0xFF1
 26848                           intcon3	equ	0xFF0
 26849                           postinc0	equ	0xFEE
 26850                           wreg	equ	0xFE8
 26851                           indf1	equ	0xFE7
 26852                           postinc1	equ	0xFE6
 26853                           postdec1	equ	0xFE5
 26854                           plusw1	equ	0xFE3
 26855                           fsr1h	equ	0xFE2
 26856                           fsr1l	equ	0xFE1
 26857                           indf2	equ	0xFDF
 26858                           postinc2	equ	0xFDE
 26859                           postdec2	equ	0xFDD
 26860                           plusw2	equ	0xFDB
 26861                           fsr2h	equ	0xFDA
 26862                           fsr2l	equ	0xFD9
 26863                           status	equ	0xFD8
 26864                           
 26865 ;; *************** function __buck_stop *****************
 26866 ;; Defined at:
 26867 ;;		line 283 in file "buck.c"
 26868 ;; Parameters:    Size  Location     Type
 26869 ;;		None
 26870 ;; Auto vars:     Size  Location     Type
 26871 ;;		None
 26872 ;; Return value:  Size  Location     Type
 26873 ;;                  1    wreg      void 
 26874 ;; Registers used:
 26875 ;;		wreg, status,2, status,0
 26876 ;; Tracked objects:
 26877 ;;		On entry : 0/0
 26878 ;;		On exit  : 0/0
 26879 ;;		Unchanged: 0/0
 26880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26885 ;;Total ram usage:        0 bytes
 26886 ;; Hardware stack levels used:    1
 26887 ;; Hardware stack levels required when called:   10
 26888 ;; This function calls:
 26889 ;;		Nothing
 26890 ;; This function is called by:
 26891 ;;		__buck_operate_local
 26892 ;;		__buck_operate_remote
 26893 ;; This function uses a non-reentrant model
 26894 ;;
 26895                           
 26896                           	psect	text121
 26897  01379E                     __ptext121:
 26898                           	opt stack 0
 26899  01379E                     __buck_stop:
 26900                           	opt stack 18
 26901                           
 26902                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 26903                           
 26904                           ;incstack = 0
 26905  01379E  96CA               	bcf	4042,3,c	;volatile
 26906  0137A0  98CA               	bcf	4042,4,c	;volatile
 26907  0137A2  9ACA               	bcf	4042,5,c	;volatile
 26908  0137A4  9CCA               	bcf	4042,6,c	;volatile
 26909                           
 26910                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 26911  0137A6  929E               	bcf	3998,1,c	;volatile
 26912  0137A8  A29E               	btfss	3998,1,c	;volatile
 26913  0137AA  D7FE               	goto	l2530
 26914                           
 26915                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 26916  0137AC  90BA               	bcf	4026,0,c	;volatile
 26917  0137AE  92BA               	bcf	4026,1,c	;volatile
 26918  0137B0  94BA               	bcf	4026,2,c	;volatile
 26919  0137B2  96BA               	bcf	4026,3,c	;volatile
 26920                           
 26921                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 26922  0137B4  94CA               	bcf	4042,2,c	;volatile
 26923                           
 26924                           ;buck.c: 295: LATBbits.LB1 = 0;
 26925  0137B6  928A               	bcf	3978,1,c	;volatile
 26926                           
 26927                           ;buck.c: 297: if(buck_status<0x80)
 26928  0137B8  0E80               	movlw	128
 26929  0137BA  601C               	cpfslt	_buck_status,c
 26930  0137BC  D003               	goto	l2532
 26931                           
 26932                           ;buck.c: 298: {;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 26933  0137BE  0E00               	movlw	0
 26934  0137C0  6E1C               	movwf	_buck_status,c
 26935                           
 26936                           ;buck.c: 300: }
 26937  0137C2  0012               	return	
 26938  0137C4                     l2532:
 26939                           
 26940                           ;buck.c: 301: else;buck.c: 302: {;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 26941  0137C4  0E80               	movlw	128
 26942  0137C6  6E1C               	movwf	_buck_status,c
 26943  0137C8  0012               	return	
 26944  0137CA                     __end_of__buck_stop:
 26945                           	opt stack 0
 26946                           tblptru	equ	0xFF8
 26947                           tblptrh	equ	0xFF7
 26948                           tblptrl	equ	0xFF6
 26949                           tablat	equ	0xFF5
 26950                           prodh	equ	0xFF4
 26951                           prodl	equ	0xFF3
 26952                           intcon	equ	0xFF2
 26953                           intcon2	equ	0xFF1
 26954                           intcon3	equ	0xFF0
 26955                           postinc0	equ	0xFEE
 26956                           wreg	equ	0xFE8
 26957                           indf1	equ	0xFE7
 26958                           postinc1	equ	0xFE6
 26959                           postdec1	equ	0xFE5
 26960                           plusw1	equ	0xFE3
 26961                           fsr1h	equ	0xFE2
 26962                           fsr1l	equ	0xFE1
 26963                           indf2	equ	0xFDF
 26964                           postinc2	equ	0xFDE
 26965                           postdec2	equ	0xFDD
 26966                           plusw2	equ	0xFDB
 26967                           fsr2h	equ	0xFDA
 26968                           fsr2l	equ	0xFD9
 26969                           status	equ	0xFD8
 26970                           
 26971 ;; *************** function __buck_start *****************
 26972 ;; Defined at:
 26973 ;;		line 143 in file "buck.c"
 26974 ;; Parameters:    Size  Location     Type
 26975 ;;  mode            1    wreg     enum E6632
 26976 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 26977 ;; Auto vars:     Size  Location     Type
 26978 ;;  mode            1   19[BANK0 ] enum E6632
 26979 ;;  cntr            1   21[BANK0 ] unsigned char 
 26980 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 26981 ;; Return value:  Size  Location     Type
 26982 ;;                  1    wreg      void 
 26983 ;; Registers used:
 26984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26985 ;; Tracked objects:
 26986 ;;		On entry : 0/0
 26987 ;;		On exit  : 0/0
 26988 ;;		Unchanged: 0/0
 26989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26990 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26994 ;;Total ram usage:        4 bytes
 26995 ;; Hardware stack levels used:    1
 26996 ;; Hardware stack levels required when called:   12
 26997 ;; This function calls:
 26998 ;;		__buck_initial_dutycycle
 26999 ;;		__buck_set_dutycycle
 27000 ;;		__buck_set_sync_async
 27001 ;; This function is called by:
 27002 ;;		__buck_operate_local
 27003 ;;		__buck_operate_remote
 27004 ;; This function uses a non-reentrant model
 27005 ;;
 27006                           
 27007                           	psect	text122
 27008  010BE0                     __ptext122:
 27009                           	opt stack 0
 27010  010BE0                     __buck_start:
 27011                           	opt stack 16
 27012                           
 27013                           ;incstack = 0
 27014                           ;__buck_start@mode stored from wreg
 27015  010BE0  0100               	movlb	0	; () banked
 27016  010BE2  6F73               	movwf	__buck_start@mode& (0+255),b
 27017                           
 27018                           ;buck.c: 145: uint8_t startup_dutycycle;;buck.c: 146: uint8_t cntr;;buck.c: 149: calibra
      +                          tionParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0;
 27019  010BE4  0E00               	movlw	0
 27020  010BE6  0103               	movlb	3	; () banked
 27021  010BE8  6F23               	movwf	(_calibrationParameters+35)& (0+255),b
 27022  010BEA  0E00               	movlw	0
 27023  010BEC  6F22               	movwf	(_calibrationParameters+34)& (0+255),b
 27024                           
 27025                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 27026  010BEE  0E00               	movlw	0
 27027  010BF0  6F2F               	movwf	(_calibrationParameters+47)& (0+255),b
 27028  010BF2  0E00               	movlw	0
 27029  010BF4  6F2E               	movwf	(_calibrationParameters+46)& (0+255),b
 27030                           
 27031                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 27032  010BF6  0E00               	movlw	0
 27033  010BF8  0100               	movlb	0	; () banked
 27034  010BFA  6F75               	movwf	__buck_start@cntr& (0+255),b
 27035  010BFC                     l20021:
 27036                           
 27037                           ; BSR set to: 0
 27038  010BFC  0E03               	movlw	3
 27039  010BFE  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 27040  010C00  D001               	goto	l2499
 27041  010C02  D01E               	goto	u18940
 27042  010C04                     l2499:
 27043                           
 27044                           ; BSR set to: 0
 27045                           ;buck.c: 154: {;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Auto
      +                          Calibration -= os.input_current_adc[cntr];
 27046                           
 27047                           ; BSR set to: 0
 27048  010C04  5175               	movf	__buck_start@cntr& (0+255),w,b
 27049  010C06  0D02               	mullw	2
 27050  010C08  0E14               	movlw	low (_os+20)
 27051  010C0A  24F3               	addwf	prodl,w,c
 27052  010C0C  6ED9               	movwf	fsr2l,c
 27053  010C0E  0E02               	movlw	high (_os+20)
 27054  010C10  20F4               	addwfc	prodh,w,c
 27055  010C12  6EDA               	movwf	fsr2h,c
 27056  010C14  50DE               	movf	postinc2,w,c
 27057  010C16  0103               	movlb	3	; () banked
 27058  010C18  5F22               	subwf	(_calibrationParameters+34)& (0+255),f,b
 27059  010C1A  50DD               	movf	postdec2,w,c
 27060  010C1C  5B23               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 27061                           
 27062                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 27063  010C1E  0100               	movlb	0	; () banked
 27064  010C20  5175               	movf	__buck_start@cntr& (0+255),w,b
 27065  010C22  0D02               	mullw	2
 27066  010C24  0E29               	movlw	low (_os+41)
 27067  010C26  24F3               	addwf	prodl,w,c
 27068  010C28  6ED9               	movwf	fsr2l,c
 27069  010C2A  0E02               	movlw	high (_os+41)
 27070  010C2C  20F4               	addwfc	prodh,w,c
 27071  010C2E  6EDA               	movwf	fsr2h,c
 27072  010C30  50DE               	movf	postinc2,w,c
 27073  010C32  0103               	movlb	3	; () banked
 27074  010C34  5F2E               	subwf	(_calibrationParameters+46)& (0+255),f,b
 27075  010C36  50DD               	movf	postdec2,w,c
 27076  010C38  5B2F               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 27077                           
 27078                           ; BSR set to: 3
 27079  010C3A  0100               	movlb	0	; () banked
 27080  010C3C  2B75               	incf	__buck_start@cntr& (0+255),f,b
 27081  010C3E  D7DE               	goto	l20021
 27082  010C40                     u18940:
 27083                           
 27084                           ; BSR set to: 0
 27085                           ;buck.c: 159: };buck.c: 163: PR2 = 63;
 27086                           
 27087                           ; BSR set to: 0
 27088  010C40  0E3F               	movlw	63
 27089  010C42  6ECB               	movwf	4043,c	;volatile
 27090                           
 27091                           ;buck.c: 165: TMR2 = 0x00;
 27092  010C44  0E00               	movlw	0
 27093  010C46  6ECC               	movwf	4044,c	;volatile
 27094                           
 27095                           ; BSR set to: 0
 27096                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 27097  010C48  86CA               	bsf	4042,3,c	;volatile
 27098  010C4A  88CA               	bsf	4042,4,c	;volatile
 27099  010C4C  8ACA               	bsf	4042,5,c	;volatile
 27100  010C4E  8CCA               	bsf	4042,6,c	;volatile
 27101                           
 27102                           ; BSR set to: 0
 27103                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 27104  010C50  929E               	bcf	3998,1,c	;volatile
 27105                           
 27106                           ; BSR set to: 0
 27107                           ;buck.c: 172: if(buck_status<0x80)
 27108  010C52  0E80               	movlw	128
 27109  010C54  601C               	cpfslt	_buck_status,c
 27110  010C56  D002               	goto	l2501
 27111                           
 27112                           ; BSR set to: 0
 27113                           ;buck.c: 173: {;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27114  010C58  0E03               	movlw	3
 27115  010C5A  D001               	goto	L15
 27116  010C5C                     l2501:
 27117                           
 27118                           ; BSR set to: 0
 27119                           ;buck.c: 176: else;buck.c: 177: {;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRON
      +                          OUS;
 27120                           
 27121                           ; BSR set to: 0
 27122  010C5C  0E83               	movlw	131
 27123  010C5E                     L15:
 27124  010C5E  6E1C               	movwf	_buck_status,c
 27125                           
 27126                           ; BSR set to: 0
 27127                           ;buck.c: 179: };buck.c: 182: CCP1CON = 0x00;
 27128  010C60  0E00               	movlw	0
 27129  010C62  6EBA               	movwf	4026,c	;volatile
 27130                           
 27131                           ; BSR set to: 0
 27132                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 27133  010C64  EC72  F087         	call	__buck_initial_dutycycle	;wreg free
 27134  010C68  0100               	movlb	0	; () banked
 27135  010C6A  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 27136                           
 27137                           ; BSR set to: 0
 27138                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 27139  010C6C  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27140  010C6E  EC8D  F091         	call	__buck_set_dutycycle
 27141                           
 27142                           ;buck.c: 188: INTCONbits.GIE = 0;
 27143  010C72  9EF2               	bcf	intcon,7,c	;volatile
 27144                           
 27145                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 27146  010C74  84CA               	bsf	4042,2,c	;volatile
 27147                           
 27148                           ;buck.c: 192: CCP1CON |= 0b00001100;
 27149  010C76  0E0C               	movlw	12
 27150  010C78  12BA               	iorwf	4026,f,c	;volatile
 27151                           
 27152                           ;buck.c: 194: CCP1CON |= 0b10000000;
 27153  010C7A  8EBA               	bsf	4026,7,c	;volatile
 27154                           
 27155                           ;buck.c: 196: INTCONbits.GIE = 1;
 27156  010C7C  8EF2               	bsf	intcon,7,c	;volatile
 27157  010C7E  A29E               	btfss	3998,1,c	;volatile
 27158  010C80  D7FE               	goto	l2504
 27159                           
 27160                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 27161  010C82  0100               	movlb	0	; () banked
 27162  010C84  0573               	decf	__buck_start@mode& (0+255),w,b
 27163  010C86  A4D8               	btfss	status,2,c
 27164  010C88  D008               	goto	l2506
 27165                           
 27166                           ; BSR set to: 0
 27167                           ;buck.c: 203: {;buck.c: 205: if(dutycycle!=startup_dutycycle)
 27168  010C8A  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 27169  010C8C  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 27170  010C8E  B4D8               	btfsc	status,2,c
 27171  010C90  0012               	return	
 27172                           
 27173                           ; BSR set to: 0
 27174                           ;buck.c: 206: {;buck.c: 207: _buck_set_dutycycle(dutycycle);
 27175  010C92  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 27176  010C94  EC8D  F091         	call	__buck_set_dutycycle
 27177                           
 27178                           ;buck.c: 208: };buck.c: 209: }
 27179  010C98  0012               	return	
 27180  010C9A                     l2506:
 27181                           
 27182                           ;buck.c: 210: else;buck.c: 211: {;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONO
      +                          US, dutycycle);
 27183  010C9A  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 27184  010C9E  0E00               	movlw	0
 27185  010CA0  EC41  F090         	call	__buck_set_sync_async
 27186  010CA4  0012               	return	
 27187  010CA6                     __end_of__buck_start:
 27188                           	opt stack 0
 27189                           tblptru	equ	0xFF8
 27190                           tblptrh	equ	0xFF7
 27191                           tblptrl	equ	0xFF6
 27192                           tablat	equ	0xFF5
 27193                           prodh	equ	0xFF4
 27194                           prodl	equ	0xFF3
 27195                           intcon	equ	0xFF2
 27196                           intcon2	equ	0xFF1
 27197                           intcon3	equ	0xFF0
 27198                           postinc0	equ	0xFEE
 27199                           wreg	equ	0xFE8
 27200                           indf1	equ	0xFE7
 27201                           postinc1	equ	0xFE6
 27202                           postdec1	equ	0xFE5
 27203                           plusw1	equ	0xFE3
 27204                           fsr1h	equ	0xFE2
 27205                           fsr1l	equ	0xFE1
 27206                           indf2	equ	0xFDF
 27207                           postinc2	equ	0xFDE
 27208                           postdec2	equ	0xFDD
 27209                           plusw2	equ	0xFDB
 27210                           fsr2h	equ	0xFDA
 27211                           fsr2l	equ	0xFD9
 27212                           status	equ	0xFD8
 27213                           
 27214 ;; *************** function __buck_set_sync_async *****************
 27215 ;; Defined at:
 27216 ;;		line 217 in file "buck.c"
 27217 ;; Parameters:    Size  Location     Type
 27218 ;;  mode            1    wreg     enum E6632
 27219 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 27220 ;; Auto vars:     Size  Location     Type
 27221 ;;  mode            1    3[BANK0 ] enum E6632
 27222 ;; Return value:  Size  Location     Type
 27223 ;;                  1    wreg      void 
 27224 ;; Registers used:
 27225 ;;		wreg, status,2, status,0, cstack
 27226 ;; Tracked objects:
 27227 ;;		On entry : 0/0
 27228 ;;		On exit  : 0/0
 27229 ;;		Unchanged: 0/0
 27230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27231 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27235 ;;Total ram usage:        2 bytes
 27236 ;; Hardware stack levels used:    1
 27237 ;; Hardware stack levels required when called:   11
 27238 ;; This function calls:
 27239 ;;		__buck_set_dutycycle
 27240 ;; This function is called by:
 27241 ;;		__buck_start
 27242 ;;		__buck_operate_local
 27243 ;;		__buck_operate_remote
 27244 ;; This function uses a non-reentrant model
 27245 ;;
 27246                           
 27247                           	psect	text123
 27248  012082                     __ptext123:
 27249                           	opt stack 0
 27250  012082                     __buck_set_sync_async:
 27251                           	opt stack 16
 27252                           
 27253                           ;incstack = 0
 27254                           ;__buck_set_sync_async@mode stored from wreg
 27255  012082  0100               	movlb	0	; () banked
 27256  012084  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 27257                           
 27258                           ;buck.c: 219: switch(mode)
 27259  012086  D02E               	goto	l2512
 27260  012088                     l2513:
 27261                           
 27262                           ; BSR set to: 0
 27263                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 27264  012088  96CA               	bcf	4042,3,c	;volatile
 27265  01208A  98CA               	bcf	4042,4,c	;volatile
 27266  01208C  9ACA               	bcf	4042,5,c	;volatile
 27267  01208E  9CCA               	bcf	4042,6,c	;volatile
 27268                           
 27269                           ;buck.c: 228: INTCONbits.GIE = 0;
 27270  012090  9EF2               	bcf	intcon,7,c	;volatile
 27271                           
 27272                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 27273  012092  929E               	bcf	3998,1,c	;volatile
 27274  012094                     
 27275                           ; BSR set to: 0
 27276  012094  A29E               	btfss	3998,1,c	;volatile
 27277  012096  D7FE               	goto	l2515
 27278                           
 27279                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 27280  012098  9EBA               	bcf	4026,7,c	;volatile
 27281                           
 27282                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 27283  01209A  9CBA               	bcf	4026,6,c	;volatile
 27284                           
 27285                           ;buck.c: 237: if(buck_status<0x80)
 27286  01209C  0E80               	movlw	128
 27287  01209E  601C               	cpfslt	_buck_status,c
 27288  0120A0  D002               	goto	l2517
 27289                           
 27290                           ;buck.c: 238: {;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 27291  0120A2  0E02               	movlw	2
 27292  0120A4  D001               	goto	L16
 27293  0120A6                     l2517:
 27294                           
 27295                           ;buck.c: 241: else;buck.c: 242: {;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRO
      +                          NOUS;
 27296  0120A6  0E82               	movlw	130
 27297  0120A8                     L16:
 27298  0120A8  6E1C               	movwf	_buck_status,c
 27299                           
 27300                           ;buck.c: 244: };buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 27301  0120AA  0100               	movlb	0	; () banked
 27302  0120AC  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27303  0120AE  EC8D  F091         	call	__buck_set_dutycycle
 27304                           
 27305                           ;buck.c: 248: INTCONbits.GIE = 1;
 27306  0120B2  8EF2               	bsf	intcon,7,c	;volatile
 27307                           
 27308                           ;buck.c: 249: break;
 27309  0120B4  0012               	return	
 27310  0120B6                     
 27311                           ;buck.c: 255: if(buck_status<0x80)
 27312  0120B6  0E80               	movlw	128
 27313  0120B8  601C               	cpfslt	_buck_status,c
 27314  0120BA  D002               	goto	l2521
 27315                           
 27316                           ;buck.c: 256: {;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 27317  0120BC  0E03               	movlw	3
 27318  0120BE  D001               	goto	L17
 27319  0120C0                     l2521:
 27320                           
 27321                           ;buck.c: 259: else;buck.c: 260: {;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRON
      +                          OUS;
 27322  0120C0  0E83               	movlw	131
 27323  0120C2                     L17:
 27324  0120C2  6E1C               	movwf	_buck_status,c
 27325                           
 27326                           ;buck.c: 262: };buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 27327  0120C4  96CA               	bcf	4042,3,c	;volatile
 27328  0120C6  98CA               	bcf	4042,4,c	;volatile
 27329  0120C8  9ACA               	bcf	4042,5,c	;volatile
 27330  0120CA  9CCA               	bcf	4042,6,c	;volatile
 27331                           
 27332                           ;buck.c: 267: INTCONbits.GIE = 0;
 27333  0120CC  9EF2               	bcf	intcon,7,c	;volatile
 27334                           
 27335                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 27336  0120CE  929E               	bcf	3998,1,c	;volatile
 27337  0120D0  A29E               	btfss	3998,1,c	;volatile
 27338  0120D2  D7FE               	goto	l2524
 27339                           
 27340                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 27341  0120D4  0100               	movlb	0	; () banked
 27342  0120D6  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 27343  0120D8  EC8D  F091         	call	__buck_set_dutycycle
 27344                           
 27345                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 27346  0120DC  8EBA               	bsf	4026,7,c	;volatile
 27347                           
 27348                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 27349  0120DE  9CBA               	bcf	4026,6,c	;volatile
 27350                           
 27351                           ;buck.c: 278: INTCONbits.GIE = 1;
 27352  0120E0  8EF2               	bsf	intcon,7,c	;volatile
 27353                           
 27354                           ;buck.c: 280: }
 27355                           
 27356                           ;buck.c: 279: break;
 27357  0120E2  0012               	return	
 27358  0120E4                     l2512:
 27359  0120E4  0100               	movlb	0	; () banked
 27360  0120E6  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 27361                           
 27362                           ; Switch size 1, requested type "space"
 27363                           ; Number of cases is 2, Range of values is 0 to 1
 27364                           ; switch strategies available:
 27365                           ; Name         Instructions Cycles
 27366                           ; simple_byte            7     4 (average)
 27367                           ;	Chosen strategy is simple_byte
 27368  0120E8  0A00               	xorlw	0	; case 0
 27369  0120EA  B4D8               	btfsc	status,2,c
 27370  0120EC  D7CD               	goto	l2513
 27371  0120EE  0A01               	xorlw	1	; case 1
 27372  0120F0  A4D8               	btfss	status,2,c
 27373  0120F2  0012               	return	
 27374  0120F4  D7E0               	goto	l2520
 27375  0120F6                     __end_of__buck_set_sync_async:
 27376                           	opt stack 0
 27377                           tblptru	equ	0xFF8
 27378                           tblptrh	equ	0xFF7
 27379                           tblptrl	equ	0xFF6
 27380                           tablat	equ	0xFF5
 27381                           prodh	equ	0xFF4
 27382                           prodl	equ	0xFF3
 27383                           intcon	equ	0xFF2
 27384                           intcon2	equ	0xFF1
 27385                           intcon3	equ	0xFF0
 27386                           postinc0	equ	0xFEE
 27387                           wreg	equ	0xFE8
 27388                           indf1	equ	0xFE7
 27389                           postinc1	equ	0xFE6
 27390                           postdec1	equ	0xFE5
 27391                           plusw1	equ	0xFE3
 27392                           fsr1h	equ	0xFE2
 27393                           fsr1l	equ	0xFE1
 27394                           indf2	equ	0xFDF
 27395                           postinc2	equ	0xFDE
 27396                           postdec2	equ	0xFDD
 27397                           plusw2	equ	0xFDB
 27398                           fsr2h	equ	0xFDA
 27399                           fsr2l	equ	0xFD9
 27400                           status	equ	0xFD8
 27401                           
 27402 ;; *************** function __buck_set_dutycycle *****************
 27403 ;; Defined at:
 27404 ;;		line 98 in file "buck.c"
 27405 ;; Parameters:    Size  Location     Type
 27406 ;;  dutyCycle       1    wreg     unsigned char 
 27407 ;; Auto vars:     Size  Location     Type
 27408 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 27409 ;; Return value:  Size  Location     Type
 27410 ;;                  1    wreg      void 
 27411 ;; Registers used:
 27412 ;;		wreg, status,2, status,0
 27413 ;; Tracked objects:
 27414 ;;		On entry : 0/0
 27415 ;;		On exit  : 0/0
 27416 ;;		Unchanged: 0/0
 27417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27422 ;;Total ram usage:        2 bytes
 27423 ;; Hardware stack levels used:    1
 27424 ;; Hardware stack levels required when called:   10
 27425 ;; This function calls:
 27426 ;;		Nothing
 27427 ;; This function is called by:
 27428 ;;		__buck_start
 27429 ;;		__buck_set_sync_async
 27430 ;;		__buck_operate_local
 27431 ;;		__buck_operate_remote
 27432 ;; This function uses a non-reentrant model
 27433 ;;
 27434                           
 27435                           	psect	text124
 27436  01231A                     __ptext124:
 27437                           	opt stack 0
 27438  01231A                     __buck_set_dutycycle:
 27439                           	opt stack 16
 27440                           
 27441                           ;incstack = 0
 27442                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 27443  01231A  0100               	movlb	0	; () banked
 27444  01231C  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27445                           
 27446                           ;buck.c: 101: if(dutyCycle>242)
 27447  01231E  0EF2               	movlw	242
 27448  012320  0100               	movlb	0	; () banked
 27449  012322  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27450  012324  D002               	goto	l2480
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;buck.c: 102: dutyCycle = 242;
 27454  012326  0EF2               	movlw	242
 27455  012328  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27456  01232A                     l2480:
 27457                           
 27458                           ; BSR set to: 0
 27459                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 27460                           
 27461                           ; BSR set to: 0
 27462  01232A  0E03               	movlw	3
 27463  01232C  181C               	xorwf	_buck_status,w,c
 27464  01232E  B4D8               	btfsc	status,2,c
 27465  012330  D004               	goto	u17880
 27466                           
 27467                           ; BSR set to: 0
 27468  012332  0E83               	movlw	131
 27469  012334  181C               	xorwf	_buck_status,w,c
 27470  012336  A4D8               	btfss	status,2,c
 27471  012338  D005               	goto	l2484
 27472  01233A                     u17880:
 27473                           
 27474                           ; BSR set to: 0
 27475                           ;buck.c: 104: {;buck.c: 105: if(dutyCycle<150)
 27476                           
 27477                           ; BSR set to: 0
 27478  01233A  0E96               	movlw	150
 27479  01233C  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27480  01233E  D002               	goto	l2484
 27481                           
 27482                           ; BSR set to: 0
 27483                           ;buck.c: 106: dutyCycle = 150;
 27484  012340  0E96               	movlw	150
 27485  012342  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27486  012344                     l2484:
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;buck.c: 107: };buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BU
      +                          CK_STATUS_REMOTE_ASYNCHRONOUS)
 27490                           
 27491                           ; BSR set to: 0
 27492                           
 27493                           ; BSR set to: 0
 27494  012344  0E02               	movlw	2
 27495  012346  181C               	xorwf	_buck_status,w,c
 27496  012348  B4D8               	btfsc	status,2,c
 27497  01234A  D004               	goto	u17910
 27498                           
 27499                           ; BSR set to: 0
 27500  01234C  0E82               	movlw	130
 27501  01234E  181C               	xorwf	_buck_status,w,c
 27502  012350  A4D8               	btfss	status,2,c
 27503  012352  D005               	goto	l2488
 27504  012354                     u17910:
 27505                           
 27506                           ; BSR set to: 0
 27507                           ;buck.c: 109: {;buck.c: 110: if(dutyCycle<40)
 27508                           
 27509                           ; BSR set to: 0
 27510  012354  0E28               	movlw	40
 27511  012356  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 27512  012358  D002               	goto	l2488
 27513                           
 27514                           ; BSR set to: 0
 27515                           ;buck.c: 111: dutyCycle = 40;
 27516  01235A  0E28               	movlw	40
 27517  01235C  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 27518  01235E                     l2488:
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;buck.c: 112: };buck.c: 114: buck_dutycycle = dutyCycle;
 27522                           
 27523                           ; BSR set to: 0
 27524                           
 27525                           ; BSR set to: 0
 27526  01235E  C061  F0E4         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 27527                           
 27528                           ; BSR set to: 0
 27529                           ;buck.c: 116: INTCONbits.GIE = 0;
 27530  012362  9EF2               	bcf	intcon,7,c	;volatile
 27531                           
 27532                           ; BSR set to: 0
 27533                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 27534  012364  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 27535  012368  0E03               	movlw	3
 27536  01236A  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 27537  01236C  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 27538  01236E  50BA               	movf	4026,w,c	;volatile
 27539  012370  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 27540  012372  0BCF               	andlw	-49
 27541  012374  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 27542  012376  6EBA               	movwf	4026,c	;volatile
 27543                           
 27544                           ; BSR set to: 0
 27545                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 27546  012378  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 27547  01237A  42E8               	rrncf	wreg,f,c
 27548  01237C  0B3F               	andlw	63
 27549  01237E  6EBB               	movwf	4027,c	;volatile
 27550                           
 27551                           ; BSR set to: 0
 27552                           ;buck.c: 122: INTCONbits.GIE = 1;
 27553  012380  8EF2               	bsf	intcon,7,c	;volatile
 27554                           
 27555                           ; BSR set to: 0
 27556  012382  0012               	return		;funcret
 27557  012384                     __end_of__buck_set_dutycycle:
 27558                           	opt stack 0
 27559                           tblptru	equ	0xFF8
 27560                           tblptrh	equ	0xFF7
 27561                           tblptrl	equ	0xFF6
 27562                           tablat	equ	0xFF5
 27563                           prodh	equ	0xFF4
 27564                           prodl	equ	0xFF3
 27565                           intcon	equ	0xFF2
 27566                           intcon2	equ	0xFF1
 27567                           intcon3	equ	0xFF0
 27568                           postinc0	equ	0xFEE
 27569                           wreg	equ	0xFE8
 27570                           indf1	equ	0xFE7
 27571                           postinc1	equ	0xFE6
 27572                           postdec1	equ	0xFE5
 27573                           plusw1	equ	0xFE3
 27574                           fsr1h	equ	0xFE2
 27575                           fsr1l	equ	0xFE1
 27576                           indf2	equ	0xFDF
 27577                           postinc2	equ	0xFDE
 27578                           postdec2	equ	0xFDD
 27579                           plusw2	equ	0xFDB
 27580                           fsr2h	equ	0xFDA
 27581                           fsr2l	equ	0xFD9
 27582                           status	equ	0xFD8
 27583                           
 27584 ;; *************** function __buck_initial_dutycycle *****************
 27585 ;; Defined at:
 27586 ;;		line 81 in file "buck.c"
 27587 ;; Parameters:    Size  Location     Type
 27588 ;;		None
 27589 ;; Auto vars:     Size  Location     Type
 27590 ;;  dc              4   14[BANK0 ] unsigned long 
 27591 ;; Return value:  Size  Location     Type
 27592 ;;                  1    wreg      unsigned char 
 27593 ;; Registers used:
 27594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27595 ;; Tracked objects:
 27596 ;;		On entry : 0/0
 27597 ;;		On exit  : 0/0
 27598 ;;		Unchanged: 0/0
 27599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27601 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27603 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27604 ;;Total ram usage:        5 bytes
 27605 ;; Hardware stack levels used:    1
 27606 ;; Hardware stack levels required when called:   11
 27607 ;; This function calls:
 27608 ;;		___lldiv
 27609 ;; This function is called by:
 27610 ;;		__buck_start
 27611 ;;		__buck_operate_local
 27612 ;;		__buck_operate_remote
 27613 ;; This function uses a non-reentrant model
 27614 ;;
 27615                           
 27616                           	psect	text125
 27617  010EE4                     __ptext125:
 27618                           	opt stack 0
 27619  010EE4                     __buck_initial_dutycycle:
 27620                           	opt stack 16
 27621                           
 27622                           ;buck.c: 83: uint32_t dc;;buck.c: 85: if(os.input_voltage<os.output_voltage)
 27623                           
 27624                           ; BSR set to: 0
 27625                           ;incstack = 0
 27626  010EE4  0102               	movlb	2	; () banked
 27627  010EE6  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27628  010EE8  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27629  010EEA  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27630  010EEC  0A80               	xorlw	128
 27631  010EEE  0100               	movlb	0	; () banked
 27632  010EF0  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 27633  010EF2  0102               	movlb	2	; () banked
 27634  010EF4  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27635  010EF6  0A80               	xorlw	128
 27636  010EF8  0100               	movlb	0	; () banked
 27637  010EFA  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 27638  010EFC  B0D8               	btfsc	status,0,c
 27639  010EFE  D002               	goto	l2474
 27640                           
 27641                           ; BSR set to: 0
 27642                           ;buck.c: 86: return 242;
 27643  010F00  0EF2               	movlw	242
 27644                           
 27645                           ; BSR set to: 0
 27646  010F02  0012               	return	
 27647  010F04                     l2474:
 27648                           
 27649                           ; BSR set to: 0
 27650                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 27651                           
 27652                           ; BSR set to: 0
 27653  010F04  EE22  F027         	lfsr	2,_os+39	;volatile
 27654  010F08  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 27655  010F0C  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 27656  010F10  0E00               	movlw	0
 27657  010F12  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 27658  010F14  0EFF               	movlw	-1
 27659  010F16  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27660  010F18  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27661                           
 27662                           ; BSR set to: 0
 27663                           ;buck.c: 88: dc <<= 8;
 27664  010F1A  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 27665  010F1E  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 27666  010F22  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 27667  010F26  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 27668                           
 27669                           ; BSR set to: 0
 27670                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 27671  010F28  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 27672  010F2C  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 27673  010F30  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 27674  010F34  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 27675  010F38  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 27676  010F3C  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 27677  010F40  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 27678  010F42  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 27679  010F44  ECD1  F08C         	call	___lldiv	;wreg free
 27680  010F48  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 27681  010F4C  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 27682  010F50  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 27683  010F54  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 27684                           
 27685                           ;buck.c: 91: if(dc>242)
 27686  010F58  0100               	movlb	0	; () banked
 27687  010F5A  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 27688  010F5C  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 27689  010F5E  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 27690  010F60  E104               	bnz	u18150
 27691  010F62  0EF3               	movlw	243
 27692  010F64  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 27693  010F66  A0D8               	btfss	status,0,c
 27694  010F68  D008               	goto	l2476
 27695  010F6A                     u18150:
 27696                           
 27697                           ; BSR set to: 0
 27698                           ;buck.c: 92: dc = 242;
 27699  010F6A  0EF2               	movlw	242
 27700  010F6C  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 27701  010F6E  0E00               	movlw	0
 27702  010F70  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 27703  010F72  0E00               	movlw	0
 27704  010F74  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27705  010F76  0E00               	movlw	0
 27706  010F78  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27707  010F7A                     l2476:
 27708                           
 27709                           ; BSR set to: 0
 27710                           ;buck.c: 93: if(dc<150)
 27711                           
 27712                           ; BSR set to: 0
 27713  010F7A  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 27714  010F7C  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 27715  010F7E  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 27716  010F80  E10C               	bnz	l2477
 27717  010F82  0E96               	movlw	150
 27718  010F84  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 27719  010F86  B0D8               	btfsc	status,0,c
 27720  010F88  D008               	goto	l2477
 27721                           
 27722                           ; BSR set to: 0
 27723                           ;buck.c: 94: dc = 150;
 27724  010F8A  0E96               	movlw	150
 27725  010F8C  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 27726  010F8E  0E00               	movlw	0
 27727  010F90  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 27728  010F92  0E00               	movlw	0
 27729  010F94  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 27730  010F96  0E00               	movlw	0
 27731  010F98  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 27732  010F9A                     l2477:
 27733                           
 27734                           ; BSR set to: 0
 27735                           ;buck.c: 95: return (uint8_t) dc;
 27736  010F9A  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 27737  010F9C  0012               	return	
 27738  010F9E                     __end_of__buck_initial_dutycycle:
 27739                           	opt stack 0
 27740                           tblptru	equ	0xFF8
 27741                           tblptrh	equ	0xFF7
 27742                           tblptrl	equ	0xFF6
 27743                           tablat	equ	0xFF5
 27744                           prodh	equ	0xFF4
 27745                           prodl	equ	0xFF3
 27746                           intcon	equ	0xFF2
 27747                           intcon2	equ	0xFF1
 27748                           intcon3	equ	0xFF0
 27749                           postinc0	equ	0xFEE
 27750                           wreg	equ	0xFE8
 27751                           indf1	equ	0xFE7
 27752                           postinc1	equ	0xFE6
 27753                           postdec1	equ	0xFE5
 27754                           plusw1	equ	0xFE3
 27755                           fsr1h	equ	0xFE2
 27756                           fsr1l	equ	0xFE1
 27757                           indf2	equ	0xFDF
 27758                           postinc2	equ	0xFDE
 27759                           postdec2	equ	0xFDD
 27760                           plusw2	equ	0xFDB
 27761                           fsr2h	equ	0xFDA
 27762                           fsr2l	equ	0xFD9
 27763                           status	equ	0xFD8
 27764                           
 27765 ;; *************** function ___lldiv *****************
 27766 ;; Defined at:
 27767 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 27768 ;; Parameters:    Size  Location     Type
 27769 ;;  dividend        4    0[BANK0 ] unsigned long 
 27770 ;;  divisor         4    4[BANK0 ] unsigned long 
 27771 ;; Auto vars:     Size  Location     Type
 27772 ;;  quotient        4    8[BANK0 ] unsigned long 
 27773 ;;  counter         1   12[BANK0 ] unsigned char 
 27774 ;; Return value:  Size  Location     Type
 27775 ;;                  4    0[BANK0 ] unsigned long 
 27776 ;; Registers used:
 27777 ;;		wreg, status,2, status,0
 27778 ;; Tracked objects:
 27779 ;;		On entry : 0/0
 27780 ;;		On exit  : 0/0
 27781 ;;		Unchanged: 0/0
 27782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27783 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27784 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27786 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27787 ;;Total ram usage:       13 bytes
 27788 ;; Hardware stack levels used:    1
 27789 ;; Hardware stack levels required when called:   10
 27790 ;; This function calls:
 27791 ;;		Nothing
 27792 ;; This function is called by:
 27793 ;;		__buck_initial_dutycycle
 27794 ;;		__get_output_power
 27795 ;;		_log_generate_entry
 27796 ;; This function uses a non-reentrant model
 27797 ;;
 27798                           
 27799                           	psect	text126
 27800  0119A2                     __ptext126:
 27801                           	opt stack 0
 27802  0119A2                     ___lldiv:
 27803                           	opt stack 18
 27804                           
 27805                           ; BSR set to: 0
 27806                           ;incstack = 0
 27807  0119A2  0E00               	movlw	0
 27808  0119A4  0100               	movlb	0	; () banked
 27809  0119A6  6F68               	movwf	___lldiv@quotient& (0+255),b
 27810  0119A8  0E00               	movlw	0
 27811  0119AA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 27812  0119AC  0E00               	movlw	0
 27813  0119AE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 27814  0119B0  0E00               	movlw	0
 27815  0119B2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 27816                           
 27817                           ; BSR set to: 0
 27818  0119B4  5164               	movf	___lldiv@divisor& (0+255),w,b
 27819  0119B6  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 27820  0119B8  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 27821  0119BA  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 27822  0119BC  B4D8               	btfsc	status,2,c
 27823  0119BE  D02A               	goto	l3352
 27824                           
 27825                           ; BSR set to: 0
 27826  0119C0  0E01               	movlw	1
 27827  0119C2  6F6C               	movwf	___lldiv@counter& (0+255),b
 27828  0119C4  D006               	goto	l3347
 27829  0119C6                     
 27830                           ; BSR set to: 0
 27831                           
 27832                           ; BSR set to: 0
 27833  0119C6  90D8               	bcf	status,0,c
 27834  0119C8  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 27835  0119CA  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 27836  0119CC  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 27837  0119CE  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 27838  0119D0  2B6C               	incf	___lldiv@counter& (0+255),f,b
 27839  0119D2                     l3347:
 27840                           
 27841                           ; BSR set to: 0
 27842                           
 27843                           ; BSR set to: 0
 27844  0119D2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 27845  0119D4  D7F8               	goto	l3348
 27846  0119D6                     u17980:
 27847                           
 27848                           ; BSR set to: 0
 27849                           
 27850                           ; BSR set to: 0
 27851                           
 27852                           ; BSR set to: 0
 27853  0119D6  90D8               	bcf	status,0,c
 27854  0119D8  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 27855  0119DA  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 27856  0119DC  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 27857  0119DE  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 27858                           
 27859                           ; BSR set to: 0
 27860  0119E0  5164               	movf	___lldiv@divisor& (0+255),w,b
 27861  0119E2  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 27862  0119E4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27863  0119E6  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 27864  0119E8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27865  0119EA  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 27866  0119EC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27867  0119EE  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 27868  0119F0  A0D8               	btfss	status,0,c
 27869  0119F2  D009               	goto	l3351
 27870                           
 27871                           ; BSR set to: 0
 27872  0119F4  5164               	movf	___lldiv@divisor& (0+255),w,b
 27873  0119F6  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 27874  0119F8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27875  0119FA  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 27876  0119FC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27877  0119FE  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 27878  011A00  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27879  011A02  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 27880                           
 27881                           ; BSR set to: 0
 27882  011A04  8168               	bsf	___lldiv@quotient& (0+255),0,b
 27883  011A06                     l3351:
 27884                           
 27885                           ; BSR set to: 0
 27886                           
 27887                           ; BSR set to: 0
 27888  011A06  90D8               	bcf	status,0,c
 27889  011A08  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 27890  011A0A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 27891  011A0C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 27892  011A0E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 27893                           
 27894                           ; BSR set to: 0
 27895  011A10  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 27896  011A12  D7E1               	goto	u17980
 27897  011A14                     l3352:
 27898                           
 27899                           ; BSR set to: 0
 27900                           
 27901                           ; BSR set to: 0
 27902  011A14  C068  F060         	movff	___lldiv@quotient,?___lldiv
 27903  011A18  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 27904  011A1C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 27905  011A20  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 27906                           
 27907                           ; BSR set to: 0
 27908  011A24  0012               	return		;funcret
 27909  011A26                     __end_of___lldiv:
 27910                           	opt stack 0
 27911                           tblptru	equ	0xFF8
 27912                           tblptrh	equ	0xFF7
 27913                           tblptrl	equ	0xFF6
 27914                           tablat	equ	0xFF5
 27915                           prodh	equ	0xFF4
 27916                           prodl	equ	0xFF3
 27917                           intcon	equ	0xFF2
 27918                           intcon2	equ	0xFF1
 27919                           intcon3	equ	0xFF0
 27920                           postinc0	equ	0xFEE
 27921                           wreg	equ	0xFE8
 27922                           indf1	equ	0xFE7
 27923                           postinc1	equ	0xFE6
 27924                           postdec1	equ	0xFE5
 27925                           plusw1	equ	0xFE3
 27926                           fsr1h	equ	0xFE2
 27927                           fsr1l	equ	0xFE1
 27928                           indf2	equ	0xFDF
 27929                           postinc2	equ	0xFDE
 27930                           postdec2	equ	0xFDD
 27931                           plusw2	equ	0xFDB
 27932                           fsr2h	equ	0xFDA
 27933                           fsr2l	equ	0xFD9
 27934                           status	equ	0xFD8
 27935                           
 27936 ;; *************** function _adc_read *****************
 27937 ;; Defined at:
 27938 ;;		line 30 in file "adc.c"
 27939 ;; Parameters:    Size  Location     Type
 27940 ;;  channel         1    wreg     enum E6744
 27941 ;; Auto vars:     Size  Location     Type
 27942 ;;  channel         1    2[BANK0 ] enum E6744
 27943 ;;  adc_value       2    3[BANK0 ] unsigned int 
 27944 ;; Return value:  Size  Location     Type
 27945 ;;                  2    0[BANK0 ] unsigned int 
 27946 ;; Registers used:
 27947 ;;		wreg, status,2, status,0
 27948 ;; Tracked objects:
 27949 ;;		On entry : 0/0
 27950 ;;		On exit  : 0/0
 27951 ;;		Unchanged: 0/0
 27952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27954 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27956 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27957 ;;Total ram usage:        5 bytes
 27958 ;; Hardware stack levels used:    1
 27959 ;; Hardware stack levels required when called:   10
 27960 ;; This function calls:
 27961 ;;		Nothing
 27962 ;; This function is called by:
 27963 ;;		_main
 27964 ;; This function uses a non-reentrant model
 27965 ;;
 27966                           
 27967                           	psect	text127
 27968  011896                     __ptext127:
 27969                           	opt stack 0
 27970  011896                     _adc_read:
 27971                           	opt stack 20
 27972                           
 27973                           ; BSR set to: 0
 27974                           ;incstack = 0
 27975                           ;adc_read@channel stored from wreg
 27976  011896  0100               	movlb	0	; () banked
 27977  011898  6F62               	movwf	adc_read@channel& (0+255),b
 27978                           
 27979                           ;adc.c: 32: uint16_t adc_value;;adc.c: 34: switch(channel)
 27980  01189A  D010               	goto	l2681
 27981  01189C                     
 27982                           ;adc.c: 37: ADCON0bits.CHS = 0b1100;
 27983  01189C  50C2               	movf	4034,w,c	;volatile
 27984  01189E  0BC3               	andlw	-61
 27985  0118A0  0930               	iorlw	48
 27986  0118A2  D007               	goto	L19
 27987  0118A4                     
 27988                           ;adc.c: 40: ADCON0bits.CHS = 0b0001;
 27989  0118A4  50C2               	movf	4034,w,c	;volatile
 27990  0118A6  0BC3               	andlw	-61
 27991  0118A8  0904               	iorlw	4
 27992  0118AA  D003               	goto	L19
 27993  0118AC                     
 27994                           ;adc.c: 43: ADCON0bits.CHS = 0b0010;
 27995  0118AC  50C2               	movf	4034,w,c	;volatile
 27996  0118AE  0BC3               	andlw	-61
 27997  0118B0  0908               	iorlw	8
 27998  0118B2                     L19:
 27999  0118B2  6EC2               	movwf	4034,c	;volatile
 28000                           
 28001                           ;adc.c: 44: break;
 28002  0118B4  D017               	goto	l2688
 28003  0118B6                     l2686:
 28004                           
 28005                           ; BSR set to: 0
 28006                           ;adc.c: 46: return 0xFFFF;
 28007  0118B6  6960               	setf	?_adc_read& (0+255),b
 28008  0118B8  6961               	setf	(?_adc_read+1)& (0+255),b
 28009  0118BA  0012               	return	
 28010  0118BC                     l2681:
 28011                           
 28012                           ; BSR set to: 0
 28013  0118BC  0100               	movlb	0	; () banked
 28014  0118BE  5162               	movf	adc_read@channel& (0+255),w,b
 28015                           
 28016                           ; Switch size 1, requested type "space"
 28017                           ; Number of cases is 3, Range of values is 0 to 2
 28018                           ; switch strategies available:
 28019                           ; Name         Instructions Cycles
 28020                           ; simple_byte           10     6 (average)
 28021                           ;	Chosen strategy is simple_byte
 28022  0118C0  0A00               	xorlw	0	; case 0
 28023  0118C2  B4D8               	btfsc	status,2,c
 28024  0118C4  D7EB               	goto	l2682
 28025  0118C6  0A01               	xorlw	1	; case 1
 28026  0118C8  B4D8               	btfsc	status,2,c
 28027  0118CA  D7EC               	goto	l2684
 28028  0118CC  0A03               	xorlw	3	; case 2
 28029  0118CE  B4D8               	btfsc	status,2,c
 28030  0118D0  D7ED               	goto	l2685
 28031  0118D2  D7F1               	goto	l2686
 28032  0118D4                     
 28033                           ;adc.c: 53: _delay((unsigned long)((15)*(8000000/4000000.0)));
 28034                           
 28035                           ; BSR set to: 0
 28036  0118D4  0E0A               	movlw	10
 28037  0118D6                     u23257:
 28038  0118D6  2EE8               	decfsz	wreg,f,c
 28039  0118D8  D7FE               	bra	u23257
 28040                           
 28041                           ;adc.c: 54: break;
 28042  0118DA  D00C               	goto	l2690
 28043  0118DC                     
 28044                           ;adc.c: 56: _delay((unsigned long)((90)*(8000000/4000000.0)));
 28045  0118DC  0E3C               	movlw	60
 28046  0118DE                     u23267:
 28047  0118DE  2EE8               	decfsz	wreg,f,c
 28048  0118E0  D7FE               	bra	u23267
 28049                           
 28050                           ;adc.c: 58: }
 28051                           
 28052                           ;adc.c: 57: break;
 28053  0118E2  D008               	goto	l2690
 28054  0118E4                     l2688:
 28055  0118E4  0102               	movlb	2	; () banked
 28056  0118E6  5100               	movf	_os& (0+255),w,b	;volatile
 28057                           
 28058                           ; Switch size 1, requested type "space"
 28059                           ; Number of cases is 2, Range of values is 1 to 2
 28060                           ; switch strategies available:
 28061                           ; Name         Instructions Cycles
 28062                           ; simple_byte            7     4 (average)
 28063                           ;	Chosen strategy is simple_byte
 28064  0118E8  0A01               	xorlw	1	; case 1
 28065  0118EA  B4D8               	btfsc	status,2,c
 28066  0118EC  D7F3               	goto	l2689
 28067  0118EE  0A03               	xorlw	3	; case 2
 28068  0118F0  B4D8               	btfsc	status,2,c
 28069  0118F2  D7F4               	goto	l2691
 28070  0118F4                     l2690:
 28071                           
 28072                           ;adc.c: 61: ADCON0bits.GO_NOT_DONE = 1;
 28073  0118F4  82C2               	bsf	4034,1,c	;volatile
 28074  0118F6  B2C2               	btfsc	4034,1,c	;volatile
 28075  0118F8  D7FE               	goto	l2693
 28076                           
 28077                           ;adc.c: 67: adc_value = ADRESH;
 28078  0118FA  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 28079  0118FE  0100               	movlb	0	; () banked
 28080  011900  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 28081                           
 28082                           ; BSR set to: 0
 28083                           ;adc.c: 68: adc_value <<= 2;
 28084  011902  90D8               	bcf	status,0,c
 28085  011904  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28086  011906  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28087  011908  90D8               	bcf	status,0,c
 28088  01190A  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 28089  01190C  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 28090                           
 28091                           ; BSR set to: 0
 28092                           ;adc.c: 69: adc_value |= ADRESL;
 28093  01190E  50C3               	movf	4035,w,c	;volatile
 28094  011910  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 28095                           
 28096                           ; BSR set to: 0
 28097                           ;adc.c: 71: return adc_value;
 28098  011912  C063  F060         	movff	adc_read@adc_value,?_adc_read
 28099  011916  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 28100  01191A  0012               	return	
 28101  01191C                     __end_of_adc_read:
 28102                           	opt stack 0
 28103                           tblptru	equ	0xFF8
 28104                           tblptrh	equ	0xFF7
 28105                           tblptrl	equ	0xFF6
 28106                           tablat	equ	0xFF5
 28107                           prodh	equ	0xFF4
 28108                           prodl	equ	0xFF3
 28109                           intcon	equ	0xFF2
 28110                           intcon2	equ	0xFF1
 28111                           intcon3	equ	0xFF0
 28112                           postinc0	equ	0xFEE
 28113                           wreg	equ	0xFE8
 28114                           indf1	equ	0xFE7
 28115                           postinc1	equ	0xFE6
 28116                           postdec1	equ	0xFE5
 28117                           plusw1	equ	0xFE3
 28118                           fsr1h	equ	0xFE2
 28119                           fsr1l	equ	0xFE1
 28120                           indf2	equ	0xFDF
 28121                           postinc2	equ	0xFDE
 28122                           postdec2	equ	0xFDD
 28123                           plusw2	equ	0xFDB
 28124                           fsr2h	equ	0xFDA
 28125                           fsr2l	equ	0xFD9
 28126                           status	equ	0xFD8
 28127                           
 28128 ;; *************** function _adc_calibrate *****************
 28129 ;; Defined at:
 28130 ;;		line 20 in file "adc.c"
 28131 ;; Parameters:    Size  Location     Type
 28132 ;;		None
 28133 ;; Auto vars:     Size  Location     Type
 28134 ;;		None
 28135 ;; Return value:  Size  Location     Type
 28136 ;;                  1    wreg      void 
 28137 ;; Registers used:
 28138 ;;		None
 28139 ;; Tracked objects:
 28140 ;;		On entry : 0/0
 28141 ;;		On exit  : 0/0
 28142 ;;		Unchanged: 0/0
 28143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28148 ;;Total ram usage:        0 bytes
 28149 ;; Hardware stack levels used:    1
 28150 ;; Hardware stack levels required when called:   10
 28151 ;; This function calls:
 28152 ;;		Nothing
 28153 ;; This function is called by:
 28154 ;;		_main
 28155 ;; This function uses a non-reentrant model
 28156 ;;
 28157                           
 28158                           	psect	text128
 28159  013E68                     __ptext128:
 28160                           	opt stack 0
 28161  013E68                     _adc_calibrate:
 28162                           	opt stack 20
 28163                           
 28164                           ;adc.c: 22: ADCON1bits.ADCAL = 1;
 28165                           
 28166                           ; BSR set to: 0
 28167                           ;incstack = 0
 28168  013E68  8CC1               	bsf	4033,6,c	;volatile
 28169                           
 28170                           ;adc.c: 24: ADCON0bits.GO_NOT_DONE = 1;
 28171  013E6A  82C2               	bsf	4034,1,c	;volatile
 28172  013E6C  B2C2               	btfsc	4034,1,c	;volatile
 28173  013E6E  D7FE               	goto	l2676
 28174                           
 28175                           ;adc.c: 27: ADCON1bits.ADCAL = 0;
 28176  013E70  9CC1               	bcf	4033,6,c	;volatile
 28177  013E72  0012               	return		;funcret
 28178  013E74                     __end_of_adc_calibrate:
 28179                           	opt stack 0
 28180                           tblptru	equ	0xFF8
 28181                           tblptrh	equ	0xFF7
 28182                           tblptrl	equ	0xFF6
 28183                           tablat	equ	0xFF5
 28184                           prodh	equ	0xFF4
 28185                           prodl	equ	0xFF3
 28186                           intcon	equ	0xFF2
 28187                           intcon2	equ	0xFF1
 28188                           intcon3	equ	0xFF0
 28189                           postinc0	equ	0xFEE
 28190                           wreg	equ	0xFE8
 28191                           indf1	equ	0xFE7
 28192                           postinc1	equ	0xFE6
 28193                           postdec1	equ	0xFE5
 28194                           plusw1	equ	0xFE3
 28195                           fsr1h	equ	0xFE2
 28196                           fsr1l	equ	0xFE1
 28197                           indf2	equ	0xFDF
 28198                           postinc2	equ	0xFDE
 28199                           postdec2	equ	0xFDD
 28200                           plusw2	equ	0xFDB
 28201                           fsr2h	equ	0xFDA
 28202                           fsr2l	equ	0xFD9
 28203                           status	equ	0xFD8
 28204                           
 28205 ;; *************** function _adc_calculate_temperature *****************
 28206 ;; Defined at:
 28207 ;;		line 74 in file "adc.c"
 28208 ;; Parameters:    Size  Location     Type
 28209 ;;  adc_value       2   12[BANK0 ] unsigned int 
 28210 ;;  calibration     1   14[BANK0 ] enum E6665
 28211 ;; Auto vars:     Size  Location     Type
 28212 ;;  tmp             4   21[BANK0 ] long 
 28213 ;; Return value:  Size  Location     Type
 28214 ;;                  2   12[BANK0 ] int 
 28215 ;; Registers used:
 28216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28217 ;; Tracked objects:
 28218 ;;		On entry : 0/0
 28219 ;;		On exit  : 0/0
 28220 ;;		Unchanged: 0/0
 28221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28222 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28223 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28224 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28225 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28226 ;;Total ram usage:       13 bytes
 28227 ;; Hardware stack levels used:    1
 28228 ;; Hardware stack levels required when called:   11
 28229 ;; This function calls:
 28230 ;;		___lmul
 28231 ;; This function is called by:
 28232 ;;		_main
 28233 ;; This function uses a non-reentrant model
 28234 ;;
 28235                           
 28236                           	psect	text129
 28237  00FEEE                     __ptext129:
 28238                           	opt stack 0
 28239  00FEEE                     _adc_calculate_temperature:
 28240                           	opt stack 19
 28241                           
 28242                           ;adc.c: 76: int32_t tmp = (int32_t) adc_value;
 28243                           
 28244                           ;incstack = 0
 28245  00FEEE  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 28246  00FEF2  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 28247  00FEF6  0100               	movlb	0	; () banked
 28248  00FEF8  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 28249  00FEFA  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 28250                           
 28251                           ; BSR set to: 0
 28252                           ;adc.c: 77: tmp += calibrationParameters[calibration].Offset;
 28253  00FEFC  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28254  00FEFE  0D0C               	mullw	12
 28255  00FF00  0E05               	movlw	5
 28256  00FF02  26F3               	addwf	prodl,f,c
 28257  00FF04  0E00               	movlw	0
 28258  00FF06  22F4               	addwfc	prodh,f,c
 28259  00FF08  0E00               	movlw	low _calibrationParameters
 28260  00FF0A  24F3               	addwf	prodl,w,c
 28261  00FF0C  6ED9               	movwf	fsr2l,c
 28262  00FF0E  0E03               	movlw	high _calibrationParameters
 28263  00FF10  20F4               	addwfc	prodh,w,c
 28264  00FF12  6EDA               	movwf	fsr2h,c
 28265  00FF14  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 28266  00FF18  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 28267  00FF1C  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 28268  00FF20  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 28269  00FF24  0E00               	movlw	0
 28270  00FF26  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 28271  00FF28  0EFF               	movlw	255
 28272  00FF2A  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 28273  00FF2C  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 28274  00FF2E  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 28275  00FF30  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28276  00FF32  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 28277  00FF34  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28278  00FF36  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 28279  00FF38  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28280  00FF3A  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 28281  00FF3C  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28282                           
 28283                           ; BSR set to: 0
 28284                           ;adc.c: 78: tmp *= calibrationParameters[calibration].Multiplier;
 28285  00FF3E  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 28286  00FF42  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 28287  00FF46  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 28288  00FF4A  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 28289  00FF4E  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28290  00FF50  0D0C               	mullw	12
 28291  00FF52  0E07               	movlw	7
 28292  00FF54  26F3               	addwf	prodl,f,c
 28293  00FF56  0E00               	movlw	0
 28294  00FF58  22F4               	addwfc	prodh,f,c
 28295  00FF5A  0E00               	movlw	low _calibrationParameters
 28296  00FF5C  24F3               	addwf	prodl,w,c
 28297  00FF5E  6ED9               	movwf	fsr2l,c
 28298  00FF60  0E03               	movlw	high _calibrationParameters
 28299  00FF62  20F4               	addwfc	prodh,w,c
 28300  00FF64  6EDA               	movwf	fsr2h,c
 28301  00FF66  CFDE F064          	movff	postinc2,___lmul@multiplicand
 28302  00FF6A  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 28303  00FF6E  0E00               	movlw	0
 28304  00FF70  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 28305  00FF72  0EFF               	movlw	-1
 28306  00FF74  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28307  00FF76  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28308  00FF78  EC7D  F095         	call	___lmul	;wreg free
 28309  00FF7C  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 28310  00FF80  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 28311  00FF84  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 28312  00FF88  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 28313                           
 28314                           ;adc.c: 79: tmp >>= calibrationParameters[calibration].Shift - 1;
 28315  00FF8C  0100               	movlb	0	; () banked
 28316  00FF8E  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 28317  00FF90  0D0C               	mullw	12
 28318  00FF92  0E09               	movlw	9
 28319  00FF94  26F3               	addwf	prodl,f,c
 28320  00FF96  0E00               	movlw	0
 28321  00FF98  22F4               	addwfc	prodh,f,c
 28322  00FF9A  0E00               	movlw	low _calibrationParameters
 28323  00FF9C  24F3               	addwf	prodl,w,c
 28324  00FF9E  6ED9               	movwf	fsr2l,c
 28325  00FFA0  0E03               	movlw	high _calibrationParameters
 28326  00FFA2  20F4               	addwfc	prodh,w,c
 28327  00FFA4  6EDA               	movwf	fsr2h,c
 28328  00FFA6  50DF               	movf	indf2,w,c
 28329  00FFA8  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 28330  00FFAA  0EFF               	movlw	-1
 28331  00FFAC  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 28332  00FFAE  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 28333  00FFB0  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 28334  00FFB2  D005               	goto	u22670
 28335  00FFB4                     u22675:
 28336  00FFB4  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28337  00FFB6  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28338  00FFB8  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28339  00FFBA  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28340  00FFBC  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28341  00FFBE                     u22670:
 28342  00FFBE  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 28343  00FFC0  D7F9               	goto	u22675
 28344                           
 28345                           ;adc.c: 80: tmp += 1;
 28346  00FFC2  0E01               	movlw	1
 28347  00FFC4  0100               	movlb	0	; () banked
 28348  00FFC6  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 28349  00FFC8  0E00               	movlw	0
 28350  00FFCA  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28351  00FFCC  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28352  00FFCE  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28353                           
 28354                           ; BSR set to: 0
 28355                           ;adc.c: 81: tmp >>= 1;
 28356  00FFD0  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 28357  00FFD2  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 28358  00FFD4  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 28359  00FFD6  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 28360  00FFD8  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 28361                           
 28362                           ; BSR set to: 0
 28363                           ;adc.c: 82: return (int16_t) tmp;
 28364  00FFDA  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 28365  00FFDE  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 28366  00FFE2  0012               	return	
 28367  00FFE4                     __end_of_adc_calculate_temperature:
 28368                           	opt stack 0
 28369                           tblptru	equ	0xFF8
 28370                           tblptrh	equ	0xFF7
 28371                           tblptrl	equ	0xFF6
 28372                           tablat	equ	0xFF5
 28373                           prodh	equ	0xFF4
 28374                           prodl	equ	0xFF3
 28375                           intcon	equ	0xFF2
 28376                           intcon2	equ	0xFF1
 28377                           intcon3	equ	0xFF0
 28378                           postinc0	equ	0xFEE
 28379                           wreg	equ	0xFE8
 28380                           indf1	equ	0xFE7
 28381                           postinc1	equ	0xFE6
 28382                           postdec1	equ	0xFE5
 28383                           plusw1	equ	0xFE3
 28384                           fsr1h	equ	0xFE2
 28385                           fsr1l	equ	0xFE1
 28386                           indf2	equ	0xFDF
 28387                           postinc2	equ	0xFDE
 28388                           postdec2	equ	0xFDD
 28389                           plusw2	equ	0xFDB
 28390                           fsr2h	equ	0xFDA
 28391                           fsr2l	equ	0xFD9
 28392                           status	equ	0xFD8
 28393                           
 28394 ;; *************** function ___lmul *****************
 28395 ;; Defined at:
 28396 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 28397 ;; Parameters:    Size  Location     Type
 28398 ;;  multiplier      4    0[BANK0 ] unsigned long 
 28399 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 28400 ;; Auto vars:     Size  Location     Type
 28401 ;;  product         4    8[BANK0 ] unsigned long 
 28402 ;; Return value:  Size  Location     Type
 28403 ;;                  4    0[BANK0 ] unsigned long 
 28404 ;; Registers used:
 28405 ;;		wreg, status,2, status,0
 28406 ;; Tracked objects:
 28407 ;;		On entry : 0/0
 28408 ;;		On exit  : 0/0
 28409 ;;		Unchanged: 0/0
 28410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28411 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28412 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28414 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28415 ;;Total ram usage:       12 bytes
 28416 ;; Hardware stack levels used:    1
 28417 ;; Hardware stack levels required when called:   10
 28418 ;; This function calls:
 28419 ;;		Nothing
 28420 ;; This function is called by:
 28421 ;;		_system_calculate_input_voltage
 28422 ;;		_system_calculate_output_voltage
 28423 ;;		_system_calculate_input_current
 28424 ;;		_system_calculate_output_current
 28425 ;;		__display_efficiency
 28426 ;;		__buck_operate_local
 28427 ;;		_adc_calculate_temperature
 28428 ;;		__get_input_power
 28429 ;;		__get_output_power
 28430 ;; This function uses a non-reentrant model
 28431 ;;
 28432                           
 28433                           	psect	text130
 28434  012AFA                     __ptext130:
 28435                           	opt stack 0
 28436  012AFA                     ___lmul:
 28437                           	opt stack 19
 28438                           
 28439                           ; BSR set to: 0
 28440                           ;incstack = 0
 28441  012AFA  0E00               	movlw	0
 28442  012AFC  0100               	movlb	0	; () banked
 28443  012AFE  6F68               	movwf	___lmul@product& (0+255),b
 28444  012B00  0E00               	movlw	0
 28445  012B02  6F69               	movwf	(___lmul@product+1)& (0+255),b
 28446  012B04  0E00               	movlw	0
 28447  012B06  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 28448  012B08  0E00               	movlw	0
 28449  012B0A  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 28450  012B0C                     
 28451                           ; BSR set to: 0
 28452                           
 28453                           ; BSR set to: 0
 28454  012B0C  A160               	btfss	___lmul@multiplier& (0+255),0,b
 28455  012B0E  D008               	goto	l3329
 28456                           
 28457                           ; BSR set to: 0
 28458  012B10  5164               	movf	___lmul@multiplicand& (0+255),w,b
 28459  012B12  2768               	addwf	___lmul@product& (0+255),f,b
 28460  012B14  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 28461  012B16  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 28462  012B18  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 28463  012B1A  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 28464  012B1C  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28465  012B1E  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 28466  012B20                     l3329:
 28467                           
 28468                           ; BSR set to: 0
 28469                           
 28470                           ; BSR set to: 0
 28471  012B20  90D8               	bcf	status,0,c
 28472  012B22  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 28473  012B24  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28474  012B26  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28475  012B28  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28476                           
 28477                           ; BSR set to: 0
 28478  012B2A  90D8               	bcf	status,0,c
 28479  012B2C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28480  012B2E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28481  012B30  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28482  012B32  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 28483  012B34  5160               	movf	___lmul@multiplier& (0+255),w,b
 28484  012B36  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28485  012B38  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28486  012B3A  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28487  012B3C  A4D8               	btfss	status,2,c
 28488  012B3E  D7E6               	goto	l3328
 28489                           
 28490                           ; BSR set to: 0
 28491  012B40  C068  F060         	movff	___lmul@product,?___lmul
 28492  012B44  C069  F061         	movff	___lmul@product+1,?___lmul+1
 28493  012B48  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 28494  012B4C  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 28495                           
 28496                           ; BSR set to: 0
 28497  012B50  0012               	return		;funcret
 28498  012B52                     __end_of___lmul:
 28499                           	opt stack 0
 28500                           tblptru	equ	0xFF8
 28501                           tblptrh	equ	0xFF7
 28502                           tblptrl	equ	0xFF6
 28503                           tablat	equ	0xFF5
 28504                           prodh	equ	0xFF4
 28505                           prodl	equ	0xFF3
 28506                           intcon	equ	0xFF2
 28507                           intcon2	equ	0xFF1
 28508                           intcon3	equ	0xFF0
 28509                           postinc0	equ	0xFEE
 28510                           wreg	equ	0xFE8
 28511                           indf1	equ	0xFE7
 28512                           postinc1	equ	0xFE6
 28513                           postdec1	equ	0xFE5
 28514                           plusw1	equ	0xFE3
 28515                           fsr1h	equ	0xFE2
 28516                           fsr1l	equ	0xFE1
 28517                           indf2	equ	0xFDF
 28518                           postinc2	equ	0xFDE
 28519                           postdec2	equ	0xFDD
 28520                           plusw2	equ	0xFDB
 28521                           fsr2h	equ	0xFDA
 28522                           fsr2l	equ	0xFD9
 28523                           status	equ	0xFD8
 28524                           
 28525 ;; *************** function _USBDeviceInit *****************
 28526 ;; Defined at:
 28527 ;;		line 277 in file "usb_device.c"
 28528 ;; Parameters:    Size  Location     Type
 28529 ;;		None
 28530 ;; Auto vars:     Size  Location     Type
 28531 ;;  i               1    8[BANK0 ] unsigned char 
 28532 ;; Return value:  Size  Location     Type
 28533 ;;                  1    wreg      void 
 28534 ;; Registers used:
 28535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28536 ;; Tracked objects:
 28537 ;;		On entry : 0/0
 28538 ;;		On exit  : 0/0
 28539 ;;		Unchanged: 0/0
 28540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28544 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28545 ;;Total ram usage:        1 bytes
 28546 ;; Hardware stack levels used:    1
 28547 ;; Hardware stack levels required when called:   11
 28548 ;; This function calls:
 28549 ;;		_memset
 28550 ;; This function is called by:
 28551 ;;		_main
 28552 ;; This function uses a non-reentrant model
 28553 ;;
 28554                           
 28555                           	psect	text131
 28556  00E65E                     __ptext131:
 28557                           	opt stack 0
 28558  00E65E                     _USBDeviceInit:
 28559                           	opt stack 19
 28560                           
 28561                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;incstack = 0
 28565  00E65E  98A0               	bcf	4000,4,c	;volatile
 28566                           
 28567                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 28568  00E660  0E00               	movlw	0
 28569  00E662  6E63               	movwf	3939,c	;volatile
 28570                           
 28571                           ;usb_device.c: 291: {UIR = 0;};
 28572  00E664  0E00               	movlw	0
 28573  00E666  6E62               	movwf	3938,c	;volatile
 28574                           
 28575                           ;usb_device.c: 294: UEP0 = 0;
 28576  00E668  0E00               	movlw	0
 28577  00E66A  010F               	movlb	15	; () banked
 28578  00E66C  6F26               	movwf	38,b	;volatile
 28579                           
 28580                           ; BSR set to: 15
 28581                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 28582  00E66E  0E27               	movlw	39
 28583  00E670  0100               	movlb	0	; () banked
 28584  00E672  6F60               	movwf	memset@p1& (0+255),b
 28585  00E674  0E0F               	movlw	15
 28586  00E676  6F61               	movwf	(memset@p1+1)& (0+255),b
 28587  00E678  0E00               	movlw	0
 28588  00E67A  6F63               	movwf	(memset@c+1)& (0+255),b
 28589  00E67C  0E00               	movlw	0
 28590  00E67E  6F62               	movwf	memset@c& (0+255),b
 28591  00E680  0E00               	movlw	0
 28592  00E682  6F65               	movwf	(memset@n+1)& (0+255),b
 28593  00E684  0E02               	movlw	2
 28594  00E686  6F64               	movwf	memset@n& (0+255),b
 28595  00E688  ECEB  F09A         	call	_memset	;wreg free
 28596                           
 28597                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 28598  00E68C  0E16               	movlw	22
 28599  00E68E  010F               	movlb	15	; () banked
 28600  00E690  6F39               	movwf	57,b	;volatile
 28601                           
 28602                           ; BSR set to: 15
 28603  00E692  0E9F               	movlw	159
 28604  00E694  6F37               	movwf	55,b	;volatile
 28605                           
 28606                           ; BSR set to: 15
 28607  00E696  0E7B               	movlw	123
 28608  00E698  6F36               	movwf	54,b	;volatile
 28609                           
 28610                           ; BSR set to: 15
 28611                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 28612  00E69A  0E00               	movlw	0
 28613  00E69C  0100               	movlb	0	; () banked
 28614  00E69E  6F68               	movwf	USBDeviceInit@i& (0+255),b
 28615  00E6A0                     l22131:
 28616                           
 28617                           ; BSR set to: 0
 28618  00E6A0  0E0B               	movlw	11
 28619  00E6A2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 28620  00E6A4  D001               	goto	l147
 28621  00E6A6  D00E               	goto	u21820
 28622  00E6A8                     l147:
 28623                           
 28624                           ; BSR set to: 0
 28625                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 28626                           
 28627                           ; BSR set to: 0
 28628  00E6A8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28629  00E6AA  0D04               	mullw	4
 28630  00E6AC  0E00               	movlw	0
 28631  00E6AE  24F3               	addwf	prodl,w,c
 28632  00E6B0  6ED9               	movwf	fsr2l,c
 28633  00E6B2  0E0D               	movlw	13
 28634  00E6B4  20F4               	addwfc	prodh,w,c
 28635  00E6B6  6EDA               	movwf	fsr2h,c
 28636  00E6B8  6ADE               	clrf	postinc2,c
 28637  00E6BA  6ADE               	clrf	postinc2,c
 28638  00E6BC  6ADE               	clrf	postinc2,c
 28639  00E6BE  6ADD               	clrf	postdec2,c
 28640                           
 28641                           ; BSR set to: 0
 28642  00E6C0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 28643  00E6C2  D7EE               	goto	l22131
 28644  00E6C4                     u21820:
 28645                           
 28646                           ; BSR set to: 0
 28647                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 28648  00E6C4  8C65               	bsf	3941,6,c	;volatile
 28649                           
 28650                           ; BSR set to: 0
 28651                           ;usb_device.c: 316: UADDR = 0x00;
 28652  00E6C6  0E00               	movlw	0
 28653  00E6C8  010F               	movlb	15	; () banked
 28654  00E6CA  6F38               	movwf	56,b	;volatile
 28655                           
 28656                           ; BSR set to: 15
 28657                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 28658  00E6CC  9865               	bcf	3941,4,c	;volatile
 28659                           
 28660                           ; BSR set to: 15
 28661                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 28662  00E6CE  9C65               	bcf	3941,6,c	;volatile
 28663  00E6D0                     
 28664                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 28665                           
 28666                           ; BSR set to: 15
 28667  00E6D0  9662               	bcf	3938,3,c	;volatile
 28668                           
 28669                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 28670  00E6D2  0E00               	movlw	0
 28671  00E6D4  6E0D               	movwf	_inPipes+3,c	;volatile
 28672                           
 28673                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 28674  00E6D6  0E00               	movlw	0
 28675  00E6D8  6E04               	movwf	_outPipes+3,c	;volatile
 28676                           
 28677                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 28678  00E6DA  0E00               	movlw	0
 28679  00E6DC  6E06               	movwf	_outPipes+5,c	;volatile
 28680  00E6DE  0E00               	movlw	0
 28681  00E6E0  6E05               	movwf	_outPipes+4,c	;volatile
 28682                           
 28683                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 28684  00E6E2  B662               	btfsc	3938,3,c	;volatile
 28685  00E6E4  D7F5               	goto	l149
 28686                           
 28687                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 28688  00E6E6  0E01               	movlw	1
 28689  00E6E8  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28690                           
 28691                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 28692  00E6EA  0E01               	movlw	1
 28693  00E6EC  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28694                           
 28695                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 28696  00E6EE  0E00               	movlw	0
 28697  00E6F0  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 28698                           
 28699                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 28700  00E6F2  0E00               	movlw	0
 28701  00E6F4  0101               	movlb	1	; () banked
 28702  00E6F6  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 28703                           
 28704                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 28705  00E6F8  0E00               	movlw	0
 28706  00E6FA  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 28707                           
 28708                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 28709  00E6FC  0E00               	movlw	0
 28710  00E6FE  0100               	movlb	0	; () banked
 28711  00E700  6F68               	movwf	USBDeviceInit@i& (0+255),b
 28712  00E702                     l22159:
 28713                           
 28714                           ; BSR set to: 0
 28715  00E702  0E02               	movlw	2
 28716  00E704  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 28717  00E706  D001               	goto	l151
 28718  00E708  D02E               	goto	u21850
 28719  00E70A                     l151:
 28720                           
 28721                           ; BSR set to: 0
 28722                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 28723                           
 28724                           ; BSR set to: 0
 28725  00E70A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28726  00E70C  0D02               	mullw	2
 28727  00E70E  0E10               	movlw	low _pBDTEntryIn
 28728  00E710  24F3               	addwf	prodl,w,c
 28729  00E712  6ED9               	movwf	fsr2l,c
 28730  00E714  0E00               	movlw	high _pBDTEntryIn
 28731  00E716  20F4               	addwfc	prodh,w,c
 28732  00E718  6EDA               	movwf	fsr2h,c
 28733  00E71A  0E00               	movlw	0
 28734  00E71C  6EDE               	movwf	postinc2,c
 28735  00E71E  0E00               	movlw	0
 28736  00E720  6EDD               	movwf	postdec2,c
 28737                           
 28738                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 28739  00E722  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28740  00E724  0D02               	mullw	2
 28741  00E726  0ED3               	movlw	low _pBDTEntryOut
 28742  00E728  24F3               	addwf	prodl,w,c
 28743  00E72A  6ED9               	movwf	fsr2l,c
 28744  00E72C  0E01               	movlw	high _pBDTEntryOut
 28745  00E72E  20F4               	addwfc	prodh,w,c
 28746  00E730  6EDA               	movwf	fsr2h,c
 28747  00E732  0E00               	movlw	0
 28748  00E734  6EDE               	movwf	postinc2,c
 28749  00E736  0E00               	movlw	0
 28750  00E738  6EDD               	movwf	postdec2,c
 28751                           
 28752                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 28753  00E73A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28754  00E73C  0D01               	mullw	1
 28755  00E73E  0EE4               	movlw	low _ep_data_in
 28756  00E740  24F3               	addwf	prodl,w,c
 28757  00E742  6ED9               	movwf	fsr2l,c
 28758  00E744  0E01               	movlw	high _ep_data_in
 28759  00E746  20F4               	addwfc	prodh,w,c
 28760  00E748  6EDA               	movwf	fsr2h,c
 28761  00E74A  0E00               	movlw	0
 28762  00E74C  6EDF               	movwf	indf2,c
 28763                           
 28764                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 28765  00E74E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 28766  00E750  0D01               	mullw	1
 28767  00E752  0EE1               	movlw	low _ep_data_out
 28768  00E754  24F3               	addwf	prodl,w,c
 28769  00E756  6ED9               	movwf	fsr2l,c
 28770  00E758  0E01               	movlw	high _ep_data_out
 28771  00E75A  20F4               	addwfc	prodh,w,c
 28772  00E75C  6EDA               	movwf	fsr2h,c
 28773  00E75E  0E00               	movlw	0
 28774  00E760  6EDF               	movwf	indf2,c
 28775                           
 28776                           ; BSR set to: 0
 28777  00E762  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 28778  00E764  D7CE               	goto	l22159
 28779  00E766                     u21850:
 28780                           
 28781                           ; BSR set to: 0
 28782                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28783                           
 28784                           ; BSR set to: 0
 28785  00E766  0E08               	movlw	8
 28786  00E768  6E10               	movwf	_pBDTEntryIn,c
 28787  00E76A  0E0D               	movlw	13
 28788  00E76C  6E11               	movwf	_pBDTEntryIn+1,c
 28789                           
 28790                           ; BSR set to: 0
 28791                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 28792  00E76E  0E16               	movlw	22
 28793  00E770  010F               	movlb	15	; () banked
 28794  00E772  6F26               	movwf	38,b	;volatile
 28795                           
 28796                           ; BSR set to: 15
 28797                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 28798  00E774  0E0D               	movlw	13
 28799  00E776  010D               	movlb	13	; () banked
 28800  00E778  6F03               	movwf	3,b	;volatile
 28801  00E77A  0E30               	movlw	48
 28802  00E77C  6F02               	movwf	2,b	;volatile
 28803                           
 28804                           ; BSR set to: 13
 28805                           ;usb_device.c: 359: BDT[0].CNT = 8;
 28806  00E77E  0E08               	movlw	8
 28807  00E780  6F01               	movwf	1,b	;volatile
 28808                           
 28809                           ; BSR set to: 13
 28810                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 28811  00E782  0E04               	movlw	4
 28812  00E784  6F00               	movwf	0,b	;volatile
 28813                           
 28814                           ; BSR set to: 13
 28815                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 28816  00E786  8F00               	bsf	0,7,b	;volatile
 28817                           
 28818                           ; BSR set to: 13
 28819                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 28820  00E788  0E00               	movlw	0
 28821  00E78A  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 28822                           
 28823                           ; BSR set to: 13
 28824                           ;usb_device.c: 366: USB1msTickCount = 0;
 28825  00E78C  0E00               	movlw	0
 28826  00E78E  0101               	movlb	1	; () banked
 28827  00E790  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 28828  00E792  0E00               	movlw	0
 28829  00E794  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 28830  00E796  0E00               	movlw	0
 28831  00E798  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 28832  00E79A  0E00               	movlw	0
 28833  00E79C  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 28834                           
 28835                           ; BSR set to: 1
 28836                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 28837  00E79E  0E00               	movlw	0
 28838  00E7A0  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 28839                           
 28840                           ; BSR set to: 1
 28841                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 28842  00E7A2  0E00               	movlw	0
 28843  00E7A4  6E2B               	movwf	_USBDeviceState,c	;volatile
 28844                           
 28845                           ; BSR set to: 1
 28846  00E7A6  0012               	return		;funcret
 28847  00E7A8                     __end_of_USBDeviceInit:
 28848                           	opt stack 0
 28849                           tblptru	equ	0xFF8
 28850                           tblptrh	equ	0xFF7
 28851                           tblptrl	equ	0xFF6
 28852                           tablat	equ	0xFF5
 28853                           prodh	equ	0xFF4
 28854                           prodl	equ	0xFF3
 28855                           intcon	equ	0xFF2
 28856                           intcon2	equ	0xFF1
 28857                           intcon3	equ	0xFF0
 28858                           postinc0	equ	0xFEE
 28859                           wreg	equ	0xFE8
 28860                           indf1	equ	0xFE7
 28861                           postinc1	equ	0xFE6
 28862                           postdec1	equ	0xFE5
 28863                           plusw1	equ	0xFE3
 28864                           fsr1h	equ	0xFE2
 28865                           fsr1l	equ	0xFE1
 28866                           indf2	equ	0xFDF
 28867                           postinc2	equ	0xFDE
 28868                           postdec2	equ	0xFDD
 28869                           plusw2	equ	0xFDB
 28870                           fsr2h	equ	0xFDA
 28871                           fsr2l	equ	0xFD9
 28872                           status	equ	0xFD8
 28873                           
 28874 ;; *************** function _memset *****************
 28875 ;; Defined at:
 28876 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 28877 ;; Parameters:    Size  Location     Type
 28878 ;;  p1              2    0[BANK0 ] PTR void 
 28879 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28880 ;;  c               2    2[BANK0 ] int 
 28881 ;;  n               2    4[BANK0 ] unsigned int 
 28882 ;; Auto vars:     Size  Location     Type
 28883 ;;  p               2    6[BANK0 ] PTR unsigned char 
 28884 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28885 ;; Return value:  Size  Location     Type
 28886 ;;                  2    0[BANK0 ] PTR void 
 28887 ;; Registers used:
 28888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28889 ;; Tracked objects:
 28890 ;;		On entry : 0/0
 28891 ;;		On exit  : 0/0
 28892 ;;		Unchanged: 0/0
 28893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28894 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28897 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28898 ;;Total ram usage:        8 bytes
 28899 ;; Hardware stack levels used:    1
 28900 ;; Hardware stack levels required when called:   10
 28901 ;; This function calls:
 28902 ;;		Nothing
 28903 ;; This function is called by:
 28904 ;;		_USBDeviceInit
 28905 ;; This function uses a non-reentrant model
 28906 ;;
 28907                           
 28908                           	psect	text132
 28909  0135D6                     __ptext132:
 28910                           	opt stack 0
 28911  0135D6                     _memset:
 28912                           	opt stack 19
 28913                           
 28914                           ; BSR set to: 1
 28915                           ;incstack = 0
 28916  0135D6  C060  F066         	movff	memset@p1,memset@p
 28917  0135DA  C061  F067         	movff	memset@p1+1,memset@p+1
 28918  0135DE  D009               	goto	l4001
 28919  0135E0                     l20411:
 28920  0135E0  C066  FFD9         	movff	memset@p,fsr2l
 28921  0135E4  C067  FFDA         	movff	memset@p+1,fsr2h
 28922  0135E8  C062  FFDF         	movff	memset@c,indf2
 28923  0135EC  0100               	movlb	0	; () banked
 28924  0135EE  4B66               	infsnz	memset@p& (0+255),f,b
 28925  0135F0  2B67               	incf	(memset@p+1)& (0+255),f,b
 28926  0135F2                     l4001:
 28927                           
 28928                           ; BSR set to: 0
 28929  0135F2  0100               	movlb	0	; () banked
 28930  0135F4  0764               	decf	memset@n& (0+255),f,b
 28931  0135F6  A0D8               	btfss	status,0,c
 28932  0135F8  0765               	decf	(memset@n+1)& (0+255),f,b
 28933  0135FA  2964               	incf	memset@n& (0+255),w,b
 28934  0135FC  E1F1               	bnz	l20411
 28935  0135FE  2965               	incf	(memset@n+1)& (0+255),w,b
 28936  013600  B4D8               	btfsc	status,2,c
 28937  013602  0012               	return	
 28938  013604  D7ED               	goto	l4002
 28939  013606                     __end_of_memset:
 28940                           	opt stack 0
 28941                           tblptru	equ	0xFF8
 28942                           tblptrh	equ	0xFF7
 28943                           tblptrl	equ	0xFF6
 28944                           tablat	equ	0xFF5
 28945                           prodh	equ	0xFF4
 28946                           prodl	equ	0xFF3
 28947                           intcon	equ	0xFF2
 28948                           intcon2	equ	0xFF1
 28949                           intcon3	equ	0xFF0
 28950                           postinc0	equ	0xFEE
 28951                           wreg	equ	0xFE8
 28952                           indf1	equ	0xFE7
 28953                           postinc1	equ	0xFE6
 28954                           postdec1	equ	0xFE5
 28955                           plusw1	equ	0xFE3
 28956                           fsr1h	equ	0xFE2
 28957                           fsr1l	equ	0xFE1
 28958                           indf2	equ	0xFDF
 28959                           postinc2	equ	0xFDE
 28960                           postdec2	equ	0xFDD
 28961                           plusw2	equ	0xFDB
 28962                           fsr2h	equ	0xFDA
 28963                           fsr2l	equ	0xFD9
 28964                           status	equ	0xFD8
 28965                           
 28966 ;; *************** function _USBDeviceAttach *****************
 28967 ;; Defined at:
 28968 ;;		line 1354 in file "usb_device.c"
 28969 ;; Parameters:    Size  Location     Type
 28970 ;;		None
 28971 ;; Auto vars:     Size  Location     Type
 28972 ;;		None
 28973 ;; Return value:  Size  Location     Type
 28974 ;;                  1    wreg      void 
 28975 ;; Registers used:
 28976 ;;		wreg, status,2
 28977 ;; Tracked objects:
 28978 ;;		On entry : 0/0
 28979 ;;		On exit  : 0/0
 28980 ;;		Unchanged: 0/0
 28981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28986 ;;Total ram usage:        0 bytes
 28987 ;; Hardware stack levels used:    1
 28988 ;; Hardware stack levels required when called:   10
 28989 ;; This function calls:
 28990 ;;		Nothing
 28991 ;; This function is called by:
 28992 ;;		_main
 28993 ;; This function uses a non-reentrant model
 28994 ;;
 28995                           
 28996                           	psect	text133
 28997  013574                     __ptext133:
 28998                           	opt stack 0
 28999  013574                     _USBDeviceAttach:
 29000                           	opt stack 20
 29001                           
 29002                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 29003                           
 29004                           ; BSR set to: 0
 29005                           ;incstack = 0
 29006  013574  502B               	movf	_USBDeviceState,w,c	;volatile
 29007  013576  A4D8               	btfss	status,2,c
 29008  013578  0012               	return	
 29009                           
 29010                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 29011  01357A  0E00               	movlw	0
 29012  01357C  6E65               	movwf	3941,c	;volatile
 29013                           
 29014                           ;usb_device.c: 1365: UIE = 0;
 29015  01357E  0E00               	movlw	0
 29016  013580  010F               	movlb	15	; () banked
 29017  013582  6F36               	movwf	54,b	;volatile
 29018                           
 29019                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 29020  013584  0E16               	movlw	22
 29021  013586  6F39               	movwf	57,b	;volatile
 29022  013588  0E9F               	movlw	159
 29023  01358A  6F37               	movwf	55,b	;volatile
 29024  01358C  0E7B               	movlw	123
 29025  01358E  6F36               	movwf	54,b	;volatile
 29026                           
 29027                           ; BSR set to: 15
 29028                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 29029  013590  8ED0               	bsf	4048,7,c	;volatile
 29030                           
 29031                           ; BSR set to: 15
 29032  013592  88A2               	bsf	4002,4,c	;volatile
 29033                           
 29034                           ; BSR set to: 15
 29035  013594  88A0               	bsf	4000,4,c	;volatile
 29036                           
 29037                           ; BSR set to: 15
 29038  013596  8EF2               	bsf	intcon,7,c	;volatile
 29039                           
 29040                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 29041  013598  D001               	goto	l208
 29042  01359A                     l209:
 29043  01359A  8665               	bsf	3941,3,c	;volatile
 29044  01359C                     l208:
 29045  01359C  A665               	btfss	3941,3,c	;volatile
 29046  01359E  D7FD               	goto	l209
 29047                           
 29048                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 29049  0135A0  0E01               	movlw	1
 29050  0135A2  6E2B               	movwf	_USBDeviceState,c	;volatile
 29051  0135A4  0012               	return	
 29052  0135A6                     __end_of_USBDeviceAttach:
 29053                           	opt stack 0
 29054                           tblptru	equ	0xFF8
 29055                           tblptrh	equ	0xFF7
 29056                           tblptrl	equ	0xFF6
 29057                           tablat	equ	0xFF5
 29058                           prodh	equ	0xFF4
 29059                           prodl	equ	0xFF3
 29060                           intcon	equ	0xFF2
 29061                           intcon2	equ	0xFF1
 29062                           intcon3	equ	0xFF0
 29063                           postinc0	equ	0xFEE
 29064                           wreg	equ	0xFE8
 29065                           indf1	equ	0xFE7
 29066                           postinc1	equ	0xFE6
 29067                           postdec1	equ	0xFE5
 29068                           plusw1	equ	0xFE3
 29069                           fsr1h	equ	0xFE2
 29070                           fsr1l	equ	0xFE1
 29071                           indf2	equ	0xFDF
 29072                           postinc2	equ	0xFDE
 29073                           postdec2	equ	0xFDD
 29074                           plusw2	equ	0xFDB
 29075                           fsr2h	equ	0xFDA
 29076                           fsr2l	equ	0xFD9
 29077                           status	equ	0xFD8
 29078                           
 29079 ;; *************** function _SYSTEM_Initialize *****************
 29080 ;; Defined at:
 29081 ;;		line 78 in file "system.c"
 29082 ;; Parameters:    Size  Location     Type
 29083 ;;  state           1    wreg     enum E6751
 29084 ;; Auto vars:     Size  Location     Type
 29085 ;;  state           1    0[BANK0 ] enum E6751
 29086 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 29087 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 29088 ;; Return value:  Size  Location     Type
 29089 ;;                  1    wreg      void 
 29090 ;; Registers used:
 29091 ;;		wreg, status,2, status,0
 29092 ;; Tracked objects:
 29093 ;;		On entry : 0/0
 29094 ;;		On exit  : 0/0
 29095 ;;		Unchanged: 0/0
 29096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29098 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29100 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29101 ;;Total ram usage:        5 bytes
 29102 ;; Hardware stack levels used:    1
 29103 ;; Hardware stack levels required when called:   10
 29104 ;; This function calls:
 29105 ;;		Nothing
 29106 ;; This function is called by:
 29107 ;;		_main
 29108 ;; This function uses a non-reentrant model
 29109 ;;
 29110                           
 29111                           	psect	text134
 29112  0129EC                     __ptext134:
 29113                           	opt stack 0
 29114  0129EC                     _SYSTEM_Initialize:
 29115                           	opt stack 20
 29116                           
 29117                           ;incstack = 0
 29118                           ;SYSTEM_Initialize@state stored from wreg
 29119  0129EC  0100               	movlb	0	; () banked
 29120  0129EE  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 29121                           
 29122                           ;system.c: 80: switch(state)
 29123  0129F0  D01E               	goto	l949
 29124  0129F2                     
 29125                           ;system.c: 89: {;system.c: 90: unsigned int pll_startup_counter = 600;
 29126  0129F2  0E02               	movlw	2
 29127  0129F4  0100               	movlb	0	; () banked
 29128  0129F6  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 29129  0129F8  0E58               	movlw	88
 29130  0129FA  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 29131                           
 29132                           ; BSR set to: 0
 29133                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 29134  0129FC  8C9B               	bsf	3995,6,c	;volatile
 29135  0129FE                     l22311:
 29136                           
 29137                           ; BSR set to: 0
 29138  0129FE  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 29139  012A00  A0D8               	btfss	status,0,c
 29140  012A02  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 29141  012A04  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 29142  012A06  E1FB               	bnz	l22311
 29143  012A08  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 29144  012A0A  B4D8               	btfsc	status,2,c
 29145  012A0C  0012               	return	
 29146  012A0E  D7F7               	goto	l952
 29147  012A10                     
 29148                           ; BSR set to: 0
 29149                           ;system.c: 117: OSCCON = 0x70;
 29150                           
 29151                           ; BSR set to: 0
 29152  012A10  0E70               	movlw	112
 29153  012A12  6ED3               	movwf	4051,c	;volatile
 29154                           
 29155                           ;system.c: 123: {;system.c: 124: unsigned int pll_startup_counter = 800;
 29156  012A14  0E03               	movlw	3
 29157  012A16  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3287+1)& (0+255),b
 29158  012A18  0E20               	movlw	32
 29159  012A1A  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3287& (0+255),b
 29160  012A1C                     l22315:
 29161                           
 29162                           ; BSR set to: 0
 29163  012A1C  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3287& (0+255),f,b
 29164  012A1E  A0D8               	btfss	status,0,c
 29165  012A20  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3287+1)& (0+255),f,b
 29166  012A22  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3287& (0+255),w,b
 29167  012A24  E1FB               	bnz	l22315
 29168  012A26  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3287+1)& (0+255),w,b
 29169  012A28  B4D8               	btfsc	status,2,c
 29170  012A2A  0012               	return	
 29171  012A2C  D7F7               	goto	l958
 29172  012A2E                     l949:
 29173                           
 29174                           ; BSR set to: 0
 29175  012A2E  0100               	movlb	0	; () banked
 29176  012A30  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 29177                           
 29178                           ; Switch size 1, requested type "space"
 29179                           ; Number of cases is 3, Range of values is 0 to 2
 29180                           ; switch strategies available:
 29181                           ; Name         Instructions Cycles
 29182                           ; simple_byte           10     6 (average)
 29183                           ;	Chosen strategy is simple_byte
 29184  012A32  0A00               	xorlw	0	; case 0
 29185  012A34  B4D8               	btfsc	status,2,c
 29186  012A36  D7DD               	goto	l950
 29187  012A38  0A01               	xorlw	1	; case 1
 29188  012A3A  B4D8               	btfsc	status,2,c
 29189  012A3C  0012               	return	
 29190  012A3E  0A03               	xorlw	3	; case 2
 29191  012A40  A4D8               	btfss	status,2,c
 29192  012A42  0012               	return	
 29193  012A44  D7E5               	goto	l956
 29194  012A46                     __end_of_SYSTEM_Initialize:
 29195                           	opt stack 0
 29196                           tblptru	equ	0xFF8
 29197                           tblptrh	equ	0xFF7
 29198                           tblptrl	equ	0xFF6
 29199                           tablat	equ	0xFF5
 29200                           prodh	equ	0xFF4
 29201                           prodl	equ	0xFF3
 29202                           intcon	equ	0xFF2
 29203                           intcon2	equ	0xFF1
 29204                           intcon3	equ	0xFF0
 29205                           postinc0	equ	0xFEE
 29206                           wreg	equ	0xFE8
 29207                           indf1	equ	0xFE7
 29208                           postinc1	equ	0xFE6
 29209                           postdec1	equ	0xFE5
 29210                           plusw1	equ	0xFE3
 29211                           fsr1h	equ	0xFE2
 29212                           fsr1l	equ	0xFE1
 29213                           indf2	equ	0xFDF
 29214                           postinc2	equ	0xFDE
 29215                           postdec2	equ	0xFDD
 29216                           plusw2	equ	0xFDB
 29217                           fsr2h	equ	0xFDA
 29218                           fsr2l	equ	0xFD9
 29219                           status	equ	0xFD8
 29220                           
 29221 ;; *************** function _APP_DeviceMSDTasks *****************
 29222 ;; Defined at:
 29223 ;;		line 110 in file "app_device_msd.c"
 29224 ;; Parameters:    Size  Location     Type
 29225 ;;		None
 29226 ;; Auto vars:     Size  Location     Type
 29227 ;;		None
 29228 ;; Return value:  Size  Location     Type
 29229 ;;                  1    wreg      void 
 29230 ;; Registers used:
 29231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29232 ;; Tracked objects:
 29233 ;;		On entry : 0/0
 29234 ;;		On exit  : 0/0
 29235 ;;		Unchanged: 0/0
 29236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29241 ;;Total ram usage:        0 bytes
 29242 ;; Hardware stack levels used:    1
 29243 ;; Hardware stack levels required when called:   21
 29244 ;; This function calls:
 29245 ;;		_MSDTasks
 29246 ;; This function is called by:
 29247 ;;		_main
 29248 ;; This function uses a non-reentrant model
 29249 ;;
 29250                           
 29251                           	psect	text135
 29252  013D58                     __ptext135:
 29253                           	opt stack 0
 29254  013D58                     _APP_DeviceMSDTasks:
 29255                           	opt stack 9
 29256                           
 29257                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 29258                           
 29259                           ; BSR set to: 0
 29260                           ;incstack = 0
 29261  013D58  0E20               	movlw	32
 29262  013D5A  602B               	cpfslt	_USBDeviceState,c	;volatile
 29263  013D5C  D001               	goto	l1233
 29264  013D5E  0012               	return	
 29265  013D60                     l1233:
 29266                           
 29267                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 29268  013D60  B265               	btfsc	3941,1,c	;volatile
 29269  013D62  0012               	return	
 29270                           
 29271                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 29272                           
 29273                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 29274  013D64  EC3E  F069         	call	_MSDTasks	;wreg free
 29275  013D68  0012               	return		;funcret
 29276  013D6A                     __end_of_APP_DeviceMSDTasks:
 29277                           	opt stack 0
 29278                           tblptru	equ	0xFF8
 29279                           tblptrh	equ	0xFF7
 29280                           tblptrl	equ	0xFF6
 29281                           tablat	equ	0xFF5
 29282                           prodh	equ	0xFF4
 29283                           prodl	equ	0xFF3
 29284                           intcon	equ	0xFF2
 29285                           intcon2	equ	0xFF1
 29286                           intcon3	equ	0xFF0
 29287                           postinc0	equ	0xFEE
 29288                           wreg	equ	0xFE8
 29289                           indf1	equ	0xFE7
 29290                           postinc1	equ	0xFE6
 29291                           postdec1	equ	0xFE5
 29292                           plusw1	equ	0xFE3
 29293                           fsr1h	equ	0xFE2
 29294                           fsr1l	equ	0xFE1
 29295                           indf2	equ	0xFDF
 29296                           postinc2	equ	0xFDE
 29297                           postdec2	equ	0xFDD
 29298                           plusw2	equ	0xFDB
 29299                           fsr2h	equ	0xFDA
 29300                           fsr2l	equ	0xFD9
 29301                           status	equ	0xFD8
 29302                           
 29303 ;; *************** function _MSDTasks *****************
 29304 ;; Defined at:
 29305 ;;		line 335 in file "usb_device_msd.c"
 29306 ;; Parameters:    Size  Location     Type
 29307 ;;		None
 29308 ;; Auto vars:     Size  Location     Type
 29309 ;;  i               1   81[BANK0 ] unsigned char 
 29310 ;; Return value:  Size  Location     Type
 29311 ;;                  1    wreg      unsigned char 
 29312 ;; Registers used:
 29313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29314 ;; Tracked objects:
 29315 ;;		On entry : 0/0
 29316 ;;		On exit  : 0/0
 29317 ;;		Unchanged: 0/0
 29318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29320 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29322 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29323 ;;Total ram usage:        6 bytes
 29324 ;; Hardware stack levels used:    1
 29325 ;; Hardware stack levels required when called:   20
 29326 ;; This function calls:
 29327 ;;		_MSDProcessCommand
 29328 ;;		_USBStallEndpoint
 29329 ;;		_USBTransferOnePacket
 29330 ;; This function is called by:
 29331 ;;		_APP_DeviceMSDTasks
 29332 ;; This function uses a non-reentrant model
 29333 ;;
 29334                           
 29335                           	psect	text136
 29336  00D27C                     __ptext136:
 29337                           	opt stack 0
 29338  00D27C                     _MSDTasks:
 29339                           	opt stack 9
 29340                           
 29341                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 29342                           
 29343                           ;incstack = 0
 29344  00D27C  0E20               	movlw	32
 29345  00D27E  182B               	xorwf	_USBDeviceState,w,c	;volatile
 29346  00D280  A4D8               	btfss	status,2,c
 29347  00D282  0012               	return	
 29348                           
 29349                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 29350                           
 29351                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 29352  00D284  98A0               	bcf	4000,4,c	;volatile
 29353                           
 29354                           ;usb_device_msd.c: 357: switch(MSD_State)
 29355  00D286  D119               	goto	l574
 29356  00D288                     
 29357                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 29358  00D288  0100               	movlb	0	; () banked
 29359  00D28A  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 29360  00D28C  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 29361  00D28E  B4D8               	btfsc	status,2,c
 29362  00D290  D006               	goto	u19560
 29363                           
 29364                           ; BSR set to: 0
 29365  00D292  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29366  00D296  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29367  00D29A  BEDF               	btfsc	indf2,7,c
 29368  00D29C  D11D               	goto	l590
 29369  00D29E                     u19560:
 29370                           
 29371                           ; BSR set to: 0
 29372                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 29373                           
 29374                           ; BSR set to: 0
 29375  00D29E  0E00               	movlw	0
 29376  00D2A0  6FB1               	movwf	MSDTasks@i& (0+255),b
 29377  00D2A2                     l20475:
 29378                           
 29379                           ; BSR set to: 0
 29380  00D2A2  0E1E               	movlw	30
 29381  00D2A4  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 29382  00D2A6  D001               	goto	l579
 29383  00D2A8  D014               	goto	u19580
 29384  00D2AA                     l579:
 29385                           
 29386                           ; BSR set to: 0
 29387                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 29388                           
 29389                           ; BSR set to: 0
 29390  00D2AA  51B1               	movf	MSDTasks@i& (0+255),w,b
 29391  00D2AC  0D01               	mullw	1
 29392  00D2AE  0E40               	movlw	64
 29393  00D2B0  24F3               	addwf	prodl,w,c
 29394  00D2B2  6ED9               	movwf	fsr2l,c
 29395  00D2B4  0E0D               	movlw	13
 29396  00D2B6  20F4               	addwfc	prodh,w,c
 29397  00D2B8  6EDA               	movwf	fsr2h,c
 29398  00D2BA  51B1               	movf	MSDTasks@i& (0+255),w,b
 29399  00D2BC  0D01               	mullw	1
 29400  00D2BE  0E41               	movlw	low _gblCBW
 29401  00D2C0  24F3               	addwf	prodl,w,c
 29402  00D2C2  6EE1               	movwf	fsr1l,c
 29403  00D2C4  0E02               	movlw	high _gblCBW
 29404  00D2C6  20F4               	addwfc	prodh,w,c
 29405  00D2C8  6EE2               	movwf	fsr1h,c
 29406  00D2CA  CFDF FFE7          	movff	indf2,indf1
 29407                           
 29408                           ; BSR set to: 0
 29409  00D2CE  2BB1               	incf	MSDTasks@i& (0+255),f,b
 29410  00D2D0  D7E8               	goto	l20475
 29411  00D2D2                     u19580:
 29412                           
 29413                           ; BSR set to: 0
 29414                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 29415                           
 29416                           ; BSR set to: 0
 29417  00D2D2  EE20 F001          	lfsr	2,1
 29418  00D2D6  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 29419  00D2D8  26D9               	addwf	fsr2l,f,c
 29420  00D2DA  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 29421  00D2DC  22DA               	addwfc	fsr2h,f,c
 29422  00D2DE  0E1F               	movlw	31
 29423  00D2E0  18DE               	xorwf	postinc2,w,c
 29424  00D2E2  A4D8               	btfss	status,2,c
 29425  00D2E4  D076               	goto	l581
 29426                           
 29427                           ; BSR set to: 0
 29428  00D2E6  0E55               	movlw	85
 29429  00D2E8  0102               	movlb	2	; () banked
 29430  00D2EA  1941               	xorwf	_gblCBW& (0+255),w,b
 29431  00D2EC  E172               	bnz	l581
 29432  00D2EE  0E53               	movlw	83
 29433  00D2F0  1942               	xorwf	(_gblCBW+1)& (0+255),w,b
 29434  00D2F2  E16F               	bnz	l581
 29435  00D2F4  0E42               	movlw	66
 29436  00D2F6  1943               	xorwf	(_gblCBW+2)& (0+255),w,b
 29437  00D2F8  E16C               	bnz	l581
 29438  00D2FA  0E43               	movlw	67
 29439  00D2FC  1944               	xorwf	(_gblCBW+3)& (0+255),w,b
 29440  00D2FE  A4D8               	btfss	status,2,c
 29441  00D300  D068               	goto	l581
 29442                           
 29443                           ; BSR set to: 2
 29444                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 29445  00D302  0E01               	movlw	1
 29446  00D304  0101               	movlb	1	; () banked
 29447  00D306  6FF5               	movwf	_MSDCBWValid& (0+255),b
 29448                           
 29449                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 29450  00D308  0102               	movlb	2	; () banked
 29451  00D30A  514E               	movf	(_gblCBW+13)& (0+255),w,b
 29452  00D30C  A4D8               	btfss	status,2,c
 29453  00D30E  D054               	goto	l582
 29454                           
 29455                           ; BSR set to: 2
 29456  00D310  0E11               	movlw	17
 29457  00D312  614F               	cpfslt	(_gblCBW+14)& (0+255),b
 29458  00D314  D051               	goto	l582
 29459                           
 29460                           ; BSR set to: 2
 29461  00D316  514F               	movf	(_gblCBW+14)& (0+255),w,b
 29462  00D318  B4D8               	btfsc	status,2,c
 29463  00D31A  D04E               	goto	l582
 29464                           
 29465                           ; BSR set to: 2
 29466  00D31C  C24D  F0AC         	movff	_gblCBW+12,??_MSDTasks
 29467  00D320  0E3F               	movlw	63
 29468  00D322  0100               	movlb	0	; () banked
 29469  00D324  17AC               	andwf	??_MSDTasks& (0+255),f,b
 29470  00D326  A4D8               	btfss	status,2,c
 29471  00D328  D047               	goto	l582
 29472                           
 29473                           ; BSR set to: 0
 29474                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 29475  00D32A  0E55               	movlw	85
 29476  00D32C  010D               	movlb	13	; () banked
 29477  00D32E  6F80               	movwf	128,b	;volatile
 29478  00D330  0E53               	movlw	83
 29479  00D332  6F81               	movwf	129,b	;volatile
 29480  00D334  0E42               	movlw	66
 29481  00D336  6F82               	movwf	130,b	;volatile
 29482  00D338  0E53               	movlw	83
 29483  00D33A  6F83               	movwf	131,b	;volatile
 29484                           
 29485                           ; BSR set to: 13
 29486                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 29487  00D33C  C245  FD84         	movff	_gblCBW+4,3460	;volatile
 29488  00D340  C246  FD85         	movff	_gblCBW+5,3461	;volatile
 29489  00D344  C247  FD86         	movff	_gblCBW+6,3462	;volatile
 29490  00D348  C248  FD87         	movff	_gblCBW+7,3463	;volatile
 29491                           
 29492                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 29493  00D34C  0E00               	movlw	0
 29494  00D34E  6F88               	movwf	136,b	;volatile
 29495  00D350  0E00               	movlw	0
 29496  00D352  6F89               	movwf	137,b	;volatile
 29497  00D354  0E00               	movlw	0
 29498  00D356  6F8A               	movwf	138,b	;volatile
 29499  00D358  0E00               	movlw	0
 29500  00D35A  6F8B               	movwf	139,b	;volatile
 29501                           
 29502                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 29503  00D35C  0E00               	movlw	0
 29504  00D35E  6F8C               	movwf	140,b	;volatile
 29505                           
 29506                           ; BSR set to: 13
 29507                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 29508  00D360  0100               	movlb	0	; () banked
 29509  00D362  69E6               	setf	_MSDCommandState& (0+255),b
 29510                           
 29511                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 29512  00D364  0E00               	movlw	0
 29513  00D366  0101               	movlb	1	; () banked
 29514  00D368  6FF9               	movwf	_MSDReadState& (0+255),b
 29515                           
 29516                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 29517  00D36A  0E00               	movlw	0
 29518  00D36C  6E1F               	movwf	_MSDWriteState,c
 29519                           
 29520                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 29521  00D36E  0E00               	movlw	0
 29522  00D370  6FF8               	movwf	_MSDRetryAttempt& (0+255),b
 29523                           
 29524                           ; BSR set to: 1
 29525                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 29526  00D372  0E03               	movlw	3
 29527  00D374  0102               	movlb	2	; () banked
 29528  00D376  1950               	xorwf	(_gblCBW+15)& (0+255),w,b
 29529  00D378  B4D8               	btfsc	status,2,c
 29530  00D37A  D008               	goto	l583
 29531                           
 29532                           ; BSR set to: 2
 29533                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 29534  00D37C  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 29535  00D37E  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 29536  00D380  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 29537  00D382  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 29538                           
 29539                           ; BSR set to: 2
 29540                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 29541  00D384  0E00               	movlw	0
 29542  00D386  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 29543                           
 29544                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 29545  00D388  0E00               	movlw	0
 29546  00D38A  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 29547  00D38C                     l583:
 29548                           
 29549                           ; BSR set to: 2
 29550                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 29551                           
 29552                           ; BSR set to: 2
 29553  00D38C  AF4D               	btfss	(_gblCBW+12)& (0+255),7,b
 29554  00D38E  D002               	goto	l584
 29555                           
 29556                           ; BSR set to: 2
 29557                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 29558  00D390  0E01               	movlw	1
 29559  00D392  D001               	goto	L21
 29560  00D394                     l584:
 29561                           
 29562                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 29563                           
 29564                           ; BSR set to: 0
 29565  00D394  0E02               	movlw	2
 29566  00D396                     L21:
 29567  00D396  0100               	movlb	0	; () banked
 29568  00D398  6FE7               	movwf	_MSD_State& (0+255),b
 29569                           
 29570                           ; BSR set to: 0
 29571                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 29572                           
 29573                           ; BSR set to: 0
 29574  00D39A  0102               	movlb	2	; () banked
 29575  00D39C  5149               	movf	(_gblCBW+8)& (0+255),w,b
 29576  00D39E  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 29577  00D3A0  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 29578  00D3A2  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 29579  00D3A4  B4D8               	btfsc	status,2,c
 29580  00D3A6  D002               	goto	l586
 29581                           
 29582                           ; BSR set to: 2
 29583                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 29584  00D3A8  0E00               	movlw	0
 29585  00D3AA  D001               	goto	L22
 29586  00D3AC                     l586:
 29587                           
 29588                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 29589                           
 29590                           ; BSR set to: 0
 29591  00D3AC  0E01               	movlw	1
 29592  00D3AE                     L22:
 29593  00D3AE  0100               	movlb	0	; () banked
 29594  00D3B0  6FE5               	movwf	_MSDHostNoData& (0+255),b
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 29598                           
 29599                           ; BSR set to: 0
 29600  00D3B2  C250  F0E6         	movff	_gblCBW+15,_MSDCommandState
 29601                           
 29602                           ;usb_device_msd.c: 454: }
 29603  00D3B6  D090               	goto	l590
 29604  00D3B8                     l582:
 29605                           
 29606                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 29607                           
 29608                           ; BSR set to: 0
 29609  00D3B8  0E01               	movlw	1
 29610  00D3BA  0100               	movlb	0	; () banked
 29611  00D3BC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29612  00D3BE  0E02               	movlw	2
 29613  00D3C0  EC70  F07B         	call	_USBStallEndpoint
 29614                           
 29615                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 29616  00D3C4  0E00               	movlw	0
 29617  00D3C6  0100               	movlb	0	; () banked
 29618  00D3C8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29619  00D3CA  0E02               	movlw	2
 29620  00D3CC  EC70  F07B         	call	_USBStallEndpoint
 29621                           
 29622                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 29623  00D3D0  D083               	goto	l590
 29624  00D3D2                     l581:
 29625                           
 29626                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 29627  00D3D2  0E01               	movlw	1
 29628  00D3D4  0100               	movlb	0	; () banked
 29629  00D3D6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29630  00D3D8  0E02               	movlw	2
 29631  00D3DA  EC70  F07B         	call	_USBStallEndpoint
 29632                           
 29633                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 29634  00D3DE  0E00               	movlw	0
 29635  00D3E0  0100               	movlb	0	; () banked
 29636  00D3E2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29637  00D3E4  0E02               	movlw	2
 29638  00D3E6  EC70  F07B         	call	_USBStallEndpoint
 29639                           
 29640                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 29641  00D3EA  0E00               	movlw	0
 29642  00D3EC  0101               	movlb	1	; () banked
 29643  00D3EE  6FF5               	movwf	_MSDCBWValid& (0+255),b
 29644                           
 29645                           ; BSR set to: 1
 29646                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 29647                           
 29648                           ; BSR set to: 1
 29649  00D3F0  D073               	goto	l590
 29650  00D3F2                     
 29651                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 29652                           
 29653                           ; BSR set to: 1
 29654  00D3F2  EC5C  F076         	call	_MSDProcessCommand	;wreg free
 29655  00D3F6  0AFF               	xorlw	255
 29656  00D3F8  A4D8               	btfss	status,2,c
 29657  00D3FA  D06E               	goto	l590
 29658  00D3FC  D011               	goto	l595
 29659  00D3FE                     
 29660                           ; BSR set to: 0
 29661                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 29662                           
 29663                           ; BSR set to: 0
 29664  00D3FE  EC5C  F076         	call	_MSDProcessCommand	;wreg free
 29665  00D402  0AFF               	xorlw	255
 29666  00D404  A4D8               	btfss	status,2,c
 29667  00D406  D068               	goto	l590
 29668                           
 29669                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 29670  00D408  010D               	movlb	13	; () banked
 29671  00D40A  518C               	movf	140,w,b	;volatile
 29672  00D40C  A4D8               	btfss	status,2,c
 29673  00D40E  D008               	goto	l595
 29674                           
 29675                           ; BSR set to: 13
 29676  00D410  5188               	movf	136,w,b	;volatile
 29677  00D412  1189               	iorwf	137,w,b	;volatile
 29678  00D414  118A               	iorwf	138,w,b	;volatile
 29679  00D416  118B               	iorwf	139,w,b	;volatile
 29680  00D418  B4D8               	btfsc	status,2,c
 29681  00D41A  D002               	goto	l595
 29682                           
 29683                           ; BSR set to: 13
 29684                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 29685  00D41C  0E02               	movlw	2
 29686  00D41E  6F8C               	movwf	140,b	;volatile
 29687  00D420                     l595:
 29688                           
 29689                           ; BSR set to: 13
 29690                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 29691  00D420  0E03               	movlw	3
 29692  00D422  D03C               	goto	L20
 29693  00D424                     
 29694                           ; BSR set to: 0
 29695                           
 29696                           ; BSR set to: 0
 29697  00D424  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2697
 29698  00D428  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2697+1
 29699                           
 29700                           ; BSR set to: 0
 29701                           
 29702                           ; BSR set to: 0
 29703                           
 29704                           ; BSR set to: 0
 29705  00D42C  51AD               	movf	_MSDTasks$2697& (0+255),w,b
 29706  00D42E  11AE               	iorwf	(_MSDTasks$2697+1)& (0+255),w,b
 29707  00D430  B4D8               	btfsc	status,2,c
 29708  00D432  D00A               	goto	l597
 29709                           
 29710                           ; BSR set to: 0
 29711  00D434  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2698
 29712  00D438  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2698+1
 29713                           
 29714                           ; BSR set to: 0
 29715                           
 29716                           ; BSR set to: 0
 29717                           
 29718                           ; BSR set to: 0
 29719                           
 29720                           ; BSR set to: 0
 29721  00D43C  C0AF  FFD9         	movff	_MSDTasks$2698,fsr2l
 29722  00D440  C0B0  FFDA         	movff	_MSDTasks$2698+1,fsr2h
 29723  00D444  BEDF               	btfsc	indf2,7,c
 29724  00D446  D048               	goto	l590
 29725  00D448                     l597:
 29726                           
 29727                           ; BSR set to: 0
 29728                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 29729                           
 29730                           ; BSR set to: 0
 29731  00D448  0E01               	movlw	1
 29732  00D44A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29733  00D44C  0E80               	movlw	128
 29734  00D44E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29735  00D450  0E0D               	movlw	13
 29736  00D452  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29737  00D454  0E0D               	movlw	13
 29738  00D456  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29739  00D458  0E02               	movlw	2
 29740  00D45A  ECF5  F07B         	call	_USBTransferOnePacket
 29741  00D45E  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 29742  00D462  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 29743                           
 29744                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 29745  00D466  0100               	movlb	0	; () banked
 29746  00D468  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 29747  00D46A  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 29748  00D46C  B4D8               	btfsc	status,2,c
 29749  00D46E  D006               	goto	u19750
 29750                           
 29751                           ; BSR set to: 0
 29752  00D470  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29753  00D474  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29754  00D478  BEDF               	btfsc	indf2,7,c
 29755  00D47A  D00F               	goto	l606
 29756  00D47C                     u19750:
 29757                           
 29758                           ; BSR set to: 0
 29759                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 29760                           
 29761                           ; BSR set to: 0
 29762  00D47C  0E00               	movlw	0
 29763  00D47E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29764  00D480  0E40               	movlw	64
 29765  00D482  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29766  00D484  0E0D               	movlw	13
 29767  00D486  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29768  00D488  0E40               	movlw	64
 29769  00D48A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29770  00D48C  0E02               	movlw	2
 29771  00D48E  ECF5  F07B         	call	_USBTransferOnePacket
 29772  00D492  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 29773  00D496  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 29774  00D49A                     l606:
 29775                           
 29776                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 29777  00D49A  0E00               	movlw	0
 29778  00D49C                     L20:
 29779  00D49C  0100               	movlb	0	; () banked
 29780  00D49E  6FE7               	movwf	_MSD_State& (0+255),b
 29781                           
 29782                           ;usb_device_msd.c: 513: break;
 29783  00D4A0  D01B               	goto	l590
 29784  00D4A2                     
 29785                           ; BSR set to: 0
 29786                           ;usb_device_msd.c: 518: MSD_State=0x00;
 29787                           
 29788                           ; BSR set to: 0
 29789  00D4A2  0E00               	movlw	0
 29790  00D4A4  6FE7               	movwf	_MSD_State& (0+255),b
 29791                           
 29792                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 29793  00D4A6  0E02               	movlw	2
 29794  00D4A8  010D               	movlb	13	; () banked
 29795  00D4AA  6F8C               	movwf	140,b	;volatile
 29796                           
 29797                           ; BSR set to: 13
 29798                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 29799  00D4AC  0E00               	movlw	0
 29800  00D4AE  0100               	movlb	0	; () banked
 29801  00D4B0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29802  00D4B2  0E02               	movlw	2
 29803  00D4B4  EC70  F07B         	call	_USBStallEndpoint
 29804                           
 29805                           ;usb_device_msd.c: 521: }
 29806  00D4B8  D00F               	goto	l590
 29807  00D4BA                     l574:
 29808  00D4BA  0100               	movlb	0	; () banked
 29809  00D4BC  51E7               	movf	_MSD_State& (0+255),w,b
 29810                           
 29811                           ; Switch size 1, requested type "space"
 29812                           ; Number of cases is 4, Range of values is 0 to 3
 29813                           ; switch strategies available:
 29814                           ; Name         Instructions Cycles
 29815                           ; simple_byte           13     7 (average)
 29816                           ;	Chosen strategy is simple_byte
 29817  00D4BE  0A00               	xorlw	0	; case 0
 29818  00D4C0  B4D8               	btfsc	status,2,c
 29819  00D4C2  D6E2               	goto	l575
 29820  00D4C4  0A01               	xorlw	1	; case 1
 29821  00D4C6  B4D8               	btfsc	status,2,c
 29822  00D4C8  D794               	goto	l591
 29823  00D4CA  0A03               	xorlw	3	; case 2
 29824  00D4CC  B4D8               	btfsc	status,2,c
 29825  00D4CE  D797               	goto	l593
 29826  00D4D0  0A01               	xorlw	1	; case 3
 29827  00D4D2  B4D8               	btfsc	status,2,c
 29828  00D4D4  D7A7               	goto	l596
 29829  00D4D6  D7E5               	goto	l609
 29830  00D4D8                     l590:
 29831                           
 29832                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 29833  00D4D8  88A0               	bsf	4000,4,c	;volatile
 29834                           
 29835                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 29836  00D4DA  0012               	return		;funcret
 29837  00D4DC                     __end_of_MSDTasks:
 29838                           	opt stack 0
 29839                           tblptru	equ	0xFF8
 29840                           tblptrh	equ	0xFF7
 29841                           tblptrl	equ	0xFF6
 29842                           tablat	equ	0xFF5
 29843                           prodh	equ	0xFF4
 29844                           prodl	equ	0xFF3
 29845                           intcon	equ	0xFF2
 29846                           intcon2	equ	0xFF1
 29847                           intcon3	equ	0xFF0
 29848                           postinc0	equ	0xFEE
 29849                           wreg	equ	0xFE8
 29850                           indf1	equ	0xFE7
 29851                           postinc1	equ	0xFE6
 29852                           postdec1	equ	0xFE5
 29853                           plusw1	equ	0xFE3
 29854                           fsr1h	equ	0xFE2
 29855                           fsr1l	equ	0xFE1
 29856                           indf2	equ	0xFDF
 29857                           postinc2	equ	0xFDE
 29858                           postdec2	equ	0xFDD
 29859                           plusw2	equ	0xFDB
 29860                           fsr2h	equ	0xFDA
 29861                           fsr2l	equ	0xFD9
 29862                           status	equ	0xFD8
 29863                           
 29864 ;; *************** function _MSDProcessCommand *****************
 29865 ;; Defined at:
 29866 ;;		line 553 in file "usb_device_msd.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;		None
 29869 ;; Auto vars:     Size  Location     Type
 29870 ;;		None
 29871 ;; Return value:  Size  Location     Type
 29872 ;;                  1    wreg      unsigned char 
 29873 ;; Registers used:
 29874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 29875 ;; Tracked objects:
 29876 ;;		On entry : 0/0
 29877 ;;		On exit  : 0/0
 29878 ;;		Unchanged: 0/0
 29879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29882 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29883 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29884 ;;Total ram usage:        5 bytes
 29885 ;; Hardware stack levels used:    1
 29886 ;; Hardware stack levels required when called:   19
 29887 ;; This function calls:
 29888 ;;		_ExternalFlash_MediaDetect
 29889 ;;		_ExternalFlash_MediaInitialize
 29890 ;;		_MSDProcessCommandMediaAbsent
 29891 ;;		_MSDProcessCommandMediaPresent
 29892 ;; This function is called by:
 29893 ;;		_MSDTasks
 29894 ;; This function uses a non-reentrant model
 29895 ;;
 29896                           
 29897                           	psect	text137
 29898  00ECB8                     __ptext137:
 29899                           	opt stack 0
 29900  00ECB8                     _MSDProcessCommand:
 29901                           	opt stack 9
 29902                           
 29903                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 29904                           
 29905                           ;incstack = 0
 29906  00ECB8  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 29907  00ECBC  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 29908  00ECC0  EE22  F0C4         	lfsr	2,_LUN+9
 29909  00ECC4  D801               	call	u18488
 29910  00ECC6  D00A               	goto	u18489
 29911  00ECC8                     u18488:
 29912  00ECC8  0005               	push	
 29913  00ECCA  6EFA               	movwf	pclath,c
 29914  00ECCC  50DE               	movf	postinc2,w,c
 29915  00ECCE  6EFD               	movwf	tosl,c
 29916  00ECD0  50DE               	movf	postinc2,w,c
 29917  00ECD2  6EFE               	movwf	tosh,c
 29918  00ECD4  50DE               	movf	postinc2,w,c
 29919  00ECD6  6EFF               	movwf	tosu,c
 29920  00ECD8  50FA               	movf	pclath,w,c
 29921  00ECDA  0012               	return		;indir
 29922  00ECDC                     u18489:
 29923  00ECDC  0900               	iorlw	0
 29924  00ECDE  B4D8               	btfsc	status,2,c
 29925  00ECE0  D00C               	goto	u18500
 29926  00ECE2  0102               	movlb	2	; () banked
 29927  00ECE4  514E               	movf	(_gblCBW+13)& (0+255),w,b
 29928  00ECE6  0D01               	mullw	1
 29929  00ECE8  0EF6               	movlw	low _SoftDetach
 29930  00ECEA  24F3               	addwf	prodl,w,c
 29931  00ECEC  6ED9               	movwf	fsr2l,c
 29932  00ECEE  0E01               	movlw	high _SoftDetach
 29933  00ECF0  20F4               	addwfc	prodh,w,c
 29934  00ECF2  6EDA               	movwf	fsr2h,c
 29935  00ECF4  04DE               	decf	postinc2,w,c
 29936  00ECF6  A4D8               	btfss	status,2,c
 29937  00ECF8  D01D               	goto	l612
 29938  00ECFA                     u18500:
 29939                           
 29940                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 29941                           
 29942                           ; BSR set to: 2
 29943  00ECFA  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 29944  00ECFE  0E01               	movlw	1
 29945  00ED00  0100               	movlb	0	; () banked
 29946  00ED02  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 29947  00ED04  0E00               	movlw	0
 29948  00ED06  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 29949  00ED08  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 29950  00ED0A  D003               	goto	u18514
 29951  00ED0C                     u18515:
 29952  00ED0C  90D8               	bcf	status,0,c
 29953  00ED0E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 29954  00ED10  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 29955  00ED12                     u18514:
 29956  00ED12  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 29957  00ED14  D7FB               	goto	u18515
 29958  00ED16  0100               	movlb	0	; () banked
 29959  00ED18  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 29960  00ED1A  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 29961  00ED1C  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 29962  00ED1E  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 29963  00ED20  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 29964  00ED22  0102               	movlb	2	; () banked
 29965  00ED24  17B2               	andwf	_gblMediaPresent& (0+255),f,b
 29966  00ED26  0100               	movlb	0	; () banked
 29967  00ED28  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 29968  00ED2A  0102               	movlb	2	; () banked
 29969  00ED2C  17B3               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 29970                           
 29971                           ; BSR set to: 2
 29972                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 29973  00ED2E  ECC2  F092         	call	_MSDProcessCommandMediaAbsent	;wreg free
 29974                           
 29975                           ;usb_device_msd.c: 563: }
 29976  00ED32  D058               	goto	l619
 29977  00ED34                     l612:
 29978                           
 29979                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 29980  00ED34  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 29981  00ED38  0E01               	movlw	1
 29982  00ED3A  0100               	movlb	0	; () banked
 29983  00ED3C  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 29984  00ED3E  0E00               	movlw	0
 29985  00ED40  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 29986  00ED42  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 29987  00ED44  D003               	goto	u18524
 29988  00ED46                     u18525:
 29989  00ED46  90D8               	bcf	status,0,c
 29990  00ED48  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 29991  00ED4A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 29992  00ED4C                     u18524:
 29993  00ED4C  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 29994  00ED4E  D7FB               	goto	u18525
 29995  00ED50  0102               	movlb	2	; () banked
 29996  00ED52  51B2               	movf	_gblMediaPresent& (0+255),w,b
 29997  00ED54  0100               	movlb	0	; () banked
 29998  00ED56  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 29999  00ED58  0102               	movlb	2	; () banked
 30000  00ED5A  51B3               	movf	(_gblMediaPresent+1)& (0+255),w,b
 30001  00ED5C  0100               	movlb	0	; () banked
 30002  00ED5E  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 30003  00ED60  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 30004  00ED62  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 30005  00ED64  A4D8               	btfss	status,2,c
 30006  00ED66  D03C               	goto	l616
 30007                           
 30008                           ; BSR set to: 0
 30009                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 30010  00ED68  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 30011  00ED6C  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 30012  00ED70  D801               	call	u18548
 30013  00ED72  D00B               	goto	u18549
 30014  00ED74                     u18548:
 30015  00ED74  0005               	push	
 30016  00ED76  6EFA               	movwf	pclath,c
 30017  00ED78  0102               	movlb	2	; () banked
 30018  00ED7A  51BB               	movf	_LUN& (0+255),w,b
 30019  00ED7C  6EFD               	movwf	tosl,c
 30020  00ED7E  51BC               	movf	(_LUN+1)& (0+255),w,b
 30021  00ED80  6EFE               	movwf	tosh,c
 30022  00ED82  51BD               	movf	(_LUN+2)& (0+255),w,b
 30023  00ED84  6EFF               	movwf	tosu,c
 30024  00ED86  50FA               	movf	pclath,w,c
 30025  00ED88  0012               	return		;indir
 30026  00ED8A                     u18549:
 30027  00ED8A  0100               	movlb	0	; () banked
 30028  00ED8C  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 30029  00ED8E  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 30030  00ED90  B4D8               	btfsc	status,2,c
 30031  00ED92  D023               	goto	l617
 30032                           
 30033                           ; BSR set to: 0
 30034                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 30035  00ED94  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 30036  00ED98  0E01               	movlw	1
 30037  00ED9A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 30038  00ED9C  0E00               	movlw	0
 30039  00ED9E  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 30040  00EDA0  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 30041  00EDA2  D003               	goto	u18564
 30042  00EDA4                     u18565:
 30043  00EDA4  90D8               	bcf	status,0,c
 30044  00EDA6  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 30045  00EDA8  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 30046  00EDAA                     u18564:
 30047  00EDAA  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 30048  00EDAC  D7FB               	goto	u18565
 30049  00EDAE  0100               	movlb	0	; () banked
 30050  00EDB0  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 30051  00EDB2  0102               	movlb	2	; () banked
 30052  00EDB4  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 30053  00EDB6  0100               	movlb	0	; () banked
 30054  00EDB8  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 30055  00EDBA  0102               	movlb	2	; () banked
 30056  00EDBC  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 30057                           
 30058                           ; BSR set to: 2
 30059                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 30060  00EDBE  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30061  00EDC0  0BF0               	andlw	-16
 30062  00EDC2  0906               	iorlw	6
 30063  00EDC4  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30064                           
 30065                           ; BSR set to: 2
 30066                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 30067  00EDC6  0E28               	movlw	40
 30068  00EDC8  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30069                           
 30070                           ; BSR set to: 2
 30071                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 30072  00EDCA  0E00               	movlw	0
 30073  00EDCC  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30074                           
 30075                           ; BSR set to: 2
 30076                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 30077  00EDCE  0E01               	movlw	1
 30078  00EDD0  010D               	movlb	13	; () banked
 30079  00EDD2  6F8C               	movwf	140,b	;volatile
 30080                           
 30081                           ; BSR set to: 13
 30082                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 30083  00EDD4  EC92  F057         	call	_MSDProcessCommandMediaPresent	;wreg free
 30084                           
 30085                           ;usb_device_msd.c: 589: }
 30086  00EDD8  D005               	goto	l619
 30087  00EDDA                     l617:
 30088                           
 30089                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 30090  00EDDA  ECC2  F092         	call	_MSDProcessCommandMediaAbsent	;wreg free
 30091                           
 30092                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 30093  00EDDE  D002               	goto	l619
 30094  00EDE0                     l616:
 30095                           
 30096                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 30097  00EDE0  EC92  F057         	call	_MSDProcessCommandMediaPresent	;wreg free
 30098  00EDE4                     l619:
 30099                           
 30100                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 30101  00EDE4  0100               	movlb	0	; () banked
 30102  00EDE6  51E6               	movf	_MSDCommandState& (0+255),w,b
 30103  00EDE8  0012               	return	
 30104  00EDEA                     __end_of_MSDProcessCommand:
 30105                           	opt stack 0
 30106                           tosu	equ	0xFFF
 30107                           tosh	equ	0xFFE
 30108                           tosl	equ	0xFFD
 30109                           pclath	equ	0xFFA
 30110                           tblptru	equ	0xFF8
 30111                           tblptrh	equ	0xFF7
 30112                           tblptrl	equ	0xFF6
 30113                           tablat	equ	0xFF5
 30114                           prodh	equ	0xFF4
 30115                           prodl	equ	0xFF3
 30116                           intcon	equ	0xFF2
 30117                           intcon2	equ	0xFF1
 30118                           intcon3	equ	0xFF0
 30119                           postinc0	equ	0xFEE
 30120                           wreg	equ	0xFE8
 30121                           indf1	equ	0xFE7
 30122                           postinc1	equ	0xFE6
 30123                           postdec1	equ	0xFE5
 30124                           plusw1	equ	0xFE3
 30125                           fsr1h	equ	0xFE2
 30126                           fsr1l	equ	0xFE1
 30127                           indf2	equ	0xFDF
 30128                           postinc2	equ	0xFDE
 30129                           postdec2	equ	0xFDD
 30130                           plusw2	equ	0xFDB
 30131                           fsr2h	equ	0xFDA
 30132                           fsr2l	equ	0xFD9
 30133                           status	equ	0xFD8
 30134                           
 30135 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 30136 ;; Defined at:
 30137 ;;		line 635 in file "usb_device_msd.c"
 30138 ;; Parameters:    Size  Location     Type
 30139 ;;		None
 30140 ;; Auto vars:     Size  Location     Type
 30141 ;;		None
 30142 ;; Return value:  Size  Location     Type
 30143 ;;                  1    wreg      void 
 30144 ;; Registers used:
 30145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30146 ;; Tracked objects:
 30147 ;;		On entry : 0/0
 30148 ;;		On exit  : 0/0
 30149 ;;		Unchanged: 0/0
 30150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30155 ;;Total ram usage:        0 bytes
 30156 ;; Hardware stack levels used:    1
 30157 ;; Hardware stack levels required when called:   18
 30158 ;; This function calls:
 30159 ;;		_MSDErrorHandler
 30160 ;;		_MSDProcessCommandMediaPresent
 30161 ;;		_ResetSenseData
 30162 ;; This function is called by:
 30163 ;;		_MSDProcessCommand
 30164 ;; This function uses a non-reentrant model
 30165 ;;
 30166                           
 30167                           	psect	text138
 30168  012584                     __ptext138:
 30169                           	opt stack 0
 30170  012584                     _MSDProcessCommandMediaAbsent:
 30171                           	opt stack 9
 30172                           
 30173                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 30174                           
 30175                           ; BSR set to: 0
 30176                           ;incstack = 0
 30177  012584  D01E               	goto	l623
 30178  012586                     
 30179                           ;usb_device_msd.c: 646: ResetSenseData();
 30180  012586  ECF3  F092         	call	_ResetSenseData	;wreg free
 30181                           
 30182                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 30183  01258A  0102               	movlb	2	; () banked
 30184  01258C  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30185  01258E  0BF0               	andlw	-16
 30186  012590  0902               	iorlw	2
 30187  012592  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30188                           
 30189                           ; BSR set to: 2
 30190                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 30191  012594  0E3A               	movlw	58
 30192  012596  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30193                           
 30194                           ; BSR set to: 2
 30195                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 30196  012598  0E00               	movlw	0
 30197  01259A  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30198                           
 30199                           ; BSR set to: 2
 30200                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 30201  01259C  EC92  F057         	call	_MSDProcessCommandMediaPresent	;wreg free
 30202                           
 30203                           ;usb_device_msd.c: 655: break;
 30204  0125A0  0012               	return	
 30205  0125A2                     
 30206                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 30207  0125A2  0E01               	movlw	1
 30208  0125A4  010D               	movlb	13	; () banked
 30209  0125A6  6F8C               	movwf	140,b	;volatile
 30210                           
 30211                           ; BSR set to: 13
 30212                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 30213  0125A8  0100               	movlb	0	; () banked
 30214  0125AA  69E6               	setf	_MSDCommandState& (0+255),b
 30215                           
 30216                           ;usb_device_msd.c: 665: break;
 30217  0125AC  0012               	return	
 30218  0125AE                     
 30219                           ; BSR set to: 0
 30220                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 30221                           
 30222                           ; BSR set to: 0
 30223  0125AE  EC92  F057         	call	_MSDProcessCommandMediaPresent	;wreg free
 30224                           
 30225                           ;usb_device_msd.c: 671: break;
 30226  0125B2  0012               	return	
 30227  0125B4                     
 30228                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 30229  0125B4  EC92  F057         	call	_MSDProcessCommandMediaPresent	;wreg free
 30230                           
 30231                           ;usb_device_msd.c: 677: break;
 30232  0125B8  0012               	return	
 30233  0125BA                     
 30234                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 30235  0125BA  0E7F               	movlw	127
 30236  0125BC  ECD3  F079         	call	_MSDErrorHandler
 30237                           
 30238                           ;usb_device_msd.c: 685: }
 30239                           
 30240                           ;usb_device_msd.c: 684: break;
 30241  0125C0  0012               	return	
 30242  0125C2                     l623:
 30243  0125C2  0100               	movlb	0	; () banked
 30244  0125C4  51E6               	movf	_MSDCommandState& (0+255),w,b
 30245                           
 30246                           ; Switch size 1, requested type "space"
 30247                           ; Number of cases is 5, Range of values is 0 to 253
 30248                           ; switch strategies available:
 30249                           ; Name         Instructions Cycles
 30250                           ; simple_byte           16     9 (average)
 30251                           ;	Chosen strategy is simple_byte
 30252  0125C6  0A00               	xorlw	0	; case 0
 30253  0125C8  B4D8               	btfsc	status,2,c
 30254  0125CA  D7EB               	goto	l626
 30255  0125CC  0A03               	xorlw	3	; case 3
 30256  0125CE  B4D8               	btfsc	status,2,c
 30257  0125D0  D7DA               	goto	l624
 30258  0125D2  0A11               	xorlw	17	; case 18
 30259  0125D4  B4D8               	btfsc	status,2,c
 30260  0125D6  D7EB               	goto	l628
 30261  0125D8  0A0C               	xorlw	12	; case 30
 30262  0125DA  B4D8               	btfsc	status,2,c
 30263  0125DC  D7E2               	goto	l626
 30264  0125DE  0AE3               	xorlw	227	; case 253
 30265  0125E0  B4D8               	btfsc	status,2,c
 30266  0125E2  D7E8               	goto	l629
 30267  0125E4  D7EA               	goto	l630
 30268  0125E6                     __end_of_MSDProcessCommandMediaAbsent:
 30269                           	opt stack 0
 30270                           tosu	equ	0xFFF
 30271                           tosh	equ	0xFFE
 30272                           tosl	equ	0xFFD
 30273                           pclath	equ	0xFFA
 30274                           tblptru	equ	0xFF8
 30275                           tblptrh	equ	0xFF7
 30276                           tblptrl	equ	0xFF6
 30277                           tablat	equ	0xFF5
 30278                           prodh	equ	0xFF4
 30279                           prodl	equ	0xFF3
 30280                           intcon	equ	0xFF2
 30281                           intcon2	equ	0xFF1
 30282                           intcon3	equ	0xFF0
 30283                           postinc0	equ	0xFEE
 30284                           wreg	equ	0xFE8
 30285                           indf1	equ	0xFE7
 30286                           postinc1	equ	0xFE6
 30287                           postdec1	equ	0xFE5
 30288                           plusw1	equ	0xFE3
 30289                           fsr1h	equ	0xFE2
 30290                           fsr1l	equ	0xFE1
 30291                           indf2	equ	0xFDF
 30292                           postinc2	equ	0xFDE
 30293                           postdec2	equ	0xFDD
 30294                           plusw2	equ	0xFDB
 30295                           fsr2h	equ	0xFDA
 30296                           fsr2l	equ	0xFD9
 30297                           status	equ	0xFD8
 30298                           
 30299 ;; *************** function _MSDProcessCommandMediaPresent *****************
 30300 ;; Defined at:
 30301 ;;		line 712 in file "usb_device_msd.c"
 30302 ;; Parameters:    Size  Location     Type
 30303 ;;		None
 30304 ;; Auto vars:     Size  Location     Type
 30305 ;;  capacity        4   66[BANK0 ] struct .
 30306 ;;  sectorSize      4   62[BANK0 ] struct .
 30307 ;;  i               1   70[BANK0 ] unsigned char 
 30308 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 30309 ;; Return value:  Size  Location     Type
 30310 ;;                  1    wreg      void 
 30311 ;; Registers used:
 30312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30313 ;; Tracked objects:
 30314 ;;		On entry : 0/0
 30315 ;;		On exit  : 0/0
 30316 ;;		Unchanged: 0/0
 30317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30319 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30321 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30322 ;;Total ram usage:       14 bytes
 30323 ;; Hardware stack levels used:    1
 30324 ;; Hardware stack levels required when called:   17
 30325 ;; This function calls:
 30326 ;;		_ExternalFlash_CapacityRead
 30327 ;;		_ExternalFlash_SectorSizeRead
 30328 ;;		_ExternalFlash_WriteProtectStateGet
 30329 ;;		_MSDCheckForErrorCases
 30330 ;;		_MSDComputeDeviceInAndResidue
 30331 ;;		_MSDErrorHandler
 30332 ;;		_MSDReadHandler
 30333 ;;		_MSDWriteHandler
 30334 ;;		_ResetSenseData
 30335 ;;		_USBTransferOnePacket
 30336 ;;		_memcpy
 30337 ;; This function is called by:
 30338 ;;		_MSDProcessCommand
 30339 ;;		_MSDProcessCommandMediaAbsent
 30340 ;; This function uses a non-reentrant model
 30341 ;;
 30342                           
 30343                           	psect	text139
 30344  00AF24                     __ptext139:
 30345                           	opt stack 0
 30346  00AF24                     _MSDProcessCommandMediaPresent:
 30347                           	opt stack 10
 30348                           
 30349                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 30350                           
 30351                           ;incstack = 0
 30352  00AF24  D1BF               	goto	l634
 30353  00AF26                     
 30354                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 30355  00AF26  ECB4  F06F         	call	_MSDReadHandler	;wreg free
 30356  00AF2A  0900               	iorlw	0
 30357  00AF2C  A4D8               	btfss	status,2,c
 30358  00AF2E  0012               	return	
 30359                           
 30360                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 30361  00AF30  0100               	movlb	0	; () banked
 30362  00AF32  69E6               	setf	_MSDCommandState& (0+255),b
 30363                           
 30364                           ; BSR set to: 0
 30365                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 30366  00AF34  0012               	return	
 30367  00AF36                     
 30368                           ; BSR set to: 0
 30369                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 30370                           
 30371                           ; BSR set to: 0
 30372  00AF36  EC45  F065         	call	_MSDWriteHandler	;wreg free
 30373  00AF3A  0900               	iorlw	0
 30374  00AF3C  A4D8               	btfss	status,2,c
 30375  00AF3E  0012               	return	
 30376                           
 30377                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 30378  00AF40  0100               	movlb	0	; () banked
 30379  00AF42  69E6               	setf	_MSDCommandState& (0+255),b
 30380                           
 30381                           ; BSR set to: 0
 30382                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 30383  00AF44  0012               	return	
 30384  00AF46                     
 30385                           ; BSR set to: 0
 30386                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 30387                           
 30388                           ; BSR set to: 0
 30389  00AF46  05E5               	decf	_MSDHostNoData& (0+255),w,b
 30390  00AF48  A4D8               	btfss	status,2,c
 30391  00AF4A  D002               	goto	l641
 30392                           
 30393                           ; BSR set to: 0
 30394                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 30395  00AF4C  69E6               	setf	_MSDCommandState& (0+255),b
 30396                           
 30397                           ;usb_device_msd.c: 751: break;
 30398  00AF4E  0012               	return	
 30399  00AF50                     l641:
 30400                           
 30401                           ; BSR set to: 0
 30402                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 30403  00AF50  C253  F0DA         	movff	_gblCBW+18,_TransferLength+1
 30404                           
 30405                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 30406  00AF54  C254  F0D9         	movff	_gblCBW+19,_TransferLength
 30407                           
 30408                           ; BSR set to: 0
 30409                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 30410  00AF58  C0D9  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 30411  00AF5C  C0DA  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 30412  00AF60  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 30413  00AF62  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 30414  00AF64  EC7D  F07E         	call	_MSDCheckForErrorCases	;wreg free
 30415  00AF68  0900               	iorlw	0
 30416  00AF6A  A4D8               	btfss	status,2,c
 30417  00AF6C  0012               	return	
 30418                           
 30419                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 30420                           
 30421                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 30422  00AF6E  0E00               	movlw	0
 30423  00AF70  0100               	movlb	0	; () banked
 30424  00AF72  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30425  00AF74  0E24               	movlw	36
 30426  00AF76  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30427  00AF78  ECCF  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30428                           
 30429                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 30430  00AF7C  0E00               	movlw	0
 30431  00AF7E  0100               	movlb	0	; () banked
 30432  00AF80  6F60               	movwf	memcpy@d1& (0+255),b
 30433  00AF82  0E06               	movlw	6
 30434  00AF84  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30435  00AF86  0EBD               	movlw	low _inq_resp
 30436  00AF88  6F62               	movwf	memcpy@s1& (0+255),b
 30437  00AF8A  0EA3               	movlw	high _inq_resp
 30438  00AF8C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30439  00AF8E  0E00               	movlw	0
 30440  00AF90  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30441  00AF92  0E24               	movlw	36
 30442  00AF94  6F64               	movwf	memcpy@n& (0+255),b
 30443  00AF96  EC86  F093         	call	_memcpy	;wreg free
 30444                           
 30445                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 30446  00AF9A  0EFD               	movlw	253
 30447  00AF9C  0100               	movlb	0	; () banked
 30448  00AF9E  6FE6               	movwf	_MSDCommandState& (0+255),b
 30449                           
 30450                           ;usb_device_msd.c: 773: break;
 30451  00AFA0  0012               	return	
 30452  00AFA2                     
 30453                           ; BSR set to: 0
 30454                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 30455                           
 30456                           ; BSR set to: 0
 30457  00AFA2  C2D0  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 30458  00AFA6  C2D1  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 30459  00AFAA  EE22  F0BE         	lfsr	2,_LUN+3
 30460  00AFAE  D801               	call	u17608
 30461  00AFB0  D00A               	goto	u17609
 30462  00AFB2                     u17608:
 30463  00AFB2  0005               	push	
 30464  00AFB4  6EFA               	movwf	pclath,c
 30465  00AFB6  50DE               	movf	postinc2,w,c
 30466  00AFB8  6EFD               	movwf	tosl,c
 30467  00AFBA  50DE               	movf	postinc2,w,c
 30468  00AFBC  6EFE               	movwf	tosh,c
 30469  00AFBE  50DE               	movf	postinc2,w,c
 30470  00AFC0  6EFF               	movwf	tosu,c
 30471  00AFC2  50FA               	movf	pclath,w,c
 30472  00AFC4  0012               	return		;indir
 30473  00AFC6                     u17609:
 30474  00AFC6  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 30475  00AFCA  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 30476  00AFCE  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 30477  00AFD2  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 30478                           
 30479                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 30480  00AFD6  C2D0  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 30481  00AFDA  C2D1  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 30482  00AFDE  EE22  F0C1         	lfsr	2,_LUN+6
 30483  00AFE2  D801               	call	u17618
 30484  00AFE4  D00A               	goto	u17619
 30485  00AFE6                     u17618:
 30486  00AFE6  0005               	push	
 30487  00AFE8  6EFA               	movwf	pclath,c
 30488  00AFEA  50DE               	movf	postinc2,w,c
 30489  00AFEC  6EFD               	movwf	tosl,c
 30490  00AFEE  50DE               	movf	postinc2,w,c
 30491  00AFF0  6EFE               	movwf	tosh,c
 30492  00AFF2  50DE               	movf	postinc2,w,c
 30493  00AFF4  6EFF               	movwf	tosu,c
 30494  00AFF6  50FA               	movf	pclath,w,c
 30495  00AFF8  0012               	return		;indir
 30496  00AFFA                     u17619:
 30497  00AFFA  0100               	movlb	0	; () banked
 30498  00AFFC  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 30499  00B000  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 30500  00B004  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 30501  00B006  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 30502                           
 30503                           ; BSR set to: 0
 30504                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 30505  00B008  EE26 F000          	lfsr	2,1536
 30506  00B00C  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 30507                           
 30508                           ; BSR set to: 0
 30509                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 30510  00B010  EE26 F001          	lfsr	2,1537	;volatile
 30511  00B014  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 30512                           
 30513                           ; BSR set to: 0
 30514                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 30515  00B018  EE26 F002          	lfsr	2,1538	;volatile
 30516  00B01C  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 30517                           
 30518                           ; BSR set to: 0
 30519                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 30520  00B020  EE26 F003          	lfsr	2,1539	;volatile
 30521  00B024  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 30522                           
 30523                           ; BSR set to: 0
 30524                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 30525  00B028  EE26 F004          	lfsr	2,1540	;volatile
 30526  00B02C  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 30527                           
 30528                           ; BSR set to: 0
 30529                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 30530  00B030  EE26 F005          	lfsr	2,1541	;volatile
 30531  00B034  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 30532                           
 30533                           ; BSR set to: 0
 30534                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 30535  00B038  EE26 F006          	lfsr	2,1542	;volatile
 30536  00B03C  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 30537                           
 30538                           ; BSR set to: 0
 30539                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 30540  00B040  EE26 F007          	lfsr	2,1543	;volatile
 30541  00B044  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 30542                           
 30543                           ; BSR set to: 0
 30544                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 30545  00B048  0E00               	movlw	0
 30546  00B04A  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 30547  00B04C  0E08               	movlw	8
 30548  00B04E  6FD9               	movwf	_TransferLength& (0+255),b
 30549                           
 30550                           ; BSR set to: 0
 30551                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 30552  00B050  0E00               	movlw	0
 30553  00B052  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30554  00B054  0E08               	movlw	8
 30555  00B056  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30556  00B058  ECCF  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30557                           
 30558                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 30559  00B05C  0EFD               	movlw	253
 30560  00B05E  0100               	movlb	0	; () banked
 30561  00B060  6FE6               	movwf	_MSDCommandState& (0+255),b
 30562                           
 30563                           ;usb_device_msd.c: 802: break;
 30564  00B062  0012               	return	
 30565  00B064                     
 30566                           ; BSR set to: 0
 30567                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 30568                           
 30569                           ; BSR set to: 0
 30570  00B064  05E5               	decf	_MSDHostNoData& (0+255),w,b
 30571  00B066  A4D8               	btfss	status,2,c
 30572  00B068  D002               	goto	l645
 30573                           
 30574                           ; BSR set to: 0
 30575                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 30576  00B06A  69E6               	setf	_MSDCommandState& (0+255),b
 30577                           
 30578                           ;usb_device_msd.c: 814: break;
 30579  00B06C  0012               	return	
 30580  00B06E                     l645:
 30581                           
 30582                           ; BSR set to: 0
 30583                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 30584                           
 30585                           ; BSR set to: 0
 30586  00B06E  0E00               	movlw	0
 30587  00B070  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 30588  00B072  0E12               	movlw	18
 30589  00B074  6FD9               	movwf	_TransferLength& (0+255),b
 30590                           
 30591                           ; BSR set to: 0
 30592                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 30593  00B076  0E00               	movlw	0
 30594  00B078  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30595  00B07A  0E12               	movlw	18
 30596  00B07C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30597  00B07E  ECCF  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30598                           
 30599                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 30600  00B082  0E00               	movlw	0
 30601  00B084  0100               	movlb	0	; () banked
 30602  00B086  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 30603  00B088                     l18769:
 30604                           
 30605                           ; BSR set to: 0
 30606  00B088  0E11               	movlw	17
 30607  00B08A  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 30608  00B08C  D001               	goto	l646
 30609  00B08E  D014               	goto	u17640
 30610  00B090                     l646:
 30611                           
 30612                           ; BSR set to: 0
 30613                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 30614                           
 30615                           ; BSR set to: 0
 30616  00B090  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30617  00B092  0D01               	mullw	1
 30618  00B094  0E60               	movlw	low _gblSenseData
 30619  00B096  24F3               	addwf	prodl,w,c
 30620  00B098  6ED9               	movwf	fsr2l,c
 30621  00B09A  0E02               	movlw	high _gblSenseData
 30622  00B09C  20F4               	addwfc	prodh,w,c
 30623  00B09E  6EDA               	movwf	fsr2h,c
 30624  00B0A0  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30625  00B0A2  0D01               	mullw	1
 30626  00B0A4  0E00               	movlw	0
 30627  00B0A6  24F3               	addwf	prodl,w,c
 30628  00B0A8  6EE1               	movwf	fsr1l,c
 30629  00B0AA  0E06               	movlw	6
 30630  00B0AC  20F4               	addwfc	prodh,w,c
 30631  00B0AE  6EE2               	movwf	fsr1h,c
 30632  00B0B0  CFDF FFE7          	movff	indf2,indf1
 30633                           
 30634                           ; BSR set to: 0
 30635  00B0B4  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 30636  00B0B6  D7E8               	goto	l18769
 30637  00B0B8                     u17640:
 30638                           
 30639                           ; BSR set to: 0
 30640                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 30641                           
 30642                           ; BSR set to: 0
 30643  00B0B8  0EFD               	movlw	253
 30644  00B0BA  6FE6               	movwf	_MSDCommandState& (0+255),b
 30645                           
 30646                           ;usb_device_msd.c: 827: break;
 30647  00B0BC  0012               	return	
 30648  00B0BE                     l648:
 30649                           
 30650                           ; BSR set to: 0
 30651                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 30652  00B0BE  0E03               	movlw	3
 30653  00B0C0  CFE8 F600          	movff	wreg,1536
 30654                           
 30655                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 30656  00B0C4  0E00               	movlw	0
 30657  00B0C6  CFE8 F601          	movff	wreg,1537	;volatile
 30658                           
 30659                           ; BSR set to: 0
 30660                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 30661  00B0CA  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 30662  00B0CE  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 30663  00B0D2  EE22  F0CA         	lfsr	2,_LUN+15
 30664  00B0D6  D801               	call	u17658
 30665  00B0D8  D00A               	goto	u17659
 30666  00B0DA                     u17658:
 30667  00B0DA  0005               	push	
 30668  00B0DC  6EFA               	movwf	pclath,c
 30669  00B0DE  50DE               	movf	postinc2,w,c
 30670  00B0E0  6EFD               	movwf	tosl,c
 30671  00B0E2  50DE               	movf	postinc2,w,c
 30672  00B0E4  6EFE               	movwf	tosh,c
 30673  00B0E6  50DE               	movf	postinc2,w,c
 30674  00B0E8  6EFF               	movwf	tosu,c
 30675  00B0EA  50FA               	movf	pclath,w,c
 30676  00B0EC  0012               	return		;indir
 30677  00B0EE                     u17659:
 30678  00B0EE  0900               	iorlw	0
 30679  00B0F0  A4D8               	btfss	status,2,c
 30680  00B0F2  D005               	goto	l650
 30681  00B0F4  0E00               	movlw	0
 30682  00B0F6  0100               	movlb	0	; () banked
 30683  00B0F8  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2715+1)& (0+255),b
 30684  00B0FA  0E00               	movlw	0
 30685  00B0FC  D004               	goto	L23
 30686  00B0FE                     l650:
 30687                           
 30688                           ; BSR set to: 0
 30689  00B0FE  0E00               	movlw	0
 30690  00B100  0100               	movlb	0	; () banked
 30691  00B102  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2715+1)& (0+255),b
 30692  00B104  0E80               	movlw	128
 30693  00B106                     L23:
 30694  00B106  6F9B               	movwf	_MSDProcessCommandMediaPresent$2715& (0+255),b
 30695                           
 30696                           ; BSR set to: 0
 30697                           
 30698                           ; BSR set to: 0
 30699  00B108  EE26 F002          	lfsr	2,1538	;volatile
 30700  00B10C  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2715,indf2
 30701                           
 30702                           ; BSR set to: 0
 30703                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 30704  00B110  0E00               	movlw	0
 30705  00B112  CFE8 F603          	movff	wreg,1539	;volatile
 30706                           
 30707                           ; BSR set to: 0
 30708                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 30709  00B116  0E00               	movlw	0
 30710  00B118  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 30711  00B11A  0E04               	movlw	4
 30712  00B11C  6FD9               	movwf	_TransferLength& (0+255),b
 30713                           
 30714                           ; BSR set to: 0
 30715                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 30716  00B11E  0E00               	movlw	0
 30717  00B120  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 30718  00B122  0E04               	movlw	4
 30719  00B124  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 30720  00B126  ECCF  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 30721                           
 30722                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 30723  00B12A  0EFD               	movlw	253
 30724  00B12C  0100               	movlb	0	; () banked
 30725  00B12E  6FE6               	movwf	_MSDCommandState& (0+255),b
 30726                           
 30727                           ;usb_device_msd.c: 839: break;
 30728  00B130  0012               	return	
 30729  00B132                     
 30730                           ; BSR set to: 0
 30731                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 30732                           
 30733                           ; BSR set to: 0
 30734  00B132  0102               	movlb	2	; () banked
 30735  00B134  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30736  00B136  0BF0               	andlw	-16
 30737  00B138  0905               	iorlw	5
 30738  00B13A  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 30739                           
 30740                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 30741  00B13C  0E20               	movlw	32
 30742  00B13E  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30743                           
 30744                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 30745  00B140  0E00               	movlw	0
 30746  00B142  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30747                           
 30748                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 30749  00B144  0E01               	movlw	1
 30750  00B146  010D               	movlb	13	; () banked
 30751  00B148  6F8C               	movwf	140,b	;volatile
 30752                           
 30753                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 30754  00B14A  0E00               	movlw	0
 30755  00B14C  6F88               	movwf	136,b	;volatile
 30756  00B14E  0E00               	movlw	0
 30757  00B150  6F89               	movwf	137,b	;volatile
 30758  00B152  0E00               	movlw	0
 30759  00B154  6F8A               	movwf	138,b	;volatile
 30760  00B156  0E00               	movlw	0
 30761  00B158  6F8B               	movwf	139,b	;volatile
 30762                           
 30763                           ; BSR set to: 13
 30764                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 30765  00B15A  0100               	movlb	0	; () banked
 30766  00B15C  69E6               	setf	_MSDCommandState& (0+255),b
 30767                           
 30768                           ;usb_device_msd.c: 848: break;
 30769  00B15E  0012               	return	
 30770  00B160                     
 30771                           ; BSR set to: 0
 30772                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 30773                           
 30774                           ; BSR set to: 0
 30775  00B160  0E00               	movlw	0
 30776  00B162  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 30777  00B164  0E00               	movlw	0
 30778  00B166  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 30779  00B168  0E00               	movlw	0
 30780  00B16A  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 30781  00B16C  0E00               	movlw	0
 30782  00B16E  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 30783  00B170  EC7D  F07E         	call	_MSDCheckForErrorCases	;wreg free
 30784  00B174  0900               	iorlw	0
 30785  00B176  A4D8               	btfss	status,2,c
 30786  00B178  0012               	return	
 30787                           
 30788                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 30789                           
 30790                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 30791  00B17A  0102               	movlb	2	; () banked
 30792  00B17C  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 30793  00B17E  0B0F               	andlw	15
 30794  00B180  0A06               	xorlw	6
 30795  00B182  A4D8               	btfss	status,2,c
 30796  00B184  D007               	goto	l656
 30797                           
 30798                           ; BSR set to: 2
 30799  00B186  010D               	movlb	13	; () banked
 30800  00B188  058C               	decf	140,w,b	;volatile
 30801  00B18A  A4D8               	btfss	status,2,c
 30802  00B18C  D003               	goto	l656
 30803                           
 30804                           ; BSR set to: 13
 30805                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 30806  00B18E  0100               	movlb	0	; () banked
 30807  00B190  69E6               	setf	_MSDCommandState& (0+255),b
 30808                           
 30809                           ;usb_device_msd.c: 870: }
 30810  00B192  0012               	return	
 30811  00B194                     l656:
 30812                           
 30813                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 30814                           
 30815                           ; BSR set to: 0
 30816  00B194  ECF3  F092         	call	_ResetSenseData	;wreg free
 30817                           
 30818                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 30819  00B198  0E00               	movlw	0
 30820  00B19A  010D               	movlb	13	; () banked
 30821  00B19C  6F88               	movwf	136,b	;volatile
 30822  00B19E  0E00               	movlw	0
 30823  00B1A0  6F89               	movwf	137,b	;volatile
 30824  00B1A2  0E00               	movlw	0
 30825  00B1A4  6F8A               	movwf	138,b	;volatile
 30826  00B1A6  0E00               	movlw	0
 30827  00B1A8  6F8B               	movwf	139,b	;volatile
 30828                           
 30829                           ; BSR set to: 13
 30830                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 30831  00B1AA  0100               	movlb	0	; () banked
 30832  00B1AC  69E6               	setf	_MSDCommandState& (0+255),b
 30833                           
 30834                           ; BSR set to: 0
 30835                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 30836  00B1AE  0012               	return	
 30837  00B1B0                     
 30838                           ; BSR set to: 0
 30839                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 30840                           
 30841                           ; BSR set to: 0
 30842                           
 30843                           ; BSR set to: 0
 30844  00B1B0  0E00               	movlw	0
 30845  00B1B2  010D               	movlb	13	; () banked
 30846  00B1B4  6F88               	movwf	136,b	;volatile
 30847  00B1B6  0E00               	movlw	0
 30848  00B1B8  6F89               	movwf	137,b	;volatile
 30849  00B1BA  0E00               	movlw	0
 30850  00B1BC  6F8A               	movwf	138,b	;volatile
 30851  00B1BE  0E00               	movlw	0
 30852  00B1C0  6F8B               	movwf	139,b	;volatile
 30853                           
 30854                           ; BSR set to: 13
 30855                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 30856  00B1C2  0100               	movlb	0	; () banked
 30857  00B1C4  69E6               	setf	_MSDCommandState& (0+255),b
 30858                           
 30859                           ;usb_device_msd.c: 885: break;
 30860  00B1C6  0012               	return	
 30861  00B1C8                     
 30862                           ; BSR set to: 0
 30863                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 30864                           
 30865                           ; BSR set to: 0
 30866  00B1C8  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 30867  00B1CA  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 30868  00B1CC  B4D8               	btfsc	status,2,c
 30869  00B1CE  D006               	goto	u17710
 30870                           
 30871                           ; BSR set to: 0
 30872  00B1D0  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 30873  00B1D4  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 30874  00B1D8  BEDF               	btfsc	indf2,7,c
 30875  00B1DA  0012               	return	
 30876  00B1DC                     u17710:
 30877                           
 30878                           ; BSR set to: 0
 30879                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 30880                           
 30881                           ; BSR set to: 0
 30882  00B1DC  0102               	movlb	2	; () banked
 30883  00B1DE  514C               	movf	(_gblCBW+11)& (0+255),w,b
 30884  00B1E0  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 30885  00B1E2  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 30886  00B1E4  E104               	bnz	u17720
 30887  00B1E6  0E40               	movlw	64
 30888  00B1E8  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 30889  00B1EA  A0D8               	btfss	status,0,c
 30890  00B1EC  D00B               	goto	l664
 30891  00B1EE                     u17720:
 30892                           
 30893                           ; BSR set to: 2
 30894                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 30895  00B1EE  0E40               	movlw	64
 30896  00B1F0  0100               	movlb	0	; () banked
 30897  00B1F2  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 30898                           
 30899                           ; BSR set to: 0
 30900                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 30901  00B1F4  0E40               	movlw	64
 30902  00B1F6  0102               	movlb	2	; () banked
 30903  00B1F8  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 30904  00B1FA  0E00               	movlw	0
 30905  00B1FC  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 30906  00B1FE  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 30907  00B200  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 30908                           
 30909                           ;usb_device_msd.c: 900: }
 30910  00B202  D00A               	goto	l665
 30911  00B204                     l664:
 30912                           
 30913                           ; BSR set to: 2
 30914                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 30915  00B204  C249  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 30916                           
 30917                           ; BSR set to: 2
 30918                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 30919  00B208  0E00               	movlw	0
 30920  00B20A  6F49               	movwf	(_gblCBW+8)& (0+255),b
 30921  00B20C  0E00               	movlw	0
 30922  00B20E  6F4A               	movwf	(_gblCBW+9)& (0+255),b
 30923  00B210  0E00               	movlw	0
 30924  00B212  6F4B               	movwf	(_gblCBW+10)& (0+255),b
 30925  00B214  0E00               	movlw	0
 30926  00B216  6F4C               	movwf	(_gblCBW+11)& (0+255),b
 30927  00B218                     l665:
 30928                           
 30929                           ; BSR set to: 2
 30930                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 30931                           
 30932                           ; BSR set to: 2
 30933  00B218  0100               	movlb	0	; () banked
 30934  00B21A  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 30935  00B21C  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 30936  00B21E  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 30937  00B220  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 30938  00B222  5DD9               	subwf	_TransferLength& (0+255),w,b
 30939  00B224  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 30940  00B226  59DA               	subwfb	(_TransferLength+1)& (0+255),w,b
 30941  00B228  A0D8               	btfss	status,0,c
 30942  00B22A  D005               	goto	l666
 30943                           
 30944                           ; BSR set to: 0
 30945                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 30946  00B22C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 30947  00B22E  5FD9               	subwf	_TransferLength& (0+255),f,b
 30948  00B230  0E00               	movlw	0
 30949  00B232  5BDA               	subwfb	(_TransferLength+1)& (0+255),f,b
 30950                           
 30951                           ;usb_device_msd.c: 918: }
 30952  00B234  D01A               	goto	u17750
 30953  00B236                     l666:
 30954                           
 30955                           ; BSR set to: 0
 30956                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 30957                           
 30958                           ; BSR set to: 0
 30959  00B236  0E00               	movlw	0
 30960  00B238  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 30961  00B23A  D013               	goto	l668
 30962  00B23C                     
 30963                           ; BSR set to: 0
 30964                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 30965                           
 30966                           ; BSR set to: 0
 30967  00B23C  51D9               	movf	_TransferLength& (0+255),w,b
 30968  00B23E  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 30969  00B240  B4D8               	btfsc	status,2,c
 30970  00B242  D004               	goto	l670
 30971                           
 30972                           ; BSR set to: 0
 30973                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 30974  00B244  07D9               	decf	_TransferLength& (0+255),f,b
 30975  00B246  A0D8               	btfss	status,0,c
 30976  00B248  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 30977                           
 30978                           ;usb_device_msd.c: 932: }
 30979  00B24A  D00A               	goto	l671
 30980  00B24C                     l670:
 30981                           
 30982                           ; BSR set to: 0
 30983                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 30984                           
 30985                           ; BSR set to: 0
 30986  00B24C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 30987  00B24E  0D01               	mullw	1
 30988  00B250  0E00               	movlw	0
 30989  00B252  24F3               	addwf	prodl,w,c
 30990  00B254  6ED9               	movwf	fsr2l,c
 30991  00B256  0E06               	movlw	6
 30992  00B258  20F4               	addwfc	prodh,w,c
 30993  00B25A  6EDA               	movwf	fsr2h,c
 30994  00B25C  0E00               	movlw	0
 30995  00B25E  6EDF               	movwf	indf2,c
 30996  00B260                     l671:
 30997                           
 30998                           ; BSR set to: 0
 30999                           
 31000                           ; BSR set to: 0
 31001  00B260  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 31002  00B262                     l668:
 31003                           
 31004                           ; BSR set to: 0
 31005                           
 31006                           ; BSR set to: 0
 31007  00B262  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 31008  00B264  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31009  00B266  A0D8               	btfss	status,0,c
 31010  00B268  D7E9               	goto	l669
 31011  00B26A                     u17750:
 31012                           
 31013                           ; BSR set to: 0
 31014                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 31015                           
 31016                           ; BSR set to: 0
 31017                           
 31018                           ; BSR set to: 0
 31019  00B26A  0E01               	movlw	1
 31020  00B26C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31021  00B26E  0E00               	movlw	0
 31022  00B270  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31023  00B272  0E06               	movlw	6
 31024  00B274  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31025  00B276  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 31026  00B27A  0E02               	movlw	2
 31027  00B27C  ECF5  F07B         	call	_USBTransferOnePacket
 31028  00B280  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31029  00B284  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31030                           
 31031                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 31032  00B288  0102               	movlb	2	; () banked
 31033  00B28A  5149               	movf	(_gblCBW+8)& (0+255),w,b
 31034  00B28C  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 31035  00B28E  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 31036  00B290  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 31037  00B292  A4D8               	btfss	status,2,c
 31038  00B294  0012               	return	
 31039                           
 31040                           ; BSR set to: 2
 31041                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 31042  00B296  0100               	movlb	0	; () banked
 31043  00B298  69E6               	setf	_MSDCommandState& (0+255),b
 31044                           
 31045                           ; BSR set to: 0
 31046                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 31047                           
 31048                           ; BSR set to: 0
 31049                           
 31050                           ;usb_device_msd.c: 949: break;
 31051  00B29A  0012               	return	
 31052  00B29C                     
 31053                           ; BSR set to: 0
 31054                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 31055                           
 31056                           ; BSR set to: 0
 31057                           
 31058                           ;usb_device_msd.c: 954: default:
 31059                           
 31060                           ; BSR set to: 0
 31061  00B29C  0E7F               	movlw	127
 31062  00B29E  ECD3  F079         	call	_MSDErrorHandler
 31063                           
 31064                           ;usb_device_msd.c: 960: }
 31065                           
 31066                           ;usb_device_msd.c: 959: break;
 31067  00B2A2  0012               	return	
 31068  00B2A4                     l634:
 31069  00B2A4  0100               	movlb	0	; () banked
 31070  00B2A6  51E6               	movf	_MSDCommandState& (0+255),w,b
 31071                           
 31072                           ; Switch size 1, requested type "space"
 31073                           ; Number of cases is 12, Range of values is 0 to 254
 31074                           ; switch strategies available:
 31075                           ; Name         Instructions Cycles
 31076                           ; simple_byte           37    19 (average)
 31077                           ;	Chosen strategy is simple_byte
 31078  00B2A8  0A00               	xorlw	0	; case 0
 31079  00B2AA  B4D8               	btfsc	status,2,c
 31080  00B2AC  D759               	goto	l654
 31081  00B2AE  0A03               	xorlw	3	; case 3
 31082  00B2B0  B4D8               	btfsc	status,2,c
 31083  00B2B2  D6D8               	goto	l644
 31084  00B2B4  0A11               	xorlw	17	; case 18
 31085  00B2B6  B4D8               	btfsc	status,2,c
 31086  00B2B8  D646               	goto	l640
 31087  00B2BA  0A08               	xorlw	8	; case 26
 31088  00B2BC  B4D8               	btfsc	status,2,c
 31089  00B2BE  D6FF               	goto	l648
 31090  00B2C0  0A01               	xorlw	1	; case 27
 31091  00B2C2  B4D8               	btfsc	status,2,c
 31092  00B2C4  D775               	goto	l658
 31093  00B2C6  0A05               	xorlw	5	; case 30
 31094  00B2C8  B4D8               	btfsc	status,2,c
 31095  00B2CA  D733               	goto	l653
 31096  00B2CC  0A3B               	xorlw	59	; case 37
 31097  00B2CE  B4D8               	btfsc	status,2,c
 31098  00B2D0  D668               	goto	l643
 31099  00B2D2  0A0D               	xorlw	13	; case 40
 31100  00B2D4  B4D8               	btfsc	status,2,c
 31101  00B2D6  D627               	goto	l635
 31102  00B2D8  0A02               	xorlw	2	; case 42
 31103  00B2DA  B4D8               	btfsc	status,2,c
 31104  00B2DC  D62C               	goto	l638
 31105  00B2DE  0A05               	xorlw	5	; case 47
 31106  00B2E0  B4D8               	btfsc	status,2,c
 31107  00B2E2  D766               	goto	l658
 31108  00B2E4  0AD2               	xorlw	210	; case 253
 31109  00B2E6  B4D8               	btfsc	status,2,c
 31110  00B2E8  D76F               	goto	l660
 31111  00B2EA  0A03               	xorlw	3	; case 254
 31112  00B2EC  D7D7               	goto	l674
 31113  00B2EE                     __end_of_MSDProcessCommandMediaPresent:
 31114                           	opt stack 0
 31115                           tosu	equ	0xFFF
 31116                           tosh	equ	0xFFE
 31117                           tosl	equ	0xFFD
 31118                           pclath	equ	0xFFA
 31119                           tblptru	equ	0xFF8
 31120                           tblptrh	equ	0xFF7
 31121                           tblptrl	equ	0xFF6
 31122                           tablat	equ	0xFF5
 31123                           prodh	equ	0xFF4
 31124                           prodl	equ	0xFF3
 31125                           intcon	equ	0xFF2
 31126                           intcon2	equ	0xFF1
 31127                           intcon3	equ	0xFF0
 31128                           postinc0	equ	0xFEE
 31129                           wreg	equ	0xFE8
 31130                           indf1	equ	0xFE7
 31131                           postinc1	equ	0xFE6
 31132                           postdec1	equ	0xFE5
 31133                           plusw1	equ	0xFE3
 31134                           fsr1h	equ	0xFE2
 31135                           fsr1l	equ	0xFE1
 31136                           indf2	equ	0xFDF
 31137                           postinc2	equ	0xFDE
 31138                           postdec2	equ	0xFDD
 31139                           plusw2	equ	0xFDB
 31140                           fsr2h	equ	0xFDA
 31141                           fsr2l	equ	0xFD9
 31142                           status	equ	0xFD8
 31143                           
 31144 ;; *************** function _MSDWriteHandler *****************
 31145 ;; Defined at:
 31146 ;;		line 1188 in file "usb_device_msd.c"
 31147 ;; Parameters:    Size  Location     Type
 31148 ;;		None
 31149 ;; Auto vars:     Size  Location     Type
 31150 ;;		None
 31151 ;; Return value:  Size  Location     Type
 31152 ;;                  1    wreg      unsigned char 
 31153 ;; Registers used:
 31154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31155 ;; Tracked objects:
 31156 ;;		On entry : 0/0
 31157 ;;		On exit  : 0/0
 31158 ;;		Unchanged: 0/0
 31159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31162 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31163 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31164 ;;Total ram usage:        5 bytes
 31165 ;; Hardware stack levels used:    1
 31166 ;; Hardware stack levels required when called:   16
 31167 ;; This function calls:
 31168 ;;		_ExternalFlash_SectorWrite
 31169 ;;		_ExternalFlash_WriteProtectStateGet
 31170 ;;		_MSDCheckForErrorCases
 31171 ;;		_USBStallEndpoint
 31172 ;;		_USBTransferOnePacket
 31173 ;; This function is called by:
 31174 ;;		_MSDProcessCommandMediaPresent
 31175 ;; This function uses a non-reentrant model
 31176 ;;
 31177                           
 31178                           	psect	text140
 31179  00CA8A                     __ptext140:
 31180                           	opt stack 0
 31181  00CA8A                     _MSDWriteHandler:
 31182                           	opt stack 10
 31183                           
 31184                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 31185                           
 31186                           ;incstack = 0
 31187  00CA8A  D15A               	goto	l704
 31188  00CA8C                     l705:
 31189                           
 31190                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 31191  00CA8C  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 31192                           
 31193                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 31194  00CA90  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 31195                           
 31196                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 31197  00CA94  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 31198                           
 31199                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 31200  00CA98  C255  F1D9         	movff	_gblCBW+20,_LBA
 31201                           
 31202                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 31203  00CA9C  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 31204                           
 31205                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 31206  00CAA0  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 31207                           
 31208                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 31209  00CAA4  0100               	movlb	0	; () banked
 31210  00CAA6  51D9               	movf	_TransferLength& (0+255),w,b
 31211  00CAA8  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31212  00CAAA  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 31213  00CAAC  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 31214  00CAAE  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31215  00CAB0  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31216  00CAB2  0E09               	movlw	9
 31217  00CAB4                     u16975:
 31218  00CAB4  90D8               	bcf	status,0,c
 31219  00CAB6  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 31220  00CAB8  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 31221  00CABA  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 31222  00CABC  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 31223  00CABE  2EE8               	decfsz	wreg,f,c
 31224  00CAC0  D7F9               	goto	u16975
 31225  00CAC2  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 31226  00CAC6  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 31227  00CACA  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 31228  00CACE  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 31229  00CAD2  EC7D  F07E         	call	_MSDCheckForErrorCases	;wreg free
 31230  00CAD6  0900               	iorlw	0
 31231  00CAD8  A4D8               	btfss	status,2,c
 31232  00CADA  D143               	goto	l707
 31233                           
 31234                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 31235                           
 31236                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 31237  00CADC  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31238  00CAE0  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31239  00CAE4  EE22  F0CA         	lfsr	2,_LUN+15
 31240  00CAE8  D801               	call	u16998
 31241  00CAEA  D00A               	goto	u16999
 31242  00CAEC                     u16998:
 31243  00CAEC  0005               	push	
 31244  00CAEE  6EFA               	movwf	pclath,c
 31245  00CAF0  50DE               	movf	postinc2,w,c
 31246  00CAF2  6EFD               	movwf	tosl,c
 31247  00CAF4  50DE               	movf	postinc2,w,c
 31248  00CAF6  6EFE               	movwf	tosh,c
 31249  00CAF8  50DE               	movf	postinc2,w,c
 31250  00CAFA  6EFF               	movwf	tosu,c
 31251  00CAFC  50FA               	movf	pclath,w,c
 31252  00CAFE  0012               	return		;indir
 31253  00CB00                     u16999:
 31254  00CB00  0900               	iorlw	0
 31255  00CB02  B4D8               	btfsc	status,2,c
 31256  00CB04  D016               	goto	l708
 31257                           
 31258                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 31259  00CB06  0E01               	movlw	1
 31260  00CB08  010D               	movlb	13	; () banked
 31261  00CB0A  6F8C               	movwf	140,b	;volatile
 31262                           
 31263                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 31264  00CB0C  0102               	movlb	2	; () banked
 31265  00CB0E  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31266  00CB10  0BF0               	andlw	-16
 31267  00CB12  0907               	iorlw	7
 31268  00CB14  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31269                           
 31270                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 31271  00CB16  0E27               	movlw	39
 31272  00CB18  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31273                           
 31274                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 31275  00CB1A  0E00               	movlw	0
 31276  00CB1C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31277                           
 31278                           ; BSR set to: 2
 31279                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 31280  00CB1E  0E00               	movlw	0
 31281  00CB20  0100               	movlb	0	; () banked
 31282  00CB22  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31283  00CB24  0E02               	movlw	2
 31284  00CB26  EC70  F07B         	call	_USBStallEndpoint
 31285                           
 31286                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 31287  00CB2A  0E00               	movlw	0
 31288  00CB2C  6E1F               	movwf	_MSDWriteState,c
 31289                           
 31290                           ;usb_device_msd.c: 1228: return MSDWriteState;
 31291  00CB2E  501F               	movf	_MSDWriteState,w,c
 31292  00CB30  0012               	return	
 31293  00CB32                     l708:
 31294                           
 31295                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 31296  00CB32  0E01               	movlw	1
 31297  00CB34  0100               	movlb	0	; () banked
 31298  00CB36  6FE7               	movwf	_MSD_State& (0+255),b
 31299  00CB38                     
 31300                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 31301                           
 31302                           ; BSR set to: 0
 31303  00CB38  0100               	movlb	0	; () banked
 31304  00CB3A  51D9               	movf	_TransferLength& (0+255),w,b
 31305  00CB3C  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 31306  00CB3E  B4D8               	btfsc	status,2,c
 31307  00CB40  D0FC               	goto	l18403
 31308                           
 31309                           ; BSR set to: 0
 31310                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 31311                           
 31312                           ; BSR set to: 0
 31313                           
 31314                           ;usb_device_msd.c: 1238: break;
 31315                           
 31316                           ; BSR set to: 0
 31317                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 31318  00CB42  0E03               	movlw	3
 31319  00CB44  6E1F               	movwf	_MSDWriteState,c
 31320                           
 31321                           ; BSR set to: 0
 31322                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 31323  00CB46  0E00               	movlw	0
 31324  00CB48  0101               	movlb	1	; () banked
 31325  00CB4A  6FEB               	movwf	_ptrNextData& (0+255),b
 31326  00CB4C  0E06               	movlw	6
 31327  00CB4E  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 31328                           
 31329                           ; BSR set to: 1
 31330                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 31331  00CB50  0E00               	movlw	0
 31332  00CB52  010D               	movlb	13	; () banked
 31333  00CB54  6F88               	movwf	136,b	;volatile
 31334  00CB56  0E02               	movlw	2
 31335  00CB58  6F89               	movwf	137,b	;volatile
 31336  00CB5A  0E00               	movlw	0
 31337  00CB5C  6F8A               	movwf	138,b	;volatile
 31338  00CB5E  0E00               	movlw	0
 31339  00CB60  6F8B               	movwf	139,b	;volatile
 31340  00CB62                     l712:
 31341                           
 31342                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 31343  00CB62  010D               	movlb	13	; () banked
 31344  00CB64  5188               	movf	136,w,b	;volatile
 31345  00CB66  1189               	iorwf	137,w,b	;volatile
 31346  00CB68  118A               	iorwf	138,w,b	;volatile
 31347  00CB6A  118B               	iorwf	139,w,b	;volatile
 31348  00CB6C  B4D8               	btfsc	status,2,c
 31349  00CB6E  D01D               	goto	l713
 31350                           
 31351                           ; BSR set to: 13
 31352                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 31353  00CB70  0100               	movlb	0	; () banked
 31354  00CB72  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31355  00CB74  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31356  00CB76  B4D8               	btfsc	status,2,c
 31357  00CB78  D006               	goto	l714
 31358                           
 31359                           ; BSR set to: 0
 31360  00CB7A  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31361  00CB7E  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31362  00CB82  BEDF               	btfsc	indf2,7,c
 31363  00CB84  D0EE               	goto	l707
 31364  00CB86                     l714:
 31365                           
 31366                           ; BSR set to: 0
 31367                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 31368                           
 31369                           ; BSR set to: 0
 31370  00CB86  0E00               	movlw	0
 31371  00CB88  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31372  00CB8A  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 31373  00CB8E  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 31374  00CB92  0E40               	movlw	64
 31375  00CB94  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31376  00CB96  0E02               	movlw	2
 31377  00CB98  ECF5  F07B         	call	_USBTransferOnePacket
 31378  00CB9C  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31379  00CBA0  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31380                           
 31381                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 31382  00CBA4  0E04               	movlw	4
 31383  00CBA6  6E1F               	movwf	_MSDWriteState,c
 31384                           
 31385                           ;usb_device_msd.c: 1260: }
 31386  00CBA8  D023               	goto	l715
 31387  00CBAA                     l713:
 31388                           
 31389                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 31390  00CBAA  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 31391  00CBAE  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 31392  00CBB2  EE22  F0CA         	lfsr	2,_LUN+15
 31393  00CBB6  D801               	call	u17058
 31394  00CBB8  D00A               	goto	u17059
 31395  00CBBA                     u17058:
 31396  00CBBA  0005               	push	
 31397  00CBBC  6EFA               	movwf	pclath,c
 31398  00CBBE  50DE               	movf	postinc2,w,c
 31399  00CBC0  6EFD               	movwf	tosl,c
 31400  00CBC2  50DE               	movf	postinc2,w,c
 31401  00CBC4  6EFE               	movwf	tosh,c
 31402  00CBC6  50DE               	movf	postinc2,w,c
 31403  00CBC8  6EFF               	movwf	tosu,c
 31404  00CBCA  50FA               	movf	pclath,w,c
 31405  00CBCC  0012               	return		;indir
 31406  00CBCE                     u17059:
 31407  00CBCE  0900               	iorlw	0
 31408  00CBD0  B4D8               	btfsc	status,2,c
 31409  00CBD2  D00C               	goto	l716
 31410                           
 31411                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 31412  00CBD4  0E01               	movlw	1
 31413  00CBD6  010D               	movlb	13	; () banked
 31414  00CBD8  6F8C               	movwf	140,b	;volatile
 31415                           
 31416                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 31417  00CBDA  0102               	movlb	2	; () banked
 31418  00CBDC  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31419  00CBDE  0BF0               	andlw	-16
 31420  00CBE0  0902               	iorlw	2
 31421  00CBE2  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31422                           
 31423                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 31424  00CBE4  0E27               	movlw	39
 31425  00CBE6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31426                           
 31427                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 31428  00CBE8  0E00               	movlw	0
 31429  00CBEA  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31430  00CBEC                     l716:
 31431                           
 31432                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 31433  00CBEC  0E02               	movlw	2
 31434  00CBEE  D0A6               	goto	L27
 31435  00CBF0                     l715:
 31436                           
 31437                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 31438                           
 31439                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 31440  00CBF0  0100               	movlb	0	; () banked
 31441  00CBF2  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31442  00CBF4  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31443  00CBF6  B4D8               	btfsc	status,2,c
 31444  00CBF8  D006               	goto	l718
 31445                           
 31446                           ; BSR set to: 0
 31447  00CBFA  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31448  00CBFE  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31449  00CC02  BEDF               	btfsc	indf2,7,c
 31450  00CC04  D0AE               	goto	l707
 31451  00CC06                     l718:
 31452                           
 31453                           ; BSR set to: 0
 31454                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 31455                           
 31456                           ; BSR set to: 0
 31457  00CC06  EE20 F001          	lfsr	2,1
 31458  00CC0A  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31459  00CC0C  26D9               	addwf	fsr2l,f,c
 31460  00CC0E  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31461  00CC10  22DA               	addwfc	fsr2h,f,c
 31462  00CC12  50DF               	movf	indf2,w,c
 31463  00CC14  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31464  00CC16  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 31465  00CC1A  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31466  00CC1C  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31467  00CC1E  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 31468  00CC20  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 31469  00CC22  0102               	movlb	2	; () banked
 31470  00CC24  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 31471  00CC26  0100               	movlb	0	; () banked
 31472  00CC28  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 31473  00CC2A  0102               	movlb	2	; () banked
 31474  00CC2C  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 31475  00CC2E  0100               	movlb	0	; () banked
 31476  00CC30  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 31477  00CC32  0102               	movlb	2	; () banked
 31478  00CC34  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 31479  00CC36  0100               	movlb	0	; () banked
 31480  00CC38  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 31481  00CC3A  0102               	movlb	2	; () banked
 31482  00CC3C  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 31483                           
 31484                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 31485  00CC3E  0100               	movlb	0	; () banked
 31486  00CC40  EE20 F001          	lfsr	2,1
 31487  00CC44  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31488  00CC46  26D9               	addwf	fsr2l,f,c
 31489  00CC48  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31490  00CC4A  22DA               	addwfc	fsr2h,f,c
 31491  00CC4C  50DF               	movf	indf2,w,c
 31492  00CC4E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 31493  00CC50  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 31494  00CC54  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 31495  00CC56  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 31496  00CC58  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 31497  00CC5A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 31498  00CC5C  010D               	movlb	13	; () banked
 31499  00CC5E  5F88               	subwf	136,f,b	;volatile
 31500  00CC60  0100               	movlb	0	; () banked
 31501  00CC62  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 31502  00CC64  010D               	movlb	13	; () banked
 31503  00CC66  5B89               	subwfb	137,f,b	;volatile
 31504  00CC68  0100               	movlb	0	; () banked
 31505  00CC6A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 31506  00CC6C  010D               	movlb	13	; () banked
 31507  00CC6E  5B8A               	subwfb	138,f,b	;volatile
 31508  00CC70  0100               	movlb	0	; () banked
 31509  00CC72  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 31510  00CC74  010D               	movlb	13	; () banked
 31511  00CC76  5B8B               	subwfb	139,f,b	;volatile
 31512                           
 31513                           ; BSR set to: 13
 31514                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 31515  00CC78  0E40               	movlw	64
 31516  00CC7A  0101               	movlb	1	; () banked
 31517  00CC7C  27EB               	addwf	_ptrNextData& (0+255),f,b
 31518  00CC7E  0E00               	movlw	0
 31519  00CC80  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 31520                           
 31521                           ; BSR set to: 1
 31522                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 31523  00CC82  0E03               	movlw	3
 31524  00CC84  D05B               	goto	L27
 31525  00CC86                     
 31526                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 31527                           
 31528                           ; BSR set to: 1
 31529  00CC86  010D               	movlb	13	; () banked
 31530  00CC88  518C               	movf	140,w,b	;volatile
 31531  00CC8A  A4D8               	btfss	status,2,c
 31532  00CC8C  D040               	goto	l723
 31533                           
 31534                           ; BSR set to: 13
 31535                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 31536  00CC8E  C2D0  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 31537  00CC92  C2D1  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 31538  00CC96  C1D9  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 31539  00CC9A  C1DA  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 31540  00CC9E  C1DB  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 31541  00CCA2  C1DC  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 31542  00CCA6  0E00               	movlw	0
 31543  00CCA8  0100               	movlb	0	; () banked
 31544  00CCAA  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 31545  00CCAC  0E06               	movlw	6
 31546  00CCAE  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 31547  00CCB0  0101               	movlb	1	; () banked
 31548  00CCB2  51D9               	movf	_LBA& (0+255),w,b
 31549  00CCB4  11DA               	iorwf	(_LBA+1)& (0+255),w,b
 31550  00CCB6  11DB               	iorwf	(_LBA+2)& (0+255),w,b
 31551  00CCB8  11DC               	iorwf	(_LBA+3)& (0+255),w,b
 31552  00CCBA  A4D8               	btfss	status,2,c
 31553  00CCBC  D002               	goto	u17100
 31554  00CCBE  0E01               	movlw	1
 31555  00CCC0  D001               	goto	u17110
 31556  00CCC2                     u17100:
 31557  00CCC2  0E00               	movlw	0
 31558  00CCC4                     u17110:
 31559  00CCC4  0100               	movlb	0	; () banked
 31560  00CCC6  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 31561  00CCC8  EE22  F0CD         	lfsr	2,_LUN+18
 31562  00CCCC  D801               	call	u17128
 31563  00CCCE  D00A               	goto	u17129
 31564  00CCD0                     u17128:
 31565  00CCD0  0005               	push	
 31566  00CCD2  6EFA               	movwf	pclath,c
 31567  00CCD4  50DE               	movf	postinc2,w,c
 31568  00CCD6  6EFD               	movwf	tosl,c
 31569  00CCD8  50DE               	movf	postinc2,w,c
 31570  00CCDA  6EFE               	movwf	tosh,c
 31571  00CCDC  50DE               	movf	postinc2,w,c
 31572  00CCDE  6EFF               	movwf	tosu,c
 31573  00CCE0  50FA               	movf	pclath,w,c
 31574  00CCE2  0012               	return		;indir
 31575  00CCE4                     u17129:
 31576  00CCE4  06E8               	decf	wreg,f,c
 31577  00CCE6  B4D8               	btfsc	status,2,c
 31578  00CCE8  D012               	goto	l723
 31579                           
 31580                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 31581  00CCEA  0E64               	movlw	100
 31582  00CCEC  0101               	movlb	1	; () banked
 31583  00CCEE  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 31584  00CCF0  D002               	goto	l722
 31585                           
 31586                           ; BSR set to: 1
 31587                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 31588  00CCF2  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 31589                           
 31590                           ;usb_device_msd.c: 1314: break;
 31591  00CCF4  D036               	goto	l707
 31592  00CCF6                     l722:
 31593                           
 31594                           ; BSR set to: 1
 31595                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 31596                           
 31597                           ; BSR set to: 1
 31598  00CCF6  0E01               	movlw	1
 31599  00CCF8  010D               	movlb	13	; () banked
 31600  00CCFA  6F8C               	movwf	140,b	;volatile
 31601                           
 31602                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 31603  00CCFC  0102               	movlb	2	; () banked
 31604  00CCFE  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31605  00CD00  0BF0               	andlw	-16
 31606  00CD02  0903               	iorlw	3
 31607  00CD04  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31608                           
 31609                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 31610  00CD06  0E00               	movlw	0
 31611  00CD08  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31612                           
 31613                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 31614  00CD0A  0E00               	movlw	0
 31615  00CD0C  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31616  00CD0E                     l723:
 31617                           
 31618                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 31619                           
 31620                           ; BSR set to: 2
 31621                           
 31622                           ; BSR set to: 2
 31623                           
 31624                           ; BSR set to: 2
 31625  00CD0E  0E01               	movlw	1
 31626  00CD10  0101               	movlb	1	; () banked
 31627  00CD12  27D9               	addwf	_LBA& (0+255),f,b
 31628  00CD14  0E00               	movlw	0
 31629  00CD16  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 31630  00CD18  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 31631  00CD1A  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 31632                           
 31633                           ; BSR set to: 1
 31634                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 31635  00CD1C  0100               	movlb	0	; () banked
 31636  00CD1E  07D9               	decf	_TransferLength& (0+255),f,b
 31637  00CD20  A0D8               	btfss	status,0,c
 31638  00CD22  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 31639                           
 31640                           ; BSR set to: 0
 31641                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 31642  00CD24  0E01               	movlw	1
 31643  00CD26  D00A               	goto	L27
 31644  00CD28                     
 31645                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 31646                           
 31647                           ; BSR set to: 0
 31648  00CD28  0E02               	movlw	2
 31649  00CD2A  010D               	movlb	13	; () banked
 31650  00CD2C  6F8C               	movwf	140,b	;volatile
 31651                           
 31652                           ; BSR set to: 13
 31653                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 31654  00CD2E  0E00               	movlw	0
 31655  00CD30  0100               	movlb	0	; () banked
 31656  00CD32  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31657  00CD34  0E02               	movlw	2
 31658  00CD36  EC70  F07B         	call	_USBStallEndpoint
 31659  00CD3A                     l18403:
 31660                           
 31661                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 31662  00CD3A  0E00               	movlw	0
 31663  00CD3C                     L27:
 31664  00CD3C  6E1F               	movwf	_MSDWriteState,c
 31665                           
 31666                           ;usb_device_msd.c: 1345: }
 31667                           
 31668                           ;usb_device_msd.c: 1344: break;
 31669  00CD3E  D011               	goto	l707
 31670  00CD40                     l704:
 31671  00CD40  501F               	movf	_MSDWriteState,w,c
 31672                           
 31673                           ; Switch size 1, requested type "space"
 31674                           ; Number of cases is 5, Range of values is 0 to 4
 31675                           ; switch strategies available:
 31676                           ; Name         Instructions Cycles
 31677                           ; simple_byte           16     9 (average)
 31678                           ;	Chosen strategy is simple_byte
 31679  00CD42  0A00               	xorlw	0	; case 0
 31680  00CD44  B4D8               	btfsc	status,2,c
 31681  00CD46  D6A2               	goto	l705
 31682  00CD48  0A01               	xorlw	1	; case 1
 31683  00CD4A  B4D8               	btfsc	status,2,c
 31684  00CD4C  D6F5               	goto	l710
 31685  00CD4E  0A03               	xorlw	3	; case 2
 31686  00CD50  B4D8               	btfsc	status,2,c
 31687  00CD52  D799               	goto	l719
 31688  00CD54  0A01               	xorlw	1	; case 3
 31689  00CD56  B4D8               	btfsc	status,2,c
 31690  00CD58  D704               	goto	l712
 31691  00CD5A  0A07               	xorlw	7	; case 4
 31692  00CD5C  B4D8               	btfsc	status,2,c
 31693  00CD5E  D748               	goto	l715
 31694  00CD60  D7E3               	goto	l724
 31695  00CD62                     l707:
 31696                           
 31697                           ;usb_device_msd.c: 1347: return MSDWriteState;
 31698  00CD62  501F               	movf	_MSDWriteState,w,c
 31699  00CD64  0012               	return	
 31700  00CD66                     __end_of_MSDWriteHandler:
 31701                           	opt stack 0
 31702                           tosu	equ	0xFFF
 31703                           tosh	equ	0xFFE
 31704                           tosl	equ	0xFFD
 31705                           pclath	equ	0xFFA
 31706                           tblptru	equ	0xFF8
 31707                           tblptrh	equ	0xFF7
 31708                           tblptrl	equ	0xFF6
 31709                           tablat	equ	0xFF5
 31710                           prodh	equ	0xFF4
 31711                           prodl	equ	0xFF3
 31712                           intcon	equ	0xFF2
 31713                           intcon2	equ	0xFF1
 31714                           intcon3	equ	0xFF0
 31715                           postinc0	equ	0xFEE
 31716                           wreg	equ	0xFE8
 31717                           indf1	equ	0xFE7
 31718                           postinc1	equ	0xFE6
 31719                           postdec1	equ	0xFE5
 31720                           plusw1	equ	0xFE3
 31721                           fsr1h	equ	0xFE2
 31722                           fsr1l	equ	0xFE1
 31723                           indf2	equ	0xFDF
 31724                           postinc2	equ	0xFDE
 31725                           postdec2	equ	0xFDD
 31726                           plusw2	equ	0xFDB
 31727                           fsr2h	equ	0xFDA
 31728                           fsr2l	equ	0xFD9
 31729                           status	equ	0xFD8
 31730                           
 31731 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 31732 ;; Defined at:
 31733 ;;		line 34 in file "external_flash.c"
 31734 ;; Parameters:    Size  Location     Type
 31735 ;;  config          2    0[BANK0 ] PTR void 
 31736 ;;		 -> NULL(0), 
 31737 ;; Auto vars:     Size  Location     Type
 31738 ;;		None
 31739 ;; Return value:  Size  Location     Type
 31740 ;;                  1    wreg      unsigned char 
 31741 ;; Registers used:
 31742 ;;		wreg
 31743 ;; Tracked objects:
 31744 ;;		On entry : 0/0
 31745 ;;		On exit  : 0/0
 31746 ;;		Unchanged: 0/0
 31747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31752 ;;Total ram usage:        2 bytes
 31753 ;; Hardware stack levels used:    1
 31754 ;; Hardware stack levels required when called:   10
 31755 ;; This function calls:
 31756 ;;		Nothing
 31757 ;; This function is called by:
 31758 ;;		_MSDWriteHandler
 31759 ;;		_MSDProcessCommandMediaPresent
 31760 ;; This function uses a non-reentrant model
 31761 ;;
 31762                           
 31763                           	psect	text141
 31764  013EE4                     __ptext141:
 31765                           	opt stack 0
 31766  013EE4                     _ExternalFlash_WriteProtectStateGet:
 31767                           	opt stack 15
 31768                           
 31769                           ;external_flash.c: 37: return 0;
 31770                           
 31771                           ;incstack = 0
 31772  013EE4  0E00               	movlw	0
 31773  013EE6  0012               	return	
 31774  013EE8                     __end_of_ExternalFlash_WriteProtectStateGet:
 31775                           	opt stack 0
 31776                           tosu	equ	0xFFF
 31777                           tosh	equ	0xFFE
 31778                           tosl	equ	0xFFD
 31779                           pclath	equ	0xFFA
 31780                           tblptru	equ	0xFF8
 31781                           tblptrh	equ	0xFF7
 31782                           tblptrl	equ	0xFF6
 31783                           tablat	equ	0xFF5
 31784                           prodh	equ	0xFF4
 31785                           prodl	equ	0xFF3
 31786                           intcon	equ	0xFF2
 31787                           intcon2	equ	0xFF1
 31788                           intcon3	equ	0xFF0
 31789                           postinc0	equ	0xFEE
 31790                           wreg	equ	0xFE8
 31791                           indf1	equ	0xFE7
 31792                           postinc1	equ	0xFE6
 31793                           postdec1	equ	0xFE5
 31794                           plusw1	equ	0xFE3
 31795                           fsr1h	equ	0xFE2
 31796                           fsr1l	equ	0xFE1
 31797                           indf2	equ	0xFDF
 31798                           postinc2	equ	0xFDE
 31799                           postdec2	equ	0xFDD
 31800                           plusw2	equ	0xFDB
 31801                           fsr2h	equ	0xFDA
 31802                           fsr2l	equ	0xFD9
 31803                           status	equ	0xFD8
 31804                           
 31805 ;; *************** function _ExternalFlash_SectorWrite *****************
 31806 ;; Defined at:
 31807 ;;		line 104 in file "external_flash.c"
 31808 ;; Parameters:    Size  Location     Type
 31809 ;;  config          2   36[BANK0 ] PTR void 
 31810 ;;		 -> NULL(0), 
 31811 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 31812 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 31813 ;;		 -> msd_buffer(512), 
 31814 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 31815 ;; Auto vars:     Size  Location     Type
 31816 ;;  page            2   45[BANK0 ] unsigned int 
 31817 ;; Return value:  Size  Location     Type
 31818 ;;                  1    wreg      unsigned char 
 31819 ;; Registers used:
 31820 ;;		wreg, status,2, status,0, cstack
 31821 ;; Tracked objects:
 31822 ;;		On entry : 0/0
 31823 ;;		On exit  : 0/0
 31824 ;;		Unchanged: 0/0
 31825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31826 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31829 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31830 ;;Total ram usage:       11 bytes
 31831 ;; Hardware stack levels used:    1
 31832 ;; Hardware stack levels required when called:   15
 31833 ;; This function calls:
 31834 ;;		_flash_page_write
 31835 ;; This function is called by:
 31836 ;;		_MSDWriteHandler
 31837 ;; This function uses a non-reentrant model
 31838 ;;
 31839                           
 31840                           	psect	text142
 31841  0134A4                     __ptext142:
 31842                           	opt stack 0
 31843  0134A4                     _ExternalFlash_SectorWrite:
 31844                           	opt stack 10
 31845                           
 31846                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 31847                           
 31848                           ;incstack = 0
 31849  0134A4  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 31850  0134A8  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 31851                           
 31852                           ;external_flash.c: 110: if(sector_addr >= 4096)
 31853  0134AC  0100               	movlb	0	; () banked
 31854  0134AE  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 31855  0134B0  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 31856  0134B2  E104               	bnz	u16830
 31857  0134B4  0E10               	movlw	16
 31858  0134B6  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 31859  0134B8  A0D8               	btfss	status,0,c
 31860  0134BA  D002               	goto	l2908
 31861  0134BC                     u16830:
 31862                           
 31863                           ; BSR set to: 0
 31864                           ;external_flash.c: 111: {;external_flash.c: 112: return 0;
 31865  0134BC  0E00               	movlw	0
 31866                           
 31867                           ; BSR set to: 0
 31868  0134BE  0012               	return	
 31869  0134C0                     l2908:
 31870                           
 31871                           ; BSR set to: 0
 31872                           ;external_flash.c: 113: };external_flash.c: 141: flash_page_write(page, buffer);
 31873                           
 31874                           ; BSR set to: 0
 31875  0134C0  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 31876  0134C4  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 31877  0134C8  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 31878  0134CC  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 31879  0134D0  ECFA  F096         	call	_flash_page_write	;wreg free
 31880                           
 31881                           ;external_flash.c: 143: return 1;
 31882  0134D4  0E01               	movlw	1
 31883  0134D6  0012               	return	
 31884  0134D8                     __end_of_ExternalFlash_SectorWrite:
 31885                           	opt stack 0
 31886                           tosu	equ	0xFFF
 31887                           tosh	equ	0xFFE
 31888                           tosl	equ	0xFFD
 31889                           pclath	equ	0xFFA
 31890                           tblptru	equ	0xFF8
 31891                           tblptrh	equ	0xFF7
 31892                           tblptrl	equ	0xFF6
 31893                           tablat	equ	0xFF5
 31894                           prodh	equ	0xFF4
 31895                           prodl	equ	0xFF3
 31896                           intcon	equ	0xFF2
 31897                           intcon2	equ	0xFF1
 31898                           intcon3	equ	0xFF0
 31899                           postinc0	equ	0xFEE
 31900                           wreg	equ	0xFE8
 31901                           indf1	equ	0xFE7
 31902                           postinc1	equ	0xFE6
 31903                           postdec1	equ	0xFE5
 31904                           plusw1	equ	0xFE3
 31905                           fsr1h	equ	0xFE2
 31906                           fsr1l	equ	0xFE1
 31907                           indf2	equ	0xFDF
 31908                           postinc2	equ	0xFDE
 31909                           postdec2	equ	0xFDD
 31910                           plusw2	equ	0xFDB
 31911                           fsr2h	equ	0xFDA
 31912                           fsr2l	equ	0xFD9
 31913                           status	equ	0xFD8
 31914                           
 31915 ;; *************** function _flash_page_write *****************
 31916 ;; Defined at:
 31917 ;;		line 546 in file "flash.c"
 31918 ;; Parameters:    Size  Location     Type
 31919 ;;  page            2   31[BANK0 ] unsigned int 
 31920 ;;  data            2   33[BANK0 ] PTR unsigned char 
 31921 ;;		 -> buffer(512), msd_buffer(512), 
 31922 ;; Auto vars:     Size  Location     Type
 31923 ;;  match           1   35[BANK0 ] enum E6858
 31924 ;; Return value:  Size  Location     Type
 31925 ;;                  1    wreg      void 
 31926 ;; Registers used:
 31927 ;;		wreg, status,2, status,0, cstack
 31928 ;; Tracked objects:
 31929 ;;		On entry : 0/0
 31930 ;;		On exit  : 0/0
 31931 ;;		Unchanged: 0/0
 31932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31933 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31936 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31937 ;;Total ram usage:        5 bytes
 31938 ;; Hardware stack levels used:    1
 31939 ;; Hardware stack levels required when called:   14
 31940 ;; This function calls:
 31941 ;;		__flash_compare_page_to_buffer
 31942 ;;		__flash_write_page_from_buffer
 31943 ;;		__flash_write_to_buffer
 31944 ;; This function is called by:
 31945 ;;		_ExternalFlash_SectorWrite
 31946 ;;		_fat_format
 31947 ;; This function uses a non-reentrant model
 31948 ;;
 31949                           
 31950                           	psect	text143
 31951  012DF4                     __ptext143:
 31952                           	opt stack 0
 31953  012DF4                     _flash_page_write:
 31954                           	opt stack 10
 31955                           
 31956                           ;flash.c: 548: flashMatchResult_t match;;flash.c: 551: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 31957                           
 31958                           ;incstack = 0
 31959  012DF4  0E00               	movlw	0
 31960  012DF6  0100               	movlb	0	; () banked
 31961  012DF8  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 31962  012DFA  0E00               	movlw	0
 31963  012DFC  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 31964  012DFE  C081  F075         	movff	flash_page_write@data,__flash_write_to_buffer@data
 31965  012E02  C082  F076         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 31966  012E06  0E02               	movlw	2
 31967  012E08  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 31968  012E0A  0E00               	movlw	0
 31969  012E0C  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 31970  012E0E  0E00               	movlw	0
 31971  012E10  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 31972  012E12  ECD1  F096         	call	__flash_write_to_buffer	;wreg free
 31973                           
 31974                           ;flash.c: 554: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 31975  012E16  C07F  F073         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 31976  012E1A  C080  F074         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 31977  012E1E  0E00               	movlw	0
 31978  012E20  0100               	movlb	0	; () banked
 31979  012E22  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 31980  012E24  ECD5  F08E         	call	__flash_compare_page_to_buffer	;wreg free
 31981  012E28  0100               	movlb	0	; () banked
 31982  012E2A  6F83               	movwf	flash_page_write@match& (0+255),b
 31983                           
 31984                           ; BSR set to: 0
 31985                           ;flash.c: 557: if(match==DATA_DOES_NOT_MATCH)
 31986  012E2C  0583               	decf	flash_page_write@match& (0+255),w,b
 31987  012E2E  A4D8               	btfss	status,2,c
 31988  012E30  0012               	return	
 31989                           
 31990                           ; BSR set to: 0
 31991                           ;flash.c: 558: {;flash.c: 559: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 31992  012E32  C07F  F073         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 31993  012E36  C080  F074         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 31994  012E3A  0E00               	movlw	0
 31995  012E3C  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 31996  012E3E  EC23  F095         	call	__flash_write_page_from_buffer	;wreg free
 31997  012E42  0012               	return	
 31998  012E44                     __end_of_flash_page_write:
 31999                           	opt stack 0
 32000                           tosu	equ	0xFFF
 32001                           tosh	equ	0xFFE
 32002                           tosl	equ	0xFFD
 32003                           pclath	equ	0xFFA
 32004                           tblptru	equ	0xFF8
 32005                           tblptrh	equ	0xFF7
 32006                           tblptrl	equ	0xFF6
 32007                           tablat	equ	0xFF5
 32008                           prodh	equ	0xFF4
 32009                           prodl	equ	0xFF3
 32010                           intcon	equ	0xFF2
 32011                           intcon2	equ	0xFF1
 32012                           intcon3	equ	0xFF0
 32013                           postinc0	equ	0xFEE
 32014                           wreg	equ	0xFE8
 32015                           indf1	equ	0xFE7
 32016                           postinc1	equ	0xFE6
 32017                           postdec1	equ	0xFE5
 32018                           plusw1	equ	0xFE3
 32019                           fsr1h	equ	0xFE2
 32020                           fsr1l	equ	0xFE1
 32021                           indf2	equ	0xFDF
 32022                           postinc2	equ	0xFDE
 32023                           postdec2	equ	0xFDD
 32024                           plusw2	equ	0xFDB
 32025                           fsr2h	equ	0xFDA
 32026                           fsr2l	equ	0xFD9
 32027                           status	equ	0xFD8
 32028                           
 32029 ;; *************** function __flash_write_to_buffer *****************
 32030 ;; Defined at:
 32031 ;;		line 397 in file "flash.c"
 32032 ;; Parameters:    Size  Location     Type
 32033 ;;  start           2   19[BANK0 ] unsigned int 
 32034 ;;  data            2   21[BANK0 ] PTR unsigned char 
 32035 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 32036 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 32037 ;;		 -> msd_buffer(512), 
 32038 ;;  data_length     2   23[BANK0 ] unsigned int 
 32039 ;;  buffer          1   25[BANK0 ] enum E6854
 32040 ;; Auto vars:     Size  Location     Type
 32041 ;;  command         4   26[BANK0 ] unsigned char [4]
 32042 ;; Return value:  Size  Location     Type
 32043 ;;                  1    wreg      void 
 32044 ;; Registers used:
 32045 ;;		wreg, status,2, status,0, cstack
 32046 ;; Tracked objects:
 32047 ;;		On entry : 0/0
 32048 ;;		On exit  : 0/0
 32049 ;;		Unchanged: 0/0
 32050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32051 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32052 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32054 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32055 ;;Total ram usage:       11 bytes
 32056 ;; Hardware stack levels used:    1
 32057 ;; Hardware stack levels required when called:   13
 32058 ;; This function calls:
 32059 ;;		__flash_spi_tx_tx
 32060 ;;		_flash_is_busy
 32061 ;; This function is called by:
 32062 ;;		_flash_page_write
 32063 ;;		_flash_partial_write
 32064 ;; This function uses a non-reentrant model
 32065 ;;
 32066                           
 32067                           	psect	text144
 32068  012DA2                     __ptext144:
 32069                           	opt stack 0
 32070  012DA2                     __flash_write_to_buffer:
 32071                           	opt stack 13
 32072                           
 32073                           ;flash.c: 399: uint8_t command[4];;flash.c: 402: while(flash_is_busy());
 32074                           
 32075                           ;incstack = 0
 32076  012DA2  ECAC  F09C         	call	_flash_is_busy	;wreg free
 32077  012DA6  0900               	iorlw	0
 32078  012DA8  A4D8               	btfss	status,2,c
 32079  012DAA  D7FB               	goto	__flash_write_to_buffer
 32080                           
 32081                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 32082  012DAC  0100               	movlb	0	; () banked
 32083  012DAE  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 32084  012DB0  A4D8               	btfss	status,2,c
 32085  012DB2  D002               	goto	l2822
 32086                           
 32087                           ; BSR set to: 0
 32088                           ;flash.c: 406: command[0] = 0x84;
 32089  012DB4  0E84               	movlw	132
 32090  012DB6  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32091  012DB8                     l2822:
 32092                           
 32093                           ; BSR set to: 0
 32094                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 32095                           
 32096                           ; BSR set to: 0
 32097  012DB8  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 32098  012DBA  A4D8               	btfss	status,2,c
 32099  012DBC  D002               	goto	l2823
 32100                           
 32101                           ; BSR set to: 0
 32102                           ;flash.c: 408: command[0] = 0x87;
 32103  012DBE  0E87               	movlw	135
 32104  012DC0  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 32105  012DC2                     l2823:
 32106                           
 32107                           ; BSR set to: 0
 32108                           ;flash.c: 410: command[1] = 0x00;
 32109  012DC2  0E00               	movlw	0
 32110  012DC4  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 32111                           
 32112                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 32113  012DC6  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 32114  012DC8  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 32115                           
 32116                           ; BSR set to: 0
 32117                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 32118  012DCA  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 32119                           
 32120                           ; BSR set to: 0
 32121                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 32122  012DCE  0E7A               	movlw	low __flash_write_to_buffer@command
 32123  012DD0  6F60               	movwf	__flash_spi_tx_tx@command& (0+255),b
 32124  012DD2  0E00               	movlw	high __flash_write_to_buffer@command
 32125  012DD4  6F61               	movwf	(__flash_spi_tx_tx@command+1)& (0+255),b
 32126  012DD6  0E00               	movlw	0
 32127  012DD8  6F63               	movwf	(__flash_spi_tx_tx@command_length+1)& (0+255),b
 32128  012DDA  0E04               	movlw	4
 32129  012DDC  6F62               	movwf	__flash_spi_tx_tx@command_length& (0+255),b
 32130  012DDE  C075  F064         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 32131  012DE2  C076  F065         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 32132  012DE6  C077  F066         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 32133  012DEA  C078  F067         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 32134  012DEE  EC78  F08B         	call	__flash_spi_tx_tx	;wreg free
 32135  012DF2  0012               	return		;funcret
 32136  012DF4                     __end_of__flash_write_to_buffer:
 32137                           	opt stack 0
 32138                           tosu	equ	0xFFF
 32139                           tosh	equ	0xFFE
 32140                           tosl	equ	0xFFD
 32141                           pclath	equ	0xFFA
 32142                           tblptru	equ	0xFF8
 32143                           tblptrh	equ	0xFF7
 32144                           tblptrl	equ	0xFF6
 32145                           tablat	equ	0xFF5
 32146                           prodh	equ	0xFF4
 32147                           prodl	equ	0xFF3
 32148                           intcon	equ	0xFF2
 32149                           intcon2	equ	0xFF1
 32150                           intcon3	equ	0xFF0
 32151                           postinc0	equ	0xFEE
 32152                           wreg	equ	0xFE8
 32153                           indf1	equ	0xFE7
 32154                           postinc1	equ	0xFE6
 32155                           postdec1	equ	0xFE5
 32156                           plusw1	equ	0xFE3
 32157                           fsr1h	equ	0xFE2
 32158                           fsr1l	equ	0xFE1
 32159                           indf2	equ	0xFDF
 32160                           postinc2	equ	0xFDE
 32161                           postdec2	equ	0xFDD
 32162                           plusw2	equ	0xFDB
 32163                           fsr2h	equ	0xFDA
 32164                           fsr2l	equ	0xFD9
 32165                           status	equ	0xFD8
 32166                           
 32167 ;; *************** function __flash_spi_tx_tx *****************
 32168 ;; Defined at:
 32169 ;;		line 141 in file "flash.c"
 32170 ;; Parameters:    Size  Location     Type
 32171 ;;  command         2    0[BANK0 ] PTR unsigned char 
 32172 ;;		 -> _flash_write_to_buffer@command(4), 
 32173 ;;  command_leng    2    2[BANK0 ] unsigned int 
 32174 ;;  data            2    4[BANK0 ] PTR unsigned char 
 32175 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 32176 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 32177 ;;		 -> msd_buffer(512), 
 32178 ;;  data_length     2    6[BANK0 ] unsigned int 
 32179 ;; Auto vars:     Size  Location     Type
 32180 ;;		None
 32181 ;; Return value:  Size  Location     Type
 32182 ;;                  1    wreg      void 
 32183 ;; Registers used:
 32184 ;;		wreg, status,2, status,0
 32185 ;; Tracked objects:
 32186 ;;		On entry : 0/0
 32187 ;;		On exit  : 0/0
 32188 ;;		Unchanged: 0/0
 32189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32190 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32192 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32193 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32194 ;;Total ram usage:       12 bytes
 32195 ;; Hardware stack levels used:    1
 32196 ;; Hardware stack levels required when called:   10
 32197 ;; This function calls:
 32198 ;;		Nothing
 32199 ;; This function is called by:
 32200 ;;		__flash_write_to_buffer
 32201 ;; This function uses a non-reentrant model
 32202 ;;
 32203                           
 32204                           	psect	text145
 32205  0116F0                     __ptext145:
 32206                           	opt stack 0
 32207  0116F0                     __flash_spi_tx_tx:
 32208                           	opt stack 15
 32209                           
 32210                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 32211                           
 32212                           ;incstack = 0
 32213  0116F0  9E88               	bcf	3976,7,c	;volatile
 32214                           
 32215                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 32216  0116F2  9C88               	bcf	3976,6,c	;volatile
 32217                           
 32218                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 32219  0116F4  8A88               	bsf	3976,5,c	;volatile
 32220                           
 32221                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 32222  0116F6  9888               	bcf	3976,4,c	;volatile
 32223                           
 32224                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 32225  0116F8  9688               	bcf	3976,3,c	;volatile
 32226                           
 32227                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 32228  0116FA  8488               	bsf	3976,2,c	;volatile
 32229                           
 32230                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 32231  0116FC  9288               	bcf	3976,1,c	;volatile
 32232                           
 32233                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 32234  0116FE  9886               	bcf	3974,4,c	;volatile
 32235  011700  9A86               	bcf	3974,5,c	;volatile
 32236  011702  9C86               	bcf	3974,6,c	;volatile
 32237  011704  9E86               	bcf	3974,7,c	;volatile
 32238                           
 32239                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 32240  011706  9086               	bcf	3974,0,c	;volatile
 32241  011708  9286               	bcf	3974,1,c	;volatile
 32242  01170A  9486               	bcf	3974,2,c	;volatile
 32243  01170C  9686               	bcf	3974,3,c	;volatile
 32244                           
 32245                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 32246  01170E  0100               	movlb	0	; () banked
 32247  011710  5161               	movf	(__flash_spi_tx_tx@command+1)& (0+255),w,b
 32248  011712  6E6A               	movwf	3946,c	;volatile
 32249                           
 32250                           ; BSR set to: 0
 32251                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 32252  011714  C060  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 32253                           
 32254                           ; BSR set to: 0
 32255                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 32256  011718  0EFF               	movlw	255
 32257  01171A  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32258  01171C  0EFF               	movlw	255
 32259  01171E  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32260  011720  C062  F06A         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 32261  011724  C063  F06B         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 32262  011728  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32263  01172A  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32264  01172C  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32265  01172E  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32266  011730  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32267  011734  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32268  011736  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32269  011738  6E66               	movwf	3942,c	;volatile
 32270                           
 32271                           ; BSR set to: 0
 32272                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 32273  01173A  0562               	decf	__flash_spi_tx_tx@command_length& (0+255),w,b
 32274  01173C  6E67               	movwf	3943,c	;volatile
 32275                           
 32276                           ; BSR set to: 0
 32277                           ;flash.c: 169: LATDbits.LD7 = 0;
 32278  01173E  9E8C               	bcf	3980,7,c	;volatile
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 32282  011740  8088               	bsf	3976,0,c	;volatile
 32283  011742                     
 32284                           ; BSR set to: 0
 32285  011742  B088               	btfsc	3976,0,c	;volatile
 32286  011744  D7FE               	goto	l2757
 32287                           
 32288                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 32289  011746  0100               	movlb	0	; () banked
 32290  011748  5165               	movf	(__flash_spi_tx_tx@data+1)& (0+255),w,b
 32291  01174A  6E6A               	movwf	3946,c	;volatile
 32292                           
 32293                           ; BSR set to: 0
 32294                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 32295  01174C  C064  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 32296                           
 32297                           ; BSR set to: 0
 32298                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 32299  011750  0EFF               	movlw	255
 32300  011752  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 32301  011754  0EFF               	movlw	255
 32302  011756  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 32303  011758  C066  F06A         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 32304  01175C  C067  F06B         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 32305  011760  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 32306  011762  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 32307  011764  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 32308  011766  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 32309  011768  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 32310  01176C  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 32311  01176E  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 32312  011770  6E66               	movwf	3942,c	;volatile
 32313                           
 32314                           ; BSR set to: 0
 32315                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 32316  011772  0566               	decf	__flash_spi_tx_tx@data_length& (0+255),w,b
 32317  011774  6E67               	movwf	3943,c	;volatile
 32318                           
 32319                           ; BSR set to: 0
 32320                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 32321  011776  8088               	bsf	3976,0,c	;volatile
 32322  011778                     
 32323                           ; BSR set to: 0
 32324  011778  B088               	btfsc	3976,0,c	;volatile
 32325  01177A  D7FE               	goto	l2760
 32326                           
 32327                           ;flash.c: 188: LATDbits.LD7 = 1;
 32328  01177C  8E8C               	bsf	3980,7,c	;volatile
 32329  01177E  0012               	return		;funcret
 32330  011780                     __end_of__flash_spi_tx_tx:
 32331                           	opt stack 0
 32332                           tosu	equ	0xFFF
 32333                           tosh	equ	0xFFE
 32334                           tosl	equ	0xFFD
 32335                           pclath	equ	0xFFA
 32336                           tblptru	equ	0xFF8
 32337                           tblptrh	equ	0xFF7
 32338                           tblptrl	equ	0xFF6
 32339                           tablat	equ	0xFF5
 32340                           prodh	equ	0xFF4
 32341                           prodl	equ	0xFF3
 32342                           intcon	equ	0xFF2
 32343                           intcon2	equ	0xFF1
 32344                           intcon3	equ	0xFF0
 32345                           postinc0	equ	0xFEE
 32346                           wreg	equ	0xFE8
 32347                           indf1	equ	0xFE7
 32348                           postinc1	equ	0xFE6
 32349                           postdec1	equ	0xFE5
 32350                           plusw1	equ	0xFE3
 32351                           fsr1h	equ	0xFE2
 32352                           fsr1l	equ	0xFE1
 32353                           indf2	equ	0xFDF
 32354                           postinc2	equ	0xFDE
 32355                           postdec2	equ	0xFDD
 32356                           plusw2	equ	0xFDB
 32357                           fsr2h	equ	0xFDA
 32358                           fsr2l	equ	0xFD9
 32359                           status	equ	0xFD8
 32360                           
 32361 ;; *************** function __flash_write_page_from_buffer *****************
 32362 ;; Defined at:
 32363 ;;		line 419 in file "flash.c"
 32364 ;; Parameters:    Size  Location     Type
 32365 ;;  page            2   19[BANK0 ] unsigned int 
 32366 ;;  buffer          1   21[BANK0 ] enum E6854
 32367 ;; Auto vars:     Size  Location     Type
 32368 ;;  command         4   25[BANK0 ] unsigned char [4]
 32369 ;; Return value:  Size  Location     Type
 32370 ;;                  1    wreg      void 
 32371 ;; Registers used:
 32372 ;;		wreg, status,2, status,0, cstack
 32373 ;; Tracked objects:
 32374 ;;		On entry : 0/0
 32375 ;;		On exit  : 0/0
 32376 ;;		Unchanged: 0/0
 32377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32378 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32379 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32380 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32381 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32382 ;;Total ram usage:       10 bytes
 32383 ;; Hardware stack levels used:    1
 32384 ;; Hardware stack levels required when called:   13
 32385 ;; This function calls:
 32386 ;;		__flash_spi_tx
 32387 ;;		_flash_is_busy
 32388 ;; This function is called by:
 32389 ;;		_flash_page_write
 32390 ;;		_flash_partial_write
 32391 ;; This function uses a non-reentrant model
 32392 ;;
 32393                           
 32394                           	psect	text146
 32395  012A46                     __ptext146:
 32396                           	opt stack 0
 32397  012A46                     __flash_write_page_from_buffer:
 32398                           	opt stack 13
 32399                           
 32400                           ;flash.c: 421: uint8_t command[4];;flash.c: 424: while(flash_is_busy());
 32401                           
 32402                           ;incstack = 0
 32403  012A46  ECAC  F09C         	call	_flash_is_busy	;wreg free
 32404  012A4A  0900               	iorlw	0
 32405  012A4C  A4D8               	btfss	status,2,c
 32406  012A4E  D7FB               	goto	__flash_write_page_from_buffer
 32407                           
 32408                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 32409  012A50  0100               	movlb	0	; () banked
 32410  012A52  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32411  012A54  A4D8               	btfss	status,2,c
 32412  012A56  D002               	goto	l2830
 32413                           
 32414                           ; BSR set to: 0
 32415                           ;flash.c: 428: command[0] = 0x83;
 32416  012A58  0E83               	movlw	131
 32417  012A5A  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32418  012A5C                     l2830:
 32419                           
 32420                           ; BSR set to: 0
 32421                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 32422                           
 32423                           ; BSR set to: 0
 32424  012A5C  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 32425  012A5E  A4D8               	btfss	status,2,c
 32426  012A60  D002               	goto	l2831
 32427                           
 32428                           ; BSR set to: 0
 32429                           ;flash.c: 430: command[0] = 0x86;
 32430  012A62  0E86               	movlw	134
 32431  012A64  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 32432  012A66                     l2831:
 32433                           
 32434                           ; BSR set to: 0
 32435                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 32436                           
 32437                           ; BSR set to: 0
 32438  012A66  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 32439  012A6A  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 32440  012A6E  0E07               	movlw	7
 32441  012A70  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 32442  012A72                     u16435:
 32443  012A72  90D8               	bcf	status,0,c
 32444  012A74  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 32445  012A76  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 32446  012A78  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 32447  012A7A  D7FB               	goto	u16435
 32448  012A7C  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 32449  012A7E  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 32450                           
 32451                           ; BSR set to: 0
 32452                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 32453  012A80  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 32454  012A82  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 32455  012A84  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 32456                           
 32457                           ;flash.c: 434: command[3] = 0x00;
 32458  012A86  0E00               	movlw	0
 32459  012A88  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 32460                           
 32461                           ; BSR set to: 0
 32462                           ;flash.c: 437: _flash_spi_tx(command, 4);
 32463  012A8A  0E79               	movlw	low __flash_write_page_from_buffer@command
 32464  012A8C  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 32465  012A8E  0E00               	movlw	high __flash_write_page_from_buffer@command
 32466  012A90  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 32467  012A92  0E00               	movlw	0
 32468  012A94  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 32469  012A96  0E04               	movlw	4
 32470  012A98  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 32471  012A9A  EC50  F095         	call	__flash_spi_tx	;wreg free
 32472  012A9E  0012               	return		;funcret
 32473  012AA0                     __end_of__flash_write_page_from_buffer:
 32474                           	opt stack 0
 32475                           tosu	equ	0xFFF
 32476                           tosh	equ	0xFFE
 32477                           tosl	equ	0xFFD
 32478                           pclath	equ	0xFFA
 32479                           tblptru	equ	0xFF8
 32480                           tblptrh	equ	0xFF7
 32481                           tblptrl	equ	0xFF6
 32482                           tablat	equ	0xFF5
 32483                           prodh	equ	0xFF4
 32484                           prodl	equ	0xFF3
 32485                           intcon	equ	0xFF2
 32486                           intcon2	equ	0xFF1
 32487                           intcon3	equ	0xFF0
 32488                           postinc0	equ	0xFEE
 32489                           wreg	equ	0xFE8
 32490                           indf1	equ	0xFE7
 32491                           postinc1	equ	0xFE6
 32492                           postdec1	equ	0xFE5
 32493                           plusw1	equ	0xFE3
 32494                           fsr1h	equ	0xFE2
 32495                           fsr1l	equ	0xFE1
 32496                           indf2	equ	0xFDF
 32497                           postinc2	equ	0xFDE
 32498                           postdec2	equ	0xFDD
 32499                           plusw2	equ	0xFDB
 32500                           fsr2h	equ	0xFDA
 32501                           fsr2l	equ	0xFD9
 32502                           status	equ	0xFD8
 32503                           
 32504 ;; *************** function __flash_compare_page_to_buffer *****************
 32505 ;; Defined at:
 32506 ;;		line 337 in file "flash.c"
 32507 ;; Parameters:    Size  Location     Type
 32508 ;;  page            2   19[BANK0 ] unsigned int 
 32509 ;;  buffer          1   21[BANK0 ] enum E6854
 32510 ;; Auto vars:     Size  Location     Type
 32511 ;;  command         4   27[BANK0 ] unsigned char [4]
 32512 ;;  status          2   25[BANK0 ] unsigned int 
 32513 ;; Return value:  Size  Location     Type
 32514 ;;                  1    wreg      enum E6858
 32515 ;; Registers used:
 32516 ;;		wreg, status,2, status,0, cstack
 32517 ;; Tracked objects:
 32518 ;;		On entry : 0/0
 32519 ;;		On exit  : 0/0
 32520 ;;		Unchanged: 0/0
 32521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32522 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32523 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32524 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32525 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32526 ;;Total ram usage:       12 bytes
 32527 ;; Hardware stack levels used:    1
 32528 ;; Hardware stack levels required when called:   13
 32529 ;; This function calls:
 32530 ;;		__flash_get_status
 32531 ;;		__flash_spi_tx
 32532 ;;		_flash_is_busy
 32533 ;; This function is called by:
 32534 ;;		_flash_page_write
 32535 ;;		_flash_partial_write
 32536 ;; This function uses a non-reentrant model
 32537 ;;
 32538                           
 32539                           	psect	text147
 32540  011DAA                     __ptext147:
 32541                           	opt stack 0
 32542  011DAA                     __flash_compare_page_to_buffer:
 32543                           	opt stack 13
 32544                           
 32545                           ;flash.c: 339: uint8_t command[4];;flash.c: 340: uint16_t status;;flash.c: 343: while(fl
      +                          ash_is_busy());
 32546                           
 32547                           ;incstack = 0
 32548  011DAA  ECAC  F09C         	call	_flash_is_busy	;wreg free
 32549  011DAE  0900               	iorlw	0
 32550  011DB0  A4D8               	btfss	status,2,c
 32551  011DB2  D7FB               	goto	__flash_compare_page_to_buffer
 32552                           
 32553                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 32554  011DB4  0100               	movlb	0	; () banked
 32555  011DB6  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 32556  011DB8  A4D8               	btfss	status,2,c
 32557  011DBA  D002               	goto	l2803
 32558                           
 32559                           ; BSR set to: 0
 32560                           ;flash.c: 347: command[0] = 0x60;
 32561  011DBC  0E60               	movlw	96
 32562  011DBE  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 32563  011DC0                     l2803:
 32564                           
 32565                           ; BSR set to: 0
 32566                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 32567                           
 32568                           ; BSR set to: 0
 32569  011DC0  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 32570  011DC2  A4D8               	btfss	status,2,c
 32571  011DC4  D002               	goto	l2804
 32572                           
 32573                           ; BSR set to: 0
 32574                           ;flash.c: 349: command[0] = 0x60;
 32575  011DC6  0E60               	movlw	96
 32576  011DC8  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 32577  011DCA                     l2804:
 32578                           
 32579                           ; BSR set to: 0
 32580                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 32581                           
 32582                           ; BSR set to: 0
 32583  011DCA  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 32584  011DCE  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 32585  011DD2  0E07               	movlw	7
 32586  011DD4  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 32587  011DD6                     u16345:
 32588  011DD6  90D8               	bcf	status,0,c
 32589  011DD8  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 32590  011DDA  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 32591  011DDC  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 32592  011DDE  D7FB               	goto	u16345
 32593  011DE0  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 32594  011DE2  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 32595                           
 32596                           ; BSR set to: 0
 32597                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 32598  011DE4  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 32599  011DE6  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 32600  011DE8  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 32601                           
 32602                           ;flash.c: 353: command[3] = 0x00;
 32603  011DEA  0E00               	movlw	0
 32604  011DEC  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 32605                           
 32606                           ; BSR set to: 0
 32607                           ;flash.c: 356: _flash_spi_tx(command, 4);
 32608  011DEE  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 32609  011DF0  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 32610  011DF2  0E00               	movlw	high __flash_compare_page_to_buffer@command
 32611  011DF4  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 32612  011DF6  0E00               	movlw	0
 32613  011DF8  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 32614  011DFA  0E04               	movlw	4
 32615  011DFC  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 32616  011DFE  EC50  F095         	call	__flash_spi_tx	;wreg free
 32617  011E02  ECAC  F09C         	call	_flash_is_busy	;wreg free
 32618  011E06  0900               	iorlw	0
 32619  011E08  A4D8               	btfss	status,2,c
 32620  011E0A  D7FB               	goto	l2806
 32621                           
 32622                           ;flash.c: 362: status = _flash_get_status();
 32623  011E0C  EC86  F09A         	call	__flash_get_status	;wreg free
 32624  011E10  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 32625  011E14  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 32626                           
 32627                           ;flash.c: 365: if(status & 0b0000000001000000)
 32628  011E18  0100               	movlb	0	; () banked
 32629  011E1A  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 32630  011E1C  D002               	goto	l2808
 32631                           
 32632                           ; BSR set to: 0
 32633                           ;flash.c: 366: {;flash.c: 368: return DATA_DOES_NOT_MATCH;
 32634  011E1E  0E01               	movlw	1
 32635                           
 32636                           ; BSR set to: 0
 32637                           ;flash.c: 369: }
 32638                           
 32639                           ; BSR set to: 0
 32640  011E20  0012               	return	
 32641  011E22                     l2808:
 32642                           
 32643                           ; BSR set to: 0
 32644                           ;flash.c: 370: else;flash.c: 371: {;flash.c: 373: return DATA_DOES_MATCH;
 32645                           
 32646                           ; BSR set to: 0
 32647  011E22  0E00               	movlw	0
 32648                           
 32649                           ; BSR set to: 0
 32650  011E24  0012               	return	
 32651  011E26                     __end_of__flash_compare_page_to_buffer:
 32652                           	opt stack 0
 32653                           tosu	equ	0xFFF
 32654                           tosh	equ	0xFFE
 32655                           tosl	equ	0xFFD
 32656                           pclath	equ	0xFFA
 32657                           tblptru	equ	0xFF8
 32658                           tblptrh	equ	0xFF7
 32659                           tblptrl	equ	0xFF6
 32660                           tablat	equ	0xFF5
 32661                           prodh	equ	0xFF4
 32662                           prodl	equ	0xFF3
 32663                           intcon	equ	0xFF2
 32664                           intcon2	equ	0xFF1
 32665                           intcon3	equ	0xFF0
 32666                           postinc0	equ	0xFEE
 32667                           wreg	equ	0xFE8
 32668                           indf1	equ	0xFE7
 32669                           postinc1	equ	0xFE6
 32670                           postdec1	equ	0xFE5
 32671                           plusw1	equ	0xFE3
 32672                           fsr1h	equ	0xFE2
 32673                           fsr1l	equ	0xFE1
 32674                           indf2	equ	0xFDF
 32675                           postinc2	equ	0xFDE
 32676                           postdec2	equ	0xFDD
 32677                           plusw2	equ	0xFDB
 32678                           fsr2h	equ	0xFDA
 32679                           fsr2l	equ	0xFD9
 32680                           status	equ	0xFD8
 32681                           
 32682 ;; *************** function _MSDReadHandler *****************
 32683 ;; Defined at:
 32684 ;;		line 1038 in file "usb_device_msd.c"
 32685 ;; Parameters:    Size  Location     Type
 32686 ;;		None
 32687 ;; Auto vars:     Size  Location     Type
 32688 ;;		None
 32689 ;; Return value:  Size  Location     Type
 32690 ;;                  1    wreg      unsigned char 
 32691 ;; Registers used:
 32692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32693 ;; Tracked objects:
 32694 ;;		On entry : 0/0
 32695 ;;		On exit  : 0/0
 32696 ;;		Unchanged: 0/0
 32697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32700 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32701 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32702 ;;Total ram usage:        4 bytes
 32703 ;; Hardware stack levels used:    1
 32704 ;; Hardware stack levels required when called:   16
 32705 ;; This function calls:
 32706 ;;		_ExternalFlash_SectorRead
 32707 ;;		_MSDCheckForErrorCases
 32708 ;;		_USBStallEndpoint
 32709 ;;		_USBTransferOnePacket
 32710 ;; This function is called by:
 32711 ;;		_MSDProcessCommandMediaPresent
 32712 ;; This function uses a non-reentrant model
 32713 ;;
 32714                           
 32715                           	psect	text148
 32716  00DF68                     __ptext148:
 32717                           	opt stack 0
 32718  00DF68                     _MSDReadHandler:
 32719                           	opt stack 10
 32720                           
 32721                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 32722                           
 32723                           ; BSR set to: 0
 32724                           ;incstack = 0
 32725  00DF68  D0DD               	goto	l685
 32726  00DF6A                     l686:
 32727                           
 32728                           ; BSR set to: 1
 32729                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 32730  00DF6A  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 32731                           
 32732                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 32733  00DF6E  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 32734                           
 32735                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 32736  00DF72  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 32737                           
 32738                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 32739  00DF76  C255  F1D9         	movff	_gblCBW+20,_LBA
 32740                           
 32741                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 32742  00DF7A  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 32743                           
 32744                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 32745  00DF7E  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 32746                           
 32747                           ; BSR set to: 1
 32748                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 32749  00DF82  0100               	movlb	0	; () banked
 32750  00DF84  51D9               	movf	_TransferLength& (0+255),w,b
 32751  00DF86  6F95               	movwf	??_MSDReadHandler& (0+255),b
 32752  00DF88  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 32753  00DF8A  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 32754  00DF8C  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 32755  00DF8E  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 32756  00DF90  0E09               	movlw	9
 32757  00DF92                     u16865:
 32758  00DF92  90D8               	bcf	status,0,c
 32759  00DF94  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 32760  00DF96  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 32761  00DF98  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 32762  00DF9A  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 32763  00DF9C  2EE8               	decfsz	wreg,f,c
 32764  00DF9E  D7F9               	goto	u16865
 32765  00DFA0  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 32766  00DFA4  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 32767  00DFA8  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 32768  00DFAC  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 32769  00DFB0  EC7D  F07E         	call	_MSDCheckForErrorCases	;wreg free
 32770  00DFB4  0900               	iorlw	0
 32771  00DFB6  A4D8               	btfss	status,2,c
 32772  00DFB8  D0C7               	goto	l688
 32773                           
 32774                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 32775                           
 32776                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 32777  00DFBA  0E01               	movlw	1
 32778  00DFBC  0101               	movlb	1	; () banked
 32779  00DFBE  6FF9               	movwf	_MSDReadState& (0+255),b
 32780  00DFC0                     
 32781                           ; BSR set to: 1
 32782                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 32783                           
 32784                           ; BSR set to: 1
 32785  00DFC0  0100               	movlb	0	; () banked
 32786  00DFC2  51D9               	movf	_TransferLength& (0+255),w,b
 32787  00DFC4  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 32788  00DFC6  B4D8               	btfsc	status,2,c
 32789  00DFC8  D0A9               	goto	l18315
 32790                           
 32791                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 32792                           
 32793                           ; BSR set to: 1
 32794                           
 32795                           ;usb_device_msd.c: 1067: break;
 32796                           
 32797                           ; BSR set to: 0
 32798                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 32799  00DFCA  0100               	movlb	0	; () banked
 32800  00DFCC  07D9               	decf	_TransferLength& (0+255),f,b
 32801  00DFCE  A0D8               	btfss	status,0,c
 32802  00DFD0  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 32803                           
 32804                           ; BSR set to: 0
 32805                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 32806  00DFD2  0E02               	movlw	2
 32807  00DFD4  0101               	movlb	1	; () banked
 32808  00DFD6  6FF9               	movwf	_MSDReadState& (0+255),b
 32809  00DFD8                     
 32810                           ; BSR set to: 1
 32811                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 32812                           
 32813                           ; BSR set to: 1
 32814  00DFD8  0100               	movlb	0	; () banked
 32815  00DFDA  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 32816  00DFDC  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32817  00DFDE  B4D8               	btfsc	status,2,c
 32818  00DFE0  D006               	goto	l692
 32819                           
 32820                           ; BSR set to: 0
 32821  00DFE2  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 32822  00DFE6  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32823  00DFEA  BEDF               	btfsc	indf2,7,c
 32824  00DFEC  D0AD               	goto	l688
 32825  00DFEE                     l692:
 32826                           
 32827                           ; BSR set to: 0
 32828                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 32829                           
 32830                           ; BSR set to: 0
 32831  00DFEE  C2D0  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 32832  00DFF2  C2D1  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 32833  00DFF6  C1D9  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 32834  00DFFA  C1DA  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 32835  00DFFE  C1DB  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 32836  00E002  C1DC  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 32837  00E006  0E00               	movlw	0
 32838  00E008  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 32839  00E00A  0E06               	movlw	6
 32840  00E00C  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 32841  00E00E  EE22  F0C7         	lfsr	2,_LUN+12
 32842  00E012  D801               	call	u16918
 32843  00E014  D00A               	goto	u16919
 32844  00E016                     u16918:
 32845  00E016  0005               	push	
 32846  00E018  6EFA               	movwf	pclath,c
 32847  00E01A  50DE               	movf	postinc2,w,c
 32848  00E01C  6EFD               	movwf	tosl,c
 32849  00E01E  50DE               	movf	postinc2,w,c
 32850  00E020  6EFE               	movwf	tosh,c
 32851  00E022  50DE               	movf	postinc2,w,c
 32852  00E024  6EFF               	movwf	tosu,c
 32853  00E026  50FA               	movf	pclath,w,c
 32854  00E028  0012               	return		;indir
 32855  00E02A                     u16919:
 32856  00E02A  06E8               	decf	wreg,f,c
 32857  00E02C  B4D8               	btfsc	status,2,c
 32858  00E02E  D019               	goto	l695
 32859                           
 32860                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 32861  00E030  0E64               	movlw	100
 32862  00E032  0101               	movlb	1	; () banked
 32863  00E034  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 32864  00E036  D002               	goto	l694
 32865                           
 32866                           ; BSR set to: 1
 32867                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 32868  00E038  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 32869                           
 32870                           ;usb_device_msd.c: 1088: break;
 32871  00E03A  D086               	goto	l688
 32872  00E03C                     l694:
 32873                           
 32874                           ; BSR set to: 1
 32875                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 32876                           
 32877                           ; BSR set to: 1
 32878  00E03C  0E02               	movlw	2
 32879  00E03E  010D               	movlb	13	; () banked
 32880  00E040  6F8C               	movwf	140,b	;volatile
 32881                           
 32882                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 32883  00E042  0102               	movlb	2	; () banked
 32884  00E044  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32885  00E046  0BF0               	andlw	-16
 32886  00E048  0903               	iorlw	3
 32887  00E04A  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32888                           
 32889                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 32890  00E04C  0E00               	movlw	0
 32891  00E04E  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32892                           
 32893                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 32894  00E050  0E00               	movlw	0
 32895  00E052  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32896                           
 32897                           ; BSR set to: 2
 32898                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 32899  00E054  0E01               	movlw	1
 32900  00E056  0100               	movlb	0	; () banked
 32901  00E058  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32902  00E05A  0E02               	movlw	2
 32903  00E05C  EC70  F07B         	call	_USBStallEndpoint
 32904  00E060  D05D               	goto	l18315
 32905  00E062                     l695:
 32906                           
 32907                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 32908                           
 32909                           ; BSR set to: 1
 32910                           
 32911                           ; BSR set to: 1
 32912  00E062  0E01               	movlw	1
 32913  00E064  0101               	movlb	1	; () banked
 32914  00E066  27D9               	addwf	_LBA& (0+255),f,b
 32915  00E068  0E00               	movlw	0
 32916  00E06A  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 32917  00E06C  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 32918  00E06E  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 32919                           
 32920                           ; BSR set to: 1
 32921                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 32922  00E070  0E00               	movlw	0
 32923  00E072  010D               	movlb	13	; () banked
 32924  00E074  6F88               	movwf	136,b	;volatile
 32925  00E076  0E02               	movlw	2
 32926  00E078  6F89               	movwf	137,b	;volatile
 32927  00E07A  0E00               	movlw	0
 32928  00E07C  6F8A               	movwf	138,b	;volatile
 32929  00E07E  0E00               	movlw	0
 32930  00E080  6F8B               	movwf	139,b	;volatile
 32931                           
 32932                           ; BSR set to: 13
 32933                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 32934  00E082  0E00               	movlw	0
 32935  00E084  0101               	movlb	1	; () banked
 32936  00E086  6FEB               	movwf	_ptrNextData& (0+255),b
 32937  00E088  0E06               	movlw	6
 32938  00E08A  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 32939                           
 32940                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 32941  00E08C  0E03               	movlw	3
 32942  00E08E  6FF9               	movwf	_MSDReadState& (0+255),b
 32943  00E090                     
 32944                           ; BSR set to: 1
 32945                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 32946                           
 32947                           ; BSR set to: 1
 32948  00E090  010D               	movlb	13	; () banked
 32949  00E092  5188               	movf	136,w,b	;volatile
 32950  00E094  1189               	iorwf	137,w,b	;volatile
 32951  00E096  118A               	iorwf	138,w,b	;volatile
 32952  00E098  118B               	iorwf	139,w,b	;volatile
 32953  00E09A  A4D8               	btfss	status,2,c
 32954  00E09C  D002               	goto	l697
 32955                           
 32956                           ; BSR set to: 13
 32957                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 32958  00E09E  0E01               	movlw	1
 32959  00E0A0  D03E               	goto	L29
 32960  00E0A2                     l697:
 32961                           
 32962                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 32963                           
 32964                           ; BSR set to: 1
 32965  00E0A2  0E04               	movlw	4
 32966  00E0A4  0101               	movlb	1	; () banked
 32967  00E0A6  6FF9               	movwf	_MSDReadState& (0+255),b
 32968  00E0A8                     
 32969                           ; BSR set to: 1
 32970                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 32971                           
 32972                           ; BSR set to: 1
 32973  00E0A8  0100               	movlb	0	; () banked
 32974  00E0AA  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 32975  00E0AC  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32976  00E0AE  B4D8               	btfsc	status,2,c
 32977  00E0B0  D006               	goto	l699
 32978                           
 32979                           ; BSR set to: 0
 32980  00E0B2  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 32981  00E0B6  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32982  00E0BA  BEDF               	btfsc	indf2,7,c
 32983  00E0BC  D045               	goto	l688
 32984  00E0BE                     l699:
 32985                           
 32986                           ; BSR set to: 0
 32987                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 32988                           
 32989                           ; BSR set to: 0
 32990  00E0BE  0E01               	movlw	1
 32991  00E0C0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32992  00E0C2  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 32993  00E0C6  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 32994  00E0CA  0E40               	movlw	64
 32995  00E0CC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32996  00E0CE  0E02               	movlw	2
 32997  00E0D0  ECF5  F07B         	call	_USBTransferOnePacket
 32998  00E0D4  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32999  00E0D8  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33000                           
 33001                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 33002  00E0DC  0E03               	movlw	3
 33003  00E0DE  0101               	movlb	1	; () banked
 33004  00E0E0  6FF9               	movwf	_MSDReadState& (0+255),b
 33005                           
 33006                           ; BSR set to: 1
 33007                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 33008  00E0E2  0E40               	movlw	64
 33009  00E0E4  0102               	movlb	2	; () banked
 33010  00E0E6  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 33011  00E0E8  0E00               	movlw	0
 33012  00E0EA  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 33013  00E0EC  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 33014  00E0EE  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 33015                           
 33016                           ; BSR set to: 2
 33017                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 33018  00E0F0  0E40               	movlw	64
 33019  00E0F2  010D               	movlb	13	; () banked
 33020  00E0F4  5F88               	subwf	136,f,b	;volatile
 33021  00E0F6  0E00               	movlw	0
 33022  00E0F8  5B89               	subwfb	137,f,b	;volatile
 33023  00E0FA  5B8A               	subwfb	138,f,b	;volatile
 33024  00E0FC  5B8B               	subwfb	139,f,b	;volatile
 33025                           
 33026                           ; BSR set to: 13
 33027                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 33028  00E0FE  0E40               	movlw	64
 33029  00E100  0101               	movlb	1	; () banked
 33030  00E102  27EB               	addwf	_ptrNextData& (0+255),f,b
 33031  00E104  0E00               	movlw	0
 33032  00E106  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33033                           
 33034                           ;usb_device_msd.c: 1149: break;
 33035  00E108  D01F               	goto	l688
 33036  00E10A                     
 33037                           ; BSR set to: 1
 33038                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 33039                           
 33040                           ; BSR set to: 1
 33041  00E10A  0E02               	movlw	2
 33042  00E10C  010D               	movlb	13	; () banked
 33043  00E10E  6F8C               	movwf	140,b	;volatile
 33044                           
 33045                           ; BSR set to: 13
 33046                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 33047  00E110  0E01               	movlw	1
 33048  00E112  0100               	movlb	0	; () banked
 33049  00E114  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33050  00E116  0E02               	movlw	2
 33051  00E118  EC70  F07B         	call	_USBStallEndpoint
 33052  00E11C                     l18315:
 33053                           
 33054                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 33055  00E11C  0E00               	movlw	0
 33056  00E11E                     L29:
 33057  00E11E  0101               	movlb	1	; () banked
 33058  00E120  6FF9               	movwf	_MSDReadState& (0+255),b
 33059                           
 33060                           ; BSR set to: 1
 33061                           ;usb_device_msd.c: 1159: }
 33062                           
 33063                           ;usb_device_msd.c: 1158: break;
 33064  00E122  D012               	goto	l688
 33065  00E124                     l685:
 33066                           
 33067                           ; BSR set to: 1
 33068  00E124  0101               	movlb	1	; () banked
 33069  00E126  51F9               	movf	_MSDReadState& (0+255),w,b
 33070                           
 33071                           ; Switch size 1, requested type "space"
 33072                           ; Number of cases is 5, Range of values is 0 to 4
 33073                           ; switch strategies available:
 33074                           ; Name         Instructions Cycles
 33075                           ; simple_byte           16     9 (average)
 33076                           ;	Chosen strategy is simple_byte
 33077  00E128  0A00               	xorlw	0	; case 0
 33078  00E12A  B4D8               	btfsc	status,2,c
 33079  00E12C  D71E               	goto	l686
 33080  00E12E  0A01               	xorlw	1	; case 1
 33081  00E130  B4D8               	btfsc	status,2,c
 33082  00E132  D746               	goto	l689
 33083  00E134  0A03               	xorlw	3	; case 2
 33084  00E136  B4D8               	btfsc	status,2,c
 33085  00E138  D74F               	goto	l691
 33086  00E13A  0A01               	xorlw	1	; case 3
 33087  00E13C  B4D8               	btfsc	status,2,c
 33088  00E13E  D7A8               	goto	l696
 33089  00E140  0A07               	xorlw	7	; case 4
 33090  00E142  B4D8               	btfsc	status,2,c
 33091  00E144  D7B1               	goto	l698
 33092  00E146  D7E1               	goto	l700
 33093  00E148                     l688:
 33094                           
 33095                           ;usb_device_msd.c: 1161: return MSDReadState;
 33096                           
 33097                           ; BSR set to: 1
 33098  00E148  0101               	movlb	1	; () banked
 33099  00E14A  51F9               	movf	_MSDReadState& (0+255),w,b
 33100  00E14C  0012               	return	
 33101  00E14E                     __end_of_MSDReadHandler:
 33102                           	opt stack 0
 33103                           tosu	equ	0xFFF
 33104                           tosh	equ	0xFFE
 33105                           tosl	equ	0xFFD
 33106                           pclath	equ	0xFFA
 33107                           tblptru	equ	0xFF8
 33108                           tblptrh	equ	0xFF7
 33109                           tblptrl	equ	0xFF6
 33110                           tablat	equ	0xFF5
 33111                           prodh	equ	0xFF4
 33112                           prodl	equ	0xFF3
 33113                           intcon	equ	0xFF2
 33114                           intcon2	equ	0xFF1
 33115                           intcon3	equ	0xFF0
 33116                           postinc0	equ	0xFEE
 33117                           wreg	equ	0xFE8
 33118                           indf1	equ	0xFE7
 33119                           postinc1	equ	0xFE6
 33120                           postdec1	equ	0xFE5
 33121                           plusw1	equ	0xFE3
 33122                           fsr1h	equ	0xFE2
 33123                           fsr1l	equ	0xFE1
 33124                           indf2	equ	0xFDF
 33125                           postinc2	equ	0xFDE
 33126                           postdec2	equ	0xFDD
 33127                           plusw2	equ	0xFDB
 33128                           fsr2h	equ	0xFDA
 33129                           fsr2l	equ	0xFD9
 33130                           status	equ	0xFD8
 33131                           
 33132 ;; *************** function _MSDCheckForErrorCases *****************
 33133 ;; Defined at:
 33134 ;;		line 1434 in file "usb_device_msd.c"
 33135 ;; Parameters:    Size  Location     Type
 33136 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 33137 ;; Auto vars:     Size  Location     Type
 33138 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 33139 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 33140 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 33141 ;; Return value:  Size  Location     Type
 33142 ;;                  1    wreg      unsigned char 
 33143 ;; Registers used:
 33144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33145 ;; Tracked objects:
 33146 ;;		On entry : 0/0
 33147 ;;		On exit  : 0/0
 33148 ;;		Unchanged: 0/0
 33149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33151 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33153 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33154 ;;Total ram usage:        7 bytes
 33155 ;; Hardware stack levels used:    1
 33156 ;; Hardware stack levels required when called:   12
 33157 ;; This function calls:
 33158 ;;		_MSDErrorHandler
 33159 ;; This function is called by:
 33160 ;;		_MSDProcessCommandMediaPresent
 33161 ;;		_MSDReadHandler
 33162 ;;		_MSDWriteHandler
 33163 ;; This function uses a non-reentrant model
 33164 ;;
 33165                           
 33166                           	psect	text149
 33167  00FCFA                     __ptext149:
 33168                           	opt stack 0
 33169  00FCFA                     _MSDCheckForErrorCases:
 33170                           	opt stack 13
 33171                           
 33172                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 33173                           
 33174                           ; BSR set to: 1
 33175                           ;incstack = 0
 33176  00FCFA  0100               	movlb	0	; () banked
 33177  00FCFC  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33178  00FCFE  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33179  00FD00  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33180  00FD02  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33181  00FD04  A4D8               	btfss	status,2,c
 33182  00FD06  D002               	goto	l730
 33183                           
 33184                           ; BSR set to: 0
 33185                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 33186  00FD08  0E01               	movlw	1
 33187  00FD0A  D001               	goto	L30
 33188  00FD0C                     l730:
 33189                           
 33190                           ; BSR set to: 0
 33191                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 33192                           
 33193                           ; BSR set to: 0
 33194  00FD0C  0E00               	movlw	0
 33195  00FD0E                     L30:
 33196  00FD0E  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 33197                           
 33198                           ; BSR set to: 0
 33199                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 33200                           
 33201                           ; BSR set to: 0
 33202  00FD10  05E5               	decf	_MSDHostNoData& (0+255),w,b
 33203  00FD12  A4D8               	btfss	status,2,c
 33204  00FD14  D005               	goto	l732
 33205                           
 33206                           ; BSR set to: 0
 33207  00FD16  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33208  00FD18  A4D8               	btfss	status,2,c
 33209  00FD1A  D002               	goto	l732
 33210                           
 33211                           ; BSR set to: 0
 33212                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 33213  00FD1C  0E00               	movlw	0
 33214                           
 33215                           ; BSR set to: 0
 33216  00FD1E  0012               	return	
 33217  00FD20                     l732:
 33218                           
 33219                           ; BSR set to: 0
 33220                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 33221                           
 33222                           ; BSR set to: 0
 33223  00FD20  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33224  00FD22  0102               	movlb	2	; () banked
 33225  00FD24  1949               	xorwf	(_gblCBW+8)& (0+255),w,b
 33226  00FD26  E120               	bnz	l18113
 33227  00FD28  0100               	movlb	0	; () banked
 33228  00FD2A  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33229  00FD2C  0102               	movlb	2	; () banked
 33230  00FD2E  194A               	xorwf	(_gblCBW+9)& (0+255),w,b
 33231  00FD30  E11B               	bnz	l18113
 33232  00FD32  0100               	movlb	0	; () banked
 33233  00FD34  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33234  00FD36  0102               	movlb	2	; () banked
 33235  00FD38  194B               	xorwf	(_gblCBW+10)& (0+255),w,b
 33236  00FD3A  E116               	bnz	l18113
 33237  00FD3C  0100               	movlb	0	; () banked
 33238  00FD3E  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33239  00FD40  0102               	movlb	2	; () banked
 33240  00FD42  194C               	xorwf	(_gblCBW+11)& (0+255),w,b
 33241  00FD44  A4D8               	btfss	status,2,c
 33242  00FD46  D010               	goto	l738
 33243                           
 33244                           ; BSR set to: 2
 33245                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 33246  00FD48  0100               	movlb	0	; () banked
 33247  00FD4A  05E7               	decf	_MSD_State& (0+255),w,b
 33248  00FD4C  A4D8               	btfss	status,2,c
 33249  00FD4E  D006               	goto	l735
 33250                           
 33251                           ; BSR set to: 0
 33252                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 33253  00FD50  0E2A               	movlw	42
 33254  00FD52  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 33255  00FD54  B4D8               	btfsc	status,2,c
 33256  00FD56  D008               	goto	l738
 33257                           
 33258                           ; BSR set to: 0
 33259                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 33260  00FD58  0E00               	movlw	0
 33261                           
 33262                           ; BSR set to: 0
 33263  00FD5A  0012               	return	
 33264  00FD5C                     l735:
 33265                           
 33266                           ; BSR set to: 0
 33267                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 33268                           
 33269                           ; BSR set to: 0
 33270  00FD5C  0E2A               	movlw	42
 33271  00FD5E  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 33272  00FD60  A4D8               	btfss	status,2,c
 33273  00FD62  D002               	goto	l738
 33274                           
 33275                           ; BSR set to: 0
 33276                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 33277  00FD64  0E00               	movlw	0
 33278                           
 33279                           ; BSR set to: 0
 33280  00FD66  0012               	return	
 33281  00FD68                     l738:
 33282  00FD68                     l18113:
 33283                           
 33284                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 33285  00FD68  0102               	movlb	2	; () banked
 33286  00FD6A  5149               	movf	(_gblCBW+8)& (0+255),w,b
 33287  00FD6C  0100               	movlb	0	; () banked
 33288  00FD6E  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 33289  00FD70  0102               	movlb	2	; () banked
 33290  00FD72  514A               	movf	(_gblCBW+9)& (0+255),w,b
 33291  00FD74  0100               	movlb	0	; () banked
 33292  00FD76  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 33293  00FD78  0102               	movlb	2	; () banked
 33294  00FD7A  514B               	movf	(_gblCBW+10)& (0+255),w,b
 33295  00FD7C  0100               	movlb	0	; () banked
 33296  00FD7E  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 33297  00FD80  0102               	movlb	2	; () banked
 33298  00FD82  514C               	movf	(_gblCBW+11)& (0+255),w,b
 33299  00FD84  0100               	movlb	0	; () banked
 33300  00FD86  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 33301  00FD88  B0D8               	btfsc	status,0,c
 33302  00FD8A  D002               	goto	l739
 33303                           
 33304                           ; BSR set to: 0
 33305                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 33306  00FD8C  0E01               	movlw	1
 33307  00FD8E  D001               	goto	L31
 33308  00FD90                     l739:
 33309                           
 33310                           ; BSR set to: 0
 33311                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 33312                           
 33313                           ; BSR set to: 0
 33314  00FD90  0E00               	movlw	0
 33315  00FD92                     L31:
 33316  00FD92  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 33317                           
 33318                           ; BSR set to: 0
 33319                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 33320                           
 33321                           ; BSR set to: 0
 33322  00FD94  0E02               	movlw	2
 33323  00FD96  19E7               	xorwf	_MSD_State& (0+255),w,b
 33324  00FD98  A4D8               	btfss	status,2,c
 33325  00FD9A  D014               	goto	l741
 33326                           
 33327                           ; BSR set to: 0
 33328                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 33329  00FD9C  0E2A               	movlw	42
 33330  00FD9E  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 33331  00FDA0  B4D8               	btfsc	status,2,c
 33332  00FDA2  D005               	goto	l742
 33333                           
 33334                           ; BSR set to: 0
 33335  00FDA4  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33336  00FDA6  A4D8               	btfss	status,2,c
 33337  00FDA8  D002               	goto	l742
 33338  00FDAA                     u16720:
 33339                           
 33340                           ; BSR set to: 0
 33341                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 33342  00FDAA  0E05               	movlw	5
 33343  00FDAC  D01D               	goto	L34
 33344  00FDAE                     l742:
 33345                           
 33346                           ; BSR set to: 0
 33347                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 33348                           
 33349                           ; BSR set to: 0
 33350  00FDAE  05E5               	decf	_MSDHostNoData& (0+255),w,b
 33351  00FDB0  B4D8               	btfsc	status,2,c
 33352  00FDB2  D00F               	goto	u16770
 33353                           
 33354                           ; BSR set to: 0
 33355                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 33356                           
 33357                           ; BSR set to: 0
 33358                           
 33359                           ; BSR set to: 0
 33360                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 33361  00FDB4  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33362  00FDB6  B4D8               	btfsc	status,2,c
 33363  00FDB8  D003               	goto	u16750
 33364                           
 33365                           ; BSR set to: 0
 33366                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 33367                           
 33368                           ; BSR set to: 0
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 33372  00FDBA  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 33373  00FDBC  A4D8               	btfss	status,2,c
 33374  00FDBE  D7F5               	goto	u16720
 33375  00FDC0                     u16750:
 33376                           
 33377                           ; BSR set to: 0
 33378                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 33379  00FDC0  0E04               	movlw	4
 33380  00FDC2  D012               	goto	L34
 33381  00FDC4                     l741:
 33382                           
 33383                           ; BSR set to: 0
 33384                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 33385                           
 33386                           ; BSR set to: 0
 33387  00FDC4  0E2A               	movlw	42
 33388  00FDC6  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 33389  00FDC8  B4D8               	btfsc	status,2,c
 33390  00FDCA  D00D               	goto	l757
 33391                           
 33392                           ; BSR set to: 0
 33393                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 33394                           
 33395                           ; BSR set to: 0
 33396                           
 33397                           ; BSR set to: 0
 33398                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 33399  00FDCC  05E5               	decf	_MSDHostNoData& (0+255),w,b
 33400  00FDCE  A4D8               	btfss	status,2,c
 33401  00FDD0  D002               	goto	l753
 33402  00FDD2                     u16770:
 33403                           
 33404                           ; BSR set to: 0
 33405                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 33406  00FDD2  0E01               	movlw	1
 33407  00FDD4  D009               	goto	L34
 33408  00FDD6                     l753:
 33409                           
 33410                           ; BSR set to: 0
 33411                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 33412                           
 33413                           ; BSR set to: 0
 33414  00FDD6  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 33415  00FDD8  B4D8               	btfsc	status,2,c
 33416  00FDDA  D003               	goto	u16790
 33417                           
 33418                           ; BSR set to: 0
 33419                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 33420                           
 33421                           ; BSR set to: 0
 33422                           
 33423                           ; BSR set to: 0
 33424                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 33425  00FDDC  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 33426  00FDDE  A4D8               	btfss	status,2,c
 33427  00FDE0  D002               	goto	l757
 33428  00FDE2                     u16790:
 33429                           
 33430                           ; BSR set to: 0
 33431                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 33432  00FDE2  0E02               	movlw	2
 33433  00FDE4  D001               	goto	L34
 33434  00FDE6                     l757:
 33435                           
 33436                           ; BSR set to: 0
 33437                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 33438                           
 33439                           ; BSR set to: 0
 33440  00FDE6  0E03               	movlw	3
 33441  00FDE8                     L34:
 33442  00FDE8  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 33443                           
 33444                           ; BSR set to: 0
 33445                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 33446                           
 33447                           ; BSR set to: 0
 33448                           
 33449                           ; BSR set to: 0
 33450                           
 33451                           ; BSR set to: 0
 33452                           
 33453                           ; BSR set to: 0
 33454                           
 33455                           ; BSR set to: 0
 33456  00FDEA  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 33457  00FDEC  ECD3  F079         	call	_MSDErrorHandler
 33458                           
 33459                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 33460  00FDF0  0100               	movlb	0	; () banked
 33461  00FDF2  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 33462  00FDF4  0012               	return	
 33463  00FDF6                     __end_of_MSDCheckForErrorCases:
 33464                           	opt stack 0
 33465                           tosu	equ	0xFFF
 33466                           tosh	equ	0xFFE
 33467                           tosl	equ	0xFFD
 33468                           pclath	equ	0xFFA
 33469                           tblptru	equ	0xFF8
 33470                           tblptrh	equ	0xFF7
 33471                           tblptrl	equ	0xFF6
 33472                           tablat	equ	0xFF5
 33473                           prodh	equ	0xFF4
 33474                           prodl	equ	0xFF3
 33475                           intcon	equ	0xFF2
 33476                           intcon2	equ	0xFF1
 33477                           intcon3	equ	0xFF0
 33478                           postinc0	equ	0xFEE
 33479                           wreg	equ	0xFE8
 33480                           indf1	equ	0xFE7
 33481                           postinc1	equ	0xFE6
 33482                           postdec1	equ	0xFE5
 33483                           plusw1	equ	0xFE3
 33484                           fsr1h	equ	0xFE2
 33485                           fsr1l	equ	0xFE1
 33486                           indf2	equ	0xFDF
 33487                           postinc2	equ	0xFDE
 33488                           postdec2	equ	0xFDD
 33489                           plusw2	equ	0xFDB
 33490                           fsr2h	equ	0xFDA
 33491                           fsr2l	equ	0xFD9
 33492                           status	equ	0xFD8
 33493                           
 33494 ;; *************** function _MSDErrorHandler *****************
 33495 ;; Defined at:
 33496 ;;		line 1577 in file "usb_device_msd.c"
 33497 ;; Parameters:    Size  Location     Type
 33498 ;;  ErrorCase       1    wreg     unsigned char 
 33499 ;; Auto vars:     Size  Location     Type
 33500 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 33501 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 33502 ;; Return value:  Size  Location     Type
 33503 ;;                  1    wreg      void 
 33504 ;; Registers used:
 33505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33506 ;; Tracked objects:
 33507 ;;		On entry : 0/0
 33508 ;;		On exit  : 0/0
 33509 ;;		Unchanged: 0/0
 33510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33515 ;;Total ram usage:        2 bytes
 33516 ;; Hardware stack levels used:    1
 33517 ;; Hardware stack levels required when called:   11
 33518 ;; This function calls:
 33519 ;;		_ResetSenseData
 33520 ;;		_USBStallEndpoint
 33521 ;; This function is called by:
 33522 ;;		_MSDProcessCommandMediaAbsent
 33523 ;;		_MSDProcessCommandMediaPresent
 33524 ;;		_MSDCheckForErrorCases
 33525 ;; This function uses a non-reentrant model
 33526 ;;
 33527                           
 33528                           	psect	text150
 33529  00F3A6                     __ptext150:
 33530                           	opt stack 0
 33531  00F3A6                     _MSDErrorHandler:
 33532                           	opt stack 13
 33533                           
 33534                           ; BSR set to: 0
 33535                           ;incstack = 0
 33536                           ;MSDErrorHandler@ErrorCase stored from wreg
 33537  00F3A6  0100               	movlb	0	; () banked
 33538  00F3A8  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 33539                           
 33540                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 33541  00F3AA  0100               	movlb	0	; () banked
 33542  00F3AC  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 33543  00F3AE  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 33544  00F3B0  B4D8               	btfsc	status,2,c
 33545  00F3B2  D006               	goto	u16530
 33546                           
 33547                           ; BSR set to: 0
 33548  00F3B4  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 33549  00F3B8  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33550  00F3BC  BEDF               	btfsc	indf2,7,c
 33551  00F3BE  0012               	return	
 33552  00F3C0                     u16530:
 33553                           
 33554                           ; BSR set to: 0
 33555                           
 33556                           ; BSR set to: 0
 33557  00F3C0  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 33558  00F3C2  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33559  00F3C4  B4D8               	btfsc	status,2,c
 33560  00F3C6  D006               	goto	l761
 33561                           
 33562                           ; BSR set to: 0
 33563  00F3C8  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33564  00F3CC  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33565  00F3D0  BEDF               	btfsc	indf2,7,c
 33566  00F3D2  0012               	return	
 33567  00F3D4                     l761:
 33568                           
 33569                           ; BSR set to: 0
 33570                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 33571  00F3D4  C0E7  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 33572                           
 33573                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 33574  00F3D8  69E6               	setf	_MSDCommandState& (0+255),b
 33575                           
 33576                           ; BSR set to: 0
 33577                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 33578  00F3DA  0E00               	movlw	0
 33579  00F3DC  0101               	movlb	1	; () banked
 33580  00F3DE  6FF9               	movwf	_MSDReadState& (0+255),b
 33581                           
 33582                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 33583  00F3E0  0E00               	movlw	0
 33584  00F3E2  6E1F               	movwf	_MSDWriteState,c
 33585                           
 33586                           ; BSR set to: 1
 33587                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 33588  00F3E4  C249  FD88         	movff	_gblCBW+8,3464	;volatile
 33589  00F3E8  C24A  FD89         	movff	_gblCBW+9,3465	;volatile
 33590  00F3EC  C24B  FD8A         	movff	_gblCBW+10,3466	;volatile
 33591  00F3F0  C24C  FD8B         	movff	_gblCBW+11,3467	;volatile
 33592                           
 33593                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 33594  00F3F4  0E01               	movlw	1
 33595  00F3F6  010D               	movlb	13	; () banked
 33596  00F3F8  6F8C               	movwf	140,b	;volatile
 33597                           
 33598                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 33599  00F3FA  0E03               	movlw	3
 33600  00F3FC  0100               	movlb	0	; () banked
 33601  00F3FE  6FE7               	movwf	_MSD_State& (0+255),b
 33602                           
 33603                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 33604  00F400  D04B               	goto	l767
 33605  00F402                     
 33606                           ; BSR set to: 0
 33607                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 33608                           
 33609                           ; BSR set to: 0
 33610  00F402  0E02               	movlw	2
 33611  00F404  010D               	movlb	13	; () banked
 33612  00F406  6F8C               	movwf	140,b	;volatile
 33613                           
 33614                           ;usb_device_msd.c: 1607: break;
 33615  00F408  0012               	return	
 33616  00F40A                     
 33617                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 33618                           
 33619                           ; BSR set to: 13
 33620  00F40A  0E01               	movlw	1
 33621  00F40C  0100               	movlb	0	; () banked
 33622  00F40E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33623  00F410  0E02               	movlw	2
 33624  00F412  EC70  F07B         	call	_USBStallEndpoint
 33625                           
 33626                           ;usb_device_msd.c: 1611: break;
 33627  00F416  0012               	return	
 33628  00F418                     
 33629                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 33630  00F418  0E02               	movlw	2
 33631  00F41A  010D               	movlb	13	; () banked
 33632  00F41C  6F8C               	movwf	140,b	;volatile
 33633                           
 33634                           ; BSR set to: 13
 33635                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 33636  00F41E  0E01               	movlw	1
 33637  00F420  0100               	movlb	0	; () banked
 33638  00F422  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33639  00F424  0E02               	movlw	2
 33640  00F426  EC70  F07B         	call	_USBStallEndpoint
 33641                           
 33642                           ;usb_device_msd.c: 1616: break;
 33643  00F42A  0012               	return	
 33644  00F42C                     
 33645                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 33646  00F42C  0E00               	movlw	0
 33647  00F42E  0100               	movlb	0	; () banked
 33648  00F430  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33649  00F432  0E02               	movlw	2
 33650  00F434  EC70  F07B         	call	_USBStallEndpoint
 33651                           
 33652                           ;usb_device_msd.c: 1620: break;
 33653  00F438  0012               	return	
 33654  00F43A                     
 33655                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 33656  00F43A  0E02               	movlw	2
 33657  00F43C  010D               	movlb	13	; () banked
 33658  00F43E  6F8C               	movwf	140,b	;volatile
 33659                           
 33660                           ; BSR set to: 13
 33661                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 33662  00F440  0E00               	movlw	0
 33663  00F442  0100               	movlb	0	; () banked
 33664  00F444  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33665  00F446  0E02               	movlw	2
 33666  00F448  EC70  F07B         	call	_USBStallEndpoint
 33667                           
 33668                           ;usb_device_msd.c: 1625: break;
 33669  00F44C  0012               	return	
 33670  00F44E                     
 33671                           ;usb_device_msd.c: 1628: ResetSenseData();
 33672  00F44E  ECF3  F092         	call	_ResetSenseData	;wreg free
 33673                           
 33674                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 33675  00F452  0102               	movlb	2	; () banked
 33676  00F454  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33677  00F456  0BF0               	andlw	-16
 33678  00F458  0905               	iorlw	5
 33679  00F45A  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33680                           
 33681                           ; BSR set to: 2
 33682                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 33683  00F45C  0E20               	movlw	32
 33684  00F45E  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33685                           
 33686                           ; BSR set to: 2
 33687                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 33688  00F460  0E00               	movlw	0
 33689  00F462  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33690                           
 33691                           ; BSR set to: 2
 33692                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 33693  00F464  0E02               	movlw	2
 33694  00F466  0100               	movlb	0	; () banked
 33695  00F468  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 33696  00F46A  A4D8               	btfss	status,2,c
 33697  00F46C  D00E               	goto	l775
 33698                           
 33699                           ; BSR set to: 0
 33700  00F46E  0102               	movlb	2	; () banked
 33701  00F470  5149               	movf	(_gblCBW+8)& (0+255),w,b
 33702  00F472  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 33703  00F474  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 33704  00F476  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 33705  00F478  B4D8               	btfsc	status,2,c
 33706  00F47A  D007               	goto	l775
 33707                           
 33708                           ; BSR set to: 2
 33709                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 33710  00F47C  0E00               	movlw	0
 33711  00F47E  0100               	movlb	0	; () banked
 33712  00F480  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33713  00F482  0E02               	movlw	2
 33714  00F484  EC70  F07B         	call	_USBStallEndpoint
 33715                           
 33716                           ;usb_device_msd.c: 1636: }
 33717  00F488  0012               	return	
 33718  00F48A                     l775:
 33719                           
 33720                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 33721  00F48A  0E01               	movlw	1
 33722  00F48C  0100               	movlb	0	; () banked
 33723  00F48E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33724  00F490  0E02               	movlw	2
 33725  00F492  EC70  F07B         	call	_USBStallEndpoint
 33726                           
 33727                           ;usb_device_msd.c: 1644: }
 33728                           
 33729                           ;usb_device_msd.c: 1643: break;
 33730                           
 33731                           ;usb_device_msd.c: 1642: default:
 33732                           
 33733                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 33734  00F496  0012               	return	
 33735  00F498                     l767:
 33736  00F498  0100               	movlb	0	; () banked
 33737  00F49A  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 33738                           
 33739                           ; Switch size 1, requested type "space"
 33740                           ; Number of cases is 6, Range of values is 1 to 127
 33741                           ; switch strategies available:
 33742                           ; Name         Instructions Cycles
 33743                           ; simple_byte           19    10 (average)
 33744                           ;	Chosen strategy is simple_byte
 33745  00F49C  0A01               	xorlw	1	; case 1
 33746  00F49E  B4D8               	btfsc	status,2,c
 33747  00F4A0  D7B0               	goto	l768
 33748  00F4A2  0A03               	xorlw	3	; case 2
 33749  00F4A4  B4D8               	btfsc	status,2,c
 33750  00F4A6  D7B1               	goto	l770
 33751  00F4A8  0A01               	xorlw	1	; case 3
 33752  00F4AA  B4D8               	btfsc	status,2,c
 33753  00F4AC  D7B5               	goto	l771
 33754  00F4AE  0A07               	xorlw	7	; case 4
 33755  00F4B0  B4D8               	btfsc	status,2,c
 33756  00F4B2  D7BC               	goto	l772
 33757  00F4B4  0A01               	xorlw	1	; case 5
 33758  00F4B6  B4D8               	btfsc	status,2,c
 33759  00F4B8  D7C0               	goto	l773
 33760  00F4BA  0A7A               	xorlw	122	; case 127
 33761  00F4BC  A4D8               	btfss	status,2,c
 33762  00F4BE  0012               	return	
 33763  00F4C0  D7C6               	goto	l774
 33764  00F4C2                     __end_of_MSDErrorHandler:
 33765                           	opt stack 0
 33766                           tosu	equ	0xFFF
 33767                           tosh	equ	0xFFE
 33768                           tosl	equ	0xFFD
 33769                           pclath	equ	0xFFA
 33770                           tblptru	equ	0xFF8
 33771                           tblptrh	equ	0xFF7
 33772                           tblptrl	equ	0xFF6
 33773                           tablat	equ	0xFF5
 33774                           prodh	equ	0xFF4
 33775                           prodl	equ	0xFF3
 33776                           intcon	equ	0xFF2
 33777                           intcon2	equ	0xFF1
 33778                           intcon3	equ	0xFF0
 33779                           postinc0	equ	0xFEE
 33780                           wreg	equ	0xFE8
 33781                           indf1	equ	0xFE7
 33782                           postinc1	equ	0xFE6
 33783                           postdec1	equ	0xFE5
 33784                           plusw1	equ	0xFE3
 33785                           fsr1h	equ	0xFE2
 33786                           fsr1l	equ	0xFE1
 33787                           indf2	equ	0xFDF
 33788                           postinc2	equ	0xFDE
 33789                           postdec2	equ	0xFDD
 33790                           plusw2	equ	0xFDB
 33791                           fsr2h	equ	0xFDA
 33792                           fsr2l	equ	0xFD9
 33793                           status	equ	0xFD8
 33794                           
 33795 ;; *************** function _USBStallEndpoint *****************
 33796 ;; Defined at:
 33797 ;;		line 1073 in file "usb_device.c"
 33798 ;; Parameters:    Size  Location     Type
 33799 ;;  ep              1    wreg     unsigned char 
 33800 ;;  dir             1    0[BANK0 ] unsigned char 
 33801 ;; Auto vars:     Size  Location     Type
 33802 ;;  ep              1    5[BANK0 ] unsigned char 
 33803 ;;  p               2    6[BANK0 ] PTR struct __BDT
 33804 ;;		 -> BDT(48), 
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  1    wreg      void 
 33807 ;; Registers used:
 33808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33809 ;; Tracked objects:
 33810 ;;		On entry : 0/0
 33811 ;;		On exit  : 0/0
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33814 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33815 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33818 ;;Total ram usage:        8 bytes
 33819 ;; Hardware stack levels used:    1
 33820 ;; Hardware stack levels required when called:   10
 33821 ;; This function calls:
 33822 ;;		Nothing
 33823 ;; This function is called by:
 33824 ;;		_MSDTasks
 33825 ;;		_MSDReadHandler
 33826 ;;		_MSDWriteHandler
 33827 ;;		_MSDErrorHandler
 33828 ;; This function uses a non-reentrant model
 33829 ;;
 33830                           
 33831                           	psect	text151
 33832  00F6E0                     __ptext151:
 33833                           	opt stack 0
 33834  00F6E0                     _USBStallEndpoint:
 33835                           	opt stack 18
 33836                           
 33837                           ;incstack = 0
 33838                           ;USBStallEndpoint@ep stored from wreg
 33839  00F6E0  0100               	movlb	0	; () banked
 33840  00F6E2  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 33841                           
 33842                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 33843  00F6E4  0100               	movlb	0	; () banked
 33844  00F6E6  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 33845  00F6E8  A4D8               	btfss	status,2,c
 33846  00F6EA  D02B               	goto	l194
 33847                           
 33848                           ; BSR set to: 0
 33849                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 33850  00F6EC  EE20 F001          	lfsr	2,1
 33851  00F6F0  5018               	movf	_pBDTEntryEP0OutNext,w,c
 33852  00F6F2  26D9               	addwf	fsr2l,f,c
 33853  00F6F4  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 33854  00F6F6  22DA               	addwfc	fsr2h,f,c
 33855  00F6F8  0E08               	movlw	8
 33856  00F6FA  6EDF               	movwf	indf2,c
 33857                           
 33858                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33859  00F6FC  EE20 F002          	lfsr	2,2
 33860  00F700  5018               	movf	_pBDTEntryEP0OutNext,w,c
 33861  00F702  26D9               	addwf	fsr2l,f,c
 33862  00F704  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 33863  00F706  22DA               	addwfc	fsr2h,f,c
 33864  00F708  0E30               	movlw	48
 33865  00F70A  6EDE               	movwf	postinc2,c
 33866  00F70C  0E0D               	movlw	13
 33867  00F70E  6EDD               	movwf	postdec2,c
 33868                           
 33869                           ; BSR set to: 0
 33870                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 33871  00F710  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33872  00F714  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33873  00F718  0E0C               	movlw	12
 33874  00F71A  6EDF               	movwf	indf2,c
 33875                           
 33876                           ; BSR set to: 0
 33877                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33878  00F71C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33879  00F720  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33880  00F724  0E00               	movlw	0
 33881  00F726  8EDB               	bsf	plusw2,7,c
 33882                           
 33883                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 33884  00F728  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 33885  00F72C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33886  00F730  0E04               	movlw	4
 33887  00F732  6EDF               	movwf	indf2,c
 33888                           
 33889                           ; BSR set to: 0
 33890                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33891  00F734  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 33892  00F738  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33893  00F73C  0E00               	movlw	0
 33894  00F73E  8EDB               	bsf	plusw2,7,c
 33895                           
 33896                           ;usb_device.c: 1089: }
 33897  00F740  0012               	return	
 33898  00F742                     l194:
 33899                           
 33900                           ; BSR set to: 0
 33901                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 33902                           
 33903                           ; BSR set to: 0
 33904  00F742  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 33905  00F744  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 33906  00F746  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 33907  00F748  90D8               	bcf	status,0,c
 33908  00F74A  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 33909  00F74C  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 33910  00F74E  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 33911  00F750  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 33912  00F752  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 33913  00F754  90D8               	bcf	status,0,c
 33914  00F756  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33915  00F758  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33916  00F75A  90D8               	bcf	status,0,c
 33917  00F75C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33918  00F75E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33919  00F760  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 33920  00F762  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 33921  00F764  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 33922  00F766  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 33923  00F768  90D8               	bcf	status,0,c
 33924  00F76A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33925  00F76C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33926  00F76E  90D8               	bcf	status,0,c
 33927  00F770  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 33928  00F772  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 33929  00F774  0E00               	movlw	0
 33930  00F776  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 33931  00F778  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 33932  00F77A  0E0D               	movlw	13
 33933  00F77C  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 33934  00F77E  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 33935                           
 33936                           ; BSR set to: 0
 33937                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 33938  00F780  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33939  00F784  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33940  00F788  0E00               	movlw	0
 33941  00F78A  84DB               	bsf	plusw2,2,c
 33942                           
 33943                           ; BSR set to: 0
 33944                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 33945  00F78C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33946  00F790  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33947  00F794  0E00               	movlw	0
 33948  00F796  8EDB               	bsf	plusw2,7,c
 33949                           
 33950                           ; BSR set to: 0
 33951                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 33952  00F798  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 33953  00F79A  0D04               	mullw	4
 33954  00F79C  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 33955  00F7A0  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 33956  00F7A4  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 33957  00F7A6  0D02               	mullw	2
 33958  00F7A8  50F3               	movf	prodl,w,c
 33959  00F7AA  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 33960  00F7AC  50F4               	movf	prodh,w,c
 33961  00F7AE  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 33962  00F7B0  90D8               	bcf	status,0,c
 33963  00F7B2  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 33964  00F7B4  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 33965  00F7B6  90D8               	bcf	status,0,c
 33966  00F7B8  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 33967  00F7BA  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 33968  00F7BC  0E04               	movlw	4
 33969  00F7BE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 33970  00F7C0  0E00               	movlw	0
 33971  00F7C2  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 33972  00F7C4  0E00               	movlw	0
 33973  00F7C6  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 33974  00F7C8  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 33975  00F7CA  0E0D               	movlw	13
 33976  00F7CC  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 33977  00F7CE  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 33978                           
 33979                           ; BSR set to: 0
 33980                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 33981  00F7D0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33982  00F7D4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33983  00F7D8  0E00               	movlw	0
 33984  00F7DA  84DB               	bsf	plusw2,2,c
 33985                           
 33986                           ; BSR set to: 0
 33987                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 33988  00F7DC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 33989  00F7E0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 33990  00F7E4  0E00               	movlw	0
 33991  00F7E6  8EDB               	bsf	plusw2,7,c
 33992  00F7E8  0012               	return	
 33993  00F7EA                     __end_of_USBStallEndpoint:
 33994                           	opt stack 0
 33995                           tosu	equ	0xFFF
 33996                           tosh	equ	0xFFE
 33997                           tosl	equ	0xFFD
 33998                           pclath	equ	0xFFA
 33999                           tblptru	equ	0xFF8
 34000                           tblptrh	equ	0xFF7
 34001                           tblptrl	equ	0xFF6
 34002                           tablat	equ	0xFF5
 34003                           prodh	equ	0xFF4
 34004                           prodl	equ	0xFF3
 34005                           intcon	equ	0xFF2
 34006                           intcon2	equ	0xFF1
 34007                           intcon3	equ	0xFF0
 34008                           postinc0	equ	0xFEE
 34009                           wreg	equ	0xFE8
 34010                           indf1	equ	0xFE7
 34011                           postinc1	equ	0xFE6
 34012                           postdec1	equ	0xFE5
 34013                           plusw1	equ	0xFE3
 34014                           fsr1h	equ	0xFE2
 34015                           fsr1l	equ	0xFE1
 34016                           indf2	equ	0xFDF
 34017                           postinc2	equ	0xFDE
 34018                           postdec2	equ	0xFDD
 34019                           plusw2	equ	0xFDB
 34020                           fsr2h	equ	0xFDA
 34021                           fsr2l	equ	0xFD9
 34022                           status	equ	0xFD8
 34023                           
 34024 ;; *************** function _ResetSenseData *****************
 34025 ;; Defined at:
 34026 ;;		line 1373 in file "usb_device_msd.c"
 34027 ;; Parameters:    Size  Location     Type
 34028 ;;		None
 34029 ;; Auto vars:     Size  Location     Type
 34030 ;;		None
 34031 ;; Return value:  Size  Location     Type
 34032 ;;                  1    wreg      void 
 34033 ;; Registers used:
 34034 ;;		wreg, status,2
 34035 ;; Tracked objects:
 34036 ;;		On entry : 0/0
 34037 ;;		On exit  : 0/0
 34038 ;;		Unchanged: 0/0
 34039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34044 ;;Total ram usage:        0 bytes
 34045 ;; Hardware stack levels used:    1
 34046 ;; Hardware stack levels required when called:   10
 34047 ;; This function calls:
 34048 ;;		Nothing
 34049 ;; This function is called by:
 34050 ;;		_MSDProcessCommandMediaAbsent
 34051 ;;		_MSDProcessCommandMediaPresent
 34052 ;;		_MSDErrorHandler
 34053 ;; This function uses a non-reentrant model
 34054 ;;
 34055                           
 34056                           	psect	text152
 34057  0125E6                     __ptext152:
 34058                           	opt stack 0
 34059  0125E6                     _ResetSenseData:
 34060                           	opt stack 16
 34061                           
 34062                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 34063                           
 34064                           ; BSR set to: 0
 34065                           ;incstack = 0
 34066  0125E6  0102               	movlb	2	; () banked
 34067  0125E8  9160               	bcf	_gblSenseData& (0+255),0,b
 34068  0125EA  9360               	bcf	_gblSenseData& (0+255),1,b
 34069  0125EC  9560               	bcf	_gblSenseData& (0+255),2,b
 34070  0125EE  9760               	bcf	_gblSenseData& (0+255),3,b
 34071  0125F0  8960               	bsf	_gblSenseData& (0+255),4,b
 34072  0125F2  8B60               	bsf	_gblSenseData& (0+255),5,b
 34073  0125F4  8D60               	bsf	_gblSenseData& (0+255),6,b
 34074                           
 34075                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 34076  0125F6  9F60               	bcf	_gblSenseData& (0+255),7,b
 34077                           
 34078                           ; BSR set to: 2
 34079                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 34080  0125F8  0E00               	movlw	0
 34081  0125FA  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 34082                           
 34083                           ; BSR set to: 2
 34084                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 34085  0125FC  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 34086  0125FE  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 34087  012600  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 34088  012602  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 34089                           
 34090                           ; BSR set to: 2
 34091                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 34092  012604  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 34093                           
 34094                           ; BSR set to: 2
 34095                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 34096  012606  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 34097                           
 34098                           ; BSR set to: 2
 34099                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 34100  012608  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 34101                           
 34102                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 34103  01260A  0E00               	movlw	0
 34104  01260C  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 34105                           
 34106                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 34107  01260E  0E00               	movlw	0
 34108  012610  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 34109                           
 34110                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 34111  012612  0E00               	movlw	0
 34112  012614  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 34113                           
 34114                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 34115  012616  0E00               	movlw	0
 34116  012618  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 34117                           
 34118                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 34119  01261A  0E0A               	movlw	10
 34120  01261C  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 34121                           
 34122                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 34123  01261E  0E00               	movlw	0
 34124  012620  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 34125  012622  0E00               	movlw	0
 34126  012624  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 34127  012626  0E00               	movlw	0
 34128  012628  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 34129  01262A  0E00               	movlw	0
 34130  01262C  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 34131                           
 34132                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 34133  01262E  0E00               	movlw	0
 34134  012630  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34135                           
 34136                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 34137  012632  0E00               	movlw	0
 34138  012634  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34139                           
 34140                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 34141  012636  0E00               	movlw	0
 34142  012638  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 34143                           
 34144                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 34145  01263A  0E00               	movlw	0
 34146  01263C  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 34147                           
 34148                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 34149  01263E  0E00               	movlw	0
 34150  012640  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 34151                           
 34152                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 34153  012642  0E00               	movlw	0
 34154  012644  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 34155                           
 34156                           ; BSR set to: 2
 34157  012646  0012               	return		;funcret
 34158  012648                     __end_of_ResetSenseData:
 34159                           	opt stack 0
 34160                           tosu	equ	0xFFF
 34161                           tosh	equ	0xFFE
 34162                           tosl	equ	0xFFD
 34163                           pclath	equ	0xFFA
 34164                           tblptru	equ	0xFF8
 34165                           tblptrh	equ	0xFF7
 34166                           tblptrl	equ	0xFF6
 34167                           tablat	equ	0xFF5
 34168                           prodh	equ	0xFF4
 34169                           prodl	equ	0xFF3
 34170                           intcon	equ	0xFF2
 34171                           intcon2	equ	0xFF1
 34172                           intcon3	equ	0xFF0
 34173                           postinc0	equ	0xFEE
 34174                           wreg	equ	0xFE8
 34175                           indf1	equ	0xFE7
 34176                           postinc1	equ	0xFE6
 34177                           postdec1	equ	0xFE5
 34178                           plusw1	equ	0xFE3
 34179                           fsr1h	equ	0xFE2
 34180                           fsr1l	equ	0xFE1
 34181                           indf2	equ	0xFDF
 34182                           postinc2	equ	0xFDE
 34183                           postdec2	equ	0xFDD
 34184                           plusw2	equ	0xFDB
 34185                           fsr2h	equ	0xFDA
 34186                           fsr2l	equ	0xFD9
 34187                           status	equ	0xFD8
 34188                           
 34189 ;; *************** function _ExternalFlash_SectorRead *****************
 34190 ;; Defined at:
 34191 ;;		line 64 in file "external_flash.c"
 34192 ;; Parameters:    Size  Location     Type
 34193 ;;  config          2   43[BANK0 ] PTR void 
 34194 ;;		 -> NULL(0), 
 34195 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 34196 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 34197 ;;		 -> msd_buffer(512), 
 34198 ;; Auto vars:     Size  Location     Type
 34199 ;;  page            2   51[BANK0 ] unsigned int 
 34200 ;; Return value:  Size  Location     Type
 34201 ;;                  1    wreg      unsigned char 
 34202 ;; Registers used:
 34203 ;;		wreg, status,2, status,0, cstack
 34204 ;; Tracked objects:
 34205 ;;		On entry : 0/0
 34206 ;;		On exit  : 0/0
 34207 ;;		Unchanged: 0/0
 34208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34209 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34212 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34213 ;;Total ram usage:       10 bytes
 34214 ;; Hardware stack levels used:    1
 34215 ;; Hardware stack levels required when called:   15
 34216 ;; This function calls:
 34217 ;;		_flash_page_read
 34218 ;; This function is called by:
 34219 ;;		_MSDReadHandler
 34220 ;; This function uses a non-reentrant model
 34221 ;;
 34222                           
 34223                           	psect	text153
 34224  0134D8                     __ptext153:
 34225                           	opt stack 0
 34226  0134D8                     _ExternalFlash_SectorRead:
 34227                           	opt stack 10
 34228                           
 34229                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 34230                           
 34231                           ; BSR set to: 2
 34232                           ;incstack = 0
 34233  0134D8  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 34234  0134DC  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 34235                           
 34236                           ;external_flash.c: 70: if(sector_addr >= 4096)
 34237  0134E0  0100               	movlb	0	; () banked
 34238  0134E2  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 34239  0134E4  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 34240  0134E6  E104               	bnz	u16820
 34241  0134E8  0E10               	movlw	16
 34242  0134EA  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 34243  0134EC  A0D8               	btfss	status,0,c
 34244  0134EE  D002               	goto	l2904
 34245  0134F0                     u16820:
 34246                           
 34247                           ; BSR set to: 0
 34248                           ;external_flash.c: 71: {;external_flash.c: 72: return 0;
 34249  0134F0  0E00               	movlw	0
 34250                           
 34251                           ; BSR set to: 0
 34252  0134F2  0012               	return	
 34253  0134F4                     l2904:
 34254                           
 34255                           ; BSR set to: 0
 34256                           ;external_flash.c: 73: };external_flash.c: 76: flash_page_read(page, buffer);
 34257                           
 34258                           ; BSR set to: 0
 34259  0134F4  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 34260  0134F8  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 34261  0134FC  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 34262  013500  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 34263  013504  EC25  F09C         	call	_flash_page_read	;wreg free
 34264                           
 34265                           ;external_flash.c: 78: return 1;
 34266  013508  0E01               	movlw	1
 34267  01350A  0012               	return	
 34268  01350C                     __end_of_ExternalFlash_SectorRead:
 34269                           	opt stack 0
 34270                           tosu	equ	0xFFF
 34271                           tosh	equ	0xFFE
 34272                           tosl	equ	0xFFD
 34273                           pclath	equ	0xFFA
 34274                           tblptru	equ	0xFF8
 34275                           tblptrh	equ	0xFF7
 34276                           tblptrl	equ	0xFF6
 34277                           tablat	equ	0xFF5
 34278                           prodh	equ	0xFF4
 34279                           prodl	equ	0xFF3
 34280                           intcon	equ	0xFF2
 34281                           intcon2	equ	0xFF1
 34282                           intcon3	equ	0xFF0
 34283                           postinc0	equ	0xFEE
 34284                           wreg	equ	0xFE8
 34285                           indf1	equ	0xFE7
 34286                           postinc1	equ	0xFE6
 34287                           postdec1	equ	0xFE5
 34288                           plusw1	equ	0xFE3
 34289                           fsr1h	equ	0xFE2
 34290                           fsr1l	equ	0xFE1
 34291                           indf2	equ	0xFDF
 34292                           postinc2	equ	0xFDE
 34293                           postdec2	equ	0xFDD
 34294                           plusw2	equ	0xFDB
 34295                           fsr2h	equ	0xFDA
 34296                           fsr2l	equ	0xFD9
 34297                           status	equ	0xFD8
 34298                           
 34299 ;; *************** function _flash_page_read *****************
 34300 ;; Defined at:
 34301 ;;		line 538 in file "flash.c"
 34302 ;; Parameters:    Size  Location     Type
 34303 ;;  page            2   39[BANK0 ] unsigned int 
 34304 ;;  data            2   41[BANK0 ] PTR unsigned char 
 34305 ;;		 -> msd_buffer(512), 
 34306 ;; Auto vars:     Size  Location     Type
 34307 ;;		None
 34308 ;; Return value:  Size  Location     Type
 34309 ;;                  1    wreg      void 
 34310 ;; Registers used:
 34311 ;;		wreg, status,2, status,0, cstack
 34312 ;; Tracked objects:
 34313 ;;		On entry : 0/0
 34314 ;;		On exit  : 0/0
 34315 ;;		Unchanged: 0/0
 34316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34317 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34321 ;;Total ram usage:        4 bytes
 34322 ;; Hardware stack levels used:    1
 34323 ;; Hardware stack levels required when called:   14
 34324 ;; This function calls:
 34325 ;;		_flash_partial_read
 34326 ;; This function is called by:
 34327 ;;		_ExternalFlash_SectorRead
 34328 ;; This function uses a non-reentrant model
 34329 ;;
 34330                           
 34331                           	psect	text154
 34332  01384A                     __ptext154:
 34333                           	opt stack 0
 34334  01384A                     _flash_page_read:
 34335                           	opt stack 10
 34336                           
 34337                           ;flash.c: 541: flash_partial_read(page, 0, 512, data);
 34338                           
 34339                           ;incstack = 0
 34340  01384A  C087  F073         	movff	flash_page_read@page,flash_partial_read@page
 34341  01384E  C088  F074         	movff	flash_page_read@page+1,flash_partial_read@page+1
 34342  013852  0E00               	movlw	0
 34343  013854  0100               	movlb	0	; () banked
 34344  013856  6F76               	movwf	(flash_partial_read@start+1)& (0+255),b
 34345  013858  0E00               	movlw	0
 34346  01385A  6F75               	movwf	flash_partial_read@start& (0+255),b
 34347  01385C  0E02               	movlw	2
 34348  01385E  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 34349  013860  0E00               	movlw	0
 34350  013862  6F77               	movwf	flash_partial_read@length& (0+255),b
 34351  013864  C089  F079         	movff	flash_page_read@data,flash_partial_read@data
 34352  013868  C08A  F07A         	movff	flash_page_read@data+1,flash_partial_read@data+1
 34353  01386C  ECCA  F08F         	call	_flash_partial_read	;wreg free
 34354  013870  0012               	return		;funcret
 34355  013872                     __end_of_flash_page_read:
 34356                           	opt stack 0
 34357                           tosu	equ	0xFFF
 34358                           tosh	equ	0xFFE
 34359                           tosl	equ	0xFFD
 34360                           pclath	equ	0xFFA
 34361                           tblptru	equ	0xFF8
 34362                           tblptrh	equ	0xFF7
 34363                           tblptrl	equ	0xFF6
 34364                           tablat	equ	0xFF5
 34365                           prodh	equ	0xFF4
 34366                           prodl	equ	0xFF3
 34367                           intcon	equ	0xFF2
 34368                           intcon2	equ	0xFF1
 34369                           intcon3	equ	0xFF0
 34370                           postinc0	equ	0xFEE
 34371                           wreg	equ	0xFE8
 34372                           indf1	equ	0xFE7
 34373                           postinc1	equ	0xFE6
 34374                           postdec1	equ	0xFE5
 34375                           plusw1	equ	0xFE3
 34376                           fsr1h	equ	0xFE2
 34377                           fsr1l	equ	0xFE1
 34378                           indf2	equ	0xFDF
 34379                           postinc2	equ	0xFDE
 34380                           postdec2	equ	0xFDD
 34381                           plusw2	equ	0xFDB
 34382                           fsr2h	equ	0xFDA
 34383                           fsr2l	equ	0xFD9
 34384                           status	equ	0xFD8
 34385                           
 34386 ;; *************** function _flash_partial_read *****************
 34387 ;; Defined at:
 34388 ;;		line 564 in file "flash.c"
 34389 ;; Parameters:    Size  Location     Type
 34390 ;;  page            2   19[BANK0 ] unsigned int 
 34391 ;;  start           2   21[BANK0 ] unsigned int 
 34392 ;;  length          2   23[BANK0 ] unsigned int 
 34393 ;;  data            2   25[BANK0 ] PTR unsigned char 
 34394 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 34395 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 34396 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512),
      + 
 34397 ;; Auto vars:     Size  Location     Type
 34398 ;;  command         4   31[BANK0 ] unsigned char [4]
 34399 ;;  address         4   35[BANK0 ] unsigned long 
 34400 ;; Return value:  Size  Location     Type
 34401 ;;                  1    wreg      void 
 34402 ;; Registers used:
 34403 ;;		wreg, status,2, status,0, cstack
 34404 ;; Tracked objects:
 34405 ;;		On entry : 0/0
 34406 ;;		On exit  : 0/0
 34407 ;;		Unchanged: 0/0
 34408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34409 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34410 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34411 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34412 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34413 ;;Total ram usage:       20 bytes
 34414 ;; Hardware stack levels used:    1
 34415 ;; Hardware stack levels required when called:   13
 34416 ;; This function calls:
 34417 ;;		__flash_spi_tx_rx
 34418 ;;		_flash_is_busy
 34419 ;; This function is called by:
 34420 ;;		_flash_page_read
 34421 ;;		__root_is_available
 34422 ;;		__get_empty_cluster
 34423 ;;		_fat_get_empty_clusters
 34424 ;;		__read_fat
 34425 ;;		__read_root
 34426 ;;		_fat_find_file
 34427 ;;		__get_first_cluster
 34428 ;;		__get_file_size
 34429 ;;		_fat_get_file_size
 34430 ;;		_fat_read_from_file
 34431 ;; This function uses a non-reentrant model
 34432 ;;
 34433                           
 34434                           	psect	text155
 34435  011F94                     __ptext155:
 34436                           	opt stack 0
 34437  011F94                     _flash_partial_read:
 34438                           	opt stack 15
 34439                           
 34440                           ;flash.c: 566: uint32_t address;;flash.c: 567: uint8_t command[4];;flash.c: 570: while(f
      +                          lash_is_busy());
 34441                           
 34442                           ;incstack = 0
 34443  011F94  ECAC  F09C         	call	_flash_is_busy	;wreg free
 34444  011F98  0900               	iorlw	0
 34445  011F9A  A4D8               	btfss	status,2,c
 34446  011F9C  D7FB               	goto	_flash_partial_read
 34447                           
 34448                           ;flash.c: 573: address = page;
 34449  011F9E  C073  F083         	movff	flash_partial_read@page,flash_partial_read@address
 34450  011FA2  C074  F084         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 34451  011FA6  0100               	movlb	0	; () banked
 34452  011FA8  6B85               	clrf	(flash_partial_read@address+2)& (0+255),b
 34453  011FAA  6B86               	clrf	(flash_partial_read@address+3)& (0+255),b
 34454                           
 34455                           ; BSR set to: 0
 34456                           ;flash.c: 574: address <<= 9;
 34457  011FAC  0E09               	movlw	9
 34458  011FAE                     u16455:
 34459  011FAE  90D8               	bcf	status,0,c
 34460  011FB0  3783               	rlcf	flash_partial_read@address& (0+255),f,b
 34461  011FB2  3784               	rlcf	(flash_partial_read@address+1)& (0+255),f,b
 34462  011FB4  3785               	rlcf	(flash_partial_read@address+2)& (0+255),f,b
 34463  011FB6  3786               	rlcf	(flash_partial_read@address+3)& (0+255),f,b
 34464  011FB8  2EE8               	decfsz	wreg,f,c
 34465  011FBA  D7F9               	goto	u16455
 34466                           
 34467                           ; BSR set to: 0
 34468                           ;flash.c: 575: address |= start;
 34469  011FBC  5175               	movf	flash_partial_read@start& (0+255),w,b
 34470  011FBE  6F7B               	movwf	??_flash_partial_read& (0+255),b
 34471  011FC0  5176               	movf	(flash_partial_read@start+1)& (0+255),w,b
 34472  011FC2  6F7C               	movwf	(??_flash_partial_read+1)& (0+255),b
 34473  011FC4  6B7D               	clrf	(??_flash_partial_read+2)& (0+255),b
 34474  011FC6  6B7E               	clrf	(??_flash_partial_read+3)& (0+255),b
 34475  011FC8  517B               	movf	??_flash_partial_read& (0+255),w,b
 34476  011FCA  1383               	iorwf	flash_partial_read@address& (0+255),f,b
 34477  011FCC  517C               	movf	(??_flash_partial_read+1)& (0+255),w,b
 34478  011FCE  1384               	iorwf	(flash_partial_read@address+1)& (0+255),f,b
 34479  011FD0  517D               	movf	(??_flash_partial_read+2)& (0+255),w,b
 34480  011FD2  1385               	iorwf	(flash_partial_read@address+2)& (0+255),f,b
 34481  011FD4  517E               	movf	(??_flash_partial_read+3)& (0+255),w,b
 34482  011FD6  1386               	iorwf	(flash_partial_read@address+3)& (0+255),f,b
 34483                           
 34484                           ; BSR set to: 0
 34485                           ;flash.c: 578: command[0] = 0x03;
 34486  011FD8  0E03               	movlw	3
 34487  011FDA  6F7F               	movwf	flash_partial_read@command& (0+255),b
 34488                           
 34489                           ; BSR set to: 0
 34490                           ;flash.c: 579: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 34491  011FDC  C085  F080         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 34492                           
 34493                           ; BSR set to: 0
 34494                           ;flash.c: 580: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 34495  011FE0  5184               	movf	(flash_partial_read@address+1)& (0+255),w,b
 34496  011FE2  6F81               	movwf	(flash_partial_read@command+2)& (0+255),b
 34497                           
 34498                           ; BSR set to: 0
 34499                           ;flash.c: 581: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 34500  011FE4  C083  F082         	movff	flash_partial_read@address,flash_partial_read@command+3
 34501                           
 34502                           ; BSR set to: 0
 34503                           ;flash.c: 584: _flash_spi_tx_rx(command, 4, data, length);
 34504  011FE8  0E7F               	movlw	low flash_partial_read@command
 34505  011FEA  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 34506  011FEC  0E00               	movlw	high flash_partial_read@command
 34507  011FEE  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 34508  011FF0  0E00               	movlw	0
 34509  011FF2  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 34510  011FF4  0E04               	movlw	4
 34511  011FF6  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 34512  011FF8  C079  F064         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 34513  011FFC  C07A  F065         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 34514  012000  C077  F066         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 34515  012004  C078  F067         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 34516  012008  EC23  F089         	call	__flash_spi_tx_rx	;wreg free
 34517  01200C  0012               	return		;funcret
 34518  01200E                     __end_of_flash_partial_read:
 34519                           	opt stack 0
 34520                           tosu	equ	0xFFF
 34521                           tosh	equ	0xFFE
 34522                           tosl	equ	0xFFD
 34523                           pclath	equ	0xFFA
 34524                           tblptru	equ	0xFF8
 34525                           tblptrh	equ	0xFF7
 34526                           tblptrl	equ	0xFF6
 34527                           tablat	equ	0xFF5
 34528                           prodh	equ	0xFF4
 34529                           prodl	equ	0xFF3
 34530                           intcon	equ	0xFF2
 34531                           intcon2	equ	0xFF1
 34532                           intcon3	equ	0xFF0
 34533                           postinc0	equ	0xFEE
 34534                           wreg	equ	0xFE8
 34535                           indf1	equ	0xFE7
 34536                           postinc1	equ	0xFE6
 34537                           postdec1	equ	0xFE5
 34538                           plusw1	equ	0xFE3
 34539                           fsr1h	equ	0xFE2
 34540                           fsr1l	equ	0xFE1
 34541                           indf2	equ	0xFDF
 34542                           postinc2	equ	0xFDE
 34543                           postdec2	equ	0xFDD
 34544                           plusw2	equ	0xFDB
 34545                           fsr2h	equ	0xFDA
 34546                           fsr2l	equ	0xFD9
 34547                           status	equ	0xFD8
 34548                           
 34549 ;; *************** function _flash_is_busy *****************
 34550 ;; Defined at:
 34551 ;;		line 475 in file "flash.c"
 34552 ;; Parameters:    Size  Location     Type
 34553 ;;		None
 34554 ;; Auto vars:     Size  Location     Type
 34555 ;;  status          2   17[BANK0 ] unsigned int 
 34556 ;; Return value:  Size  Location     Type
 34557 ;;                  1    wreg      unsigned char 
 34558 ;; Registers used:
 34559 ;;		wreg, status,2, status,0, cstack
 34560 ;; Tracked objects:
 34561 ;;		On entry : 0/0
 34562 ;;		On exit  : 0/0
 34563 ;;		Unchanged: 0/0
 34564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34568 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34569 ;;Total ram usage:        2 bytes
 34570 ;; Hardware stack levels used:    1
 34571 ;; Hardware stack levels required when called:   12
 34572 ;; This function calls:
 34573 ;;		__flash_get_status
 34574 ;;		__flash_wakeup
 34575 ;; This function is called by:
 34576 ;;		__flash_set_page_size
 34577 ;;		__flash_copy_page_to_buffer
 34578 ;;		__flash_compare_page_to_buffer
 34579 ;;		__flash_write_to_buffer
 34580 ;;		__flash_write_page_from_buffer
 34581 ;;		_flash_partial_read
 34582 ;;		_flash_partial_write
 34583 ;;		__flash_erase_page
 34584 ;;		_flash_set_power_state
 34585 ;; This function uses a non-reentrant model
 34586 ;;
 34587                           
 34588                           	psect	text156
 34589  013958                     __ptext156:
 34590                           	opt stack 0
 34591  013958                     _flash_is_busy:
 34592                           	opt stack 15
 34593                           
 34594                           ;flash.c: 478: if(power_state!=FLASH_POWER_STATE_NORMAL)
 34595                           
 34596                           ;incstack = 0
 34597  013958  0100               	movlb	0	; () banked
 34598  01395A  51DF               	movf	_power_state& (0+255),w,b
 34599  01395C  A4D8               	btfss	status,2,c
 34600                           
 34601                           ; BSR set to: 0
 34602                           ;flash.c: 479: {;flash.c: 480: _flash_wakeup();
 34603  01395E  ECA9  F095         	call	__flash_wakeup	;wreg free
 34604                           
 34605                           ;flash.c: 481: };flash.c: 484: uint16_t status = _flash_get_status();
 34606  013962  EC86  F09A         	call	__flash_get_status	;wreg free
 34607  013966  C06C  F071         	movff	?__flash_get_status,flash_is_busy@status
 34608  01396A  C06D  F072         	movff	?__flash_get_status+1,flash_is_busy@status+1
 34609                           
 34610                           ;flash.c: 485: if(status & 0b0000000010000000)
 34611  01396E  0100               	movlb	0	; () banked
 34612  013970  AF71               	btfss	flash_is_busy@status& (0+255),7,b
 34613  013972  D002               	goto	l2839
 34614                           
 34615                           ; BSR set to: 0
 34616                           ;flash.c: 486: {;flash.c: 488: return 0;
 34617  013974  0E00               	movlw	0
 34618                           
 34619                           ; BSR set to: 0
 34620                           ;flash.c: 489: }
 34621                           
 34622                           ; BSR set to: 0
 34623  013976  0012               	return	
 34624  013978                     l2839:
 34625                           
 34626                           ; BSR set to: 0
 34627                           ;flash.c: 490: else;flash.c: 491: {;flash.c: 493: return 1;
 34628                           
 34629                           ; BSR set to: 0
 34630  013978  0E01               	movlw	1
 34631                           
 34632                           ; BSR set to: 0
 34633  01397A  0012               	return	
 34634  01397C                     __end_of_flash_is_busy:
 34635                           	opt stack 0
 34636                           tosu	equ	0xFFF
 34637                           tosh	equ	0xFFE
 34638                           tosl	equ	0xFFD
 34639                           pclath	equ	0xFFA
 34640                           tblptru	equ	0xFF8
 34641                           tblptrh	equ	0xFF7
 34642                           tblptrl	equ	0xFF6
 34643                           tablat	equ	0xFF5
 34644                           prodh	equ	0xFF4
 34645                           prodl	equ	0xFF3
 34646                           intcon	equ	0xFF2
 34647                           intcon2	equ	0xFF1
 34648                           intcon3	equ	0xFF0
 34649                           postinc0	equ	0xFEE
 34650                           wreg	equ	0xFE8
 34651                           indf1	equ	0xFE7
 34652                           postinc1	equ	0xFE6
 34653                           postdec1	equ	0xFE5
 34654                           plusw1	equ	0xFE3
 34655                           fsr1h	equ	0xFE2
 34656                           fsr1l	equ	0xFE1
 34657                           indf2	equ	0xFDF
 34658                           postinc2	equ	0xFDE
 34659                           postdec2	equ	0xFDD
 34660                           plusw2	equ	0xFDB
 34661                           fsr2h	equ	0xFDA
 34662                           fsr2l	equ	0xFD9
 34663                           status	equ	0xFD8
 34664                           
 34665 ;; *************** function __flash_wakeup *****************
 34666 ;; Defined at:
 34667 ;;		line 289 in file "flash.c"
 34668 ;; Parameters:    Size  Location     Type
 34669 ;;		None
 34670 ;; Auto vars:     Size  Location     Type
 34671 ;;  command         1    8[BANK0 ] unsigned char 
 34672 ;; Return value:  Size  Location     Type
 34673 ;;                  1    wreg      void 
 34674 ;; Registers used:
 34675 ;;		wreg, status,2, status,0, cstack
 34676 ;; Tracked objects:
 34677 ;;		On entry : 0/0
 34678 ;;		On exit  : 0/0
 34679 ;;		Unchanged: 0/0
 34680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34684 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34685 ;;Total ram usage:        1 bytes
 34686 ;; Hardware stack levels used:    1
 34687 ;; Hardware stack levels required when called:   11
 34688 ;; This function calls:
 34689 ;;		__flash_spi_tx
 34690 ;; This function is called by:
 34691 ;;		_flash_is_busy
 34692 ;;		_flash_set_power_state
 34693 ;; This function uses a non-reentrant model
 34694 ;;
 34695                           
 34696                           	psect	text157
 34697  012B52                     __ptext157:
 34698                           	opt stack 0
 34699  012B52                     __flash_wakeup:
 34700                           	opt stack 15
 34701                           
 34702                           ;flash.c: 291: uint8_t command;;flash.c: 293: switch(power_state)
 34703                           
 34704                           ; BSR set to: 0
 34705                           ;incstack = 0
 34706  012B52  D022               	goto	l2785
 34707  012B54                     
 34708                           ;flash.c: 296: command = 0xAB;
 34709  012B54  0EAB               	movlw	171
 34710  012B56  0100               	movlb	0	; () banked
 34711  012B58  6F68               	movwf	__flash_wakeup@command& (0+255),b
 34712                           
 34713                           ; BSR set to: 0
 34714                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 34715  012B5A  0E68               	movlw	low __flash_wakeup@command
 34716  012B5C  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34717  012B5E  0E00               	movlw	high __flash_wakeup@command
 34718  012B60  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34719  012B62  0E00               	movlw	0
 34720  012B64  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34721  012B66  0E01               	movlw	1
 34722  012B68  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34723  012B6A  EC50  F095         	call	__flash_spi_tx	;wreg free
 34724                           
 34725                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 34726  012B6E  0E17               	movlw	23
 34727  012B70                     u23277:
 34728  012B70  2EE8               	decfsz	wreg,f,c
 34729  012B72  D7FE               	bra	u23277
 34730  012B74  F000               	nop	
 34731                           
 34732                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 34733  012B76  0E00               	movlw	0
 34734  012B78  0100               	movlb	0	; () banked
 34735  012B7A  6FDF               	movwf	_power_state& (0+255),b
 34736                           
 34737                           ;flash.c: 300: break;
 34738  012B7C  0012               	return	
 34739  012B7E                     l2788:
 34740                           
 34741                           ; BSR set to: 0
 34742                           ;flash.c: 305: LATDbits.LD7 = 0;
 34743  012B7E  9E8C               	bcf	3980,7,c	;volatile
 34744                           
 34745                           ; BSR set to: 0
 34746                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 34747  012B80  0E0D               	movlw	13
 34748  012B82                     u23287:
 34749  012B82  2EE8               	decfsz	wreg,f,c
 34750  012B84  D7FE               	bra	u23287
 34751  012B86  F000               	nop	
 34752                           
 34753                           ;flash.c: 307: LATDbits.LD7 = 1;
 34754  012B88  8E8C               	bsf	3980,7,c	;volatile
 34755                           
 34756                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 34757  012B8A  0E50               	movlw	80
 34758  012B8C                     u23297:
 34759  012B8C  2EE8               	decfsz	wreg,f,c
 34760  012B8E  D7FE               	bra	u23297
 34761                           
 34762                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 34763  012B90  0E00               	movlw	0
 34764  012B92  0100               	movlb	0	; () banked
 34765  012B94  6FDF               	movwf	_power_state& (0+255),b
 34766                           
 34767                           ; BSR set to: 0
 34768                           ;flash.c: 311: }
 34769                           
 34770                           ;flash.c: 310: break;
 34771  012B96  0012               	return	
 34772  012B98                     l2785:
 34773                           
 34774                           ; BSR set to: 0
 34775  012B98  0100               	movlb	0	; () banked
 34776  012B9A  51DF               	movf	_power_state& (0+255),w,b
 34777                           
 34778                           ; Switch size 1, requested type "space"
 34779                           ; Number of cases is 2, Range of values is 1 to 2
 34780                           ; switch strategies available:
 34781                           ; Name         Instructions Cycles
 34782                           ; simple_byte            7     4 (average)
 34783                           ;	Chosen strategy is simple_byte
 34784  012B9C  0A01               	xorlw	1	; case 1
 34785  012B9E  B4D8               	btfsc	status,2,c
 34786  012BA0  D7D9               	goto	l2786
 34787  012BA2  0A03               	xorlw	3	; case 2
 34788  012BA4  A4D8               	btfss	status,2,c
 34789  012BA6  0012               	return	
 34790  012BA8  D7EA               	goto	l2788
 34791  012BAA                     __end_of__flash_wakeup:
 34792                           	opt stack 0
 34793                           tosu	equ	0xFFF
 34794                           tosh	equ	0xFFE
 34795                           tosl	equ	0xFFD
 34796                           pclath	equ	0xFFA
 34797                           tblptru	equ	0xFF8
 34798                           tblptrh	equ	0xFF7
 34799                           tblptrl	equ	0xFF6
 34800                           tablat	equ	0xFF5
 34801                           prodh	equ	0xFF4
 34802                           prodl	equ	0xFF3
 34803                           intcon	equ	0xFF2
 34804                           intcon2	equ	0xFF1
 34805                           intcon3	equ	0xFF0
 34806                           postinc0	equ	0xFEE
 34807                           wreg	equ	0xFE8
 34808                           indf1	equ	0xFE7
 34809                           postinc1	equ	0xFE6
 34810                           postdec1	equ	0xFE5
 34811                           plusw1	equ	0xFE3
 34812                           fsr1h	equ	0xFE2
 34813                           fsr1l	equ	0xFE1
 34814                           indf2	equ	0xFDF
 34815                           postinc2	equ	0xFDE
 34816                           postdec2	equ	0xFDD
 34817                           plusw2	equ	0xFDB
 34818                           fsr2h	equ	0xFDA
 34819                           fsr2l	equ	0xFD9
 34820                           status	equ	0xFD8
 34821                           
 34822 ;; *************** function __flash_spi_tx *****************
 34823 ;; Defined at:
 34824 ;;		line 103 in file "flash.c"
 34825 ;; Parameters:    Size  Location     Type
 34826 ;;  data            2    0[BANK0 ] PTR unsigned char 
 34827 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 34828 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 34829 ;;  length          2    2[BANK0 ] unsigned int 
 34830 ;; Auto vars:     Size  Location     Type
 34831 ;;		None
 34832 ;; Return value:  Size  Location     Type
 34833 ;;                  1    wreg      void 
 34834 ;; Registers used:
 34835 ;;		wreg, status,2, status,0
 34836 ;; Tracked objects:
 34837 ;;		On entry : 0/0
 34838 ;;		On exit  : 0/0
 34839 ;;		Unchanged: 0/0
 34840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34841 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34843 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34844 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34845 ;;Total ram usage:        8 bytes
 34846 ;; Hardware stack levels used:    1
 34847 ;; Hardware stack levels required when called:   10
 34848 ;; This function calls:
 34849 ;;		Nothing
 34850 ;; This function is called by:
 34851 ;;		__flash_set_page_size
 34852 ;;		__flash_wakeup
 34853 ;;		__flash_copy_page_to_buffer
 34854 ;;		__flash_compare_page_to_buffer
 34855 ;;		__flash_write_page_from_buffer
 34856 ;;		__flash_erase_page
 34857 ;;		_flash_set_power_state
 34858 ;; This function uses a non-reentrant model
 34859 ;;
 34860                           
 34861                           	psect	text158
 34862  012AA0                     __ptext158:
 34863                           	opt stack 0
 34864  012AA0                     __flash_spi_tx:
 34865                           	opt stack 15
 34866                           
 34867                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 34868                           
 34869                           ; BSR set to: 0
 34870                           ;incstack = 0
 34871  012AA0  9E88               	bcf	3976,7,c	;volatile
 34872                           
 34873                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 34874  012AA2  9C88               	bcf	3976,6,c	;volatile
 34875                           
 34876                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 34877  012AA4  8A88               	bsf	3976,5,c	;volatile
 34878                           
 34879                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 34880  012AA6  9888               	bcf	3976,4,c	;volatile
 34881                           
 34882                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 34883  012AA8  9688               	bcf	3976,3,c	;volatile
 34884                           
 34885                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 34886  012AAA  8488               	bsf	3976,2,c	;volatile
 34887                           
 34888                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 34889  012AAC  9288               	bcf	3976,1,c	;volatile
 34890                           
 34891                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 34892  012AAE  9886               	bcf	3974,4,c	;volatile
 34893  012AB0  9A86               	bcf	3974,5,c	;volatile
 34894  012AB2  9C86               	bcf	3974,6,c	;volatile
 34895  012AB4  9E86               	bcf	3974,7,c	;volatile
 34896                           
 34897                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 34898  012AB6  9086               	bcf	3974,0,c	;volatile
 34899  012AB8  9286               	bcf	3974,1,c	;volatile
 34900  012ABA  9486               	bcf	3974,2,c	;volatile
 34901  012ABC  9686               	bcf	3974,3,c	;volatile
 34902                           
 34903                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34904  012ABE  0100               	movlb	0	; () banked
 34905  012AC0  5161               	movf	(__flash_spi_tx@data+1)& (0+255),w,b
 34906  012AC2  6E6A               	movwf	3946,c	;volatile
 34907                           
 34908                           ; BSR set to: 0
 34909                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34910  012AC4  C060  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 34911                           
 34912                           ; BSR set to: 0
 34913                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 34914  012AC8  0EFF               	movlw	255
 34915  012ACA  6F64               	movwf	??__flash_spi_tx& (0+255),b
 34916  012ACC  0EFF               	movlw	255
 34917  012ACE  6F65               	movwf	(??__flash_spi_tx+1)& (0+255),b
 34918  012AD0  C062  F066         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 34919  012AD4  C063  F067         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 34920  012AD8  5164               	movf	??__flash_spi_tx& (0+255),w,b
 34921  012ADA  2766               	addwf	(??__flash_spi_tx+2)& (0+255),f,b
 34922  012ADC  5165               	movf	(??__flash_spi_tx+1)& (0+255),w,b
 34923  012ADE  2367               	addwfc	(??__flash_spi_tx+3)& (0+255),f,b
 34924  012AE0  C067  F066         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 34925  012AE4  6B67               	clrf	(??__flash_spi_tx+3)& (0+255),b
 34926  012AE6  5166               	movf	(??__flash_spi_tx+2)& (0+255),w,b
 34927  012AE8  6E66               	movwf	3942,c	;volatile
 34928                           
 34929                           ; BSR set to: 0
 34930                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 34931  012AEA  0562               	decf	__flash_spi_tx@length& (0+255),w,b
 34932  012AEC  6E67               	movwf	3943,c	;volatile
 34933                           
 34934                           ; BSR set to: 0
 34935                           ;flash.c: 131: LATDbits.LD7 = 0;
 34936  012AEE  9E8C               	bcf	3980,7,c	;volatile
 34937                           
 34938                           ; BSR set to: 0
 34939                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 34940  012AF0  8088               	bsf	3976,0,c	;volatile
 34941  012AF2                     
 34942                           ; BSR set to: 0
 34943  012AF2  B088               	btfsc	3976,0,c	;volatile
 34944  012AF4  D7FE               	goto	l2751
 34945                           
 34946                           ;flash.c: 134: LATDbits.LD7 = 1;
 34947  012AF6  8E8C               	bsf	3980,7,c	;volatile
 34948  012AF8  0012               	return		;funcret
 34949  012AFA                     __end_of__flash_spi_tx:
 34950                           	opt stack 0
 34951                           tosu	equ	0xFFF
 34952                           tosh	equ	0xFFE
 34953                           tosl	equ	0xFFD
 34954                           pclath	equ	0xFFA
 34955                           tblptru	equ	0xFF8
 34956                           tblptrh	equ	0xFF7
 34957                           tblptrl	equ	0xFF6
 34958                           tablat	equ	0xFF5
 34959                           prodh	equ	0xFF4
 34960                           prodl	equ	0xFF3
 34961                           intcon	equ	0xFF2
 34962                           intcon2	equ	0xFF1
 34963                           intcon3	equ	0xFF0
 34964                           postinc0	equ	0xFEE
 34965                           wreg	equ	0xFE8
 34966                           indf1	equ	0xFE7
 34967                           postinc1	equ	0xFE6
 34968                           postdec1	equ	0xFE5
 34969                           plusw1	equ	0xFE3
 34970                           fsr1h	equ	0xFE2
 34971                           fsr1l	equ	0xFE1
 34972                           indf2	equ	0xFDF
 34973                           postinc2	equ	0xFDE
 34974                           postdec2	equ	0xFDD
 34975                           plusw2	equ	0xFDB
 34976                           fsr2h	equ	0xFDA
 34977                           fsr2l	equ	0xFD9
 34978                           status	equ	0xFD8
 34979                           
 34980 ;; *************** function __flash_get_status *****************
 34981 ;; Defined at:
 34982 ;;		line 278 in file "flash.c"
 34983 ;; Parameters:    Size  Location     Type
 34984 ;;		None
 34985 ;; Auto vars:     Size  Location     Type
 34986 ;;  status          2   15[BANK0 ] unsigned int 
 34987 ;;  command         1   14[BANK0 ] unsigned char 
 34988 ;; Return value:  Size  Location     Type
 34989 ;;                  2   12[BANK0 ] unsigned int 
 34990 ;; Registers used:
 34991 ;;		wreg, status,2, status,0, cstack
 34992 ;; Tracked objects:
 34993 ;;		On entry : 0/0
 34994 ;;		On exit  : 0/0
 34995 ;;		Unchanged: 0/0
 34996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34997 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34998 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35000 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35001 ;;Total ram usage:        5 bytes
 35002 ;; Hardware stack levels used:    1
 35003 ;; Hardware stack levels required when called:   11
 35004 ;; This function calls:
 35005 ;;		__flash_spi_tx_rx
 35006 ;; This function is called by:
 35007 ;;		__flash_compare_page_to_buffer
 35008 ;;		_flash_is_busy
 35009 ;; This function uses a non-reentrant model
 35010 ;;
 35011                           
 35012                           	psect	text159
 35013  01350C                     __ptext159:
 35014                           	opt stack 0
 35015  01350C                     __flash_get_status:
 35016                           	opt stack 15
 35017                           
 35018                           ;flash.c: 282: uint8_t command = 0xD7;
 35019                           
 35020                           ;incstack = 0
 35021  01350C  0ED7               	movlw	215
 35022  01350E  0100               	movlb	0	; () banked
 35023  013510  6F6E               	movwf	__flash_get_status@command& (0+255),b
 35024                           
 35025                           ; BSR set to: 0
 35026                           ;flash.c: 283: uint16_t status;;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &
      +                          status, 2);
 35027  013512  0E6E               	movlw	low __flash_get_status@command
 35028  013514  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 35029  013516  0E00               	movlw	high __flash_get_status@command
 35030  013518  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 35031  01351A  0E00               	movlw	0
 35032  01351C  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 35033  01351E  0E01               	movlw	1
 35034  013520  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 35035  013522  0E6F               	movlw	low __flash_get_status@status
 35036  013524  6F64               	movwf	__flash_spi_tx_rx@data& (0+255),b
 35037  013526  0E00               	movlw	high __flash_get_status@status
 35038  013528  6F65               	movwf	(__flash_spi_tx_rx@data+1)& (0+255),b
 35039  01352A  0E00               	movlw	0
 35040  01352C  6F67               	movwf	(__flash_spi_tx_rx@data_length+1)& (0+255),b
 35041  01352E  0E02               	movlw	2
 35042  013530  6F66               	movwf	__flash_spi_tx_rx@data_length& (0+255),b
 35043  013532  EC23  F089         	call	__flash_spi_tx_rx	;wreg free
 35044                           
 35045                           ;flash.c: 285: return status;
 35046  013536  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 35047  01353A  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 35048  01353E  0012               	return	
 35049  013540                     __end_of__flash_get_status:
 35050                           	opt stack 0
 35051                           tosu	equ	0xFFF
 35052                           tosh	equ	0xFFE
 35053                           tosl	equ	0xFFD
 35054                           pclath	equ	0xFFA
 35055                           tblptru	equ	0xFF8
 35056                           tblptrh	equ	0xFF7
 35057                           tblptrl	equ	0xFF6
 35058                           tablat	equ	0xFF5
 35059                           prodh	equ	0xFF4
 35060                           prodl	equ	0xFF3
 35061                           intcon	equ	0xFF2
 35062                           intcon2	equ	0xFF1
 35063                           intcon3	equ	0xFF0
 35064                           postinc0	equ	0xFEE
 35065                           wreg	equ	0xFE8
 35066                           indf1	equ	0xFE7
 35067                           postinc1	equ	0xFE6
 35068                           postdec1	equ	0xFE5
 35069                           plusw1	equ	0xFE3
 35070                           fsr1h	equ	0xFE2
 35071                           fsr1l	equ	0xFE1
 35072                           indf2	equ	0xFDF
 35073                           postinc2	equ	0xFDE
 35074                           postdec2	equ	0xFDD
 35075                           plusw2	equ	0xFDB
 35076                           fsr2h	equ	0xFDA
 35077                           fsr2l	equ	0xFD9
 35078                           status	equ	0xFD8
 35079                           
 35080 ;; *************** function __flash_spi_tx_rx *****************
 35081 ;; Defined at:
 35082 ;;		line 194 in file "flash.c"
 35083 ;; Parameters:    Size  Location     Type
 35084 ;;  command         2    0[BANK0 ] PTR unsigned char 
 35085 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 35086 ;;  command_leng    2    2[BANK0 ] unsigned int 
 35087 ;;  data            2    4[BANK0 ] PTR unsigned char 
 35088 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 35089 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 35090 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_statu
      +s@status(2), 
 35091 ;;		 -> msd_buffer(512), 
 35092 ;;  data_length     2    6[BANK0 ] unsigned int 
 35093 ;; Auto vars:     Size  Location     Type
 35094 ;;		None
 35095 ;; Return value:  Size  Location     Type
 35096 ;;                  1    wreg      void 
 35097 ;; Registers used:
 35098 ;;		wreg, status,2, status,0
 35099 ;; Tracked objects:
 35100 ;;		On entry : 0/0
 35101 ;;		On exit  : 0/0
 35102 ;;		Unchanged: 0/0
 35103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35104 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35107 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35108 ;;Total ram usage:       12 bytes
 35109 ;; Hardware stack levels used:    1
 35110 ;; Hardware stack levels required when called:   10
 35111 ;; This function calls:
 35112 ;;		Nothing
 35113 ;; This function is called by:
 35114 ;;		__flash_get_status
 35115 ;;		_flash_partial_read
 35116 ;; This function uses a non-reentrant model
 35117 ;;
 35118                           
 35119                           	psect	text160
 35120  011246                     __ptext160:
 35121                           	opt stack 0
 35122  011246                     __flash_spi_tx_rx:
 35123                           	opt stack 15
 35124                           
 35125                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 35126                           
 35127                           ;incstack = 0
 35128  011246  9E88               	bcf	3976,7,c	;volatile
 35129                           
 35130                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 35131  011248  9C88               	bcf	3976,6,c	;volatile
 35132                           
 35133                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 35134  01124A  8A88               	bsf	3976,5,c	;volatile
 35135                           
 35136                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 35137  01124C  9888               	bcf	3976,4,c	;volatile
 35138                           
 35139                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 35140  01124E  9688               	bcf	3976,3,c	;volatile
 35141                           
 35142                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 35143  011250  8488               	bsf	3976,2,c	;volatile
 35144                           
 35145                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 35146  011252  9288               	bcf	3976,1,c	;volatile
 35147                           
 35148                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 35149  011254  9886               	bcf	3974,4,c	;volatile
 35150  011256  9A86               	bcf	3974,5,c	;volatile
 35151  011258  9C86               	bcf	3974,6,c	;volatile
 35152  01125A  9E86               	bcf	3974,7,c	;volatile
 35153                           
 35154                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 35155  01125C  9086               	bcf	3974,0,c	;volatile
 35156  01125E  9286               	bcf	3974,1,c	;volatile
 35157  011260  9486               	bcf	3974,2,c	;volatile
 35158  011262  9686               	bcf	3974,3,c	;volatile
 35159                           
 35160                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 35161  011264  0100               	movlb	0	; () banked
 35162  011266  5161               	movf	(__flash_spi_tx_rx@command+1)& (0+255),w,b
 35163  011268  6E6A               	movwf	3946,c	;volatile
 35164                           
 35165                           ; BSR set to: 0
 35166                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 35167  01126A  C060  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 35168                           
 35169                           ; BSR set to: 0
 35170                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 35171  01126E  0EFF               	movlw	255
 35172  011270  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35173  011272  0EFF               	movlw	255
 35174  011274  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35175  011276  C062  F06A         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 35176  01127A  C063  F06B         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 35177  01127E  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35178  011280  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35179  011282  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35180  011284  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35181  011286  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35182  01128A  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35183  01128C  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35184  01128E  6E66               	movwf	3942,c	;volatile
 35185                           
 35186                           ; BSR set to: 0
 35187                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 35188  011290  0562               	decf	__flash_spi_tx_rx@command_length& (0+255),w,b
 35189  011292  6E67               	movwf	3943,c	;volatile
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;flash.c: 222: LATDbits.LD7 = 0;
 35193  011294  9E8C               	bcf	3980,7,c	;volatile
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 35197  011296  8088               	bsf	3976,0,c	;volatile
 35198  011298                     
 35199                           ; BSR set to: 0
 35200  011298  B088               	btfsc	3976,0,c	;volatile
 35201  01129A  D7FE               	goto	l2766
 35202                           
 35203                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 35204  01129C  9A88               	bcf	3976,5,c	;volatile
 35205                           
 35206                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 35207  01129E  8888               	bsf	3976,4,c	;volatile
 35208                           
 35209                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 35210  0112A0  9688               	bcf	3976,3,c	;volatile
 35211                           
 35212                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 35213  0112A2  9488               	bcf	3976,2,c	;volatile
 35214                           
 35215                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35216  0112A4  0100               	movlb	0	; () banked
 35217  0112A6  5165               	movf	(__flash_spi_tx_rx@data+1)& (0+255),w,b
 35218  0112A8  6E68               	movwf	3944,c	;volatile
 35219                           
 35220                           ; BSR set to: 0
 35221                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35222  0112AA  C064  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 35223                           
 35224                           ; BSR set to: 0
 35225                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 35226  0112AE  0EFF               	movlw	255
 35227  0112B0  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 35228  0112B2  0EFF               	movlw	255
 35229  0112B4  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 35230  0112B6  C066  F06A         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 35231  0112BA  C067  F06B         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 35232  0112BE  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 35233  0112C0  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 35234  0112C2  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 35235  0112C4  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 35236  0112C6  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 35237  0112CA  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 35238  0112CC  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 35239  0112CE  6E66               	movwf	3942,c	;volatile
 35240                           
 35241                           ; BSR set to: 0
 35242                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 35243  0112D0  0566               	decf	__flash_spi_tx_rx@data_length& (0+255),w,b
 35244  0112D2  6E67               	movwf	3943,c	;volatile
 35245                           
 35246                           ; BSR set to: 0
 35247                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 35248  0112D4  8088               	bsf	3976,0,c	;volatile
 35249  0112D6                     
 35250                           ; BSR set to: 0
 35251  0112D6  B088               	btfsc	3976,0,c	;volatile
 35252  0112D8  D7FE               	goto	l2769
 35253                           
 35254                           ;flash.c: 249: LATDbits.LD7 = 1;
 35255  0112DA  8E8C               	bsf	3980,7,c	;volatile
 35256  0112DC  0012               	return		;funcret
 35257  0112DE                     __end_of__flash_spi_tx_rx:
 35258                           	opt stack 0
 35259                           tosu	equ	0xFFF
 35260                           tosh	equ	0xFFE
 35261                           tosl	equ	0xFFD
 35262                           pclath	equ	0xFFA
 35263                           tblptru	equ	0xFF8
 35264                           tblptrh	equ	0xFF7
 35265                           tblptrl	equ	0xFF6
 35266                           tablat	equ	0xFF5
 35267                           prodh	equ	0xFF4
 35268                           prodl	equ	0xFF3
 35269                           intcon	equ	0xFF2
 35270                           intcon2	equ	0xFF1
 35271                           intcon3	equ	0xFF0
 35272                           postinc0	equ	0xFEE
 35273                           wreg	equ	0xFE8
 35274                           indf1	equ	0xFE7
 35275                           postinc1	equ	0xFE6
 35276                           postdec1	equ	0xFE5
 35277                           plusw1	equ	0xFE3
 35278                           fsr1h	equ	0xFE2
 35279                           fsr1l	equ	0xFE1
 35280                           indf2	equ	0xFDF
 35281                           postinc2	equ	0xFDE
 35282                           postdec2	equ	0xFDD
 35283                           plusw2	equ	0xFDB
 35284                           fsr2h	equ	0xFDA
 35285                           fsr2l	equ	0xFD9
 35286                           status	equ	0xFD8
 35287                           
 35288 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 35289 ;; Defined at:
 35290 ;;		line 993 in file "usb_device_msd.c"
 35291 ;; Parameters:    Size  Location     Type
 35292 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 35293 ;; Auto vars:     Size  Location     Type
 35294 ;;		None
 35295 ;; Return value:  Size  Location     Type
 35296 ;;                  1    wreg      void 
 35297 ;; Registers used:
 35298 ;;		wreg, status,2, status,0
 35299 ;; Tracked objects:
 35300 ;;		On entry : 0/0
 35301 ;;		On exit  : 0/0
 35302 ;;		Unchanged: 0/0
 35303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35306 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35307 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35308 ;;Total ram usage:        6 bytes
 35309 ;; Hardware stack levels used:    1
 35310 ;; Hardware stack levels required when called:   10
 35311 ;; This function calls:
 35312 ;;		Nothing
 35313 ;; This function is called by:
 35314 ;;		_MSDProcessCommandMediaPresent
 35315 ;; This function uses a non-reentrant model
 35316 ;;
 35317                           
 35318                           	psect	text161
 35319  010F9E                     __ptext161:
 35320                           	opt stack 0
 35321  010F9E                     _MSDComputeDeviceInAndResidue:
 35322                           	opt stack 16
 35323                           
 35324                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 35325                           
 35326                           ;incstack = 0
 35327  010F9E  0100               	movlb	0	; () banked
 35328  010FA0  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35329  010FA2  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 35330  010FA4  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35331  010FA6  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 35332  010FA8  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 35333  010FAA  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 35334  010FAC  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 35335  010FAE  0102               	movlb	2	; () banked
 35336  010FB0  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 35337  010FB2  0100               	movlb	0	; () banked
 35338  010FB4  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 35339  010FB6  0102               	movlb	2	; () banked
 35340  010FB8  594A               	subwfb	(_gblCBW+9)& (0+255),w,b
 35341  010FBA  0100               	movlb	0	; () banked
 35342  010FBC  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 35343  010FBE  0102               	movlb	2	; () banked
 35344  010FC0  594B               	subwfb	(_gblCBW+10)& (0+255),w,b
 35345  010FC2  0100               	movlb	0	; () banked
 35346  010FC4  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 35347  010FC6  0102               	movlb	2	; () banked
 35348  010FC8  594C               	subwfb	(_gblCBW+11)& (0+255),w,b
 35349  010FCA  B0D8               	btfsc	status,0,c
 35350  010FCC  D00E               	goto	l679
 35351                           
 35352                           ; BSR set to: 2
 35353                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 35354  010FCE  0E00               	movlw	0
 35355  010FD0  010D               	movlb	13	; () banked
 35356  010FD2  6F88               	movwf	136,b	;volatile
 35357  010FD4  0E00               	movlw	0
 35358  010FD6  6F89               	movwf	137,b	;volatile
 35359  010FD8  0E00               	movlw	0
 35360  010FDA  6F8A               	movwf	138,b	;volatile
 35361  010FDC  0E00               	movlw	0
 35362  010FDE  6F8B               	movwf	139,b	;volatile
 35363                           
 35364                           ; BSR set to: 13
 35365                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 35366  010FE0  C249  F0D9         	movff	_gblCBW+8,_TransferLength
 35367  010FE4  C24A  F0DA         	movff	_gblCBW+9,_TransferLength+1
 35368                           
 35369                           ;usb_device_msd.c: 1002: }
 35370  010FE8  0012               	return	
 35371  010FEA                     l679:
 35372                           
 35373                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 35374                           
 35375                           ; BSR set to: 13
 35376  010FEA  0100               	movlb	0	; () banked
 35377  010FEC  51D9               	movf	_TransferLength& (0+255),w,b
 35378  010FEE  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 35379  010FF0  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 35380  010FF2  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 35381  010FF4  B0D8               	btfsc	status,0,c
 35382  010FF6  D004               	goto	l681
 35383                           
 35384                           ; BSR set to: 0
 35385                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 35386  010FF8  C060  F0D9         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 35387  010FFC  C061  F0DA         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 35388  011000                     l681:
 35389                           
 35390                           ; BSR set to: 0
 35391                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 35392                           
 35393                           ; BSR set to: 0
 35394  011000  51D9               	movf	_TransferLength& (0+255),w,b
 35395  011002  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 35396  011004  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 35397  011006  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 35398  011008  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 35399  01100A  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 35400  01100C  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 35401  01100E  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 35402  011010  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 35403  011012  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 35404  011014  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 35405  011016  0E00               	movlw	0
 35406  011018  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 35407  01101A  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 35408  01101C  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 35409  01101E  0102               	movlb	2	; () banked
 35410  011020  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35411  011022  0100               	movlb	0	; () banked
 35412  011024  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 35413  011026  010D               	movlb	13	; () banked
 35414  011028  6F88               	movwf	136,b	;volatile
 35415  01102A  0102               	movlb	2	; () banked
 35416  01102C  514A               	movf	(_gblCBW+9)& (0+255),w,b
 35417  01102E  0100               	movlb	0	; () banked
 35418  011030  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 35419  011032  010D               	movlb	13	; () banked
 35420  011034  6F89               	movwf	137,b	;volatile
 35421  011036  0102               	movlb	2	; () banked
 35422  011038  514B               	movf	(_gblCBW+10)& (0+255),w,b
 35423  01103A  0100               	movlb	0	; () banked
 35424  01103C  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 35425  01103E  010D               	movlb	13	; () banked
 35426  011040  6F8A               	movwf	138,b	;volatile
 35427  011042  0102               	movlb	2	; () banked
 35428  011044  514C               	movf	(_gblCBW+11)& (0+255),w,b
 35429  011046  0100               	movlb	0	; () banked
 35430  011048  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 35431  01104A  010D               	movlb	13	; () banked
 35432  01104C  6F8B               	movwf	139,b	;volatile
 35433  01104E  0012               	return	
 35434  011050                     __end_of_MSDComputeDeviceInAndResidue:
 35435                           	opt stack 0
 35436                           tosu	equ	0xFFF
 35437                           tosh	equ	0xFFE
 35438                           tosl	equ	0xFFD
 35439                           pclath	equ	0xFFA
 35440                           tblptru	equ	0xFF8
 35441                           tblptrh	equ	0xFF7
 35442                           tblptrl	equ	0xFF6
 35443                           tablat	equ	0xFF5
 35444                           prodh	equ	0xFF4
 35445                           prodl	equ	0xFF3
 35446                           intcon	equ	0xFF2
 35447                           intcon2	equ	0xFF1
 35448                           intcon3	equ	0xFF0
 35449                           postinc0	equ	0xFEE
 35450                           wreg	equ	0xFE8
 35451                           indf1	equ	0xFE7
 35452                           postinc1	equ	0xFE6
 35453                           postdec1	equ	0xFE5
 35454                           plusw1	equ	0xFE3
 35455                           fsr1h	equ	0xFE2
 35456                           fsr1l	equ	0xFE1
 35457                           indf2	equ	0xFDF
 35458                           postinc2	equ	0xFDE
 35459                           postdec2	equ	0xFDD
 35460                           plusw2	equ	0xFDB
 35461                           fsr2h	equ	0xFDA
 35462                           fsr2l	equ	0xFD9
 35463                           status	equ	0xFD8
 35464                           
 35465 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 35466 ;; Defined at:
 35467 ;;		line 18 in file "external_flash.c"
 35468 ;; Parameters:    Size  Location     Type
 35469 ;;  config          2    0[BANK0 ] PTR void 
 35470 ;;		 -> NULL(0), 
 35471 ;; Auto vars:     Size  Location     Type
 35472 ;;		None
 35473 ;; Return value:  Size  Location     Type
 35474 ;;                  2    0[BANK0 ] unsigned int 
 35475 ;; Registers used:
 35476 ;;		wreg, status,2
 35477 ;; Tracked objects:
 35478 ;;		On entry : 0/0
 35479 ;;		On exit  : 0/0
 35480 ;;		Unchanged: 0/0
 35481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35486 ;;Total ram usage:        2 bytes
 35487 ;; Hardware stack levels used:    1
 35488 ;; Hardware stack levels required when called:   10
 35489 ;; This function calls:
 35490 ;;		Nothing
 35491 ;; This function is called by:
 35492 ;;		_MSDProcessCommandMediaPresent
 35493 ;; This function uses a non-reentrant model
 35494 ;;
 35495                           
 35496                           	psect	text162
 35497  013E74                     __ptext162:
 35498                           	opt stack 0
 35499  013E74                     _ExternalFlash_SectorSizeRead:
 35500                           	opt stack 16
 35501                           
 35502                           ;external_flash.c: 21: return 512;
 35503                           
 35504                           ; BSR set to: 13
 35505                           ;incstack = 0
 35506  013E74  0E02               	movlw	2
 35507  013E76  0100               	movlb	0	; () banked
 35508  013E78  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 35509  013E7A  0E00               	movlw	0
 35510  013E7C  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 35511  013E7E  0012               	return	
 35512  013E80                     __end_of_ExternalFlash_SectorSizeRead:
 35513                           	opt stack 0
 35514                           tosu	equ	0xFFF
 35515                           tosh	equ	0xFFE
 35516                           tosl	equ	0xFFD
 35517                           pclath	equ	0xFFA
 35518                           tblptru	equ	0xFF8
 35519                           tblptrh	equ	0xFF7
 35520                           tblptrl	equ	0xFF6
 35521                           tablat	equ	0xFF5
 35522                           prodh	equ	0xFF4
 35523                           prodl	equ	0xFF3
 35524                           intcon	equ	0xFF2
 35525                           intcon2	equ	0xFF1
 35526                           intcon3	equ	0xFF0
 35527                           postinc0	equ	0xFEE
 35528                           wreg	equ	0xFE8
 35529                           indf1	equ	0xFE7
 35530                           postinc1	equ	0xFE6
 35531                           postdec1	equ	0xFE5
 35532                           plusw1	equ	0xFE3
 35533                           fsr1h	equ	0xFE2
 35534                           fsr1l	equ	0xFE1
 35535                           indf2	equ	0xFDF
 35536                           postinc2	equ	0xFDE
 35537                           postdec2	equ	0xFDD
 35538                           plusw2	equ	0xFDB
 35539                           fsr2h	equ	0xFDA
 35540                           fsr2l	equ	0xFD9
 35541                           status	equ	0xFD8
 35542                           
 35543 ;; *************** function _ExternalFlash_CapacityRead *****************
 35544 ;; Defined at:
 35545 ;;		line 24 in file "external_flash.c"
 35546 ;; Parameters:    Size  Location     Type
 35547 ;;  config          2    0[BANK0 ] PTR void 
 35548 ;;		 -> NULL(0), 
 35549 ;; Auto vars:     Size  Location     Type
 35550 ;;		None
 35551 ;; Return value:  Size  Location     Type
 35552 ;;                  4    0[BANK0 ] unsigned long 
 35553 ;; Registers used:
 35554 ;;		wreg, status,2
 35555 ;; Tracked objects:
 35556 ;;		On entry : 0/0
 35557 ;;		On exit  : 0/0
 35558 ;;		Unchanged: 0/0
 35559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35563 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35564 ;;Total ram usage:        4 bytes
 35565 ;; Hardware stack levels used:    1
 35566 ;; Hardware stack levels required when called:   10
 35567 ;; This function calls:
 35568 ;;		Nothing
 35569 ;; This function is called by:
 35570 ;;		_MSDProcessCommandMediaPresent
 35571 ;; This function uses a non-reentrant model
 35572 ;;
 35573                           
 35574                           	psect	text163
 35575  013D32                     __ptext163:
 35576                           	opt stack 0
 35577  013D32                     _ExternalFlash_CapacityRead:
 35578                           	opt stack 16
 35579                           
 35580                           ;external_flash.c: 26: return ((uint32_t) 8196 - 1);
 35581                           
 35582                           ; BSR set to: 0
 35583                           ;incstack = 0
 35584  013D32  0E03               	movlw	3
 35585  013D34  0100               	movlb	0	; () banked
 35586  013D36  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 35587  013D38  0E20               	movlw	32
 35588  013D3A  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 35589  013D3C  0E00               	movlw	0
 35590  013D3E  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 35591  013D40  0E00               	movlw	0
 35592  013D42  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 35593  013D44  0012               	return	
 35594  013D46                     __end_of_ExternalFlash_CapacityRead:
 35595                           	opt stack 0
 35596                           tosu	equ	0xFFF
 35597                           tosh	equ	0xFFE
 35598                           tosl	equ	0xFFD
 35599                           pclath	equ	0xFFA
 35600                           tblptru	equ	0xFF8
 35601                           tblptrh	equ	0xFF7
 35602                           tblptrl	equ	0xFF6
 35603                           tablat	equ	0xFF5
 35604                           prodh	equ	0xFF4
 35605                           prodl	equ	0xFF3
 35606                           intcon	equ	0xFF2
 35607                           intcon2	equ	0xFF1
 35608                           intcon3	equ	0xFF0
 35609                           postinc0	equ	0xFEE
 35610                           wreg	equ	0xFE8
 35611                           indf1	equ	0xFE7
 35612                           postinc1	equ	0xFE6
 35613                           postdec1	equ	0xFE5
 35614                           plusw1	equ	0xFE3
 35615                           fsr1h	equ	0xFE2
 35616                           fsr1l	equ	0xFE1
 35617                           indf2	equ	0xFDF
 35618                           postinc2	equ	0xFDE
 35619                           postdec2	equ	0xFDD
 35620                           plusw2	equ	0xFDB
 35621                           fsr2h	equ	0xFDA
 35622                           fsr2l	equ	0xFD9
 35623                           status	equ	0xFD8
 35624                           
 35625 ;; *************** function _ExternalFlash_MediaInitialize *****************
 35626 ;; Defined at:
 35627 ;;		line 10 in file "external_flash.c"
 35628 ;; Parameters:    Size  Location     Type
 35629 ;;  config          2    0[BANK0 ] PTR void 
 35630 ;;		 -> NULL(0), 
 35631 ;; Auto vars:     Size  Location     Type
 35632 ;;		None
 35633 ;; Return value:  Size  Location     Type
 35634 ;;                  2    0[BANK0 ] PTR struct .
 35635 ;; Registers used:
 35636 ;;		wreg, status,2, status,0
 35637 ;; Tracked objects:
 35638 ;;		On entry : 0/0
 35639 ;;		On exit  : 0/0
 35640 ;;		Unchanged: 0/0
 35641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35645 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35646 ;;Total ram usage:        2 bytes
 35647 ;; Hardware stack levels used:    1
 35648 ;; Hardware stack levels required when called:   10
 35649 ;; This function calls:
 35650 ;;		Nothing
 35651 ;; This function is called by:
 35652 ;;		_USBMSDInit
 35653 ;;		_MSDProcessCommand
 35654 ;; This function uses a non-reentrant model
 35655 ;;
 35656                           
 35657                           	psect	text164
 35658  013AF4                     __ptext164:
 35659                           	opt stack 0
 35660  013AF4                     _ExternalFlash_MediaInitialize:
 35661                           	opt stack 0
 35662                           
 35663                           ; BSR set to: 0
 35664                           ;Skip over the trampoline to the duplicate function for level 2
 35665  013AF4  B25B               	btfsc	btemp,1,c
 35666  013AF6  EFFE  F09D         	goto	i2_ExternalFlash_MediaInitialize
 35667  013AFA                     _ExternalFlash_MediaInitialize$intlevel0:
 35668                           	opt stack 17
 35669                           
 35670                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 35671                           
 35672                           ;incstack = 0
 35673  013AFA  0102               	movlb	2	; () banked
 35674  013AFC  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 35675                           
 35676                           ; BSR set to: 2
 35677                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 35678  013AFE  0E02               	movlw	2
 35679  013B00  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 35680  013B02  0E00               	movlw	0
 35681  013B04  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 35682                           
 35683                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 35684  013B06  0E00               	movlw	0
 35685  013B08  6FB6               	movwf	_mediaInformation& (0+255),b
 35686                           
 35687                           ; BSR set to: 2
 35688                           ;external_flash.c: 15: return &mediaInformation;
 35689  013B0A  0EB6               	movlw	low _mediaInformation
 35690  013B0C  0100               	movlb	0	; () banked
 35691  013B0E  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 35692  013B10  0E02               	movlw	high _mediaInformation
 35693  013B12  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 35694  013B14  0012               	return	
 35695  013B16                     __end_of_ExternalFlash_MediaInitialize:
 35696                           	opt stack 0
 35697                           tosu	equ	0xFFF
 35698                           tosh	equ	0xFFE
 35699                           tosl	equ	0xFFD
 35700                           pclath	equ	0xFFA
 35701                           tblptru	equ	0xFF8
 35702                           tblptrh	equ	0xFF7
 35703                           tblptrl	equ	0xFF6
 35704                           tablat	equ	0xFF5
 35705                           prodh	equ	0xFF4
 35706                           prodl	equ	0xFF3
 35707                           intcon	equ	0xFF2
 35708                           intcon2	equ	0xFF1
 35709                           intcon3	equ	0xFF0
 35710                           postinc0	equ	0xFEE
 35711                           wreg	equ	0xFE8
 35712                           indf1	equ	0xFE7
 35713                           postinc1	equ	0xFE6
 35714                           postdec1	equ	0xFE5
 35715                           plusw1	equ	0xFE3
 35716                           fsr1h	equ	0xFE2
 35717                           fsr1l	equ	0xFE1
 35718                           indf2	equ	0xFDF
 35719                           postinc2	equ	0xFDE
 35720                           postdec2	equ	0xFDD
 35721                           plusw2	equ	0xFDB
 35722                           fsr2h	equ	0xFDA
 35723                           fsr2l	equ	0xFD9
 35724                           status	equ	0xFD8
 35725                           
 35726 ;; *************** function _ExternalFlash_MediaDetect *****************
 35727 ;; Defined at:
 35728 ;;		line 29 in file "external_flash.c"
 35729 ;; Parameters:    Size  Location     Type
 35730 ;;  config          2    0[BANK0 ] PTR void 
 35731 ;;		 -> NULL(0), 
 35732 ;; Auto vars:     Size  Location     Type
 35733 ;;		None
 35734 ;; Return value:  Size  Location     Type
 35735 ;;                  1    wreg      unsigned char 
 35736 ;; Registers used:
 35737 ;;		wreg
 35738 ;; Tracked objects:
 35739 ;;		On entry : 0/0
 35740 ;;		On exit  : 0/0
 35741 ;;		Unchanged: 0/0
 35742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35747 ;;Total ram usage:        2 bytes
 35748 ;; Hardware stack levels used:    1
 35749 ;; Hardware stack levels required when called:   10
 35750 ;; This function calls:
 35751 ;;		Nothing
 35752 ;; This function is called by:
 35753 ;;		_USBMSDInit
 35754 ;;		_MSDProcessCommand
 35755 ;; This function uses a non-reentrant model
 35756 ;;
 35757                           
 35758                           	psect	text165
 35759  013EA8                     __ptext165:
 35760                           	opt stack 0
 35761  013EA8                     _ExternalFlash_MediaDetect:
 35762                           	opt stack 0
 35763                           
 35764                           ; BSR set to: 0
 35765                           ;Skip over the trampoline to the duplicate function for level 2
 35766  013EA8  B25B               	btfsc	btemp,1,c
 35767  013EAA  EF76  F09F         	goto	i2_ExternalFlash_MediaDetect
 35768  013EAE                     _ExternalFlash_MediaDetect$intlevel0:
 35769                           	opt stack 17
 35770                           
 35771                           ;external_flash.c: 31: return 1;
 35772                           
 35773                           ;incstack = 0
 35774  013EAE  0E01               	movlw	1
 35775  013EB0  0012               	return	
 35776  013EB2                     __end_of_ExternalFlash_MediaDetect:
 35777                           	opt stack 0
 35778                           tosu	equ	0xFFF
 35779                           tosh	equ	0xFFE
 35780                           tosl	equ	0xFFD
 35781                           pclath	equ	0xFFA
 35782                           tblptru	equ	0xFF8
 35783                           tblptrh	equ	0xFF7
 35784                           tblptrl	equ	0xFF6
 35785                           tablat	equ	0xFF5
 35786                           prodh	equ	0xFF4
 35787                           prodl	equ	0xFF3
 35788                           intcon	equ	0xFF2
 35789                           intcon2	equ	0xFF1
 35790                           intcon3	equ	0xFF0
 35791                           postinc0	equ	0xFEE
 35792                           wreg	equ	0xFE8
 35793                           indf1	equ	0xFE7
 35794                           postinc1	equ	0xFE6
 35795                           postdec1	equ	0xFE5
 35796                           plusw1	equ	0xFE3
 35797                           fsr1h	equ	0xFE2
 35798                           fsr1l	equ	0xFE1
 35799                           indf2	equ	0xFDF
 35800                           postinc2	equ	0xFDE
 35801                           postdec2	equ	0xFDD
 35802                           plusw2	equ	0xFDB
 35803                           fsr2h	equ	0xFDA
 35804                           fsr2l	equ	0xFD9
 35805                           status	equ	0xFD8
 35806                           
 35807 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 35808 ;; Defined at:
 35809 ;;		line 108 in file "app_device_custom_hid.c"
 35810 ;; Parameters:    Size  Location     Type
 35811 ;;		None
 35812 ;; Auto vars:     Size  Location     Type
 35813 ;;  return_value    2   52[BANK0 ] unsigned int 
 35814 ;;  idx             1   54[BANK0 ] unsigned char 
 35815 ;; Return value:  Size  Location     Type
 35816 ;;                  1    wreg      void 
 35817 ;; Registers used:
 35818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35819 ;; Tracked objects:
 35820 ;;		On entry : 0/0
 35821 ;;		On exit  : 0/0
 35822 ;;		Unchanged: 0/0
 35823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35825 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35826 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35827 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35828 ;;Total ram usage:       11 bytes
 35829 ;; Hardware stack levels used:    1
 35830 ;; Hardware stack levels required when called:   15
 35831 ;; This function calls:
 35832 ;;		_USBTransferOnePacket
 35833 ;;		__fill_buffer_get_calibration1
 35834 ;;		__fill_buffer_get_calibration2
 35835 ;;		__fill_buffer_get_display1
 35836 ;;		__fill_buffer_get_display2
 35837 ;;		__fill_buffer_get_status
 35838 ;;		__parse_command_calibration
 35839 ;;		__parse_command_long
 35840 ;;		__parse_command_short
 35841 ;; This function is called by:
 35842 ;;		_main
 35843 ;; This function uses a non-reentrant model
 35844 ;;
 35845                           
 35846                           	psect	text166
 35847  00BDC4                     __ptext166:
 35848                           	opt stack 0
 35849  00BDC4                     _APP_DeviceCustomHIDTasks:
 35850                           	opt stack 15
 35851                           
 35852                           ;app_device_custom_hid.c: 110: uint8_t idx;;app_device_custom_hid.c: 115: if( USBDeviceS
      +                          tate < CONFIGURED_STATE )
 35853                           
 35854                           ;incstack = 0
 35855  00BDC4  0E20               	movlw	32
 35856  00BDC6  602B               	cpfslt	_USBDeviceState,c	;volatile
 35857  00BDC8  D001               	goto	l1070
 35858  00BDCA  0012               	return	
 35859  00BDCC                     l1070:
 35860                           
 35861                           ;app_device_custom_hid.c: 118: };app_device_custom_hid.c: 124: if( UCONbits.SUSPND== 1 )
 35862  00BDCC  B265               	btfsc	3941,1,c	;volatile
 35863  00BDCE  0012               	return	
 35864                           
 35865                           ;app_device_custom_hid.c: 127: };app_device_custom_hid.c: 130: if(((USBOutHandle != 0x00
      +                          00) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 35866                           
 35867                           ;app_device_custom_hid.c: 125: {;app_device_custom_hid.c: 126: return;
 35868  00BDD0  0101               	movlb	1	; () banked
 35869  00BDD2  51E9               	movf	_USBOutHandle& (0+255),w,b
 35870  00BDD4  11EA               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 35871  00BDD6  B4D8               	btfsc	status,2,c
 35872  00BDD8  D0E4               	goto	l1076
 35873                           
 35874                           ; BSR set to: 1
 35875  00BDDA  C1E9  FFD9         	movff	_USBOutHandle,fsr2l
 35876  00BDDE  C1EA  FFDA         	movff	_USBOutHandle+1,fsr2h
 35877  00BDE2  BEDF               	btfsc	indf2,7,c
 35878  00BDE4  0012               	return	
 35879  00BDE6  D0DD               	goto	l1076
 35880  00BDE8                     
 35881                           ;app_device_custom_hid.c: 140: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35882                           
 35883                           ; BSR set to: 1
 35884  00BDE8  0100               	movlb	0	; () banked
 35885  00BDEA  51D7               	movf	_USBInHandle& (0+255),w,b
 35886  00BDEC  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35887  00BDEE  B4D8               	btfsc	status,2,c
 35888  00BDF0  D006               	goto	u22310
 35889                           
 35890                           ; BSR set to: 0
 35891  00BDF2  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 35892  00BDF6  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 35893  00BDFA  BEDF               	btfsc	indf2,7,c
 35894  00BDFC  D0EC               	goto	l1081
 35895  00BDFE                     u22310:
 35896                           
 35897                           ; BSR set to: 0
 35898                           ;app_device_custom_hid.c: 141: {;app_device_custom_hid.c: 143: _fill_buffer_get_status()
      +                          ;
 35899                           
 35900                           ; BSR set to: 0
 35901  00BDFE  EC6E  F06A         	call	__fill_buffer_get_status	;wreg free
 35902                           
 35903                           ;app_device_custom_hid.c: 145: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35904  00BE02  0E01               	movlw	1
 35905  00BE04  0100               	movlb	0	; () banked
 35906  00BE06  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35907  00BE08  0EA4               	movlw	low _ToSendDataBuffer
 35908  00BE0A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35909  00BE0C  0E03               	movlw	high _ToSendDataBuffer
 35910  00BE0E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35911  00BE10  0E40               	movlw	64
 35912  00BE12  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35913  00BE14  0E01               	movlw	1
 35914  00BE16  ECF5  F07B         	call	_USBTransferOnePacket
 35915  00BE1A  D0BE               	goto	L41
 35916  00BE1C                     
 35917                           ;app_device_custom_hid.c: 151: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35918  00BE1C  0100               	movlb	0	; () banked
 35919  00BE1E  51D7               	movf	_USBInHandle& (0+255),w,b
 35920  00BE20  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35921  00BE22  B4D8               	btfsc	status,2,c
 35922  00BE24  D006               	goto	u22330
 35923                           
 35924                           ; BSR set to: 0
 35925  00BE26  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 35926  00BE2A  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 35927  00BE2E  BEDF               	btfsc	indf2,7,c
 35928  00BE30  D0D2               	goto	l1081
 35929  00BE32                     u22330:
 35930                           
 35931                           ; BSR set to: 0
 35932                           ;app_device_custom_hid.c: 152: {;app_device_custom_hid.c: 154: _fill_buffer_get_display1
      +                          ();
 35933                           
 35934                           ; BSR set to: 0
 35935  00BE32  EC9A  F097         	call	__fill_buffer_get_display1	;wreg free
 35936                           
 35937                           ;app_device_custom_hid.c: 156: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35938  00BE36  0E01               	movlw	1
 35939  00BE38  0100               	movlb	0	; () banked
 35940  00BE3A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35941  00BE3C  0EA4               	movlw	low _ToSendDataBuffer
 35942  00BE3E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35943  00BE40  0E03               	movlw	high _ToSendDataBuffer
 35944  00BE42  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35945  00BE44  0E40               	movlw	64
 35946  00BE46  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35947  00BE48  0E01               	movlw	1
 35948  00BE4A  ECF5  F07B         	call	_USBTransferOnePacket
 35949  00BE4E  D0A4               	goto	L41
 35950  00BE50                     
 35951                           ;app_device_custom_hid.c: 162: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35952  00BE50  0100               	movlb	0	; () banked
 35953  00BE52  51D7               	movf	_USBInHandle& (0+255),w,b
 35954  00BE54  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35955  00BE56  B4D8               	btfsc	status,2,c
 35956  00BE58  D006               	goto	u22350
 35957                           
 35958                           ; BSR set to: 0
 35959  00BE5A  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 35960  00BE5E  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 35961  00BE62  BEDF               	btfsc	indf2,7,c
 35962  00BE64  D0B8               	goto	l1081
 35963  00BE66                     u22350:
 35964                           
 35965                           ; BSR set to: 0
 35966                           ;app_device_custom_hid.c: 163: {;app_device_custom_hid.c: 165: _fill_buffer_get_display2
      +                          ();
 35967                           
 35968                           ; BSR set to: 0
 35969  00BE66  EC72  F097         	call	__fill_buffer_get_display2	;wreg free
 35970                           
 35971                           ;app_device_custom_hid.c: 167: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 35972  00BE6A  0E01               	movlw	1
 35973  00BE6C  0100               	movlb	0	; () banked
 35974  00BE6E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35975  00BE70  0EA4               	movlw	low _ToSendDataBuffer
 35976  00BE72  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35977  00BE74  0E03               	movlw	high _ToSendDataBuffer
 35978  00BE76  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35979  00BE78  0E40               	movlw	64
 35980  00BE7A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35981  00BE7C  0E01               	movlw	1
 35982  00BE7E  ECF5  F07B         	call	_USBTransferOnePacket
 35983  00BE82  D08A               	goto	L41
 35984  00BE84                     
 35985                           ;app_device_custom_hid.c: 173: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 35986  00BE84  0100               	movlb	0	; () banked
 35987  00BE86  51D7               	movf	_USBInHandle& (0+255),w,b
 35988  00BE88  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 35989  00BE8A  B4D8               	btfsc	status,2,c
 35990  00BE8C  D006               	goto	u22370
 35991                           
 35992                           ; BSR set to: 0
 35993  00BE8E  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 35994  00BE92  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 35995  00BE96  BEDF               	btfsc	indf2,7,c
 35996  00BE98  D09E               	goto	l1081
 35997  00BE9A                     u22370:
 35998                           
 35999                           ; BSR set to: 0
 36000                           ;app_device_custom_hid.c: 174: {;app_device_custom_hid.c: 176: _fill_buffer_get_calibrat
      +                          ion1();
 36001                           
 36002                           ; BSR set to: 0
 36003  00BE9A  EC57  F08E         	call	__fill_buffer_get_calibration1	;wreg free
 36004                           
 36005                           ;app_device_custom_hid.c: 178: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36006  00BE9E  0E01               	movlw	1
 36007  00BEA0  0100               	movlb	0	; () banked
 36008  00BEA2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36009  00BEA4  0EA4               	movlw	low _ToSendDataBuffer
 36010  00BEA6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36011  00BEA8  0E03               	movlw	high _ToSendDataBuffer
 36012  00BEAA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36013  00BEAC  0E40               	movlw	64
 36014  00BEAE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36015  00BEB0  0E01               	movlw	1
 36016  00BEB2  ECF5  F07B         	call	_USBTransferOnePacket
 36017  00BEB6  D070               	goto	L41
 36018  00BEB8                     
 36019                           ;app_device_custom_hid.c: 184: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36020  00BEB8  0100               	movlb	0	; () banked
 36021  00BEBA  51D7               	movf	_USBInHandle& (0+255),w,b
 36022  00BEBC  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36023  00BEBE  B4D8               	btfsc	status,2,c
 36024  00BEC0  D006               	goto	u22390
 36025                           
 36026                           ; BSR set to: 0
 36027  00BEC2  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 36028  00BEC6  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 36029  00BECA  BEDF               	btfsc	indf2,7,c
 36030  00BECC  D084               	goto	l1081
 36031  00BECE                     u22390:
 36032                           
 36033                           ; BSR set to: 0
 36034                           ;app_device_custom_hid.c: 185: {;app_device_custom_hid.c: 187: _fill_buffer_get_calibrat
      +                          ion2();
 36035                           
 36036                           ; BSR set to: 0
 36037  00BECE  EC24  F093         	call	__fill_buffer_get_calibration2	;wreg free
 36038                           
 36039                           ;app_device_custom_hid.c: 189: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36040  00BED2  0E01               	movlw	1
 36041  00BED4  0100               	movlb	0	; () banked
 36042  00BED6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36043  00BED8  0EA4               	movlw	low _ToSendDataBuffer
 36044  00BEDA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36045  00BEDC  0E03               	movlw	high _ToSendDataBuffer
 36046  00BEDE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36047  00BEE0  0E40               	movlw	64
 36048  00BEE2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36049  00BEE4  0E01               	movlw	1
 36050  00BEE6  ECF5  F07B         	call	_USBTransferOnePacket
 36051  00BEEA  D056               	goto	L41
 36052  00BEEC                     
 36053                           ;app_device_custom_hid.c: 195: LATDbits.LD1 ^= 1;
 36054  00BEEC  728C               	btg	3980,1,c	;volatile
 36055                           
 36056                           ;app_device_custom_hid.c: 196: break;
 36057  00BEEE  D073               	goto	l1081
 36058  00BEF0                     
 36059                           ;app_device_custom_hid.c: 200: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 36060  00BEF0  0100               	movlb	0	; () banked
 36061  00BEF2  51D7               	movf	_USBInHandle& (0+255),w,b
 36062  00BEF4  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36063  00BEF6  B4D8               	btfsc	status,2,c
 36064  00BEF8  D006               	goto	u22410
 36065                           
 36066                           ; BSR set to: 0
 36067  00BEFA  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 36068  00BEFE  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 36069  00BF02  BEDF               	btfsc	indf2,7,c
 36070  00BF04  D068               	goto	l1081
 36071  00BF06                     u22410:
 36072                           
 36073                           ; BSR set to: 0
 36074                           ;app_device_custom_hid.c: 201: {;app_device_custom_hid.c: 203: ToSendDataBuffer[0] = COM
      +                          MAND_GET_BUTTON_STATUS;
 36075                           
 36076                           ; BSR set to: 0
 36077  00BF06  0E81               	movlw	129
 36078  00BF08  0103               	movlb	3	; () banked
 36079  00BF0A  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 36080                           
 36081                           ; BSR set to: 3
 36082                           ;app_device_custom_hid.c: 204: if(PORTAbits.RA0)
 36083  00BF0C  A080               	btfss	3968,0,c	;volatile
 36084  00BF0E  D002               	goto	l1103
 36085                           
 36086                           ; BSR set to: 3
 36087                           ;app_device_custom_hid.c: 205: {;app_device_custom_hid.c: 207: ToSendDataBuffer[1] = 0x0
      +                          1;
 36088  00BF10  0E01               	movlw	1
 36089  00BF12  D001               	goto	L40
 36090  00BF14                     l1103:
 36091                           
 36092                           ; BSR set to: 3
 36093                           ;app_device_custom_hid.c: 209: else;app_device_custom_hid.c: 210: {;app_device_custom_hi
      +                          d.c: 212: ToSendDataBuffer[1] = 0x00;
 36094                           
 36095                           ; BSR set to: 3
 36096  00BF14  0E00               	movlw	0
 36097  00BF16                     L40:
 36098  00BF16  6FA5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 36099                           
 36100                           ; BSR set to: 3
 36101                           ;app_device_custom_hid.c: 213: };app_device_custom_hid.c: 215: USBInHandle = USBTransfer
      +                          OnePacket(1,1,(uint8_t*)&ToSendDataBuffer[0],64);
 36102                           
 36103                           ; BSR set to: 3
 36104  00BF18  0E01               	movlw	1
 36105  00BF1A  0100               	movlb	0	; () banked
 36106  00BF1C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36107  00BF1E  0EA4               	movlw	low _ToSendDataBuffer
 36108  00BF20  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36109  00BF22  0E03               	movlw	high _ToSendDataBuffer
 36110  00BF24  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36111  00BF26  0E40               	movlw	64
 36112  00BF28  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36113  00BF2A  0E01               	movlw	1
 36114  00BF2C  ECF5  F07B         	call	_USBTransferOnePacket
 36115  00BF30  D033               	goto	L41
 36116  00BF32                     
 36117                           ;app_device_custom_hid.c: 220: {;app_device_custom_hid.c: 221: uint16_t return_value;;ap
      +                          p_device_custom_hid.c: 223: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USBInH
      +                          andle & 0x80) != 0x00)))
 36118  00BF32  0100               	movlb	0	; () banked
 36119  00BF34  51D7               	movf	_USBInHandle& (0+255),w,b
 36120  00BF36  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 36121  00BF38  B4D8               	btfsc	status,2,c
 36122  00BF3A  D006               	goto	u22440
 36123                           
 36124                           ; BSR set to: 0
 36125  00BF3C  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 36126  00BF40  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 36127  00BF44  BEDF               	btfsc	indf2,7,c
 36128  00BF46  D047               	goto	l1081
 36129  00BF48                     u22440:
 36130                           
 36131                           ; BSR set to: 0
 36132                           ;app_device_custom_hid.c: 224: {;app_device_custom_hid.c: 226: ToSendDataBuffer[0] = COM
      +                          MAND_READ_POTENTIOMETER;
 36133                           
 36134                           ; BSR set to: 0
 36135  00BF48  0E37               	movlw	55
 36136  00BF4A  0103               	movlb	3	; () banked
 36137  00BF4C  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 36138                           
 36139                           ; BSR set to: 3
 36140                           ;app_device_custom_hid.c: 228: return_value = os.temperature_onboard >> 3;
 36141  00BF4E  EE22  F036         	lfsr	2,_os+54	;volatile
 36142  00BF52  CFDE F08C          	movff	postinc2,??_APP_DeviceCustomHIDTasks
 36143  00BF56  CFDD F08D          	movff	postdec2,??_APP_DeviceCustomHIDTasks+1
 36144  00BF5A  0100               	movlb	0	; () banked
 36145  00BF5C  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36146  00BF5E  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36147  00BF60  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36148  00BF62  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36149  00BF64  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36150  00BF66  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36151  00BF68  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36152  00BF6A  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36153  00BF6C  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36154  00BF6E  C08C  F094         	movff	??_APP_DeviceCustomHIDTasks,APP_DeviceCustomHIDTasks@return_value
 36155  00BF72  C08D  F095         	movff	??_APP_DeviceCustomHIDTasks+1,APP_DeviceCustomHIDTasks@return_value+1
 36156                           
 36157                           ; BSR set to: 0
 36158                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[1] = (uint8_t) return_value;
 36159  00BF76  C094  F3A5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 36160                           
 36161                           ; BSR set to: 0
 36162                           ;app_device_custom_hid.c: 230: ToSendDataBuffer[2] = return_value >> 8;
 36163  00BF7A  5195               	movf	(APP_DeviceCustomHIDTasks@return_value+1)& (0+255),w,b
 36164  00BF7C  0103               	movlb	3	; () banked
 36165  00BF7E  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 36166                           
 36167                           ; BSR set to: 3
 36168                           ;app_device_custom_hid.c: 232: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 36169  00BF80  0E01               	movlw	1
 36170  00BF82  0100               	movlb	0	; () banked
 36171  00BF84  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36172  00BF86  0EA4               	movlw	low _ToSendDataBuffer
 36173  00BF88  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36174  00BF8A  0E03               	movlw	high _ToSendDataBuffer
 36175  00BF8C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36176  00BF8E  0E40               	movlw	64
 36177  00BF90  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36178  00BF92  0E01               	movlw	1
 36179  00BF94  ECF5  F07B         	call	_USBTransferOnePacket
 36180  00BF98                     L41:
 36181  00BF98  C060  F0D7         	movff	?_USBTransferOnePacket,_USBInHandle
 36182  00BF9C  C061  F0D8         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 36183                           
 36184                           ;app_device_custom_hid.c: 236: }
 36185                           
 36186                           ;app_device_custom_hid.c: 233: };app_device_custom_hid.c: 234: };app_device_custom_hid.c
      +                          : 235: break;
 36187  00BFA0  D01A               	goto	l1081
 36188  00BFA2                     l1076:
 36189  00BFA2  0104               	movlb	4	; () banked
 36190  00BFA4  5178               	movf	_ReceivedDataBuffer& (0+255),w,b
 36191                           
 36192                           ; Switch size 1, requested type "space"
 36193                           ; Number of cases is 8, Range of values is 16 to 129
 36194                           ; switch strategies available:
 36195                           ; Name         Instructions Cycles
 36196                           ; simple_byte           25    13 (average)
 36197                           ;	Chosen strategy is simple_byte
 36198  00BFA6  0A10               	xorlw	16	; case 16
 36199  00BFA8  B4D8               	btfsc	status,2,c
 36200  00BFAA  D71E               	goto	l1077
 36201  00BFAC  0A01               	xorlw	1	; case 17
 36202  00BFAE  B4D8               	btfsc	status,2,c
 36203  00BFB0  D735               	goto	l1082
 36204  00BFB2  0A03               	xorlw	3	; case 18
 36205  00BFB4  B4D8               	btfsc	status,2,c
 36206  00BFB6  D74C               	goto	l1086
 36207  00BFB8  0A01               	xorlw	1	; case 19
 36208  00BFBA  B4D8               	btfsc	status,2,c
 36209  00BFBC  D763               	goto	l1090
 36210  00BFBE  0A07               	xorlw	7	; case 20
 36211  00BFC0  B4D8               	btfsc	status,2,c
 36212  00BFC2  D77A               	goto	l1094
 36213  00BFC4  0A23               	xorlw	35	; case 55
 36214  00BFC6  B4D8               	btfsc	status,2,c
 36215  00BFC8  D7B4               	goto	l1105
 36216  00BFCA  0AB7               	xorlw	183	; case 128
 36217  00BFCC  B4D8               	btfsc	status,2,c
 36218  00BFCE  D78E               	goto	l1098
 36219  00BFD0  0A01               	xorlw	1	; case 129
 36220  00BFD2  B4D8               	btfsc	status,2,c
 36221  00BFD4  D78D               	goto	l1099
 36222  00BFD6                     l1081:
 36223                           
 36224                           ;app_device_custom_hid.c: 239: idx = 1;
 36225                           
 36226                           ; BSR set to: 4
 36227  00BFD6  0E01               	movlw	1
 36228  00BFD8  0100               	movlb	0	; () banked
 36229  00BFDA  D076               	goto	L42
 36230  00BFDC                     
 36231                           ; BSR set to: 0
 36232                           ;app_device_custom_hid.c: 245: _parse_command_short(ReceivedDataBuffer[idx]);
 36233                           
 36234                           ; BSR set to: 0
 36235  00BFDC  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36236  00BFDE  0D01               	mullw	1
 36237  00BFE0  0E78               	movlw	low _ReceivedDataBuffer
 36238  00BFE2  24F3               	addwf	prodl,w,c
 36239  00BFE4  6ED9               	movwf	fsr2l,c
 36240  00BFE6  0E04               	movlw	high _ReceivedDataBuffer
 36241  00BFE8  20F4               	addwfc	prodh,w,c
 36242  00BFEA  6EDA               	movwf	fsr2h,c
 36243  00BFEC  50DF               	movf	indf2,w,c
 36244  00BFEE  EC57  F081         	call	__parse_command_short
 36245                           
 36246                           ;app_device_custom_hid.c: 246: ++idx;
 36247  00BFF2  0100               	movlb	0	; () banked
 36248  00BFF4  2B96               	incf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36249                           
 36250                           ;app_device_custom_hid.c: 247: break;
 36251  00BFF6  D085               	goto	l1113
 36252  00BFF8                     
 36253                           ; BSR set to: 0
 36254                           ;app_device_custom_hid.c: 249: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 36255                           
 36256                           ; BSR set to: 0
 36257  00BFF8  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36258  00BFFA  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36259  00BFFC  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36260  00BFFE  0E01               	movlw	1
 36261  00C000  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36262  00C002  0E00               	movlw	0
 36263  00C004  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36264  00C006  0E78               	movlw	low _ReceivedDataBuffer
 36265  00C008  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36266  00C00A  6ED9               	movwf	fsr2l,c
 36267  00C00C  0E04               	movlw	high _ReceivedDataBuffer
 36268  00C00E  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36269  00C010  6EDA               	movwf	fsr2h,c
 36270  00C012  50DF               	movf	indf2,w,c
 36271  00C014  6F63               	movwf	__parse_command_long@data& (0+255),b
 36272  00C016  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36273  00C018  0D01               	mullw	1
 36274  00C01A  0E78               	movlw	low _ReceivedDataBuffer
 36275  00C01C  24F3               	addwf	prodl,w,c
 36276  00C01E  6ED9               	movwf	fsr2l,c
 36277  00C020  0E04               	movlw	high _ReceivedDataBuffer
 36278  00C022  20F4               	addwfc	prodh,w,c
 36279  00C024  6EDA               	movwf	fsr2h,c
 36280  00C026  50DF               	movf	indf2,w,c
 36281  00C028  ECE1  F080         	call	__parse_command_long
 36282                           
 36283                           ;app_device_custom_hid.c: 250: idx += 2;
 36284  00C02C  0E02               	movlw	2
 36285  00C02E  D048               	goto	L43
 36286  00C030                     
 36287                           ; BSR set to: 0
 36288                           ;app_device_custom_hid.c: 253: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 36289                           
 36290                           ; BSR set to: 0
 36291  00C030  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36292  00C032  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36293  00C034  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36294  00C036  0E01               	movlw	1
 36295  00C038  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 36296  00C03A  0E00               	movlw	0
 36297  00C03C  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 36298  00C03E  0E78               	movlw	low _ReceivedDataBuffer
 36299  00C040  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36300  00C042  6ED9               	movwf	fsr2l,c
 36301  00C044  0E04               	movlw	high _ReceivedDataBuffer
 36302  00C046  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36303  00C048  6EDA               	movwf	fsr2h,c
 36304  00C04A  50DF               	movf	indf2,w,c
 36305  00C04C  6F63               	movwf	__parse_command_calibration@item& (0+255),b
 36306  00C04E  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36307  00C050  6F8E               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 36308  00C052  6B8F               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 36309  00C054  0E02               	movlw	2
 36310  00C056  278E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),f,b
 36311  00C058  0E00               	movlw	0
 36312  00C05A  238F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),f,b
 36313  00C05C  0E78               	movlw	low _ReceivedDataBuffer
 36314  00C05E  258E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),w,b
 36315  00C060  6ED9               	movwf	fsr2l,c
 36316  00C062  0E04               	movlw	high _ReceivedDataBuffer
 36317  00C064  218F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),w,b
 36318  00C066  6EDA               	movwf	fsr2h,c
 36319  00C068  50DF               	movf	indf2,w,c
 36320  00C06A  6F64               	movwf	__parse_command_calibration@dat1& (0+255),b
 36321  00C06C  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36322  00C06E  6F90               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),b
 36323  00C070  6B91               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),b
 36324  00C072  0E03               	movlw	3
 36325  00C074  2790               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),f,b
 36326  00C076  0E00               	movlw	0
 36327  00C078  2391               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),f,b
 36328  00C07A  0E78               	movlw	low _ReceivedDataBuffer
 36329  00C07C  2590               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),w,b
 36330  00C07E  6ED9               	movwf	fsr2l,c
 36331  00C080  0E04               	movlw	high _ReceivedDataBuffer
 36332  00C082  2191               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),w,b
 36333  00C084  6EDA               	movwf	fsr2h,c
 36334  00C086  50DF               	movf	indf2,w,c
 36335  00C088  6F65               	movwf	__parse_command_calibration@dat2& (0+255),b
 36336  00C08A  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36337  00C08C  6F92               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),b
 36338  00C08E  6B93               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),b
 36339  00C090  0E04               	movlw	4
 36340  00C092  2792               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),f,b
 36341  00C094  0E00               	movlw	0
 36342  00C096  2393               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),f,b
 36343  00C098  0E78               	movlw	low _ReceivedDataBuffer
 36344  00C09A  2592               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),w,b
 36345  00C09C  6ED9               	movwf	fsr2l,c
 36346  00C09E  0E04               	movlw	high _ReceivedDataBuffer
 36347  00C0A0  2193               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),w,b
 36348  00C0A2  6EDA               	movwf	fsr2h,c
 36349  00C0A4  50DF               	movf	indf2,w,c
 36350  00C0A6  6F66               	movwf	__parse_command_calibration@dat3& (0+255),b
 36351  00C0A8  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36352  00C0AA  0D01               	mullw	1
 36353  00C0AC  0E78               	movlw	low _ReceivedDataBuffer
 36354  00C0AE  24F3               	addwf	prodl,w,c
 36355  00C0B0  6ED9               	movwf	fsr2l,c
 36356  00C0B2  0E04               	movlw	high _ReceivedDataBuffer
 36357  00C0B4  20F4               	addwfc	prodh,w,c
 36358  00C0B6  6EDA               	movwf	fsr2h,c
 36359  00C0B8  50DF               	movf	indf2,w,c
 36360  00C0BA  EC8B  F077         	call	__parse_command_calibration
 36361                           
 36362                           ;app_device_custom_hid.c: 254: idx += 5;
 36363  00C0BE  0E05               	movlw	5
 36364  00C0C0                     L43:
 36365  00C0C0  0100               	movlb	0	; () banked
 36366  00C0C2  2796               	addwf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 36367                           
 36368                           ;app_device_custom_hid.c: 255: break;
 36369  00C0C4  D01E               	goto	l1113
 36370  00C0C6                     
 36371                           ; BSR set to: 0
 36372                           ;app_device_custom_hid.c: 257: idx = 65;
 36373                           
 36374                           ; BSR set to: 0
 36375  00C0C6  0E41               	movlw	65
 36376  00C0C8                     L42:
 36377  00C0C8  6F96               	movwf	APP_DeviceCustomHIDTasks@idx& (0+255),b
 36378                           
 36379                           ;app_device_custom_hid.c: 258: }
 36380  00C0CA  D01B               	goto	l1113
 36381  00C0CC                     
 36382                           ; BSR set to: 0
 36383                           
 36384                           ; BSR set to: 0
 36385  00C0CC  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 36386  00C0CE  0D01               	mullw	1
 36387  00C0D0  0E78               	movlw	low _ReceivedDataBuffer
 36388  00C0D2  24F3               	addwf	prodl,w,c
 36389  00C0D4  6ED9               	movwf	fsr2l,c
 36390  00C0D6  0E04               	movlw	high _ReceivedDataBuffer
 36391  00C0D8  20F4               	addwfc	prodh,w,c
 36392  00C0DA  6EDA               	movwf	fsr2h,c
 36393  00C0DC  50DF               	movf	indf2,w,c
 36394  00C0DE  0BF0               	andlw	240
 36395  00C0E0  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 36396  00C0E2  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 36397                           
 36398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36399                           ; Switch size 1, requested type "space"
 36400                           ; Number of cases is 1, Range of values is 0 to 0
 36401                           ; switch strategies available:
 36402                           ; Name         Instructions Cycles
 36403                           ; simple_byte            4     3 (average)
 36404                           ;	Chosen strategy is simple_byte
 36405  00C0E4  518D               	movf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 36406  00C0E6  0A00               	xorlw	0	; case 0
 36407  00C0E8  A4D8               	btfss	status,2,c
 36408  00C0EA  D7ED               	goto	l1116
 36409                           
 36410                           ; BSR set to: 0
 36411                           ; Switch size 1, requested type "space"
 36412                           ; Number of cases is 3, Range of values is 48 to 96
 36413                           ; switch strategies available:
 36414                           ; Name         Instructions Cycles
 36415                           ; simple_byte           10     6 (average)
 36416                           ;	Chosen strategy is simple_byte
 36417  00C0EC  518C               	movf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 36418  00C0EE  0A30               	xorlw	48	; case 48
 36419  00C0F0  B4D8               	btfsc	status,2,c
 36420  00C0F2  D774               	goto	l1112
 36421  00C0F4  0A70               	xorlw	112	; case 64
 36422  00C0F6  B4D8               	btfsc	status,2,c
 36423  00C0F8  D77F               	goto	l1114
 36424  00C0FA  0A20               	xorlw	32	; case 96
 36425  00C0FC  B4D8               	btfsc	status,2,c
 36426  00C0FE  D798               	goto	l1115
 36427  00C100  D7E2               	goto	l1116
 36428  00C102                     l1113:
 36429                           
 36430                           ; BSR set to: 0
 36431                           
 36432                           ; BSR set to: 0
 36433                           
 36434                           ; BSR set to: 0
 36435  00C102  0E3D               	movlw	61
 36436  00C104  6596               	cpfsgt	APP_DeviceCustomHIDTasks@idx& (0+255),b
 36437  00C106  D7E2               	goto	l1111
 36438                           
 36439                           ; BSR set to: 0
 36440                           ;app_device_custom_hid.c: 259: };app_device_custom_hid.c: 263: USBOutHandle = USBTransfe
      +                          rOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
 36441                           
 36442                           ; BSR set to: 0
 36443  00C108  0E00               	movlw	0
 36444  00C10A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36445  00C10C  0E78               	movlw	low _ReceivedDataBuffer
 36446  00C10E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36447  00C110  0E04               	movlw	high _ReceivedDataBuffer
 36448  00C112  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36449  00C114  0E40               	movlw	64
 36450  00C116  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36451  00C118  0E01               	movlw	1
 36452  00C11A  ECF5  F07B         	call	_USBTransferOnePacket
 36453  00C11E  C060  F1E9         	movff	?_USBTransferOnePacket,_USBOutHandle
 36454  00C122  C061  F1EA         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 36455  00C126  0012               	return	
 36456  00C128                     __end_of_APP_DeviceCustomHIDTasks:
 36457                           	opt stack 0
 36458                           tosu	equ	0xFFF
 36459                           tosh	equ	0xFFE
 36460                           tosl	equ	0xFFD
 36461                           pclath	equ	0xFFA
 36462                           tblptru	equ	0xFF8
 36463                           tblptrh	equ	0xFF7
 36464                           tblptrl	equ	0xFF6
 36465                           tablat	equ	0xFF5
 36466                           prodh	equ	0xFF4
 36467                           prodl	equ	0xFF3
 36468                           intcon	equ	0xFF2
 36469                           intcon2	equ	0xFF1
 36470                           intcon3	equ	0xFF0
 36471                           postinc0	equ	0xFEE
 36472                           wreg	equ	0xFE8
 36473                           indf1	equ	0xFE7
 36474                           postinc1	equ	0xFE6
 36475                           postdec1	equ	0xFE5
 36476                           plusw1	equ	0xFE3
 36477                           fsr1h	equ	0xFE2
 36478                           fsr1l	equ	0xFE1
 36479                           indf2	equ	0xFDF
 36480                           postinc2	equ	0xFDE
 36481                           postdec2	equ	0xFDD
 36482                           plusw2	equ	0xFDB
 36483                           fsr2h	equ	0xFDA
 36484                           fsr2l	equ	0xFD9
 36485                           status	equ	0xFD8
 36486                           
 36487 ;; *************** function __parse_command_short *****************
 36488 ;; Defined at:
 36489 ;;		line 398 in file "app_device_custom_hid.c"
 36490 ;; Parameters:    Size  Location     Type
 36491 ;;  cmd             1    wreg     unsigned char 
 36492 ;; Auto vars:     Size  Location     Type
 36493 ;;  cmd             1   43[BANK0 ] unsigned char 
 36494 ;; Return value:  Size  Location     Type
 36495 ;;                  1    wreg      void 
 36496 ;; Registers used:
 36497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36498 ;; Tracked objects:
 36499 ;;		On entry : 0/0
 36500 ;;		On exit  : 0/0
 36501 ;;		Unchanged: 0/0
 36502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36506 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36507 ;;Total ram usage:        1 bytes
 36508 ;; Hardware stack levels used:    1
 36509 ;; Hardware stack levels required when called:   14
 36510 ;; This function calls:
 36511 ;;		_rtcc_write_eeprom
 36512 ;;		_system_output_off
 36513 ;;		_system_output_on
 36514 ;; This function is called by:
 36515 ;;		_APP_DeviceCustomHIDTasks
 36516 ;; This function uses a non-reentrant model
 36517 ;;
 36518                           
 36519                           	psect	text167
 36520  0102AE                     __ptext167:
 36521                           	opt stack 0
 36522  0102AE                     __parse_command_short:
 36523                           	opt stack 15
 36524                           
 36525                           ;incstack = 0
 36526                           ;__parse_command_short@cmd stored from wreg
 36527  0102AE  0100               	movlb	0	; () banked
 36528  0102B0  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 36529                           
 36530                           ;app_device_custom_hid.c: 400: switch(cmd)
 36531  0102B2  D03C               	goto	l1143
 36532  0102B4                     
 36533                           ;app_device_custom_hid.c: 403: system_output_off(OUTPUT_1);
 36534  0102B4  0E01               	movlw	1
 36535  0102B6  ECD5  F095         	call	_system_output_off
 36536                           
 36537                           ;app_device_custom_hid.c: 404: break;
 36538  0102BA  0012               	return	
 36539  0102BC                     
 36540                           ;app_device_custom_hid.c: 406: system_output_on(OUTPUT_1);
 36541  0102BC  0E01               	movlw	1
 36542  0102BE  ECC2  F097         	call	_system_output_on
 36543                           
 36544                           ;app_device_custom_hid.c: 407: break;
 36545  0102C2  0012               	return	
 36546  0102C4                     
 36547                           ;app_device_custom_hid.c: 409: system_output_off(OUTPUT_2);
 36548  0102C4  0E02               	movlw	2
 36549  0102C6  ECD5  F095         	call	_system_output_off
 36550                           
 36551                           ;app_device_custom_hid.c: 410: break;
 36552  0102CA  0012               	return	
 36553  0102CC                     
 36554                           ;app_device_custom_hid.c: 412: system_output_on(OUTPUT_2);
 36555  0102CC  0E02               	movlw	2
 36556  0102CE  ECC2  F097         	call	_system_output_on
 36557                           
 36558                           ;app_device_custom_hid.c: 413: break;
 36559  0102D2  0012               	return	
 36560  0102D4                     
 36561                           ;app_device_custom_hid.c: 415: system_output_off(OUTPUT_3);
 36562  0102D4  0E04               	movlw	4
 36563  0102D6  ECD5  F095         	call	_system_output_off
 36564                           
 36565                           ;app_device_custom_hid.c: 416: break;
 36566  0102DA  0012               	return	
 36567  0102DC                     
 36568                           ;app_device_custom_hid.c: 418: system_output_on(OUTPUT_3);
 36569  0102DC  0E04               	movlw	4
 36570  0102DE  ECC2  F097         	call	_system_output_on
 36571                           
 36572                           ;app_device_custom_hid.c: 419: break;
 36573  0102E2  0012               	return	
 36574  0102E4                     
 36575                           ;app_device_custom_hid.c: 421: system_output_off(OUTPUT_4);
 36576  0102E4  0E08               	movlw	8
 36577  0102E6  ECD5  F095         	call	_system_output_off
 36578                           
 36579                           ;app_device_custom_hid.c: 422: break;
 36580  0102EA  0012               	return	
 36581  0102EC                     
 36582                           ;app_device_custom_hid.c: 424: system_output_on(OUTPUT_4);
 36583  0102EC  0E08               	movlw	8
 36584  0102EE  ECC2  F097         	call	_system_output_on
 36585                           
 36586                           ;app_device_custom_hid.c: 425: break;
 36587  0102F2  0012               	return	
 36588  0102F4                     
 36589                           ;app_device_custom_hid.c: 427: system_output_off(OUTPUT_USB);
 36590  0102F4  0E10               	movlw	16
 36591  0102F6  ECD5  F095         	call	_system_output_off
 36592                           
 36593                           ;app_device_custom_hid.c: 428: break;
 36594  0102FA  0012               	return	
 36595  0102FC                     
 36596                           ;app_device_custom_hid.c: 430: system_output_on(OUTPUT_USB);
 36597  0102FC  0E10               	movlw	16
 36598  0102FE  ECC2  F097         	call	_system_output_on
 36599                           
 36600                           ;app_device_custom_hid.c: 431: break;
 36601  010302  0012               	return	
 36602  010304                     
 36603                           ;app_device_custom_hid.c: 433: system_output_off(OUTPUT_FAN);
 36604  010304  0E20               	movlw	32
 36605  010306  ECD5  F095         	call	_system_output_off
 36606                           
 36607                           ;app_device_custom_hid.c: 434: break;
 36608  01030A  0012               	return	
 36609  01030C                     
 36610                           ;app_device_custom_hid.c: 436: system_output_on(OUTPUT_FAN);
 36611  01030C  0E20               	movlw	32
 36612  01030E  ECC2  F097         	call	_system_output_on
 36613                           
 36614                           ;app_device_custom_hid.c: 437: break;
 36615  010312  0012               	return	
 36616  010314                     
 36617                           ;app_device_custom_hid.c: 439: --os.encoderCount;
 36618  010314  0102               	movlb	2	; () banked
 36619  010316  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 36620                           
 36621                           ;app_device_custom_hid.c: 440: break;
 36622  010318  0012               	return	
 36623  01031A                     
 36624                           ;app_device_custom_hid.c: 442: ++os.encoderCount;
 36625                           
 36626                           ; BSR set to: 2
 36627  01031A  0102               	movlb	2	; () banked
 36628  01031C  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 36629                           
 36630                           ;app_device_custom_hid.c: 443: break;
 36631  01031E  0012               	return	
 36632  010320                     
 36633                           ;app_device_custom_hid.c: 445: ++os.buttonCount;
 36634                           
 36635                           ; BSR set to: 2
 36636  010320  0102               	movlb	2	; () banked
 36637  010322  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 36638                           
 36639                           ;app_device_custom_hid.c: 446: break;
 36640  010324  0012               	return	
 36641  010326                     
 36642                           ;app_device_custom_hid.c: 448: rtcc_write_eeprom();
 36643                           
 36644                           ; BSR set to: 2
 36645  010326  EC33  F098         	call	_rtcc_write_eeprom	;wreg free
 36646                           
 36647                           ;app_device_custom_hid.c: 450: }
 36648                           
 36649                           ;app_device_custom_hid.c: 449: break;
 36650  01032A  0012               	return	
 36651  01032C                     l1143:
 36652  01032C  0100               	movlb	0	; () banked
 36653  01032E  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 36654                           
 36655                           ; Switch size 1, requested type "space"
 36656                           ; Number of cases is 16, Range of values is 48 to 63
 36657                           ; switch strategies available:
 36658                           ; Name         Instructions Cycles
 36659                           ; simple_byte           49    25 (average)
 36660                           ;	Chosen strategy is simple_byte
 36661  010330  0A30               	xorlw	48	; case 48
 36662  010332  B4D8               	btfsc	status,2,c
 36663  010334  D7BF               	goto	l1144
 36664  010336  0A01               	xorlw	1	; case 49
 36665  010338  B4D8               	btfsc	status,2,c
 36666  01033A  D7C0               	goto	l1146
 36667  01033C  0A03               	xorlw	3	; case 50
 36668  01033E  B4D8               	btfsc	status,2,c
 36669  010340  D7C1               	goto	l1147
 36670  010342  0A01               	xorlw	1	; case 51
 36671  010344  B4D8               	btfsc	status,2,c
 36672  010346  D7C2               	goto	l1148
 36673  010348  0A07               	xorlw	7	; case 52
 36674  01034A  B4D8               	btfsc	status,2,c
 36675  01034C  D7C3               	goto	l1149
 36676  01034E  0A01               	xorlw	1	; case 53
 36677  010350  B4D8               	btfsc	status,2,c
 36678  010352  D7C4               	goto	l1150
 36679  010354  0A03               	xorlw	3	; case 54
 36680  010356  B4D8               	btfsc	status,2,c
 36681  010358  D7C5               	goto	l1151
 36682  01035A  0A01               	xorlw	1	; case 55
 36683  01035C  B4D8               	btfsc	status,2,c
 36684  01035E  D7C6               	goto	l1152
 36685  010360  0A0F               	xorlw	15	; case 56
 36686  010362  B4D8               	btfsc	status,2,c
 36687  010364  D7C7               	goto	l1153
 36688  010366  0A01               	xorlw	1	; case 57
 36689  010368  B4D8               	btfsc	status,2,c
 36690  01036A  D7C8               	goto	l1154
 36691  01036C  0A03               	xorlw	3	; case 58
 36692  01036E  B4D8               	btfsc	status,2,c
 36693  010370  D7C9               	goto	l1155
 36694  010372  0A01               	xorlw	1	; case 59
 36695  010374  B4D8               	btfsc	status,2,c
 36696  010376  D7CA               	goto	l1156
 36697  010378  0A07               	xorlw	7	; case 60
 36698  01037A  B4D8               	btfsc	status,2,c
 36699  01037C  D7CB               	goto	l1157
 36700  01037E  0A01               	xorlw	1	; case 61
 36701  010380  B4D8               	btfsc	status,2,c
 36702  010382  D7CB               	goto	l1158
 36703  010384  0A03               	xorlw	3	; case 62
 36704  010386  B4D8               	btfsc	status,2,c
 36705  010388  D7CB               	goto	l1159
 36706  01038A  0A01               	xorlw	1	; case 63
 36707  01038C  A4D8               	btfss	status,2,c
 36708  01038E  0012               	return	
 36709  010390  D7CA               	goto	l1160
 36710  010392                     __end_of__parse_command_short:
 36711                           	opt stack 0
 36712                           tosu	equ	0xFFF
 36713                           tosh	equ	0xFFE
 36714                           tosl	equ	0xFFD
 36715                           pclath	equ	0xFFA
 36716                           tblptru	equ	0xFF8
 36717                           tblptrh	equ	0xFF7
 36718                           tblptrl	equ	0xFF6
 36719                           tablat	equ	0xFF5
 36720                           prodh	equ	0xFF4
 36721                           prodl	equ	0xFF3
 36722                           intcon	equ	0xFF2
 36723                           intcon2	equ	0xFF1
 36724                           intcon3	equ	0xFF0
 36725                           postinc0	equ	0xFEE
 36726                           wreg	equ	0xFE8
 36727                           indf1	equ	0xFE7
 36728                           postinc1	equ	0xFE6
 36729                           postdec1	equ	0xFE5
 36730                           plusw1	equ	0xFE3
 36731                           fsr1h	equ	0xFE2
 36732                           fsr1l	equ	0xFE1
 36733                           indf2	equ	0xFDF
 36734                           postinc2	equ	0xFDE
 36735                           postdec2	equ	0xFDD
 36736                           plusw2	equ	0xFDB
 36737                           fsr2h	equ	0xFDA
 36738                           fsr2l	equ	0xFD9
 36739                           status	equ	0xFD8
 36740                           
 36741 ;; *************** function _system_output_on *****************
 36742 ;; Defined at:
 36743 ;;		line 507 in file "os.c"
 36744 ;; Parameters:    Size  Location     Type
 36745 ;;  output          1    wreg     enum E6652
 36746 ;; Auto vars:     Size  Location     Type
 36747 ;;  output          1    0[BANK0 ] enum E6652
 36748 ;; Return value:  Size  Location     Type
 36749 ;;                  1    wreg      void 
 36750 ;; Registers used:
 36751 ;;		wreg, status,2, status,0
 36752 ;; Tracked objects:
 36753 ;;		On entry : 0/0
 36754 ;;		On exit  : 0/0
 36755 ;;		Unchanged: 0/0
 36756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36761 ;;Total ram usage:        1 bytes
 36762 ;; Hardware stack levels used:    1
 36763 ;; Hardware stack levels required when called:   10
 36764 ;; This function calls:
 36765 ;;		Nothing
 36766 ;; This function is called by:
 36767 ;;		__parse_command_short
 36768 ;;		_system_output_toggle
 36769 ;;		__ui_encoder
 36770 ;; This function uses a non-reentrant model
 36771 ;;
 36772                           
 36773                           	psect	text168
 36774  012F84                     __ptext168:
 36775                           	opt stack 0
 36776  012F84                     _system_output_on:
 36777                           	opt stack 17
 36778                           
 36779                           ;incstack = 0
 36780                           ;system_output_on@output stored from wreg
 36781  012F84  0100               	movlb	0	; () banked
 36782  012F86  6F60               	movwf	system_output_on@output& (0+255),b
 36783                           
 36784                           ;os.c: 510: os.outputs |= output;
 36785  012F88  0100               	movlb	0	; () banked
 36786  012F8A  5160               	movf	system_output_on@output& (0+255),w,b
 36787  012F8C  0102               	movlb	2	; () banked
 36788  012F8E  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 36789                           
 36790                           ;os.c: 513: switch(output)
 36791  012F90  D00E               	goto	l1406
 36792  012F92                     l1407:
 36793                           
 36794                           ; BSR set to: 0
 36795                           ;os.c: 516: LATCbits.LC7 = 1;
 36796  012F92  8E8B               	bsf	3979,7,c	;volatile
 36797                           
 36798                           ;os.c: 517: LATEbits.LE2 = 0;
 36799  012F94  948D               	bcf	3981,2,c	;volatile
 36800                           
 36801                           ;os.c: 518: break;
 36802  012F96  0012               	return	
 36803  012F98                     l1409:
 36804                           
 36805                           ; BSR set to: 0
 36806                           ;os.c: 520: LATCbits.LC7 = 1;
 36807  012F98  8E8B               	bsf	3979,7,c	;volatile
 36808                           
 36809                           ;os.c: 521: LATEbits.LE1 = 0;
 36810  012F9A  928D               	bcf	3981,1,c	;volatile
 36811                           
 36812                           ;os.c: 522: break;
 36813  012F9C  0012               	return	
 36814  012F9E                     l1410:
 36815                           
 36816                           ; BSR set to: 0
 36817                           ;os.c: 524: LATCbits.LC7 = 1;
 36818  012F9E  8E8B               	bsf	3979,7,c	;volatile
 36819                           
 36820                           ;os.c: 525: LATEbits.LE0 = 0;
 36821  012FA0  908D               	bcf	3981,0,c	;volatile
 36822                           
 36823                           ;os.c: 526: break;
 36824  012FA2  0012               	return	
 36825  012FA4                     l1411:
 36826                           
 36827                           ; BSR set to: 0
 36828                           ;os.c: 528: LATCbits.LC7 = 1;
 36829  012FA4  8E8B               	bsf	3979,7,c	;volatile
 36830                           
 36831                           ;os.c: 529: LATAbits.LA5 = 0;
 36832  012FA6  9A89               	bcf	3977,5,c	;volatile
 36833                           
 36834                           ;os.c: 530: break;
 36835  012FA8  0012               	return	
 36836  012FAA                     l1412:
 36837                           
 36838                           ; BSR set to: 0
 36839                           ;os.c: 532: LATDbits.LD3 = 1;
 36840  012FAA  868C               	bsf	3980,3,c	;volatile
 36841                           
 36842                           ; BSR set to: 0
 36843                           ;os.c: 534: }
 36844                           
 36845                           ;os.c: 533: break;
 36846  012FAC  0012               	return	
 36847  012FAE                     l1406:
 36848                           
 36849                           ; BSR set to: 0
 36850  012FAE  0100               	movlb	0	; () banked
 36851  012FB0  5160               	movf	system_output_on@output& (0+255),w,b
 36852                           
 36853                           ; Switch size 1, requested type "space"
 36854                           ; Number of cases is 5, Range of values is 1 to 16
 36855                           ; switch strategies available:
 36856                           ; Name         Instructions Cycles
 36857                           ; simple_byte           16     9 (average)
 36858                           ;	Chosen strategy is simple_byte
 36859  012FB2  0A01               	xorlw	1	; case 1
 36860  012FB4  B4D8               	btfsc	status,2,c
 36861  012FB6  D7ED               	goto	l1407
 36862  012FB8  0A03               	xorlw	3	; case 2
 36863  012FBA  B4D8               	btfsc	status,2,c
 36864  012FBC  D7ED               	goto	l1409
 36865  012FBE  0A06               	xorlw	6	; case 4
 36866  012FC0  B4D8               	btfsc	status,2,c
 36867  012FC2  D7ED               	goto	l1410
 36868  012FC4  0A0C               	xorlw	12	; case 8
 36869  012FC6  B4D8               	btfsc	status,2,c
 36870  012FC8  D7ED               	goto	l1411
 36871  012FCA  0A18               	xorlw	24	; case 16
 36872  012FCC  A4D8               	btfss	status,2,c
 36873  012FCE  0012               	return	
 36874  012FD0  D7EC               	goto	l1412
 36875  012FD2                     __end_of_system_output_on:
 36876                           	opt stack 0
 36877                           tosu	equ	0xFFF
 36878                           tosh	equ	0xFFE
 36879                           tosl	equ	0xFFD
 36880                           pclath	equ	0xFFA
 36881                           tblptru	equ	0xFF8
 36882                           tblptrh	equ	0xFF7
 36883                           tblptrl	equ	0xFF6
 36884                           tablat	equ	0xFF5
 36885                           prodh	equ	0xFF4
 36886                           prodl	equ	0xFF3
 36887                           intcon	equ	0xFF2
 36888                           intcon2	equ	0xFF1
 36889                           intcon3	equ	0xFF0
 36890                           postinc0	equ	0xFEE
 36891                           wreg	equ	0xFE8
 36892                           indf1	equ	0xFE7
 36893                           postinc1	equ	0xFE6
 36894                           postdec1	equ	0xFE5
 36895                           plusw1	equ	0xFE3
 36896                           fsr1h	equ	0xFE2
 36897                           fsr1l	equ	0xFE1
 36898                           indf2	equ	0xFDF
 36899                           postinc2	equ	0xFDE
 36900                           postdec2	equ	0xFDD
 36901                           plusw2	equ	0xFDB
 36902                           fsr2h	equ	0xFDA
 36903                           fsr2l	equ	0xFD9
 36904                           status	equ	0xFD8
 36905                           
 36906 ;; *************** function _system_output_off *****************
 36907 ;; Defined at:
 36908 ;;		line 537 in file "os.c"
 36909 ;; Parameters:    Size  Location     Type
 36910 ;;  output          1    wreg     enum E6652
 36911 ;; Auto vars:     Size  Location     Type
 36912 ;;  output          1    1[BANK0 ] enum E6652
 36913 ;; Return value:  Size  Location     Type
 36914 ;;                  1    wreg      void 
 36915 ;; Registers used:
 36916 ;;		wreg, status,2, status,0
 36917 ;; Tracked objects:
 36918 ;;		On entry : 0/0
 36919 ;;		On exit  : 0/0
 36920 ;;		Unchanged: 0/0
 36921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36924 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36925 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36926 ;;Total ram usage:        2 bytes
 36927 ;; Hardware stack levels used:    1
 36928 ;; Hardware stack levels required when called:   10
 36929 ;; This function calls:
 36930 ;;		Nothing
 36931 ;; This function is called by:
 36932 ;;		_main
 36933 ;;		__parse_command_short
 36934 ;;		_system_output_toggle
 36935 ;;		__ui_encoder
 36936 ;; This function uses a non-reentrant model
 36937 ;;
 36938                           
 36939                           	psect	text169
 36940  012BAA                     __ptext169:
 36941                           	opt stack 0
 36942  012BAA                     _system_output_off:
 36943                           	opt stack 17
 36944                           
 36945                           ; BSR set to: 0
 36946                           ;incstack = 0
 36947                           ;system_output_off@output stored from wreg
 36948  012BAA  0100               	movlb	0	; () banked
 36949  012BAC  6F61               	movwf	system_output_off@output& (0+255),b
 36950                           
 36951                           ;os.c: 540: os.outputs &= (~output);
 36952  012BAE  0100               	movlb	0	; () banked
 36953  012BB0  5161               	movf	system_output_off@output& (0+255),w,b
 36954  012BB2  0AFF               	xorlw	255
 36955  012BB4  0102               	movlb	2	; () banked
 36956  012BB6  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 36957                           
 36958                           ;os.c: 543: switch(output)
 36959  012BB8  D00A               	goto	l1416
 36960  012BBA                     l1417:
 36961                           
 36962                           ; BSR set to: 0
 36963                           ;os.c: 546: LATEbits.LE2 = 1;
 36964  012BBA  848D               	bsf	3981,2,c	;volatile
 36965                           
 36966                           ;os.c: 547: break;
 36967  012BBC  D019               	goto	l1418
 36968  012BBE                     l1419:
 36969                           
 36970                           ; BSR set to: 0
 36971                           ;os.c: 549: LATEbits.LE1 = 1;
 36972  012BBE  828D               	bsf	3981,1,c	;volatile
 36973                           
 36974                           ;os.c: 550: break;
 36975  012BC0  D017               	goto	l1418
 36976  012BC2                     l1420:
 36977                           
 36978                           ; BSR set to: 0
 36979                           ;os.c: 552: LATEbits.LE0 = 1;
 36980  012BC2  808D               	bsf	3981,0,c	;volatile
 36981                           
 36982                           ;os.c: 553: break;
 36983  012BC4  D015               	goto	l1418
 36984  012BC6                     l1421:
 36985                           
 36986                           ; BSR set to: 0
 36987                           ;os.c: 555: LATAbits.LA5 = 1;
 36988  012BC6  8A89               	bsf	3977,5,c	;volatile
 36989                           
 36990                           ;os.c: 556: break;
 36991  012BC8  D013               	goto	l1418
 36992  012BCA                     l1422:
 36993                           
 36994                           ; BSR set to: 0
 36995                           ;os.c: 558: LATDbits.LD3 = 0;
 36996  012BCA  968C               	bcf	3980,3,c	;volatile
 36997                           
 36998                           ; BSR set to: 0
 36999                           ;os.c: 560: }
 37000                           
 37001                           ;os.c: 559: break;
 37002  012BCC  D011               	goto	l1418
 37003  012BCE                     l1416:
 37004                           
 37005                           ; BSR set to: 0
 37006  012BCE  0100               	movlb	0	; () banked
 37007  012BD0  5161               	movf	system_output_off@output& (0+255),w,b
 37008                           
 37009                           ; Switch size 1, requested type "space"
 37010                           ; Number of cases is 5, Range of values is 1 to 16
 37011                           ; switch strategies available:
 37012                           ; Name         Instructions Cycles
 37013                           ; simple_byte           16     9 (average)
 37014                           ;	Chosen strategy is simple_byte
 37015  012BD2  0A01               	xorlw	1	; case 1
 37016  012BD4  B4D8               	btfsc	status,2,c
 37017  012BD6  D7F1               	goto	l1417
 37018  012BD8  0A03               	xorlw	3	; case 2
 37019  012BDA  B4D8               	btfsc	status,2,c
 37020  012BDC  D7F0               	goto	l1419
 37021  012BDE  0A06               	xorlw	6	; case 4
 37022  012BE0  B4D8               	btfsc	status,2,c
 37023  012BE2  D7EF               	goto	l1420
 37024  012BE4  0A0C               	xorlw	12	; case 8
 37025  012BE6  B4D8               	btfsc	status,2,c
 37026  012BE8  D7EE               	goto	l1421
 37027  012BEA  0A18               	xorlw	24	; case 16
 37028  012BEC  B4D8               	btfsc	status,2,c
 37029  012BEE  D7ED               	goto	l1422
 37030  012BF0                     l1418:
 37031                           
 37032                           ; BSR set to: 0
 37033                           ;os.c: 563: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 37034                           
 37035                           ; BSR set to: 0
 37036  012BF0  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 37037  012BF4  0E0F               	movlw	15
 37038  012BF6  1760               	andwf	??_system_output_off& (0+255),f,b
 37039  012BF8  A4D8               	btfss	status,2,c
 37040  012BFA  0012               	return	
 37041                           
 37042                           ; BSR set to: 0
 37043                           ;os.c: 564: {;os.c: 565: LATCbits.LC7 = 0;
 37044  012BFC  9E8B               	bcf	3979,7,c	;volatile
 37045  012BFE  0012               	return	
 37046  012C00                     __end_of_system_output_off:
 37047                           	opt stack 0
 37048                           tosu	equ	0xFFF
 37049                           tosh	equ	0xFFE
 37050                           tosl	equ	0xFFD
 37051                           pclath	equ	0xFFA
 37052                           tblptru	equ	0xFF8
 37053                           tblptrh	equ	0xFF7
 37054                           tblptrl	equ	0xFF6
 37055                           tablat	equ	0xFF5
 37056                           prodh	equ	0xFF4
 37057                           prodl	equ	0xFF3
 37058                           intcon	equ	0xFF2
 37059                           intcon2	equ	0xFF1
 37060                           intcon3	equ	0xFF0
 37061                           postinc0	equ	0xFEE
 37062                           wreg	equ	0xFE8
 37063                           indf1	equ	0xFE7
 37064                           postinc1	equ	0xFE6
 37065                           postdec1	equ	0xFE5
 37066                           plusw1	equ	0xFE3
 37067                           fsr1h	equ	0xFE2
 37068                           fsr1l	equ	0xFE1
 37069                           indf2	equ	0xFDF
 37070                           postinc2	equ	0xFDE
 37071                           postdec2	equ	0xFDD
 37072                           plusw2	equ	0xFDB
 37073                           fsr2h	equ	0xFDA
 37074                           fsr2l	equ	0xFD9
 37075                           status	equ	0xFD8
 37076                           
 37077 ;; *************** function _rtcc_write_eeprom *****************
 37078 ;; Defined at:
 37079 ;;		line 436 in file "rtcc.c"
 37080 ;; Parameters:    Size  Location     Type
 37081 ;;		None
 37082 ;; Auto vars:     Size  Location     Type
 37083 ;;  date            6   37[BANK0 ] unsigned char [6]
 37084 ;; Return value:  Size  Location     Type
 37085 ;;                  1    wreg      void 
 37086 ;; Registers used:
 37087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37088 ;; Tracked objects:
 37089 ;;		On entry : 0/0
 37090 ;;		On exit  : 0/0
 37091 ;;		Unchanged: 0/0
 37092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37094 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37096 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37097 ;;Total ram usage:        6 bytes
 37098 ;; Hardware stack levels used:    1
 37099 ;; Hardware stack levels required when called:   13
 37100 ;; This function calls:
 37101 ;;		_i2c_eeprom_write
 37102 ;;		_rtcc_get_day
 37103 ;;		_rtcc_get_hours
 37104 ;;		_rtcc_get_minutes
 37105 ;;		_rtcc_get_month
 37106 ;;		_rtcc_get_seconds
 37107 ;;		_rtcc_get_year
 37108 ;; This function is called by:
 37109 ;;		__parse_command_short
 37110 ;;		__ui_encoder
 37111 ;;		_rtcc_read_eeprom
 37112 ;; This function uses a non-reentrant model
 37113 ;;
 37114                           
 37115                           	psect	text170
 37116  013066                     __ptext170:
 37117                           	opt stack 0
 37118  013066                     _rtcc_write_eeprom:
 37119                           	opt stack 15
 37120                           
 37121                           ;rtcc.c: 438: uint8_t date[6];;rtcc.c: 439: date[0] = rtcc_get_year();
 37122                           
 37123                           ; BSR set to: 0
 37124                           ;incstack = 0
 37125  013066  EC04  F09F         	call	_rtcc_get_year	;wreg free
 37126  01306A  0100               	movlb	0	; () banked
 37127  01306C  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 37128                           
 37129                           ;rtcc.c: 440: date[1] = rtcc_get_month();
 37130  01306E  EC12  F09F         	call	_rtcc_get_month	;wreg free
 37131  013072  0100               	movlb	0	; () banked
 37132  013074  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 37133                           
 37134                           ;rtcc.c: 441: date[2] = rtcc_get_day();
 37135  013076  EC27  F09F         	call	_rtcc_get_day	;wreg free
 37136  01307A  0100               	movlb	0	; () banked
 37137  01307C  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 37138                           
 37139                           ;rtcc.c: 442: date[3] = rtcc_get_hours();
 37140  01307E  EC20  F09F         	call	_rtcc_get_hours	;wreg free
 37141  013082  0100               	movlb	0	; () banked
 37142  013084  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 37143                           
 37144                           ;rtcc.c: 443: date[4] = rtcc_get_minutes();
 37145  013086  EC19  F09F         	call	_rtcc_get_minutes	;wreg free
 37146  01308A  0100               	movlb	0	; () banked
 37147  01308C  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 37148                           
 37149                           ;rtcc.c: 444: date[5] = rtcc_get_seconds();
 37150  01308E  EC0B  F09F         	call	_rtcc_get_seconds	;wreg free
 37151  013092  0100               	movlb	0	; () banked
 37152  013094  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 37153                           
 37154                           ; BSR set to: 0
 37155                           ;rtcc.c: 446: i2c_eeprom_write(0x040, &date[0], 6);
 37156  013096  0E00               	movlw	0
 37157  013098  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 37158  01309A  0E40               	movlw	64
 37159  01309C  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 37160  01309E  0E85               	movlw	low rtcc_write_eeprom@date
 37161  0130A0  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 37162  0130A2  0E00               	movlw	high rtcc_write_eeprom@date
 37163  0130A4  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 37164  0130A6  0E06               	movlw	6
 37165  0130A8  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 37166  0130AA  ECD6  F08D         	call	_i2c_eeprom_write	;wreg free
 37167  0130AE  0012               	return		;funcret
 37168  0130B0                     __end_of_rtcc_write_eeprom:
 37169                           	opt stack 0
 37170                           tosu	equ	0xFFF
 37171                           tosh	equ	0xFFE
 37172                           tosl	equ	0xFFD
 37173                           pclath	equ	0xFFA
 37174                           tblptru	equ	0xFF8
 37175                           tblptrh	equ	0xFF7
 37176                           tblptrl	equ	0xFF6
 37177                           tablat	equ	0xFF5
 37178                           prodh	equ	0xFF4
 37179                           prodl	equ	0xFF3
 37180                           intcon	equ	0xFF2
 37181                           intcon2	equ	0xFF1
 37182                           intcon3	equ	0xFF0
 37183                           postinc0	equ	0xFEE
 37184                           wreg	equ	0xFE8
 37185                           indf1	equ	0xFE7
 37186                           postinc1	equ	0xFE6
 37187                           postdec1	equ	0xFE5
 37188                           plusw1	equ	0xFE3
 37189                           fsr1h	equ	0xFE2
 37190                           fsr1l	equ	0xFE1
 37191                           indf2	equ	0xFDF
 37192                           postinc2	equ	0xFDE
 37193                           postdec2	equ	0xFDD
 37194                           plusw2	equ	0xFDB
 37195                           fsr2h	equ	0xFDA
 37196                           fsr2l	equ	0xFD9
 37197                           status	equ	0xFD8
 37198                           
 37199 ;; *************** function _i2c_eeprom_write *****************
 37200 ;; Defined at:
 37201 ;;		line 542 in file "i2c.c"
 37202 ;; Parameters:    Size  Location     Type
 37203 ;;  address         2   10[BANK0 ] unsigned int 
 37204 ;;  data            2   12[BANK0 ] PTR unsigned char 
 37205 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 37206 ;;  length          1   14[BANK0 ] unsigned char 
 37207 ;; Auto vars:     Size  Location     Type
 37208 ;;  dat            17   18[BANK0 ] unsigned char [17]
 37209 ;;  cntr            1   36[BANK0 ] unsigned char 
 37210 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 37211 ;; Return value:  Size  Location     Type
 37212 ;;                  1    wreg      void 
 37213 ;; Registers used:
 37214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37215 ;; Tracked objects:
 37216 ;;		On entry : 0/0
 37217 ;;		On exit  : 0/0
 37218 ;;		Unchanged: 0/0
 37219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37220 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37221 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37222 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37223 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37224 ;;Total ram usage:       27 bytes
 37225 ;; Hardware stack levels used:    1
 37226 ;; Hardware stack levels required when called:   12
 37227 ;; This function calls:
 37228 ;;		__i2c_write
 37229 ;;		_i2c_set_frequency
 37230 ;; This function is called by:
 37231 ;;		__write_calibration
 37232 ;;		_rtcc_write_eeprom
 37233 ;; This function uses a non-reentrant model
 37234 ;;
 37235                           
 37236                           	psect	text171
 37237  011BAC                     __ptext171:
 37238                           	opt stack 0
 37239  011BAC                     _i2c_eeprom_write:
 37240                           	opt stack 15
 37241                           
 37242                           ;i2c.c: 544: uint8_t cntr;;i2c.c: 545: uint8_t slave_address;;i2c.c: 546: uint8_t dat[17
      +                          ];;i2c.c: 548: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 37243                           
 37244                           ;incstack = 0
 37245  011BAC  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 37246  011BB0  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 37247  011BB4  0E07               	movlw	7
 37248  011BB6  0100               	movlb	0	; () banked
 37249  011BB8  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 37250  011BBA                     u17785:
 37251  011BBA  90D8               	bcf	status,0,c
 37252  011BBC  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 37253  011BBE  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 37254  011BC0  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 37255  011BC2  D7FB               	goto	u17785
 37256  011BC4  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 37257  011BC6  0B0E               	andlw	14
 37258  011BC8  09A0               	iorlw	160
 37259  011BCA  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 37260                           
 37261                           ; BSR set to: 0
 37262                           ;i2c.c: 549: dat[0] = address & 0xFF;
 37263  011BCC  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 37264                           
 37265                           ;i2c.c: 551: length &= 0b00001111;
 37266  011BD0  0E0F               	movlw	15
 37267  011BD2  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 37268                           
 37269                           ; BSR set to: 0
 37270                           ;i2c.c: 552: for(cntr=0; cntr<length; ++cntr)
 37271  011BD4  0E00               	movlw	0
 37272  011BD6  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 37273  011BD8  D018               	goto	l1615
 37274  011BDA                     
 37275                           ; BSR set to: 0
 37276                           ;i2c.c: 553: {;i2c.c: 554: dat[cntr+1] = data[cntr];
 37277                           
 37278                           ; BSR set to: 0
 37279  011BDA  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37280  011BDC  0D01               	mullw	1
 37281  011BDE  50F3               	movf	prodl,w,c
 37282  011BE0  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 37283  011BE2  6ED9               	movwf	fsr2l,c
 37284  011BE4  50F4               	movf	prodh,w,c
 37285  011BE6  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 37286  011BE8  6EDA               	movwf	fsr2h,c
 37287  011BEA  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 37288  011BEC  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 37289  011BEE  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 37290  011BF0  0E01               	movlw	1
 37291  011BF2  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 37292  011BF4  0E00               	movlw	0
 37293  011BF6  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 37294  011BF8  0E72               	movlw	low i2c_eeprom_write@dat
 37295  011BFA  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 37296  011BFC  6EE1               	movwf	fsr1l,c
 37297  011BFE  0E00               	movlw	high i2c_eeprom_write@dat
 37298  011C00  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 37299  011C02  6EE2               	movwf	fsr1h,c
 37300  011C04  CFDF FFE7          	movff	indf2,indf1
 37301                           
 37302                           ; BSR set to: 0
 37303  011C08  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 37304  011C0A                     l1615:
 37305                           
 37306                           ; BSR set to: 0
 37307                           
 37308                           ; BSR set to: 0
 37309  011C0A  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 37310  011C0C  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 37311  011C0E  A0D8               	btfss	status,0,c
 37312  011C10  D7E4               	goto	l1616
 37313                           
 37314                           ; BSR set to: 0
 37315                           ;i2c.c: 555: };i2c.c: 558: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 37316                           
 37317                           ; BSR set to: 0
 37318  011C12  0E02               	movlw	2
 37319  011C14  ECB3  F090         	call	_i2c_set_frequency
 37320                           
 37321                           ;i2c.c: 560: _i2c_write(slave_address, &dat[0], length+1);
 37322  011C18  0E72               	movlw	low i2c_eeprom_write@dat
 37323  011C1A  0100               	movlb	0	; () banked
 37324  011C1C  6F65               	movwf	__i2c_write@data& (0+255),b
 37325  011C1E  0E00               	movlw	high i2c_eeprom_write@dat
 37326  011C20  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 37327  011C22  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 37328  011C24  6F67               	movwf	__i2c_write@length& (0+255),b
 37329  011C26  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 37330  011C28  EC22  F097         	call	__i2c_write
 37331  011C2C  0012               	return		;funcret
 37332  011C2E                     __end_of_i2c_eeprom_write:
 37333                           	opt stack 0
 37334                           tosu	equ	0xFFF
 37335                           tosh	equ	0xFFE
 37336                           tosl	equ	0xFFD
 37337                           pclath	equ	0xFFA
 37338                           tblptru	equ	0xFF8
 37339                           tblptrh	equ	0xFF7
 37340                           tblptrl	equ	0xFF6
 37341                           tablat	equ	0xFF5
 37342                           prodh	equ	0xFF4
 37343                           prodl	equ	0xFF3
 37344                           intcon	equ	0xFF2
 37345                           intcon2	equ	0xFF1
 37346                           intcon3	equ	0xFF0
 37347                           postinc0	equ	0xFEE
 37348                           wreg	equ	0xFE8
 37349                           indf1	equ	0xFE7
 37350                           postinc1	equ	0xFE6
 37351                           postdec1	equ	0xFE5
 37352                           plusw1	equ	0xFE3
 37353                           fsr1h	equ	0xFE2
 37354                           fsr1l	equ	0xFE1
 37355                           indf2	equ	0xFDF
 37356                           postinc2	equ	0xFDE
 37357                           postdec2	equ	0xFDD
 37358                           plusw2	equ	0xFDB
 37359                           fsr2h	equ	0xFDA
 37360                           fsr2l	equ	0xFD9
 37361                           status	equ	0xFD8
 37362                           
 37363 ;; *************** function _i2c_set_frequency *****************
 37364 ;; Defined at:
 37365 ;;		line 107 in file "i2c.c"
 37366 ;; Parameters:    Size  Location     Type
 37367 ;;  frequency       1    wreg     enum E6736
 37368 ;; Auto vars:     Size  Location     Type
 37369 ;;  frequency       1    0[BANK0 ] enum E6736
 37370 ;; Return value:  Size  Location     Type
 37371 ;;                  1    wreg      void 
 37372 ;; Registers used:
 37373 ;;		wreg, status,2, status,0
 37374 ;; Tracked objects:
 37375 ;;		On entry : 0/0
 37376 ;;		On exit  : 0/0
 37377 ;;		Unchanged: 0/0
 37378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37382 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37383 ;;Total ram usage:        1 bytes
 37384 ;; Hardware stack levels used:    1
 37385 ;; Hardware stack levels required when called:   10
 37386 ;; This function calls:
 37387 ;;		Nothing
 37388 ;; This function is called by:
 37389 ;;		_i2c_init
 37390 ;;		_i2c_display_send_init_sequence
 37391 ;;		__ic2_display_set_address
 37392 ;;		_i2c_display_cursor
 37393 ;;		_i2c_display_write_fixed
 37394 ;;		_i2c_digipot_reset_on
 37395 ;;		_i2c_digipot_reset_off
 37396 ;;		_i2c_digipot_backlight
 37397 ;;		_i2c_adc_start
 37398 ;;		_i2c_adc_read
 37399 ;;		_i2c_eeprom_write
 37400 ;;		_i2c_eeprom_read
 37401 ;;		_i2c_display_init
 37402 ;;		_i2c_display_write
 37403 ;;		_i2c_digipot_set_defaults
 37404 ;;		_i2c_eeprom_writeByte
 37405 ;;		_i2c_eeprom_readByte
 37406 ;; This function uses a non-reentrant model
 37407 ;;
 37408                           
 37409                           	psect	text172
 37410  012166                     __ptext172:
 37411                           	opt stack 0
 37412  012166                     _i2c_set_frequency:
 37413                           	opt stack 18
 37414                           
 37415                           ;incstack = 0
 37416                           ;i2c_set_frequency@frequency stored from wreg
 37417  012166  0100               	movlb	0	; () banked
 37418  012168  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 37419                           
 37420                           ;i2c.c: 109: switch(os.clockFrequency)
 37421  01216A  D027               	goto	l1533
 37422  01216C                     
 37423                           ;i2c.c: 112: SSP1ADD = 0;
 37424  01216C  0E00               	movlw	0
 37425  01216E  D017               	goto	L49
 37426  012170                     
 37427                           ;i2c.c: 118: SSP1ADD = 19;
 37428  012170  0E13               	movlw	19
 37429  012172  D015               	goto	L49
 37430  012174                     
 37431                           ;i2c.c: 121: SSP1ADD = 9;
 37432  012174  0E09               	movlw	9
 37433  012176  D013               	goto	L49
 37434  012178                     
 37435                           ;i2c.c: 124: SSP1ADD = 4;
 37436  012178  0E04               	movlw	4
 37437  01217A  D011               	goto	L49
 37438  01217C  0100               	movlb	0	; () banked
 37439  01217E  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 37440                           
 37441                           ; Switch size 1, requested type "space"
 37442                           ; Number of cases is 3, Range of values is 0 to 2
 37443                           ; switch strategies available:
 37444                           ; Name         Instructions Cycles
 37445                           ; simple_byte           10     6 (average)
 37446                           ;	Chosen strategy is simple_byte
 37447  012180  0A00               	xorlw	0	; case 0
 37448  012182  B4D8               	btfsc	status,2,c
 37449  012184  D7F5               	goto	l1538
 37450  012186  0A01               	xorlw	1	; case 1
 37451  012188  B4D8               	btfsc	status,2,c
 37452  01218A  D7F4               	goto	l1540
 37453  01218C  0A03               	xorlw	3	; case 2
 37454  01218E  B4D8               	btfsc	status,2,c
 37455  012190  D7F3               	goto	l1541
 37456                           
 37457                           ; BSR set to: 0
 37458                           ;i2c.c: 127: break;
 37459  012192  D01E               	goto	l1535
 37460  012194                     
 37461                           ; BSR set to: 0
 37462                           ;i2c.c: 132: SSP1ADD = 119;
 37463                           
 37464                           ; BSR set to: 0
 37465  012194  0E77               	movlw	119
 37466  012196  D003               	goto	L49
 37467  012198                     
 37468                           ; BSR set to: 0
 37469                           ;i2c.c: 135: SSP1ADD = 59;
 37470                           
 37471                           ; BSR set to: 0
 37472  012198  0E3B               	movlw	59
 37473  01219A  D001               	goto	L49
 37474  01219C                     
 37475                           ; BSR set to: 0
 37476                           ;i2c.c: 138: SSP1ADD = 29;
 37477                           
 37478                           ; BSR set to: 0
 37479  01219C  0E1D               	movlw	29
 37480  01219E                     L49:
 37481  01219E  6EC8               	movwf	4040,c	;volatile
 37482                           
 37483                           ; BSR set to: 0
 37484                           ;i2c.c: 140: }
 37485                           
 37486                           ;i2c.c: 139: break;
 37487  0121A0  D017               	goto	l1535
 37488  0121A2                     
 37489                           ; BSR set to: 0
 37490  0121A2  0100               	movlb	0	; () banked
 37491  0121A4  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 37492                           
 37493                           ; Switch size 1, requested type "space"
 37494                           ; Number of cases is 3, Range of values is 0 to 2
 37495                           ; switch strategies available:
 37496                           ; Name         Instructions Cycles
 37497                           ; simple_byte           10     6 (average)
 37498                           ;	Chosen strategy is simple_byte
 37499  0121A6  0A00               	xorlw	0	; case 0
 37500  0121A8  B4D8               	btfsc	status,2,c
 37501  0121AA  D7F4               	goto	l1544
 37502  0121AC  0A01               	xorlw	1	; case 1
 37503  0121AE  B4D8               	btfsc	status,2,c
 37504  0121B0  D7F3               	goto	l1546
 37505  0121B2  0A03               	xorlw	3	; case 2
 37506  0121B4  B4D8               	btfsc	status,2,c
 37507  0121B6  D7F2               	goto	l1547
 37508                           
 37509                           ; BSR set to: 0
 37510                           ;i2c.c: 142: }
 37511                           
 37512                           ; BSR set to: 0
 37513                           ;i2c.c: 141: break;
 37514  0121B8  D00B               	goto	l1535
 37515  0121BA                     l1533:
 37516                           
 37517                           ; BSR set to: 0
 37518  0121BA  0102               	movlb	2	; () banked
 37519  0121BC  5100               	movf	_os& (0+255),w,b	;volatile
 37520                           
 37521                           ; Switch size 1, requested type "space"
 37522                           ; Number of cases is 3, Range of values is 0 to 2
 37523                           ; switch strategies available:
 37524                           ; Name         Instructions Cycles
 37525                           ; simple_byte           10     6 (average)
 37526                           ;	Chosen strategy is simple_byte
 37527  0121BE  0A00               	xorlw	0	; case 0
 37528  0121C0  B4D8               	btfsc	status,2,c
 37529  0121C2  D7D4               	goto	l1534
 37530  0121C4  0A01               	xorlw	1	; case 1
 37531  0121C6  B4D8               	btfsc	status,2,c
 37532  0121C8  D7D9               	goto	l1537
 37533  0121CA  0A03               	xorlw	3	; case 2
 37534  0121CC  B4D8               	btfsc	status,2,c
 37535  0121CE  D7E9               	goto	l1543
 37536  0121D0                     l1535:
 37537                           
 37538                           ;i2c.c: 144: i2c_frequency = frequency;
 37539  0121D0  C060  F1F4         	movff	i2c_set_frequency@frequency,_i2c_frequency
 37540  0121D4  0012               	return		;funcret
 37541  0121D6                     __end_of_i2c_set_frequency:
 37542                           	opt stack 0
 37543                           tosu	equ	0xFFF
 37544                           tosh	equ	0xFFE
 37545                           tosl	equ	0xFFD
 37546                           pclath	equ	0xFFA
 37547                           tblptru	equ	0xFF8
 37548                           tblptrh	equ	0xFF7
 37549                           tblptrl	equ	0xFF6
 37550                           tablat	equ	0xFF5
 37551                           prodh	equ	0xFF4
 37552                           prodl	equ	0xFF3
 37553                           intcon	equ	0xFF2
 37554                           intcon2	equ	0xFF1
 37555                           intcon3	equ	0xFF0
 37556                           postinc0	equ	0xFEE
 37557                           wreg	equ	0xFE8
 37558                           indf1	equ	0xFE7
 37559                           postinc1	equ	0xFE6
 37560                           postdec1	equ	0xFE5
 37561                           plusw1	equ	0xFE3
 37562                           fsr1h	equ	0xFE2
 37563                           fsr1l	equ	0xFE1
 37564                           indf2	equ	0xFDF
 37565                           postinc2	equ	0xFDE
 37566                           postdec2	equ	0xFDD
 37567                           plusw2	equ	0xFDB
 37568                           fsr2h	equ	0xFDA
 37569                           fsr2l	equ	0xFD9
 37570                           status	equ	0xFD8
 37571                           
 37572 ;; *************** function __i2c_write *****************
 37573 ;; Defined at:
 37574 ;;		line 148 in file "i2c.c"
 37575 ;; Parameters:    Size  Location     Type
 37576 ;;  slave_addres    1    wreg     unsigned char 
 37577 ;;  data            2    5[BANK0 ] PTR unsigned char 
 37578 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 37579 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 37580 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 37581 ;;  length          1    7[BANK0 ] unsigned char 
 37582 ;; Auto vars:     Size  Location     Type
 37583 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 37584 ;;  cntr            1    9[BANK0 ] unsigned char 
 37585 ;; Return value:  Size  Location     Type
 37586 ;;                  1    wreg      void 
 37587 ;; Registers used:
 37588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37589 ;; Tracked objects:
 37590 ;;		On entry : 0/0
 37591 ;;		On exit  : 0/0
 37592 ;;		Unchanged: 0/0
 37593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37594 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37597 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37598 ;;Total ram usage:        5 bytes
 37599 ;; Hardware stack levels used:    1
 37600 ;; Hardware stack levels required when called:   11
 37601 ;; This function calls:
 37602 ;;		__i2c_send
 37603 ;;		__i2c_start
 37604 ;;		__i2c_stop
 37605 ;;		__i2c_wait_idle
 37606 ;; This function is called by:
 37607 ;;		_i2c_display_send_init_sequence
 37608 ;;		__ic2_display_set_address
 37609 ;;		_i2c_digipot_reset_on
 37610 ;;		_i2c_digipot_reset_off
 37611 ;;		_i2c_digipot_backlight
 37612 ;;		_i2c_adc_start
 37613 ;;		_i2c_eeprom_write
 37614 ;;		_i2c_eeprom_read
 37615 ;;		_i2c_display_init
 37616 ;;		_i2c_digipot_set_defaults
 37617 ;;		_i2c_eeprom_writeByte
 37618 ;;		_i2c_eeprom_readByte
 37619 ;; This function uses a non-reentrant model
 37620 ;;
 37621                           
 37622                           	psect	text173
 37623  012E44                     __ptext173:
 37624                           	opt stack 0
 37625  012E44                     __i2c_write:
 37626                           	opt stack 17
 37627                           
 37628                           ;incstack = 0
 37629                           ;__i2c_write@slave_address stored from wreg
 37630  012E44  0100               	movlb	0	; () banked
 37631  012E46  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 37632                           
 37633                           ;i2c.c: 150: uint8_t cntr;;i2c.c: 152: _i2c_wait_idle();
 37634  012E48  EC90  F092         	call	__i2c_wait_idle	;wreg free
 37635                           
 37636                           ;i2c.c: 153: _i2c_start();
 37637  012E4C  EC62  F09F         	call	__i2c_start	;wreg free
 37638                           
 37639                           ;i2c.c: 154: _i2c_wait_idle();
 37640  012E50  EC90  F092         	call	__i2c_wait_idle	;wreg free
 37641                           
 37642                           ;i2c.c: 155: _i2c_send(slave_address);
 37643  012E54  0100               	movlb	0	; () banked
 37644  012E56  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 37645  012E58  EC59  F09F         	call	__i2c_send
 37646                           
 37647                           ;i2c.c: 156: _i2c_wait_idle();
 37648  012E5C  EC90  F092         	call	__i2c_wait_idle	;wreg free
 37649                           
 37650                           ;i2c.c: 158: for(cntr=0; cntr<length; ++cntr)
 37651  012E60  0E00               	movlw	0
 37652  012E62  0100               	movlb	0	; () banked
 37653  012E64  6F69               	movwf	__i2c_write@cntr& (0+255),b
 37654  012E66  D00F               	goto	l1551
 37655  012E68                     
 37656                           ; BSR set to: 0
 37657                           ;i2c.c: 159: {;i2c.c: 160: _i2c_send(data[cntr]);
 37658                           
 37659                           ; BSR set to: 0
 37660  012E68  5169               	movf	__i2c_write@cntr& (0+255),w,b
 37661  012E6A  0D01               	mullw	1
 37662  012E6C  50F3               	movf	prodl,w,c
 37663  012E6E  2565               	addwf	__i2c_write@data& (0+255),w,b
 37664  012E70  6ED9               	movwf	fsr2l,c
 37665  012E72  50F4               	movf	prodh,w,c
 37666  012E74  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 37667  012E76  6EDA               	movwf	fsr2h,c
 37668  012E78  50DF               	movf	indf2,w,c
 37669  012E7A  EC59  F09F         	call	__i2c_send
 37670                           
 37671                           ;i2c.c: 161: _i2c_wait_idle();
 37672  012E7E  EC90  F092         	call	__i2c_wait_idle	;wreg free
 37673  012E82  0100               	movlb	0	; () banked
 37674  012E84  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 37675  012E86                     l1551:
 37676                           
 37677                           ; BSR set to: 0
 37678                           
 37679                           ; BSR set to: 0
 37680  012E86  5167               	movf	__i2c_write@length& (0+255),w,b
 37681  012E88  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 37682  012E8A  A0D8               	btfss	status,0,c
 37683  012E8C  D7ED               	goto	l1552
 37684                           
 37685                           ; BSR set to: 0
 37686                           ;i2c.c: 162: };i2c.c: 164: _i2c_stop();
 37687                           
 37688                           ; BSR set to: 0
 37689  012E8E  EC5E  F09F         	call	__i2c_stop	;wreg free
 37690  012E92  0012               	return		;funcret
 37691  012E94                     __end_of__i2c_write:
 37692                           	opt stack 0
 37693                           tosu	equ	0xFFF
 37694                           tosh	equ	0xFFE
 37695                           tosl	equ	0xFFD
 37696                           pclath	equ	0xFFA
 37697                           tblptru	equ	0xFF8
 37698                           tblptrh	equ	0xFF7
 37699                           tblptrl	equ	0xFF6
 37700                           tablat	equ	0xFF5
 37701                           prodh	equ	0xFF4
 37702                           prodl	equ	0xFF3
 37703                           intcon	equ	0xFF2
 37704                           intcon2	equ	0xFF1
 37705                           intcon3	equ	0xFF0
 37706                           postinc0	equ	0xFEE
 37707                           wreg	equ	0xFE8
 37708                           indf1	equ	0xFE7
 37709                           postinc1	equ	0xFE6
 37710                           postdec1	equ	0xFE5
 37711                           plusw1	equ	0xFE3
 37712                           fsr1h	equ	0xFE2
 37713                           fsr1l	equ	0xFE1
 37714                           indf2	equ	0xFDF
 37715                           postinc2	equ	0xFDE
 37716                           postdec2	equ	0xFDD
 37717                           plusw2	equ	0xFDB
 37718                           fsr2h	equ	0xFDA
 37719                           fsr2l	equ	0xFD9
 37720                           status	equ	0xFD8
 37721                           
 37722 ;; *************** function __i2c_wait_idle *****************
 37723 ;; Defined at:
 37724 ;;		line 45 in file "i2c.c"
 37725 ;; Parameters:    Size  Location     Type
 37726 ;;		None
 37727 ;; Auto vars:     Size  Location     Type
 37728 ;;		None
 37729 ;; Return value:  Size  Location     Type
 37730 ;;                  1    wreg      void 
 37731 ;; Registers used:
 37732 ;;		wreg, status,2, status,0
 37733 ;; Tracked objects:
 37734 ;;		On entry : 0/0
 37735 ;;		On exit  : 0/0
 37736 ;;		Unchanged: 0/0
 37737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37740 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37741 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37742 ;;Total ram usage:        5 bytes
 37743 ;; Hardware stack levels used:    1
 37744 ;; Hardware stack levels required when called:   10
 37745 ;; This function calls:
 37746 ;;		Nothing
 37747 ;; This function is called by:
 37748 ;;		__i2c_write
 37749 ;;		__i2c_read
 37750 ;;		_i2c_display_write_fixed
 37751 ;;		_i2c_adc_read
 37752 ;;		_i2c_display_write
 37753 ;; This function uses a non-reentrant model
 37754 ;;
 37755                           
 37756                           	psect	text174
 37757  012520                     __ptext174:
 37758                           	opt stack 0
 37759  012520                     __i2c_wait_idle:
 37760                           	opt stack 17
 37761                           
 37762                           ;i2c.c: 47: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 37763                           
 37764                           ;incstack = 0
 37765  012520  A4C7               	btfss	4039,2,c	;volatile
 37766  012522  D004               	goto	u8950
 37767  012524  0100               	movlb	0	; () banked
 37768  012526  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 37769  012528  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 37770  01252A  D002               	goto	u8958
 37771  01252C                     u8950:
 37772  01252C  0100               	movlb	0	; () banked
 37773  01252E  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 37774  012530                     u8958:
 37775  012530  A0C5               	btfss	4037,0,c	;volatile
 37776  012532  D003               	goto	u8960
 37777  012534  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 37778  012536  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 37779  012538  D002               	goto	u8968
 37780  01253A                     u8960:
 37781  01253A  0100               	movlb	0	; () banked
 37782  01253C  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 37783  01253E                     u8968:
 37784  01253E  A2C5               	btfss	4037,1,c	;volatile
 37785  012540  D003               	goto	u8970
 37786  012542  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 37787  012544  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 37788  012546  D002               	goto	u8978
 37789  012548                     u8970:
 37790  012548  0100               	movlb	0	; () banked
 37791  01254A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 37792  01254C                     u8978:
 37793  01254C  A4C5               	btfss	4037,2,c	;volatile
 37794  01254E  D003               	goto	u8980
 37795  012550  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 37796  012552  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 37797  012554  D002               	goto	u8988
 37798  012556                     u8980:
 37799  012556  0100               	movlb	0	; () banked
 37800  012558  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 37801  01255A                     u8988:
 37802  01255A  A6C5               	btfss	4037,3,c	;volatile
 37803  01255C  D003               	goto	u8990
 37804  01255E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 37805  012560  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 37806  012562  D002               	goto	u8998
 37807  012564                     u8990:
 37808  012564  0100               	movlb	0	; () banked
 37809  012566  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 37810  012568                     u8998:
 37811  012568  A8C5               	btfss	4037,4,c	;volatile
 37812  01256A  D002               	goto	u9000
 37813  01256C  0E01               	movlw	1
 37814  01256E  D001               	goto	u9006
 37815  012570                     u9000:
 37816  012570  0E00               	movlw	0
 37817  012572                     u9006:
 37818  012572  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 37819  012574  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 37820  012576  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 37821  012578  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 37822  01257A  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 37823  01257C  0900               	iorlw	0
 37824  01257E  B4D8               	btfsc	status,2,c
 37825  012580  0012               	return	
 37826  012582  D7CE               	goto	__i2c_wait_idle
 37827  012584                     __end_of__i2c_wait_idle:
 37828                           	opt stack 0
 37829                           tosu	equ	0xFFF
 37830                           tosh	equ	0xFFE
 37831                           tosl	equ	0xFFD
 37832                           pclath	equ	0xFFA
 37833                           tblptru	equ	0xFF8
 37834                           tblptrh	equ	0xFF7
 37835                           tblptrl	equ	0xFF6
 37836                           tablat	equ	0xFF5
 37837                           prodh	equ	0xFF4
 37838                           prodl	equ	0xFF3
 37839                           intcon	equ	0xFF2
 37840                           intcon2	equ	0xFF1
 37841                           intcon3	equ	0xFF0
 37842                           postinc0	equ	0xFEE
 37843                           wreg	equ	0xFE8
 37844                           indf1	equ	0xFE7
 37845                           postinc1	equ	0xFE6
 37846                           postdec1	equ	0xFE5
 37847                           plusw1	equ	0xFE3
 37848                           fsr1h	equ	0xFE2
 37849                           fsr1l	equ	0xFE1
 37850                           indf2	equ	0xFDF
 37851                           postinc2	equ	0xFDE
 37852                           postdec2	equ	0xFDD
 37853                           plusw2	equ	0xFDB
 37854                           fsr2h	equ	0xFDA
 37855                           fsr2l	equ	0xFD9
 37856                           status	equ	0xFD8
 37857                           
 37858 ;; *************** function __i2c_stop *****************
 37859 ;; Defined at:
 37860 ;;		line 72 in file "i2c.c"
 37861 ;; Parameters:    Size  Location     Type
 37862 ;;		None
 37863 ;; Auto vars:     Size  Location     Type
 37864 ;;		None
 37865 ;; Return value:  Size  Location     Type
 37866 ;;                  1    wreg      void 
 37867 ;; Registers used:
 37868 ;;		None
 37869 ;; Tracked objects:
 37870 ;;		On entry : 0/0
 37871 ;;		On exit  : 0/0
 37872 ;;		Unchanged: 0/0
 37873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37878 ;;Total ram usage:        0 bytes
 37879 ;; Hardware stack levels used:    1
 37880 ;; Hardware stack levels required when called:   10
 37881 ;; This function calls:
 37882 ;;		Nothing
 37883 ;; This function is called by:
 37884 ;;		__i2c_write
 37885 ;;		__i2c_read
 37886 ;;		_i2c_display_write_fixed
 37887 ;;		_i2c_adc_read
 37888 ;;		_i2c_display_write
 37889 ;; This function uses a non-reentrant model
 37890 ;;
 37891                           
 37892                           	psect	text175
 37893  013EBC                     __ptext175:
 37894                           	opt stack 0
 37895  013EBC                     __i2c_stop:
 37896                           	opt stack 17
 37897                           
 37898                           ;i2c.c: 74: SSP1CON2bits.PEN = 1;
 37899                           
 37900                           ; BSR set to: 0
 37901                           ;incstack = 0
 37902  013EBC  84C5               	bsf	4037,2,c	;volatile
 37903  013EBE  A4C5               	btfss	4037,2,c	;volatile
 37904  013EC0  0012               	return	
 37905  013EC2  D7FD               	goto	l1510
 37906  013EC4                     __end_of__i2c_stop:
 37907                           	opt stack 0
 37908                           tosu	equ	0xFFF
 37909                           tosh	equ	0xFFE
 37910                           tosl	equ	0xFFD
 37911                           pclath	equ	0xFFA
 37912                           tblptru	equ	0xFF8
 37913                           tblptrh	equ	0xFF7
 37914                           tblptrl	equ	0xFF6
 37915                           tablat	equ	0xFF5
 37916                           prodh	equ	0xFF4
 37917                           prodl	equ	0xFF3
 37918                           intcon	equ	0xFF2
 37919                           intcon2	equ	0xFF1
 37920                           intcon3	equ	0xFF0
 37921                           postinc0	equ	0xFEE
 37922                           wreg	equ	0xFE8
 37923                           indf1	equ	0xFE7
 37924                           postinc1	equ	0xFE6
 37925                           postdec1	equ	0xFE5
 37926                           plusw1	equ	0xFE3
 37927                           fsr1h	equ	0xFE2
 37928                           fsr1l	equ	0xFE1
 37929                           indf2	equ	0xFDF
 37930                           postinc2	equ	0xFDE
 37931                           postdec2	equ	0xFDD
 37932                           plusw2	equ	0xFDB
 37933                           fsr2h	equ	0xFDA
 37934                           fsr2l	equ	0xFD9
 37935                           status	equ	0xFD8
 37936                           
 37937 ;; *************** function __i2c_start *****************
 37938 ;; Defined at:
 37939 ;;		line 51 in file "i2c.c"
 37940 ;; Parameters:    Size  Location     Type
 37941 ;;		None
 37942 ;; Auto vars:     Size  Location     Type
 37943 ;;		None
 37944 ;; Return value:  Size  Location     Type
 37945 ;;                  1    wreg      void 
 37946 ;; Registers used:
 37947 ;;		None
 37948 ;; Tracked objects:
 37949 ;;		On entry : 0/0
 37950 ;;		On exit  : 0/0
 37951 ;;		Unchanged: 0/0
 37952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37957 ;;Total ram usage:        0 bytes
 37958 ;; Hardware stack levels used:    1
 37959 ;; Hardware stack levels required when called:   10
 37960 ;; This function calls:
 37961 ;;		Nothing
 37962 ;; This function is called by:
 37963 ;;		__i2c_write
 37964 ;;		__i2c_read
 37965 ;;		_i2c_display_write_fixed
 37966 ;;		_i2c_adc_read
 37967 ;;		_i2c_display_write
 37968 ;; This function uses a non-reentrant model
 37969 ;;
 37970                           
 37971                           	psect	text176
 37972  013EC4                     __ptext176:
 37973                           	opt stack 0
 37974  013EC4                     __i2c_start:
 37975                           	opt stack 17
 37976                           
 37977                           ;i2c.c: 53: SSP1CON2bits.SEN=1;
 37978                           
 37979                           ;incstack = 0
 37980  013EC4  80C5               	bsf	4037,0,c	;volatile
 37981  013EC6  A0C5               	btfss	4037,0,c	;volatile
 37982  013EC8  0012               	return	
 37983  013ECA  D7FD               	goto	l1495
 37984  013ECC                     __end_of__i2c_start:
 37985                           	opt stack 0
 37986                           tosu	equ	0xFFF
 37987                           tosh	equ	0xFFE
 37988                           tosl	equ	0xFFD
 37989                           pclath	equ	0xFFA
 37990                           tblptru	equ	0xFF8
 37991                           tblptrh	equ	0xFF7
 37992                           tblptrl	equ	0xFF6
 37993                           tablat	equ	0xFF5
 37994                           prodh	equ	0xFF4
 37995                           prodl	equ	0xFF3
 37996                           intcon	equ	0xFF2
 37997                           intcon2	equ	0xFF1
 37998                           intcon3	equ	0xFF0
 37999                           postinc0	equ	0xFEE
 38000                           wreg	equ	0xFE8
 38001                           indf1	equ	0xFE7
 38002                           postinc1	equ	0xFE6
 38003                           postdec1	equ	0xFE5
 38004                           plusw1	equ	0xFE3
 38005                           fsr1h	equ	0xFE2
 38006                           fsr1l	equ	0xFE1
 38007                           indf2	equ	0xFDF
 38008                           postinc2	equ	0xFDE
 38009                           postdec2	equ	0xFDD
 38010                           plusw2	equ	0xFDB
 38011                           fsr2h	equ	0xFDA
 38012                           fsr2l	equ	0xFD9
 38013                           status	equ	0xFD8
 38014                           
 38015 ;; *************** function __i2c_send *****************
 38016 ;; Defined at:
 38017 ;;		line 58 in file "i2c.c"
 38018 ;; Parameters:    Size  Location     Type
 38019 ;;  dat             1    wreg     unsigned char 
 38020 ;; Auto vars:     Size  Location     Type
 38021 ;;  dat             1    0[BANK0 ] unsigned char 
 38022 ;; Return value:  Size  Location     Type
 38023 ;;                  1    wreg      void 
 38024 ;; Registers used:
 38025 ;;		wreg
 38026 ;; Tracked objects:
 38027 ;;		On entry : 0/0
 38028 ;;		On exit  : 0/0
 38029 ;;		Unchanged: 0/0
 38030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38032 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38034 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38035 ;;Total ram usage:        1 bytes
 38036 ;; Hardware stack levels used:    1
 38037 ;; Hardware stack levels required when called:   10
 38038 ;; This function calls:
 38039 ;;		Nothing
 38040 ;; This function is called by:
 38041 ;;		__i2c_write
 38042 ;;		__i2c_read
 38043 ;;		_i2c_display_write_fixed
 38044 ;;		_i2c_adc_read
 38045 ;;		_i2c_display_write
 38046 ;; This function uses a non-reentrant model
 38047 ;;
 38048                           
 38049                           	psect	text177
 38050  013EB2                     __ptext177:
 38051                           	opt stack 0
 38052  013EB2                     __i2c_send:
 38053                           	opt stack 17
 38054                           
 38055                           ;incstack = 0
 38056                           ;__i2c_send@dat stored from wreg
 38057  013EB2  0100               	movlb	0	; () banked
 38058  013EB4  6F60               	movwf	__i2c_send@dat& (0+255),b
 38059                           
 38060                           ;i2c.c: 60: SSP1BUF = dat;
 38061  013EB6  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 38062  013EBA  0012               	return		;funcret
 38063  013EBC                     __end_of__i2c_send:
 38064                           	opt stack 0
 38065                           tosu	equ	0xFFF
 38066                           tosh	equ	0xFFE
 38067                           tosl	equ	0xFFD
 38068                           pclath	equ	0xFFA
 38069                           tblptru	equ	0xFF8
 38070                           tblptrh	equ	0xFF7
 38071                           tblptrl	equ	0xFF6
 38072                           tablat	equ	0xFF5
 38073                           prodh	equ	0xFF4
 38074                           prodl	equ	0xFF3
 38075                           intcon	equ	0xFF2
 38076                           intcon2	equ	0xFF1
 38077                           intcon3	equ	0xFF0
 38078                           postinc0	equ	0xFEE
 38079                           wreg	equ	0xFE8
 38080                           indf1	equ	0xFE7
 38081                           postinc1	equ	0xFE6
 38082                           postdec1	equ	0xFE5
 38083                           plusw1	equ	0xFE3
 38084                           fsr1h	equ	0xFE2
 38085                           fsr1l	equ	0xFE1
 38086                           indf2	equ	0xFDF
 38087                           postinc2	equ	0xFDE
 38088                           postdec2	equ	0xFDD
 38089                           plusw2	equ	0xFDB
 38090                           fsr2h	equ	0xFDA
 38091                           fsr2l	equ	0xFD9
 38092                           status	equ	0xFD8
 38093                           
 38094 ;; *************** function __parse_command_long *****************
 38095 ;; Defined at:
 38096 ;;		line 453 in file "app_device_custom_hid.c"
 38097 ;; Parameters:    Size  Location     Type
 38098 ;;  cmd             1    wreg     unsigned char 
 38099 ;;  data            1    3[BANK0 ] unsigned char 
 38100 ;; Auto vars:     Size  Location     Type
 38101 ;;  cmd             1    4[BANK0 ] unsigned char 
 38102 ;; Return value:  Size  Location     Type
 38103 ;;                  1    wreg      void 
 38104 ;; Registers used:
 38105 ;;		wreg, status,2, status,0, cstack
 38106 ;; Tracked objects:
 38107 ;;		On entry : 0/0
 38108 ;;		On exit  : 0/0
 38109 ;;		Unchanged: 0/0
 38110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38111 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38112 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38115 ;;Total ram usage:        2 bytes
 38116 ;; Hardware stack levels used:    1
 38117 ;; Hardware stack levels required when called:   12
 38118 ;; This function calls:
 38119 ;;		_buck_remote_change_dutycycle
 38120 ;;		_buck_remote_set_dutycycle
 38121 ;;		_buck_remote_set_enable
 38122 ;;		_buck_remote_set_on
 38123 ;;		_buck_remote_set_synchronous
 38124 ;;		_rtcc_set_day
 38125 ;;		_rtcc_set_hours
 38126 ;;		_rtcc_set_minutes
 38127 ;;		_rtcc_set_month
 38128 ;;		_rtcc_set_seconds
 38129 ;;		_rtcc_set_year
 38130 ;; This function is called by:
 38131 ;;		_APP_DeviceCustomHIDTasks
 38132 ;; This function uses a non-reentrant model
 38133 ;;
 38134                           
 38135                           	psect	text178
 38136  0101C2                     __ptext178:
 38137                           	opt stack 0
 38138  0101C2                     __parse_command_long:
 38139                           	opt stack 17
 38140                           
 38141                           ;incstack = 0
 38142                           ;__parse_command_long@cmd stored from wreg
 38143  0101C2  0100               	movlb	0	; () banked
 38144  0101C4  6F64               	movwf	__parse_command_long@cmd& (0+255),b
 38145                           
 38146                           ;app_device_custom_hid.c: 455: switch(cmd)
 38147  0101C6  D043               	goto	l1164
 38148  0101C8                     
 38149                           ;app_device_custom_hid.c: 458: rtcc_set_year(data);
 38150  0101C8  0100               	movlb	0	; () banked
 38151  0101CA  5163               	movf	__parse_command_long@data& (0+255),w,b
 38152  0101CC  EC23  F09E         	call	_rtcc_set_year
 38153                           
 38154                           ;app_device_custom_hid.c: 459: break;
 38155  0101D0  0012               	return	
 38156  0101D2                     
 38157                           ;app_device_custom_hid.c: 461: rtcc_set_month(data);
 38158  0101D2  0100               	movlb	0	; () banked
 38159  0101D4  5163               	movf	__parse_command_long@data& (0+255),w,b
 38160  0101D6  EC3B  F09E         	call	_rtcc_set_month
 38161                           
 38162                           ;app_device_custom_hid.c: 462: break;
 38163  0101DA  0012               	return	
 38164  0101DC                     
 38165                           ;app_device_custom_hid.c: 464: rtcc_set_day(data);
 38166  0101DC  0100               	movlb	0	; () banked
 38167  0101DE  5163               	movf	__parse_command_long@data& (0+255),w,b
 38168  0101E0  EC5F  F09E         	call	_rtcc_set_day
 38169                           
 38170                           ;app_device_custom_hid.c: 465: break;
 38171  0101E4  0012               	return	
 38172  0101E6                     
 38173                           ;app_device_custom_hid.c: 467: rtcc_set_hours(data);
 38174  0101E6  0100               	movlb	0	; () banked
 38175  0101E8  5163               	movf	__parse_command_long@data& (0+255),w,b
 38176  0101EA  EC53  F09E         	call	_rtcc_set_hours
 38177                           
 38178                           ;app_device_custom_hid.c: 468: break;
 38179  0101EE  0012               	return	
 38180  0101F0                     
 38181                           ;app_device_custom_hid.c: 470: rtcc_set_minutes(data);
 38182  0101F0  0100               	movlb	0	; () banked
 38183  0101F2  5163               	movf	__parse_command_long@data& (0+255),w,b
 38184  0101F4  EC47  F09E         	call	_rtcc_set_minutes
 38185                           
 38186                           ;app_device_custom_hid.c: 471: break;
 38187  0101F8  0012               	return	
 38188  0101FA                     
 38189                           ;app_device_custom_hid.c: 473: rtcc_set_seconds(data);
 38190  0101FA  0100               	movlb	0	; () banked
 38191  0101FC  5163               	movf	__parse_command_long@data& (0+255),w,b
 38192  0101FE  EC2F  F09E         	call	_rtcc_set_seconds
 38193                           
 38194                           ;app_device_custom_hid.c: 474: break;
 38195  010202  0012               	return	
 38196  010204                     
 38197                           ;app_device_custom_hid.c: 476: buck_remote_set_enable(1);
 38198  010204  0E01               	movlw	1
 38199  010206  ECC8  F09D         	call	_buck_remote_set_enable
 38200                           
 38201                           ;app_device_custom_hid.c: 477: break;
 38202  01020A  0012               	return	
 38203  01020C                     
 38204                           ;app_device_custom_hid.c: 479: buck_remote_set_enable(0);
 38205  01020C  0E00               	movlw	0
 38206  01020E  ECC8  F09D         	call	_buck_remote_set_enable
 38207                           
 38208                           ;app_device_custom_hid.c: 480: break;
 38209  010212  0012               	return	
 38210  010214                     
 38211                           ;app_device_custom_hid.c: 482: buck_remote_set_on(1);
 38212  010214  0E01               	movlw	1
 38213  010216  EC77  F09E         	call	_buck_remote_set_on
 38214                           
 38215                           ;app_device_custom_hid.c: 483: break;
 38216  01021A  0012               	return	
 38217  01021C                     
 38218                           ;app_device_custom_hid.c: 485: buck_remote_set_on(0);
 38219  01021C  0E00               	movlw	0
 38220  01021E  EC77  F09E         	call	_buck_remote_set_on
 38221                           
 38222                           ;app_device_custom_hid.c: 486: break;
 38223  010222  0012               	return	
 38224  010224                     
 38225                           ;app_device_custom_hid.c: 488: buck_remote_set_synchronous(0);
 38226  010224  0E00               	movlw	0
 38227  010226  EC6B  F09E         	call	_buck_remote_set_synchronous
 38228                           
 38229                           ;app_device_custom_hid.c: 489: break;
 38230  01022A  0012               	return	
 38231  01022C                     
 38232                           ;app_device_custom_hid.c: 491: buck_remote_set_synchronous(1);
 38233  01022C  0E01               	movlw	1
 38234  01022E  EC6B  F09E         	call	_buck_remote_set_synchronous
 38235                           
 38236                           ;app_device_custom_hid.c: 492: break;
 38237  010232  0012               	return	
 38238  010234                     
 38239                           ;app_device_custom_hid.c: 494: buck_remote_change_dutycycle(-1);
 38240  010234  0EFF               	movlw	255
 38241  010236  EC58  F098         	call	_buck_remote_change_dutycycle
 38242                           
 38243                           ;app_device_custom_hid.c: 495: break;
 38244  01023A  0012               	return	
 38245  01023C                     
 38246                           ;app_device_custom_hid.c: 497: buck_remote_change_dutycycle(1);
 38247  01023C  0E01               	movlw	1
 38248  01023E  EC58  F098         	call	_buck_remote_change_dutycycle
 38249                           
 38250                           ;app_device_custom_hid.c: 498: break;
 38251  010242  0012               	return	
 38252  010244                     
 38253                           ;app_device_custom_hid.c: 500: buck_remote_set_dutycycle(data);
 38254  010244  0100               	movlb	0	; () banked
 38255  010246  5163               	movf	__parse_command_long@data& (0+255),w,b
 38256  010248  ECBE  F09C         	call	_buck_remote_set_dutycycle
 38257                           
 38258                           ;app_device_custom_hid.c: 502: }
 38259                           
 38260                           ;app_device_custom_hid.c: 501: break;
 38261  01024C  0012               	return	
 38262  01024E                     l1164:
 38263  01024E  0100               	movlb	0	; () banked
 38264  010250  5164               	movf	__parse_command_long@cmd& (0+255),w,b
 38265                           
 38266                           ; Switch size 1, requested type "space"
 38267                           ; Number of cases is 15, Range of values is 64 to 78
 38268                           ; switch strategies available:
 38269                           ; Name         Instructions Cycles
 38270                           ; simple_byte           46    24 (average)
 38271                           ;	Chosen strategy is simple_byte
 38272  010252  0A40               	xorlw	64	; case 64
 38273  010254  B4D8               	btfsc	status,2,c
 38274  010256  D7B8               	goto	l1165
 38275  010258  0A01               	xorlw	1	; case 65
 38276  01025A  B4D8               	btfsc	status,2,c
 38277  01025C  D7BA               	goto	l1167
 38278  01025E  0A03               	xorlw	3	; case 66
 38279  010260  B4D8               	btfsc	status,2,c
 38280  010262  D7BC               	goto	l1168
 38281  010264  0A01               	xorlw	1	; case 67
 38282  010266  B4D8               	btfsc	status,2,c
 38283  010268  D7BE               	goto	l1169
 38284  01026A  0A07               	xorlw	7	; case 68
 38285  01026C  B4D8               	btfsc	status,2,c
 38286  01026E  D7C0               	goto	l1170
 38287  010270  0A01               	xorlw	1	; case 69
 38288  010272  B4D8               	btfsc	status,2,c
 38289  010274  D7C2               	goto	l1171
 38290  010276  0A03               	xorlw	3	; case 70
 38291  010278  B4D8               	btfsc	status,2,c
 38292  01027A  D7C4               	goto	l1172
 38293  01027C  0A01               	xorlw	1	; case 71
 38294  01027E  B4D8               	btfsc	status,2,c
 38295  010280  D7C5               	goto	l1173
 38296  010282  0A0F               	xorlw	15	; case 72
 38297  010284  B4D8               	btfsc	status,2,c
 38298  010286  D7C6               	goto	l1174
 38299  010288  0A01               	xorlw	1	; case 73
 38300  01028A  B4D8               	btfsc	status,2,c
 38301  01028C  D7C7               	goto	l1175
 38302  01028E  0A03               	xorlw	3	; case 74
 38303  010290  B4D8               	btfsc	status,2,c
 38304  010292  D7C8               	goto	l1176
 38305  010294  0A01               	xorlw	1	; case 75
 38306  010296  B4D8               	btfsc	status,2,c
 38307  010298  D7C9               	goto	l1177
 38308  01029A  0A07               	xorlw	7	; case 76
 38309  01029C  B4D8               	btfsc	status,2,c
 38310  01029E  D7CA               	goto	l1178
 38311  0102A0  0A01               	xorlw	1	; case 77
 38312  0102A2  B4D8               	btfsc	status,2,c
 38313  0102A4  D7CB               	goto	l1179
 38314  0102A6  0A03               	xorlw	3	; case 78
 38315  0102A8  A4D8               	btfss	status,2,c
 38316  0102AA  0012               	return	
 38317  0102AC  D7CB               	goto	l1180
 38318  0102AE                     __end_of__parse_command_long:
 38319                           	opt stack 0
 38320                           tosu	equ	0xFFF
 38321                           tosh	equ	0xFFE
 38322                           tosl	equ	0xFFD
 38323                           pclath	equ	0xFFA
 38324                           tblptru	equ	0xFF8
 38325                           tblptrh	equ	0xFF7
 38326                           tblptrl	equ	0xFF6
 38327                           tablat	equ	0xFF5
 38328                           prodh	equ	0xFF4
 38329                           prodl	equ	0xFF3
 38330                           intcon	equ	0xFF2
 38331                           intcon2	equ	0xFF1
 38332                           intcon3	equ	0xFF0
 38333                           postinc0	equ	0xFEE
 38334                           wreg	equ	0xFE8
 38335                           indf1	equ	0xFE7
 38336                           postinc1	equ	0xFE6
 38337                           postdec1	equ	0xFE5
 38338                           plusw1	equ	0xFE3
 38339                           fsr1h	equ	0xFE2
 38340                           fsr1l	equ	0xFE1
 38341                           indf2	equ	0xFDF
 38342                           postinc2	equ	0xFDE
 38343                           postdec2	equ	0xFDD
 38344                           plusw2	equ	0xFDB
 38345                           fsr2h	equ	0xFDA
 38346                           fsr2l	equ	0xFD9
 38347                           status	equ	0xFD8
 38348                           
 38349 ;; *************** function _rtcc_set_year *****************
 38350 ;; Defined at:
 38351 ;;		line 141 in file "rtcc.c"
 38352 ;; Parameters:    Size  Location     Type
 38353 ;;  year            1    wreg     unsigned char 
 38354 ;; Auto vars:     Size  Location     Type
 38355 ;;  year            1    0[BANK0 ] unsigned char 
 38356 ;; Return value:  Size  Location     Type
 38357 ;;                  1    wreg      void 
 38358 ;; Registers used:
 38359 ;;		wreg, status,2, cstack
 38360 ;; Tracked objects:
 38361 ;;		On entry : 0/0
 38362 ;;		On exit  : 0/0
 38363 ;;		Unchanged: 0/0
 38364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38368 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38369 ;;Total ram usage:        1 bytes
 38370 ;; Hardware stack levels used:    1
 38371 ;; Hardware stack levels required when called:   11
 38372 ;; This function calls:
 38373 ;;		__rtcc_write_disable
 38374 ;;		__rtcc_write_enable
 38375 ;; This function is called by:
 38376 ;;		__parse_command_long
 38377 ;;		_rtcc_increment_year
 38378 ;;		_rtcc_decrement_year
 38379 ;;		_rtcc_read_eeprom
 38380 ;; This function uses a non-reentrant model
 38381 ;;
 38382                           
 38383                           	psect	text179
 38384  013C46                     __ptext179:
 38385                           	opt stack 0
 38386  013C46                     _rtcc_set_year:
 38387                           	opt stack 16
 38388                           
 38389                           ;incstack = 0
 38390                           ;rtcc_set_year@year stored from wreg
 38391  013C46  0100               	movlb	0	; () banked
 38392  013C48  6F60               	movwf	rtcc_set_year@year& (0+255),b
 38393                           
 38394                           ;rtcc.c: 143: _rtcc_write_enable();
 38395  013C4A  EC83  F09E         	call	__rtcc_write_enable	;wreg free
 38396                           
 38397                           ;rtcc.c: 144: RTCCFGbits.RTCPTR1 = 1;
 38398  013C4E  010F               	movlb	15	; () banked
 38399  013C50  833F               	bsf	63,1,b	;volatile
 38400                           
 38401                           ; BSR set to: 15
 38402                           ;rtcc.c: 145: RTCCFGbits.RTCPTR0 = 1;
 38403  013C52  813F               	bsf	63,0,b	;volatile
 38404                           
 38405                           ; BSR set to: 15
 38406                           ;rtcc.c: 146: RTCVALL = year;
 38407  013C54  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 38408                           
 38409                           ;rtcc.c: 147: _rtcc_write_disable();
 38410  013C58  EC8E  F09E         	call	__rtcc_write_disable	;wreg free
 38411  013C5C  0012               	return		;funcret
 38412  013C5E                     __end_of_rtcc_set_year:
 38413                           	opt stack 0
 38414                           tosu	equ	0xFFF
 38415                           tosh	equ	0xFFE
 38416                           tosl	equ	0xFFD
 38417                           pclath	equ	0xFFA
 38418                           tblptru	equ	0xFF8
 38419                           tblptrh	equ	0xFF7
 38420                           tblptrl	equ	0xFF6
 38421                           tablat	equ	0xFF5
 38422                           prodh	equ	0xFF4
 38423                           prodl	equ	0xFF3
 38424                           intcon	equ	0xFF2
 38425                           intcon2	equ	0xFF1
 38426                           intcon3	equ	0xFF0
 38427                           postinc0	equ	0xFEE
 38428                           wreg	equ	0xFE8
 38429                           indf1	equ	0xFE7
 38430                           postinc1	equ	0xFE6
 38431                           postdec1	equ	0xFE5
 38432                           plusw1	equ	0xFE3
 38433                           fsr1h	equ	0xFE2
 38434                           fsr1l	equ	0xFE1
 38435                           indf2	equ	0xFDF
 38436                           postinc2	equ	0xFDE
 38437                           postdec2	equ	0xFDD
 38438                           plusw2	equ	0xFDB
 38439                           fsr2h	equ	0xFDA
 38440                           fsr2l	equ	0xFD9
 38441                           status	equ	0xFD8
 38442                           
 38443 ;; *************** function _rtcc_set_seconds *****************
 38444 ;; Defined at:
 38445 ;;		line 331 in file "rtcc.c"
 38446 ;; Parameters:    Size  Location     Type
 38447 ;;  seconds         1    wreg     unsigned char 
 38448 ;; Auto vars:     Size  Location     Type
 38449 ;;  seconds         1    0[BANK0 ] unsigned char 
 38450 ;; Return value:  Size  Location     Type
 38451 ;;                  1    wreg      void 
 38452 ;; Registers used:
 38453 ;;		wreg, status,2, cstack
 38454 ;; Tracked objects:
 38455 ;;		On entry : 0/0
 38456 ;;		On exit  : 0/0
 38457 ;;		Unchanged: 0/0
 38458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38462 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38463 ;;Total ram usage:        1 bytes
 38464 ;; Hardware stack levels used:    1
 38465 ;; Hardware stack levels required when called:   11
 38466 ;; This function calls:
 38467 ;;		__rtcc_write_disable
 38468 ;;		__rtcc_write_enable
 38469 ;; This function is called by:
 38470 ;;		__parse_command_long
 38471 ;;		_rtcc_increment_seconds
 38472 ;;		_rtcc_decrement_seconds
 38473 ;;		_rtcc_read_eeprom
 38474 ;; This function uses a non-reentrant model
 38475 ;;
 38476                           
 38477                           	psect	text180
 38478  013C5E                     __ptext180:
 38479                           	opt stack 0
 38480  013C5E                     _rtcc_set_seconds:
 38481                           	opt stack 16
 38482                           
 38483                           ;incstack = 0
 38484                           ;rtcc_set_seconds@seconds stored from wreg
 38485  013C5E  0100               	movlb	0	; () banked
 38486  013C60  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 38487                           
 38488                           ;rtcc.c: 333: _rtcc_write_enable();
 38489  013C62  EC83  F09E         	call	__rtcc_write_enable	;wreg free
 38490                           
 38491                           ;rtcc.c: 334: RTCCFGbits.RTCPTR1 = 0;
 38492  013C66  010F               	movlb	15	; () banked
 38493  013C68  933F               	bcf	63,1,b	;volatile
 38494                           
 38495                           ; BSR set to: 15
 38496                           ;rtcc.c: 335: RTCCFGbits.RTCPTR0 = 0;
 38497  013C6A  913F               	bcf	63,0,b	;volatile
 38498                           
 38499                           ; BSR set to: 15
 38500                           ;rtcc.c: 336: RTCVALL = seconds;
 38501  013C6C  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 38502                           
 38503                           ;rtcc.c: 337: _rtcc_write_disable();
 38504  013C70  EC8E  F09E         	call	__rtcc_write_disable	;wreg free
 38505  013C74  0012               	return		;funcret
 38506  013C76                     __end_of_rtcc_set_seconds:
 38507                           	opt stack 0
 38508                           tosu	equ	0xFFF
 38509                           tosh	equ	0xFFE
 38510                           tosl	equ	0xFFD
 38511                           pclath	equ	0xFFA
 38512                           tblptru	equ	0xFF8
 38513                           tblptrh	equ	0xFF7
 38514                           tblptrl	equ	0xFF6
 38515                           tablat	equ	0xFF5
 38516                           prodh	equ	0xFF4
 38517                           prodl	equ	0xFF3
 38518                           intcon	equ	0xFF2
 38519                           intcon2	equ	0xFF1
 38520                           intcon3	equ	0xFF0
 38521                           postinc0	equ	0xFEE
 38522                           wreg	equ	0xFE8
 38523                           indf1	equ	0xFE7
 38524                           postinc1	equ	0xFE6
 38525                           postdec1	equ	0xFE5
 38526                           plusw1	equ	0xFE3
 38527                           fsr1h	equ	0xFE2
 38528                           fsr1l	equ	0xFE1
 38529                           indf2	equ	0xFDF
 38530                           postinc2	equ	0xFDE
 38531                           postdec2	equ	0xFDD
 38532                           plusw2	equ	0xFDB
 38533                           fsr2h	equ	0xFDA
 38534                           fsr2l	equ	0xFD9
 38535                           status	equ	0xFD8
 38536                           
 38537 ;; *************** function _rtcc_set_month *****************
 38538 ;; Defined at:
 38539 ;;		line 179 in file "rtcc.c"
 38540 ;; Parameters:    Size  Location     Type
 38541 ;;  month           1    wreg     unsigned char 
 38542 ;; Auto vars:     Size  Location     Type
 38543 ;;  month           1    0[BANK0 ] unsigned char 
 38544 ;; Return value:  Size  Location     Type
 38545 ;;                  1    wreg      void 
 38546 ;; Registers used:
 38547 ;;		wreg, status,2, cstack
 38548 ;; Tracked objects:
 38549 ;;		On entry : 0/0
 38550 ;;		On exit  : 0/0
 38551 ;;		Unchanged: 0/0
 38552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38557 ;;Total ram usage:        1 bytes
 38558 ;; Hardware stack levels used:    1
 38559 ;; Hardware stack levels required when called:   11
 38560 ;; This function calls:
 38561 ;;		__rtcc_write_disable
 38562 ;;		__rtcc_write_enable
 38563 ;; This function is called by:
 38564 ;;		__parse_command_long
 38565 ;;		_rtcc_increment_month
 38566 ;;		_rtcc_decrement_month
 38567 ;;		_rtcc_read_eeprom
 38568 ;; This function uses a non-reentrant model
 38569 ;;
 38570                           
 38571                           	psect	text181
 38572  013C76                     __ptext181:
 38573                           	opt stack 0
 38574  013C76                     _rtcc_set_month:
 38575                           	opt stack 16
 38576                           
 38577                           ;incstack = 0
 38578                           ;rtcc_set_month@month stored from wreg
 38579  013C76  0100               	movlb	0	; () banked
 38580  013C78  6F60               	movwf	rtcc_set_month@month& (0+255),b
 38581                           
 38582                           ;rtcc.c: 181: _rtcc_write_enable();
 38583  013C7A  EC83  F09E         	call	__rtcc_write_enable	;wreg free
 38584                           
 38585                           ;rtcc.c: 182: RTCCFGbits.RTCPTR1 = 1;
 38586  013C7E  010F               	movlb	15	; () banked
 38587  013C80  833F               	bsf	63,1,b	;volatile
 38588                           
 38589                           ; BSR set to: 15
 38590                           ;rtcc.c: 183: RTCCFGbits.RTCPTR0 = 0;
 38591  013C82  913F               	bcf	63,0,b	;volatile
 38592                           
 38593                           ; BSR set to: 15
 38594                           ;rtcc.c: 184: RTCVALH = month;
 38595  013C84  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 38596                           
 38597                           ;rtcc.c: 185: _rtcc_write_disable();
 38598  013C88  EC8E  F09E         	call	__rtcc_write_disable	;wreg free
 38599  013C8C  0012               	return		;funcret
 38600  013C8E                     __end_of_rtcc_set_month:
 38601                           	opt stack 0
 38602                           tosu	equ	0xFFF
 38603                           tosh	equ	0xFFE
 38604                           tosl	equ	0xFFD
 38605                           pclath	equ	0xFFA
 38606                           tblptru	equ	0xFF8
 38607                           tblptrh	equ	0xFF7
 38608                           tblptrl	equ	0xFF6
 38609                           tablat	equ	0xFF5
 38610                           prodh	equ	0xFF4
 38611                           prodl	equ	0xFF3
 38612                           intcon	equ	0xFF2
 38613                           intcon2	equ	0xFF1
 38614                           intcon3	equ	0xFF0
 38615                           postinc0	equ	0xFEE
 38616                           wreg	equ	0xFE8
 38617                           indf1	equ	0xFE7
 38618                           postinc1	equ	0xFE6
 38619                           postdec1	equ	0xFE5
 38620                           plusw1	equ	0xFE3
 38621                           fsr1h	equ	0xFE2
 38622                           fsr1l	equ	0xFE1
 38623                           indf2	equ	0xFDF
 38624                           postinc2	equ	0xFDE
 38625                           postdec2	equ	0xFDD
 38626                           plusw2	equ	0xFDB
 38627                           fsr2h	equ	0xFDA
 38628                           fsr2l	equ	0xFD9
 38629                           status	equ	0xFD8
 38630                           
 38631 ;; *************** function _rtcc_set_minutes *****************
 38632 ;; Defined at:
 38633 ;;		line 293 in file "rtcc.c"
 38634 ;; Parameters:    Size  Location     Type
 38635 ;;  minutes         1    wreg     unsigned char 
 38636 ;; Auto vars:     Size  Location     Type
 38637 ;;  minutes         1    0[BANK0 ] unsigned char 
 38638 ;; Return value:  Size  Location     Type
 38639 ;;                  1    wreg      void 
 38640 ;; Registers used:
 38641 ;;		wreg, status,2, cstack
 38642 ;; Tracked objects:
 38643 ;;		On entry : 0/0
 38644 ;;		On exit  : 0/0
 38645 ;;		Unchanged: 0/0
 38646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38651 ;;Total ram usage:        1 bytes
 38652 ;; Hardware stack levels used:    1
 38653 ;; Hardware stack levels required when called:   11
 38654 ;; This function calls:
 38655 ;;		__rtcc_write_disable
 38656 ;;		__rtcc_write_enable
 38657 ;; This function is called by:
 38658 ;;		__parse_command_long
 38659 ;;		_rtcc_increment_minutes
 38660 ;;		_rtcc_decrement_minutes
 38661 ;;		_rtcc_read_eeprom
 38662 ;; This function uses a non-reentrant model
 38663 ;;
 38664                           
 38665                           	psect	text182
 38666  013C8E                     __ptext182:
 38667                           	opt stack 0
 38668  013C8E                     _rtcc_set_minutes:
 38669                           	opt stack 16
 38670                           
 38671                           ;incstack = 0
 38672                           ;rtcc_set_minutes@minutes stored from wreg
 38673  013C8E  0100               	movlb	0	; () banked
 38674  013C90  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 38675                           
 38676                           ;rtcc.c: 295: _rtcc_write_enable();
 38677  013C92  EC83  F09E         	call	__rtcc_write_enable	;wreg free
 38678                           
 38679                           ;rtcc.c: 296: RTCCFGbits.RTCPTR1 = 0;
 38680  013C96  010F               	movlb	15	; () banked
 38681  013C98  933F               	bcf	63,1,b	;volatile
 38682                           
 38683                           ; BSR set to: 15
 38684                           ;rtcc.c: 297: RTCCFGbits.RTCPTR0 = 0;
 38685  013C9A  913F               	bcf	63,0,b	;volatile
 38686                           
 38687                           ; BSR set to: 15
 38688                           ;rtcc.c: 298: RTCVALH = minutes;
 38689  013C9C  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 38690                           
 38691                           ;rtcc.c: 299: _rtcc_write_disable();
 38692  013CA0  EC8E  F09E         	call	__rtcc_write_disable	;wreg free
 38693  013CA4  0012               	return		;funcret
 38694  013CA6                     __end_of_rtcc_set_minutes:
 38695                           	opt stack 0
 38696                           tosu	equ	0xFFF
 38697                           tosh	equ	0xFFE
 38698                           tosl	equ	0xFFD
 38699                           pclath	equ	0xFFA
 38700                           tblptru	equ	0xFF8
 38701                           tblptrh	equ	0xFF7
 38702                           tblptrl	equ	0xFF6
 38703                           tablat	equ	0xFF5
 38704                           prodh	equ	0xFF4
 38705                           prodl	equ	0xFF3
 38706                           intcon	equ	0xFF2
 38707                           intcon2	equ	0xFF1
 38708                           intcon3	equ	0xFF0
 38709                           postinc0	equ	0xFEE
 38710                           wreg	equ	0xFE8
 38711                           indf1	equ	0xFE7
 38712                           postinc1	equ	0xFE6
 38713                           postdec1	equ	0xFE5
 38714                           plusw1	equ	0xFE3
 38715                           fsr1h	equ	0xFE2
 38716                           fsr1l	equ	0xFE1
 38717                           indf2	equ	0xFDF
 38718                           postinc2	equ	0xFDE
 38719                           postdec2	equ	0xFDD
 38720                           plusw2	equ	0xFDB
 38721                           fsr2h	equ	0xFDA
 38722                           fsr2l	equ	0xFD9
 38723                           status	equ	0xFD8
 38724                           
 38725 ;; *************** function _rtcc_set_hours *****************
 38726 ;; Defined at:
 38727 ;;		line 255 in file "rtcc.c"
 38728 ;; Parameters:    Size  Location     Type
 38729 ;;  hours           1    wreg     unsigned char 
 38730 ;; Auto vars:     Size  Location     Type
 38731 ;;  hours           1    0[BANK0 ] unsigned char 
 38732 ;; Return value:  Size  Location     Type
 38733 ;;                  1    wreg      void 
 38734 ;; Registers used:
 38735 ;;		wreg, status,2, cstack
 38736 ;; Tracked objects:
 38737 ;;		On entry : 0/0
 38738 ;;		On exit  : 0/0
 38739 ;;		Unchanged: 0/0
 38740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38745 ;;Total ram usage:        1 bytes
 38746 ;; Hardware stack levels used:    1
 38747 ;; Hardware stack levels required when called:   11
 38748 ;; This function calls:
 38749 ;;		__rtcc_write_disable
 38750 ;;		__rtcc_write_enable
 38751 ;; This function is called by:
 38752 ;;		__parse_command_long
 38753 ;;		_rtcc_increment_hours
 38754 ;;		_rtcc_decrement_hours
 38755 ;;		_rtcc_read_eeprom
 38756 ;; This function uses a non-reentrant model
 38757 ;;
 38758                           
 38759                           	psect	text183
 38760  013CA6                     __ptext183:
 38761                           	opt stack 0
 38762  013CA6                     _rtcc_set_hours:
 38763                           	opt stack 16
 38764                           
 38765                           ;incstack = 0
 38766                           ;rtcc_set_hours@hours stored from wreg
 38767  013CA6  0100               	movlb	0	; () banked
 38768  013CA8  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 38769                           
 38770                           ;rtcc.c: 257: _rtcc_write_enable();
 38771  013CAA  EC83  F09E         	call	__rtcc_write_enable	;wreg free
 38772                           
 38773                           ;rtcc.c: 258: RTCCFGbits.RTCPTR1 = 0;
 38774  013CAE  010F               	movlb	15	; () banked
 38775  013CB0  933F               	bcf	63,1,b	;volatile
 38776                           
 38777                           ; BSR set to: 15
 38778                           ;rtcc.c: 259: RTCCFGbits.RTCPTR0 = 1;
 38779  013CB2  813F               	bsf	63,0,b	;volatile
 38780                           
 38781                           ; BSR set to: 15
 38782                           ;rtcc.c: 260: RTCVALL = hours;
 38783  013CB4  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 38784                           
 38785                           ;rtcc.c: 261: _rtcc_write_disable();
 38786  013CB8  EC8E  F09E         	call	__rtcc_write_disable	;wreg free
 38787  013CBC  0012               	return		;funcret
 38788  013CBE                     __end_of_rtcc_set_hours:
 38789                           	opt stack 0
 38790                           tosu	equ	0xFFF
 38791                           tosh	equ	0xFFE
 38792                           tosl	equ	0xFFD
 38793                           pclath	equ	0xFFA
 38794                           tblptru	equ	0xFF8
 38795                           tblptrh	equ	0xFF7
 38796                           tblptrl	equ	0xFF6
 38797                           tablat	equ	0xFF5
 38798                           prodh	equ	0xFF4
 38799                           prodl	equ	0xFF3
 38800                           intcon	equ	0xFF2
 38801                           intcon2	equ	0xFF1
 38802                           intcon3	equ	0xFF0
 38803                           postinc0	equ	0xFEE
 38804                           wreg	equ	0xFE8
 38805                           indf1	equ	0xFE7
 38806                           postinc1	equ	0xFE6
 38807                           postdec1	equ	0xFE5
 38808                           plusw1	equ	0xFE3
 38809                           fsr1h	equ	0xFE2
 38810                           fsr1l	equ	0xFE1
 38811                           indf2	equ	0xFDF
 38812                           postinc2	equ	0xFDE
 38813                           postdec2	equ	0xFDD
 38814                           plusw2	equ	0xFDB
 38815                           fsr2h	equ	0xFDA
 38816                           fsr2l	equ	0xFD9
 38817                           status	equ	0xFD8
 38818                           
 38819 ;; *************** function _rtcc_set_day *****************
 38820 ;; Defined at:
 38821 ;;		line 217 in file "rtcc.c"
 38822 ;; Parameters:    Size  Location     Type
 38823 ;;  day             1    wreg     unsigned char 
 38824 ;; Auto vars:     Size  Location     Type
 38825 ;;  day             1    0[BANK0 ] unsigned char 
 38826 ;; Return value:  Size  Location     Type
 38827 ;;                  1    wreg      void 
 38828 ;; Registers used:
 38829 ;;		wreg, status,2, cstack
 38830 ;; Tracked objects:
 38831 ;;		On entry : 0/0
 38832 ;;		On exit  : 0/0
 38833 ;;		Unchanged: 0/0
 38834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38839 ;;Total ram usage:        1 bytes
 38840 ;; Hardware stack levels used:    1
 38841 ;; Hardware stack levels required when called:   11
 38842 ;; This function calls:
 38843 ;;		__rtcc_write_disable
 38844 ;;		__rtcc_write_enable
 38845 ;; This function is called by:
 38846 ;;		__parse_command_long
 38847 ;;		_rtcc_correct_day
 38848 ;;		_rtcc_increment_day
 38849 ;;		_rtcc_decrement_day
 38850 ;;		_rtcc_read_eeprom
 38851 ;; This function uses a non-reentrant model
 38852 ;;
 38853                           
 38854                           	psect	text184
 38855  013CBE                     __ptext184:
 38856                           	opt stack 0
 38857  013CBE                     _rtcc_set_day:
 38858                           	opt stack 16
 38859                           
 38860                           ;incstack = 0
 38861                           ;rtcc_set_day@day stored from wreg
 38862  013CBE  0100               	movlb	0	; () banked
 38863  013CC0  6F60               	movwf	rtcc_set_day@day& (0+255),b
 38864                           
 38865                           ;rtcc.c: 219: _rtcc_write_enable();
 38866  013CC2  EC83  F09E         	call	__rtcc_write_enable	;wreg free
 38867                           
 38868                           ;rtcc.c: 220: RTCCFGbits.RTCPTR1 = 1;
 38869  013CC6  010F               	movlb	15	; () banked
 38870  013CC8  833F               	bsf	63,1,b	;volatile
 38871                           
 38872                           ; BSR set to: 15
 38873                           ;rtcc.c: 221: RTCCFGbits.RTCPTR0 = 0;
 38874  013CCA  913F               	bcf	63,0,b	;volatile
 38875                           
 38876                           ; BSR set to: 15
 38877                           ;rtcc.c: 222: RTCVALL = day;
 38878  013CCC  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 38879                           
 38880                           ;rtcc.c: 223: _rtcc_write_disable();
 38881  013CD0  EC8E  F09E         	call	__rtcc_write_disable	;wreg free
 38882  013CD4  0012               	return		;funcret
 38883  013CD6                     __end_of_rtcc_set_day:
 38884                           	opt stack 0
 38885                           tosu	equ	0xFFF
 38886                           tosh	equ	0xFFE
 38887                           tosl	equ	0xFFD
 38888                           pclath	equ	0xFFA
 38889                           tblptru	equ	0xFF8
 38890                           tblptrh	equ	0xFF7
 38891                           tblptrl	equ	0xFF6
 38892                           tablat	equ	0xFF5
 38893                           prodh	equ	0xFF4
 38894                           prodl	equ	0xFF3
 38895                           intcon	equ	0xFF2
 38896                           intcon2	equ	0xFF1
 38897                           intcon3	equ	0xFF0
 38898                           postinc0	equ	0xFEE
 38899                           wreg	equ	0xFE8
 38900                           indf1	equ	0xFE7
 38901                           postinc1	equ	0xFE6
 38902                           postdec1	equ	0xFE5
 38903                           plusw1	equ	0xFE3
 38904                           fsr1h	equ	0xFE2
 38905                           fsr1l	equ	0xFE1
 38906                           indf2	equ	0xFDF
 38907                           postinc2	equ	0xFDE
 38908                           postdec2	equ	0xFDD
 38909                           plusw2	equ	0xFDB
 38910                           fsr2h	equ	0xFDA
 38911                           fsr2l	equ	0xFD9
 38912                           status	equ	0xFD8
 38913                           
 38914 ;; *************** function __rtcc_write_enable *****************
 38915 ;; Defined at:
 38916 ;;		line 14 in file "rtcc.c"
 38917 ;; Parameters:    Size  Location     Type
 38918 ;;		None
 38919 ;; Auto vars:     Size  Location     Type
 38920 ;;		None
 38921 ;; Return value:  Size  Location     Type
 38922 ;;                  1    wreg      void 
 38923 ;; Registers used:
 38924 ;;		wreg, status,2
 38925 ;; Tracked objects:
 38926 ;;		On entry : 0/0
 38927 ;;		On exit  : 0/0
 38928 ;;		Unchanged: 0/0
 38929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38934 ;;Total ram usage:        0 bytes
 38935 ;; Hardware stack levels used:    1
 38936 ;; Hardware stack levels required when called:   10
 38937 ;; This function calls:
 38938 ;;		Nothing
 38939 ;; This function is called by:
 38940 ;;		_rtcc_set_year
 38941 ;;		_rtcc_set_month
 38942 ;;		_rtcc_set_day
 38943 ;;		_rtcc_set_hours
 38944 ;;		_rtcc_set_minutes
 38945 ;;		_rtcc_set_seconds
 38946 ;; This function uses a non-reentrant model
 38947 ;;
 38948                           
 38949                           	psect	text185
 38950  013D06                     __ptext185:
 38951                           	opt stack 0
 38952  013D06                     __rtcc_write_enable:
 38953                           	opt stack 16
 38954                           
 38955                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 38956                           
 38957                           ;incstack = 0
 38958  013D06  D006               	goto	l2243
 38959  013D08                     
 38960                           ;rtcc.c: 17: {;rtcc.c: 18: EECON2 = 0x55;
 38961  013D08  0E55               	movlw	85
 38962  013D0A  6EA7               	movwf	4007,c	;volsfr
 38963                           
 38964                           ;rtcc.c: 19: EECON2 = 0xAA;
 38965  013D0C  0EAA               	movlw	170
 38966  013D0E  6EA7               	movwf	4007,c	;volsfr
 38967                           
 38968                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 38969  013D10  010F               	movlb	15	; () banked
 38970  013D12  8B3F               	bsf	63,5,b	;volatile
 38971  013D14                     l2243:
 38972                           
 38973                           ; BSR set to: 15
 38974  013D14  010F               	movlb	15	; () banked
 38975  013D16  BB3F               	btfsc	63,5,b	;volatile
 38976  013D18  0012               	return	
 38977  013D1A  D7F6               	goto	l2244
 38978  013D1C                     __end_of__rtcc_write_enable:
 38979                           	opt stack 0
 38980                           tosu	equ	0xFFF
 38981                           tosh	equ	0xFFE
 38982                           tosl	equ	0xFFD
 38983                           pclath	equ	0xFFA
 38984                           tblptru	equ	0xFF8
 38985                           tblptrh	equ	0xFF7
 38986                           tblptrl	equ	0xFF6
 38987                           tablat	equ	0xFF5
 38988                           prodh	equ	0xFF4
 38989                           prodl	equ	0xFF3
 38990                           intcon	equ	0xFF2
 38991                           intcon2	equ	0xFF1
 38992                           intcon3	equ	0xFF0
 38993                           postinc0	equ	0xFEE
 38994                           wreg	equ	0xFE8
 38995                           indf1	equ	0xFE7
 38996                           postinc1	equ	0xFE6
 38997                           postdec1	equ	0xFE5
 38998                           plusw1	equ	0xFE3
 38999                           fsr1h	equ	0xFE2
 39000                           fsr1l	equ	0xFE1
 39001                           indf2	equ	0xFDF
 39002                           postinc2	equ	0xFDE
 39003                           postdec2	equ	0xFDD
 39004                           plusw2	equ	0xFDB
 39005                           fsr2h	equ	0xFDA
 39006                           fsr2l	equ	0xFD9
 39007                           status	equ	0xFD8
 39008                           
 39009 ;; *************** function __rtcc_write_disable *****************
 39010 ;; Defined at:
 39011 ;;		line 24 in file "rtcc.c"
 39012 ;; Parameters:    Size  Location     Type
 39013 ;;		None
 39014 ;; Auto vars:     Size  Location     Type
 39015 ;;		None
 39016 ;; Return value:  Size  Location     Type
 39017 ;;                  1    wreg      void 
 39018 ;; Registers used:
 39019 ;;		wreg, status,2
 39020 ;; Tracked objects:
 39021 ;;		On entry : 0/0
 39022 ;;		On exit  : 0/0
 39023 ;;		Unchanged: 0/0
 39024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39029 ;;Total ram usage:        0 bytes
 39030 ;; Hardware stack levels used:    1
 39031 ;; Hardware stack levels required when called:   10
 39032 ;; This function calls:
 39033 ;;		Nothing
 39034 ;; This function is called by:
 39035 ;;		_rtcc_set_year
 39036 ;;		_rtcc_set_month
 39037 ;;		_rtcc_set_day
 39038 ;;		_rtcc_set_hours
 39039 ;;		_rtcc_set_minutes
 39040 ;;		_rtcc_set_seconds
 39041 ;; This function uses a non-reentrant model
 39042 ;;
 39043                           
 39044                           	psect	text186
 39045  013D1C                     __ptext186:
 39046                           	opt stack 0
 39047  013D1C                     __rtcc_write_disable:
 39048                           	opt stack 16
 39049                           
 39050                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 39051                           
 39052                           ; BSR set to: 15
 39053                           ;incstack = 0
 39054  013D1C  D006               	goto	l2249
 39055  013D1E                     
 39056                           ;rtcc.c: 27: {;rtcc.c: 28: EECON2 = 0x55;
 39057  013D1E  0E55               	movlw	85
 39058  013D20  6EA7               	movwf	4007,c	;volsfr
 39059                           
 39060                           ;rtcc.c: 29: EECON2 = 0xAA;
 39061  013D22  0EAA               	movlw	170
 39062  013D24  6EA7               	movwf	4007,c	;volsfr
 39063                           
 39064                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 39065  013D26  010F               	movlb	15	; () banked
 39066  013D28  9B3F               	bcf	63,5,b	;volatile
 39067  013D2A                     l2249:
 39068                           
 39069                           ; BSR set to: 15
 39070  013D2A  010F               	movlb	15	; () banked
 39071  013D2C  AB3F               	btfss	63,5,b	;volatile
 39072  013D2E  0012               	return	
 39073  013D30  D7F6               	goto	l2250
 39074  013D32                     __end_of__rtcc_write_disable:
 39075                           	opt stack 0
 39076                           tosu	equ	0xFFF
 39077                           tosh	equ	0xFFE
 39078                           tosl	equ	0xFFD
 39079                           pclath	equ	0xFFA
 39080                           tblptru	equ	0xFF8
 39081                           tblptrh	equ	0xFF7
 39082                           tblptrl	equ	0xFF6
 39083                           tablat	equ	0xFF5
 39084                           prodh	equ	0xFF4
 39085                           prodl	equ	0xFF3
 39086                           intcon	equ	0xFF2
 39087                           intcon2	equ	0xFF1
 39088                           intcon3	equ	0xFF0
 39089                           postinc0	equ	0xFEE
 39090                           wreg	equ	0xFE8
 39091                           indf1	equ	0xFE7
 39092                           postinc1	equ	0xFE6
 39093                           postdec1	equ	0xFE5
 39094                           plusw1	equ	0xFE3
 39095                           fsr1h	equ	0xFE2
 39096                           fsr1l	equ	0xFE1
 39097                           indf2	equ	0xFDF
 39098                           postinc2	equ	0xFDE
 39099                           postdec2	equ	0xFDD
 39100                           plusw2	equ	0xFDB
 39101                           fsr2h	equ	0xFDA
 39102                           fsr2l	equ	0xFD9
 39103                           status	equ	0xFD8
 39104                           
 39105 ;; *************** function _buck_remote_set_synchronous *****************
 39106 ;; Defined at:
 39107 ;;		line 621 in file "buck.c"
 39108 ;; Parameters:    Size  Location     Type
 39109 ;;  synchronous     1    wreg     unsigned char 
 39110 ;; Auto vars:     Size  Location     Type
 39111 ;;  synchronous     1    0[BANK0 ] unsigned char 
 39112 ;; Return value:  Size  Location     Type
 39113 ;;                  1    wreg      void 
 39114 ;; Registers used:
 39115 ;;		wreg, status,2
 39116 ;; Tracked objects:
 39117 ;;		On entry : 0/0
 39118 ;;		On exit  : 0/0
 39119 ;;		Unchanged: 0/0
 39120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39124 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39125 ;;Total ram usage:        1 bytes
 39126 ;; Hardware stack levels used:    1
 39127 ;; Hardware stack levels required when called:   10
 39128 ;; This function calls:
 39129 ;;		Nothing
 39130 ;; This function is called by:
 39131 ;;		__parse_command_long
 39132 ;; This function uses a non-reentrant model
 39133 ;;
 39134                           
 39135                           	psect	text187
 39136  013CD6                     __ptext187:
 39137                           	opt stack 0
 39138  013CD6                     _buck_remote_set_synchronous:
 39139                           	opt stack 18
 39140                           
 39141                           ; BSR set to: 15
 39142                           ;incstack = 0
 39143                           ;buck_remote_set_synchronous@synchronous stored from wreg
 39144  013CD6  0100               	movlb	0	; () banked
 39145  013CD8  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 39146                           
 39147                           ;buck.c: 623: if(synchronous)
 39148  013CDA  0100               	movlb	0	; () banked
 39149  013CDC  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 39150  013CDE  B4D8               	btfsc	status,2,c
 39151  013CE0  D003               	goto	l2630
 39152                           
 39153                           ; BSR set to: 0
 39154                           ;buck.c: 624: buck_remote_synchronous = 1;
 39155  013CE2  0E01               	movlw	1
 39156  013CE4  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 39157  013CE6  0012               	return	
 39158  013CE8                     l2630:
 39159                           
 39160                           ; BSR set to: 0
 39161                           ;buck.c: 625: else;buck.c: 626: buck_remote_synchronous = 0;
 39162                           
 39163                           ; BSR set to: 0
 39164  013CE8  0E00               	movlw	0
 39165  013CEA  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 39166  013CEC  0012               	return	
 39167  013CEE                     __end_of_buck_remote_set_synchronous:
 39168                           	opt stack 0
 39169                           tosu	equ	0xFFF
 39170                           tosh	equ	0xFFE
 39171                           tosl	equ	0xFFD
 39172                           pclath	equ	0xFFA
 39173                           tblptru	equ	0xFF8
 39174                           tblptrh	equ	0xFF7
 39175                           tblptrl	equ	0xFF6
 39176                           tablat	equ	0xFF5
 39177                           prodh	equ	0xFF4
 39178                           prodl	equ	0xFF3
 39179                           intcon	equ	0xFF2
 39180                           intcon2	equ	0xFF1
 39181                           intcon3	equ	0xFF0
 39182                           postinc0	equ	0xFEE
 39183                           wreg	equ	0xFE8
 39184                           indf1	equ	0xFE7
 39185                           postinc1	equ	0xFE6
 39186                           postdec1	equ	0xFE5
 39187                           plusw1	equ	0xFE3
 39188                           fsr1h	equ	0xFE2
 39189                           fsr1l	equ	0xFE1
 39190                           indf2	equ	0xFDF
 39191                           postinc2	equ	0xFDE
 39192                           postdec2	equ	0xFDD
 39193                           plusw2	equ	0xFDB
 39194                           fsr2h	equ	0xFDA
 39195                           fsr2l	equ	0xFD9
 39196                           status	equ	0xFD8
 39197                           
 39198 ;; *************** function _buck_remote_set_on *****************
 39199 ;; Defined at:
 39200 ;;		line 613 in file "buck.c"
 39201 ;; Parameters:    Size  Location     Type
 39202 ;;  on              1    wreg     unsigned char 
 39203 ;; Auto vars:     Size  Location     Type
 39204 ;;  on              1    0[BANK0 ] unsigned char 
 39205 ;; Return value:  Size  Location     Type
 39206 ;;                  1    wreg      void 
 39207 ;; Registers used:
 39208 ;;		wreg, status,2
 39209 ;; Tracked objects:
 39210 ;;		On entry : 0/0
 39211 ;;		On exit  : 0/0
 39212 ;;		Unchanged: 0/0
 39213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39217 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39218 ;;Total ram usage:        1 bytes
 39219 ;; Hardware stack levels used:    1
 39220 ;; Hardware stack levels required when called:   10
 39221 ;; This function calls:
 39222 ;;		Nothing
 39223 ;; This function is called by:
 39224 ;;		__parse_command_long
 39225 ;; This function uses a non-reentrant model
 39226 ;;
 39227                           
 39228                           	psect	text188
 39229  013CEE                     __ptext188:
 39230                           	opt stack 0
 39231  013CEE                     _buck_remote_set_on:
 39232                           	opt stack 18
 39233                           
 39234                           ; BSR set to: 0
 39235                           ;incstack = 0
 39236                           ;buck_remote_set_on@on stored from wreg
 39237  013CEE  0100               	movlb	0	; () banked
 39238  013CF0  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 39239                           
 39240                           ;buck.c: 615: if(on)
 39241  013CF2  0100               	movlb	0	; () banked
 39242  013CF4  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 39243  013CF6  B4D8               	btfsc	status,2,c
 39244  013CF8  D003               	goto	l2625
 39245                           
 39246                           ; BSR set to: 0
 39247                           ;buck.c: 616: buck_remote_on = 1;
 39248  013CFA  0E01               	movlw	1
 39249  013CFC  6FE3               	movwf	_buck_remote_on& (0+255),b
 39250  013CFE  0012               	return	
 39251  013D00                     l2625:
 39252                           
 39253                           ; BSR set to: 0
 39254                           ;buck.c: 617: else;buck.c: 618: buck_remote_on = 0;
 39255                           
 39256                           ; BSR set to: 0
 39257  013D00  0E00               	movlw	0
 39258  013D02  6FE3               	movwf	_buck_remote_on& (0+255),b
 39259  013D04  0012               	return	
 39260  013D06                     __end_of_buck_remote_set_on:
 39261                           	opt stack 0
 39262                           tosu	equ	0xFFF
 39263                           tosh	equ	0xFFE
 39264                           tosl	equ	0xFFD
 39265                           pclath	equ	0xFFA
 39266                           tblptru	equ	0xFF8
 39267                           tblptrh	equ	0xFF7
 39268                           tblptrl	equ	0xFF6
 39269                           tablat	equ	0xFF5
 39270                           prodh	equ	0xFF4
 39271                           prodl	equ	0xFF3
 39272                           intcon	equ	0xFF2
 39273                           intcon2	equ	0xFF1
 39274                           intcon3	equ	0xFF0
 39275                           postinc0	equ	0xFEE
 39276                           wreg	equ	0xFE8
 39277                           indf1	equ	0xFE7
 39278                           postinc1	equ	0xFE6
 39279                           postdec1	equ	0xFE5
 39280                           plusw1	equ	0xFE3
 39281                           fsr1h	equ	0xFE2
 39282                           fsr1l	equ	0xFE1
 39283                           indf2	equ	0xFDF
 39284                           postinc2	equ	0xFDE
 39285                           postdec2	equ	0xFDD
 39286                           plusw2	equ	0xFDB
 39287                           fsr2h	equ	0xFDA
 39288                           fsr2l	equ	0xFD9
 39289                           status	equ	0xFD8
 39290                           
 39291 ;; *************** function _buck_remote_set_enable *****************
 39292 ;; Defined at:
 39293 ;;		line 605 in file "buck.c"
 39294 ;; Parameters:    Size  Location     Type
 39295 ;;  remote          1    wreg     unsigned char 
 39296 ;; Auto vars:     Size  Location     Type
 39297 ;;  remote          1    0[BANK0 ] unsigned char 
 39298 ;; Return value:  Size  Location     Type
 39299 ;;                  1    wreg      void 
 39300 ;; Registers used:
 39301 ;;		wreg, status,2
 39302 ;; Tracked objects:
 39303 ;;		On entry : 0/0
 39304 ;;		On exit  : 0/0
 39305 ;;		Unchanged: 0/0
 39306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39311 ;;Total ram usage:        1 bytes
 39312 ;; Hardware stack levels used:    1
 39313 ;; Hardware stack levels required when called:   10
 39314 ;; This function calls:
 39315 ;;		Nothing
 39316 ;; This function is called by:
 39317 ;;		__parse_command_long
 39318 ;; This function uses a non-reentrant model
 39319 ;;
 39320                           
 39321                           	psect	text189
 39322  013B90                     __ptext189:
 39323                           	opt stack 0
 39324  013B90                     _buck_remote_set_enable:
 39325                           	opt stack 18
 39326                           
 39327                           ; BSR set to: 0
 39328                           ;incstack = 0
 39329                           ;buck_remote_set_enable@remote stored from wreg
 39330  013B90  0100               	movlb	0	; () banked
 39331  013B92  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 39332                           
 39333                           ;buck.c: 607: if(remote)
 39334  013B94  0100               	movlb	0	; () banked
 39335  013B96  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 39336  013B98  B4D8               	btfsc	status,2,c
 39337  013B9A  D004               	goto	l2620
 39338                           
 39339                           ; BSR set to: 0
 39340                           ;buck.c: 608: buck_remote_enable = 1;
 39341  013B9C  0E01               	movlw	1
 39342  013B9E  0101               	movlb	1	; () banked
 39343  013BA0  6FF1               	movwf	_buck_remote_enable& (0+255),b
 39344  013BA2  0012               	return	
 39345  013BA4                     l2620:
 39346                           
 39347                           ;buck.c: 609: else;buck.c: 610: buck_remote_enable = 0;
 39348                           
 39349                           ; BSR set to: 1
 39350  013BA4  0E00               	movlw	0
 39351  013BA6  0101               	movlb	1	; () banked
 39352  013BA8  6FF1               	movwf	_buck_remote_enable& (0+255),b
 39353  013BAA  0012               	return	
 39354  013BAC                     __end_of_buck_remote_set_enable:
 39355                           	opt stack 0
 39356                           tosu	equ	0xFFF
 39357                           tosh	equ	0xFFE
 39358                           tosl	equ	0xFFD
 39359                           pclath	equ	0xFFA
 39360                           tblptru	equ	0xFF8
 39361                           tblptrh	equ	0xFF7
 39362                           tblptrl	equ	0xFF6
 39363                           tablat	equ	0xFF5
 39364                           prodh	equ	0xFF4
 39365                           prodl	equ	0xFF3
 39366                           intcon	equ	0xFF2
 39367                           intcon2	equ	0xFF1
 39368                           intcon3	equ	0xFF0
 39369                           postinc0	equ	0xFEE
 39370                           wreg	equ	0xFE8
 39371                           indf1	equ	0xFE7
 39372                           postinc1	equ	0xFE6
 39373                           postdec1	equ	0xFE5
 39374                           plusw1	equ	0xFE3
 39375                           fsr1h	equ	0xFE2
 39376                           fsr1l	equ	0xFE1
 39377                           indf2	equ	0xFDF
 39378                           postinc2	equ	0xFDE
 39379                           postdec2	equ	0xFDD
 39380                           plusw2	equ	0xFDB
 39381                           fsr2h	equ	0xFDA
 39382                           fsr2l	equ	0xFD9
 39383                           status	equ	0xFD8
 39384                           
 39385 ;; *************** function _buck_remote_set_dutycycle *****************
 39386 ;; Defined at:
 39387 ;;		line 629 in file "buck.c"
 39388 ;; Parameters:    Size  Location     Type
 39389 ;;  dutycycle       1    wreg     unsigned char 
 39390 ;; Auto vars:     Size  Location     Type
 39391 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 39392 ;; Return value:  Size  Location     Type
 39393 ;;                  1    wreg      void 
 39394 ;; Registers used:
 39395 ;;		wreg, status,2, status,0
 39396 ;; Tracked objects:
 39397 ;;		On entry : 0/0
 39398 ;;		On exit  : 0/0
 39399 ;;		Unchanged: 0/0
 39400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39405 ;;Total ram usage:        1 bytes
 39406 ;; Hardware stack levels used:    1
 39407 ;; Hardware stack levels required when called:   10
 39408 ;; This function calls:
 39409 ;;		Nothing
 39410 ;; This function is called by:
 39411 ;;		__parse_command_long
 39412 ;; This function uses a non-reentrant model
 39413 ;;
 39414                           
 39415                           	psect	text190
 39416  01397C                     __ptext190:
 39417                           	opt stack 0
 39418  01397C                     _buck_remote_set_dutycycle:
 39419                           	opt stack 18
 39420                           
 39421                           ; BSR set to: 1
 39422                           ;incstack = 0
 39423                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 39424  01397C  0100               	movlb	0	; () banked
 39425  01397E  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39426                           
 39427                           ;buck.c: 631: if(dutycycle>242)
 39428  013980  0EF2               	movlw	242
 39429  013982  0100               	movlb	0	; () banked
 39430  013984  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39431  013986  D003               	goto	l2635
 39432                           
 39433                           ; BSR set to: 0
 39434                           ;buck.c: 632: buck_remote_dutycycle = 242;
 39435  013988  0EF2               	movlw	242
 39436  01398A  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 39437  01398C  0012               	return	
 39438  01398E                     l2635:
 39439                           
 39440                           ; BSR set to: 0
 39441                           ;buck.c: 633: else if(dutycycle<40)
 39442                           
 39443                           ; BSR set to: 0
 39444  01398E  0E28               	movlw	40
 39445  013990  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 39446  013992  D003               	goto	l2637
 39447                           
 39448                           ; BSR set to: 0
 39449                           ;buck.c: 634: buck_remote_dutycycle = 40;
 39450  013994  0E28               	movlw	40
 39451  013996  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 39452  013998  0012               	return	
 39453  01399A                     l2637:
 39454                           
 39455                           ; BSR set to: 0
 39456                           ;buck.c: 635: else;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 39457  01399A  C060  F0E1         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 39458                           
 39459                           ; BSR set to: 0
 39460  01399E  0012               	return	
 39461  0139A0                     __end_of_buck_remote_set_dutycycle:
 39462                           	opt stack 0
 39463                           tosu	equ	0xFFF
 39464                           tosh	equ	0xFFE
 39465                           tosl	equ	0xFFD
 39466                           pclath	equ	0xFFA
 39467                           tblptru	equ	0xFF8
 39468                           tblptrh	equ	0xFF7
 39469                           tblptrl	equ	0xFF6
 39470                           tablat	equ	0xFF5
 39471                           prodh	equ	0xFF4
 39472                           prodl	equ	0xFF3
 39473                           intcon	equ	0xFF2
 39474                           intcon2	equ	0xFF1
 39475                           intcon3	equ	0xFF0
 39476                           postinc0	equ	0xFEE
 39477                           wreg	equ	0xFE8
 39478                           indf1	equ	0xFE7
 39479                           postinc1	equ	0xFE6
 39480                           postdec1	equ	0xFE5
 39481                           plusw1	equ	0xFE3
 39482                           fsr1h	equ	0xFE2
 39483                           fsr1l	equ	0xFE1
 39484                           indf2	equ	0xFDF
 39485                           postinc2	equ	0xFDE
 39486                           postdec2	equ	0xFDD
 39487                           plusw2	equ	0xFDB
 39488                           fsr2h	equ	0xFDA
 39489                           fsr2l	equ	0xFD9
 39490                           status	equ	0xFD8
 39491                           
 39492 ;; *************** function _buck_remote_change_dutycycle *****************
 39493 ;; Defined at:
 39494 ;;		line 639 in file "buck.c"
 39495 ;; Parameters:    Size  Location     Type
 39496 ;;  change          1    wreg     char 
 39497 ;; Auto vars:     Size  Location     Type
 39498 ;;  change          1    0[BANK0 ] char 
 39499 ;;  new_dutycycl    2    1[BANK0 ] int 
 39500 ;; Return value:  Size  Location     Type
 39501 ;;                  1    wreg      void 
 39502 ;; Registers used:
 39503 ;;		wreg, status,2, status,0
 39504 ;; Tracked objects:
 39505 ;;		On entry : 0/0
 39506 ;;		On exit  : 0/0
 39507 ;;		Unchanged: 0/0
 39508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39510 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39512 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39513 ;;Total ram usage:        3 bytes
 39514 ;; Hardware stack levels used:    1
 39515 ;; Hardware stack levels required when called:   10
 39516 ;; This function calls:
 39517 ;;		Nothing
 39518 ;; This function is called by:
 39519 ;;		__parse_command_long
 39520 ;; This function uses a non-reentrant model
 39521 ;;
 39522                           
 39523                           	psect	text191
 39524  0130B0                     __ptext191:
 39525                           	opt stack 0
 39526  0130B0                     _buck_remote_change_dutycycle:
 39527                           	opt stack 18
 39528                           
 39529                           ; BSR set to: 0
 39530                           ;incstack = 0
 39531                           ;buck_remote_change_dutycycle@change stored from wreg
 39532  0130B0  0100               	movlb	0	; () banked
 39533  0130B2  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 39534                           
 39535                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 39536  0130B4  0100               	movlb	0	; () banked
 39537  0130B6  51E4               	movf	_buck_dutycycle& (0+255),w,b
 39538  0130B8  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 39539  0130BA  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 39540  0130BC  6AE8               	clrf	wreg,c
 39541  0130BE  B0D8               	btfsc	status,0,c
 39542  0130C0  2AE8               	incf	wreg,f,c
 39543  0130C2  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 39544  0130C4  06E8               	decf	wreg,f,c
 39545  0130C6  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 39546                           
 39547                           ;buck.c: 642: if(new_dutycycle>242)
 39548  0130C8  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 39549  0130CA  D009               	goto	l2642
 39550  0130CC  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 39551  0130CE  E104               	bnz	u18630
 39552  0130D0  0EF3               	movlw	243
 39553  0130D2  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 39554  0130D4  A0D8               	btfss	status,0,c
 39555  0130D6  D003               	goto	l2642
 39556  0130D8                     u18630:
 39557                           
 39558                           ; BSR set to: 0
 39559                           ;buck.c: 643: buck_remote_dutycycle = 242;
 39560  0130D8  0EF2               	movlw	242
 39561  0130DA  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 39562  0130DC  0012               	return	
 39563  0130DE                     l2642:
 39564                           
 39565                           ; BSR set to: 0
 39566                           ;buck.c: 644: else if(new_dutycycle<40)
 39567                           
 39568                           ; BSR set to: 0
 39569  0130DE  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 39570  0130E0  D006               	goto	u18640
 39571  0130E2  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 39572  0130E4  E107               	bnz	l2644
 39573  0130E6  0E28               	movlw	40
 39574  0130E8  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 39575  0130EA  B0D8               	btfsc	status,0,c
 39576  0130EC  D003               	goto	l2644
 39577  0130EE                     u18640:
 39578                           
 39579                           ; BSR set to: 0
 39580                           ;buck.c: 645: buck_remote_dutycycle = 40;
 39581  0130EE  0E28               	movlw	40
 39582  0130F0  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 39583  0130F2  0012               	return	
 39584  0130F4                     l2644:
 39585                           
 39586                           ; BSR set to: 0
 39587                           ;buck.c: 646: else;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 39588  0130F4  C061  F0E1         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 39589                           
 39590                           ; BSR set to: 0
 39591  0130F8  0012               	return	
 39592  0130FA                     __end_of_buck_remote_change_dutycycle:
 39593                           	opt stack 0
 39594                           tosu	equ	0xFFF
 39595                           tosh	equ	0xFFE
 39596                           tosl	equ	0xFFD
 39597                           pclath	equ	0xFFA
 39598                           tblptru	equ	0xFF8
 39599                           tblptrh	equ	0xFF7
 39600                           tblptrl	equ	0xFF6
 39601                           tablat	equ	0xFF5
 39602                           prodh	equ	0xFF4
 39603                           prodl	equ	0xFF3
 39604                           intcon	equ	0xFF2
 39605                           intcon2	equ	0xFF1
 39606                           intcon3	equ	0xFF0
 39607                           postinc0	equ	0xFEE
 39608                           wreg	equ	0xFE8
 39609                           indf1	equ	0xFE7
 39610                           postinc1	equ	0xFE6
 39611                           postdec1	equ	0xFE5
 39612                           plusw1	equ	0xFE3
 39613                           fsr1h	equ	0xFE2
 39614                           fsr1l	equ	0xFE1
 39615                           indf2	equ	0xFDF
 39616                           postinc2	equ	0xFDE
 39617                           postdec2	equ	0xFDD
 39618                           plusw2	equ	0xFDB
 39619                           fsr2h	equ	0xFDA
 39620                           fsr2l	equ	0xFD9
 39621                           status	equ	0xFD8
 39622                           
 39623 ;; *************** function __parse_command_calibration *****************
 39624 ;; Defined at:
 39625 ;;		line 505 in file "app_device_custom_hid.c"
 39626 ;; Parameters:    Size  Location     Type
 39627 ;;  cmd             1    wreg     unsigned char 
 39628 ;;  item            1    3[BANK0 ] unsigned char 
 39629 ;;  dat1            1    4[BANK0 ] unsigned char 
 39630 ;;  dat2            1    5[BANK0 ] unsigned char 
 39631 ;;  dat3            1    6[BANK0 ] unsigned char 
 39632 ;; Auto vars:     Size  Location     Type
 39633 ;;  cmd             1    0[COMRAM] unsigned char 
 39634 ;;  parameter       2    9[BANK0 ] int 
 39635 ;; Return value:  Size  Location     Type
 39636 ;;                  1    wreg      void 
 39637 ;; Registers used:
 39638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39639 ;; Tracked objects:
 39640 ;;		On entry : 0/0
 39641 ;;		On exit  : 0/0
 39642 ;;		Unchanged: 0/0
 39643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39648 ;;Total ram usage:        8 bytes
 39649 ;; Hardware stack levels used:    1
 39650 ;; Hardware stack levels required when called:   11
 39651 ;; This function calls:
 39652 ;;		_schedule_eeprom_write_task
 39653 ;; This function is called by:
 39654 ;;		_APP_DeviceCustomHIDTasks
 39655 ;; This function uses a non-reentrant model
 39656 ;;
 39657                           
 39658                           	psect	text192
 39659  00EF16                     __ptext192:
 39660                           	opt stack 0
 39661  00EF16                     __parse_command_calibration:
 39662                           	opt stack 18
 39663                           
 39664                           ;app_device_custom_hid.c: 507: int16_t parameter = dat1;
 39665                           
 39666                           ; BSR set to: 0
 39667                           ;incstack = 0
 39668  00EF16  C064  F069         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 39669  00EF1A  0100               	movlb	0	; () banked
 39670  00EF1C  6B6A               	clrf	(__parse_command_calibration@parameter+1)& (0+255),b
 39671                           
 39672                           ; BSR set to: 0
 39673                           ;app_device_custom_hid.c: 508: parameter <<= 8;
 39674  00EF1E  5169               	movf	__parse_command_calibration@parameter& (0+255),w,b
 39675  00EF20  6F6A               	movwf	(__parse_command_calibration@parameter+1)& (0+255),b
 39676  00EF22  6B69               	clrf	__parse_command_calibration@parameter& (0+255),b
 39677                           
 39678                           ; BSR set to: 0
 39679                           ;app_device_custom_hid.c: 509: parameter |= dat2;
 39680  00EF24  5165               	movf	__parse_command_calibration@dat2& (0+255),w,b
 39681  00EF26  1369               	iorwf	__parse_command_calibration@parameter& (0+255),f,b
 39682                           
 39683                           ;app_device_custom_hid.c: 511: switch(item & 0x0F)
 39684  00EF28  D03F               	goto	l1184
 39685  00EF2A                     
 39686                           ; BSR set to: 0
 39687                           ;app_device_custom_hid.c: 515: calibrationParameters[item>>4].Offset = parameter;
 39688                           
 39689                           ; BSR set to: 0
 39690  00EF2A  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39691  00EF2E  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39692  00EF30  0E0F               	movlw	15
 39693  00EF32  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39694  00EF34  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39695  00EF36  0D0C               	mullw	12
 39696  00EF38  0E05               	movlw	5
 39697  00EF3A  26F3               	addwf	prodl,f,c
 39698  00EF3C  0E00               	movlw	0
 39699  00EF3E  22F4               	addwfc	prodh,f,c
 39700  00EF40  0E00               	movlw	low _calibrationParameters
 39701  00EF42  24F3               	addwf	prodl,w,c
 39702  00EF44  6ED9               	movwf	fsr2l,c
 39703  00EF46  0E03               	movlw	high _calibrationParameters
 39704  00EF48  20F4               	addwfc	prodh,w,c
 39705  00EF4A  6EDA               	movwf	fsr2h,c
 39706  00EF4C  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 39707  00EF50  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 39708                           
 39709                           ;app_device_custom_hid.c: 516: break;
 39710  00EF54  D055               	goto	l1188
 39711  00EF56                     
 39712                           ; BSR set to: 0
 39713                           ;app_device_custom_hid.c: 519: calibrationParameters[item>>4].Multiplier = parameter;
 39714                           
 39715                           ; BSR set to: 0
 39716  00EF56  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39717  00EF5A  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39718  00EF5C  0E0F               	movlw	15
 39719  00EF5E  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39720  00EF60  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39721  00EF62  0D0C               	mullw	12
 39722  00EF64  0E07               	movlw	7
 39723  00EF66  26F3               	addwf	prodl,f,c
 39724  00EF68  0E00               	movlw	0
 39725  00EF6A  22F4               	addwfc	prodh,f,c
 39726  00EF6C  0E00               	movlw	low _calibrationParameters
 39727  00EF6E  24F3               	addwf	prodl,w,c
 39728  00EF70  6ED9               	movwf	fsr2l,c
 39729  00EF72  0E03               	movlw	high _calibrationParameters
 39730  00EF74  20F4               	addwfc	prodh,w,c
 39731  00EF76  6EDA               	movwf	fsr2h,c
 39732  00EF78  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 39733  00EF7C  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 39734                           
 39735                           ;app_device_custom_hid.c: 520: calibrationParameters[item>>4].Shift = dat3;
 39736  00EF80  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 39737  00EF84  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 39738  00EF86  0E0F               	movlw	15
 39739  00EF88  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 39740  00EF8A  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39741  00EF8C  0D0C               	mullw	12
 39742  00EF8E  0E09               	movlw	9
 39743  00EF90  26F3               	addwf	prodl,f,c
 39744  00EF92  0E00               	movlw	0
 39745  00EF94  22F4               	addwfc	prodh,f,c
 39746  00EF96  0E00               	movlw	low _calibrationParameters
 39747  00EF98  24F3               	addwf	prodl,w,c
 39748  00EF9A  6ED9               	movwf	fsr2l,c
 39749  00EF9C  0E03               	movlw	high _calibrationParameters
 39750  00EF9E  20F4               	addwfc	prodh,w,c
 39751  00EFA0  6EDA               	movwf	fsr2h,c
 39752  00EFA2  C066  FFDF         	movff	__parse_command_calibration@dat3,indf2
 39753                           
 39754                           ; BSR set to: 0
 39755                           ;app_device_custom_hid.c: 522: }
 39756                           
 39757                           ;app_device_custom_hid.c: 521: break;
 39758  00EFA6  D02C               	goto	l1188
 39759  00EFA8                     l1184:
 39760                           
 39761                           ; BSR set to: 0
 39762                           
 39763                           ; BSR set to: 0
 39764  00EFA8  5163               	movf	__parse_command_calibration@item& (0+255),w,b
 39765  00EFAA  0B0F               	andlw	15
 39766  00EFAC  6F67               	movwf	??__parse_command_calibration& (0+255),b
 39767  00EFAE  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 39768                           
 39769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39770                           ; Switch size 1, requested type "space"
 39771                           ; Number of cases is 1, Range of values is 0 to 0
 39772                           ; switch strategies available:
 39773                           ; Name         Instructions Cycles
 39774                           ; simple_byte            4     3 (average)
 39775                           ;	Chosen strategy is simple_byte
 39776  00EFB0  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 39777  00EFB2  0A00               	xorlw	0	; case 0
 39778  00EFB4  A4D8               	btfss	status,2,c
 39779  00EFB6  D024               	goto	l1188
 39780                           
 39781                           ; BSR set to: 0
 39782                           ; Switch size 1, requested type "space"
 39783                           ; Number of cases is 2, Range of values is 0 to 1
 39784                           ; switch strategies available:
 39785                           ; Name         Instructions Cycles
 39786                           ; simple_byte            7     4 (average)
 39787                           ;	Chosen strategy is simple_byte
 39788  00EFB8  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39789  00EFBA  0A00               	xorlw	0	; case 0
 39790  00EFBC  B4D8               	btfsc	status,2,c
 39791  00EFBE  D7B5               	goto	l1185
 39792  00EFC0  0A01               	xorlw	1	; case 1
 39793  00EFC2  B4D8               	btfsc	status,2,c
 39794  00EFC4  D7C8               	goto	l1187
 39795                           
 39796                           ; BSR set to: 0
 39797                           ;app_device_custom_hid.c: 524: switch((calibrationIndex_t) item>>4)
 39798  00EFC6  D01C               	goto	l1188
 39799  00EFC8                     
 39800                           ; BSR set to: 0
 39801                           ;app_device_custom_hid.c: 527: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 39802                           
 39803                           ; BSR set to: 0
 39804  00EFC8  0E02               	movlw	2
 39805  00EFCA  EC4A  F097         	call	_schedule_eeprom_write_task
 39806                           
 39807                           ;app_device_custom_hid.c: 528: break;
 39808  00EFCE  0012               	return	
 39809  00EFD0                     
 39810                           ;app_device_custom_hid.c: 530: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 39811  00EFD0  0E03               	movlw	3
 39812  00EFD2  EC4A  F097         	call	_schedule_eeprom_write_task
 39813                           
 39814                           ;app_device_custom_hid.c: 531: break;
 39815  00EFD6  0012               	return	
 39816  00EFD8                     
 39817                           ;app_device_custom_hid.c: 533: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 39818  00EFD8  0E04               	movlw	4
 39819  00EFDA  EC4A  F097         	call	_schedule_eeprom_write_task
 39820                           
 39821                           ;app_device_custom_hid.c: 534: break;
 39822  00EFDE  0012               	return	
 39823  00EFE0                     
 39824                           ;app_device_custom_hid.c: 536: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 39825  00EFE0  0E05               	movlw	5
 39826  00EFE2  EC4A  F097         	call	_schedule_eeprom_write_task
 39827                           
 39828                           ;app_device_custom_hid.c: 537: break;
 39829  00EFE6  0012               	return	
 39830  00EFE8                     
 39831                           ;app_device_custom_hid.c: 539: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 39832  00EFE8  0E06               	movlw	6
 39833  00EFEA  EC4A  F097         	call	_schedule_eeprom_write_task
 39834                           
 39835                           ;app_device_custom_hid.c: 540: break;
 39836  00EFEE  0012               	return	
 39837  00EFF0                     
 39838                           ;app_device_custom_hid.c: 542: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 39839  00EFF0  0E07               	movlw	7
 39840  00EFF2  EC4A  F097         	call	_schedule_eeprom_write_task
 39841                           
 39842                           ;app_device_custom_hid.c: 543: break;
 39843  00EFF6  0012               	return	
 39844  00EFF8                     
 39845                           ;app_device_custom_hid.c: 545: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 39846  00EFF8  0E08               	movlw	8
 39847  00EFFA  EC4A  F097         	call	_schedule_eeprom_write_task
 39848                           
 39849                           ;app_device_custom_hid.c: 547: }
 39850                           
 39851                           ;app_device_custom_hid.c: 546: break;
 39852  00EFFE  0012               	return	
 39853  00F000                     l1188:
 39854  00F000  0100               	movlb	0	; () banked
 39855  00F002  3963               	swapf	__parse_command_calibration@item& (0+255),w,b
 39856  00F004  0B0F               	andlw	15
 39857  00F006  6F67               	movwf	??__parse_command_calibration& (0+255),b
 39858  00F008  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 39859                           
 39860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39861                           ; Switch size 1, requested type "space"
 39862                           ; Number of cases is 1, Range of values is 0 to 0
 39863                           ; switch strategies available:
 39864                           ; Name         Instructions Cycles
 39865                           ; simple_byte            4     3 (average)
 39866                           ;	Chosen strategy is simple_byte
 39867  00F00A  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 39868  00F00C  0A00               	xorlw	0	; case 0
 39869  00F00E  A4D8               	btfss	status,2,c
 39870  00F010  0012               	return	
 39871                           
 39872                           ; BSR set to: 0
 39873                           ; Switch size 1, requested type "space"
 39874                           ; Number of cases is 7, Range of values is 0 to 6
 39875                           ; switch strategies available:
 39876                           ; Name         Instructions Cycles
 39877                           ; simple_byte           22    12 (average)
 39878                           ;	Chosen strategy is simple_byte
 39879  00F012  5167               	movf	??__parse_command_calibration& (0+255),w,b
 39880  00F014  0A00               	xorlw	0	; case 0
 39881  00F016  B4D8               	btfsc	status,2,c
 39882  00F018  D7D7               	goto	l1189
 39883  00F01A  0A01               	xorlw	1	; case 1
 39884  00F01C  B4D8               	btfsc	status,2,c
 39885  00F01E  D7D8               	goto	l1191
 39886  00F020  0A03               	xorlw	3	; case 2
 39887  00F022  B4D8               	btfsc	status,2,c
 39888  00F024  D7D9               	goto	l1192
 39889  00F026  0A01               	xorlw	1	; case 3
 39890  00F028  B4D8               	btfsc	status,2,c
 39891  00F02A  D7DA               	goto	l1193
 39892  00F02C  0A07               	xorlw	7	; case 4
 39893  00F02E  B4D8               	btfsc	status,2,c
 39894  00F030  D7DB               	goto	l1194
 39895  00F032  0A01               	xorlw	1	; case 5
 39896  00F034  B4D8               	btfsc	status,2,c
 39897  00F036  D7DC               	goto	l1195
 39898  00F038  0A03               	xorlw	3	; case 6
 39899  00F03A  A4D8               	btfss	status,2,c
 39900  00F03C  0012               	return	
 39901  00F03E  D7DC               	goto	l1196
 39902  00F040                     __end_of__parse_command_calibration:
 39903                           	opt stack 0
 39904                           tosu	equ	0xFFF
 39905                           tosh	equ	0xFFE
 39906                           tosl	equ	0xFFD
 39907                           pclath	equ	0xFFA
 39908                           tblptru	equ	0xFF8
 39909                           tblptrh	equ	0xFF7
 39910                           tblptrl	equ	0xFF6
 39911                           tablat	equ	0xFF5
 39912                           prodh	equ	0xFF4
 39913                           prodl	equ	0xFF3
 39914                           intcon	equ	0xFF2
 39915                           intcon2	equ	0xFF1
 39916                           intcon3	equ	0xFF0
 39917                           postinc0	equ	0xFEE
 39918                           wreg	equ	0xFE8
 39919                           indf1	equ	0xFE7
 39920                           postinc1	equ	0xFE6
 39921                           postdec1	equ	0xFE5
 39922                           plusw1	equ	0xFE3
 39923                           fsr1h	equ	0xFE2
 39924                           fsr1l	equ	0xFE1
 39925                           indf2	equ	0xFDF
 39926                           postinc2	equ	0xFDE
 39927                           postdec2	equ	0xFDD
 39928                           plusw2	equ	0xFDB
 39929                           fsr2h	equ	0xFDA
 39930                           fsr2l	equ	0xFD9
 39931                           status	equ	0xFD8
 39932                           
 39933 ;; *************** function _schedule_eeprom_write_task *****************
 39934 ;; Defined at:
 39935 ;;		line 741 in file "i2c.c"
 39936 ;; Parameters:    Size  Location     Type
 39937 ;;  task            1    wreg     enum E6775
 39938 ;; Auto vars:     Size  Location     Type
 39939 ;;  task            1    1[BANK0 ] enum E6775
 39940 ;;  idx             1    2[BANK0 ] unsigned char 
 39941 ;; Return value:  Size  Location     Type
 39942 ;;                  1    wreg      void 
 39943 ;; Registers used:
 39944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39945 ;; Tracked objects:
 39946 ;;		On entry : 0/0
 39947 ;;		On exit  : 0/0
 39948 ;;		Unchanged: 0/0
 39949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39951 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39953 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39954 ;;Total ram usage:        3 bytes
 39955 ;; Hardware stack levels used:    1
 39956 ;; Hardware stack levels required when called:   10
 39957 ;; This function calls:
 39958 ;;		Nothing
 39959 ;; This function is called by:
 39960 ;;		__parse_command_calibration
 39961 ;;		_i2c_eeprom_read_calibration
 39962 ;; This function uses a non-reentrant model
 39963 ;;
 39964                           
 39965                           	psect	text193
 39966  012E94                     __ptext193:
 39967                           	opt stack 0
 39968  012E94                     _schedule_eeprom_write_task:
 39969                           	opt stack 18
 39970                           
 39971                           ;incstack = 0
 39972                           ;schedule_eeprom_write_task@task stored from wreg
 39973  012E94  0100               	movlb	0	; () banked
 39974  012E96  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 39975                           
 39976                           ;i2c.c: 743: uint8_t idx;;i2c.c: 745: for(idx=task_list_read_index; idx!=task_list_write
      +                          _index; idx=(idx+1) & 0x0F)
 39977  012E98  C01E  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 39978  012E9C  D010               	goto	l1660
 39979  012E9E                     
 39980                           ;i2c.c: 746: {;i2c.c: 747: if (task_list[idx] == task)
 39981  012E9E  0100               	movlb	0	; () banked
 39982  012EA0  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 39983  012EA2  0D01               	mullw	1
 39984  012EA4  0E68               	movlw	low _task_list
 39985  012EA6  24F3               	addwf	prodl,w,c
 39986  012EA8  6ED9               	movwf	fsr2l,c
 39987  012EAA  0E04               	movlw	high _task_list
 39988  012EAC  20F4               	addwfc	prodh,w,c
 39989  012EAE  6EDA               	movwf	fsr2h,c
 39990  012EB0  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 39991  012EB2  18DE               	xorwf	postinc2,w,c
 39992  012EB4  B4D8               	btfsc	status,2,c
 39993  012EB6  0012               	return	
 39994                           
 39995                           ; BSR set to: 0
 39996                           
 39997                           ; BSR set to: 0
 39998                           
 39999                           ; BSR set to: 0
 40000                           ;i2c.c: 748: {;i2c.c: 750: return;
 40001  012EB8  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 40002  012EBA  0B0F               	andlw	15
 40003  012EBC  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 40004  012EBE                     l1660:
 40005  012EBE  501D               	movf	_task_list_write_index,w,c
 40006  012EC0  0100               	movlb	0	; () banked
 40007  012EC2  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 40008  012EC4  A4D8               	btfss	status,2,c
 40009  012EC6  D7EB               	goto	l1661
 40010                           
 40011                           ; BSR set to: 0
 40012                           ;i2c.c: 751: };i2c.c: 752: };i2c.c: 754: task_list[task_list_write_index] = task;
 40013                           
 40014                           ; BSR set to: 0
 40015  012EC8  501D               	movf	_task_list_write_index,w,c
 40016  012ECA  0D01               	mullw	1
 40017  012ECC  0E68               	movlw	low _task_list
 40018  012ECE  24F3               	addwf	prodl,w,c
 40019  012ED0  6ED9               	movwf	fsr2l,c
 40020  012ED2  0E04               	movlw	high _task_list
 40021  012ED4  20F4               	addwfc	prodh,w,c
 40022  012ED6  6EDA               	movwf	fsr2h,c
 40023  012ED8  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 40024                           
 40025                           ; BSR set to: 0
 40026                           ;i2c.c: 755: ++task_list_write_index;
 40027  012EDC  2A1D               	incf	_task_list_write_index,f,c
 40028                           
 40029                           ; BSR set to: 0
 40030                           ;i2c.c: 756: task_list_write_index &= 0x0F;
 40031  012EDE  0E0F               	movlw	15
 40032  012EE0  161D               	andwf	_task_list_write_index,f,c
 40033                           
 40034                           ; BSR set to: 0
 40035  012EE2  0012               	return		;funcret
 40036  012EE4                     __end_of_schedule_eeprom_write_task:
 40037                           	opt stack 0
 40038                           tosu	equ	0xFFF
 40039                           tosh	equ	0xFFE
 40040                           tosl	equ	0xFFD
 40041                           pclath	equ	0xFFA
 40042                           tblptru	equ	0xFF8
 40043                           tblptrh	equ	0xFF7
 40044                           tblptrl	equ	0xFF6
 40045                           tablat	equ	0xFF5
 40046                           prodh	equ	0xFF4
 40047                           prodl	equ	0xFF3
 40048                           intcon	equ	0xFF2
 40049                           intcon2	equ	0xFF1
 40050                           intcon3	equ	0xFF0
 40051                           postinc0	equ	0xFEE
 40052                           wreg	equ	0xFE8
 40053                           indf1	equ	0xFE7
 40054                           postinc1	equ	0xFE6
 40055                           postdec1	equ	0xFE5
 40056                           plusw1	equ	0xFE3
 40057                           fsr1h	equ	0xFE2
 40058                           fsr1l	equ	0xFE1
 40059                           indf2	equ	0xFDF
 40060                           postinc2	equ	0xFDE
 40061                           postdec2	equ	0xFDD
 40062                           plusw2	equ	0xFDB
 40063                           fsr2h	equ	0xFDA
 40064                           fsr2l	equ	0xFD9
 40065                           status	equ	0xFD8
 40066                           
 40067 ;; *************** function __fill_buffer_get_status *****************
 40068 ;; Defined at:
 40069 ;;		line 269 in file "app_device_custom_hid.c"
 40070 ;; Parameters:    Size  Location     Type
 40071 ;;		None
 40072 ;; Auto vars:     Size  Location     Type
 40073 ;;		None
 40074 ;; Return value:  Size  Location     Type
 40075 ;;                  1    wreg      void 
 40076 ;; Registers used:
 40077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40078 ;; Tracked objects:
 40079 ;;		On entry : 0/0
 40080 ;;		On exit  : 0/0
 40081 ;;		Unchanged: 0/0
 40082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40087 ;;Total ram usage:        4 bytes
 40088 ;; Hardware stack levels used:    1
 40089 ;; Hardware stack levels required when called:   11
 40090 ;; This function calls:
 40091 ;;		_buck_get_dutycycle
 40092 ;;		_buck_get_mode
 40093 ;;		_buck_remote_get_dutycycle
 40094 ;;		_buck_remote_get_status
 40095 ;;		_rtcc_get_day
 40096 ;;		_rtcc_get_hours
 40097 ;;		_rtcc_get_minutes
 40098 ;;		_rtcc_get_month
 40099 ;;		_rtcc_get_seconds
 40100 ;;		_rtcc_get_year
 40101 ;;		_ui_get_status
 40102 ;; This function is called by:
 40103 ;;		_APP_DeviceCustomHIDTasks
 40104 ;; This function uses a non-reentrant model
 40105 ;;
 40106                           
 40107                           	psect	text194
 40108  00D4DC                     __ptext194:
 40109                           	opt stack 0
 40110  00D4DC                     __fill_buffer_get_status:
 40111                           	opt stack 18
 40112                           
 40113                           ;app_device_custom_hid.c: 272: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 40114                           
 40115                           ; BSR set to: 0
 40116                           ;incstack = 0
 40117  00D4DC  0E10               	movlw	16
 40118  00D4DE  0103               	movlb	3	; () banked
 40119  00D4E0  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 40120                           
 40121                           ; BSR set to: 3
 40122                           ;app_device_custom_hid.c: 274: ToSendDataBuffer[1] = (uint8_t) os.input_voltage;
 40123  00D4E2  C212  F3A5         	movff	_os+18,_ToSendDataBuffer+1	;volatile
 40124                           
 40125                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[2] = os.input_voltage >> 8;
 40126  00D4E6  0102               	movlb	2	; () banked
 40127  00D4E8  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 40128  00D4EA  0103               	movlb	3	; () banked
 40129  00D4EC  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 40130                           
 40131                           ; BSR set to: 3
 40132                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[3] = (uint8_t) os.output_voltage;
 40133  00D4EE  C227  F3A7         	movff	_os+39,_ToSendDataBuffer+3	;volatile
 40134                           
 40135                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[4] = os.output_voltage >> 8;
 40136  00D4F2  0102               	movlb	2	; () banked
 40137  00D4F4  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 40138  00D4F6  0103               	movlb	3	; () banked
 40139  00D4F8  6FA8               	movwf	(_ToSendDataBuffer+4)& (0+255),b
 40140                           
 40141                           ; BSR set to: 3
 40142                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[5] = (uint8_t) os.input_current;
 40143  00D4FA  C21D  F3A9         	movff	_os+29,_ToSendDataBuffer+5	;volatile
 40144                           
 40145                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[6] = os.input_current >> 8;
 40146  00D4FE  0102               	movlb	2	; () banked
 40147  00D500  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 40148  00D502  0103               	movlb	3	; () banked
 40149  00D504  6FAA               	movwf	(_ToSendDataBuffer+6)& (0+255),b
 40150                           
 40151                           ; BSR set to: 3
 40152                           ;app_device_custom_hid.c: 283: ToSendDataBuffer[7] = (uint8_t) os.output_current;
 40153  00D506  C232  F3AB         	movff	_os+50,_ToSendDataBuffer+7	;volatile
 40154                           
 40155                           ;app_device_custom_hid.c: 284: ToSendDataBuffer[8] = os.output_current >> 8;
 40156  00D50A  0102               	movlb	2	; () banked
 40157  00D50C  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 40158  00D50E  0103               	movlb	3	; () banked
 40159  00D510  6FAC               	movwf	(_ToSendDataBuffer+8)& (0+255),b
 40160                           
 40161                           ; BSR set to: 3
 40162                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[9] = (uint8_t) os.temperature_onboard;
 40163  00D512  C236  F3AD         	movff	_os+54,_ToSendDataBuffer+9	;volatile
 40164                           
 40165                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[10] = os.temperature_onboard >> 8;
 40166  00D516  0102               	movlb	2	; () banked
 40167  00D518  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 40168  00D51A  0103               	movlb	3	; () banked
 40169  00D51C  6FAE               	movwf	(_ToSendDataBuffer+10)& (0+255),b
 40170                           
 40171                           ; BSR set to: 3
 40172                           ;app_device_custom_hid.c: 289: ToSendDataBuffer[11] = (uint8_t) os.temperature_external_
      +                          1;
 40173  00D51E  C23A  F3AF         	movff	_os+58,_ToSendDataBuffer+11	;volatile
 40174                           
 40175                           ;app_device_custom_hid.c: 290: ToSendDataBuffer[12] = os.temperature_external_1 >> 8;
 40176  00D522  0102               	movlb	2	; () banked
 40177  00D524  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 40178  00D526  0103               	movlb	3	; () banked
 40179  00D528  6FB0               	movwf	(_ToSendDataBuffer+12)& (0+255),b
 40180                           
 40181                           ; BSR set to: 3
 40182                           ;app_device_custom_hid.c: 292: ToSendDataBuffer[13] = (uint8_t) os.temperature_external_
      +                          2;
 40183  00D52A  C23E  F3B1         	movff	_os+62,_ToSendDataBuffer+13	;volatile
 40184                           
 40185                           ;app_device_custom_hid.c: 293: ToSendDataBuffer[14] = os.temperature_external_2 >> 8;
 40186  00D52E  0102               	movlb	2	; () banked
 40187  00D530  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 40188  00D532  0103               	movlb	3	; () banked
 40189  00D534  6FB2               	movwf	(_ToSendDataBuffer+14)& (0+255),b
 40190                           
 40191                           ; BSR set to: 3
 40192                           ;app_device_custom_hid.c: 295: ToSendDataBuffer[15] = os.outputs;
 40193  00D536  C205  F3B3         	movff	_os+5,_ToSendDataBuffer+15	;volatile
 40194                           
 40195                           ; BSR set to: 3
 40196                           ;app_device_custom_hid.c: 297: ToSendDataBuffer[16] = os.display_mode;
 40197  00D53A  C240  F3B4         	movff	_os+64,_ToSendDataBuffer+16	;volatile
 40198                           
 40199                           ; BSR set to: 3
 40200                           ;app_device_custom_hid.c: 299: ToSendDataBuffer[17] = rtcc_get_year();
 40201  00D53E  EC04  F09F         	call	_rtcc_get_year	;wreg free
 40202  00D542  0103               	movlb	3	; () banked
 40203  00D544  6FB5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 40204                           
 40205                           ; BSR set to: 3
 40206                           ;app_device_custom_hid.c: 300: ToSendDataBuffer[18] = rtcc_get_month();
 40207  00D546  EC12  F09F         	call	_rtcc_get_month	;wreg free
 40208  00D54A  0103               	movlb	3	; () banked
 40209  00D54C  6FB6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 40210                           
 40211                           ; BSR set to: 3
 40212                           ;app_device_custom_hid.c: 301: ToSendDataBuffer[19] = rtcc_get_day();
 40213  00D54E  EC27  F09F         	call	_rtcc_get_day	;wreg free
 40214  00D552  0103               	movlb	3	; () banked
 40215  00D554  6FB7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 40216                           
 40217                           ; BSR set to: 3
 40218                           ;app_device_custom_hid.c: 302: ToSendDataBuffer[20] = rtcc_get_hours();
 40219  00D556  EC20  F09F         	call	_rtcc_get_hours	;wreg free
 40220  00D55A  0103               	movlb	3	; () banked
 40221  00D55C  6FB8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 40222                           
 40223                           ; BSR set to: 3
 40224                           ;app_device_custom_hid.c: 303: ToSendDataBuffer[21] = rtcc_get_minutes();
 40225  00D55E  EC19  F09F         	call	_rtcc_get_minutes	;wreg free
 40226  00D562  0103               	movlb	3	; () banked
 40227  00D564  6FB9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 40228                           
 40229                           ; BSR set to: 3
 40230                           ;app_device_custom_hid.c: 304: ToSendDataBuffer[22] = rtcc_get_seconds();
 40231  00D566  EC0B  F09F         	call	_rtcc_get_seconds	;wreg free
 40232  00D56A  0103               	movlb	3	; () banked
 40233  00D56C  6FBA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 40234                           
 40235                           ; BSR set to: 3
 40236                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[23] = buck_get_mode();
 40237  00D56E  EC74  F09F         	call	_buck_get_mode	;wreg free
 40238  00D572  0103               	movlb	3	; () banked
 40239  00D574  6FBB               	movwf	(_ToSendDataBuffer+23)& (0+255),b
 40240                           
 40241                           ; BSR set to: 3
 40242                           ;app_device_custom_hid.c: 307: ToSendDataBuffer[24] = buck_get_dutycycle();
 40243  00D576  EC6F  F09F         	call	_buck_get_dutycycle	;wreg free
 40244  00D57A  0103               	movlb	3	; () banked
 40245  00D57C  6FBC               	movwf	(_ToSendDataBuffer+24)& (0+255),b
 40246                           
 40247                           ; BSR set to: 3
 40248                           ;app_device_custom_hid.c: 308: ToSendDataBuffer[25] = buck_remote_get_status();
 40249  00D57E  EC39  F09C         	call	_buck_remote_get_status	;wreg free
 40250  00D582  0103               	movlb	3	; () banked
 40251  00D584  6FBD               	movwf	(_ToSendDataBuffer+25)& (0+255),b
 40252                           
 40253                           ; BSR set to: 3
 40254                           ;app_device_custom_hid.c: 309: ToSendDataBuffer[26] = buck_remote_get_dutycycle();
 40255  00D586  EC6C  F09F         	call	_buck_remote_get_dutycycle	;wreg free
 40256  00D58A  0103               	movlb	3	; () banked
 40257  00D58C  6FBE               	movwf	(_ToSendDataBuffer+26)& (0+255),b
 40258                           
 40259                           ; BSR set to: 3
 40260                           ;app_device_custom_hid.c: 311: ToSendDataBuffer[27] = (uint8_t) os.temperature_onboard_a
      +                          dc;
 40261  00D58E  C234  F3BF         	movff	_os+52,_ToSendDataBuffer+27	;volatile
 40262                           
 40263                           ; BSR set to: 3
 40264                           ;app_device_custom_hid.c: 312: ToSendDataBuffer[28] = os.temperature_onboard_adc >> 8;
 40265  00D592  0102               	movlb	2	; () banked
 40266  00D594  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 40267  00D596  0103               	movlb	3	; () banked
 40268  00D598  6FC0               	movwf	(_ToSendDataBuffer+28)& (0+255),b
 40269                           
 40270                           ; BSR set to: 3
 40271                           ;app_device_custom_hid.c: 313: ToSendDataBuffer[29] = (uint8_t) os.temperature_external_
      +                          1_adc;
 40272  00D59A  C238  F3C1         	movff	_os+56,_ToSendDataBuffer+29	;volatile
 40273                           
 40274                           ; BSR set to: 3
 40275                           ;app_device_custom_hid.c: 314: ToSendDataBuffer[30] = os.temperature_external_1_adc >> 8
      +                          ;
 40276  00D59E  0102               	movlb	2	; () banked
 40277  00D5A0  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 40278  00D5A2  0103               	movlb	3	; () banked
 40279  00D5A4  6FC2               	movwf	(_ToSendDataBuffer+30)& (0+255),b
 40280                           
 40281                           ; BSR set to: 3
 40282                           ;app_device_custom_hid.c: 315: ToSendDataBuffer[31] = (uint8_t) os.temperature_external_
      +                          2_adc;
 40283  00D5A6  C23C  F3C3         	movff	_os+60,_ToSendDataBuffer+31	;volatile
 40284                           
 40285                           ; BSR set to: 3
 40286                           ;app_device_custom_hid.c: 316: ToSendDataBuffer[32] = os.temperature_external_2_adc >> 8
      +                          ;
 40287  00D5AA  0102               	movlb	2	; () banked
 40288  00D5AC  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 40289  00D5AE  0103               	movlb	3	; () banked
 40290  00D5B0  6FC4               	movwf	(_ToSendDataBuffer+32)& (0+255),b
 40291                           
 40292                           ; BSR set to: 3
 40293                           ;app_device_custom_hid.c: 317: ToSendDataBuffer[33] = (uint8_t) os.input_voltage_adc[(os
      +                          .timeSlot&0b00110000)>>4];
 40294  00D5B2  0102               	movlb	2	; () banked
 40295  00D5B4  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40296  00D5B6  0B0F               	andlw	15
 40297  00D5B8  0B03               	andlw	3
 40298  00D5BA  0100               	movlb	0	; () banked
 40299  00D5BC  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40300  00D5BE  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40301  00D5C0  90D8               	bcf	status,0,c
 40302  00D5C2  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40303  00D5C4  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40304  00D5C6  0E0A               	movlw	low (_os+10)
 40305  00D5C8  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40306  00D5CA  6ED9               	movwf	fsr2l,c
 40307  00D5CC  0E02               	movlw	high (_os+10)
 40308  00D5CE  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40309  00D5D0  6EDA               	movwf	fsr2h,c
 40310  00D5D2  50DF               	movf	indf2,w,c
 40311  00D5D4  0103               	movlb	3	; () banked
 40312  00D5D6  6FC5               	movwf	(_ToSendDataBuffer+33)& (0+255),b
 40313                           
 40314                           ; BSR set to: 3
 40315                           ;app_device_custom_hid.c: 318: ToSendDataBuffer[34] = os.input_voltage_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 40316  00D5D8  0102               	movlb	2	; () banked
 40317  00D5DA  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40318  00D5DC  0B0F               	andlw	15
 40319  00D5DE  0B03               	andlw	3
 40320  00D5E0  0100               	movlb	0	; () banked
 40321  00D5E2  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40322  00D5E4  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40323  00D5E6  90D8               	bcf	status,0,c
 40324  00D5E8  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40325  00D5EA  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40326  00D5EC  0E0A               	movlw	low (_os+10)
 40327  00D5EE  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40328  00D5F0  6ED9               	movwf	fsr2l,c
 40329  00D5F2  0E02               	movlw	high (_os+10)
 40330  00D5F4  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40331  00D5F6  6EDA               	movwf	fsr2h,c
 40332  00D5F8  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40333  00D5FC  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40334  00D600  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40335  00D604  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40336  00D606  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40337  00D608  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40338  00D60A  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40339  00D60C  0103               	movlb	3	; () banked
 40340  00D60E  6FC6               	movwf	(_ToSendDataBuffer+34)& (0+255),b
 40341                           
 40342                           ; BSR set to: 3
 40343                           ;app_device_custom_hid.c: 319: ToSendDataBuffer[35] = (uint8_t) os.output_voltage_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 40344  00D610  0102               	movlb	2	; () banked
 40345  00D612  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40346  00D614  0B0F               	andlw	15
 40347  00D616  0B03               	andlw	3
 40348  00D618  0100               	movlb	0	; () banked
 40349  00D61A  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40350  00D61C  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40351  00D61E  90D8               	bcf	status,0,c
 40352  00D620  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40353  00D622  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40354  00D624  0E1F               	movlw	low (_os+31)
 40355  00D626  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40356  00D628  6ED9               	movwf	fsr2l,c
 40357  00D62A  0E02               	movlw	high (_os+31)
 40358  00D62C  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40359  00D62E  6EDA               	movwf	fsr2h,c
 40360  00D630  50DF               	movf	indf2,w,c
 40361  00D632  0103               	movlb	3	; () banked
 40362  00D634  6FC7               	movwf	(_ToSendDataBuffer+35)& (0+255),b
 40363                           
 40364                           ; BSR set to: 3
 40365                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[36] = os.output_voltage_adc[(os.timeSlot
      +                          &0b00110000)>>4] >> 8;
 40366  00D636  0102               	movlb	2	; () banked
 40367  00D638  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40368  00D63A  0B0F               	andlw	15
 40369  00D63C  0B03               	andlw	3
 40370  00D63E  0100               	movlb	0	; () banked
 40371  00D640  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40372  00D642  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40373  00D644  90D8               	bcf	status,0,c
 40374  00D646  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40375  00D648  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40376  00D64A  0E1F               	movlw	low (_os+31)
 40377  00D64C  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40378  00D64E  6ED9               	movwf	fsr2l,c
 40379  00D650  0E02               	movlw	high (_os+31)
 40380  00D652  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40381  00D654  6EDA               	movwf	fsr2h,c
 40382  00D656  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40383  00D65A  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40384  00D65E  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40385  00D662  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40386  00D664  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40387  00D666  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40388  00D668  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40389  00D66A  0103               	movlb	3	; () banked
 40390  00D66C  6FC8               	movwf	(_ToSendDataBuffer+36)& (0+255),b
 40391                           
 40392                           ; BSR set to: 3
 40393                           ;app_device_custom_hid.c: 321: ToSendDataBuffer[37] = (uint8_t) os.input_current_adc[(os
      +                          .timeSlot&0b00110000) >>4];
 40394  00D66E  0102               	movlb	2	; () banked
 40395  00D670  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40396  00D672  0B0F               	andlw	15
 40397  00D674  0B03               	andlw	3
 40398  00D676  0100               	movlb	0	; () banked
 40399  00D678  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40400  00D67A  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40401  00D67C  90D8               	bcf	status,0,c
 40402  00D67E  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40403  00D680  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40404  00D682  0E14               	movlw	low (_os+20)
 40405  00D684  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40406  00D686  6ED9               	movwf	fsr2l,c
 40407  00D688  0E02               	movlw	high (_os+20)
 40408  00D68A  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40409  00D68C  6EDA               	movwf	fsr2h,c
 40410  00D68E  50DF               	movf	indf2,w,c
 40411  00D690  0103               	movlb	3	; () banked
 40412  00D692  6FC9               	movwf	(_ToSendDataBuffer+37)& (0+255),b
 40413                           
 40414                           ; BSR set to: 3
 40415                           ;app_device_custom_hid.c: 322: ToSendDataBuffer[38] = os.input_current_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 40416  00D694  0102               	movlb	2	; () banked
 40417  00D696  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40418  00D698  0B0F               	andlw	15
 40419  00D69A  0B03               	andlw	3
 40420  00D69C  0100               	movlb	0	; () banked
 40421  00D69E  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40422  00D6A0  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40423  00D6A2  90D8               	bcf	status,0,c
 40424  00D6A4  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40425  00D6A6  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40426  00D6A8  0E14               	movlw	low (_os+20)
 40427  00D6AA  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40428  00D6AC  6ED9               	movwf	fsr2l,c
 40429  00D6AE  0E02               	movlw	high (_os+20)
 40430  00D6B0  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40431  00D6B2  6EDA               	movwf	fsr2h,c
 40432  00D6B4  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40433  00D6B8  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40434  00D6BC  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40435  00D6C0  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40436  00D6C2  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40437  00D6C4  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40438  00D6C6  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40439  00D6C8  0103               	movlb	3	; () banked
 40440  00D6CA  6FCA               	movwf	(_ToSendDataBuffer+38)& (0+255),b
 40441                           
 40442                           ; BSR set to: 3
 40443                           ;app_device_custom_hid.c: 323: ToSendDataBuffer[39] = (uint8_t) os.output_current_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 40444  00D6CC  0102               	movlb	2	; () banked
 40445  00D6CE  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40446  00D6D0  0B0F               	andlw	15
 40447  00D6D2  0B03               	andlw	3
 40448  00D6D4  0100               	movlb	0	; () banked
 40449  00D6D6  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40450  00D6D8  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40451  00D6DA  90D8               	bcf	status,0,c
 40452  00D6DC  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40453  00D6DE  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40454  00D6E0  0E29               	movlw	low (_os+41)
 40455  00D6E2  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40456  00D6E4  6ED9               	movwf	fsr2l,c
 40457  00D6E6  0E02               	movlw	high (_os+41)
 40458  00D6E8  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40459  00D6EA  6EDA               	movwf	fsr2h,c
 40460  00D6EC  50DF               	movf	indf2,w,c
 40461  00D6EE  0103               	movlb	3	; () banked
 40462  00D6F0  6FCB               	movwf	(_ToSendDataBuffer+39)& (0+255),b
 40463                           
 40464                           ; BSR set to: 3
 40465                           ;app_device_custom_hid.c: 324: ToSendDataBuffer[40] = os.output_current_adc[(os.timeSlot
      +                          &0b00110000)>>4]>> 8;
 40466  00D6F2  0102               	movlb	2	; () banked
 40467  00D6F4  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 40468  00D6F6  0B0F               	andlw	15
 40469  00D6F8  0B03               	andlw	3
 40470  00D6FA  0100               	movlb	0	; () banked
 40471  00D6FC  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 40472  00D6FE  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 40473  00D700  90D8               	bcf	status,0,c
 40474  00D702  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 40475  00D704  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 40476  00D706  0E29               	movlw	low (_os+41)
 40477  00D708  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 40478  00D70A  6ED9               	movwf	fsr2l,c
 40479  00D70C  0E02               	movlw	high (_os+41)
 40480  00D70E  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 40481  00D710  6EDA               	movwf	fsr2h,c
 40482  00D712  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 40483  00D716  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 40484  00D71A  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 40485  00D71E  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 40486  00D720  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 40487  00D722  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 40488  00D724  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 40489  00D726  0103               	movlb	3	; () banked
 40490  00D728  6FCC               	movwf	(_ToSendDataBuffer+40)& (0+255),b
 40491                           
 40492                           ; BSR set to: 3
 40493                           ;app_device_custom_hid.c: 326: ToSendDataBuffer[41] = ui_get_status();
 40494  00D72A  EC69  F09F         	call	_ui_get_status	;wreg free
 40495  00D72E  0103               	movlb	3	; () banked
 40496  00D730  6FCD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 40497                           
 40498                           ; BSR set to: 3
 40499                           ;app_device_custom_hid.c: 327: ToSendDataBuffer[42] = os.timeSlot;
 40500  00D732  C208  F3CE         	movff	_os+8,_ToSendDataBuffer+42	;volatile
 40501                           
 40502                           ; BSR set to: 3
 40503  00D736  0012               	return		;funcret
 40504  00D738                     __end_of__fill_buffer_get_status:
 40505                           	opt stack 0
 40506                           tosu	equ	0xFFF
 40507                           tosh	equ	0xFFE
 40508                           tosl	equ	0xFFD
 40509                           pclath	equ	0xFFA
 40510                           tblptru	equ	0xFF8
 40511                           tblptrh	equ	0xFF7
 40512                           tblptrl	equ	0xFF6
 40513                           tablat	equ	0xFF5
 40514                           prodh	equ	0xFF4
 40515                           prodl	equ	0xFF3
 40516                           intcon	equ	0xFF2
 40517                           intcon2	equ	0xFF1
 40518                           intcon3	equ	0xFF0
 40519                           postinc0	equ	0xFEE
 40520                           wreg	equ	0xFE8
 40521                           indf1	equ	0xFE7
 40522                           postinc1	equ	0xFE6
 40523                           postdec1	equ	0xFE5
 40524                           plusw1	equ	0xFE3
 40525                           fsr1h	equ	0xFE2
 40526                           fsr1l	equ	0xFE1
 40527                           indf2	equ	0xFDF
 40528                           postinc2	equ	0xFDE
 40529                           postdec2	equ	0xFDD
 40530                           plusw2	equ	0xFDB
 40531                           fsr2h	equ	0xFDA
 40532                           fsr2l	equ	0xFD9
 40533                           status	equ	0xFD8
 40534                           
 40535 ;; *************** function _ui_get_status *****************
 40536 ;; Defined at:
 40537 ;;		line 12 in file "ui.c"
 40538 ;; Parameters:    Size  Location     Type
 40539 ;;		None
 40540 ;; Auto vars:     Size  Location     Type
 40541 ;;		None
 40542 ;; Return value:  Size  Location     Type
 40543 ;;                  1    wreg      enum E8011
 40544 ;; Registers used:
 40545 ;;		wreg, status,2
 40546 ;; Tracked objects:
 40547 ;;		On entry : 0/0
 40548 ;;		On exit  : 0/0
 40549 ;;		Unchanged: 0/0
 40550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40555 ;;Total ram usage:        0 bytes
 40556 ;; Hardware stack levels used:    1
 40557 ;; Hardware stack levels required when called:   10
 40558 ;; This function calls:
 40559 ;;		Nothing
 40560 ;; This function is called by:
 40561 ;;		_main
 40562 ;;		__fill_buffer_get_status
 40563 ;; This function uses a non-reentrant model
 40564 ;;
 40565                           
 40566                           	psect	text195
 40567  013ED2                     __ptext195:
 40568                           	opt stack 0
 40569  013ED2                     _ui_get_status:
 40570                           	opt stack 20
 40571                           
 40572                           ;ui.c: 14: return userInterfaceStatus;
 40573                           
 40574                           ; BSR set to: 3
 40575                           ;incstack = 0
 40576  013ED2  0101               	movlb	1	; () banked
 40577  013ED4  51F3               	movf	_userInterfaceStatus& (0+255),w,b
 40578  013ED6  0012               	return	
 40579  013ED8                     __end_of_ui_get_status:
 40580                           	opt stack 0
 40581                           tosu	equ	0xFFF
 40582                           tosh	equ	0xFFE
 40583                           tosl	equ	0xFFD
 40584                           pclath	equ	0xFFA
 40585                           tblptru	equ	0xFF8
 40586                           tblptrh	equ	0xFF7
 40587                           tblptrl	equ	0xFF6
 40588                           tablat	equ	0xFF5
 40589                           prodh	equ	0xFF4
 40590                           prodl	equ	0xFF3
 40591                           intcon	equ	0xFF2
 40592                           intcon2	equ	0xFF1
 40593                           intcon3	equ	0xFF0
 40594                           postinc0	equ	0xFEE
 40595                           wreg	equ	0xFE8
 40596                           indf1	equ	0xFE7
 40597                           postinc1	equ	0xFE6
 40598                           postdec1	equ	0xFE5
 40599                           plusw1	equ	0xFE3
 40600                           fsr1h	equ	0xFE2
 40601                           fsr1l	equ	0xFE1
 40602                           indf2	equ	0xFDF
 40603                           postinc2	equ	0xFDE
 40604                           postdec2	equ	0xFDD
 40605                           plusw2	equ	0xFDB
 40606                           fsr2h	equ	0xFDA
 40607                           fsr2l	equ	0xFD9
 40608                           status	equ	0xFD8
 40609                           
 40610 ;; *************** function _rtcc_get_year *****************
 40611 ;; Defined at:
 40612 ;;		line 127 in file "rtcc.c"
 40613 ;; Parameters:    Size  Location     Type
 40614 ;;		None
 40615 ;; Auto vars:     Size  Location     Type
 40616 ;;		None
 40617 ;; Return value:  Size  Location     Type
 40618 ;;                  1    wreg      unsigned char 
 40619 ;; Registers used:
 40620 ;;		wreg, status,2
 40621 ;; Tracked objects:
 40622 ;;		On entry : 0/0
 40623 ;;		On exit  : 0/0
 40624 ;;		Unchanged: 0/0
 40625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40630 ;;Total ram usage:        0 bytes
 40631 ;; Hardware stack levels used:    1
 40632 ;; Hardware stack levels required when called:   10
 40633 ;; This function calls:
 40634 ;;		Nothing
 40635 ;; This function is called by:
 40636 ;;		__fill_buffer_get_status
 40637 ;;		__display_time
 40638 ;;		__number_of_days
 40639 ;;		_rtcc_get_year_decimal
 40640 ;;		_rtcc_increment_year
 40641 ;;		_rtcc_decrement_year
 40642 ;;		_rtcc_write_eeprom
 40643 ;; This function uses a non-reentrant model
 40644 ;;
 40645                           
 40646                           	psect	text196
 40647  013E08                     __ptext196:
 40648                           	opt stack 0
 40649  013E08                     _rtcc_get_year:
 40650                           	opt stack 17
 40651                           
 40652                           ;rtcc.c: 129: RTCCFGbits.RTCPTR1 = 1;
 40653                           
 40654                           ; BSR set to: 1
 40655                           ;incstack = 0
 40656  013E08  010F               	movlb	15	; () banked
 40657  013E0A  833F               	bsf	63,1,b	;volatile
 40658                           
 40659                           ;rtcc.c: 130: RTCCFGbits.RTCPTR0 = 1;
 40660  013E0C  813F               	bsf	63,0,b	;volatile
 40661  013E0E                     
 40662                           ; BSR set to: 15
 40663                           
 40664                           ; BSR set to: 15
 40665  013E0E  B93F               	btfsc	63,4,b	;volatile
 40666  013E10  D7FE               	goto	l2289
 40667                           
 40668                           ; BSR set to: 15
 40669                           ;rtcc.c: 132: return RTCVALL;
 40670                           
 40671                           ; BSR set to: 15
 40672  013E12  513A               	movf	58,w,b	;volatile
 40673  013E14  0012               	return	
 40674  013E16                     __end_of_rtcc_get_year:
 40675                           	opt stack 0
 40676                           tosu	equ	0xFFF
 40677                           tosh	equ	0xFFE
 40678                           tosl	equ	0xFFD
 40679                           pclath	equ	0xFFA
 40680                           tblptru	equ	0xFF8
 40681                           tblptrh	equ	0xFF7
 40682                           tblptrl	equ	0xFF6
 40683                           tablat	equ	0xFF5
 40684                           prodh	equ	0xFF4
 40685                           prodl	equ	0xFF3
 40686                           intcon	equ	0xFF2
 40687                           intcon2	equ	0xFF1
 40688                           intcon3	equ	0xFF0
 40689                           postinc0	equ	0xFEE
 40690                           wreg	equ	0xFE8
 40691                           indf1	equ	0xFE7
 40692                           postinc1	equ	0xFE6
 40693                           postdec1	equ	0xFE5
 40694                           plusw1	equ	0xFE3
 40695                           fsr1h	equ	0xFE2
 40696                           fsr1l	equ	0xFE1
 40697                           indf2	equ	0xFDF
 40698                           postinc2	equ	0xFDE
 40699                           postdec2	equ	0xFDD
 40700                           plusw2	equ	0xFDB
 40701                           fsr2h	equ	0xFDA
 40702                           fsr2l	equ	0xFD9
 40703                           status	equ	0xFD8
 40704                           
 40705 ;; *************** function _rtcc_get_seconds *****************
 40706 ;; Defined at:
 40707 ;;		line 317 in file "rtcc.c"
 40708 ;; Parameters:    Size  Location     Type
 40709 ;;		None
 40710 ;; Auto vars:     Size  Location     Type
 40711 ;;		None
 40712 ;; Return value:  Size  Location     Type
 40713 ;;                  1    wreg      unsigned char 
 40714 ;; Registers used:
 40715 ;;		wreg, status,2
 40716 ;; Tracked objects:
 40717 ;;		On entry : 0/0
 40718 ;;		On exit  : 0/0
 40719 ;;		Unchanged: 0/0
 40720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40725 ;;Total ram usage:        0 bytes
 40726 ;; Hardware stack levels used:    1
 40727 ;; Hardware stack levels required when called:   10
 40728 ;; This function calls:
 40729 ;;		Nothing
 40730 ;; This function is called by:
 40731 ;;		__fill_buffer_get_status
 40732 ;;		__display_time
 40733 ;;		_rtcc_get_seconds_decimal
 40734 ;;		_rtcc_increment_seconds
 40735 ;;		_rtcc_decrement_seconds
 40736 ;;		_rtcc_write_eeprom
 40737 ;; This function uses a non-reentrant model
 40738 ;;
 40739                           
 40740                           	psect	text197
 40741  013E16                     __ptext197:
 40742                           	opt stack 0
 40743  013E16                     _rtcc_get_seconds:
 40744                           	opt stack 17
 40745                           
 40746                           ;rtcc.c: 319: RTCCFGbits.RTCPTR1 = 0;
 40747                           
 40748                           ; BSR set to: 15
 40749                           ;incstack = 0
 40750  013E16  010F               	movlb	15	; () banked
 40751  013E18  933F               	bcf	63,1,b	;volatile
 40752                           
 40753                           ;rtcc.c: 320: RTCCFGbits.RTCPTR0 = 0;
 40754  013E1A  913F               	bcf	63,0,b	;volatile
 40755  013E1C                     
 40756                           ; BSR set to: 15
 40757                           
 40758                           ; BSR set to: 15
 40759  013E1C  B93F               	btfsc	63,4,b	;volatile
 40760  013E1E  D7FE               	goto	l2379
 40761                           
 40762                           ; BSR set to: 15
 40763                           ;rtcc.c: 322: return RTCVALL;
 40764                           
 40765                           ; BSR set to: 15
 40766  013E20  513A               	movf	58,w,b	;volatile
 40767  013E22  0012               	return	
 40768  013E24                     __end_of_rtcc_get_seconds:
 40769                           	opt stack 0
 40770                           tosu	equ	0xFFF
 40771                           tosh	equ	0xFFE
 40772                           tosl	equ	0xFFD
 40773                           pclath	equ	0xFFA
 40774                           tblptru	equ	0xFF8
 40775                           tblptrh	equ	0xFF7
 40776                           tblptrl	equ	0xFF6
 40777                           tablat	equ	0xFF5
 40778                           prodh	equ	0xFF4
 40779                           prodl	equ	0xFF3
 40780                           intcon	equ	0xFF2
 40781                           intcon2	equ	0xFF1
 40782                           intcon3	equ	0xFF0
 40783                           postinc0	equ	0xFEE
 40784                           wreg	equ	0xFE8
 40785                           indf1	equ	0xFE7
 40786                           postinc1	equ	0xFE6
 40787                           postdec1	equ	0xFE5
 40788                           plusw1	equ	0xFE3
 40789                           fsr1h	equ	0xFE2
 40790                           fsr1l	equ	0xFE1
 40791                           indf2	equ	0xFDF
 40792                           postinc2	equ	0xFDE
 40793                           postdec2	equ	0xFDD
 40794                           plusw2	equ	0xFDB
 40795                           fsr2h	equ	0xFDA
 40796                           fsr2l	equ	0xFD9
 40797                           status	equ	0xFD8
 40798                           
 40799 ;; *************** function _rtcc_get_month *****************
 40800 ;; Defined at:
 40801 ;;		line 165 in file "rtcc.c"
 40802 ;; Parameters:    Size  Location     Type
 40803 ;;		None
 40804 ;; Auto vars:     Size  Location     Type
 40805 ;;		None
 40806 ;; Return value:  Size  Location     Type
 40807 ;;                  1    wreg      unsigned char 
 40808 ;; Registers used:
 40809 ;;		wreg, status,2
 40810 ;; Tracked objects:
 40811 ;;		On entry : 0/0
 40812 ;;		On exit  : 0/0
 40813 ;;		Unchanged: 0/0
 40814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40819 ;;Total ram usage:        0 bytes
 40820 ;; Hardware stack levels used:    1
 40821 ;; Hardware stack levels required when called:   10
 40822 ;; This function calls:
 40823 ;;		Nothing
 40824 ;; This function is called by:
 40825 ;;		__fill_buffer_get_status
 40826 ;;		__display_time
 40827 ;;		__number_of_days
 40828 ;;		_rtcc_get_month_decimal
 40829 ;;		_rtcc_increment_month
 40830 ;;		_rtcc_decrement_month
 40831 ;;		_rtcc_write_eeprom
 40832 ;; This function uses a non-reentrant model
 40833 ;;
 40834                           
 40835                           	psect	text198
 40836  013E24                     __ptext198:
 40837                           	opt stack 0
 40838  013E24                     _rtcc_get_month:
 40839                           	opt stack 17
 40840                           
 40841                           ;rtcc.c: 167: RTCCFGbits.RTCPTR1 = 1;
 40842                           
 40843                           ; BSR set to: 15
 40844                           ;incstack = 0
 40845  013E24  010F               	movlb	15	; () banked
 40846  013E26  833F               	bsf	63,1,b	;volatile
 40847                           
 40848                           ;rtcc.c: 168: RTCCFGbits.RTCPTR0 = 0;
 40849  013E28  913F               	bcf	63,0,b	;volatile
 40850  013E2A                     
 40851                           ; BSR set to: 15
 40852                           
 40853                           ; BSR set to: 15
 40854  013E2A  B93F               	btfsc	63,4,b	;volatile
 40855  013E2C  D7FE               	goto	l2307
 40856                           
 40857                           ; BSR set to: 15
 40858                           ;rtcc.c: 170: return RTCVALH;
 40859                           
 40860                           ; BSR set to: 15
 40861  013E2E  513B               	movf	59,w,b	;volatile
 40862  013E30  0012               	return	
 40863  013E32                     __end_of_rtcc_get_month:
 40864                           	opt stack 0
 40865                           tosu	equ	0xFFF
 40866                           tosh	equ	0xFFE
 40867                           tosl	equ	0xFFD
 40868                           pclath	equ	0xFFA
 40869                           tblptru	equ	0xFF8
 40870                           tblptrh	equ	0xFF7
 40871                           tblptrl	equ	0xFF6
 40872                           tablat	equ	0xFF5
 40873                           prodh	equ	0xFF4
 40874                           prodl	equ	0xFF3
 40875                           intcon	equ	0xFF2
 40876                           intcon2	equ	0xFF1
 40877                           intcon3	equ	0xFF0
 40878                           postinc0	equ	0xFEE
 40879                           wreg	equ	0xFE8
 40880                           indf1	equ	0xFE7
 40881                           postinc1	equ	0xFE6
 40882                           postdec1	equ	0xFE5
 40883                           plusw1	equ	0xFE3
 40884                           fsr1h	equ	0xFE2
 40885                           fsr1l	equ	0xFE1
 40886                           indf2	equ	0xFDF
 40887                           postinc2	equ	0xFDE
 40888                           postdec2	equ	0xFDD
 40889                           plusw2	equ	0xFDB
 40890                           fsr2h	equ	0xFDA
 40891                           fsr2l	equ	0xFD9
 40892                           status	equ	0xFD8
 40893                           
 40894 ;; *************** function _rtcc_get_minutes *****************
 40895 ;; Defined at:
 40896 ;;		line 279 in file "rtcc.c"
 40897 ;; Parameters:    Size  Location     Type
 40898 ;;		None
 40899 ;; Auto vars:     Size  Location     Type
 40900 ;;		None
 40901 ;; Return value:  Size  Location     Type
 40902 ;;                  1    wreg      unsigned char 
 40903 ;; Registers used:
 40904 ;;		wreg, status,2
 40905 ;; Tracked objects:
 40906 ;;		On entry : 0/0
 40907 ;;		On exit  : 0/0
 40908 ;;		Unchanged: 0/0
 40909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40914 ;;Total ram usage:        0 bytes
 40915 ;; Hardware stack levels used:    1
 40916 ;; Hardware stack levels required when called:   10
 40917 ;; This function calls:
 40918 ;;		Nothing
 40919 ;; This function is called by:
 40920 ;;		__fill_buffer_get_status
 40921 ;;		__display_time
 40922 ;;		_rtcc_get_minutes_decimal
 40923 ;;		_rtcc_increment_minutes
 40924 ;;		_rtcc_decrement_minutes
 40925 ;;		_rtcc_write_eeprom
 40926 ;; This function uses a non-reentrant model
 40927 ;;
 40928                           
 40929                           	psect	text199
 40930  013E32                     __ptext199:
 40931                           	opt stack 0
 40932  013E32                     _rtcc_get_minutes:
 40933                           	opt stack 17
 40934                           
 40935                           ;rtcc.c: 281: RTCCFGbits.RTCPTR1 = 0;
 40936                           
 40937                           ; BSR set to: 15
 40938                           ;incstack = 0
 40939  013E32  010F               	movlb	15	; () banked
 40940  013E34  933F               	bcf	63,1,b	;volatile
 40941                           
 40942                           ;rtcc.c: 282: RTCCFGbits.RTCPTR0 = 0;
 40943  013E36  913F               	bcf	63,0,b	;volatile
 40944  013E38                     
 40945                           ; BSR set to: 15
 40946                           
 40947                           ; BSR set to: 15
 40948  013E38  B93F               	btfsc	63,4,b	;volatile
 40949  013E3A  D7FE               	goto	l2361
 40950                           
 40951                           ; BSR set to: 15
 40952                           ;rtcc.c: 284: return RTCVALH;
 40953                           
 40954                           ; BSR set to: 15
 40955  013E3C  513B               	movf	59,w,b	;volatile
 40956  013E3E  0012               	return	
 40957  013E40                     __end_of_rtcc_get_minutes:
 40958                           	opt stack 0
 40959                           tosu	equ	0xFFF
 40960                           tosh	equ	0xFFE
 40961                           tosl	equ	0xFFD
 40962                           pclath	equ	0xFFA
 40963                           tblptru	equ	0xFF8
 40964                           tblptrh	equ	0xFF7
 40965                           tblptrl	equ	0xFF6
 40966                           tablat	equ	0xFF5
 40967                           prodh	equ	0xFF4
 40968                           prodl	equ	0xFF3
 40969                           intcon	equ	0xFF2
 40970                           intcon2	equ	0xFF1
 40971                           intcon3	equ	0xFF0
 40972                           postinc0	equ	0xFEE
 40973                           wreg	equ	0xFE8
 40974                           indf1	equ	0xFE7
 40975                           postinc1	equ	0xFE6
 40976                           postdec1	equ	0xFE5
 40977                           plusw1	equ	0xFE3
 40978                           fsr1h	equ	0xFE2
 40979                           fsr1l	equ	0xFE1
 40980                           indf2	equ	0xFDF
 40981                           postinc2	equ	0xFDE
 40982                           postdec2	equ	0xFDD
 40983                           plusw2	equ	0xFDB
 40984                           fsr2h	equ	0xFDA
 40985                           fsr2l	equ	0xFD9
 40986                           status	equ	0xFD8
 40987                           
 40988 ;; *************** function _rtcc_get_hours *****************
 40989 ;; Defined at:
 40990 ;;		line 241 in file "rtcc.c"
 40991 ;; Parameters:    Size  Location     Type
 40992 ;;		None
 40993 ;; Auto vars:     Size  Location     Type
 40994 ;;		None
 40995 ;; Return value:  Size  Location     Type
 40996 ;;                  1    wreg      unsigned char 
 40997 ;; Registers used:
 40998 ;;		wreg, status,2
 40999 ;; Tracked objects:
 41000 ;;		On entry : 0/0
 41001 ;;		On exit  : 0/0
 41002 ;;		Unchanged: 0/0
 41003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41008 ;;Total ram usage:        0 bytes
 41009 ;; Hardware stack levels used:    1
 41010 ;; Hardware stack levels required when called:   10
 41011 ;; This function calls:
 41012 ;;		Nothing
 41013 ;; This function is called by:
 41014 ;;		__fill_buffer_get_status
 41015 ;;		__display_time
 41016 ;;		_rtcc_get_hours_decimal
 41017 ;;		_rtcc_increment_hours
 41018 ;;		_rtcc_decrement_hours
 41019 ;;		_rtcc_write_eeprom
 41020 ;; This function uses a non-reentrant model
 41021 ;;
 41022                           
 41023                           	psect	text200
 41024  013E40                     __ptext200:
 41025                           	opt stack 0
 41026  013E40                     _rtcc_get_hours:
 41027                           	opt stack 17
 41028                           
 41029                           ;rtcc.c: 243: RTCCFGbits.RTCPTR1 = 0;
 41030                           
 41031                           ; BSR set to: 15
 41032                           ;incstack = 0
 41033  013E40  010F               	movlb	15	; () banked
 41034  013E42  933F               	bcf	63,1,b	;volatile
 41035                           
 41036                           ;rtcc.c: 244: RTCCFGbits.RTCPTR0 = 1;
 41037  013E44  813F               	bsf	63,0,b	;volatile
 41038  013E46                     
 41039                           ; BSR set to: 15
 41040                           
 41041                           ; BSR set to: 15
 41042  013E46  B93F               	btfsc	63,4,b	;volatile
 41043  013E48  D7FE               	goto	l2343
 41044                           
 41045                           ; BSR set to: 15
 41046                           ;rtcc.c: 246: return RTCVALL;
 41047                           
 41048                           ; BSR set to: 15
 41049  013E4A  513A               	movf	58,w,b	;volatile
 41050  013E4C  0012               	return	
 41051  013E4E                     __end_of_rtcc_get_hours:
 41052                           	opt stack 0
 41053                           tosu	equ	0xFFF
 41054                           tosh	equ	0xFFE
 41055                           tosl	equ	0xFFD
 41056                           pclath	equ	0xFFA
 41057                           tblptru	equ	0xFF8
 41058                           tblptrh	equ	0xFF7
 41059                           tblptrl	equ	0xFF6
 41060                           tablat	equ	0xFF5
 41061                           prodh	equ	0xFF4
 41062                           prodl	equ	0xFF3
 41063                           intcon	equ	0xFF2
 41064                           intcon2	equ	0xFF1
 41065                           intcon3	equ	0xFF0
 41066                           postinc0	equ	0xFEE
 41067                           wreg	equ	0xFE8
 41068                           indf1	equ	0xFE7
 41069                           postinc1	equ	0xFE6
 41070                           postdec1	equ	0xFE5
 41071                           plusw1	equ	0xFE3
 41072                           fsr1h	equ	0xFE2
 41073                           fsr1l	equ	0xFE1
 41074                           indf2	equ	0xFDF
 41075                           postinc2	equ	0xFDE
 41076                           postdec2	equ	0xFDD
 41077                           plusw2	equ	0xFDB
 41078                           fsr2h	equ	0xFDA
 41079                           fsr2l	equ	0xFD9
 41080                           status	equ	0xFD8
 41081                           
 41082 ;; *************** function _rtcc_get_day *****************
 41083 ;; Defined at:
 41084 ;;		line 203 in file "rtcc.c"
 41085 ;; Parameters:    Size  Location     Type
 41086 ;;		None
 41087 ;; Auto vars:     Size  Location     Type
 41088 ;;		None
 41089 ;; Return value:  Size  Location     Type
 41090 ;;                  1    wreg      unsigned char 
 41091 ;; Registers used:
 41092 ;;		wreg, status,2
 41093 ;; Tracked objects:
 41094 ;;		On entry : 0/0
 41095 ;;		On exit  : 0/0
 41096 ;;		Unchanged: 0/0
 41097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41102 ;;Total ram usage:        0 bytes
 41103 ;; Hardware stack levels used:    1
 41104 ;; Hardware stack levels required when called:   10
 41105 ;; This function calls:
 41106 ;;		Nothing
 41107 ;; This function is called by:
 41108 ;;		__fill_buffer_get_status
 41109 ;;		__display_time
 41110 ;;		_rtcc_correct_day
 41111 ;;		_rtcc_get_day_decimal
 41112 ;;		_rtcc_increment_day
 41113 ;;		_rtcc_decrement_day
 41114 ;;		_rtcc_read_eeprom
 41115 ;;		_rtcc_write_eeprom
 41116 ;; This function uses a non-reentrant model
 41117 ;;
 41118                           
 41119                           	psect	text201
 41120  013E4E                     __ptext201:
 41121                           	opt stack 0
 41122  013E4E                     _rtcc_get_day:
 41123                           	opt stack 17
 41124                           
 41125                           ;rtcc.c: 205: RTCCFGbits.RTCPTR1 = 1;
 41126                           
 41127                           ; BSR set to: 15
 41128                           ;incstack = 0
 41129  013E4E  010F               	movlb	15	; () banked
 41130  013E50  833F               	bsf	63,1,b	;volatile
 41131                           
 41132                           ;rtcc.c: 206: RTCCFGbits.RTCPTR0 = 0;
 41133  013E52  913F               	bcf	63,0,b	;volatile
 41134  013E54                     
 41135                           ; BSR set to: 15
 41136                           
 41137                           ; BSR set to: 15
 41138  013E54  B93F               	btfsc	63,4,b	;volatile
 41139  013E56  D7FE               	goto	l2325
 41140                           
 41141                           ; BSR set to: 15
 41142                           ;rtcc.c: 208: return RTCVALL;
 41143                           
 41144                           ; BSR set to: 15
 41145  013E58  513A               	movf	58,w,b	;volatile
 41146  013E5A  0012               	return	
 41147  013E5C                     __end_of_rtcc_get_day:
 41148                           	opt stack 0
 41149                           tosu	equ	0xFFF
 41150                           tosh	equ	0xFFE
 41151                           tosl	equ	0xFFD
 41152                           pclath	equ	0xFFA
 41153                           tblptru	equ	0xFF8
 41154                           tblptrh	equ	0xFF7
 41155                           tblptrl	equ	0xFF6
 41156                           tablat	equ	0xFF5
 41157                           prodh	equ	0xFF4
 41158                           prodl	equ	0xFF3
 41159                           intcon	equ	0xFF2
 41160                           intcon2	equ	0xFF1
 41161                           intcon3	equ	0xFF0
 41162                           postinc0	equ	0xFEE
 41163                           wreg	equ	0xFE8
 41164                           indf1	equ	0xFE7
 41165                           postinc1	equ	0xFE6
 41166                           postdec1	equ	0xFE5
 41167                           plusw1	equ	0xFE3
 41168                           fsr1h	equ	0xFE2
 41169                           fsr1l	equ	0xFE1
 41170                           indf2	equ	0xFDF
 41171                           postinc2	equ	0xFDE
 41172                           postdec2	equ	0xFDD
 41173                           plusw2	equ	0xFDB
 41174                           fsr2h	equ	0xFDA
 41175                           fsr2l	equ	0xFD9
 41176                           status	equ	0xFD8
 41177                           
 41178 ;; *************** function _buck_remote_get_status *****************
 41179 ;; Defined at:
 41180 ;;		line 650 in file "buck.c"
 41181 ;; Parameters:    Size  Location     Type
 41182 ;;		None
 41183 ;; Auto vars:     Size  Location     Type
 41184 ;;  retval          1    0[BANK0 ] unsigned char 
 41185 ;; Return value:  Size  Location     Type
 41186 ;;                  1    wreg      unsigned char 
 41187 ;; Registers used:
 41188 ;;		wreg, status,2, status,0
 41189 ;; Tracked objects:
 41190 ;;		On entry : 0/0
 41191 ;;		On exit  : 0/0
 41192 ;;		Unchanged: 0/0
 41193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41198 ;;Total ram usage:        1 bytes
 41199 ;; Hardware stack levels used:    1
 41200 ;; Hardware stack levels required when called:   10
 41201 ;; This function calls:
 41202 ;;		Nothing
 41203 ;; This function is called by:
 41204 ;;		__fill_buffer_get_status
 41205 ;; This function uses a non-reentrant model
 41206 ;;
 41207                           
 41208                           	psect	text202
 41209  013872                     __ptext202:
 41210                           	opt stack 0
 41211  013872                     _buck_remote_get_status:
 41212                           	opt stack 18
 41213                           
 41214                           ;buck.c: 652: uint8_t retval = 0x00;
 41215                           
 41216                           ; BSR set to: 15
 41217                           ;incstack = 0
 41218  013872  0E00               	movlw	0
 41219  013874  0100               	movlb	0	; () banked
 41220  013876  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 41221                           
 41222                           ;buck.c: 653: if(buck_remote_enable)
 41223  013878  0101               	movlb	1	; () banked
 41224  01387A  51F1               	movf	_buck_remote_enable& (0+255),w,b
 41225  01387C  B4D8               	btfsc	status,2,c
 41226  01387E  D002               	goto	l2649
 41227                           
 41228                           ; BSR set to: 1
 41229                           ;buck.c: 654: retval |= 0x01;
 41230  013880  0100               	movlb	0	; () banked
 41231  013882  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 41232  013884                     l2649:
 41233                           
 41234                           ;buck.c: 655: if(buck_remote_on)
 41235                           
 41236                           ; BSR set to: 0
 41237  013884  0100               	movlb	0	; () banked
 41238  013886  51E3               	movf	_buck_remote_on& (0+255),w,b
 41239  013888  A4D8               	btfss	status,2,c
 41240                           
 41241                           ; BSR set to: 0
 41242                           ;buck.c: 656: retval |= 0x02;
 41243  01388A  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 41244                           
 41245                           ; BSR set to: 0
 41246                           ;buck.c: 657: if(buck_remote_synchronous)
 41247                           
 41248                           ; BSR set to: 0
 41249  01388C  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 41250  01388E  B4D8               	btfsc	status,2,c
 41251  013890  D002               	goto	l2651
 41252                           
 41253                           ; BSR set to: 0
 41254                           ;buck.c: 658: retval |= 0x03;
 41255  013892  0E03               	movlw	3
 41256  013894  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 41257  013896                     l2651:
 41258                           
 41259                           ; BSR set to: 0
 41260                           ;buck.c: 659: return retval;
 41261                           
 41262                           ; BSR set to: 0
 41263  013896  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 41264  013898  0012               	return	
 41265  01389A                     __end_of_buck_remote_get_status:
 41266                           	opt stack 0
 41267                           tosu	equ	0xFFF
 41268                           tosh	equ	0xFFE
 41269                           tosl	equ	0xFFD
 41270                           pclath	equ	0xFFA
 41271                           tblptru	equ	0xFF8
 41272                           tblptrh	equ	0xFF7
 41273                           tblptrl	equ	0xFF6
 41274                           tablat	equ	0xFF5
 41275                           prodh	equ	0xFF4
 41276                           prodl	equ	0xFF3
 41277                           intcon	equ	0xFF2
 41278                           intcon2	equ	0xFF1
 41279                           intcon3	equ	0xFF0
 41280                           postinc0	equ	0xFEE
 41281                           wreg	equ	0xFE8
 41282                           indf1	equ	0xFE7
 41283                           postinc1	equ	0xFE6
 41284                           postdec1	equ	0xFE5
 41285                           plusw1	equ	0xFE3
 41286                           fsr1h	equ	0xFE2
 41287                           fsr1l	equ	0xFE1
 41288                           indf2	equ	0xFDF
 41289                           postinc2	equ	0xFDE
 41290                           postdec2	equ	0xFDD
 41291                           plusw2	equ	0xFDB
 41292                           fsr2h	equ	0xFDA
 41293                           fsr2l	equ	0xFD9
 41294                           status	equ	0xFD8
 41295                           
 41296 ;; *************** function _buck_remote_get_dutycycle *****************
 41297 ;; Defined at:
 41298 ;;		line 662 in file "buck.c"
 41299 ;; Parameters:    Size  Location     Type
 41300 ;;		None
 41301 ;; Auto vars:     Size  Location     Type
 41302 ;;		None
 41303 ;; Return value:  Size  Location     Type
 41304 ;;                  1    wreg      unsigned char 
 41305 ;; Registers used:
 41306 ;;		wreg, status,2
 41307 ;; Tracked objects:
 41308 ;;		On entry : 0/0
 41309 ;;		On exit  : 0/0
 41310 ;;		Unchanged: 0/0
 41311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41316 ;;Total ram usage:        0 bytes
 41317 ;; Hardware stack levels used:    1
 41318 ;; Hardware stack levels required when called:   10
 41319 ;; This function calls:
 41320 ;;		Nothing
 41321 ;; This function is called by:
 41322 ;;		__fill_buffer_get_status
 41323 ;; This function uses a non-reentrant model
 41324 ;;
 41325                           
 41326                           	psect	text203
 41327  013ED8                     __ptext203:
 41328                           	opt stack 0
 41329  013ED8                     _buck_remote_get_dutycycle:
 41330                           	opt stack 18
 41331                           
 41332                           ;buck.c: 664: return buck_remote_dutycycle;
 41333                           
 41334                           ; BSR set to: 0
 41335                           ;incstack = 0
 41336  013ED8  0100               	movlb	0	; () banked
 41337  013EDA  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 41338  013EDC  0012               	return	
 41339  013EDE                     __end_of_buck_remote_get_dutycycle:
 41340                           	opt stack 0
 41341                           tosu	equ	0xFFF
 41342                           tosh	equ	0xFFE
 41343                           tosl	equ	0xFFD
 41344                           pclath	equ	0xFFA
 41345                           tblptru	equ	0xFF8
 41346                           tblptrh	equ	0xFF7
 41347                           tblptrl	equ	0xFF6
 41348                           tablat	equ	0xFF5
 41349                           prodh	equ	0xFF4
 41350                           prodl	equ	0xFF3
 41351                           intcon	equ	0xFF2
 41352                           intcon2	equ	0xFF1
 41353                           intcon3	equ	0xFF0
 41354                           postinc0	equ	0xFEE
 41355                           wreg	equ	0xFE8
 41356                           indf1	equ	0xFE7
 41357                           postinc1	equ	0xFE6
 41358                           postdec1	equ	0xFE5
 41359                           plusw1	equ	0xFE3
 41360                           fsr1h	equ	0xFE2
 41361                           fsr1l	equ	0xFE1
 41362                           indf2	equ	0xFDF
 41363                           postinc2	equ	0xFDE
 41364                           postdec2	equ	0xFDD
 41365                           plusw2	equ	0xFDB
 41366                           fsr2h	equ	0xFDA
 41367                           fsr2l	equ	0xFD9
 41368                           status	equ	0xFD8
 41369                           
 41370 ;; *************** function _buck_get_mode *****************
 41371 ;; Defined at:
 41372 ;;		line 597 in file "buck.c"
 41373 ;; Parameters:    Size  Location     Type
 41374 ;;		None
 41375 ;; Auto vars:     Size  Location     Type
 41376 ;;		None
 41377 ;; Return value:  Size  Location     Type
 41378 ;;                  1    wreg      enum E8093
 41379 ;; Registers used:
 41380 ;;		wreg, status,2
 41381 ;; Tracked objects:
 41382 ;;		On entry : 0/0
 41383 ;;		On exit  : 0/0
 41384 ;;		Unchanged: 0/0
 41385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41390 ;;Total ram usage:        0 bytes
 41391 ;; Hardware stack levels used:    1
 41392 ;; Hardware stack levels required when called:   10
 41393 ;; This function calls:
 41394 ;;		Nothing
 41395 ;; This function is called by:
 41396 ;;		_main
 41397 ;;		__fill_buffer_get_status
 41398 ;;		_system_calculate_input_current
 41399 ;;		_system_calculate_output_current
 41400 ;;		__display_inout
 41401 ;;		__display_charger
 41402 ;;		_log_collect_data
 41403 ;; This function uses a non-reentrant model
 41404 ;;
 41405                           
 41406                           	psect	text204
 41407  013EE8                     __ptext204:
 41408                           	opt stack 0
 41409  013EE8                     _buck_get_mode:
 41410                           	opt stack 19
 41411                           
 41412                           ;buck.c: 599: return buck_status;
 41413                           
 41414                           ; BSR set to: 0
 41415                           ;incstack = 0
 41416  013EE8  501C               	movf	_buck_status,w,c
 41417  013EEA  0012               	return	
 41418  013EEC                     __end_of_buck_get_mode:
 41419                           	opt stack 0
 41420                           tosu	equ	0xFFF
 41421                           tosh	equ	0xFFE
 41422                           tosl	equ	0xFFD
 41423                           pclath	equ	0xFFA
 41424                           tblptru	equ	0xFF8
 41425                           tblptrh	equ	0xFF7
 41426                           tblptrl	equ	0xFF6
 41427                           tablat	equ	0xFF5
 41428                           prodh	equ	0xFF4
 41429                           prodl	equ	0xFF3
 41430                           intcon	equ	0xFF2
 41431                           intcon2	equ	0xFF1
 41432                           intcon3	equ	0xFF0
 41433                           postinc0	equ	0xFEE
 41434                           wreg	equ	0xFE8
 41435                           indf1	equ	0xFE7
 41436                           postinc1	equ	0xFE6
 41437                           postdec1	equ	0xFE5
 41438                           plusw1	equ	0xFE3
 41439                           fsr1h	equ	0xFE2
 41440                           fsr1l	equ	0xFE1
 41441                           indf2	equ	0xFDF
 41442                           postinc2	equ	0xFDE
 41443                           postdec2	equ	0xFDD
 41444                           plusw2	equ	0xFDB
 41445                           fsr2h	equ	0xFDA
 41446                           fsr2l	equ	0xFD9
 41447                           status	equ	0xFD8
 41448                           
 41449 ;; *************** function _buck_get_dutycycle *****************
 41450 ;; Defined at:
 41451 ;;		line 592 in file "buck.c"
 41452 ;; Parameters:    Size  Location     Type
 41453 ;;		None
 41454 ;; Auto vars:     Size  Location     Type
 41455 ;;		None
 41456 ;; Return value:  Size  Location     Type
 41457 ;;                  1    wreg      unsigned char 
 41458 ;; Registers used:
 41459 ;;		wreg, status,2
 41460 ;; Tracked objects:
 41461 ;;		On entry : 0/0
 41462 ;;		On exit  : 0/0
 41463 ;;		Unchanged: 0/0
 41464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41469 ;;Total ram usage:        0 bytes
 41470 ;; Hardware stack levels used:    1
 41471 ;; Hardware stack levels required when called:   10
 41472 ;; This function calls:
 41473 ;;		Nothing
 41474 ;; This function is called by:
 41475 ;;		__fill_buffer_get_status
 41476 ;;		__display_charger
 41477 ;; This function uses a non-reentrant model
 41478 ;;
 41479                           
 41480                           	psect	text205
 41481  013EDE                     __ptext205:
 41482                           	opt stack 0
 41483  013EDE                     _buck_get_dutycycle:
 41484                           	opt stack 18
 41485                           
 41486                           ;buck.c: 594: return buck_dutycycle;
 41487                           
 41488                           ;incstack = 0
 41489  013EDE  0100               	movlb	0	; () banked
 41490  013EE0  51E4               	movf	_buck_dutycycle& (0+255),w,b
 41491  013EE2  0012               	return	
 41492  013EE4                     __end_of_buck_get_dutycycle:
 41493                           	opt stack 0
 41494                           tosu	equ	0xFFF
 41495                           tosh	equ	0xFFE
 41496                           tosl	equ	0xFFD
 41497                           pclath	equ	0xFFA
 41498                           tblptru	equ	0xFF8
 41499                           tblptrh	equ	0xFF7
 41500                           tblptrl	equ	0xFF6
 41501                           tablat	equ	0xFF5
 41502                           prodh	equ	0xFF4
 41503                           prodl	equ	0xFF3
 41504                           intcon	equ	0xFF2
 41505                           intcon2	equ	0xFF1
 41506                           intcon3	equ	0xFF0
 41507                           postinc0	equ	0xFEE
 41508                           wreg	equ	0xFE8
 41509                           indf1	equ	0xFE7
 41510                           postinc1	equ	0xFE6
 41511                           postdec1	equ	0xFE5
 41512                           plusw1	equ	0xFE3
 41513                           fsr1h	equ	0xFE2
 41514                           fsr1l	equ	0xFE1
 41515                           indf2	equ	0xFDF
 41516                           postinc2	equ	0xFDE
 41517                           postdec2	equ	0xFDD
 41518                           plusw2	equ	0xFDB
 41519                           fsr2h	equ	0xFDA
 41520                           fsr2l	equ	0xFD9
 41521                           status	equ	0xFD8
 41522                           
 41523 ;; *************** function __fill_buffer_get_display2 *****************
 41524 ;; Defined at:
 41525 ;;		line 353 in file "app_device_custom_hid.c"
 41526 ;; Parameters:    Size  Location     Type
 41527 ;;		None
 41528 ;; Auto vars:     Size  Location     Type
 41529 ;;  position        1    7[BANK0 ] unsigned char 
 41530 ;;  line            1    6[BANK0 ] unsigned char 
 41531 ;;  cntr            1    5[BANK0 ] unsigned char 
 41532 ;; Return value:  Size  Location     Type
 41533 ;;                  1    wreg      void 
 41534 ;; Registers used:
 41535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41536 ;; Tracked objects:
 41537 ;;		On entry : 0/0
 41538 ;;		On exit  : 0/0
 41539 ;;		Unchanged: 0/0
 41540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41542 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41543 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41544 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41545 ;;Total ram usage:        4 bytes
 41546 ;; Hardware stack levels used:    1
 41547 ;; Hardware stack levels required when called:   11
 41548 ;; This function calls:
 41549 ;;		_display_get_character
 41550 ;; This function is called by:
 41551 ;;		_APP_DeviceCustomHIDTasks
 41552 ;; This function uses a non-reentrant model
 41553 ;;
 41554                           
 41555                           	psect	text206
 41556  012EE4                     __ptext206:
 41557                           	opt stack 0
 41558  012EE4                     __fill_buffer_get_display2:
 41559                           	opt stack 18
 41560                           
 41561                           ;app_device_custom_hid.c: 355: uint8_t cntr;;app_device_custom_hid.c: 356: uint8_t line;
      +                          ;app_device_custom_hid.c: 357: uint8_t position;;app_device_custom_hid.c: 360: ToSendDat
      +                          aBuffer[0] = COMMAND_GET_DISPLAY_2;
 41562                           
 41563                           ; BSR set to: 0
 41564                           ;incstack = 0
 41565  012EE4  0E12               	movlw	18
 41566  012EE6  0103               	movlb	3	; () banked
 41567  012EE8  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41568                           
 41569                           ;app_device_custom_hid.c: 363: cntr = 1;
 41570  012EEA  0E01               	movlw	1
 41571  012EEC  0100               	movlb	0	; () banked
 41572  012EEE  6F65               	movwf	__fill_buffer_get_display2@cntr& (0+255),b
 41573                           
 41574                           ;app_device_custom_hid.c: 364: for(line=2; line<4; ++line)
 41575  012EF0  0E02               	movlw	2
 41576  012EF2  6F66               	movwf	__fill_buffer_get_display2@line& (0+255),b
 41577  012EF4                     l20671:
 41578                           
 41579                           ; BSR set to: 0
 41580  012EF4  0E03               	movlw	3
 41581  012EF6  6566               	cpfsgt	__fill_buffer_get_display2@line& (0+255),b
 41582  012EF8  D001               	goto	l1130
 41583  012EFA  0012               	return	
 41584  012EFC                     l1130:
 41585                           
 41586                           ; BSR set to: 0
 41587                           ;app_device_custom_hid.c: 365: {;app_device_custom_hid.c: 366: for(position=0; position<
      +                          20; ++position)
 41588                           
 41589                           ; BSR set to: 0
 41590  012EFC  0E00               	movlw	0
 41591  012EFE  6F67               	movwf	__fill_buffer_get_display2@position& (0+255),b
 41592  012F00                     l20677:
 41593                           
 41594                           ; BSR set to: 0
 41595  012F00  0E13               	movlw	19
 41596  012F02  6567               	cpfsgt	__fill_buffer_get_display2@position& (0+255),b
 41597  012F04  D001               	goto	l1132
 41598  012F06  D014               	goto	u19820
 41599  012F08                     l1132:
 41600                           
 41601                           ; BSR set to: 0
 41602                           ;app_device_custom_hid.c: 367: {;app_device_custom_hid.c: 368: ToSendDataBuffer[cntr] = 
      +                          display_get_character(line, position);
 41603                           
 41604                           ; BSR set to: 0
 41605  012F08  C067  F060         	movff	__fill_buffer_get_display2@position,display_get_character@position
 41606  012F0C  5166               	movf	__fill_buffer_get_display2@line& (0+255),w,b
 41607  012F0E  EC60  F09B         	call	_display_get_character
 41608  012F12  0100               	movlb	0	; () banked
 41609  012F14  6F64               	movwf	??__fill_buffer_get_display2& (0+255),b
 41610  012F16  5165               	movf	__fill_buffer_get_display2@cntr& (0+255),w,b
 41611  012F18  0D01               	mullw	1
 41612  012F1A  0EA4               	movlw	low _ToSendDataBuffer
 41613  012F1C  24F3               	addwf	prodl,w,c
 41614  012F1E  6ED9               	movwf	fsr2l,c
 41615  012F20  0E03               	movlw	high _ToSendDataBuffer
 41616  012F22  20F4               	addwfc	prodh,w,c
 41617  012F24  6EDA               	movwf	fsr2h,c
 41618  012F26  C064  FFDF         	movff	??__fill_buffer_get_display2,indf2
 41619                           
 41620                           ; BSR set to: 0
 41621                           ;app_device_custom_hid.c: 369: ++cntr;
 41622  012F2A  2B65               	incf	__fill_buffer_get_display2@cntr& (0+255),f,b
 41623                           
 41624                           ; BSR set to: 0
 41625  012F2C  2B67               	incf	__fill_buffer_get_display2@position& (0+255),f,b
 41626  012F2E  D7E8               	goto	l20677
 41627  012F30                     u19820:
 41628                           
 41629                           ; BSR set to: 0
 41630                           
 41631                           ; BSR set to: 0
 41632  012F30  2B66               	incf	__fill_buffer_get_display2@line& (0+255),f,b
 41633  012F32  D7E0               	goto	l20671
 41634  012F34                     __end_of__fill_buffer_get_display2:
 41635                           	opt stack 0
 41636                           tosu	equ	0xFFF
 41637                           tosh	equ	0xFFE
 41638                           tosl	equ	0xFFD
 41639                           pclath	equ	0xFFA
 41640                           tblptru	equ	0xFF8
 41641                           tblptrh	equ	0xFF7
 41642                           tblptrl	equ	0xFF6
 41643                           tablat	equ	0xFF5
 41644                           prodh	equ	0xFF4
 41645                           prodl	equ	0xFF3
 41646                           intcon	equ	0xFF2
 41647                           intcon2	equ	0xFF1
 41648                           intcon3	equ	0xFF0
 41649                           postinc0	equ	0xFEE
 41650                           wreg	equ	0xFE8
 41651                           indf1	equ	0xFE7
 41652                           postinc1	equ	0xFE6
 41653                           postdec1	equ	0xFE5
 41654                           plusw1	equ	0xFE3
 41655                           fsr1h	equ	0xFE2
 41656                           fsr1l	equ	0xFE1
 41657                           indf2	equ	0xFDF
 41658                           postinc2	equ	0xFDE
 41659                           postdec2	equ	0xFDD
 41660                           plusw2	equ	0xFDB
 41661                           fsr2h	equ	0xFDA
 41662                           fsr2l	equ	0xFD9
 41663                           status	equ	0xFD8
 41664                           
 41665 ;; *************** function __fill_buffer_get_display1 *****************
 41666 ;; Defined at:
 41667 ;;		line 331 in file "app_device_custom_hid.c"
 41668 ;; Parameters:    Size  Location     Type
 41669 ;;		None
 41670 ;; Auto vars:     Size  Location     Type
 41671 ;;  position        1    7[BANK0 ] unsigned char 
 41672 ;;  line            1    6[BANK0 ] unsigned char 
 41673 ;;  cntr            1    5[BANK0 ] unsigned char 
 41674 ;; Return value:  Size  Location     Type
 41675 ;;                  1    wreg      void 
 41676 ;; Registers used:
 41677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41678 ;; Tracked objects:
 41679 ;;		On entry : 0/0
 41680 ;;		On exit  : 0/0
 41681 ;;		Unchanged: 0/0
 41682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41684 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41686 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41687 ;;Total ram usage:        4 bytes
 41688 ;; Hardware stack levels used:    1
 41689 ;; Hardware stack levels required when called:   11
 41690 ;; This function calls:
 41691 ;;		_display_get_character
 41692 ;; This function is called by:
 41693 ;;		_APP_DeviceCustomHIDTasks
 41694 ;; This function uses a non-reentrant model
 41695 ;;
 41696                           
 41697                           	psect	text207
 41698  012F34                     __ptext207:
 41699                           	opt stack 0
 41700  012F34                     __fill_buffer_get_display1:
 41701                           	opt stack 18
 41702                           
 41703                           ;app_device_custom_hid.c: 333: uint8_t cntr;;app_device_custom_hid.c: 334: uint8_t line;
      +                          ;app_device_custom_hid.c: 335: uint8_t position;;app_device_custom_hid.c: 338: ToSendDat
      +                          aBuffer[0] = COMMAND_GET_DISPLAY_1;
 41704                           
 41705                           ; BSR set to: 0
 41706                           ;incstack = 0
 41707  012F34  0E11               	movlw	17
 41708  012F36  0103               	movlb	3	; () banked
 41709  012F38  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41710                           
 41711                           ;app_device_custom_hid.c: 341: cntr = 1;
 41712  012F3A  0E01               	movlw	1
 41713  012F3C  0100               	movlb	0	; () banked
 41714  012F3E  6F65               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 41715                           
 41716                           ;app_device_custom_hid.c: 342: for(line=0; line<2; ++line)
 41717  012F40  0E00               	movlw	0
 41718  012F42  6F66               	movwf	__fill_buffer_get_display1@line& (0+255),b
 41719  012F44                     l20647:
 41720                           
 41721                           ; BSR set to: 0
 41722  012F44  0E01               	movlw	1
 41723  012F46  6566               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 41724  012F48  D001               	goto	l1123
 41725  012F4A  0012               	return	
 41726  012F4C                     l1123:
 41727                           
 41728                           ; BSR set to: 0
 41729                           ;app_device_custom_hid.c: 343: {;app_device_custom_hid.c: 344: for(position=0; position<
      +                          20; ++position)
 41730                           
 41731                           ; BSR set to: 0
 41732  012F4C  0E00               	movlw	0
 41733  012F4E  6F67               	movwf	__fill_buffer_get_display1@position& (0+255),b
 41734  012F50                     l20653:
 41735                           
 41736                           ; BSR set to: 0
 41737  012F50  0E13               	movlw	19
 41738  012F52  6567               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 41739  012F54  D001               	goto	l1125
 41740  012F56  D014               	goto	u19780
 41741  012F58                     l1125:
 41742                           
 41743                           ; BSR set to: 0
 41744                           ;app_device_custom_hid.c: 345: {;app_device_custom_hid.c: 346: ToSendDataBuffer[cntr] = 
      +                          display_get_character(line, position);
 41745                           
 41746                           ; BSR set to: 0
 41747  012F58  C067  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 41748  012F5C  5166               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 41749  012F5E  EC60  F09B         	call	_display_get_character
 41750  012F62  0100               	movlb	0	; () banked
 41751  012F64  6F64               	movwf	??__fill_buffer_get_display1& (0+255),b
 41752  012F66  5165               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 41753  012F68  0D01               	mullw	1
 41754  012F6A  0EA4               	movlw	low _ToSendDataBuffer
 41755  012F6C  24F3               	addwf	prodl,w,c
 41756  012F6E  6ED9               	movwf	fsr2l,c
 41757  012F70  0E03               	movlw	high _ToSendDataBuffer
 41758  012F72  20F4               	addwfc	prodh,w,c
 41759  012F74  6EDA               	movwf	fsr2h,c
 41760  012F76  C064  FFDF         	movff	??__fill_buffer_get_display1,indf2
 41761                           
 41762                           ; BSR set to: 0
 41763                           ;app_device_custom_hid.c: 347: ++cntr;
 41764  012F7A  2B65               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 41765                           
 41766                           ; BSR set to: 0
 41767  012F7C  2B67               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 41768  012F7E  D7E8               	goto	l20653
 41769  012F80                     u19780:
 41770                           
 41771                           ; BSR set to: 0
 41772                           
 41773                           ; BSR set to: 0
 41774  012F80  2B66               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 41775  012F82  D7E0               	goto	l20647
 41776  012F84                     __end_of__fill_buffer_get_display1:
 41777                           	opt stack 0
 41778                           tosu	equ	0xFFF
 41779                           tosh	equ	0xFFE
 41780                           tosl	equ	0xFFD
 41781                           pclath	equ	0xFFA
 41782                           tblptru	equ	0xFF8
 41783                           tblptrh	equ	0xFF7
 41784                           tblptrl	equ	0xFF6
 41785                           tablat	equ	0xFF5
 41786                           prodh	equ	0xFF4
 41787                           prodl	equ	0xFF3
 41788                           intcon	equ	0xFF2
 41789                           intcon2	equ	0xFF1
 41790                           intcon3	equ	0xFF0
 41791                           postinc0	equ	0xFEE
 41792                           wreg	equ	0xFE8
 41793                           indf1	equ	0xFE7
 41794                           postinc1	equ	0xFE6
 41795                           postdec1	equ	0xFE5
 41796                           plusw1	equ	0xFE3
 41797                           fsr1h	equ	0xFE2
 41798                           fsr1l	equ	0xFE1
 41799                           indf2	equ	0xFDF
 41800                           postinc2	equ	0xFDE
 41801                           postdec2	equ	0xFDD
 41802                           plusw2	equ	0xFDB
 41803                           fsr2h	equ	0xFDA
 41804                           fsr2l	equ	0xFD9
 41805                           status	equ	0xFD8
 41806                           
 41807 ;; *************** function _display_get_character *****************
 41808 ;; Defined at:
 41809 ;;		line 23 in file "display.c"
 41810 ;; Parameters:    Size  Location     Type
 41811 ;;  line            1    wreg     unsigned char 
 41812 ;;  position        1    0[BANK0 ] unsigned char 
 41813 ;; Auto vars:     Size  Location     Type
 41814 ;;  line            1    3[BANK0 ] unsigned char 
 41815 ;; Return value:  Size  Location     Type
 41816 ;;                  1    wreg      unsigned char 
 41817 ;; Registers used:
 41818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41819 ;; Tracked objects:
 41820 ;;		On entry : 0/0
 41821 ;;		On exit  : 0/0
 41822 ;;		Unchanged: 0/0
 41823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41824 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41827 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41828 ;;Total ram usage:        4 bytes
 41829 ;; Hardware stack levels used:    1
 41830 ;; Hardware stack levels required when called:   10
 41831 ;; This function calls:
 41832 ;;		Nothing
 41833 ;; This function is called by:
 41834 ;;		__fill_buffer_get_display1
 41835 ;;		__fill_buffer_get_display2
 41836 ;; This function uses a non-reentrant model
 41837 ;;
 41838                           
 41839                           	psect	text208
 41840  0136C0                     __ptext208:
 41841                           	opt stack 0
 41842  0136C0                     _display_get_character:
 41843                           	opt stack 18
 41844                           
 41845                           ; BSR set to: 0
 41846                           ;incstack = 0
 41847                           ;display_get_character@line stored from wreg
 41848  0136C0  0100               	movlb	0	; () banked
 41849  0136C2  6F63               	movwf	display_get_character@line& (0+255),b
 41850                           
 41851                           ;display.c: 25: return display_content[line][position];
 41852  0136C4  0100               	movlb	0	; () banked
 41853  0136C6  5163               	movf	display_get_character@line& (0+255),w,b
 41854  0136C8  0D14               	mullw	20
 41855  0136CA  0E54               	movlw	low _display_content
 41856  0136CC  6F61               	movwf	??_display_get_character& (0+255),b
 41857  0136CE  0E03               	movlw	high _display_content
 41858  0136D0  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 41859  0136D2  50F3               	movf	prodl,w,c
 41860  0136D4  2761               	addwf	??_display_get_character& (0+255),f,b
 41861  0136D6  50F4               	movf	prodh,w,c
 41862  0136D8  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 41863  0136DA  5160               	movf	display_get_character@position& (0+255),w,b
 41864  0136DC  0D01               	mullw	1
 41865  0136DE  50F3               	movf	prodl,w,c
 41866  0136E0  2561               	addwf	??_display_get_character& (0+255),w,b
 41867  0136E2  6ED9               	movwf	fsr2l,c
 41868  0136E4  50F4               	movf	prodh,w,c
 41869  0136E6  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 41870  0136E8  6EDA               	movwf	fsr2h,c
 41871  0136EA  50DF               	movf	indf2,w,c
 41872  0136EC  0012               	return	
 41873  0136EE                     __end_of_display_get_character:
 41874                           	opt stack 0
 41875                           tosu	equ	0xFFF
 41876                           tosh	equ	0xFFE
 41877                           tosl	equ	0xFFD
 41878                           pclath	equ	0xFFA
 41879                           tblptru	equ	0xFF8
 41880                           tblptrh	equ	0xFF7
 41881                           tblptrl	equ	0xFF6
 41882                           tablat	equ	0xFF5
 41883                           prodh	equ	0xFF4
 41884                           prodl	equ	0xFF3
 41885                           intcon	equ	0xFF2
 41886                           intcon2	equ	0xFF1
 41887                           intcon3	equ	0xFF0
 41888                           postinc0	equ	0xFEE
 41889                           wreg	equ	0xFE8
 41890                           indf1	equ	0xFE7
 41891                           postinc1	equ	0xFE6
 41892                           postdec1	equ	0xFE5
 41893                           plusw1	equ	0xFE3
 41894                           fsr1h	equ	0xFE2
 41895                           fsr1l	equ	0xFE1
 41896                           indf2	equ	0xFDF
 41897                           postinc2	equ	0xFDE
 41898                           postdec2	equ	0xFDD
 41899                           plusw2	equ	0xFDB
 41900                           fsr2h	equ	0xFDA
 41901                           fsr2l	equ	0xFD9
 41902                           status	equ	0xFD8
 41903                           
 41904 ;; *************** function __fill_buffer_get_calibration2 *****************
 41905 ;; Defined at:
 41906 ;;		line 388 in file "app_device_custom_hid.c"
 41907 ;; Parameters:    Size  Location     Type
 41908 ;;		None
 41909 ;; Auto vars:     Size  Location     Type
 41910 ;;		None
 41911 ;; Return value:  Size  Location     Type
 41912 ;;                  1    wreg      void 
 41913 ;; Registers used:
 41914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41915 ;; Tracked objects:
 41916 ;;		On entry : 0/0
 41917 ;;		On exit  : 0/0
 41918 ;;		Unchanged: 0/0
 41919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41924 ;;Total ram usage:        0 bytes
 41925 ;; Hardware stack levels used:    1
 41926 ;; Hardware stack levels required when called:   11
 41927 ;; This function calls:
 41928 ;;		_memcpy
 41929 ;; This function is called by:
 41930 ;;		_APP_DeviceCustomHIDTasks
 41931 ;; This function uses a non-reentrant model
 41932 ;;
 41933                           
 41934                           	psect	text209
 41935  012648                     __ptext209:
 41936                           	opt stack 0
 41937  012648                     __fill_buffer_get_calibration2:
 41938                           	opt stack 18
 41939                           
 41940                           ;app_device_custom_hid.c: 391: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 41941                           
 41942                           ; BSR set to: 0
 41943                           ;incstack = 0
 41944  012648  0E14               	movlw	20
 41945  01264A  0103               	movlb	3	; () banked
 41946  01264C  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 41947                           
 41948                           ; BSR set to: 3
 41949                           ;app_device_custom_hid.c: 393: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 41950  01264E  0EA5               	movlw	low (_ToSendDataBuffer+1)
 41951  012650  0100               	movlb	0	; () banked
 41952  012652  6F60               	movwf	memcpy@d1& (0+255),b
 41953  012654  0E03               	movlw	high (_ToSendDataBuffer+1)
 41954  012656  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41955  012658  0E30               	movlw	low (_calibrationParameters+48)
 41956  01265A  6F62               	movwf	memcpy@s1& (0+255),b
 41957  01265C  0E03               	movlw	high (_calibrationParameters+48)
 41958  01265E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41959  012660  0E00               	movlw	0
 41960  012662  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41961  012664  0E0C               	movlw	12
 41962  012666  6F64               	movwf	memcpy@n& (0+255),b
 41963  012668  EC86  F093         	call	_memcpy	;wreg free
 41964                           
 41965                           ;app_device_custom_hid.c: 394: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 41966  01266C  0EB1               	movlw	low (_ToSendDataBuffer+13)
 41967  01266E  0100               	movlb	0	; () banked
 41968  012670  6F60               	movwf	memcpy@d1& (0+255),b
 41969  012672  0E03               	movlw	high (_ToSendDataBuffer+13)
 41970  012674  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41971  012676  0E3C               	movlw	low (_calibrationParameters+60)
 41972  012678  6F62               	movwf	memcpy@s1& (0+255),b
 41973  01267A  0E03               	movlw	high (_calibrationParameters+60)
 41974  01267C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41975  01267E  0E00               	movlw	0
 41976  012680  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41977  012682  0E0C               	movlw	12
 41978  012684  6F64               	movwf	memcpy@n& (0+255),b
 41979  012686  EC86  F093         	call	_memcpy	;wreg free
 41980                           
 41981                           ;app_device_custom_hid.c: 395: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 41982  01268A  0EBD               	movlw	low (_ToSendDataBuffer+25)
 41983  01268C  0100               	movlb	0	; () banked
 41984  01268E  6F60               	movwf	memcpy@d1& (0+255),b
 41985  012690  0E03               	movlw	high (_ToSendDataBuffer+25)
 41986  012692  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41987  012694  0E48               	movlw	low (_calibrationParameters+72)
 41988  012696  6F62               	movwf	memcpy@s1& (0+255),b
 41989  012698  0E03               	movlw	high (_calibrationParameters+72)
 41990  01269A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41991  01269C  0E00               	movlw	0
 41992  01269E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41993  0126A0  0E0C               	movlw	12
 41994  0126A2  6F64               	movwf	memcpy@n& (0+255),b
 41995  0126A4  EC86  F093         	call	_memcpy	;wreg free
 41996  0126A8  0012               	return		;funcret
 41997  0126AA                     __end_of__fill_buffer_get_calibration2:
 41998                           	opt stack 0
 41999                           tosu	equ	0xFFF
 42000                           tosh	equ	0xFFE
 42001                           tosl	equ	0xFFD
 42002                           pclath	equ	0xFFA
 42003                           tblptru	equ	0xFF8
 42004                           tblptrh	equ	0xFF7
 42005                           tblptrl	equ	0xFF6
 42006                           tablat	equ	0xFF5
 42007                           prodh	equ	0xFF4
 42008                           prodl	equ	0xFF3
 42009                           intcon	equ	0xFF2
 42010                           intcon2	equ	0xFF1
 42011                           intcon3	equ	0xFF0
 42012                           postinc0	equ	0xFEE
 42013                           wreg	equ	0xFE8
 42014                           indf1	equ	0xFE7
 42015                           postinc1	equ	0xFE6
 42016                           postdec1	equ	0xFE5
 42017                           plusw1	equ	0xFE3
 42018                           fsr1h	equ	0xFE2
 42019                           fsr1l	equ	0xFE1
 42020                           indf2	equ	0xFDF
 42021                           postinc2	equ	0xFDE
 42022                           postdec2	equ	0xFDD
 42023                           plusw2	equ	0xFDB
 42024                           fsr2h	equ	0xFDA
 42025                           fsr2l	equ	0xFD9
 42026                           status	equ	0xFD8
 42027                           
 42028 ;; *************** function __fill_buffer_get_calibration1 *****************
 42029 ;; Defined at:
 42030 ;;		line 376 in file "app_device_custom_hid.c"
 42031 ;; Parameters:    Size  Location     Type
 42032 ;;		None
 42033 ;; Auto vars:     Size  Location     Type
 42034 ;;		None
 42035 ;; Return value:  Size  Location     Type
 42036 ;;                  1    wreg      void 
 42037 ;; Registers used:
 42038 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42039 ;; Tracked objects:
 42040 ;;		On entry : 0/0
 42041 ;;		On exit  : 0/0
 42042 ;;		Unchanged: 0/0
 42043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42048 ;;Total ram usage:        0 bytes
 42049 ;; Hardware stack levels used:    1
 42050 ;; Hardware stack levels required when called:   11
 42051 ;; This function calls:
 42052 ;;		_memcpy
 42053 ;; This function is called by:
 42054 ;;		_APP_DeviceCustomHIDTasks
 42055 ;; This function uses a non-reentrant model
 42056 ;;
 42057                           
 42058                           	psect	text210
 42059  011CAE                     __ptext210:
 42060                           	opt stack 0
 42061  011CAE                     __fill_buffer_get_calibration1:
 42062                           	opt stack 18
 42063                           
 42064                           ;app_device_custom_hid.c: 379: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 42065                           
 42066                           ;incstack = 0
 42067  011CAE  0E13               	movlw	19
 42068  011CB0  0103               	movlb	3	; () banked
 42069  011CB2  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42070                           
 42071                           ; BSR set to: 3
 42072                           ;app_device_custom_hid.c: 381: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 42073  011CB4  0EA5               	movlw	low (_ToSendDataBuffer+1)
 42074  011CB6  0100               	movlb	0	; () banked
 42075  011CB8  6F60               	movwf	memcpy@d1& (0+255),b
 42076  011CBA  0E03               	movlw	high (_ToSendDataBuffer+1)
 42077  011CBC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42078  011CBE  0E00               	movlw	low _calibrationParameters
 42079  011CC0  6F62               	movwf	memcpy@s1& (0+255),b
 42080  011CC2  0E03               	movlw	high _calibrationParameters
 42081  011CC4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42082  011CC6  0E00               	movlw	0
 42083  011CC8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42084  011CCA  0E0C               	movlw	12
 42085  011CCC  6F64               	movwf	memcpy@n& (0+255),b
 42086  011CCE  EC86  F093         	call	_memcpy	;wreg free
 42087                           
 42088                           ;app_device_custom_hid.c: 382: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 42089  011CD2  0EB1               	movlw	low (_ToSendDataBuffer+13)
 42090  011CD4  0100               	movlb	0	; () banked
 42091  011CD6  6F60               	movwf	memcpy@d1& (0+255),b
 42092  011CD8  0E03               	movlw	high (_ToSendDataBuffer+13)
 42093  011CDA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42094  011CDC  0E0C               	movlw	low (_calibrationParameters+12)
 42095  011CDE  6F62               	movwf	memcpy@s1& (0+255),b
 42096  011CE0  0E03               	movlw	high (_calibrationParameters+12)
 42097  011CE2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42098  011CE4  0E00               	movlw	0
 42099  011CE6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42100  011CE8  0E0C               	movlw	12
 42101  011CEA  6F64               	movwf	memcpy@n& (0+255),b
 42102  011CEC  EC86  F093         	call	_memcpy	;wreg free
 42103                           
 42104                           ;app_device_custom_hid.c: 383: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 42105  011CF0  0EBD               	movlw	low (_ToSendDataBuffer+25)
 42106  011CF2  0100               	movlb	0	; () banked
 42107  011CF4  6F60               	movwf	memcpy@d1& (0+255),b
 42108  011CF6  0E03               	movlw	high (_ToSendDataBuffer+25)
 42109  011CF8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42110  011CFA  0E18               	movlw	low (_calibrationParameters+24)
 42111  011CFC  6F62               	movwf	memcpy@s1& (0+255),b
 42112  011CFE  0E03               	movlw	high (_calibrationParameters+24)
 42113  011D00  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42114  011D02  0E00               	movlw	0
 42115  011D04  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42116  011D06  0E0C               	movlw	12
 42117  011D08  6F64               	movwf	memcpy@n& (0+255),b
 42118  011D0A  EC86  F093         	call	_memcpy	;wreg free
 42119                           
 42120                           ;app_device_custom_hid.c: 384: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 42121  011D0E  0EC9               	movlw	low (_ToSendDataBuffer+37)
 42122  011D10  0100               	movlb	0	; () banked
 42123  011D12  6F60               	movwf	memcpy@d1& (0+255),b
 42124  011D14  0E03               	movlw	high (_ToSendDataBuffer+37)
 42125  011D16  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42126  011D18  0E24               	movlw	low (_calibrationParameters+36)
 42127  011D1A  6F62               	movwf	memcpy@s1& (0+255),b
 42128  011D1C  0E03               	movlw	high (_calibrationParameters+36)
 42129  011D1E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42130  011D20  0E00               	movlw	0
 42131  011D22  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42132  011D24  0E0C               	movlw	12
 42133  011D26  6F64               	movwf	memcpy@n& (0+255),b
 42134  011D28  EC86  F093         	call	_memcpy	;wreg free
 42135  011D2C  0012               	return		;funcret
 42136  011D2E                     __end_of__fill_buffer_get_calibration1:
 42137                           	opt stack 0
 42138                           tosu	equ	0xFFF
 42139                           tosh	equ	0xFFE
 42140                           tosl	equ	0xFFD
 42141                           pclath	equ	0xFFA
 42142                           tblptru	equ	0xFF8
 42143                           tblptrh	equ	0xFF7
 42144                           tblptrl	equ	0xFF6
 42145                           tablat	equ	0xFF5
 42146                           prodh	equ	0xFF4
 42147                           prodl	equ	0xFF3
 42148                           intcon	equ	0xFF2
 42149                           intcon2	equ	0xFF1
 42150                           intcon3	equ	0xFF0
 42151                           postinc0	equ	0xFEE
 42152                           wreg	equ	0xFE8
 42153                           indf1	equ	0xFE7
 42154                           postinc1	equ	0xFE6
 42155                           postdec1	equ	0xFE5
 42156                           plusw1	equ	0xFE3
 42157                           fsr1h	equ	0xFE2
 42158                           fsr1l	equ	0xFE1
 42159                           indf2	equ	0xFDF
 42160                           postinc2	equ	0xFDE
 42161                           postdec2	equ	0xFDD
 42162                           plusw2	equ	0xFDB
 42163                           fsr2h	equ	0xFDA
 42164                           fsr2l	equ	0xFD9
 42165                           status	equ	0xFD8
 42166                           
 42167 ;; *************** function _memcpy *****************
 42168 ;; Defined at:
 42169 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 42170 ;; Parameters:    Size  Location     Type
 42171 ;;  d1              2    0[BANK0 ] PTR void 
 42172 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42173 ;;		 -> SetupPkt(8), 
 42174 ;;  s1              2    2[BANK0 ] PTR const void 
 42175 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42176 ;;		 -> calibrationParameters(84), inq_resp(36), RAM(3759), 
 42177 ;;  n               2    4[BANK0 ] unsigned int 
 42178 ;; Auto vars:     Size  Location     Type
 42179 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 42180 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 42181 ;;		 -> calibrationParameters(84), inq_resp(36), RAM(3759), 
 42182 ;;  d               2    7[BANK0 ] PTR unsigned char 
 42183 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 42184 ;;		 -> SetupPkt(8), 
 42185 ;;  tmp             1    6[BANK0 ] unsigned char 
 42186 ;; Return value:  Size  Location     Type
 42187 ;;                  2    0[BANK0 ] PTR void 
 42188 ;; Registers used:
 42189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42190 ;; Tracked objects:
 42191 ;;		On entry : 0/0
 42192 ;;		On exit  : 0/0
 42193 ;;		Unchanged: 0/0
 42194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42195 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42196 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42198 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42199 ;;Total ram usage:       11 bytes
 42200 ;; Hardware stack levels used:    1
 42201 ;; Hardware stack levels required when called:   10
 42202 ;; This function calls:
 42203 ;;		Nothing
 42204 ;; This function is called by:
 42205 ;;		_MSDProcessCommandMediaPresent
 42206 ;;		__fill_buffer_get_calibration1
 42207 ;;		__fill_buffer_get_calibration2
 42208 ;;		__flash_set_page_size
 42209 ;;		_fat_create_file
 42210 ;; This function uses a non-reentrant model
 42211 ;;
 42212                           
 42213                           	psect	text211
 42214  01270C                     __ptext211:
 42215                           	opt stack 0
 42216  01270C                     _memcpy:
 42217                           	opt stack 17
 42218                           
 42219                           ;incstack = 0
 42220  01270C  C062  F069         	movff	memcpy@s1,memcpy@s
 42221  012710  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 42222  012714  C060  F067         	movff	memcpy@d1,memcpy@d
 42223  012718  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 42224  01271C  D01D               	goto	l3995
 42225  01271E                     l18237:
 42226  01271E  C069  FFF6         	movff	memcpy@s,tblptrl
 42227  012722  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 42228  012726  0E00               	movlw	low (__mediumconst shr (0+16))
 42229  012728  6EF8               	movwf	tblptru,c
 42230  01272A  0E0E               	movlw	(high __ramtop+-1)
 42231  01272C  64F7               	cpfsgt	tblptrh,c
 42232  01272E  D003               	bra	u16847
 42233  012730  0008               	tblrd		*
 42234  012732  50F5               	movf	tablat,w,c
 42235  012734  D005               	bra	u16840
 42236  012736                     u16847:
 42237  012736  CFF6 FFE9          	movff	tblptrl,fsr0l
 42238  01273A  CFF7 FFEA          	movff	tblptrh,fsr0h
 42239  01273E  50EF               	movf	indf0,w,c
 42240  012740                     u16840:
 42241  012740  0100               	movlb	0	; () banked
 42242  012742  6F66               	movwf	memcpy@tmp& (0+255),b
 42243                           
 42244                           ; BSR set to: 0
 42245  012744  4B69               	infsnz	memcpy@s& (0+255),f,b
 42246  012746  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 42247                           
 42248                           ; BSR set to: 0
 42249  012748  C067  FFD9         	movff	memcpy@d,fsr2l
 42250  01274C  C068  FFDA         	movff	memcpy@d+1,fsr2h
 42251  012750  C066  FFDF         	movff	memcpy@tmp,indf2
 42252                           
 42253                           ; BSR set to: 0
 42254  012754  4B67               	infsnz	memcpy@d& (0+255),f,b
 42255  012756  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 42256  012758                     l3995:
 42257                           
 42258                           ; BSR set to: 0
 42259  012758  0100               	movlb	0	; () banked
 42260  01275A  0764               	decf	memcpy@n& (0+255),f,b
 42261  01275C  A0D8               	btfss	status,0,c
 42262  01275E  0765               	decf	(memcpy@n+1)& (0+255),f,b
 42263  012760  2964               	incf	memcpy@n& (0+255),w,b
 42264  012762  E1DD               	bnz	l18237
 42265  012764  2965               	incf	(memcpy@n+1)& (0+255),w,b
 42266  012766  B4D8               	btfsc	status,2,c
 42267  012768  0012               	return	
 42268  01276A  D7D9               	goto	l3996
 42269  01276C                     __end_of_memcpy:
 42270                           	opt stack 0
 42271                           tosu	equ	0xFFF
 42272                           tosh	equ	0xFFE
 42273                           tosl	equ	0xFFD
 42274                           pclath	equ	0xFFA
 42275                           tblptru	equ	0xFF8
 42276                           tblptrh	equ	0xFF7
 42277                           tblptrl	equ	0xFF6
 42278                           tablat	equ	0xFF5
 42279                           prodh	equ	0xFF4
 42280                           prodl	equ	0xFF3
 42281                           intcon	equ	0xFF2
 42282                           intcon2	equ	0xFF1
 42283                           intcon3	equ	0xFF0
 42284                           indf0	equ	0xFEF
 42285                           postinc0	equ	0xFEE
 42286                           fsr0h	equ	0xFEA
 42287                           fsr0l	equ	0xFE9
 42288                           wreg	equ	0xFE8
 42289                           indf1	equ	0xFE7
 42290                           postinc1	equ	0xFE6
 42291                           postdec1	equ	0xFE5
 42292                           plusw1	equ	0xFE3
 42293                           fsr1h	equ	0xFE2
 42294                           fsr1l	equ	0xFE1
 42295                           indf2	equ	0xFDF
 42296                           postinc2	equ	0xFDE
 42297                           postdec2	equ	0xFDD
 42298                           plusw2	equ	0xFDB
 42299                           fsr2h	equ	0xFDA
 42300                           fsr2l	equ	0xFD9
 42301                           status	equ	0xFD8
 42302                           
 42303 ;; *************** function _USBTransferOnePacket *****************
 42304 ;; Defined at:
 42305 ;;		line 995 in file "usb_device.c"
 42306 ;; Parameters:    Size  Location     Type
 42307 ;;  ep              1    wreg     unsigned char 
 42308 ;;  dir             1    0[BANK0 ] unsigned char 
 42309 ;;  data            2    1[BANK0 ] PTR unsigned char 
 42310 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 42311 ;;		 -> msd_cbw(31), NULL(0), 
 42312 ;;  len             1    3[BANK0 ] unsigned char 
 42313 ;; Auto vars:     Size  Location     Type
 42314 ;;  ep              1    8[BANK0 ] unsigned char 
 42315 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 42316 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 42317 ;; Return value:  Size  Location     Type
 42318 ;;                  2    0[BANK0 ] PTR void 
 42319 ;; Registers used:
 42320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42321 ;; Tracked objects:
 42322 ;;		On entry : 0/0
 42323 ;;		On exit  : 0/0
 42324 ;;		Unchanged: 0/0
 42325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42327 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42328 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42329 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42330 ;;Total ram usage:       11 bytes
 42331 ;; Hardware stack levels used:    1
 42332 ;; Hardware stack levels required when called:   10
 42333 ;; This function calls:
 42334 ;;		Nothing
 42335 ;; This function is called by:
 42336 ;;		_MSDTasks
 42337 ;;		_MSDProcessCommandMediaPresent
 42338 ;;		_MSDReadHandler
 42339 ;;		_MSDWriteHandler
 42340 ;;		_APP_DeviceCustomHIDTasks
 42341 ;; This function uses a non-reentrant model
 42342 ;;
 42343                           
 42344                           	psect	text212
 42345  00F7EA                     __ptext212:
 42346                           	opt stack 0
 42347  00F7EA                     _USBTransferOnePacket:
 42348                           	opt stack 18
 42349                           
 42350                           ; BSR set to: 0
 42351                           ;incstack = 0
 42352                           ;USBTransferOnePacket@ep stored from wreg
 42353  00F7EA  0100               	movlb	0	; () banked
 42354  00F7EC  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 42355                           
 42356                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 42357  00F7EE  0100               	movlb	0	; () banked
 42358  00F7F0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 42359  00F7F2  B4D8               	btfsc	status,2,c
 42360  00F7F4  D007               	goto	l186
 42361                           
 42362                           ; BSR set to: 0
 42363                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 42364  00F7F6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42365  00F7F8  0D02               	mullw	2
 42366  00F7FA  0E10               	movlw	low _pBDTEntryIn
 42367  00F7FC  24F3               	addwf	prodl,w,c
 42368  00F7FE  6ED9               	movwf	fsr2l,c
 42369  00F800  0E00               	movlw	high _pBDTEntryIn
 42370  00F802  D006               	goto	L50
 42371  00F804                     l186:
 42372                           
 42373                           ; BSR set to: 0
 42374                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 42375                           
 42376                           ; BSR set to: 0
 42377  00F804  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42378  00F806  0D02               	mullw	2
 42379  00F808  0ED3               	movlw	low _pBDTEntryOut
 42380  00F80A  24F3               	addwf	prodl,w,c
 42381  00F80C  6ED9               	movwf	fsr2l,c
 42382  00F80E  0E01               	movlw	high _pBDTEntryOut
 42383  00F810                     L50:
 42384  00F810  20F4               	addwfc	prodh,w,c
 42385  00F812  6EDA               	movwf	fsr2h,c
 42386  00F814  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 42387  00F818  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 42388                           
 42389                           ; BSR set to: 0
 42390                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 42391                           
 42392                           ; BSR set to: 0
 42393  00F81C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42394  00F81E  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42395  00F820  A4D8               	btfss	status,2,c
 42396  00F822  D005               	goto	l188
 42397                           
 42398                           ; BSR set to: 0
 42399                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 42400  00F824  0E00               	movlw	0
 42401  00F826  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 42402  00F828  0E00               	movlw	0
 42403  00F82A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 42404                           
 42405                           ; BSR set to: 0
 42406  00F82C  0012               	return	
 42407  00F82E                     l188:
 42408                           
 42409                           ; BSR set to: 0
 42410                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 42411                           
 42412                           ; BSR set to: 0
 42413  00F82E  EE20 F002          	lfsr	2,2
 42414  00F832  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42415  00F834  26D9               	addwf	fsr2l,f,c
 42416  00F836  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42417  00F838  22DA               	addwfc	fsr2h,f,c
 42418  00F83A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 42419  00F83E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 42420                           
 42421                           ;usb_device.c: 1030: handle->CNT = len;
 42422  00F842  EE20 F001          	lfsr	2,1
 42423  00F846  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 42424  00F848  26D9               	addwf	fsr2l,f,c
 42425  00F84A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 42426  00F84C  22DA               	addwfc	fsr2h,f,c
 42427  00F84E  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 42428                           
 42429                           ; BSR set to: 0
 42430                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 42431  00F852  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42432  00F856  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42433  00F85A  0E40               	movlw	64
 42434  00F85C  16DF               	andwf	indf2,f,c
 42435                           
 42436                           ; BSR set to: 0
 42437                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 42438  00F85E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42439  00F862  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42440  00F866  0E00               	movlw	0
 42441  00F868  86DB               	bsf	plusw2,3,c
 42442                           
 42443                           ; BSR set to: 0
 42444                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 42445  00F86A  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 42446  00F86E  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 42447  00F872  0E00               	movlw	0
 42448  00F874  8EDB               	bsf	plusw2,7,c
 42449                           
 42450                           ; BSR set to: 0
 42451                           ;usb_device.c: 1036: if(dir != 0)
 42452  00F876  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 42453  00F878  B4D8               	btfsc	status,2,c
 42454  00F87A  D018               	goto	l190
 42455                           
 42456                           ; BSR set to: 0
 42457                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 42458  00F87C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42459  00F87E  0D02               	mullw	2
 42460  00F880  0E10               	movlw	low _pBDTEntryIn
 42461  00F882  24F3               	addwf	prodl,w,c
 42462  00F884  6ED9               	movwf	fsr2l,c
 42463  00F886  0E00               	movlw	high _pBDTEntryIn
 42464  00F888  20F4               	addwfc	prodh,w,c
 42465  00F88A  6EDA               	movwf	fsr2h,c
 42466  00F88C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 42467  00F890  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 42468  00F894  0E04               	movlw	4
 42469  00F896  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 42470  00F898  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 42471  00F89A  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 42472  00F89C  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 42473  00F89E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42474  00F8A0  0D02               	mullw	2
 42475  00F8A2  0E10               	movlw	low _pBDTEntryIn
 42476  00F8A4  24F3               	addwf	prodl,w,c
 42477  00F8A6  6ED9               	movwf	fsr2l,c
 42478  00F8A8  0E00               	movlw	high _pBDTEntryIn
 42479  00F8AA  D017               	goto	L51
 42480  00F8AC                     l190:
 42481                           
 42482                           ; BSR set to: 0
 42483                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 42484                           
 42485                           ; BSR set to: 0
 42486  00F8AC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42487  00F8AE  0D02               	mullw	2
 42488  00F8B0  0ED3               	movlw	low _pBDTEntryOut
 42489  00F8B2  24F3               	addwf	prodl,w,c
 42490  00F8B4  6ED9               	movwf	fsr2l,c
 42491  00F8B6  0E01               	movlw	high _pBDTEntryOut
 42492  00F8B8  20F4               	addwfc	prodh,w,c
 42493  00F8BA  6EDA               	movwf	fsr2h,c
 42494  00F8BC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 42495  00F8C0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 42496  00F8C4  0E04               	movlw	4
 42497  00F8C6  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 42498  00F8C8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 42499  00F8CA  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 42500  00F8CC  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 42501  00F8CE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 42502  00F8D0  0D02               	mullw	2
 42503  00F8D2  0ED3               	movlw	low _pBDTEntryOut
 42504  00F8D4  24F3               	addwf	prodl,w,c
 42505  00F8D6  6ED9               	movwf	fsr2l,c
 42506  00F8D8  0E01               	movlw	high _pBDTEntryOut
 42507  00F8DA                     L51:
 42508  00F8DA  20F4               	addwfc	prodh,w,c
 42509  00F8DC  6EDA               	movwf	fsr2h,c
 42510  00F8DE  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 42511  00F8E2  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 42512                           
 42513                           ; BSR set to: 0
 42514                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 42515                           
 42516                           ; BSR set to: 0
 42517  00F8E6  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 42518  00F8EA  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 42519  00F8EE  0012               	return	
 42520  00F8F0                     __end_of_USBTransferOnePacket:
 42521                           	opt stack 0
 42522                           tosu	equ	0xFFF
 42523                           tosh	equ	0xFFE
 42524                           tosl	equ	0xFFD
 42525                           pclath	equ	0xFFA
 42526                           tblptru	equ	0xFF8
 42527                           tblptrh	equ	0xFF7
 42528                           tblptrl	equ	0xFF6
 42529                           tablat	equ	0xFF5
 42530                           prodh	equ	0xFF4
 42531                           prodl	equ	0xFF3
 42532                           intcon	equ	0xFF2
 42533                           intcon2	equ	0xFF1
 42534                           intcon3	equ	0xFF0
 42535                           indf0	equ	0xFEF
 42536                           postinc0	equ	0xFEE
 42537                           fsr0h	equ	0xFEA
 42538                           fsr0l	equ	0xFE9
 42539                           wreg	equ	0xFE8
 42540                           indf1	equ	0xFE7
 42541                           postinc1	equ	0xFE6
 42542                           postdec1	equ	0xFE5
 42543                           plusw1	equ	0xFE3
 42544                           fsr1h	equ	0xFE2
 42545                           fsr1l	equ	0xFE1
 42546                           indf2	equ	0xFDF
 42547                           postinc2	equ	0xFDE
 42548                           postdec2	equ	0xFDD
 42549                           plusw2	equ	0xFDB
 42550                           fsr2h	equ	0xFDA
 42551                           fsr2l	equ	0xFD9
 42552                           status	equ	0xFD8
 42553                           
 42554 ;; *************** function _SYS_InterruptHigh *****************
 42555 ;; Defined at:
 42556 ;;		line 201 in file "system.c"
 42557 ;; Parameters:    Size  Location     Type
 42558 ;;		None
 42559 ;; Auto vars:     Size  Location     Type
 42560 ;;		None
 42561 ;; Return value:  Size  Location     Type
 42562 ;;                  1    wreg      void 
 42563 ;; Registers used:
 42564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 42565 ;; Tracked objects:
 42566 ;;		On entry : 0/0
 42567 ;;		On exit  : 0/0
 42568 ;;		Unchanged: 0/0
 42569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42572 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42573 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42574 ;;Total ram usage:       14 bytes
 42575 ;; Hardware stack levels used:    1
 42576 ;; Hardware stack levels required when called:    9
 42577 ;; This function calls:
 42578 ;;		_USBDeviceTasks
 42579 ;;		_tmr_isr
 42580 ;; This function is called by:
 42581 ;;		Interrupt level 2
 42582 ;; This function uses a non-reentrant model
 42583 ;;
 42584                           
 42585                           	psect	intcode
 42586  00A008                     __pintcode:
 42587                           	opt stack 0
 42588  00A008                     _SYS_InterruptHigh:
 42589                           	opt stack 9
 42590                           
 42591                           ; BSR set to: 0
 42592                           ;incstack = 0
 42593  00A008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 42594  00A00A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 42595  00A00E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 42596  00A012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 42597  00A016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 42598  00A01A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 42599  00A01E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 42600  00A022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 42601  00A026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 42602  00A02A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 42603  00A02E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 42604  00A032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 42605  00A036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 42606  00A03A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 42607  00A03E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 42608                           
 42609                           ;system.c: 204: USBDeviceTasks();
 42610  00A042  EC77  F074         	call	_USBDeviceTasks	;wreg free
 42611                           
 42612                           ;system.c: 208: tmr_isr();
 42613  00A046  ECBB  F089         	call	_tmr_isr	;wreg free
 42614  00A04A  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 42615  00A04E  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 42616  00A052  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 42617  00A056  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 42618  00A05A  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 42619  00A05E  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 42620  00A062  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 42621  00A066  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 42622  00A06A  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 42623  00A06E  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 42624  00A072  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 42625  00A076  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 42626  00A07A  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 42627  00A07E  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 42628  00A082  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 42629  00A084  0011               	retfie		f
 42630  00A086                     __end_of_SYS_InterruptHigh:
 42631                           	opt stack 0
 42632                           tosu	equ	0xFFF
 42633                           tosh	equ	0xFFE
 42634                           tosl	equ	0xFFD
 42635                           pclatu	equ	0xFFB
 42636                           pclath	equ	0xFFA
 42637                           tblptru	equ	0xFF8
 42638                           tblptrh	equ	0xFF7
 42639                           tblptrl	equ	0xFF6
 42640                           tablat	equ	0xFF5
 42641                           prodh	equ	0xFF4
 42642                           prodl	equ	0xFF3
 42643                           intcon	equ	0xFF2
 42644                           intcon2	equ	0xFF1
 42645                           intcon3	equ	0xFF0
 42646                           indf0	equ	0xFEF
 42647                           postinc0	equ	0xFEE
 42648                           fsr0h	equ	0xFEA
 42649                           fsr0l	equ	0xFE9
 42650                           wreg	equ	0xFE8
 42651                           indf1	equ	0xFE7
 42652                           postinc1	equ	0xFE6
 42653                           postdec1	equ	0xFE5
 42654                           plusw1	equ	0xFE3
 42655                           fsr1h	equ	0xFE2
 42656                           fsr1l	equ	0xFE1
 42657                           indf2	equ	0xFDF
 42658                           postinc2	equ	0xFDE
 42659                           postdec2	equ	0xFDD
 42660                           plusw2	equ	0xFDB
 42661                           fsr2h	equ	0xFDA
 42662                           fsr2l	equ	0xFD9
 42663                           status	equ	0xFD8
 42664                           
 42665 ;; *************** function _tmr_isr *****************
 42666 ;; Defined at:
 42667 ;;		line 46 in file "os.c"
 42668 ;; Parameters:    Size  Location     Type
 42669 ;;		None
 42670 ;; Auto vars:     Size  Location     Type
 42671 ;;		None
 42672 ;; Return value:  Size  Location     Type
 42673 ;;                  1    wreg      void 
 42674 ;; Registers used:
 42675 ;;		wreg, status,2, status,0
 42676 ;; Tracked objects:
 42677 ;;		On entry : 0/0
 42678 ;;		On exit  : 0/0
 42679 ;;		Unchanged: 0/0
 42680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42685 ;;Total ram usage:        0 bytes
 42686 ;; Hardware stack levels used:    1
 42687 ;; This function calls:
 42688 ;;		Nothing
 42689 ;; This function is called by:
 42690 ;;		_SYS_InterruptHigh
 42691 ;; This function uses a non-reentrant model
 42692 ;;
 42693                           
 42694                           	psect	text214
 42695  011376                     __ptext214:
 42696                           	opt stack 0
 42697  011376                     _tmr_isr:
 42698                           	opt stack 17
 42699                           
 42700                           ;os.c: 49: if(INTCONbits.T0IF)
 42701                           
 42702                           ;incstack = 0
 42703  011376  A4F2               	btfss	intcon,2,c	;volatile
 42704  011378  D035               	goto	i2l1322
 42705                           
 42706                           ;os.c: 50: {;os.c: 52: if(os.done)
 42707  01137A  0102               	movlb	2	; () banked
 42708  01137C  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 42709  01137E  A4D8               	btfss	status,2,c
 42710  011380  D00D               	goto	i2l1324
 42711  011382  D025               	goto	i2l1330
 42712  011384                     i2l1325:
 42713                           
 42714                           ; BSR set to: 2
 42715                           ;os.c: 58: TMR0H = 0xFF;
 42716  011384  68D7               	setf	4055,c	;volatile
 42717                           
 42718                           ; BSR set to: 2
 42719                           ;os.c: 59: TMR0L = 0x80;
 42720  011386  0E80               	movlw	128
 42721  011388  D007               	goto	L53
 42722  01138A                     
 42723                           ; BSR set to: 2
 42724                           ;os.c: 62: TMR0H = 0xF8;
 42725                           
 42726                           ; BSR set to: 2
 42727  01138A  0EF8               	movlw	248
 42728  01138C  6ED7               	movwf	4055,c	;volatile
 42729                           
 42730                           ;os.c: 63: TMR0L = 0x30;
 42731  01138E  0E30               	movlw	48
 42732  011390  D003               	goto	L53
 42733  011392                     
 42734                           ; BSR set to: 2
 42735                           ;os.c: 66: TMR0H = 0xD1;
 42736                           
 42737                           ; BSR set to: 2
 42738  011392  0ED1               	movlw	209
 42739  011394  6ED7               	movwf	4055,c	;volatile
 42740                           
 42741                           ;os.c: 67: TMR0L = 0x20;
 42742  011396  0E20               	movlw	32
 42743  011398                     L53:
 42744  011398  6ED6               	movwf	4054,c	;volatile
 42745                           
 42746                           ; BSR set to: 2
 42747                           ;os.c: 69: }
 42748                           
 42749                           ;os.c: 68: break;
 42750  01139A  D00A               	goto	i2l1326
 42751  01139C                     i2l1324:
 42752                           
 42753                           ; BSR set to: 2
 42754                           
 42755                           ; BSR set to: 2
 42756  01139C  5100               	movf	_os& (0+255),w,b	;volatile
 42757                           
 42758                           ; Switch size 1, requested type "space"
 42759                           ; Number of cases is 3, Range of values is 0 to 2
 42760                           ; switch strategies available:
 42761                           ; Name         Instructions Cycles
 42762                           ; simple_byte           10     6 (average)
 42763                           ;	Chosen strategy is simple_byte
 42764  01139E  0A00               	xorlw	0	; case 0
 42765  0113A0  B4D8               	btfsc	status,2,c
 42766  0113A2  D7F0               	goto	i2l1325
 42767  0113A4  0A01               	xorlw	1	; case 1
 42768  0113A6  B4D8               	btfsc	status,2,c
 42769  0113A8  D7F0               	goto	i2l1327
 42770  0113AA  0A03               	xorlw	3	; case 2
 42771  0113AC  B4D8               	btfsc	status,2,c
 42772  0113AE  D7F1               	goto	i2l1328
 42773  0113B0                     i2l1326:
 42774                           
 42775                           ; BSR set to: 2
 42776                           ;os.c: 71: ++os.timeSlot;
 42777                           
 42778                           ; BSR set to: 2
 42779  0113B0  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 42780                           
 42781                           ; BSR set to: 2
 42782                           ;os.c: 76: os.done = 0;
 42783  0113B2  0E00               	movlw	0
 42784  0113B4  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 42785                           
 42786                           ;os.c: 77: }
 42787  0113B6  D015               	goto	i2l1332
 42788  0113B8                     i2l1331:
 42789                           
 42790                           ; BSR set to: 2
 42791                           ;os.c: 84: TMR0H = 0xFF;
 42792  0113B8  68D7               	setf	4055,c	;volatile
 42793                           
 42794                           ; BSR set to: 2
 42795                           ;os.c: 85: TMR0L = 0xE0;
 42796  0113BA  0EE0               	movlw	224
 42797  0113BC  D006               	goto	L55
 42798  0113BE                     i2l1333:
 42799                           
 42800                           ; BSR set to: 2
 42801                           ;os.c: 88: TMR0H = 0xFF;
 42802  0113BE  68D7               	setf	4055,c	;volatile
 42803                           
 42804                           ; BSR set to: 2
 42805                           ;os.c: 89: TMR0L = 0x06;
 42806  0113C0  0E06               	movlw	6
 42807  0113C2  D003               	goto	L55
 42808  0113C4                     
 42809                           ; BSR set to: 2
 42810                           ;os.c: 92: TMR0H = 0xFA;
 42811                           
 42812                           ; BSR set to: 2
 42813  0113C4  0EFA               	movlw	250
 42814  0113C6  6ED7               	movwf	4055,c	;volatile
 42815                           
 42816                           ;os.c: 93: TMR0L = 0x24;
 42817  0113C8  0E24               	movlw	36
 42818  0113CA                     L55:
 42819  0113CA  6ED6               	movwf	4054,c	;volatile
 42820                           
 42821                           ; BSR set to: 2
 42822                           ;os.c: 95: }
 42823                           
 42824                           ;os.c: 94: break;
 42825  0113CC  D00A               	goto	i2l1332
 42826  0113CE                     i2l1330:
 42827                           
 42828                           ; BSR set to: 2
 42829                           
 42830                           ; BSR set to: 2
 42831  0113CE  5100               	movf	_os& (0+255),w,b	;volatile
 42832                           
 42833                           ; Switch size 1, requested type "space"
 42834                           ; Number of cases is 3, Range of values is 0 to 2
 42835                           ; switch strategies available:
 42836                           ; Name         Instructions Cycles
 42837                           ; simple_byte           10     6 (average)
 42838                           ;	Chosen strategy is simple_byte
 42839  0113D0  0A00               	xorlw	0	; case 0
 42840  0113D2  B4D8               	btfsc	status,2,c
 42841  0113D4  D7F1               	goto	i2l1331
 42842  0113D6  0A01               	xorlw	1	; case 1
 42843  0113D8  B4D8               	btfsc	status,2,c
 42844  0113DA  D7F1               	goto	i2l1333
 42845  0113DC  0A03               	xorlw	3	; case 2
 42846  0113DE  B4D8               	btfsc	status,2,c
 42847  0113E0  D7F1               	goto	i2l1334
 42848  0113E2                     i2l1332:
 42849                           
 42850                           ; BSR set to: 2
 42851                           ;os.c: 96: };os.c: 97: INTCONbits.T0IF = 0;
 42852                           
 42853                           ; BSR set to: 2
 42854  0113E2  94F2               	bcf	intcon,2,c	;volatile
 42855  0113E4                     i2l1322:
 42856                           
 42857                           ;os.c: 98: };os.c: 101: if(INTCON3bits.INT1IF)
 42858  0113E4  A0F0               	btfss	intcon3,0,c	;volatile
 42859  0113E6  D003               	goto	i2l1335
 42860                           
 42861                           ;os.c: 102: {;os.c: 103: ++os.buttonCount;
 42862  0113E8  0102               	movlb	2	; () banked
 42863  0113EA  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 42864                           
 42865                           ; BSR set to: 2
 42866                           ;os.c: 104: INTCON3bits.INT1IF = 0;
 42867  0113EC  90F0               	bcf	intcon3,0,c	;volatile
 42868  0113EE                     i2l1335:
 42869                           
 42870                           ;os.c: 105: };os.c: 108: if(INTCON3bits.INT2IF)
 42871                           
 42872                           ; BSR set to: 2
 42873  0113EE  A2F0               	btfss	intcon3,1,c	;volatile
 42874  0113F0  D005               	goto	i2l1336
 42875                           
 42876                           ;os.c: 109: {;os.c: 110: if(!PORTBbits.RB6)
 42877  0113F2  BC81               	btfsc	3969,6,c	;volatile
 42878  0113F4  D002               	goto	i2l1337
 42879                           
 42880                           ;os.c: 111: {;os.c: 112: --os.encoderCount;
 42881  0113F6  0102               	movlb	2	; () banked
 42882  0113F8  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 42883  0113FA                     i2l1337:
 42884                           
 42885                           ;os.c: 113: };os.c: 114: INTCON3bits.INT2IF = 0;
 42886                           
 42887                           ; BSR set to: 2
 42888  0113FA  92F0               	bcf	intcon3,1,c	;volatile
 42889  0113FC                     i2l1336:
 42890                           
 42891                           ;os.c: 115: };os.c: 116: if(INTCON3bits.INT3IF)
 42892  0113FC  A4F0               	btfss	intcon3,2,c	;volatile
 42893  0113FE  0012               	return	
 42894                           
 42895                           ;os.c: 117: {;os.c: 118: if(!PORTBbits.RB7)
 42896  011400  BE81               	btfsc	3969,7,c	;volatile
 42897  011402  D002               	goto	i2l1339
 42898                           
 42899                           ;os.c: 119: {;os.c: 120: ++os.encoderCount;
 42900  011404  0102               	movlb	2	; () banked
 42901  011406  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 42902  011408                     i2l1339:
 42903                           
 42904                           ;os.c: 121: };os.c: 122: INTCON3bits.INT3IF = 0;
 42905                           
 42906                           ; BSR set to: 2
 42907  011408  94F0               	bcf	intcon3,2,c	;volatile
 42908  01140A  0012               	return	
 42909  01140C                     __end_of_tmr_isr:
 42910                           	opt stack 0
 42911                           tosu	equ	0xFFF
 42912                           tosh	equ	0xFFE
 42913                           tosl	equ	0xFFD
 42914                           pclatu	equ	0xFFB
 42915                           pclath	equ	0xFFA
 42916                           tblptru	equ	0xFF8
 42917                           tblptrh	equ	0xFF7
 42918                           tblptrl	equ	0xFF6
 42919                           tablat	equ	0xFF5
 42920                           prodh	equ	0xFF4
 42921                           prodl	equ	0xFF3
 42922                           intcon	equ	0xFF2
 42923                           intcon2	equ	0xFF1
 42924                           intcon3	equ	0xFF0
 42925                           indf0	equ	0xFEF
 42926                           postinc0	equ	0xFEE
 42927                           fsr0h	equ	0xFEA
 42928                           fsr0l	equ	0xFE9
 42929                           wreg	equ	0xFE8
 42930                           indf1	equ	0xFE7
 42931                           postinc1	equ	0xFE6
 42932                           postdec1	equ	0xFE5
 42933                           plusw1	equ	0xFE3
 42934                           fsr1h	equ	0xFE2
 42935                           fsr1l	equ	0xFE1
 42936                           indf2	equ	0xFDF
 42937                           postinc2	equ	0xFDE
 42938                           postdec2	equ	0xFDD
 42939                           plusw2	equ	0xFDB
 42940                           fsr2h	equ	0xFDA
 42941                           fsr2l	equ	0xFD9
 42942                           status	equ	0xFD8
 42943                           
 42944 ;; *************** function _USBDeviceTasks *****************
 42945 ;; Defined at:
 42946 ;;		line 477 in file "usb_device.c"
 42947 ;; Parameters:    Size  Location     Type
 42948 ;;		None
 42949 ;; Auto vars:     Size  Location     Type
 42950 ;;  i               1   30[COMRAM] unsigned char 
 42951 ;; Return value:  Size  Location     Type
 42952 ;;                  1    wreg      void 
 42953 ;; Registers used:
 42954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 42955 ;; Tracked objects:
 42956 ;;		On entry : 0/0
 42957 ;;		On exit  : 0/0
 42958 ;;		Unchanged: 0/0
 42959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42964 ;;Total ram usage:        1 bytes
 42965 ;; Hardware stack levels used:    1
 42966 ;; Hardware stack levels required when called:    8
 42967 ;; This function calls:
 42968 ;;		_USBCtrlEPAllowStatusStage
 42969 ;;		_USBCtrlEPService
 42970 ;;		_USBIncrement1msInternalTimers
 42971 ;;		_USBStallHandler
 42972 ;;		_USBSuspend
 42973 ;;		_USBWakeFromSuspend
 42974 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 42975 ;;		i2_USBDeviceInit
 42976 ;; This function is called by:
 42977 ;;		_SYS_InterruptHigh
 42978 ;; This function uses a non-reentrant model
 42979 ;;
 42980                           
 42981                           	psect	text215
 42982  00E8EE                     __ptext215:
 42983                           	opt stack 0
 42984  00E8EE                     _USBDeviceTasks:
 42985                           	opt stack 9
 42986                           
 42987                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 42988                           
 42989                           ;incstack = 0
 42990  00E8EE  042B               	decf	_USBDeviceState,w,c	;volatile
 42991  00E8F0  B4D8               	btfsc	status,2,c
 42992                           
 42993                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 42994  00E8F2  BA65               	btfsc	3941,5,c	;volatile
 42995  00E8F4  D007               	goto	i2l157
 42996                           
 42997                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 42998  00E8F6  0E00               	movlw	0
 42999  00E8F8  6E62               	movwf	3938,c	;volatile
 43000                           
 43001                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 43002  00E8FA  010F               	movlb	15	; () banked
 43003  00E8FC  8136               	bsf	54,0,b	;volatile
 43004                           
 43005                           ; BSR set to: 15
 43006                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 43007  00E8FE  8936               	bsf	54,4,b	;volatile
 43008                           
 43009                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 43010  00E900  0E02               	movlw	2
 43011  00E902  6E2B               	movwf	_USBDeviceState,c	;volatile
 43012  00E904                     i2l157:
 43013                           
 43014                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 43015                           
 43016                           ; BSR set to: 15
 43017                           
 43018                           ; BSR set to: 15
 43019  00E904  A462               	btfss	3938,2,c	;volatile
 43020  00E906  D006               	goto	i2l158
 43021  00E908  010F               	movlb	15	; () banked
 43022  00E90A  A536               	btfss	54,2,b	;volatile
 43023  00E90C  D003               	goto	i2l158
 43024                           
 43025                           ; BSR set to: 15
 43026                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 43027  00E90E  9462               	bcf	3938,2,c	;volatile
 43028                           
 43029                           ; BSR set to: 15
 43030                           ;usb_device.c: 640: USBWakeFromSuspend();
 43031  00E910  EC37  F09A         	call	_USBWakeFromSuspend	;wreg free
 43032  00E914                     i2l158:
 43033                           
 43034                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 43035  00E914  A265               	btfss	3941,1,c	;volatile
 43036  00E916  D002               	goto	i2l159
 43037                           
 43038                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 43039  00E918  98A1               	bcf	4001,4,c	;volatile
 43040                           
 43041                           ;usb_device.c: 650: return;
 43042  00E91A  0012               	return	
 43043  00E91C                     i2l159:
 43044                           
 43045                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 43046  00E91C  A062               	btfss	3938,0,c	;volatile
 43047  00E91E  D009               	goto	i2l161
 43048  00E920  010F               	movlb	15	; () banked
 43049  00E922  A136               	btfss	54,0,b	;volatile
 43050  00E924  D006               	goto	i2l161
 43051                           
 43052                           ; BSR set to: 15
 43053                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 43054  00E926  EC19  F075         	call	i2_USBDeviceInit	;wreg free
 43055                           
 43056                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 43057  00E92A  88A0               	bsf	4000,4,c	;volatile
 43058                           
 43059                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 43060  00E92C  0E04               	movlw	4
 43061  00E92E  6E2B               	movwf	_USBDeviceState,c	;volatile
 43062                           
 43063                           ;usb_device.c: 681: (UIR &= 0xFE);
 43064  00E930  9062               	bcf	3938,0,c	;volatile
 43065  00E932                     i2l161:
 43066                           
 43067                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 43068  00E932  A862               	btfss	3938,4,c	;volatile
 43069  00E934  D004               	goto	i2l162
 43070  00E936  010F               	movlb	15	; () banked
 43071  00E938  B936               	btfsc	54,4,b	;volatile
 43072                           
 43073                           ; BSR set to: 15
 43074                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 43075  00E93A  EC03  F09B         	call	_USBSuspend	;wreg free
 43076  00E93E                     i2l162:
 43077                           
 43078                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 43079  00E93E  AC62               	btfss	3938,6,c	;volatile
 43080  00E940  D01B               	goto	i2l166
 43081                           
 43082                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 43083  00E942  010F               	movlb	15	; () banked
 43084  00E944  AD36               	btfss	54,6,b	;volatile
 43085  00E946  D00E               	goto	i2l164
 43086                           
 43087                           ; BSR set to: 15
 43088                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 43089  00E948  0E00               	movlw	0
 43090  00E94A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43091  00E94C  0E73               	movlw	115
 43092  00E94E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43093  00E950  0E00               	movlw	0
 43094  00E952  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43095  00E954  0E00               	movlw	0
 43096  00E956  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43097  00E958  0E00               	movlw	0
 43098  00E95A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43099  00E95C  0E01               	movlw	1
 43100  00E95E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43101  00E960  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43102  00E964                     i2l164:
 43103                           
 43104                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 43105  00E964  9C62               	bcf	3938,6,c	;volatile
 43106                           
 43107                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 43108  00E966  EC9B  F09D         	call	_USBIncrement1msInternalTimers	;wreg free
 43109                           
 43110                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 43111  00E96A  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43112  00E96C  A4D8               	btfss	status,2,c
 43113                           
 43114                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 43115  00E96E  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 43116                           
 43117                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 43118  00E970  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 43119  00E972  B4D8               	btfsc	status,2,c
 43120                           
 43121                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 43122  00E974  EC53  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 43123  00E978                     i2l166:
 43124                           
 43125                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 43126  00E978  AA62               	btfss	3938,5,c	;volatile
 43127  00E97A  D004               	goto	i2l167
 43128  00E97C  010F               	movlb	15	; () banked
 43129  00E97E  BB36               	btfsc	54,5,b	;volatile
 43130                           
 43131                           ; BSR set to: 15
 43132                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 43133  00E980  EC06  F099         	call	_USBStallHandler	;wreg free
 43134  00E984                     i2l167:
 43135                           
 43136                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 43137  00E984  A262               	btfss	3938,1,c	;volatile
 43138  00E986  D012               	goto	i2l168
 43139  00E988  010F               	movlb	15	; () banked
 43140  00E98A  A336               	btfss	54,1,b	;volatile
 43141  00E98C  D00F               	goto	i2l168
 43142                           
 43143                           ; BSR set to: 15
 43144                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 43145  00E98E  0E7F               	movlw	127
 43146  00E990  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43147  00E992  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43148  00E994  0E00               	movlw	0
 43149  00E996  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43150  00E998  0E00               	movlw	0
 43151  00E99A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43152  00E99C  0E00               	movlw	0
 43153  00E99E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43154  00E9A0  0E01               	movlw	1
 43155  00E9A2  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43156  00E9A4  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43157                           
 43158                           ;usb_device.c: 759: {UEIR = 0;};
 43159  00E9A8  0E00               	movlw	0
 43160  00E9AA  6E63               	movwf	3939,c	;volatile
 43161  00E9AC                     i2l168:
 43162                           
 43163                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 43164  00E9AC  0E04               	movlw	4
 43165  00E9AE  602B               	cpfslt	_USBDeviceState,c	;volatile
 43166  00E9B0  D002               	goto	i2l169
 43167                           
 43168                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 43169  00E9B2  98A1               	bcf	4001,4,c	;volatile
 43170                           
 43171                           ;usb_device.c: 777: return;
 43172  00E9B4  0012               	return	
 43173  00E9B6                     i2l169:
 43174                           
 43175                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 43176  00E9B6  010F               	movlb	15	; () banked
 43177  00E9B8  A736               	btfss	54,3,b	;volatile
 43178  00E9BA  D039               	goto	i2u2209_40
 43179                           
 43180                           ; BSR set to: 15
 43181                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 43182  00E9BC  0E00               	movlw	0
 43183  00E9BE  6E4C               	movwf	USBDeviceTasks@i,c
 43184  00E9C0                     i2l22265:
 43185                           
 43186                           ; BSR set to: 15
 43187  00E9C0  0E03               	movlw	3
 43188  00E9C2  644C               	cpfsgt	USBDeviceTasks@i,c
 43189  00E9C4  D001               	goto	i2l171
 43190  00E9C6  D033               	goto	i2u2209_40
 43191  00E9C8                     i2l171:
 43192                           
 43193                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 43194  00E9C8  A662               	btfss	3938,3,c	;volatile
 43195  00E9CA  D031               	goto	i2u2209_40
 43196                           
 43197                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 43198  00E9CC  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 43199                           
 43200                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 43201  00E9D0  302C               	rrcf	_USTATcopy,w,c	;volatile
 43202  00E9D2  32E8               	rrcf	wreg,f,c
 43203  00E9D4  32E8               	rrcf	wreg,f,c
 43204  00E9D6  0B0F               	andlw	15
 43205  00E9D8  6E26               	movwf	_endpoint_number,c	;volatile
 43206                           
 43207                           ;usb_device.c: 793: (UIR &= 0xF7);
 43208  00E9DA  9662               	bcf	3938,3,c	;volatile
 43209                           
 43210                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 43211  00E9DC  B42C               	btfsc	_USTATcopy,2,c	;volatile
 43212  00E9DE  D007               	goto	i2l174
 43213                           
 43214                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 43215  00E9E0  5026               	movf	_endpoint_number,w,c	;volatile
 43216  00E9E2  0D01               	mullw	1
 43217  00E9E4  0EE1               	movlw	low _ep_data_out
 43218  00E9E6  24F3               	addwf	prodl,w,c
 43219  00E9E8  6ED9               	movwf	fsr2l,c
 43220  00E9EA  0E01               	movlw	high _ep_data_out
 43221  00E9EC  D006               	goto	L56
 43222  00E9EE                     i2l174:
 43223                           
 43224                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 43225                           
 43226                           ; BSR set to: 1
 43227  00E9EE  5026               	movf	_endpoint_number,w,c	;volatile
 43228  00E9F0  0D01               	mullw	1
 43229  00E9F2  0EE4               	movlw	low _ep_data_in
 43230  00E9F4  24F3               	addwf	prodl,w,c
 43231  00E9F6  6ED9               	movwf	fsr2l,c
 43232  00E9F8  0E01               	movlw	high _ep_data_in
 43233  00E9FA                     L56:
 43234  00E9FA  20F4               	addwfc	prodh,w,c
 43235  00E9FC  6EDA               	movwf	fsr2h,c
 43236  00E9FE  0101               	movlb	1	; () banked
 43237  00EA00  70DF               	btg	indf2,0,c
 43238                           
 43239                           ; BSR set to: 1
 43240                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 43241                           
 43242                           ; BSR set to: 1
 43243  00EA02  5026               	movf	_endpoint_number,w,c	;volatile
 43244  00EA04  A4D8               	btfss	status,2,c
 43245  00EA06  D003               	goto	i2l176
 43246                           
 43247                           ; BSR set to: 1
 43248                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 43249  00EA08  EC06  F08A         	call	_USBCtrlEPService	;wreg free
 43250                           
 43251                           ;usb_device.c: 813: }
 43252  00EA0C  D00E               	goto	i2l178
 43253  00EA0E                     i2l176:
 43254                           
 43255                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 43256  00EA0E  0E00               	movlw	0
 43257  00EA10  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43258  00EA12  0E72               	movlw	114
 43259  00EA14  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43260  00EA16  0E2C               	movlw	low _USTATcopy
 43261  00EA18  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43262  00EA1A  0E00               	movlw	high _USTATcopy
 43263  00EA1C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43264  00EA1E  0E00               	movlw	0
 43265  00EA20  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43266  00EA22  0E00               	movlw	0
 43267  00EA24  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43268  00EA26  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43269  00EA2A                     i2l178:
 43270  00EA2A  2A4C               	incf	USBDeviceTasks@i,f,c
 43271  00EA2C  D7C9               	goto	i2l22265
 43272  00EA2E                     i2u2209_40:
 43273                           
 43274                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 43275  00EA2E  98A1               	bcf	4001,4,c	;volatile
 43276  00EA30  0012               	return		;funcret
 43277  00EA32                     __end_of_USBDeviceTasks:
 43278                           	opt stack 0
 43279                           tosu	equ	0xFFF
 43280                           tosh	equ	0xFFE
 43281                           tosl	equ	0xFFD
 43282                           pclatu	equ	0xFFB
 43283                           pclath	equ	0xFFA
 43284                           tblptru	equ	0xFF8
 43285                           tblptrh	equ	0xFF7
 43286                           tblptrl	equ	0xFF6
 43287                           tablat	equ	0xFF5
 43288                           prodh	equ	0xFF4
 43289                           prodl	equ	0xFF3
 43290                           intcon	equ	0xFF2
 43291                           intcon2	equ	0xFF1
 43292                           intcon3	equ	0xFF0
 43293                           indf0	equ	0xFEF
 43294                           postinc0	equ	0xFEE
 43295                           fsr0h	equ	0xFEA
 43296                           fsr0l	equ	0xFE9
 43297                           wreg	equ	0xFE8
 43298                           indf1	equ	0xFE7
 43299                           postinc1	equ	0xFE6
 43300                           postdec1	equ	0xFE5
 43301                           plusw1	equ	0xFE3
 43302                           fsr1h	equ	0xFE2
 43303                           fsr1l	equ	0xFE1
 43304                           indf2	equ	0xFDF
 43305                           postinc2	equ	0xFDE
 43306                           postdec2	equ	0xFDD
 43307                           plusw2	equ	0xFDB
 43308                           fsr2h	equ	0xFDA
 43309                           fsr2l	equ	0xFD9
 43310                           status	equ	0xFD8
 43311                           
 43312 ;; *************** function i2_USBDeviceInit *****************
 43313 ;; Defined at:
 43314 ;;		line 277 in file "usb_device.c"
 43315 ;; Parameters:    Size  Location     Type
 43316 ;;		None
 43317 ;; Auto vars:     Size  Location     Type
 43318 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 43319 ;; Return value:  Size  Location     Type
 43320 ;;                  1    wreg      void 
 43321 ;; Registers used:
 43322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43323 ;; Tracked objects:
 43324 ;;		On entry : 0/0
 43325 ;;		On exit  : 0/0
 43326 ;;		Unchanged: 0/0
 43327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43332 ;;Total ram usage:        1 bytes
 43333 ;; Hardware stack levels used:    1
 43334 ;; Hardware stack levels required when called:    1
 43335 ;; This function calls:
 43336 ;;		i2_memset
 43337 ;; This function is called by:
 43338 ;;		_USBDeviceTasks
 43339 ;; This function uses a non-reentrant model
 43340 ;;
 43341                           
 43342                           	psect	text216
 43343  00EA32                     __ptext216:
 43344                           	opt stack 0
 43345  00EA32                     i2_USBDeviceInit:
 43346                           	opt stack 15
 43347                           
 43348                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 43349                           
 43350                           ;incstack = 0
 43351  00EA32  98A0               	bcf	4000,4,c	;volatile
 43352                           
 43353                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 43354  00EA34  0E00               	movlw	0
 43355  00EA36  6E63               	movwf	3939,c	;volatile
 43356                           
 43357                           ;usb_device.c: 291: {UIR = 0;};
 43358  00EA38  0E00               	movlw	0
 43359  00EA3A  6E62               	movwf	3938,c	;volatile
 43360                           
 43361                           ;usb_device.c: 294: UEP0 = 0;
 43362  00EA3C  0E00               	movlw	0
 43363  00EA3E  010F               	movlb	15	; () banked
 43364  00EA40  6F26               	movwf	38,b	;volatile
 43365                           
 43366                           ; BSR set to: 15
 43367                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 43368  00EA42  0E27               	movlw	39
 43369  00EA44  6E2E               	movwf	i2memset@p1,c
 43370  00EA46  0E0F               	movlw	15
 43371  00EA48  6E2F               	movwf	i2memset@p1+1,c
 43372  00EA4A  0E00               	movlw	0
 43373  00EA4C  6E31               	movwf	i2memset@c+1,c
 43374  00EA4E  0E00               	movlw	0
 43375  00EA50  6E30               	movwf	i2memset@c,c
 43376  00EA52  0E00               	movlw	0
 43377  00EA54  6E33               	movwf	i2memset@n+1,c
 43378  00EA56  0E02               	movlw	2
 43379  00EA58  6E32               	movwf	i2memset@n,c
 43380  00EA5A  ECE5  F09B         	call	i2_memset	;wreg free
 43381                           
 43382                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 43383  00EA5E  0E16               	movlw	22
 43384  00EA60  010F               	movlb	15	; () banked
 43385  00EA62  6F39               	movwf	57,b	;volatile
 43386                           
 43387                           ; BSR set to: 15
 43388  00EA64  0E9F               	movlw	159
 43389  00EA66  6F37               	movwf	55,b	;volatile
 43390                           
 43391                           ; BSR set to: 15
 43392  00EA68  0E7B               	movlw	123
 43393  00EA6A  6F36               	movwf	54,b	;volatile
 43394                           
 43395                           ; BSR set to: 15
 43396                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 43397  00EA6C  0E00               	movlw	0
 43398  00EA6E  6E36               	movwf	i2USBDeviceInit@i,c
 43399  00EA70                     i2l16187:
 43400                           
 43401                           ; BSR set to: 15
 43402  00EA70  0E0B               	movlw	11
 43403  00EA72  6436               	cpfsgt	i2USBDeviceInit@i,c
 43404  00EA74  D001               	goto	i2l147
 43405  00EA76  D00E               	goto	i2u1463_40
 43406  00EA78                     i2l147:
 43407                           
 43408                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 43409                           
 43410                           ; BSR set to: 15
 43411  00EA78  5036               	movf	i2USBDeviceInit@i,w,c
 43412  00EA7A  0D04               	mullw	4
 43413  00EA7C  0E00               	movlw	0
 43414  00EA7E  24F3               	addwf	prodl,w,c
 43415  00EA80  6ED9               	movwf	fsr2l,c
 43416  00EA82  0E0D               	movlw	13
 43417  00EA84  20F4               	addwfc	prodh,w,c
 43418  00EA86  6EDA               	movwf	fsr2h,c
 43419  00EA88  6ADE               	clrf	postinc2,c
 43420  00EA8A  6ADE               	clrf	postinc2,c
 43421  00EA8C  6ADE               	clrf	postinc2,c
 43422  00EA8E  6ADD               	clrf	postdec2,c
 43423  00EA90  2A36               	incf	i2USBDeviceInit@i,f,c
 43424  00EA92  D7EE               	goto	i2l16187
 43425  00EA94                     i2u1463_40:
 43426                           
 43427                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 43428  00EA94  8C65               	bsf	3941,6,c	;volatile
 43429                           
 43430                           ;usb_device.c: 316: UADDR = 0x00;
 43431  00EA96  0E00               	movlw	0
 43432  00EA98  010F               	movlb	15	; () banked
 43433  00EA9A  6F38               	movwf	56,b	;volatile
 43434                           
 43435                           ; BSR set to: 15
 43436                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 43437  00EA9C  9865               	bcf	3941,4,c	;volatile
 43438                           
 43439                           ; BSR set to: 15
 43440                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 43441  00EA9E  9C65               	bcf	3941,6,c	;volatile
 43442  00EAA0                     
 43443                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 43444                           
 43445                           ; BSR set to: 15
 43446  00EAA0  9662               	bcf	3938,3,c	;volatile
 43447                           
 43448                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 43449  00EAA2  0E00               	movlw	0
 43450  00EAA4  6E0D               	movwf	_inPipes+3,c	;volatile
 43451                           
 43452                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 43453  00EAA6  0E00               	movlw	0
 43454  00EAA8  6E04               	movwf	_outPipes+3,c	;volatile
 43455                           
 43456                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 43457  00EAAA  0E00               	movlw	0
 43458  00EAAC  6E06               	movwf	_outPipes+5,c	;volatile
 43459  00EAAE  0E00               	movlw	0
 43460  00EAB0  6E05               	movwf	_outPipes+4,c	;volatile
 43461                           
 43462                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 43463  00EAB2  B662               	btfsc	3938,3,c	;volatile
 43464  00EAB4  D7F5               	goto	i2l149
 43465                           
 43466                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 43467  00EAB6  0E01               	movlw	1
 43468  00EAB8  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 43469                           
 43470                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 43471  00EABA  0E01               	movlw	1
 43472  00EABC  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 43473                           
 43474                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 43475  00EABE  0E00               	movlw	0
 43476  00EAC0  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 43477                           
 43478                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 43479  00EAC2  0E00               	movlw	0
 43480  00EAC4  0101               	movlb	1	; () banked
 43481  00EAC6  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 43482                           
 43483                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 43484  00EAC8  0E00               	movlw	0
 43485  00EACA  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 43486                           
 43487                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 43488  00EACC  0E00               	movlw	0
 43489  00EACE  6E36               	movwf	i2USBDeviceInit@i,c
 43490  00EAD0                     i2l16215:
 43491                           
 43492                           ; BSR set to: 1
 43493  00EAD0  0E02               	movlw	2
 43494  00EAD2  6436               	cpfsgt	i2USBDeviceInit@i,c
 43495  00EAD4  D001               	goto	i2l151
 43496  00EAD6  D02E               	goto	i2u1466_40
 43497  00EAD8                     i2l151:
 43498                           
 43499                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 43500                           
 43501                           ; BSR set to: 1
 43502  00EAD8  5036               	movf	i2USBDeviceInit@i,w,c
 43503  00EADA  0D02               	mullw	2
 43504  00EADC  0E10               	movlw	low _pBDTEntryIn
 43505  00EADE  24F3               	addwf	prodl,w,c
 43506  00EAE0  6ED9               	movwf	fsr2l,c
 43507  00EAE2  0E00               	movlw	high _pBDTEntryIn
 43508  00EAE4  20F4               	addwfc	prodh,w,c
 43509  00EAE6  6EDA               	movwf	fsr2h,c
 43510  00EAE8  0E00               	movlw	0
 43511  00EAEA  6EDE               	movwf	postinc2,c
 43512  00EAEC  0E00               	movlw	0
 43513  00EAEE  6EDD               	movwf	postdec2,c
 43514                           
 43515                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 43516  00EAF0  5036               	movf	i2USBDeviceInit@i,w,c
 43517  00EAF2  0D02               	mullw	2
 43518  00EAF4  0ED3               	movlw	low _pBDTEntryOut
 43519  00EAF6  24F3               	addwf	prodl,w,c
 43520  00EAF8  6ED9               	movwf	fsr2l,c
 43521  00EAFA  0E01               	movlw	high _pBDTEntryOut
 43522  00EAFC  20F4               	addwfc	prodh,w,c
 43523  00EAFE  6EDA               	movwf	fsr2h,c
 43524  00EB00  0E00               	movlw	0
 43525  00EB02  6EDE               	movwf	postinc2,c
 43526  00EB04  0E00               	movlw	0
 43527  00EB06  6EDD               	movwf	postdec2,c
 43528                           
 43529                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 43530  00EB08  5036               	movf	i2USBDeviceInit@i,w,c
 43531  00EB0A  0D01               	mullw	1
 43532  00EB0C  0EE4               	movlw	low _ep_data_in
 43533  00EB0E  24F3               	addwf	prodl,w,c
 43534  00EB10  6ED9               	movwf	fsr2l,c
 43535  00EB12  0E01               	movlw	high _ep_data_in
 43536  00EB14  20F4               	addwfc	prodh,w,c
 43537  00EB16  6EDA               	movwf	fsr2h,c
 43538  00EB18  0E00               	movlw	0
 43539  00EB1A  6EDF               	movwf	indf2,c
 43540                           
 43541                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 43542  00EB1C  5036               	movf	i2USBDeviceInit@i,w,c
 43543  00EB1E  0D01               	mullw	1
 43544  00EB20  0EE1               	movlw	low _ep_data_out
 43545  00EB22  24F3               	addwf	prodl,w,c
 43546  00EB24  6ED9               	movwf	fsr2l,c
 43547  00EB26  0E01               	movlw	high _ep_data_out
 43548  00EB28  20F4               	addwfc	prodh,w,c
 43549  00EB2A  6EDA               	movwf	fsr2h,c
 43550  00EB2C  0E00               	movlw	0
 43551  00EB2E  6EDF               	movwf	indf2,c
 43552  00EB30  2A36               	incf	i2USBDeviceInit@i,f,c
 43553  00EB32  D7CE               	goto	i2l16215
 43554  00EB34                     i2u1466_40:
 43555                           
 43556                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 43557  00EB34  0E08               	movlw	8
 43558  00EB36  6E10               	movwf	_pBDTEntryIn,c
 43559  00EB38  0E0D               	movlw	13
 43560  00EB3A  6E11               	movwf	_pBDTEntryIn+1,c
 43561                           
 43562                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 43563  00EB3C  0E16               	movlw	22
 43564  00EB3E  010F               	movlb	15	; () banked
 43565  00EB40  6F26               	movwf	38,b	;volatile
 43566                           
 43567                           ; BSR set to: 15
 43568                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 43569  00EB42  0E0D               	movlw	13
 43570  00EB44  010D               	movlb	13	; () banked
 43571  00EB46  6F03               	movwf	3,b	;volatile
 43572  00EB48  0E30               	movlw	48
 43573  00EB4A  6F02               	movwf	2,b	;volatile
 43574                           
 43575                           ; BSR set to: 13
 43576                           ;usb_device.c: 359: BDT[0].CNT = 8;
 43577  00EB4C  0E08               	movlw	8
 43578  00EB4E  6F01               	movwf	1,b	;volatile
 43579                           
 43580                           ; BSR set to: 13
 43581                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 43582  00EB50  0E04               	movlw	4
 43583  00EB52  6F00               	movwf	0,b	;volatile
 43584                           
 43585                           ; BSR set to: 13
 43586                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 43587  00EB54  8F00               	bsf	0,7,b	;volatile
 43588                           
 43589                           ; BSR set to: 13
 43590                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 43591  00EB56  0E00               	movlw	0
 43592  00EB58  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 43593                           
 43594                           ; BSR set to: 13
 43595                           ;usb_device.c: 366: USB1msTickCount = 0;
 43596  00EB5A  0E00               	movlw	0
 43597  00EB5C  0101               	movlb	1	; () banked
 43598  00EB5E  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 43599  00EB60  0E00               	movlw	0
 43600  00EB62  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 43601  00EB64  0E00               	movlw	0
 43602  00EB66  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 43603  00EB68  0E00               	movlw	0
 43604  00EB6A  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 43605                           
 43606                           ; BSR set to: 1
 43607                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 43608  00EB6C  0E00               	movlw	0
 43609  00EB6E  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43610                           
 43611                           ; BSR set to: 1
 43612                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 43613  00EB70  0E00               	movlw	0
 43614  00EB72  6E2B               	movwf	_USBDeviceState,c	;volatile
 43615                           
 43616                           ; BSR set to: 1
 43617  00EB74  0012               	return		;funcret
 43618  00EB76                     __end_ofi2_USBDeviceInit:
 43619                           	opt stack 0
 43620                           tosu	equ	0xFFF
 43621                           tosh	equ	0xFFE
 43622                           tosl	equ	0xFFD
 43623                           pclatu	equ	0xFFB
 43624                           pclath	equ	0xFFA
 43625                           tblptru	equ	0xFF8
 43626                           tblptrh	equ	0xFF7
 43627                           tblptrl	equ	0xFF6
 43628                           tablat	equ	0xFF5
 43629                           prodh	equ	0xFF4
 43630                           prodl	equ	0xFF3
 43631                           intcon	equ	0xFF2
 43632                           intcon2	equ	0xFF1
 43633                           intcon3	equ	0xFF0
 43634                           indf0	equ	0xFEF
 43635                           postinc0	equ	0xFEE
 43636                           fsr0h	equ	0xFEA
 43637                           fsr0l	equ	0xFE9
 43638                           wreg	equ	0xFE8
 43639                           indf1	equ	0xFE7
 43640                           postinc1	equ	0xFE6
 43641                           postdec1	equ	0xFE5
 43642                           plusw1	equ	0xFE3
 43643                           fsr1h	equ	0xFE2
 43644                           fsr1l	equ	0xFE1
 43645                           indf2	equ	0xFDF
 43646                           postinc2	equ	0xFDE
 43647                           postdec2	equ	0xFDD
 43648                           plusw2	equ	0xFDB
 43649                           fsr2h	equ	0xFDA
 43650                           fsr2l	equ	0xFD9
 43651                           status	equ	0xFD8
 43652                           
 43653 ;; *************** function _USBWakeFromSuspend *****************
 43654 ;; Defined at:
 43655 ;;		line 2305 in file "usb_device.c"
 43656 ;; Parameters:    Size  Location     Type
 43657 ;;		None
 43658 ;; Auto vars:     Size  Location     Type
 43659 ;;		None
 43660 ;; Return value:  Size  Location     Type
 43661 ;;                  1    wreg      void 
 43662 ;; Registers used:
 43663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 43664 ;; Tracked objects:
 43665 ;;		On entry : 0/0
 43666 ;;		On exit  : 0/0
 43667 ;;		Unchanged: 0/0
 43668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43673 ;;Total ram usage:        0 bytes
 43674 ;; Hardware stack levels used:    1
 43675 ;; Hardware stack levels required when called:    4
 43676 ;; This function calls:
 43677 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 43678 ;; This function is called by:
 43679 ;;		_USBDeviceTasks
 43680 ;; This function uses a non-reentrant model
 43681 ;;
 43682                           
 43683                           	psect	text217
 43684  01346E                     __ptext217:
 43685                           	opt stack 0
 43686  01346E                     _USBWakeFromSuspend:
 43687                           	opt stack 12
 43688                           
 43689                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 43690                           
 43691                           ; BSR set to: 1
 43692                           ;incstack = 0
 43693  01346E  0E00               	movlw	0
 43694  013470  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 43695                           
 43696                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 43697  013472  0E00               	movlw	0
 43698  013474  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43699  013476  0E74               	movlw	116
 43700  013478  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43701  01347A  0E00               	movlw	0
 43702  01347C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43703  01347E  0E00               	movlw	0
 43704  013480  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43705  013482  0E00               	movlw	0
 43706  013484  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43707  013486  0E00               	movlw	0
 43708  013488  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43709  01348A  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43710                           
 43711                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 43712  01348E  9265               	bcf	3941,1,c	;volatile
 43713                           
 43714                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 43715  013490  010F               	movlb	15	; () banked
 43716  013492  9536               	bcf	54,2,b	;volatile
 43717                           
 43718                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 43719  013494  D001               	goto	i2l317
 43720  013496                     
 43721                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 43722                           
 43723                           ; BSR set to: 15
 43724  013496  9462               	bcf	3938,2,c	;volatile
 43725  013498                     i2l317:
 43726  013498  B462               	btfsc	3938,2,c	;volatile
 43727  01349A  D7FD               	goto	i2l318
 43728                           
 43729                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 43730  01349C  0E00               	movlw	0
 43731  01349E  0101               	movlb	1	; () banked
 43732  0134A0  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43733                           
 43734                           ; BSR set to: 1
 43735  0134A2  0012               	return		;funcret
 43736  0134A4                     __end_of_USBWakeFromSuspend:
 43737                           	opt stack 0
 43738                           tosu	equ	0xFFF
 43739                           tosh	equ	0xFFE
 43740                           tosl	equ	0xFFD
 43741                           pclatu	equ	0xFFB
 43742                           pclath	equ	0xFFA
 43743                           tblptru	equ	0xFF8
 43744                           tblptrh	equ	0xFF7
 43745                           tblptrl	equ	0xFF6
 43746                           tablat	equ	0xFF5
 43747                           prodh	equ	0xFF4
 43748                           prodl	equ	0xFF3
 43749                           intcon	equ	0xFF2
 43750                           intcon2	equ	0xFF1
 43751                           intcon3	equ	0xFF0
 43752                           indf0	equ	0xFEF
 43753                           postinc0	equ	0xFEE
 43754                           fsr0h	equ	0xFEA
 43755                           fsr0l	equ	0xFE9
 43756                           wreg	equ	0xFE8
 43757                           indf1	equ	0xFE7
 43758                           postinc1	equ	0xFE6
 43759                           postdec1	equ	0xFE5
 43760                           plusw1	equ	0xFE3
 43761                           fsr1h	equ	0xFE2
 43762                           fsr1l	equ	0xFE1
 43763                           indf2	equ	0xFDF
 43764                           postinc2	equ	0xFDE
 43765                           postdec2	equ	0xFDD
 43766                           plusw2	equ	0xFDB
 43767                           fsr2h	equ	0xFDA
 43768                           fsr2l	equ	0xFD9
 43769                           status	equ	0xFD8
 43770                           
 43771 ;; *************** function _USBSuspend *****************
 43772 ;; Defined at:
 43773 ;;		line 2247 in file "usb_device.c"
 43774 ;; Parameters:    Size  Location     Type
 43775 ;;		None
 43776 ;; Auto vars:     Size  Location     Type
 43777 ;;		None
 43778 ;; Return value:  Size  Location     Type
 43779 ;;                  1    wreg      void 
 43780 ;; Registers used:
 43781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 43782 ;; Tracked objects:
 43783 ;;		On entry : 0/0
 43784 ;;		On exit  : 0/0
 43785 ;;		Unchanged: 0/0
 43786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43791 ;;Total ram usage:        0 bytes
 43792 ;; Hardware stack levels used:    1
 43793 ;; Hardware stack levels required when called:    4
 43794 ;; This function calls:
 43795 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 43796 ;; This function is called by:
 43797 ;;		_USBDeviceTasks
 43798 ;; This function uses a non-reentrant model
 43799 ;;
 43800                           
 43801                           	psect	text218
 43802  013606                     __ptext218:
 43803                           	opt stack 0
 43804  013606                     _USBSuspend:
 43805                           	opt stack 12
 43806                           
 43807                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 43808                           
 43809                           ; BSR set to: 1
 43810                           ;incstack = 0
 43811  013606  010F               	movlb	15	; () banked
 43812  013608  8536               	bsf	54,2,b	;volatile
 43813                           
 43814                           ; BSR set to: 15
 43815                           ;usb_device.c: 2273: (UIR &= 0xEF);
 43816  01360A  9862               	bcf	3938,4,c	;volatile
 43817                           
 43818                           ; BSR set to: 15
 43819                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 43820  01360C  8265               	bsf	3941,1,c	;volatile
 43821                           
 43822                           ; BSR set to: 15
 43823                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 43824  01360E  0E01               	movlw	1
 43825  013610  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 43826                           
 43827                           ; BSR set to: 15
 43828                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 43829  013612  0E00               	movlw	0
 43830  013614  0101               	movlb	1	; () banked
 43831  013616  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 43832                           
 43833                           ; BSR set to: 1
 43834                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 43835  013618  0E00               	movlw	0
 43836  01361A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 43837  01361C  0E75               	movlw	117
 43838  01361E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 43839  013620  0E00               	movlw	0
 43840  013622  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 43841  013624  0E00               	movlw	0
 43842  013626  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 43843  013628  0E00               	movlw	0
 43844  01362A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 43845  01362C  0E00               	movlw	0
 43846  01362E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 43847  013630  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 43848  013634  0012               	return		;funcret
 43849  013636                     __end_of_USBSuspend:
 43850                           	opt stack 0
 43851                           tosu	equ	0xFFF
 43852                           tosh	equ	0xFFE
 43853                           tosl	equ	0xFFD
 43854                           pclatu	equ	0xFFB
 43855                           pclath	equ	0xFFA
 43856                           tblptru	equ	0xFF8
 43857                           tblptrh	equ	0xFF7
 43858                           tblptrl	equ	0xFF6
 43859                           tablat	equ	0xFF5
 43860                           prodh	equ	0xFF4
 43861                           prodl	equ	0xFF3
 43862                           intcon	equ	0xFF2
 43863                           intcon2	equ	0xFF1
 43864                           intcon3	equ	0xFF0
 43865                           indf0	equ	0xFEF
 43866                           postinc0	equ	0xFEE
 43867                           fsr0h	equ	0xFEA
 43868                           fsr0l	equ	0xFE9
 43869                           wreg	equ	0xFE8
 43870                           indf1	equ	0xFE7
 43871                           postinc1	equ	0xFE6
 43872                           postdec1	equ	0xFE5
 43873                           plusw1	equ	0xFE3
 43874                           fsr1h	equ	0xFE2
 43875                           fsr1l	equ	0xFE1
 43876                           indf2	equ	0xFDF
 43877                           postinc2	equ	0xFDE
 43878                           postdec2	equ	0xFDD
 43879                           plusw2	equ	0xFDB
 43880                           fsr2h	equ	0xFDA
 43881                           fsr2l	equ	0xFD9
 43882                           status	equ	0xFD8
 43883                           
 43884 ;; *************** function _USBStallHandler *****************
 43885 ;; Defined at:
 43886 ;;		line 2204 in file "usb_device.c"
 43887 ;; Parameters:    Size  Location     Type
 43888 ;;		None
 43889 ;; Auto vars:     Size  Location     Type
 43890 ;;		None
 43891 ;; Return value:  Size  Location     Type
 43892 ;;                  1    wreg      void 
 43893 ;; Registers used:
 43894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43895 ;; Tracked objects:
 43896 ;;		On entry : 0/0
 43897 ;;		On exit  : 0/0
 43898 ;;		Unchanged: 0/0
 43899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43904 ;;Total ram usage:        1 bytes
 43905 ;; Hardware stack levels used:    1
 43906 ;; This function calls:
 43907 ;;		Nothing
 43908 ;; This function is called by:
 43909 ;;		_USBDeviceTasks
 43910 ;; This function uses a non-reentrant model
 43911 ;;
 43912                           
 43913                           	psect	text219
 43914  01320C                     __ptext219:
 43915                           	opt stack 0
 43916  01320C                     _USBStallHandler:
 43917                           	opt stack 16
 43918                           
 43919                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 43920                           
 43921                           ;incstack = 0
 43922  01320C  010F               	movlb	15	; () banked
 43923  01320E  A126               	btfss	38,0,b	;volatile
 43924  013210  D01D               	goto	i2l309
 43925                           
 43926                           ; BSR set to: 15
 43927                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 43928  013212  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 43929  013216  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 43930  01321A  0E80               	movlw	128
 43931  01321C  18DE               	xorwf	postinc2,w,c
 43932  01321E  A4D8               	btfss	status,2,c
 43933  013220  D014               	goto	i2l310
 43934                           
 43935                           ; BSR set to: 15
 43936  013222  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 43937  013226  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 43938  01322A  0E84               	movlw	132
 43939  01322C  18DE               	xorwf	postinc2,w,c
 43940  01322E  A4D8               	btfss	status,2,c
 43941  013230  D00C               	goto	i2l310
 43942                           
 43943                           ; BSR set to: 15
 43944                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 43945  013232  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 43946  013236  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 43947  01323A  0E0C               	movlw	12
 43948  01323C  6EDF               	movwf	indf2,c
 43949                           
 43950                           ; BSR set to: 15
 43951                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 43952  01323E  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 43953  013242  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 43954  013246  0E00               	movlw	0
 43955  013248  8EDB               	bsf	plusw2,7,c
 43956  01324A                     i2l310:
 43957                           
 43958                           ; BSR set to: 15
 43959                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 43960                           
 43961                           ; BSR set to: 15
 43962  01324A  9126               	bcf	38,0,b	;volatile
 43963  01324C                     i2l309:
 43964                           
 43965                           ; BSR set to: 15
 43966                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 43967  01324C  9A62               	bcf	3938,5,c	;volatile
 43968                           
 43969                           ; BSR set to: 15
 43970  01324E  0012               	return		;funcret
 43971  013250                     __end_of_USBStallHandler:
 43972                           	opt stack 0
 43973                           tosu	equ	0xFFF
 43974                           tosh	equ	0xFFE
 43975                           tosl	equ	0xFFD
 43976                           pclatu	equ	0xFFB
 43977                           pclath	equ	0xFFA
 43978                           tblptru	equ	0xFF8
 43979                           tblptrh	equ	0xFF7
 43980                           tblptrl	equ	0xFF6
 43981                           tablat	equ	0xFF5
 43982                           prodh	equ	0xFF4
 43983                           prodl	equ	0xFF3
 43984                           intcon	equ	0xFF2
 43985                           intcon2	equ	0xFF1
 43986                           intcon3	equ	0xFF0
 43987                           indf0	equ	0xFEF
 43988                           postinc0	equ	0xFEE
 43989                           fsr0h	equ	0xFEA
 43990                           fsr0l	equ	0xFE9
 43991                           wreg	equ	0xFE8
 43992                           indf1	equ	0xFE7
 43993                           postinc1	equ	0xFE6
 43994                           postdec1	equ	0xFE5
 43995                           plusw1	equ	0xFE3
 43996                           fsr1h	equ	0xFE2
 43997                           fsr1l	equ	0xFE1
 43998                           indf2	equ	0xFDF
 43999                           postinc2	equ	0xFDE
 44000                           postdec2	equ	0xFDD
 44001                           plusw2	equ	0xFDB
 44002                           fsr2h	equ	0xFDA
 44003                           fsr2l	equ	0xFD9
 44004                           status	equ	0xFD8
 44005                           
 44006 ;; *************** function _USBIncrement1msInternalTimers *****************
 44007 ;; Defined at:
 44008 ;;		line 3027 in file "usb_device.c"
 44009 ;; Parameters:    Size  Location     Type
 44010 ;;		None
 44011 ;; Auto vars:     Size  Location     Type
 44012 ;;		None
 44013 ;; Return value:  Size  Location     Type
 44014 ;;                  1    wreg      void 
 44015 ;; Registers used:
 44016 ;;		wreg, status,2, status,0
 44017 ;; Tracked objects:
 44018 ;;		On entry : 0/0
 44019 ;;		On exit  : 0/0
 44020 ;;		Unchanged: 0/0
 44021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44026 ;;Total ram usage:        0 bytes
 44027 ;; Hardware stack levels used:    1
 44028 ;; This function calls:
 44029 ;;		Nothing
 44030 ;; This function is called by:
 44031 ;;		_USBDeviceTasks
 44032 ;; This function uses a non-reentrant model
 44033 ;;
 44034                           
 44035                           	psect	text220
 44036  013B36                     __ptext220:
 44037                           	opt stack 0
 44038  013B36                     _USBIncrement1msInternalTimers:
 44039                           	opt stack 16
 44040                           
 44041                           ;usb_device.c: 3035: USB1msTickCount++;
 44042                           
 44043                           ; BSR set to: 15
 44044                           ;incstack = 0
 44045  013B36  0E01               	movlw	1
 44046  013B38  0101               	movlb	1	; () banked
 44047  013B3A  27DD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 44048  013B3C  0E00               	movlw	0
 44049  013B3E  23DE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 44050  013B40  23DF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 44051  013B42  23E0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 44052                           
 44053                           ; BSR set to: 1
 44054                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 44055  013B44  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 44056  013B46  A4D8               	btfss	status,2,c
 44057  013B48  0012               	return	
 44058                           
 44059                           ; BSR set to: 1
 44060                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 44061  013B4A  2BFA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 44062                           
 44063                           ; BSR set to: 1
 44064                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 44065  013B4C  51FA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 44066  013B4E  A4D8               	btfss	status,2,c
 44067  013B50  0012               	return	
 44068                           
 44069                           ; BSR set to: 1
 44070                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 44071  013B52  69FA               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 44072                           
 44073                           ; BSR set to: 1
 44074  013B54  0012               	return	
 44075  013B56                     __end_of_USBIncrement1msInternalTimers:
 44076                           	opt stack 0
 44077                           tosu	equ	0xFFF
 44078                           tosh	equ	0xFFE
 44079                           tosl	equ	0xFFD
 44080                           pclatu	equ	0xFFB
 44081                           pclath	equ	0xFFA
 44082                           tblptru	equ	0xFF8
 44083                           tblptrh	equ	0xFF7
 44084                           tblptrl	equ	0xFF6
 44085                           tablat	equ	0xFF5
 44086                           prodh	equ	0xFF4
 44087                           prodl	equ	0xFF3
 44088                           intcon	equ	0xFF2
 44089                           intcon2	equ	0xFF1
 44090                           intcon3	equ	0xFF0
 44091                           indf0	equ	0xFEF
 44092                           postinc0	equ	0xFEE
 44093                           fsr0h	equ	0xFEA
 44094                           fsr0l	equ	0xFE9
 44095                           wreg	equ	0xFE8
 44096                           indf1	equ	0xFE7
 44097                           postinc1	equ	0xFE6
 44098                           postdec1	equ	0xFE5
 44099                           plusw1	equ	0xFE3
 44100                           fsr1h	equ	0xFE2
 44101                           fsr1l	equ	0xFE1
 44102                           indf2	equ	0xFDF
 44103                           postinc2	equ	0xFDE
 44104                           postdec2	equ	0xFDD
 44105                           plusw2	equ	0xFDB
 44106                           fsr2h	equ	0xFDA
 44107                           fsr2l	equ	0xFD9
 44108                           status	equ	0xFD8
 44109                           
 44110 ;; *************** function _USBCtrlEPService *****************
 44111 ;; Defined at:
 44112 ;;		line 2374 in file "usb_device.c"
 44113 ;; Parameters:    Size  Location     Type
 44114 ;;		None
 44115 ;; Auto vars:     Size  Location     Type
 44116 ;;		None
 44117 ;; Return value:  Size  Location     Type
 44118 ;;                  1    wreg      void 
 44119 ;; Registers used:
 44120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44121 ;; Tracked objects:
 44122 ;;		On entry : 0/0
 44123 ;;		On exit  : 0/0
 44124 ;;		Unchanged: 0/0
 44125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44130 ;;Total ram usage:        1 bytes
 44131 ;; Hardware stack levels used:    1
 44132 ;; Hardware stack levels required when called:    7
 44133 ;; This function calls:
 44134 ;;		_USBCtrlTrfInHandler
 44135 ;;		_USBCtrlTrfOutHandler
 44136 ;;		_USBCtrlTrfSetupHandler
 44137 ;;		i2_memcpy
 44138 ;; This function is called by:
 44139 ;;		_USBDeviceTasks
 44140 ;; This function uses a non-reentrant model
 44141 ;;
 44142                           
 44143                           	psect	text221
 44144  01140C                     __ptext221:
 44145                           	opt stack 0
 44146  01140C                     _USBCtrlEPService:
 44147                           	opt stack 9
 44148                           
 44149                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 44150                           
 44151                           ; BSR set to: 1
 44152                           ;incstack = 0
 44153  01140C  0E2D               	movlw	45
 44154  01140E  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 44155                           
 44156                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 44157  011410  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44158  011414  0EFD               	movlw	253
 44159  011416  164B               	andwf	??_USBCtrlEPService,f,c
 44160  011418  A4D8               	btfss	status,2,c
 44161  01141A  D03B               	goto	i2l323
 44162                           
 44163                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 44164  01141C  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 44165  011420  90D8               	bcf	status,0,c
 44166  011422  324B               	rrcf	??_USBCtrlEPService,f,c
 44167  011424  0E3F               	movlw	63
 44168  011426  164B               	andwf	??_USBCtrlEPService,f,c
 44169  011428  504B               	movf	??_USBCtrlEPService,w,c
 44170  01142A  0D04               	mullw	4
 44171  01142C  0E00               	movlw	0
 44172  01142E  24F3               	addwf	prodl,w,c
 44173  011430  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 44174  011432  0E0D               	movlw	13
 44175  011434  20F4               	addwfc	prodh,w,c
 44176  011436  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 44177                           
 44178                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 44179  011438  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 44180  01143C  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 44181                           
 44182                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 44183  011440  0E04               	movlw	4
 44184  011442  1818               	xorwf	_pBDTEntryEP0OutNext,w,c
 44185  011444  6E18               	movwf	_pBDTEntryEP0OutNext,c
 44186  011446  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44187  011448  6E19               	movwf	_pBDTEntryEP0OutNext+1,c
 44188                           
 44189                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 44190  01144A  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 44191  01144E  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 44192  011452  30DF               	rrcf	indf2,w,c
 44193  011454  32E8               	rrcf	wreg,f,c
 44194  011456  0B0F               	andlw	15
 44195  011458  0A0D               	xorlw	13
 44196  01145A  A4D8               	btfss	status,2,c
 44197  01145C  D017               	goto	i2l324
 44198                           
 44199                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 44200  01145E  0E30               	movlw	48
 44201  011460  6E2E               	movwf	i2memcpy@d1,c
 44202  011462  0E0D               	movlw	13
 44203  011464  6E2F               	movwf	i2memcpy@d1+1,c
 44204  011466  EE20 F002          	lfsr	2,2
 44205  01146A  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 44206  01146C  26D9               	addwf	fsr2l,f,c
 44207  01146E  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 44208  011470  22DA               	addwfc	fsr2h,f,c
 44209  011472  CFDE F030          	movff	postinc2,i2memcpy@s1
 44210  011476  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 44211  01147A  0E00               	movlw	0
 44212  01147C  6E33               	movwf	i2memcpy@n+1,c
 44213  01147E  0E08               	movlw	8
 44214  011480  6E32               	movwf	i2memcpy@n,c
 44215  011482  EC40  F094         	call	i2_memcpy	;wreg free
 44216                           
 44217                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 44218  011486  ECC0  F08B         	call	_USBCtrlTrfSetupHandler	;wreg free
 44219                           
 44220                           ;usb_device.c: 2411: }
 44221  01148A  0012               	return	
 44222  01148C                     i2l324:
 44223                           
 44224                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 44225  01148C  EC6E  F094         	call	_USBCtrlTrfOutHandler	;wreg free
 44226                           
 44227                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 44228  011490  0012               	return	
 44229  011492                     i2l323:
 44230                           
 44231                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 44232  011492  502C               	movf	_USTATcopy,w,c	;volatile
 44233  011494  0BFD               	andlw	253
 44234  011496  0A04               	xorlw	4
 44235  011498  A4D8               	btfss	status,2,c
 44236  01149A  0012               	return	
 44237                           
 44238                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 44239  01149C  EC13  F087         	call	_USBCtrlTrfInHandler	;wreg free
 44240  0114A0  0012               	return	
 44241  0114A2                     __end_of_USBCtrlEPService:
 44242                           	opt stack 0
 44243                           tosu	equ	0xFFF
 44244                           tosh	equ	0xFFE
 44245                           tosl	equ	0xFFD
 44246                           pclatu	equ	0xFFB
 44247                           pclath	equ	0xFFA
 44248                           tblptru	equ	0xFF8
 44249                           tblptrh	equ	0xFF7
 44250                           tblptrl	equ	0xFF6
 44251                           tablat	equ	0xFF5
 44252                           prodh	equ	0xFF4
 44253                           prodl	equ	0xFF3
 44254                           intcon	equ	0xFF2
 44255                           intcon2	equ	0xFF1
 44256                           intcon3	equ	0xFF0
 44257                           indf0	equ	0xFEF
 44258                           postinc0	equ	0xFEE
 44259                           fsr0h	equ	0xFEA
 44260                           fsr0l	equ	0xFE9
 44261                           wreg	equ	0xFE8
 44262                           indf1	equ	0xFE7
 44263                           postinc1	equ	0xFE6
 44264                           postdec1	equ	0xFE5
 44265                           plusw1	equ	0xFE3
 44266                           fsr1h	equ	0xFE2
 44267                           fsr1l	equ	0xFE1
 44268                           indf2	equ	0xFDF
 44269                           postinc2	equ	0xFDE
 44270                           postdec2	equ	0xFDD
 44271                           plusw2	equ	0xFDB
 44272                           fsr2h	equ	0xFDA
 44273                           fsr2l	equ	0xFD9
 44274                           status	equ	0xFD8
 44275                           
 44276 ;; *************** function i2_memcpy *****************
 44277 ;; Defined at:
 44278 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 44279 ;; Parameters:    Size  Location     Type
 44280 ;;  d1              2    0[COMRAM] PTR void 
 44281 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44282 ;;		 -> SetupPkt(8), 
 44283 ;;  s1              2    2[COMRAM] PTR const void 
 44284 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44285 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44286 ;;		 -> SetupPkt(8), 
 44287 ;;  n               2    4[COMRAM] unsigned int 
 44288 ;; Auto vars:     Size  Location     Type
 44289 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 44290 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44291 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44292 ;;		 -> SetupPkt(8), 
 44293 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 44294 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44295 ;;		 -> SetupPkt(8), 
 44296 ;;  memcpy          1   10[COMRAM] unsigned char 
 44297 ;; Return value:  Size  Location     Type
 44298 ;;                  2    0[COMRAM] PTR void 
 44299 ;; Registers used:
 44300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44301 ;; Tracked objects:
 44302 ;;		On entry : 0/0
 44303 ;;		On exit  : 0/0
 44304 ;;		Unchanged: 0/0
 44305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44306 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44307 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44309 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44310 ;;Total ram usage:       11 bytes
 44311 ;; Hardware stack levels used:    1
 44312 ;; This function calls:
 44313 ;;		Nothing
 44314 ;; This function is called by:
 44315 ;;		_USBCtrlEPService
 44316 ;; This function uses a non-reentrant model
 44317 ;;
 44318                           
 44319                           	psect	text222
 44320  012880                     __ptext222:
 44321                           	opt stack 0
 44322  012880                     i2_memcpy:
 44323                           	opt stack 15
 44324                           
 44325                           ;incstack = 0
 44326  012880  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 44327  012884  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 44328  012888  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 44329  01288C  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 44330  012890  D01C               	goto	i2l3995
 44331  012892                     i2l14433:
 44332  012892  C036  FFF6         	movff	i2memcpy@s,tblptrl
 44333  012896  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 44334  01289A  0E00               	movlw	low (__mediumconst shr (0+16))
 44335  01289C  6EF8               	movwf	tblptru,c
 44336  01289E  0E0E               	movlw	(high __ramtop+-1)
 44337  0128A0  64F7               	cpfsgt	tblptrh,c
 44338  0128A2  D003               	bra	i2u1223_47
 44339  0128A4  0008               	tblrd		*
 44340  0128A6  50F5               	movf	tablat,w,c
 44341  0128A8  D005               	bra	i2u1223_40
 44342  0128AA                     i2u1223_47:
 44343  0128AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 44344  0128AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 44345  0128B2  50EF               	movf	indf0,w,c
 44346  0128B4                     i2u1223_40:
 44347  0128B4  6E38               	movwf	i2memcpy@tmp,c
 44348  0128B6  4A36               	infsnz	i2memcpy@s,f,c
 44349  0128B8  2A37               	incf	i2memcpy@s+1,f,c
 44350  0128BA  C034  FFD9         	movff	i2memcpy@d,fsr2l
 44351  0128BE  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 44352  0128C2  C038  FFDF         	movff	i2memcpy@tmp,indf2
 44353  0128C6  4A34               	infsnz	i2memcpy@d,f,c
 44354  0128C8  2A35               	incf	i2memcpy@d+1,f,c
 44355  0128CA                     i2l3995:
 44356  0128CA  0632               	decf	i2memcpy@n,f,c
 44357  0128CC  A0D8               	btfss	status,0,c
 44358  0128CE  0633               	decf	i2memcpy@n+1,f,c
 44359  0128D0  2832               	incf	i2memcpy@n,w,c
 44360  0128D2  E1DF               	bnz	i2l14433
 44361  0128D4  2833               	incf	i2memcpy@n+1,w,c
 44362  0128D6  B4D8               	btfsc	status,2,c
 44363  0128D8  0012               	return	
 44364  0128DA  D7DB               	goto	i2l3996
 44365  0128DC                     __end_ofi2_memcpy:
 44366                           	opt stack 0
 44367                           tosu	equ	0xFFF
 44368                           tosh	equ	0xFFE
 44369                           tosl	equ	0xFFD
 44370                           pclatu	equ	0xFFB
 44371                           pclath	equ	0xFFA
 44372                           tblptru	equ	0xFF8
 44373                           tblptrh	equ	0xFF7
 44374                           tblptrl	equ	0xFF6
 44375                           tablat	equ	0xFF5
 44376                           prodh	equ	0xFF4
 44377                           prodl	equ	0xFF3
 44378                           intcon	equ	0xFF2
 44379                           intcon2	equ	0xFF1
 44380                           intcon3	equ	0xFF0
 44381                           indf0	equ	0xFEF
 44382                           postinc0	equ	0xFEE
 44383                           fsr0h	equ	0xFEA
 44384                           fsr0l	equ	0xFE9
 44385                           wreg	equ	0xFE8
 44386                           indf1	equ	0xFE7
 44387                           postinc1	equ	0xFE6
 44388                           postdec1	equ	0xFE5
 44389                           plusw1	equ	0xFE3
 44390                           fsr1h	equ	0xFE2
 44391                           fsr1l	equ	0xFE1
 44392                           indf2	equ	0xFDF
 44393                           postinc2	equ	0xFDE
 44394                           postdec2	equ	0xFDD
 44395                           plusw2	equ	0xFDB
 44396                           fsr2h	equ	0xFDA
 44397                           fsr2l	equ	0xFD9
 44398                           status	equ	0xFD8
 44399                           
 44400 ;; *************** function _USBCtrlTrfSetupHandler *****************
 44401 ;; Defined at:
 44402 ;;		line 2467 in file "usb_device.c"
 44403 ;; Parameters:    Size  Location     Type
 44404 ;;		None
 44405 ;; Auto vars:     Size  Location     Type
 44406 ;;		None
 44407 ;; Return value:  Size  Location     Type
 44408 ;;                  1    wreg      void 
 44409 ;; Registers used:
 44410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44411 ;; Tracked objects:
 44412 ;;		On entry : 0/0
 44413 ;;		On exit  : 0/0
 44414 ;;		Unchanged: 0/0
 44415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44420 ;;Total ram usage:        0 bytes
 44421 ;; Hardware stack levels used:    1
 44422 ;; Hardware stack levels required when called:    6
 44423 ;; This function calls:
 44424 ;;		_USBCheckStdRequest
 44425 ;;		_USBCtrlEPServiceComplete
 44426 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 44427 ;; This function is called by:
 44428 ;;		_USBCtrlEPService
 44429 ;; This function uses a non-reentrant model
 44430 ;;
 44431                           
 44432                           	psect	text223
 44433  011780                     __ptext223:
 44434                           	opt stack 0
 44435  011780                     _USBCtrlTrfSetupHandler:
 44436                           	opt stack 9
 44437                           
 44438                           ;usb_device.c: 2472: shortPacketStatus = 0;
 44439                           
 44440                           ;incstack = 0
 44441  011780  0E00               	movlw	0
 44442  011782  6E2A               	movwf	_shortPacketStatus,c	;volatile
 44443                           
 44444                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 44445  011784  0E00               	movlw	0
 44446  011786  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 44447                           
 44448                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 44449  011788  0E00               	movlw	0
 44450  01178A  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 44451                           
 44452                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 44453  01178C  0E00               	movlw	0
 44454  01178E  0101               	movlb	1	; () banked
 44455  011790  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 44456                           
 44457                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 44458  011792  0E00               	movlw	0
 44459  011794  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 44460                           
 44461                           ;usb_device.c: 2477: controlTransferState = 0;
 44462  011796  0E00               	movlw	0
 44463  011798  6E29               	movwf	_controlTransferState,c	;volatile
 44464                           
 44465                           ; BSR set to: 1
 44466                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 44467  01179A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44468  01179E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44469  0117A2  0E7F               	movlw	127
 44470  0117A4  16DF               	andwf	indf2,f,c
 44471                           
 44472                           ; BSR set to: 1
 44473                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 44474  0117A6  0E04               	movlw	4
 44475  0117A8  1810               	xorwf	_pBDTEntryIn,w,c
 44476  0117AA  6E10               	movwf	_pBDTEntryIn,c
 44477  0117AC  5011               	movf	_pBDTEntryIn+1,w,c
 44478  0117AE  6E11               	movwf	_pBDTEntryIn+1,c
 44479                           
 44480                           ; BSR set to: 1
 44481                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 44482  0117B0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44483  0117B4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44484  0117B8  0E7F               	movlw	127
 44485  0117BA  16DF               	andwf	indf2,f,c
 44486                           
 44487                           ; BSR set to: 1
 44488                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 44489  0117BC  0E04               	movlw	4
 44490  0117BE  1810               	xorwf	_pBDTEntryIn,w,c
 44491  0117C0  6E10               	movwf	_pBDTEntryIn,c
 44492  0117C2  5011               	movf	_pBDTEntryIn+1,w,c
 44493  0117C4  6E11               	movwf	_pBDTEntryIn+1,c
 44494                           
 44495                           ; BSR set to: 1
 44496                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 44497  0117C6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44498  0117CA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44499  0117CE  0E7F               	movlw	127
 44500  0117D0  16DF               	andwf	indf2,f,c
 44501                           
 44502                           ; BSR set to: 1
 44503                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 44504  0117D2  0E00               	movlw	0
 44505  0117D4  6E0D               	movwf	_inPipes+3,c	;volatile
 44506                           
 44507                           ; BSR set to: 1
 44508                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 44509  0117D6  0E00               	movlw	0
 44510  0117D8  6E0F               	movwf	_inPipes+5,c	;volatile
 44511  0117DA  0E00               	movlw	0
 44512  0117DC  6E0E               	movwf	_inPipes+4,c	;volatile
 44513                           
 44514                           ; BSR set to: 1
 44515                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 44516  0117DE  0E00               	movlw	0
 44517  0117E0  6E04               	movwf	_outPipes+3,c	;volatile
 44518                           
 44519                           ; BSR set to: 1
 44520                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 44521  0117E2  0E00               	movlw	0
 44522  0117E4  6E06               	movwf	_outPipes+5,c	;volatile
 44523  0117E6  0E00               	movlw	0
 44524  0117E8  6E05               	movwf	_outPipes+4,c	;volatile
 44525                           
 44526                           ; BSR set to: 1
 44527                           ;usb_device.c: 2502: USBCheckStdRequest();
 44528  0117EA  EC86  F083         	call	_USBCheckStdRequest	;wreg free
 44529                           
 44530                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 44531  0117EE  0E00               	movlw	0
 44532  0117F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 44533  0117F2  0E03               	movlw	3
 44534  0117F4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 44535  0117F6  0E00               	movlw	0
 44536  0117F8  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 44537  0117FA  0E00               	movlw	0
 44538  0117FC  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 44539  0117FE  0E00               	movlw	0
 44540  011800  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 44541  011802  0E00               	movlw	0
 44542  011804  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 44543  011806  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 44544                           
 44545                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 44546  01180A  ECF2  F07F         	call	_USBCtrlEPServiceComplete	;wreg free
 44547  01180E  0012               	return		;funcret
 44548  011810                     __end_of_USBCtrlTrfSetupHandler:
 44549                           	opt stack 0
 44550                           tosu	equ	0xFFF
 44551                           tosh	equ	0xFFE
 44552                           tosl	equ	0xFFD
 44553                           pclatu	equ	0xFFB
 44554                           pclath	equ	0xFFA
 44555                           tblptru	equ	0xFF8
 44556                           tblptrh	equ	0xFF7
 44557                           tblptrl	equ	0xFF6
 44558                           tablat	equ	0xFF5
 44559                           prodh	equ	0xFF4
 44560                           prodl	equ	0xFF3
 44561                           intcon	equ	0xFF2
 44562                           intcon2	equ	0xFF1
 44563                           intcon3	equ	0xFF0
 44564                           indf0	equ	0xFEF
 44565                           postinc0	equ	0xFEE
 44566                           fsr0h	equ	0xFEA
 44567                           fsr0l	equ	0xFE9
 44568                           wreg	equ	0xFE8
 44569                           indf1	equ	0xFE7
 44570                           postinc1	equ	0xFE6
 44571                           postdec1	equ	0xFE5
 44572                           plusw1	equ	0xFE3
 44573                           fsr1h	equ	0xFE2
 44574                           fsr1l	equ	0xFE1
 44575                           indf2	equ	0xFDF
 44576                           postinc2	equ	0xFDE
 44577                           postdec2	equ	0xFDD
 44578                           plusw2	equ	0xFDB
 44579                           fsr2h	equ	0xFDA
 44580                           fsr2l	equ	0xFD9
 44581                           status	equ	0xFD8
 44582                           
 44583 ;; *************** function _USBCtrlEPServiceComplete *****************
 44584 ;; Defined at:
 44585 ;;		line 1618 in file "usb_device.c"
 44586 ;; Parameters:    Size  Location     Type
 44587 ;;		None
 44588 ;; Auto vars:     Size  Location     Type
 44589 ;;		None
 44590 ;; Return value:  Size  Location     Type
 44591 ;;                  1    wreg      void 
 44592 ;; Registers used:
 44593 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44594 ;; Tracked objects:
 44595 ;;		On entry : 0/0
 44596 ;;		On exit  : 0/0
 44597 ;;		Unchanged: 0/0
 44598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44603 ;;Total ram usage:        0 bytes
 44604 ;; Hardware stack levels used:    1
 44605 ;; Hardware stack levels required when called:    2
 44606 ;; This function calls:
 44607 ;;		_USBCtrlEPAllowDataStage
 44608 ;;		_USBCtrlEPAllowStatusStage
 44609 ;; This function is called by:
 44610 ;;		_USBCtrlTrfSetupHandler
 44611 ;; This function uses a non-reentrant model
 44612 ;;
 44613                           
 44614                           	psect	text224
 44615  00FFE4                     __ptext224:
 44616                           	opt stack 0
 44617  00FFE4                     _USBCtrlEPServiceComplete:
 44618                           	opt stack 12
 44619                           
 44620                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 44621                           
 44622                           ;incstack = 0
 44623  00FFE4  9865               	bcf	3941,4,c	;volatile
 44624                           
 44625                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 44626  00FFE6  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 44627  00FFE8  D039               	goto	i2l233
 44628                           
 44629                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 44630  00FFEA  AE04               	btfss	_outPipes+3,7,c	;volatile
 44631  00FFEC  D00C               	goto	i2l234
 44632                           
 44633                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 44634  00FFEE  0E02               	movlw	2
 44635  00FFF0  6E29               	movwf	_controlTransferState,c	;volatile
 44636                           
 44637                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 44638  00FFF2  0101               	movlb	1	; () banked
 44639  00FFF4  51FB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 44640  00FFF6  B4D8               	btfsc	status,2,c
 44641                           
 44642                           ; BSR set to: 1
 44643                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 44644  00FFF8  EC6F  F089         	call	_USBCtrlEPAllowDataStage	;wreg free
 44645                           
 44646                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 44647  00FFFC  0E00               	movlw	0
 44648  00FFFE  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 44649                           
 44650                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 44651  010000  0E00               	movlw	0
 44652  010002  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 44653                           
 44654                           ;usb_device.c: 1654: }
 44655  010004  0012               	return	
 44656  010006                     i2l234:
 44657                           
 44658                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 44659  010006  EE20 F001          	lfsr	2,1
 44660  01000A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44661  01000C  26D9               	addwf	fsr2l,f,c
 44662  01000E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44663  010010  22DA               	addwfc	fsr2h,f,c
 44664  010012  0E08               	movlw	8
 44665  010014  6EDF               	movwf	indf2,c
 44666                           
 44667                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 44668  010016  EE20 F002          	lfsr	2,2
 44669  01001A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44670  01001C  26D9               	addwf	fsr2l,f,c
 44671  01001E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44672  010020  22DA               	addwfc	fsr2h,f,c
 44673  010022  0E30               	movlw	48
 44674  010024  6EDE               	movwf	postinc2,c
 44675  010026  0E0D               	movlw	13
 44676  010028  6EDD               	movwf	postdec2,c
 44677                           
 44678                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 44679  01002A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44680  01002E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44681  010032  0E0C               	movlw	12
 44682  010034  6EDF               	movwf	indf2,c
 44683                           
 44684                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 44685  010036  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44686  01003A  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44687  01003E  0E00               	movlw	0
 44688  010040  8EDB               	bsf	plusw2,7,c
 44689                           
 44690                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 44691  010042  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44692  010046  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44693  01004A  0E04               	movlw	4
 44694  01004C  6EDF               	movwf	indf2,c
 44695                           
 44696                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 44697  01004E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44698  010052  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44699  010056  0E00               	movlw	0
 44700  010058  8EDB               	bsf	plusw2,7,c
 44701                           
 44702                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 44703  01005A  0012               	return	
 44704  01005C                     i2l233:
 44705                           
 44706                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 44707  01005C  010D               	movlb	13	; () banked
 44708  01005E  AF30               	btfss	48,7,b	;volatile
 44709  010060  D010               	goto	i2l238
 44710                           
 44711                           ; BSR set to: 13
 44712                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 44713  010062  0E01               	movlw	1
 44714  010064  6E29               	movwf	_controlTransferState,c	;volatile
 44715                           
 44716                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 44717  010066  5020               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 44718  010068  B4D8               	btfsc	status,2,c
 44719                           
 44720                           ; BSR set to: 13
 44721                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 44722  01006A  EC6F  F089         	call	_USBCtrlEPAllowDataStage	;wreg free
 44723                           
 44724                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 44725  01006E  0E00               	movlw	0
 44726  010070  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 44727                           
 44728                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 44729  010072  0E00               	movlw	0
 44730  010074  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 44731                           
 44732                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 44733  010076  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 44734  010078  A4D8               	btfss	status,2,c
 44735  01007A  0012               	return	
 44736                           
 44737                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 44738  01007C  EC53  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 44739                           
 44740                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 44741  010080  0012               	return	
 44742  010082                     i2l238:
 44743                           
 44744                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 44745  010082  0E02               	movlw	2
 44746  010084  6E29               	movwf	_controlTransferState,c	;volatile
 44747                           
 44748                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 44749  010086  EE20 F001          	lfsr	2,1
 44750  01008A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44751  01008C  26D9               	addwf	fsr2l,f,c
 44752  01008E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44753  010090  22DA               	addwfc	fsr2h,f,c
 44754  010092  0E08               	movlw	8
 44755  010094  6EDF               	movwf	indf2,c
 44756                           
 44757                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 44758  010096  EE20 F002          	lfsr	2,2
 44759  01009A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44760  01009C  26D9               	addwf	fsr2l,f,c
 44761  01009E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44762  0100A0  22DA               	addwfc	fsr2h,f,c
 44763  0100A2  0E30               	movlw	48
 44764  0100A4  6EDE               	movwf	postinc2,c
 44765  0100A6  0E0D               	movlw	13
 44766  0100A8  6EDD               	movwf	postdec2,c
 44767                           
 44768                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 44769  0100AA  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44770  0100AE  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44771  0100B2  0E04               	movlw	4
 44772  0100B4  6EDF               	movwf	indf2,c
 44773                           
 44774                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 44775  0100B6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44776  0100BA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44777  0100BE  0E00               	movlw	0
 44778  0100C0  8EDB               	bsf	plusw2,7,c
 44779                           
 44780                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 44781  0100C2  0E00               	movlw	0
 44782  0100C4  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 44783                           
 44784                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 44785  0100C6  0E00               	movlw	0
 44786  0100C8  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 44787                           
 44788                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 44789  0100CA  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 44790  0100CC  A4D8               	btfss	status,2,c
 44791  0100CE  0012               	return	
 44792                           
 44793                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 44794  0100D0  EC53  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 44795  0100D4  0012               	return	
 44796  0100D6                     __end_of_USBCtrlEPServiceComplete:
 44797                           	opt stack 0
 44798                           tosu	equ	0xFFF
 44799                           tosh	equ	0xFFE
 44800                           tosl	equ	0xFFD
 44801                           pclatu	equ	0xFFB
 44802                           pclath	equ	0xFFA
 44803                           tblptru	equ	0xFF8
 44804                           tblptrh	equ	0xFF7
 44805                           tblptrl	equ	0xFF6
 44806                           tablat	equ	0xFF5
 44807                           prodh	equ	0xFF4
 44808                           prodl	equ	0xFF3
 44809                           intcon	equ	0xFF2
 44810                           intcon2	equ	0xFF1
 44811                           intcon3	equ	0xFF0
 44812                           indf0	equ	0xFEF
 44813                           postinc0	equ	0xFEE
 44814                           fsr0h	equ	0xFEA
 44815                           fsr0l	equ	0xFE9
 44816                           wreg	equ	0xFE8
 44817                           indf1	equ	0xFE7
 44818                           postinc1	equ	0xFE6
 44819                           postdec1	equ	0xFE5
 44820                           plusw1	equ	0xFE3
 44821                           fsr1h	equ	0xFE2
 44822                           fsr1l	equ	0xFE1
 44823                           indf2	equ	0xFDF
 44824                           postinc2	equ	0xFDE
 44825                           postdec2	equ	0xFDD
 44826                           plusw2	equ	0xFDB
 44827                           fsr2h	equ	0xFDA
 44828                           fsr2l	equ	0xFD9
 44829                           status	equ	0xFD8
 44830                           
 44831 ;; *************** function _USBCtrlEPAllowDataStage *****************
 44832 ;; Defined at:
 44833 ;;		line 1490 in file "usb_device.c"
 44834 ;; Parameters:    Size  Location     Type
 44835 ;;		None
 44836 ;; Auto vars:     Size  Location     Type
 44837 ;;		None
 44838 ;; Return value:  Size  Location     Type
 44839 ;;                  1    wreg      void 
 44840 ;; Registers used:
 44841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44842 ;; Tracked objects:
 44843 ;;		On entry : 0/0
 44844 ;;		On exit  : 0/0
 44845 ;;		Unchanged: 0/0
 44846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44851 ;;Total ram usage:        0 bytes
 44852 ;; Hardware stack levels used:    1
 44853 ;; Hardware stack levels required when called:    1
 44854 ;; This function calls:
 44855 ;;		_USBCtrlTrfTxService
 44856 ;; This function is called by:
 44857 ;;		_USBCtrlEPServiceComplete
 44858 ;; This function uses a non-reentrant model
 44859 ;;
 44860                           
 44861                           	psect	text225
 44862  0112DE                     __ptext225:
 44863                           	opt stack 0
 44864  0112DE                     _USBCtrlEPAllowDataStage:
 44865                           	opt stack 12
 44866                           
 44867                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 44868                           
 44869                           ;incstack = 0
 44870  0112DE  0E00               	movlw	0
 44871  0112E0  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 44872                           
 44873                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 44874  0112E2  0E00               	movlw	0
 44875  0112E4  0101               	movlb	1	; () banked
 44876  0112E6  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 44877                           
 44878                           ; BSR set to: 1
 44879                           ;usb_device.c: 1495: if(controlTransferState == 2)
 44880  0112E8  0E02               	movlw	2
 44881  0112EA  1829               	xorwf	_controlTransferState,w,c	;volatile
 44882  0112EC  A4D8               	btfss	status,2,c
 44883  0112EE  D01F               	goto	i2l222
 44884                           
 44885                           ; BSR set to: 1
 44886                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 44887  0112F0  EE20 F001          	lfsr	2,1
 44888  0112F4  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44889  0112F6  26D9               	addwf	fsr2l,f,c
 44890  0112F8  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44891  0112FA  22DA               	addwfc	fsr2h,f,c
 44892  0112FC  0E08               	movlw	8
 44893  0112FE  6EDF               	movwf	indf2,c
 44894                           
 44895                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 44896  011300  EE20 F002          	lfsr	2,2
 44897  011304  5018               	movf	_pBDTEntryEP0OutNext,w,c
 44898  011306  26D9               	addwf	fsr2l,f,c
 44899  011308  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 44900  01130A  22DA               	addwfc	fsr2h,f,c
 44901  01130C  0E38               	movlw	56
 44902  01130E  6EDE               	movwf	postinc2,c
 44903  011310  0E0D               	movlw	13
 44904  011312  6EDD               	movwf	postdec2,c
 44905                           
 44906                           ; BSR set to: 1
 44907                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 44908  011314  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44909  011318  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44910  01131C  0E48               	movlw	72
 44911  01131E  6EDF               	movwf	indf2,c
 44912                           
 44913                           ; BSR set to: 1
 44914                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 44915  011320  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 44916  011324  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 44917  011328  0E00               	movlw	0
 44918  01132A  8EDB               	bsf	plusw2,7,c
 44919                           
 44920                           ;usb_device.c: 1502: }
 44921  01132C  0012               	return	
 44922  01132E                     i2l222:
 44923                           
 44924                           ; BSR set to: 1
 44925                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 44926                           
 44927                           ; BSR set to: 1
 44928  01132E  500E               	movf	_inPipes+4,w,c	;volatile
 44929  011330  010D               	movlb	13	; () banked
 44930  011332  5D36               	subwf	54,w,b	;volatile
 44931  011334  500F               	movf	_inPipes+5,w,c	;volatile
 44932  011336  5937               	subwfb	55,w,b	;volatile
 44933  011338  B0D8               	btfsc	status,0,c
 44934  01133A  D004               	goto	i2l224
 44935                           
 44936                           ; BSR set to: 13
 44937                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 44938  01133C  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 44939  011340  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 44940  011344                     i2l224:
 44941                           
 44942                           ; BSR set to: 13
 44943                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 44944                           
 44945                           ; BSR set to: 13
 44946  011344  EC5A  F084         	call	_USBCtrlTrfTxService	;wreg free
 44947                           
 44948                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 44949  011348  EE20 F002          	lfsr	2,2
 44950  01134C  5010               	movf	_pBDTEntryIn,w,c
 44951  01134E  26D9               	addwf	fsr2l,f,c
 44952  011350  5011               	movf	_pBDTEntryIn+1,w,c
 44953  011352  22DA               	addwfc	fsr2h,f,c
 44954  011354  0E38               	movlw	56
 44955  011356  6EDE               	movwf	postinc2,c
 44956  011358  0E0D               	movlw	13
 44957  01135A  6EDD               	movwf	postdec2,c
 44958                           
 44959                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 44960  01135C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44961  011360  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44962  011364  0E48               	movlw	72
 44963  011366  6EDF               	movwf	indf2,c
 44964                           
 44965                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 44966  011368  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 44967  01136C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 44968  011370  0E00               	movlw	0
 44969  011372  8EDB               	bsf	plusw2,7,c
 44970  011374  0012               	return	
 44971  011376                     __end_of_USBCtrlEPAllowDataStage:
 44972                           	opt stack 0
 44973                           tosu	equ	0xFFF
 44974                           tosh	equ	0xFFE
 44975                           tosl	equ	0xFFD
 44976                           pclatu	equ	0xFFB
 44977                           pclath	equ	0xFFA
 44978                           tblptru	equ	0xFF8
 44979                           tblptrh	equ	0xFF7
 44980                           tblptrl	equ	0xFF6
 44981                           tablat	equ	0xFF5
 44982                           prodh	equ	0xFF4
 44983                           prodl	equ	0xFF3
 44984                           intcon	equ	0xFF2
 44985                           intcon2	equ	0xFF1
 44986                           intcon3	equ	0xFF0
 44987                           indf0	equ	0xFEF
 44988                           postinc0	equ	0xFEE
 44989                           fsr0h	equ	0xFEA
 44990                           fsr0l	equ	0xFE9
 44991                           wreg	equ	0xFE8
 44992                           indf1	equ	0xFE7
 44993                           postinc1	equ	0xFE6
 44994                           postdec1	equ	0xFE5
 44995                           plusw1	equ	0xFE3
 44996                           fsr1h	equ	0xFE2
 44997                           fsr1l	equ	0xFE1
 44998                           indf2	equ	0xFDF
 44999                           postinc2	equ	0xFDE
 45000                           postdec2	equ	0xFDD
 45001                           plusw2	equ	0xFDB
 45002                           fsr2h	equ	0xFDA
 45003                           fsr2l	equ	0xFD9
 45004                           status	equ	0xFD8
 45005                           
 45006 ;; *************** function _USBCheckStdRequest *****************
 45007 ;; Defined at:
 45008 ;;		line 2688 in file "usb_device.c"
 45009 ;; Parameters:    Size  Location     Type
 45010 ;;		None
 45011 ;; Auto vars:     Size  Location     Type
 45012 ;;		None
 45013 ;; Return value:  Size  Location     Type
 45014 ;;                  1    wreg      void 
 45015 ;; Registers used:
 45016 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45017 ;; Tracked objects:
 45018 ;;		On entry : 0/0
 45019 ;;		On exit  : 0/0
 45020 ;;		Unchanged: 0/0
 45021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45026 ;;Total ram usage:        0 bytes
 45027 ;; Hardware stack levels used:    1
 45028 ;; Hardware stack levels required when called:    5
 45029 ;; This function calls:
 45030 ;;		_USBStdFeatureReqHandler
 45031 ;;		_USBStdGetDscHandler
 45032 ;;		_USBStdGetStatusHandler
 45033 ;;		_USBStdSetCfgHandler
 45034 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45035 ;; This function is called by:
 45036 ;;		_USBCtrlTrfSetupHandler
 45037 ;; This function uses a non-reentrant model
 45038 ;;
 45039                           
 45040                           	psect	text226
 45041  01070C                     __ptext226:
 45042                           	opt stack 0
 45043  01070C                     _USBCheckStdRequest:
 45044                           	opt stack 9
 45045                           
 45046                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 45047                           
 45048                           ;incstack = 0
 45049  01070C  010D               	movlb	13	; () banked
 45050  01070E  3930               	swapf	48,w,b	;volatile
 45051  010710  32E8               	rrcf	wreg,f,c
 45052  010712  0B03               	andlw	3
 45053  010714  0900               	iorlw	0
 45054  010716  A4D8               	btfss	status,2,c
 45055  010718  0012               	return	
 45056  01071A  D042               	goto	i2l357
 45057  01071C                     i2l358:
 45058                           
 45059                           ; BSR set to: 13
 45060                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 45061  01071C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45062                           
 45063                           ; BSR set to: 13
 45064                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 45065  01071E  0E08               	movlw	8
 45066  010720  6E2B               	movwf	_USBDeviceState,c	;volatile
 45067                           
 45068                           ;usb_device.c: 2698: break;
 45069  010722  0012               	return	
 45070  010724                     
 45071                           ; BSR set to: 13
 45072                           ;usb_device.c: 2700: USBStdGetDscHandler();
 45073                           
 45074                           ; BSR set to: 13
 45075  010724  ECF5  F076         	call	_USBStdGetDscHandler	;wreg free
 45076                           
 45077                           ;usb_device.c: 2701: break;
 45078  010728  0012               	return	
 45079  01072A                     
 45080                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 45081  01072A  ECAB  F082         	call	_USBStdSetCfgHandler	;wreg free
 45082                           
 45083                           ;usb_device.c: 2704: break;
 45084  01072E  0012               	return	
 45085  010730                     
 45086                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 45087  010730  0E2D               	movlw	low _USBActiveConfiguration
 45088  010732  6E0A               	movwf	_inPipes,c	;volatile
 45089  010734  0E00               	movlw	high _USBActiveConfiguration
 45090  010736  6E0B               	movwf	_inPipes+1,c	;volatile
 45091                           
 45092                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45093  010738  800D               	bsf	_inPipes+3,0,c	;volatile
 45094                           
 45095                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 45096  01073A  0E01               	movlw	1
 45097  01073C  6E0E               	movwf	_inPipes+4,c	;volatile
 45098                           
 45099                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 45100  01073E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45101                           
 45102                           ;usb_device.c: 2710: break;
 45103  010740  0012               	return	
 45104  010742                     
 45105                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 45106  010742  ECD5  F088         	call	_USBStdGetStatusHandler	;wreg free
 45107                           
 45108                           ;usb_device.c: 2713: break;
 45109  010746  0012               	return	
 45110  010748                     
 45111                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 45112  010748  EC02  F068         	call	_USBStdFeatureReqHandler	;wreg free
 45113                           
 45114                           ;usb_device.c: 2717: break;
 45115  01074C  0012               	return	
 45116  01074E                     
 45117                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 45118  01074E  010D               	movlb	13	; () banked
 45119  010750  5134               	movf	52,w,b	;volatile
 45120  010752  0D01               	mullw	1
 45121  010754  0EFC               	movlw	low _USBAlternateInterface
 45122  010756  24F3               	addwf	prodl,w,c
 45123  010758  6E0A               	movwf	_inPipes,c	;volatile
 45124  01075A  0E01               	movlw	high _USBAlternateInterface
 45125  01075C  20F4               	addwfc	prodh,w,c
 45126  01075E  6E0B               	movwf	_inPipes+1,c	;volatile
 45127                           
 45128                           ; BSR set to: 13
 45129                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45130  010760  800D               	bsf	_inPipes+3,0,c	;volatile
 45131                           
 45132                           ; BSR set to: 13
 45133                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 45134  010762  0E01               	movlw	1
 45135  010764  6E0E               	movwf	_inPipes+4,c	;volatile
 45136                           
 45137                           ; BSR set to: 13
 45138                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 45139  010766  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45140                           
 45141                           ;usb_device.c: 2723: break;
 45142  010768  0012               	return	
 45143  01076A                     i2l367:
 45144                           
 45145                           ; BSR set to: 13
 45146                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 45147  01076A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45148                           
 45149                           ; BSR set to: 13
 45150                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 45151  01076C  5134               	movf	52,w,b	;volatile
 45152  01076E  0D01               	mullw	1
 45153  010770  0EFC               	movlw	low _USBAlternateInterface
 45154  010772  24F3               	addwf	prodl,w,c
 45155  010774  6ED9               	movwf	fsr2l,c
 45156  010776  0E01               	movlw	high _USBAlternateInterface
 45157  010778  20F4               	addwfc	prodh,w,c
 45158  01077A  6EDA               	movwf	fsr2h,c
 45159  01077C  CD32 FFDF          	movff	3378,indf2	;volatile
 45160                           
 45161                           ;usb_device.c: 2727: break;
 45162  010780  0012               	return	
 45163  010782                     
 45164                           ; BSR set to: 13
 45165                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 45166                           
 45167                           ; BSR set to: 13
 45168  010782  0E00               	movlw	0
 45169  010784  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45170  010786  0E02               	movlw	2
 45171  010788  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45172  01078A  0E00               	movlw	0
 45173  01078C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45174  01078E  0E00               	movlw	0
 45175  010790  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45176  010792  0E00               	movlw	0
 45177  010794  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45178  010796  0E00               	movlw	0
 45179  010798  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45180  01079A  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45181                           
 45182                           ;usb_device.c: 2734: }
 45183                           
 45184                           ;usb_device.c: 2733: break;
 45185                           
 45186                           ;usb_device.c: 2732: default:
 45187                           
 45188                           ;usb_device.c: 2731: case 12:
 45189                           
 45190                           ;usb_device.c: 2730: break;
 45191  01079E  0012               	return	
 45192  0107A0                     i2l357:
 45193  0107A0  010D               	movlb	13	; () banked
 45194  0107A2  5131               	movf	49,w,b	;volatile
 45195                           
 45196                           ; Switch size 1, requested type "space"
 45197                           ; Number of cases is 11, Range of values is 0 to 12
 45198                           ; switch strategies available:
 45199                           ; Name         Instructions Cycles
 45200                           ; simple_byte           34    18 (average)
 45201                           ;	Chosen strategy is simple_byte
 45202  0107A4  0A00               	xorlw	0	; case 0
 45203  0107A6  B4D8               	btfsc	status,2,c
 45204  0107A8  D7CC               	goto	i2l363
 45205  0107AA  0A01               	xorlw	1	; case 1
 45206  0107AC  B4D8               	btfsc	status,2,c
 45207  0107AE  D7CC               	goto	i2l364
 45208  0107B0  0A02               	xorlw	2	; case 3
 45209  0107B2  B4D8               	btfsc	status,2,c
 45210  0107B4  D7C9               	goto	i2l364
 45211  0107B6  0A06               	xorlw	6	; case 5
 45212  0107B8  B4D8               	btfsc	status,2,c
 45213  0107BA  D7B0               	goto	i2l358
 45214  0107BC  0A03               	xorlw	3	; case 6
 45215  0107BE  B4D8               	btfsc	status,2,c
 45216  0107C0  D7B1               	goto	i2l360
 45217  0107C2  0A01               	xorlw	1	; case 7
 45218  0107C4  B4D8               	btfsc	status,2,c
 45219  0107C6  D7DD               	goto	i2l368
 45220  0107C8  0A0F               	xorlw	15	; case 8
 45221  0107CA  B4D8               	btfsc	status,2,c
 45222  0107CC  D7B1               	goto	i2l362
 45223  0107CE  0A01               	xorlw	1	; case 9
 45224  0107D0  B4D8               	btfsc	status,2,c
 45225  0107D2  D7AB               	goto	i2l361
 45226  0107D4  0A03               	xorlw	3	; case 10
 45227  0107D6  B4D8               	btfsc	status,2,c
 45228  0107D8  D7BA               	goto	i2l366
 45229  0107DA  0A01               	xorlw	1	; case 11
 45230  0107DC  B4D8               	btfsc	status,2,c
 45231  0107DE  D7C5               	goto	i2l367
 45232  0107E0  0A07               	xorlw	7	; case 12
 45233  0107E2  0012               	return	
 45234  0107E4                     __end_of_USBCheckStdRequest:
 45235                           	opt stack 0
 45236                           tosu	equ	0xFFF
 45237                           tosh	equ	0xFFE
 45238                           tosl	equ	0xFFD
 45239                           pclatu	equ	0xFFB
 45240                           pclath	equ	0xFFA
 45241                           tblptru	equ	0xFF8
 45242                           tblptrh	equ	0xFF7
 45243                           tblptrl	equ	0xFF6
 45244                           tablat	equ	0xFF5
 45245                           prodh	equ	0xFF4
 45246                           prodl	equ	0xFF3
 45247                           intcon	equ	0xFF2
 45248                           intcon2	equ	0xFF1
 45249                           intcon3	equ	0xFF0
 45250                           indf0	equ	0xFEF
 45251                           postinc0	equ	0xFEE
 45252                           fsr0h	equ	0xFEA
 45253                           fsr0l	equ	0xFE9
 45254                           wreg	equ	0xFE8
 45255                           indf1	equ	0xFE7
 45256                           postinc1	equ	0xFE6
 45257                           postdec1	equ	0xFE5
 45258                           plusw1	equ	0xFE3
 45259                           fsr1h	equ	0xFE2
 45260                           fsr1l	equ	0xFE1
 45261                           indf2	equ	0xFDF
 45262                           postinc2	equ	0xFDE
 45263                           postdec2	equ	0xFDD
 45264                           plusw2	equ	0xFDB
 45265                           fsr2h	equ	0xFDA
 45266                           fsr2l	equ	0xFD9
 45267                           status	equ	0xFD8
 45268                           
 45269 ;; *************** function _USBStdSetCfgHandler *****************
 45270 ;; Defined at:
 45271 ;;		line 1970 in file "usb_device.c"
 45272 ;; Parameters:    Size  Location     Type
 45273 ;;		None
 45274 ;; Auto vars:     Size  Location     Type
 45275 ;;  i               1   23[COMRAM] unsigned char 
 45276 ;; Return value:  Size  Location     Type
 45277 ;;                  1    wreg      void 
 45278 ;; Registers used:
 45279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 45280 ;; Tracked objects:
 45281 ;;		On entry : 0/0
 45282 ;;		On exit  : 0/0
 45283 ;;		Unchanged: 0/0
 45284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45289 ;;Total ram usage:        1 bytes
 45290 ;; Hardware stack levels used:    1
 45291 ;; Hardware stack levels required when called:    4
 45292 ;; This function calls:
 45293 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45294 ;;		i2_memset
 45295 ;; This function is called by:
 45296 ;;		_USBCheckStdRequest
 45297 ;; This function uses a non-reentrant model
 45298 ;;
 45299                           
 45300                           	psect	text227
 45301  010556                     __ptext227:
 45302                           	opt stack 0
 45303  010556                     _USBStdSetCfgHandler:
 45304                           	opt stack 9
 45305                           
 45306                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 45307                           
 45308                           ;incstack = 0
 45309  010556  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45310                           
 45311                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 45312  010558  0E27               	movlw	39
 45313  01055A  6E2E               	movwf	i2memset@p1,c
 45314  01055C  0E0F               	movlw	15
 45315  01055E  6E2F               	movwf	i2memset@p1+1,c
 45316  010560  0E00               	movlw	0
 45317  010562  6E31               	movwf	i2memset@c+1,c
 45318  010564  0E00               	movlw	0
 45319  010566  6E30               	movwf	i2memset@c,c
 45320  010568  0E00               	movlw	0
 45321  01056A  6E33               	movwf	i2memset@n+1,c
 45322  01056C  0E02               	movlw	2
 45323  01056E  6E32               	movwf	i2memset@n,c
 45324  010570  ECE5  F09B         	call	i2_memset	;wreg free
 45325                           
 45326                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 45327  010574  0E00               	movlw	0
 45328  010576  6E2E               	movwf	i2memset@p1,c
 45329  010578  0E0D               	movlw	13
 45330  01057A  6E2F               	movwf	i2memset@p1+1,c
 45331  01057C  0E00               	movlw	0
 45332  01057E  6E31               	movwf	i2memset@c+1,c
 45333  010580  0E00               	movlw	0
 45334  010582  6E30               	movwf	i2memset@c,c
 45335  010584  0E00               	movlw	0
 45336  010586  6E33               	movwf	i2memset@n+1,c
 45337  010588  0E30               	movlw	48
 45338  01058A  6E32               	movwf	i2memset@n,c
 45339  01058C  ECE5  F09B         	call	i2_memset	;wreg free
 45340                           
 45341                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 45342  010590  8C65               	bsf	3941,6,c	;volatile
 45343                           
 45344                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 45345  010592  0E00               	movlw	0
 45346  010594  6E45               	movwf	USBStdSetCfgHandler@i,c
 45347  010596                     i2l18597:
 45348  010596  0E02               	movlw	2
 45349  010598  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 45350  01059A  D001               	goto	i2l274
 45351  01059C  D016               	goto	i2u1736_40
 45352  01059E                     i2l274:
 45353                           
 45354                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 45355  01059E  5045               	movf	USBStdSetCfgHandler@i,w,c
 45356  0105A0  0D01               	mullw	1
 45357  0105A2  0EE4               	movlw	low _ep_data_in
 45358  0105A4  24F3               	addwf	prodl,w,c
 45359  0105A6  6ED9               	movwf	fsr2l,c
 45360  0105A8  0E01               	movlw	high _ep_data_in
 45361  0105AA  20F4               	addwfc	prodh,w,c
 45362  0105AC  6EDA               	movwf	fsr2h,c
 45363  0105AE  0E00               	movlw	0
 45364  0105B0  6EDF               	movwf	indf2,c
 45365                           
 45366                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 45367  0105B2  5045               	movf	USBStdSetCfgHandler@i,w,c
 45368  0105B4  0D01               	mullw	1
 45369  0105B6  0EE1               	movlw	low _ep_data_out
 45370  0105B8  24F3               	addwf	prodl,w,c
 45371  0105BA  6ED9               	movwf	fsr2l,c
 45372  0105BC  0E01               	movlw	high _ep_data_out
 45373  0105BE  20F4               	addwfc	prodh,w,c
 45374  0105C0  6EDA               	movwf	fsr2h,c
 45375  0105C2  0E00               	movlw	0
 45376  0105C4  6EDF               	movwf	indf2,c
 45377  0105C6  2A45               	incf	USBStdSetCfgHandler@i,f,c
 45378  0105C8  D7E6               	goto	i2l18597
 45379  0105CA                     i2u1736_40:
 45380                           
 45381                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 45382  0105CA  0EFC               	movlw	low _USBAlternateInterface
 45383  0105CC  6E2E               	movwf	i2memset@p1,c
 45384  0105CE  0E01               	movlw	high _USBAlternateInterface
 45385  0105D0  6E2F               	movwf	i2memset@p1+1,c
 45386  0105D2  0E00               	movlw	0
 45387  0105D4  6E31               	movwf	i2memset@c+1,c
 45388  0105D6  0E00               	movlw	0
 45389  0105D8  6E30               	movwf	i2memset@c,c
 45390  0105DA  0E00               	movlw	0
 45391  0105DC  6E33               	movwf	i2memset@n+1,c
 45392  0105DE  0E02               	movlw	2
 45393  0105E0  6E32               	movwf	i2memset@n,c
 45394  0105E2  ECE5  F09B         	call	i2_memset	;wreg free
 45395                           
 45396                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 45397  0105E6  9C65               	bcf	3941,6,c	;volatile
 45398                           
 45399                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 45400  0105E8  0E08               	movlw	8
 45401  0105EA  6E10               	movwf	_pBDTEntryIn,c
 45402  0105EC  0E0D               	movlw	13
 45403  0105EE  6E11               	movwf	_pBDTEntryIn+1,c
 45404                           
 45405                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 45406  0105F0  0E00               	movlw	0
 45407  0105F2  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 45408  0105F4  0E0D               	movlw	13
 45409  0105F6  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 45410                           
 45411                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 45412  0105F8  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 45413  0105FC  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 45414                           
 45415                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 45416  010600  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 45417                           
 45418                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 45419  010604  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 45420  010606  A4D8               	btfss	status,2,c
 45421  010608  D003               	goto	i2l276
 45422                           
 45423                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 45424  01060A  0E10               	movlw	16
 45425  01060C  6E2B               	movwf	_USBDeviceState,c	;volatile
 45426                           
 45427                           ;usb_device.c: 2015: }
 45428  01060E  0012               	return	
 45429  010610                     i2l276:
 45430                           
 45431                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 45432  010610  0E00               	movlw	0
 45433  010612  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45434  010614  0E01               	movlw	1
 45435  010616  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45436  010618  0E2D               	movlw	low _USBActiveConfiguration
 45437  01061A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45438  01061C  0E00               	movlw	high _USBActiveConfiguration
 45439  01061E  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45440  010620  0E00               	movlw	0
 45441  010622  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45442  010624  0E01               	movlw	1
 45443  010626  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45444  010628  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45445                           
 45446                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 45447  01062C  0E20               	movlw	32
 45448  01062E  6E2B               	movwf	_USBDeviceState,c	;volatile
 45449  010630  0012               	return	
 45450  010632                     __end_of_USBStdSetCfgHandler:
 45451                           	opt stack 0
 45452                           tosu	equ	0xFFF
 45453                           tosh	equ	0xFFE
 45454                           tosl	equ	0xFFD
 45455                           pclatu	equ	0xFFB
 45456                           pclath	equ	0xFFA
 45457                           tblptru	equ	0xFF8
 45458                           tblptrh	equ	0xFF7
 45459                           tblptrl	equ	0xFF6
 45460                           tablat	equ	0xFF5
 45461                           prodh	equ	0xFF4
 45462                           prodl	equ	0xFF3
 45463                           intcon	equ	0xFF2
 45464                           intcon2	equ	0xFF1
 45465                           intcon3	equ	0xFF0
 45466                           indf0	equ	0xFEF
 45467                           postinc0	equ	0xFEE
 45468                           fsr0h	equ	0xFEA
 45469                           fsr0l	equ	0xFE9
 45470                           wreg	equ	0xFE8
 45471                           indf1	equ	0xFE7
 45472                           postinc1	equ	0xFE6
 45473                           postdec1	equ	0xFE5
 45474                           plusw1	equ	0xFE3
 45475                           fsr1h	equ	0xFE2
 45476                           fsr1l	equ	0xFE1
 45477                           indf2	equ	0xFDF
 45478                           postinc2	equ	0xFDE
 45479                           postdec2	equ	0xFDD
 45480                           plusw2	equ	0xFDB
 45481                           fsr2h	equ	0xFDA
 45482                           fsr2l	equ	0xFD9
 45483                           status	equ	0xFD8
 45484                           
 45485 ;; *************** function i2_memset *****************
 45486 ;; Defined at:
 45487 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 45488 ;; Parameters:    Size  Location     Type
 45489 ;;  p1              2    0[COMRAM] PTR void 
 45490 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 45491 ;;  c               2    2[COMRAM] int 
 45492 ;;  n               2    4[COMRAM] unsigned int 
 45493 ;; Auto vars:     Size  Location     Type
 45494 ;;  memset          2    6[COMRAM] PTR unsigned char 
 45495 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 45496 ;; Return value:  Size  Location     Type
 45497 ;;                  2    0[COMRAM] PTR void 
 45498 ;; Registers used:
 45499 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45500 ;; Tracked objects:
 45501 ;;		On entry : 0/0
 45502 ;;		On exit  : 0/0
 45503 ;;		Unchanged: 0/0
 45504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45505 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45508 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45509 ;;Total ram usage:        8 bytes
 45510 ;; Hardware stack levels used:    1
 45511 ;; This function calls:
 45512 ;;		Nothing
 45513 ;; This function is called by:
 45514 ;;		_USBStdSetCfgHandler
 45515 ;;		i2_USBDeviceInit
 45516 ;; This function uses a non-reentrant model
 45517 ;;
 45518                           
 45519                           	psect	text228
 45520  0137CA                     __ptext228:
 45521                           	opt stack 0
 45522  0137CA                     i2_memset:
 45523                           	opt stack 15
 45524                           
 45525                           ;incstack = 0
 45526  0137CA  C02E  F034         	movff	i2memset@p1,i2memset@p
 45527  0137CE  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 45528  0137D2  D008               	goto	i2l4001
 45529  0137D4                     i2l12317:
 45530  0137D4  C034  FFD9         	movff	i2memset@p,fsr2l
 45531  0137D8  C035  FFDA         	movff	i2memset@p+1,fsr2h
 45532  0137DC  C030  FFDF         	movff	i2memset@c,indf2
 45533  0137E0  4A34               	infsnz	i2memset@p,f,c
 45534  0137E2  2A35               	incf	i2memset@p+1,f,c
 45535  0137E4                     i2l4001:
 45536  0137E4  0632               	decf	i2memset@n,f,c
 45537  0137E6  A0D8               	btfss	status,0,c
 45538  0137E8  0633               	decf	i2memset@n+1,f,c
 45539  0137EA  2832               	incf	i2memset@n,w,c
 45540  0137EC  E1F3               	bnz	i2l12317
 45541  0137EE  2833               	incf	i2memset@n+1,w,c
 45542  0137F0  B4D8               	btfsc	status,2,c
 45543  0137F2  0012               	return	
 45544  0137F4  D7EF               	goto	i2l4002
 45545  0137F6                     __end_ofi2_memset:
 45546                           	opt stack 0
 45547                           tosu	equ	0xFFF
 45548                           tosh	equ	0xFFE
 45549                           tosl	equ	0xFFD
 45550                           pclatu	equ	0xFFB
 45551                           pclath	equ	0xFFA
 45552                           tblptru	equ	0xFF8
 45553                           tblptrh	equ	0xFF7
 45554                           tblptrl	equ	0xFF6
 45555                           tablat	equ	0xFF5
 45556                           prodh	equ	0xFF4
 45557                           prodl	equ	0xFF3
 45558                           intcon	equ	0xFF2
 45559                           intcon2	equ	0xFF1
 45560                           intcon3	equ	0xFF0
 45561                           indf0	equ	0xFEF
 45562                           postinc0	equ	0xFEE
 45563                           fsr0h	equ	0xFEA
 45564                           fsr0l	equ	0xFE9
 45565                           wreg	equ	0xFE8
 45566                           indf1	equ	0xFE7
 45567                           postinc1	equ	0xFE6
 45568                           postdec1	equ	0xFE5
 45569                           plusw1	equ	0xFE3
 45570                           fsr1h	equ	0xFE2
 45571                           fsr1l	equ	0xFE1
 45572                           indf2	equ	0xFDF
 45573                           postinc2	equ	0xFDE
 45574                           postdec2	equ	0xFDD
 45575                           plusw2	equ	0xFDB
 45576                           fsr2h	equ	0xFDA
 45577                           fsr2l	equ	0xFD9
 45578                           status	equ	0xFD8
 45579                           
 45580 ;; *************** function _USBStdGetStatusHandler *****************
 45581 ;; Defined at:
 45582 ;;		line 2131 in file "usb_device.c"
 45583 ;; Parameters:    Size  Location     Type
 45584 ;;		None
 45585 ;; Auto vars:     Size  Location     Type
 45586 ;;  p               2    1[COMRAM] PTR struct __BDT
 45587 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 45588 ;; Return value:  Size  Location     Type
 45589 ;;                  1    wreg      void 
 45590 ;; Registers used:
 45591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45592 ;; Tracked objects:
 45593 ;;		On entry : 0/0
 45594 ;;		On exit  : 0/0
 45595 ;;		Unchanged: 0/0
 45596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45600 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45601 ;;Total ram usage:        3 bytes
 45602 ;; Hardware stack levels used:    1
 45603 ;; This function calls:
 45604 ;;		Nothing
 45605 ;; This function is called by:
 45606 ;;		_USBCheckStdRequest
 45607 ;; This function uses a non-reentrant model
 45608 ;;
 45609                           
 45610                           	psect	text229
 45611  0111AA                     __ptext229:
 45612                           	opt stack 0
 45613  0111AA                     _USBStdGetStatusHandler:
 45614                           	opt stack 13
 45615                           
 45616                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 45617                           
 45618                           ;incstack = 0
 45619  0111AA  0E00               	movlw	0
 45620  0111AC  010D               	movlb	13	; () banked
 45621  0111AE  6F38               	movwf	56,b	;volatile
 45622                           
 45623                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 45624  0111B0  0E00               	movlw	0
 45625  0111B2  6F39               	movwf	57,b	;volatile
 45626                           
 45627                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 45628  0111B4  D033               	goto	i2l295
 45629  0111B6                     i2l296:
 45630                           
 45631                           ; BSR set to: 13
 45632                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 45633  0111B6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45634                           
 45635                           ; BSR set to: 13
 45636                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 45637                           
 45638                           ; BSR set to: 13
 45639                           
 45640                           ; BSR set to: 13
 45641                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 45642                           
 45643                           ;usb_device.c: 2144: if(0 == 1)
 45644  0111B8  0428               	decf	_RemoteWakeup,w,c	;volatile
 45645  0111BA  A4D8               	btfss	status,2,c
 45646  0111BC  D03A               	goto	i2l299
 45647                           
 45648                           ; BSR set to: 13
 45649                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 45650  0111BE  8338               	bsf	56,1,b	;volatile
 45651                           
 45652                           ; BSR set to: 13
 45653                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 45654  0111C0  D038               	goto	i2l299
 45655  0111C2                     i2l300:
 45656                           
 45657                           ; BSR set to: 13
 45658                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 45659  0111C2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45660                           
 45661                           ;usb_device.c: 2156: break;
 45662  0111C4  D036               	goto	i2l299
 45663  0111C6                     i2l301:
 45664                           
 45665                           ; BSR set to: 13
 45666                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 45667  0111C6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 45668                           
 45669                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 45670  0111C8  BF34               	btfsc	52,7,b	;volatile
 45671  0111CA  D00A               	goto	i2l302
 45672                           
 45673                           ; BSR set to: 13
 45674                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 45675  0111CC  5134               	movf	52,w,b	;volatile
 45676  0111CE  0B0F               	andlw	15
 45677  0111D0  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 45678  0111D2  502E               	movf	??_USBStdGetStatusHandler,w,c
 45679  0111D4  0D02               	mullw	2
 45680  0111D6  0ED3               	movlw	low _pBDTEntryOut
 45681  0111D8  24F3               	addwf	prodl,w,c
 45682  0111DA  6ED9               	movwf	fsr2l,c
 45683  0111DC  0E01               	movlw	high _pBDTEntryOut
 45684  0111DE  D009               	goto	L57
 45685  0111E0                     i2l302:
 45686                           
 45687                           ; BSR set to: 13
 45688                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 45689                           
 45690                           ; BSR set to: 13
 45691  0111E0  5134               	movf	52,w,b	;volatile
 45692  0111E2  0B0F               	andlw	15
 45693  0111E4  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 45694  0111E6  502E               	movf	??_USBStdGetStatusHandler,w,c
 45695  0111E8  0D02               	mullw	2
 45696  0111EA  0E10               	movlw	low _pBDTEntryIn
 45697  0111EC  24F3               	addwf	prodl,w,c
 45698  0111EE  6ED9               	movwf	fsr2l,c
 45699  0111F0  0E00               	movlw	high _pBDTEntryIn
 45700  0111F2                     L57:
 45701  0111F2  20F4               	addwfc	prodh,w,c
 45702  0111F4  6EDA               	movwf	fsr2h,c
 45703  0111F6  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 45704  0111FA  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 45705                           
 45706                           ; BSR set to: 13
 45707                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 45708                           
 45709                           ; BSR set to: 13
 45710  0111FE  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 45711  011202  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 45712  011206  AEDF               	btfss	indf2,7,c
 45713  011208  D014               	goto	i2l299
 45714                           
 45715                           ; BSR set to: 13
 45716  01120A  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 45717  01120E  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 45718  011212  A4DF               	btfss	indf2,2,c
 45719  011214  D00E               	goto	i2l299
 45720                           
 45721                           ; BSR set to: 13
 45722                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 45723  011216  0E01               	movlw	1
 45724  011218  6F38               	movwf	56,b	;volatile
 45725                           
 45726                           ; BSR set to: 13
 45727                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 45728                           
 45729                           ; BSR set to: 13
 45730                           ;usb_device.c: 2176: break;
 45731  01121A  D00B               	goto	i2l299
 45732  01121C                     i2l295:
 45733                           
 45734                           ; BSR set to: 13
 45735                           
 45736                           ; BSR set to: 13
 45737  01121C  5130               	movf	48,w,b	;volatile
 45738  01121E  0B1F               	andlw	31
 45739                           
 45740                           ; Switch size 1, requested type "space"
 45741                           ; Number of cases is 3, Range of values is 0 to 2
 45742                           ; switch strategies available:
 45743                           ; Name         Instructions Cycles
 45744                           ; simple_byte           10     6 (average)
 45745                           ;	Chosen strategy is simple_byte
 45746  011220  0A00               	xorlw	0	; case 0
 45747  011222  B4D8               	btfsc	status,2,c
 45748  011224  D7C8               	goto	i2l296
 45749  011226  0A01               	xorlw	1	; case 1
 45750  011228  B4D8               	btfsc	status,2,c
 45751  01122A  D7CB               	goto	i2l300
 45752  01122C  0A03               	xorlw	3	; case 2
 45753  01122E  B4D8               	btfsc	status,2,c
 45754  011230  D7CA               	goto	i2l301
 45755  011232                     i2l299:
 45756                           
 45757                           ; BSR set to: 13
 45758                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 45759  011232  AE0D               	btfss	_inPipes+3,7,c	;volatile
 45760  011234  0012               	return	
 45761                           
 45762                           ; BSR set to: 13
 45763                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 45764  011236  0E38               	movlw	56
 45765  011238  6E0A               	movwf	_inPipes,c	;volatile
 45766  01123A  0E0D               	movlw	13
 45767  01123C  6E0B               	movwf	_inPipes+1,c	;volatile
 45768                           
 45769                           ; BSR set to: 13
 45770                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 45771  01123E  800D               	bsf	_inPipes+3,0,c	;volatile
 45772                           
 45773                           ; BSR set to: 13
 45774                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 45775  011240  0E02               	movlw	2
 45776  011242  6E0E               	movwf	_inPipes+4,c	;volatile
 45777  011244  0012               	return	
 45778  011246                     __end_of_USBStdGetStatusHandler:
 45779                           	opt stack 0
 45780                           tosu	equ	0xFFF
 45781                           tosh	equ	0xFFE
 45782                           tosl	equ	0xFFD
 45783                           pclatu	equ	0xFFB
 45784                           pclath	equ	0xFFA
 45785                           tblptru	equ	0xFF8
 45786                           tblptrh	equ	0xFF7
 45787                           tblptrl	equ	0xFF6
 45788                           tablat	equ	0xFF5
 45789                           prodh	equ	0xFF4
 45790                           prodl	equ	0xFF3
 45791                           intcon	equ	0xFF2
 45792                           intcon2	equ	0xFF1
 45793                           intcon3	equ	0xFF0
 45794                           indf0	equ	0xFEF
 45795                           postinc0	equ	0xFEE
 45796                           fsr0h	equ	0xFEA
 45797                           fsr0l	equ	0xFE9
 45798                           wreg	equ	0xFE8
 45799                           indf1	equ	0xFE7
 45800                           postinc1	equ	0xFE6
 45801                           postdec1	equ	0xFE5
 45802                           plusw1	equ	0xFE3
 45803                           fsr1h	equ	0xFE2
 45804                           fsr1l	equ	0xFE1
 45805                           indf2	equ	0xFDF
 45806                           postinc2	equ	0xFDE
 45807                           postdec2	equ	0xFDD
 45808                           plusw2	equ	0xFDB
 45809                           fsr2h	equ	0xFDA
 45810                           fsr2l	equ	0xFD9
 45811                           status	equ	0xFD8
 45812                           
 45813 ;; *************** function _USBStdGetDscHandler *****************
 45814 ;; Defined at:
 45815 ;;		line 2045 in file "usb_device.c"
 45816 ;; Parameters:    Size  Location     Type
 45817 ;;		None
 45818 ;; Auto vars:     Size  Location     Type
 45819 ;;		None
 45820 ;; Return value:  Size  Location     Type
 45821 ;;                  1    wreg      void 
 45822 ;; Registers used:
 45823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 45824 ;; Tracked objects:
 45825 ;;		On entry : 0/0
 45826 ;;		On exit  : 0/0
 45827 ;;		Unchanged: 0/0
 45828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45833 ;;Total ram usage:        2 bytes
 45834 ;; Hardware stack levels used:    1
 45835 ;; This function calls:
 45836 ;;		Nothing
 45837 ;; This function is called by:
 45838 ;;		_USBCheckStdRequest
 45839 ;; This function uses a non-reentrant model
 45840 ;;
 45841                           
 45842                           	psect	text230
 45843  00EDEA                     __ptext230:
 45844                           	opt stack 0
 45845  00EDEA                     _USBStdGetDscHandler:
 45846                           	opt stack 13
 45847                           
 45848                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 45849                           
 45850                           ; BSR set to: 13
 45851                           ;incstack = 0
 45852  00EDEA  0E80               	movlw	128
 45853  00EDEC  010D               	movlb	13	; () banked
 45854  00EDEE  1930               	xorwf	48,w,b	;volatile
 45855  00EDF0  A4D8               	btfss	status,2,c
 45856  00EDF2  0012               	return	
 45857                           
 45858                           ; BSR set to: 13
 45859                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 45860  00EDF4  0EC0               	movlw	192
 45861  00EDF6  6E0D               	movwf	_inPipes+3,c	;volatile
 45862                           
 45863                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 45864  00EDF8  D082               	goto	i2l282
 45865  00EDFA                     
 45866                           ; BSR set to: 13
 45867                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 45868                           
 45869                           ; BSR set to: 13
 45870  00EDFA  0E18               	movlw	low _device_dsc
 45871  00EDFC  6E0A               	movwf	_inPipes,c	;volatile
 45872  00EDFE  0EA4               	movlw	high _device_dsc
 45873  00EE00  6E0B               	movwf	_inPipes+1,c	;volatile
 45874                           
 45875                           ; BSR set to: 13
 45876                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 45877  00EE02  0E00               	movlw	0
 45878  00EE04  6E0F               	movwf	_inPipes+5,c	;volatile
 45879  00EE06  0E12               	movlw	18
 45880  00EE08  6E0E               	movwf	_inPipes+4,c	;volatile
 45881                           
 45882                           ;usb_device.c: 2060: break;
 45883  00EE0A  0012               	return	
 45884  00EE0C                     
 45885                           ; BSR set to: 13
 45886                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 45887                           
 45888                           ; BSR set to: 13
 45889  00EE0C  5132               	movf	50,w,b	;volatile
 45890  00EE0E  A4D8               	btfss	status,2,c
 45891  00EE10  D042               	goto	i2l286
 45892                           
 45893                           ; BSR set to: 13
 45894                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 45895  00EE12  5132               	movf	50,w,b	;volatile
 45896  00EE14  0D02               	mullw	2
 45897  00EE16  0E19               	movlw	low _USB_CD_Ptr
 45898  00EE18  24F3               	addwf	prodl,w,c
 45899  00EE1A  6EF6               	movwf	tblptrl,c
 45900  00EE1C  0EA3               	movlw	high _USB_CD_Ptr
 45901  00EE1E  20F4               	addwfc	prodh,w,c
 45902  00EE20  6EF7               	movwf	tblptrh,c
 45903  00EE22                     	if	1	;There are 3 active tblptr bytes
 45904  00EE22  6AF8               	clrf	tblptru,c
 45905  00EE24  0E00               	movlw	low (__mediumconst shr (0+16))
 45906  00EE26  22F8               	addwfc	tblptru,f,c
 45907  00EE28                     	endif
 45908  00EE28  0009               	tblrd		*+
 45909  00EE2A  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 45910  00EE2E  000A               	tblrd		*-
 45911  00EE30  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 45912                           
 45913                           ; BSR set to: 13
 45914                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 45915  00EE34  0E02               	movlw	2
 45916  00EE36  240A               	addwf	_inPipes,w,c	;volatile
 45917  00EE38  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 45918  00EE3A  0E00               	movlw	0
 45919  00EE3C  200B               	addwfc	_inPipes+1,w,c	;volatile
 45920  00EE3E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 45921  00EE40  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 45922  00EE44  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 45923  00EE48  0E00               	movlw	low (__mediumconst shr (0+16))
 45924  00EE4A  6EF8               	movwf	tblptru,c
 45925  00EE4C  0E0E               	movlw	(high __ramtop+-1)
 45926  00EE4E  64F7               	cpfsgt	tblptrh,c
 45927  00EE50  D003               	bra	i2u979_47
 45928  00EE52  0008               	tblrd		*
 45929  00EE54  50F5               	movf	tablat,w,c
 45930  00EE56  D005               	bra	i2u979_40
 45931  00EE58                     i2u979_47:
 45932  00EE58  CFF6 FFE9          	movff	tblptrl,fsr0l
 45933  00EE5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 45934  00EE60  50EF               	movf	indf0,w,c
 45935  00EE62                     i2u979_40:
 45936  00EE62  6E0E               	movwf	_inPipes+4,c	;volatile
 45937                           
 45938                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 45939  00EE64  0E03               	movlw	3
 45940  00EE66  240A               	addwf	_inPipes,w,c	;volatile
 45941  00EE68  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 45942  00EE6A  0E00               	movlw	0
 45943  00EE6C  200B               	addwfc	_inPipes+1,w,c	;volatile
 45944  00EE6E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 45945  00EE70  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 45946  00EE74  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 45947  00EE78  0E00               	movlw	low (__mediumconst shr (0+16))
 45948  00EE7A  6EF8               	movwf	tblptru,c
 45949  00EE7C  0E0E               	movlw	(high __ramtop+-1)
 45950  00EE7E  64F7               	cpfsgt	tblptrh,c
 45951  00EE80  D003               	bra	i2u980_47
 45952  00EE82  0008               	tblrd		*
 45953  00EE84  50F5               	movf	tablat,w,c
 45954  00EE86  D005               	bra	i2u980_40
 45955  00EE88                     i2u980_47:
 45956  00EE88  CFF6 FFE9          	movff	tblptrl,fsr0l
 45957  00EE8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 45958  00EE90  50EF               	movf	indf0,w,c
 45959  00EE92                     i2u980_40:
 45960  00EE92  6E0F               	movwf	_inPipes+5,c	;volatile
 45961                           
 45962                           ;usb_device.c: 2078: }
 45963  00EE94  0012               	return	
 45964  00EE96                     i2l286:
 45965                           
 45966                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 45967  00EE96  0E00               	movlw	0
 45968  00EE98  6E0D               	movwf	_inPipes+3,c	;volatile
 45969                           
 45970                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 45971  00EE9A  0012               	return	
 45972  00EE9C                     
 45973                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 45974  00EE9C  0E04               	movlw	4
 45975  00EE9E  010D               	movlb	13	; () banked
 45976  00EEA0  6132               	cpfslt	50,b	;volatile
 45977  00EEA2  D027               	goto	i2l289
 45978                           
 45979                           ; BSR set to: 13
 45980                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 45981  00EEA4  5132               	movf	50,w,b	;volatile
 45982  00EEA6  0D02               	mullw	2
 45983  00EEA8  0E07               	movlw	low _USB_SD_Ptr
 45984  00EEAA  24F3               	addwf	prodl,w,c
 45985  00EEAC  6EF6               	movwf	tblptrl,c
 45986  00EEAE  0EA3               	movlw	high _USB_SD_Ptr
 45987  00EEB0  20F4               	addwfc	prodh,w,c
 45988  00EEB2  6EF7               	movwf	tblptrh,c
 45989  00EEB4                     	if	1	;There are 3 active tblptr bytes
 45990  00EEB4  6AF8               	clrf	tblptru,c
 45991  00EEB6  0E00               	movlw	low (__mediumconst shr (0+16))
 45992  00EEB8  22F8               	addwfc	tblptru,f,c
 45993  00EEBA                     	endif
 45994  00EEBA  0009               	tblrd		*+
 45995  00EEBC  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 45996  00EEC0  000A               	tblrd		*-
 45997  00EEC2  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 45998                           
 45999                           ; BSR set to: 13
 46000                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 46001  00EEC6  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 46002  00EECA  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 46003  00EECE  0E00               	movlw	low (__mediumconst shr (0+16))
 46004  00EED0  6EF8               	movwf	tblptru,c
 46005  00EED2  0E0E               	movlw	(high __ramtop+-1)
 46006  00EED4  64F7               	cpfsgt	tblptrh,c
 46007  00EED6  D003               	bra	i2u982_47
 46008  00EED8  0008               	tblrd		*
 46009  00EEDA  50F5               	movf	tablat,w,c
 46010  00EEDC  D005               	bra	i2u982_40
 46011  00EEDE                     i2u982_47:
 46012  00EEDE  CFF6 FFE9          	movff	tblptrl,fsr0l
 46013  00EEE2  CFF7 FFEA          	movff	tblptrh,fsr0h
 46014  00EEE6  50EF               	movf	indf0,w,c
 46015  00EEE8                     i2u982_40:
 46016  00EEE8  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 46017  00EEEA  502E               	movf	??_USBStdGetDscHandler,w,c
 46018  00EEEC  6E0E               	movwf	_inPipes+4,c	;volatile
 46019  00EEEE  6A0F               	clrf	_inPipes+5,c	;volatile
 46020                           
 46021                           ;usb_device.c: 2094: }
 46022  00EEF0  0012               	return	
 46023  00EEF2                     i2l289:
 46024                           
 46025                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 46026  00EEF2  0E00               	movlw	0
 46027  00EEF4  6E0D               	movwf	_inPipes+3,c	;volatile
 46028                           
 46029                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 46030  00EEF6  0012               	return	
 46031  00EEF8                     
 46032                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 46033  00EEF8  0E00               	movlw	0
 46034  00EEFA  6E0D               	movwf	_inPipes+3,c	;volatile
 46035                           
 46036                           ;usb_device.c: 2112: }
 46037                           
 46038                           ;usb_device.c: 2111: break;
 46039  00EEFC  0012               	return	
 46040  00EEFE                     i2l282:
 46041  00EEFE  010D               	movlb	13	; () banked
 46042  00EF00  5133               	movf	51,w,b	;volatile
 46043                           
 46044                           ; Switch size 1, requested type "space"
 46045                           ; Number of cases is 3, Range of values is 1 to 3
 46046                           ; switch strategies available:
 46047                           ; Name         Instructions Cycles
 46048                           ; simple_byte           10     6 (average)
 46049                           ;	Chosen strategy is simple_byte
 46050  00EF02  0A01               	xorlw	1	; case 1
 46051  00EF04  B4D8               	btfsc	status,2,c
 46052  00EF06  D779               	goto	i2l283
 46053  00EF08  0A03               	xorlw	3	; case 2
 46054  00EF0A  B4D8               	btfsc	status,2,c
 46055  00EF0C  D77F               	goto	i2l285
 46056  00EF0E  0A01               	xorlw	1	; case 3
 46057  00EF10  B4D8               	btfsc	status,2,c
 46058  00EF12  D7C4               	goto	i2l288
 46059  00EF14  D7F1               	goto	i2l291
 46060  00EF16                     __end_of_USBStdGetDscHandler:
 46061                           	opt stack 0
 46062                           tosu	equ	0xFFF
 46063                           tosh	equ	0xFFE
 46064                           tosl	equ	0xFFD
 46065                           pclatu	equ	0xFFB
 46066                           pclath	equ	0xFFA
 46067                           tblptru	equ	0xFF8
 46068                           tblptrh	equ	0xFF7
 46069                           tblptrl	equ	0xFF6
 46070                           tablat	equ	0xFF5
 46071                           prodh	equ	0xFF4
 46072                           prodl	equ	0xFF3
 46073                           intcon	equ	0xFF2
 46074                           intcon2	equ	0xFF1
 46075                           intcon3	equ	0xFF0
 46076                           indf0	equ	0xFEF
 46077                           postinc0	equ	0xFEE
 46078                           fsr0h	equ	0xFEA
 46079                           fsr0l	equ	0xFE9
 46080                           wreg	equ	0xFE8
 46081                           indf1	equ	0xFE7
 46082                           postinc1	equ	0xFE6
 46083                           postdec1	equ	0xFE5
 46084                           plusw1	equ	0xFE3
 46085                           fsr1h	equ	0xFE2
 46086                           fsr1l	equ	0xFE1
 46087                           indf2	equ	0xFDF
 46088                           postinc2	equ	0xFDE
 46089                           postdec2	equ	0xFDD
 46090                           plusw2	equ	0xFDB
 46091                           fsr2h	equ	0xFDA
 46092                           fsr2l	equ	0xFD9
 46093                           status	equ	0xFD8
 46094                           
 46095 ;; *************** function _USBStdFeatureReqHandler *****************
 46096 ;; Defined at:
 46097 ;;		line 2756 in file "usb_device.c"
 46098 ;; Parameters:    Size  Location     Type
 46099 ;;		None
 46100 ;; Auto vars:     Size  Location     Type
 46101 ;;  p               2   27[COMRAM] PTR struct __BDT
 46102 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46103 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 46104 ;;		 -> UEP0(1), 
 46105 ;;  current_ep_d    1   26[COMRAM] struct .
 46106 ;; Return value:  Size  Location     Type
 46107 ;;                  1    wreg      void 
 46108 ;; Registers used:
 46109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46110 ;; Tracked objects:
 46111 ;;		On entry : 0/0
 46112 ;;		On exit  : 0/0
 46113 ;;		Unchanged: 0/0
 46114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46116 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46118 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46119 ;;Total ram usage:        6 bytes
 46120 ;; Hardware stack levels used:    1
 46121 ;; Hardware stack levels required when called:    4
 46122 ;; This function calls:
 46123 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46124 ;; This function is called by:
 46125 ;;		_USBCheckStdRequest
 46126 ;; This function uses a non-reentrant model
 46127 ;;
 46128                           
 46129                           	psect	text231
 46130  00D004                     __ptext231:
 46131                           	opt stack 0
 46132  00D004                     _USBStdFeatureReqHandler:
 46133                           	opt stack 9
 46134                           
 46135                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 46136                           
 46137                           ;incstack = 0
 46138  00D004  010D               	movlb	13	; () banked
 46139  00D006  0532               	decf	50,w,b	;volatile
 46140  00D008  A4D8               	btfss	status,2,c
 46141  00D00A  D00E               	goto	i2l375
 46142                           
 46143                           ; BSR set to: 13
 46144  00D00C  5130               	movf	48,w,b	;volatile
 46145  00D00E  0B1F               	andlw	31
 46146  00D010  0900               	iorlw	0
 46147  00D012  A4D8               	btfss	status,2,c
 46148  00D014  D009               	goto	i2l375
 46149                           
 46150                           ; BSR set to: 13
 46151                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 46152  00D016  8E0D               	bsf	_inPipes+3,7,c	;volatile
 46153                           
 46154                           ; BSR set to: 13
 46155                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 46156  00D018  0E03               	movlw	3
 46157  00D01A  1931               	xorwf	49,w,b	;volatile
 46158  00D01C  A4D8               	btfss	status,2,c
 46159  00D01E  D002               	goto	i2l374
 46160                           
 46161                           ; BSR set to: 13
 46162                           ;usb_device.c: 2806: RemoteWakeup = 1;
 46163  00D020  0E01               	movlw	1
 46164  00D022  D001               	goto	L58
 46165  00D024                     i2l374:
 46166                           
 46167                           ; BSR set to: 13
 46168                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 46169                           
 46170                           ; BSR set to: 13
 46171  00D024  0E00               	movlw	0
 46172  00D026                     L58:
 46173  00D026  6E28               	movwf	_RemoteWakeup,c	;volatile
 46174  00D028                     i2l375:
 46175                           
 46176                           ; BSR set to: 13
 46177                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 46178                           
 46179                           ; BSR set to: 13
 46180  00D028  5132               	movf	50,w,b	;volatile
 46181  00D02A  A4D8               	btfss	status,2,c
 46182  00D02C  0012               	return	
 46183                           
 46184                           ; BSR set to: 13
 46185  00D02E  5130               	movf	48,w,b	;volatile
 46186  00D030  0B1F               	andlw	31
 46187  00D032  0A02               	xorlw	2
 46188  00D034  A4D8               	btfss	status,2,c
 46189  00D036  0012               	return	
 46190                           
 46191                           ; BSR set to: 13
 46192  00D038  5134               	movf	52,w,b	;volatile
 46193  00D03A  0B0F               	andlw	15
 46194  00D03C  0900               	iorlw	0
 46195  00D03E  B4D8               	btfsc	status,2,c
 46196  00D040  0012               	return	
 46197                           
 46198                           ; BSR set to: 13
 46199  00D042  5134               	movf	52,w,b	;volatile
 46200  00D044  0B0F               	andlw	15
 46201  00D046  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46202  00D048  0E03               	movlw	3
 46203  00D04A  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 46204  00D04C  0012               	return	
 46205                           
 46206                           ; BSR set to: 13
 46207  00D04E  0E20               	movlw	32
 46208  00D050  182B               	xorwf	_USBDeviceState,w,c	;volatile
 46209  00D052  A4D8               	btfss	status,2,c
 46210  00D054  0012               	return	
 46211                           
 46212                           ; BSR set to: 13
 46213                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 46214  00D056  8E0D               	bsf	_inPipes+3,7,c	;volatile
 46215                           
 46216                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 46217  00D058  BF34               	btfsc	52,7,b	;volatile
 46218  00D05A  D019               	goto	i2l377
 46219                           
 46220                           ; BSR set to: 13
 46221                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 46222  00D05C  5134               	movf	52,w,b	;volatile
 46223  00D05E  0B0F               	andlw	15
 46224  00D060  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46225  00D062  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46226  00D064  0D02               	mullw	2
 46227  00D066  0ED3               	movlw	low _pBDTEntryOut
 46228  00D068  24F3               	addwf	prodl,w,c
 46229  00D06A  6ED9               	movwf	fsr2l,c
 46230  00D06C  0E01               	movlw	high _pBDTEntryOut
 46231  00D06E  20F4               	addwfc	prodh,w,c
 46232  00D070  6EDA               	movwf	fsr2h,c
 46233  00D072  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 46234  00D076  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 46235                           
 46236                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 46237  00D07A  5134               	movf	52,w,b	;volatile
 46238  00D07C  0B0F               	andlw	15
 46239  00D07E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46240  00D080  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46241  00D082  0D01               	mullw	1
 46242  00D084  0EE1               	movlw	low _ep_data_out
 46243  00D086  24F3               	addwf	prodl,w,c
 46244  00D088  6ED9               	movwf	fsr2l,c
 46245  00D08A  0E01               	movlw	high _ep_data_out
 46246  00D08C  D018               	goto	L59
 46247  00D08E                     i2l377:
 46248                           
 46249                           ; BSR set to: 13
 46250                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 46251                           
 46252                           ; BSR set to: 13
 46253  00D08E  5134               	movf	52,w,b	;volatile
 46254  00D090  0B0F               	andlw	15
 46255  00D092  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46256  00D094  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46257  00D096  0D02               	mullw	2
 46258  00D098  0E10               	movlw	low _pBDTEntryIn
 46259  00D09A  24F3               	addwf	prodl,w,c
 46260  00D09C  6ED9               	movwf	fsr2l,c
 46261  00D09E  0E00               	movlw	high _pBDTEntryIn
 46262  00D0A0  20F4               	addwfc	prodh,w,c
 46263  00D0A2  6EDA               	movwf	fsr2h,c
 46264  00D0A4  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 46265  00D0A8  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 46266                           
 46267                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 46268  00D0AC  5134               	movf	52,w,b	;volatile
 46269  00D0AE  0B0F               	andlw	15
 46270  00D0B0  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46271  00D0B2  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46272  00D0B4  0D01               	mullw	1
 46273  00D0B6  0EE4               	movlw	low _ep_data_in
 46274  00D0B8  24F3               	addwf	prodl,w,c
 46275  00D0BA  6ED9               	movwf	fsr2l,c
 46276  00D0BC  0E01               	movlw	high _ep_data_in
 46277  00D0BE                     L59:
 46278  00D0BE  20F4               	addwfc	prodh,w,c
 46279  00D0C0  6EDA               	movwf	fsr2h,c
 46280  00D0C2  50DF               	movf	indf2,w,c
 46281  00D0C4  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 46282                           
 46283                           ; BSR set to: 13
 46284                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 46285                           
 46286                           ; BSR set to: 13
 46287  00D0C6  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 46288  00D0C8  D006               	goto	i2l379
 46289                           
 46290                           ; BSR set to: 13
 46291                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 46292  00D0CA  0EFB               	movlw	251
 46293  00D0CC  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 46294  00D0CE  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46295  00D0D0  0EFF               	movlw	255
 46296  00D0D2  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 46297  00D0D4  D004               	goto	L60
 46298  00D0D6                     i2l379:
 46299                           
 46300                           ; BSR set to: 13
 46301                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 46302                           
 46303                           ; BSR set to: 13
 46304  00D0D6  0E04               	movlw	4
 46305  00D0D8  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 46306  00D0DA  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46307  00D0DC  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 46308  00D0DE                     L60:
 46309  00D0DE  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 46310                           
 46311                           ; BSR set to: 13
 46312                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 46313                           
 46314                           ; BSR set to: 13
 46315  00D0E0  BF34               	btfsc	52,7,b	;volatile
 46316  00D0E2  D00A               	goto	i2l381
 46317                           
 46318                           ; BSR set to: 13
 46319                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 46320  00D0E4  5134               	movf	52,w,b	;volatile
 46321  00D0E6  0B0F               	andlw	15
 46322  00D0E8  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46323  00D0EA  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46324  00D0EC  0D02               	mullw	2
 46325  00D0EE  0ED3               	movlw	low _pBDTEntryOut
 46326  00D0F0  24F3               	addwf	prodl,w,c
 46327  00D0F2  6ED9               	movwf	fsr2l,c
 46328  00D0F4  0E01               	movlw	high _pBDTEntryOut
 46329  00D0F6  D009               	goto	L61
 46330  00D0F8                     i2l381:
 46331                           
 46332                           ; BSR set to: 13
 46333                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 46334                           
 46335                           ; BSR set to: 13
 46336  00D0F8  5134               	movf	52,w,b	;volatile
 46337  00D0FA  0B0F               	andlw	15
 46338  00D0FC  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46339  00D0FE  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46340  00D100  0D02               	mullw	2
 46341  00D102  0E10               	movlw	low _pBDTEntryIn
 46342  00D104  24F3               	addwf	prodl,w,c
 46343  00D106  6ED9               	movwf	fsr2l,c
 46344  00D108  0E00               	movlw	high _pBDTEntryIn
 46345  00D10A                     L61:
 46346  00D10A  20F4               	addwfc	prodh,w,c
 46347  00D10C  6EDA               	movwf	fsr2h,c
 46348  00D10E  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 46349  00D112  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 46350                           
 46351                           ; BSR set to: 13
 46352                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 46353                           
 46354                           ; BSR set to: 13
 46355  00D116  0E03               	movlw	3
 46356  00D118  1931               	xorwf	49,w,b	;volatile
 46357  00D11A  A4D8               	btfss	status,2,c
 46358  00D11C  D02D               	goto	i2l383
 46359                           
 46360                           ; BSR set to: 13
 46361                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 46362  00D11E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46363  00D122  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46364  00D126  AEDF               	btfss	indf2,7,c
 46365  00D128  D01A               	goto	i2l386
 46366                           
 46367                           ; BSR set to: 13
 46368                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 46369  00D12A  BF34               	btfsc	52,7,b	;volatile
 46370  00D12C  D00A               	goto	i2l385
 46371                           
 46372                           ; BSR set to: 13
 46373                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 46374  00D12E  5134               	movf	52,w,b	;volatile
 46375  00D130  0B0F               	andlw	15
 46376  00D132  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46377  00D134  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46378  00D136  0D01               	mullw	1
 46379  00D138  0EE1               	movlw	low _ep_data_out
 46380  00D13A  24F3               	addwf	prodl,w,c
 46381  00D13C  6ED9               	movwf	fsr2l,c
 46382  00D13E  0E01               	movlw	high _ep_data_out
 46383  00D140  D00A               	goto	L62
 46384  00D142                     i2l385:
 46385                           
 46386                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 46387                           
 46388                           ; BSR set to: 1
 46389  00D142  010D               	movlb	13	; () banked
 46390  00D144  5134               	movf	52,w,b	;volatile
 46391  00D146  0B0F               	andlw	15
 46392  00D148  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46393  00D14A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46394  00D14C  0D01               	mullw	1
 46395  00D14E  0EE4               	movlw	low _ep_data_in
 46396  00D150  24F3               	addwf	prodl,w,c
 46397  00D152  6ED9               	movwf	fsr2l,c
 46398  00D154  0E01               	movlw	high _ep_data_in
 46399  00D156                     L62:
 46400  00D156  20F4               	addwfc	prodh,w,c
 46401  00D158  6EDA               	movwf	fsr2h,c
 46402  00D15A  0101               	movlb	1	; () banked
 46403  00D15C  82DF               	bsf	indf2,1,c
 46404  00D15E                     i2l386:
 46405                           
 46406                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 46407                           
 46408                           ; BSR set to: 1
 46409                           
 46410                           ; BSR set to: 1
 46411  00D15E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46412  00D162  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46413  00D166  0E00               	movlw	0
 46414  00D168  84DB               	bsf	plusw2,2,c
 46415                           
 46416                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 46417  00D16A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46418  00D16E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46419  00D172  0E00               	movlw	0
 46420  00D174  8EDB               	bsf	plusw2,7,c
 46421                           
 46422                           ;usb_device.c: 2878: }
 46423  00D176  0012               	return	
 46424  00D178                     i2l383:
 46425                           
 46426                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 46427  00D178  0E04               	movlw	4
 46428  00D17A  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 46429  00D17C  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46430  00D17E  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 46431  00D180  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 46432                           
 46433                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 46434  00D182  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46435  00D186  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46436  00D18A  AEDF               	btfss	indf2,7,c
 46437  00D18C  D01B               	goto	i2l388
 46438                           
 46439                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 46440  00D18E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46441  00D192  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46442  00D196  0E7F               	movlw	127
 46443  00D198  16DF               	andwf	indf2,f,c
 46444                           
 46445                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 46446  00D19A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46447  00D19E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46448  00D1A2  0E00               	movlw	0
 46449  00D1A4  8CDB               	bsf	plusw2,6,c
 46450                           
 46451                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 46452  00D1A6  0E00               	movlw	0
 46453  00D1A8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46454  00D1AA  0E05               	movlw	5
 46455  00D1AC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46456  00D1AE  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 46457  00D1B2  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 46458  00D1B6  0E00               	movlw	0
 46459  00D1B8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46460  00D1BA  0E02               	movlw	2
 46461  00D1BC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46462  00D1BE  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46463                           
 46464                           ;usb_device.c: 2893: }
 46465  00D1C2  D006               	goto	i2l389
 46466  00D1C4                     i2l388:
 46467                           
 46468                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 46469  00D1C4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46470  00D1C8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46471  00D1CC  0E00               	movlw	0
 46472  00D1CE  8CDB               	bsf	plusw2,6,c
 46473  00D1D0                     i2l389:
 46474                           
 46475                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 46476  00D1D0  0E04               	movlw	4
 46477  00D1D2  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 46478  00D1D4  6E49               	movwf	USBStdFeatureReqHandler@p,c
 46479  00D1D6  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 46480  00D1D8  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 46481                           
 46482                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 46483  00D1DA  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 46484  00D1DC  D006               	goto	i2u1754_40
 46485  00D1DE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46486  00D1E2  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46487  00D1E6  AEDF               	btfss	indf2,7,c
 46488  00D1E8  D030               	goto	i2l390
 46489  00D1EA                     i2u1754_40:
 46490                           
 46491                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 46492  00D1EA  010D               	movlb	13	; () banked
 46493  00D1EC  BF34               	btfsc	52,7,b	;volatile
 46494  00D1EE  D00A               	goto	i2l393
 46495                           
 46496                           ; BSR set to: 13
 46497                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 46498  00D1F0  5134               	movf	52,w,b	;volatile
 46499  00D1F2  0B0F               	andlw	15
 46500  00D1F4  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46501  00D1F6  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46502  00D1F8  0D01               	mullw	1
 46503  00D1FA  0EE1               	movlw	low _ep_data_out
 46504  00D1FC  24F3               	addwf	prodl,w,c
 46505  00D1FE  6ED9               	movwf	fsr2l,c
 46506  00D200  0E01               	movlw	high _ep_data_out
 46507  00D202  D00A               	goto	L63
 46508  00D204                     i2l393:
 46509                           
 46510                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 46511                           
 46512                           ; BSR set to: 1
 46513  00D204  010D               	movlb	13	; () banked
 46514  00D206  5134               	movf	52,w,b	;volatile
 46515  00D208  0B0F               	andlw	15
 46516  00D20A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46517  00D20C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46518  00D20E  0D01               	mullw	1
 46519  00D210  0EE4               	movlw	low _ep_data_in
 46520  00D212  24F3               	addwf	prodl,w,c
 46521  00D214  6ED9               	movwf	fsr2l,c
 46522  00D216  0E01               	movlw	high _ep_data_in
 46523  00D218                     L63:
 46524  00D218  20F4               	addwfc	prodh,w,c
 46525  00D21A  6EDA               	movwf	fsr2h,c
 46526  00D21C  0101               	movlb	1	; () banked
 46527  00D21E  92DF               	bcf	indf2,1,c
 46528                           
 46529                           ; BSR set to: 1
 46530                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 46531                           
 46532                           ; BSR set to: 1
 46533  00D220  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46534  00D224  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46535  00D228  0E3B               	movlw	59
 46536  00D22A  16DF               	andwf	indf2,f,c
 46537                           
 46538                           ; BSR set to: 1
 46539                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 46540  00D22C  0E00               	movlw	0
 46541  00D22E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46542  00D230  0E05               	movlw	5
 46543  00D232  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46544  00D234  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 46545  00D238  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 46546  00D23C  0E00               	movlw	0
 46547  00D23E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46548  00D240  0E02               	movlw	2
 46549  00D242  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46550  00D244  EC8E  F08C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46551                           
 46552                           ;usb_device.c: 2923: }
 46553  00D248  D006               	goto	i2l395
 46554  00D24A                     i2l390:
 46555                           
 46556                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 46557  00D24A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 46558  00D24E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 46559  00D252  0E3B               	movlw	59
 46560  00D254  16DF               	andwf	indf2,f,c
 46561  00D256                     i2l395:
 46562                           
 46563                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 46564  00D256  010D               	movlb	13	; () banked
 46565  00D258  5134               	movf	52,w,b	;volatile
 46566  00D25A  0B0F               	andlw	15
 46567  00D25C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 46568  00D25E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 46569  00D260  0D01               	mullw	1
 46570  00D262  0E26               	movlw	38
 46571  00D264  24F3               	addwf	prodl,w,c
 46572  00D266  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 46573  00D268  0E0F               	movlw	15
 46574  00D26A  20F4               	addwfc	prodh,w,c
 46575  00D26C  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 46576                           
 46577                           ; BSR set to: 13
 46578                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 46579  00D26E  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 46580  00D272  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 46581  00D276  0EFE               	movlw	254
 46582  00D278  16DF               	andwf	indf2,f,c
 46583                           
 46584                           ; BSR set to: 13
 46585  00D27A  0012               	return	
 46586  00D27C                     __end_of_USBStdFeatureReqHandler:
 46587                           	opt stack 0
 46588                           tosu	equ	0xFFF
 46589                           tosh	equ	0xFFE
 46590                           tosl	equ	0xFFD
 46591                           pclatu	equ	0xFFB
 46592                           pclath	equ	0xFFA
 46593                           tblptru	equ	0xFF8
 46594                           tblptrh	equ	0xFF7
 46595                           tblptrl	equ	0xFF6
 46596                           tablat	equ	0xFF5
 46597                           prodh	equ	0xFF4
 46598                           prodl	equ	0xFF3
 46599                           intcon	equ	0xFF2
 46600                           intcon2	equ	0xFF1
 46601                           intcon3	equ	0xFF0
 46602                           indf0	equ	0xFEF
 46603                           postinc0	equ	0xFEE
 46604                           fsr0h	equ	0xFEA
 46605                           fsr0l	equ	0xFE9
 46606                           wreg	equ	0xFE8
 46607                           indf1	equ	0xFE7
 46608                           postinc1	equ	0xFE6
 46609                           postdec1	equ	0xFE5
 46610                           plusw1	equ	0xFE3
 46611                           fsr1h	equ	0xFE2
 46612                           fsr1l	equ	0xFE1
 46613                           indf2	equ	0xFDF
 46614                           postinc2	equ	0xFDE
 46615                           postdec2	equ	0xFDD
 46616                           plusw2	equ	0xFDB
 46617                           fsr2h	equ	0xFDA
 46618                           fsr2l	equ	0xFD9
 46619                           status	equ	0xFD8
 46620                           
 46621 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 46622 ;; Defined at:
 46623 ;;		line 54 in file "usb_events.c"
 46624 ;; Parameters:    Size  Location     Type
 46625 ;;  event           2   15[COMRAM] enum E6960
 46626 ;;  pdata           2   17[COMRAM] PTR void 
 46627 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 46628 ;;		 -> BDT(48), 
 46629 ;;  size            2   19[COMRAM] unsigned int 
 46630 ;; Auto vars:     Size  Location     Type
 46631 ;;		None
 46632 ;; Return value:  Size  Location     Type
 46633 ;;                  1    wreg      unsigned char 
 46634 ;; Registers used:
 46635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46636 ;; Tracked objects:
 46637 ;;		On entry : 0/0
 46638 ;;		On exit  : 0/0
 46639 ;;		Unchanged: 0/0
 46640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46641 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46645 ;;Total ram usage:        8 bytes
 46646 ;; Hardware stack levels used:    1
 46647 ;; Hardware stack levels required when called:    3
 46648 ;; This function calls:
 46649 ;;		_APP_DeviceCustomHIDInitialize
 46650 ;;		_APP_DeviceMSDInitialize
 46651 ;;		_MSDTransferTerminated
 46652 ;;		_USBCheckHIDRequest
 46653 ;;		_USBCheckMSDRequest
 46654 ;;		i2_SYSTEM_Initialize
 46655 ;; This function is called by:
 46656 ;;		_USBDeviceTasks
 46657 ;;		_USBStdSetCfgHandler
 46658 ;;		_USBSuspend
 46659 ;;		_USBWakeFromSuspend
 46660 ;;		_USBCtrlTrfSetupHandler
 46661 ;;		_USBCheckStdRequest
 46662 ;;		_USBStdFeatureReqHandler
 46663 ;; This function uses a non-reentrant model
 46664 ;;
 46665                           
 46666                           	psect	text232
 46667  01191C                     __ptext232:
 46668                           	opt stack 0
 46669  01191C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 46670                           	opt stack 13
 46671                           
 46672                           ;usb_events.c: 56: switch((int)event)
 46673                           
 46674                           ;incstack = 0
 46675  01191C  D019               	goto	i2l824
 46676  01191E                     
 46677                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 46678  01191E  0E01               	movlw	1
 46679  011920  EC55  F096         	call	i2_SYSTEM_Initialize
 46680                           
 46681                           ;usb_events.c: 79: break;
 46682  011924  0012               	return	
 46683  011926                     
 46684                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 46685  011926  0E02               	movlw	2
 46686  011928  EC55  F096         	call	i2_SYSTEM_Initialize
 46687                           
 46688                           ;usb_events.c: 90: break;
 46689  01192C  0012               	return	
 46690  01192E                     
 46691                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 46692  01192E  ECA0  F09A         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 46693                           
 46694                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 46695  011932  ECF5  F09E         	call	_APP_DeviceMSDInitialize	;wreg free
 46696                           
 46697                           ;usb_events.c: 100: break;
 46698                           
 46699                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 46700                           
 46701                           ;usb_events.c: 97: break;
 46702  011936  0012               	return	
 46703  011938                     
 46704                           ;usb_events.c: 105: USBCheckHIDRequest();
 46705  011938  ECF2  F083         	call	_USBCheckHIDRequest	;wreg free
 46706                           
 46707                           ;usb_events.c: 108: USBCheckMSDRequest();
 46708  01193C  ECB4  F086         	call	_USBCheckMSDRequest	;wreg free
 46709                           
 46710                           ;usb_events.c: 112: break;
 46711                           
 46712                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 46713                           
 46714                           ;usb_events.c: 109: break;
 46715  011940  0012               	return	
 46716  011942                     
 46717                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 46718  011942  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 46719  011946  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 46720  01194A  EC00  F096         	call	_MSDTransferTerminated	;wreg free
 46721                           
 46722                           ;usb_events.c: 129: }
 46723                           
 46724                           ;usb_events.c: 128: break;
 46725                           
 46726                           ;usb_events.c: 127: default:
 46727                           
 46728                           ;usb_events.c: 125: break;
 46729  01194E  0012               	return	
 46730  011950                     i2l824:
 46731  011950  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 46732  011954  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 46733                           
 46734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 46735                           ; Switch size 1, requested type "space"
 46736                           ; Number of cases is 2, Range of values is 0 to 127
 46737                           ; switch strategies available:
 46738                           ; Name         Instructions Cycles
 46739                           ; simple_byte            7     4 (average)
 46740                           ;	Chosen strategy is simple_byte
 46741  011958  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 46742  01195A  0A00               	xorlw	0	; case 0
 46743  01195C  B4D8               	btfsc	status,2,c
 46744  01195E  D004               	goto	i2l23525
 46745  011960  0A7F               	xorlw	127	; case 127
 46746  011962  A4D8               	btfss	status,2,c
 46747  011964  0012               	return	
 46748  011966  D01A               	goto	i2l23527
 46749  011968                     i2l23525:
 46750                           
 46751                           ; Switch size 1, requested type "space"
 46752                           ; Number of cases is 8, Range of values is 1 to 117
 46753                           ; switch strategies available:
 46754                           ; Name         Instructions Cycles
 46755                           ; simple_byte           25    13 (average)
 46756                           ;	Chosen strategy is simple_byte
 46757  011968  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 46758  01196A  0A01               	xorlw	1	; case 1
 46759  01196C  B4D8               	btfsc	status,2,c
 46760  01196E  D7DF               	goto	i2l830
 46761  011970  0A03               	xorlw	3	; case 2
 46762  011972  B4D8               	btfsc	status,2,c
 46763  011974  0012               	return	
 46764  011976  0A01               	xorlw	1	; case 3
 46765  011978  B4D8               	btfsc	status,2,c
 46766  01197A  D7DE               	goto	i2l832
 46767  01197C  0A06               	xorlw	6	; case 5
 46768  01197E  B4D8               	btfsc	status,2,c
 46769  011980  D7E0               	goto	i2l834
 46770  011982  0A77               	xorlw	119	; case 114
 46771  011984  B4D8               	btfsc	status,2,c
 46772  011986  0012               	return	
 46773  011988  0A01               	xorlw	1	; case 115
 46774  01198A  B4D8               	btfsc	status,2,c
 46775  01198C  0012               	return	
 46776  01198E  0A07               	xorlw	7	; case 116
 46777  011990  B4D8               	btfsc	status,2,c
 46778  011992  D7C9               	goto	i2l829
 46779  011994  0A01               	xorlw	1	; case 117
 46780  011996  A4D8               	btfss	status,2,c
 46781  011998  0012               	return	
 46782  01199A  D7C1               	goto	i2l828
 46783  01199C                     i2l23527:
 46784                           
 46785                           ; Switch size 1, requested type "space"
 46786                           ; Number of cases is 1, Range of values is 255 to 255
 46787                           ; switch strategies available:
 46788                           ; Name         Instructions Cycles
 46789                           ; simple_byte            4     3 (average)
 46790                           ;	Chosen strategy is simple_byte
 46791  01199C  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 46792  01199E  0AFF               	xorlw	255	; case 255
 46793  0119A0  0012               	return	
 46794  0119A2                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 46795                           	opt stack 0
 46796                           tosu	equ	0xFFF
 46797                           tosh	equ	0xFFE
 46798                           tosl	equ	0xFFD
 46799                           pclatu	equ	0xFFB
 46800                           pclath	equ	0xFFA
 46801                           tblptru	equ	0xFF8
 46802                           tblptrh	equ	0xFF7
 46803                           tblptrl	equ	0xFF6
 46804                           tablat	equ	0xFF5
 46805                           prodh	equ	0xFF4
 46806                           prodl	equ	0xFF3
 46807                           intcon	equ	0xFF2
 46808                           intcon2	equ	0xFF1
 46809                           intcon3	equ	0xFF0
 46810                           indf0	equ	0xFEF
 46811                           postinc0	equ	0xFEE
 46812                           fsr0h	equ	0xFEA
 46813                           fsr0l	equ	0xFE9
 46814                           wreg	equ	0xFE8
 46815                           indf1	equ	0xFE7
 46816                           postinc1	equ	0xFE6
 46817                           postdec1	equ	0xFE5
 46818                           plusw1	equ	0xFE3
 46819                           fsr1h	equ	0xFE2
 46820                           fsr1l	equ	0xFE1
 46821                           indf2	equ	0xFDF
 46822                           postinc2	equ	0xFDE
 46823                           postdec2	equ	0xFDD
 46824                           plusw2	equ	0xFDB
 46825                           fsr2h	equ	0xFDA
 46826                           fsr2l	equ	0xFD9
 46827                           status	equ	0xFD8
 46828                           
 46829 ;; *************** function i2_SYSTEM_Initialize *****************
 46830 ;; Defined at:
 46831 ;;		line 78 in file "system.c"
 46832 ;; Parameters:    Size  Location     Type
 46833 ;;  state           1    wreg     enum E6751
 46834 ;; Auto vars:     Size  Location     Type
 46835 ;;  state           1    4[COMRAM] enum E6751
 46836 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 46837 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 46838 ;; Return value:  Size  Location     Type
 46839 ;;                  1    wreg      void 
 46840 ;; Registers used:
 46841 ;;		wreg, status,2, status,0
 46842 ;; Tracked objects:
 46843 ;;		On entry : 0/0
 46844 ;;		On exit  : 0/0
 46845 ;;		Unchanged: 0/0
 46846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46848 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46850 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46851 ;;Total ram usage:        5 bytes
 46852 ;; Hardware stack levels used:    1
 46853 ;; This function calls:
 46854 ;;		Nothing
 46855 ;; This function is called by:
 46856 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46857 ;; This function uses a non-reentrant model
 46858 ;;
 46859                           
 46860                           	psect	text233
 46861  012CAA                     __ptext233:
 46862                           	opt stack 0
 46863  012CAA                     i2_SYSTEM_Initialize:
 46864                           	opt stack 15
 46865                           
 46866                           ;incstack = 0
 46867                           ;i2SYSTEM_Initialize@state stored from wreg
 46868  012CAA  6E32               	movwf	i2SYSTEM_Initialize@state,c
 46869                           
 46870                           ;system.c: 80: switch(state)
 46871  012CAC  D01D               	goto	i2l949
 46872  012CAE                     
 46873                           ;system.c: 89: {;system.c: 90: unsigned int pll_startup_counter = 600;
 46874  012CAE  0E02               	movlw	2
 46875  012CB0  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 46876  012CB2  0E58               	movlw	88
 46877  012CB4  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 46878                           
 46879                           ;system.c: 91: OSCTUNEbits.PLLEN = 1;
 46880  012CB6  8C9B               	bsf	3995,6,c	;volatile
 46881  012CB8                     i2l11879:
 46882  012CB8  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 46883  012CBA  A0D8               	btfss	status,0,c
 46884  012CBC  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 46885  012CBE  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 46886  012CC0  E1FB               	bnz	i2l11879
 46887  012CC2  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 46888  012CC4  B4D8               	btfsc	status,2,c
 46889  012CC6  0012               	return	
 46890  012CC8  D7F7               	goto	i2l952
 46891  012CCA                     
 46892                           ;system.c: 117: OSCCON = 0x70;
 46893  012CCA  0E70               	movlw	112
 46894  012CCC  6ED3               	movwf	4051,c	;volatile
 46895                           
 46896                           ;system.c: 123: {;system.c: 124: unsigned int pll_startup_counter = 800;
 46897  012CCE  0E03               	movlw	3
 46898  012CD0  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3287+1,c
 46899  012CD2  0E20               	movlw	32
 46900  012CD4  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3287,c
 46901  012CD6                     i2l11883:
 46902  012CD6  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3287,f,c
 46903  012CD8  A0D8               	btfss	status,0,c
 46904  012CDA  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3287+1,f,c
 46905  012CDC  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3287,w,c
 46906  012CDE  E1FB               	bnz	i2l11883
 46907  012CE0  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3287+1,w,c
 46908  012CE2  B4D8               	btfsc	status,2,c
 46909  012CE4  0012               	return	
 46910  012CE6  D7F7               	goto	i2l958
 46911  012CE8                     i2l949:
 46912  012CE8  5032               	movf	i2SYSTEM_Initialize@state,w,c
 46913                           
 46914                           ; Switch size 1, requested type "space"
 46915                           ; Number of cases is 3, Range of values is 0 to 2
 46916                           ; switch strategies available:
 46917                           ; Name         Instructions Cycles
 46918                           ; simple_byte           10     6 (average)
 46919                           ;	Chosen strategy is simple_byte
 46920  012CEA  0A00               	xorlw	0	; case 0
 46921  012CEC  B4D8               	btfsc	status,2,c
 46922  012CEE  D7DF               	goto	i2l950
 46923  012CF0  0A01               	xorlw	1	; case 1
 46924  012CF2  B4D8               	btfsc	status,2,c
 46925  012CF4  0012               	return	
 46926  012CF6  0A03               	xorlw	3	; case 2
 46927  012CF8  A4D8               	btfss	status,2,c
 46928  012CFA  0012               	return	
 46929  012CFC  D7E6               	goto	i2l956
 46930  012CFE                     __end_ofi2_SYSTEM_Initialize:
 46931                           	opt stack 0
 46932                           tosu	equ	0xFFF
 46933                           tosh	equ	0xFFE
 46934                           tosl	equ	0xFFD
 46935                           pclatu	equ	0xFFB
 46936                           pclath	equ	0xFFA
 46937                           tblptru	equ	0xFF8
 46938                           tblptrh	equ	0xFF7
 46939                           tblptrl	equ	0xFF6
 46940                           tablat	equ	0xFF5
 46941                           prodh	equ	0xFF4
 46942                           prodl	equ	0xFF3
 46943                           intcon	equ	0xFF2
 46944                           intcon2	equ	0xFF1
 46945                           intcon3	equ	0xFF0
 46946                           indf0	equ	0xFEF
 46947                           postinc0	equ	0xFEE
 46948                           fsr0h	equ	0xFEA
 46949                           fsr0l	equ	0xFE9
 46950                           wreg	equ	0xFE8
 46951                           indf1	equ	0xFE7
 46952                           postinc1	equ	0xFE6
 46953                           postdec1	equ	0xFE5
 46954                           plusw1	equ	0xFE3
 46955                           fsr1h	equ	0xFE2
 46956                           fsr1l	equ	0xFE1
 46957                           indf2	equ	0xFDF
 46958                           postinc2	equ	0xFDE
 46959                           postdec2	equ	0xFDD
 46960                           plusw2	equ	0xFDB
 46961                           fsr2h	equ	0xFDA
 46962                           fsr2l	equ	0xFD9
 46963                           status	equ	0xFD8
 46964                           
 46965 ;; *************** function _USBCheckMSDRequest *****************
 46966 ;; Defined at:
 46967 ;;		line 218 in file "usb_device_msd.c"
 46968 ;; Parameters:    Size  Location     Type
 46969 ;;		None
 46970 ;; Auto vars:     Size  Location     Type
 46971 ;;		None
 46972 ;; Return value:  Size  Location     Type
 46973 ;;                  1    wreg      void 
 46974 ;; Registers used:
 46975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46976 ;; Tracked objects:
 46977 ;;		On entry : 0/0
 46978 ;;		On exit  : 0/0
 46979 ;;		Unchanged: 0/0
 46980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46982 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46985 ;;Total ram usage:        4 bytes
 46986 ;; Hardware stack levels used:    1
 46987 ;; Hardware stack levels required when called:    1
 46988 ;; This function calls:
 46989 ;;		i2_USBTransferOnePacket
 46990 ;; This function is called by:
 46991 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46992 ;; This function uses a non-reentrant model
 46993 ;;
 46994                           
 46995                           	psect	text234
 46996  010D68                     __ptext234:
 46997                           	opt stack 0
 46998  010D68                     _USBCheckMSDRequest:
 46999                           	opt stack 14
 47000                           
 47001                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 47002                           
 47003                           ;incstack = 0
 47004  010D68  010D               	movlb	13	; () banked
 47005  010D6A  5130               	movf	48,w,b	;volatile
 47006  010D6C  0B1F               	andlw	31
 47007  010D6E  06E8               	decf	wreg,f,c
 47008  010D70  A4D8               	btfss	status,2,c
 47009  010D72  0012               	return	
 47010                           
 47011                           ; BSR set to: 13
 47012                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 47013                           
 47014                           ; BSR set to: 13
 47015                           
 47016                           ; BSR set to: 13
 47017                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 47018  010D74  5134               	movf	52,w,b	;volatile
 47019  010D76  A4D8               	btfss	status,2,c
 47020  010D78  0012               	return	
 47021  010D7A  D04D               	goto	i2l549
 47022  010D7C                     
 47023                           ; BSR set to: 13
 47024                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 47025                           
 47026                           ; BSR set to: 13
 47027  010D7C  5132               	movf	50,w,b	;volatile
 47028  010D7E  1133               	iorwf	51,w,b	;volatile
 47029  010D80  A4D8               	btfss	status,2,c
 47030  010D82  0012               	return	
 47031                           
 47032                           ; BSR set to: 13
 47033  010D84  5136               	movf	54,w,b	;volatile
 47034  010D86  1137               	iorwf	55,w,b	;volatile
 47035  010D88  A4D8               	btfss	status,2,c
 47036  010D8A  0012               	return	
 47037                           
 47038                           ; BSR set to: 13
 47039                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 47040                           
 47041                           ; BSR set to: 13
 47042                           
 47043                           ; BSR set to: 13
 47044                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 47045  010D8C  0E00               	movlw	0
 47046  010D8E  0100               	movlb	0	; () banked
 47047  010D90  6FE7               	movwf	_MSD_State& (0+255),b
 47048                           
 47049                           ; BSR set to: 0
 47050                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 47051  010D92  69E6               	setf	_MSDCommandState& (0+255),b
 47052                           
 47053                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 47054  010D94  0E00               	movlw	0
 47055  010D96  0101               	movlb	1	; () banked
 47056  010D98  6FF9               	movwf	_MSDReadState& (0+255),b
 47057                           
 47058                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 47059  010D9A  0E00               	movlw	0
 47060  010D9C  6E1F               	movwf	_MSDWriteState,c
 47061                           
 47062                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 47063  010D9E  0E01               	movlw	1
 47064  010DA0  6FF5               	movwf	_MSDCBWValid& (0+255),b
 47065                           
 47066                           ; BSR set to: 1
 47067                           
 47068                           ; BSR set to: 1
 47069                           
 47070                           ; BSR set to: 1
 47071                           
 47072                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 47073  010DA2  C1D7  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2643
 47074  010DA6  C1D8  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2643+1
 47075                           
 47076                           ; BSR set to: 1
 47077  010DAA  5039               	movf	_USBCheckMSDRequest$2643,w,c
 47078  010DAC  103A               	iorwf	_USBCheckMSDRequest$2643+1,w,c
 47079  010DAE  B4D8               	btfsc	status,2,c
 47080  010DB0  D00A               	goto	i2u872_40
 47081                           
 47082                           ; BSR set to: 1
 47083                           
 47084                           ; BSR set to: 1
 47085                           
 47086                           ; BSR set to: 1
 47087                           
 47088                           ; BSR set to: 1
 47089  010DB2  C1D7  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2644
 47090  010DB6  C1D8  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2644+1
 47091                           
 47092                           ; BSR set to: 1
 47093                           
 47094                           ; BSR set to: 1
 47095  010DBA  C03B  FFD9         	movff	_USBCheckMSDRequest$2644,fsr2l
 47096  010DBE  C03C  FFDA         	movff	_USBCheckMSDRequest$2644+1,fsr2h
 47097  010DC2  BEDF               	btfsc	indf2,7,c
 47098  010DC4  D00F               	goto	i2l554
 47099  010DC6                     i2u872_40:
 47100                           
 47101                           ; BSR set to: 1
 47102                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 47103                           
 47104                           ; BSR set to: 1
 47105  010DC6  0E00               	movlw	0
 47106  010DC8  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 47107  010DCA  0E40               	movlw	64
 47108  010DCC  6E2F               	movwf	i2USBTransferOnePacket@data,c
 47109  010DCE  0E0D               	movlw	13
 47110  010DD0  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 47111  010DD2  0E40               	movlw	64
 47112  010DD4  6E31               	movwf	i2USBTransferOnePacket@len,c
 47113  010DD6  0E02               	movlw	2
 47114  010DD8  EC7D  F07D         	call	i2_USBTransferOnePacket
 47115  010DDC  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 47116  010DE0  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 47117  010DE4                     i2l554:
 47118                           
 47119                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 47120  010DE4  0E80               	movlw	128
 47121  010DE6  6E0D               	movwf	_inPipes+3,c	;volatile
 47122                           
 47123                           ;usb_device_msd.c: 263: break;
 47124  010DE8  0012               	return	
 47125  010DEA                     
 47126                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 47127  010DEA  010D               	movlb	13	; () banked
 47128  010DEC  5132               	movf	50,w,b	;volatile
 47129  010DEE  1133               	iorwf	51,w,b	;volatile
 47130  010DF0  A4D8               	btfss	status,2,c
 47131  010DF2  0012               	return	
 47132                           
 47133                           ; BSR set to: 13
 47134  010DF4  0536               	decf	54,w,b	;volatile
 47135  010DF6  1137               	iorwf	55,w,b	;volatile
 47136  010DF8  A4D8               	btfss	status,2,c
 47137  010DFA  0012               	return	
 47138                           
 47139                           ; BSR set to: 13
 47140                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 47141                           
 47142                           ; BSR set to: 13
 47143                           
 47144                           ; BSR set to: 13
 47145                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 47146  010DFC  0E00               	movlw	0
 47147  010DFE  6F38               	movwf	56,b	;volatile
 47148                           
 47149                           ; BSR set to: 13
 47150                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 47151  010E00  0E38               	movlw	56
 47152  010E02  6E0A               	movwf	_inPipes,c	;volatile
 47153  010E04  0E0D               	movlw	13
 47154  010E06  6E0B               	movwf	_inPipes+1,c	;volatile
 47155                           
 47156                           ; BSR set to: 13
 47157  010E08  0E00               	movlw	0
 47158  010E0A  6E0F               	movwf	_inPipes+5,c	;volatile
 47159  010E0C  0E01               	movlw	1
 47160  010E0E  6E0E               	movwf	_inPipes+4,c	;volatile
 47161                           
 47162                           ; BSR set to: 13
 47163  010E10  0EC1               	movlw	193
 47164  010E12  6E0D               	movwf	_inPipes+3,c	;volatile
 47165                           
 47166                           ; BSR set to: 13
 47167                           ;usb_device_msd.c: 278: }
 47168                           
 47169                           ;usb_device_msd.c: 277: break;
 47170  010E14  0012               	return	
 47171  010E16                     i2l549:
 47172                           
 47173                           ; BSR set to: 13
 47174                           
 47175                           ; BSR set to: 13
 47176  010E16  5131               	movf	49,w,b	;volatile
 47177                           
 47178                           ; Switch size 1, requested type "space"
 47179                           ; Number of cases is 2, Range of values is 254 to 255
 47180                           ; switch strategies available:
 47181                           ; Name         Instructions Cycles
 47182                           ; simple_byte            7     4 (average)
 47183                           ;	Chosen strategy is simple_byte
 47184  010E18  0AFE               	xorlw	254	; case 254
 47185  010E1A  B4D8               	btfsc	status,2,c
 47186  010E1C  D7E6               	goto	i2l566
 47187  010E1E  0A01               	xorlw	1	; case 255
 47188  010E20  A4D8               	btfss	status,2,c
 47189  010E22  0012               	return	
 47190  010E24  D7AB               	goto	i2l550
 47191  010E26                     __end_of_USBCheckMSDRequest:
 47192                           	opt stack 0
 47193                           tosu	equ	0xFFF
 47194                           tosh	equ	0xFFE
 47195                           tosl	equ	0xFFD
 47196                           pclatu	equ	0xFFB
 47197                           pclath	equ	0xFFA
 47198                           tblptru	equ	0xFF8
 47199                           tblptrh	equ	0xFF7
 47200                           tblptrl	equ	0xFF6
 47201                           tablat	equ	0xFF5
 47202                           prodh	equ	0xFF4
 47203                           prodl	equ	0xFF3
 47204                           intcon	equ	0xFF2
 47205                           intcon2	equ	0xFF1
 47206                           intcon3	equ	0xFF0
 47207                           indf0	equ	0xFEF
 47208                           postinc0	equ	0xFEE
 47209                           fsr0h	equ	0xFEA
 47210                           fsr0l	equ	0xFE9
 47211                           wreg	equ	0xFE8
 47212                           indf1	equ	0xFE7
 47213                           postinc1	equ	0xFE6
 47214                           postdec1	equ	0xFE5
 47215                           plusw1	equ	0xFE3
 47216                           fsr1h	equ	0xFE2
 47217                           fsr1l	equ	0xFE1
 47218                           indf2	equ	0xFDF
 47219                           postinc2	equ	0xFDE
 47220                           postdec2	equ	0xFDD
 47221                           plusw2	equ	0xFDB
 47222                           fsr2h	equ	0xFDA
 47223                           fsr2l	equ	0xFD9
 47224                           status	equ	0xFD8
 47225                           
 47226 ;; *************** function _USBCheckHIDRequest *****************
 47227 ;; Defined at:
 47228 ;;		line 153 in file "usb_device_hid.c"
 47229 ;; Parameters:    Size  Location     Type
 47230 ;;		None
 47231 ;; Auto vars:     Size  Location     Type
 47232 ;;		None
 47233 ;; Return value:  Size  Location     Type
 47234 ;;                  1    wreg      void 
 47235 ;; Registers used:
 47236 ;;		wreg, status,2, status,0
 47237 ;; Tracked objects:
 47238 ;;		On entry : 0/0
 47239 ;;		On exit  : 0/0
 47240 ;;		Unchanged: 0/0
 47241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47246 ;;Total ram usage:        0 bytes
 47247 ;; Hardware stack levels used:    1
 47248 ;; This function calls:
 47249 ;;		Nothing
 47250 ;; This function is called by:
 47251 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47252 ;; This function uses a non-reentrant model
 47253 ;;
 47254                           
 47255                           	psect	text235
 47256  0107E4                     __ptext235:
 47257                           	opt stack 0
 47258  0107E4                     _USBCheckHIDRequest:
 47259                           	opt stack 15
 47260                           
 47261                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 47262                           
 47263                           ;incstack = 0
 47264  0107E4  010D               	movlb	13	; () banked
 47265  0107E6  5130               	movf	48,w,b	;volatile
 47266  0107E8  0B1F               	andlw	31
 47267  0107EA  06E8               	decf	wreg,f,c
 47268  0107EC  A4D8               	btfss	status,2,c
 47269  0107EE  0012               	return	
 47270                           
 47271                           ; BSR set to: 13
 47272                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 47273                           
 47274                           ; BSR set to: 13
 47275                           
 47276                           ; BSR set to: 13
 47277  0107F0  5134               	movf	52,w,b	;volatile
 47278  0107F2  A4D8               	btfss	status,2,c
 47279  0107F4  0012               	return	
 47280                           
 47281                           ; BSR set to: 13
 47282                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 47283                           
 47284                           ; BSR set to: 13
 47285                           
 47286                           ; BSR set to: 13
 47287  0107F6  0E06               	movlw	6
 47288  0107F8  1931               	xorwf	49,w,b	;volatile
 47289  0107FA  B4D8               	btfsc	status,2,c
 47290  0107FC  D018               	goto	i2l427
 47291  0107FE  D01F               	goto	i2l430
 47292  010800                     
 47293                           ; BSR set to: 13
 47294                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 47295                           
 47296                           ; BSR set to: 13
 47297  010800  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 47298  010802  A4D8               	btfss	status,2,c
 47299  010804  D01C               	goto	i2l430
 47300                           
 47301                           ; BSR set to: 13
 47302                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 47303  010806  0E2D               	movlw	low (_configDescriptor1+18)
 47304  010808  6E0A               	movwf	_inPipes,c	;volatile
 47305  01080A  0EA3               	movlw	high (_configDescriptor1+18)
 47306  01080C  6E0B               	movwf	_inPipes+1,c	;volatile
 47307                           
 47308                           ; BSR set to: 13
 47309  01080E  0E00               	movlw	0
 47310  010810  6E0F               	movwf	_inPipes+5,c	;volatile
 47311  010812  0E09               	movlw	9
 47312  010814  D00A               	goto	L64
 47313  010816                     i2l11641:
 47314                           
 47315                           ; BSR set to: 13
 47316  010816  0EC0               	movlw	192
 47317  010818  6E0D               	movwf	_inPipes+3,c	;volatile
 47318                           
 47319                           ; BSR set to: 13
 47320                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 47321  01081A  D011               	goto	i2l430
 47322  01081C                     
 47323                           ; BSR set to: 13
 47324                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 47325                           
 47326                           ; BSR set to: 13
 47327  01081C  0EE1               	movlw	low _hid_rpt01
 47328  01081E  6E0A               	movwf	_inPipes,c	;volatile
 47329  010820  0EA3               	movlw	high _hid_rpt01
 47330  010822  6E0B               	movwf	_inPipes+1,c	;volatile
 47331                           
 47332                           ; BSR set to: 13
 47333  010824  0E00               	movlw	0
 47334  010826  6E0F               	movwf	_inPipes+5,c	;volatile
 47335  010828  0E1D               	movlw	29
 47336  01082A                     L64:
 47337  01082A  6E0E               	movwf	_inPipes+4,c	;volatile
 47338  01082C  D7F4               	goto	i2l11641
 47339  01082E                     i2l427:
 47340                           
 47341                           ; BSR set to: 13
 47342                           
 47343                           ; BSR set to: 13
 47344  01082E  5133               	movf	51,w,b	;volatile
 47345                           
 47346                           ; Switch size 1, requested type "space"
 47347                           ; Number of cases is 3, Range of values is 33 to 35
 47348                           ; switch strategies available:
 47349                           ; Name         Instructions Cycles
 47350                           ; simple_byte           10     6 (average)
 47351                           ;	Chosen strategy is simple_byte
 47352  010830  0A21               	xorlw	33	; case 33
 47353  010832  B4D8               	btfsc	status,2,c
 47354  010834  D7E5               	goto	i2l428
 47355  010836  0A03               	xorlw	3	; case 34
 47356  010838  B4D8               	btfsc	status,2,c
 47357  01083A  D7F0               	goto	i2l431
 47358  01083C  0A01               	xorlw	1	; case 35
 47359  01083E                     i2l430:
 47360                           
 47361                           ; BSR set to: 13
 47362                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 47363                           
 47364                           ; BSR set to: 13
 47365                           
 47366                           ; BSR set to: 13
 47367  01083E  3930               	swapf	48,w,b	;volatile
 47368  010840  32E8               	rrcf	wreg,f,c
 47369  010842  0B03               	andlw	3
 47370  010844  06E8               	decf	wreg,f,c
 47371  010846  A4D8               	btfss	status,2,c
 47372  010848  0012               	return	
 47373  01084A  D020               	goto	i2l434
 47374  01084C                     
 47375                           ; BSR set to: 13
 47376                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 47377                           
 47378                           ; BSR set to: 13
 47379  01084C  0EFF               	movlw	low _idle_rate
 47380  01084E  6E0A               	movwf	_inPipes,c	;volatile
 47381  010850  0E01               	movlw	high _idle_rate
 47382  010852  6E0B               	movwf	_inPipes+1,c	;volatile
 47383                           
 47384                           ; BSR set to: 13
 47385  010854  0E00               	movlw	0
 47386  010856  6E0F               	movwf	_inPipes+5,c	;volatile
 47387  010858  0E01               	movlw	1
 47388  01085A  6E0E               	movwf	_inPipes+4,c	;volatile
 47389                           
 47390                           ; BSR set to: 13
 47391  01085C  0EC1               	movlw	193
 47392  01085E  6E0D               	movwf	_inPipes+3,c	;volatile
 47393                           
 47394                           ;usb_device_hid.c: 223: break;
 47395  010860  0012               	return	
 47396  010862                     
 47397                           ; BSR set to: 13
 47398                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 47399                           
 47400                           ; BSR set to: 13
 47401  010862  0E80               	movlw	128
 47402  010864  6E0D               	movwf	_inPipes+3,c	;volatile
 47403                           
 47404                           ; BSR set to: 13
 47405                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 47406  010866  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 47407                           
 47408                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 47409  01086A  0012               	return	
 47410  01086C                     
 47411                           ; BSR set to: 13
 47412                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 47413                           
 47414                           ; BSR set to: 13
 47415  01086C  0EFE               	movlw	low _active_protocol
 47416  01086E  6E0A               	movwf	_inPipes,c	;volatile
 47417  010870  0E01               	movlw	high _active_protocol
 47418  010872  6E0B               	movwf	_inPipes+1,c	;volatile
 47419                           
 47420                           ; BSR set to: 13
 47421  010874  0E00               	movlw	0
 47422  010876  6E0F               	movwf	_inPipes+5,c	;volatile
 47423  010878  0E01               	movlw	1
 47424  01087A  6E0E               	movwf	_inPipes+4,c	;volatile
 47425                           
 47426                           ; BSR set to: 13
 47427  01087C  0E81               	movlw	129
 47428  01087E  6E0D               	movwf	_inPipes+3,c	;volatile
 47429                           
 47430                           ;usb_device_hid.c: 234: break;
 47431  010880  0012               	return	
 47432  010882                     
 47433                           ; BSR set to: 13
 47434                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 47435                           
 47436                           ; BSR set to: 13
 47437  010882  0E80               	movlw	128
 47438  010884  6E0D               	movwf	_inPipes+3,c	;volatile
 47439                           
 47440                           ; BSR set to: 13
 47441                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 47442  010886  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 47443                           
 47444                           ; BSR set to: 13
 47445                           ;usb_device_hid.c: 239: }
 47446                           
 47447                           ;usb_device_hid.c: 238: break;
 47448  01088A  0012               	return	
 47449  01088C                     i2l434:
 47450                           
 47451                           ; BSR set to: 13
 47452                           
 47453                           ; BSR set to: 13
 47454  01088C  5131               	movf	49,w,b	;volatile
 47455                           
 47456                           ; Switch size 1, requested type "space"
 47457                           ; Number of cases is 6, Range of values is 1 to 11
 47458                           ; switch strategies available:
 47459                           ; Name         Instructions Cycles
 47460                           ; simple_byte           19    10 (average)
 47461                           ;	Chosen strategy is simple_byte
 47462  01088E  0A01               	xorlw	1	; case 1
 47463  010890  B4D8               	btfsc	status,2,c
 47464  010892  0012               	return	
 47465  010894  0A03               	xorlw	3	; case 2
 47466  010896  B4D8               	btfsc	status,2,c
 47467  010898  D7D9               	goto	i2l438
 47468  01089A  0A01               	xorlw	1	; case 3
 47469  01089C  B4D8               	btfsc	status,2,c
 47470  01089E  D7E6               	goto	i2l440
 47471  0108A0  0A0A               	xorlw	10	; case 9
 47472  0108A2  B4D8               	btfsc	status,2,c
 47473  0108A4  0012               	return	
 47474  0108A6  0A03               	xorlw	3	; case 10
 47475  0108A8  B4D8               	btfsc	status,2,c
 47476  0108AA  D7DB               	goto	i2l439
 47477  0108AC  0A01               	xorlw	1	; case 11
 47478  0108AE  A4D8               	btfss	status,2,c
 47479  0108B0  0012               	return	
 47480  0108B2  D7E7               	goto	i2l441
 47481  0108B4                     __end_of_USBCheckHIDRequest:
 47482                           	opt stack 0
 47483                           tosu	equ	0xFFF
 47484                           tosh	equ	0xFFE
 47485                           tosl	equ	0xFFD
 47486                           pclatu	equ	0xFFB
 47487                           pclath	equ	0xFFA
 47488                           tblptru	equ	0xFF8
 47489                           tblptrh	equ	0xFF7
 47490                           tblptrl	equ	0xFF6
 47491                           tablat	equ	0xFF5
 47492                           prodh	equ	0xFF4
 47493                           prodl	equ	0xFF3
 47494                           intcon	equ	0xFF2
 47495                           intcon2	equ	0xFF1
 47496                           intcon3	equ	0xFF0
 47497                           indf0	equ	0xFEF
 47498                           postinc0	equ	0xFEE
 47499                           fsr0h	equ	0xFEA
 47500                           fsr0l	equ	0xFE9
 47501                           wreg	equ	0xFE8
 47502                           indf1	equ	0xFE7
 47503                           postinc1	equ	0xFE6
 47504                           postdec1	equ	0xFE5
 47505                           plusw1	equ	0xFE3
 47506                           fsr1h	equ	0xFE2
 47507                           fsr1l	equ	0xFE1
 47508                           indf2	equ	0xFDF
 47509                           postinc2	equ	0xFDE
 47510                           postdec2	equ	0xFDD
 47511                           plusw2	equ	0xFDB
 47512                           fsr2h	equ	0xFDA
 47513                           fsr2l	equ	0xFD9
 47514                           status	equ	0xFD8
 47515                           
 47516 ;; *************** function _MSDTransferTerminated *****************
 47517 ;; Defined at:
 47518 ;;		line 1674 in file "usb_device_msd.c"
 47519 ;; Parameters:    Size  Location     Type
 47520 ;;  handle          2   11[COMRAM] PTR void 
 47521 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 47522 ;;		 -> BDT(48), 
 47523 ;; Auto vars:     Size  Location     Type
 47524 ;;		None
 47525 ;; Return value:  Size  Location     Type
 47526 ;;                  1    wreg      void 
 47527 ;; Registers used:
 47528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47529 ;; Tracked objects:
 47530 ;;		On entry : 0/0
 47531 ;;		On exit  : 0/0
 47532 ;;		Unchanged: 0/0
 47533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47538 ;;Total ram usage:        4 bytes
 47539 ;; Hardware stack levels used:    1
 47540 ;; Hardware stack levels required when called:    1
 47541 ;; This function calls:
 47542 ;;		i2_USBStallEndpoint
 47543 ;;		i2_USBTransferOnePacket
 47544 ;; This function is called by:
 47545 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47546 ;; This function uses a non-reentrant model
 47547 ;;
 47548                           
 47549                           	psect	text236
 47550  012C00                     __ptext236:
 47551                           	opt stack 0
 47552  012C00                     _MSDTransferTerminated:
 47553                           	opt stack 14
 47554                           
 47555                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 47556                           
 47557                           ; BSR set to: 13
 47558                           ;incstack = 0
 47559  012C00  0101               	movlb	1	; () banked
 47560  012C02  51F5               	movf	_MSDCBWValid& (0+255),w,b
 47561  012C04  A4D8               	btfss	status,2,c
 47562  012C06  D00B               	goto	i2l784
 47563                           
 47564                           ; BSR set to: 1
 47565                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 47566  012C08  0E01               	movlw	1
 47567  012C0A  6E2E               	movwf	i2USBStallEndpoint@dir,c
 47568  012C0C  0E02               	movlw	2
 47569  012C0E  EC78  F07C         	call	i2_USBStallEndpoint
 47570                           
 47571                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 47572  012C12  0E00               	movlw	0
 47573  012C14  6E2E               	movwf	i2USBStallEndpoint@dir,c
 47574  012C16  0E02               	movlw	2
 47575  012C18  EC78  F07C         	call	i2_USBStallEndpoint
 47576                           
 47577                           ;usb_device_msd.c: 1681: }
 47578  012C1C  0012               	return	
 47579  012C1E                     i2l784:
 47580  012C1E  C1D7  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2732
 47581  012C22  C1D8  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2732+1
 47582  012C26  503B               	movf	_MSDTransferTerminated$2732,w,c
 47583  012C28  1839               	xorwf	MSDTransferTerminated@handle,w,c
 47584  012C2A  E114               	bnz	i2l787
 47585  012C2C  503C               	movf	_MSDTransferTerminated$2732+1,w,c
 47586  012C2E  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 47587  012C30  A4D8               	btfss	status,2,c
 47588  012C32  0012               	return	
 47589                           
 47590                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 47591  012C34  0E00               	movlw	0
 47592  012C36  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 47593  012C38  0E40               	movlw	64
 47594  012C3A  6E2F               	movwf	i2USBTransferOnePacket@data,c
 47595  012C3C  0E0D               	movlw	13
 47596  012C3E  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 47597  012C40  0E40               	movlw	64
 47598  012C42  6E31               	movwf	i2USBTransferOnePacket@len,c
 47599  012C44  0E02               	movlw	2
 47600  012C46  EC7D  F07D         	call	i2_USBTransferOnePacket
 47601  012C4A  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 47602  012C4E  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 47603  012C52  0012               	return	
 47604  012C54                     i2l787:
 47605  012C54  0012               	return		;funcret
 47606  012C56                     __end_of_MSDTransferTerminated:
 47607                           	opt stack 0
 47608                           tosu	equ	0xFFF
 47609                           tosh	equ	0xFFE
 47610                           tosl	equ	0xFFD
 47611                           pclatu	equ	0xFFB
 47612                           pclath	equ	0xFFA
 47613                           tblptru	equ	0xFF8
 47614                           tblptrh	equ	0xFF7
 47615                           tblptrl	equ	0xFF6
 47616                           tablat	equ	0xFF5
 47617                           prodh	equ	0xFF4
 47618                           prodl	equ	0xFF3
 47619                           intcon	equ	0xFF2
 47620                           intcon2	equ	0xFF1
 47621                           intcon3	equ	0xFF0
 47622                           indf0	equ	0xFEF
 47623                           postinc0	equ	0xFEE
 47624                           fsr0h	equ	0xFEA
 47625                           fsr0l	equ	0xFE9
 47626                           wreg	equ	0xFE8
 47627                           indf1	equ	0xFE7
 47628                           postinc1	equ	0xFE6
 47629                           postdec1	equ	0xFE5
 47630                           plusw1	equ	0xFE3
 47631                           fsr1h	equ	0xFE2
 47632                           fsr1l	equ	0xFE1
 47633                           indf2	equ	0xFDF
 47634                           postinc2	equ	0xFDE
 47635                           postdec2	equ	0xFDD
 47636                           plusw2	equ	0xFDB
 47637                           fsr2h	equ	0xFDA
 47638                           fsr2l	equ	0xFD9
 47639                           status	equ	0xFD8
 47640                           
 47641 ;; *************** function i2_USBStallEndpoint *****************
 47642 ;; Defined at:
 47643 ;;		line 1073 in file "usb_device.c"
 47644 ;; Parameters:    Size  Location     Type
 47645 ;;  ep              1    wreg     unsigned char 
 47646 ;;  dir             1    0[COMRAM] unsigned char 
 47647 ;; Auto vars:     Size  Location     Type
 47648 ;;  ep              1    5[COMRAM] unsigned char 
 47649 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 47650 ;;		 -> BDT(48), 
 47651 ;; Return value:  Size  Location     Type
 47652 ;;                  1    wreg      void 
 47653 ;; Registers used:
 47654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47655 ;; Tracked objects:
 47656 ;;		On entry : 0/0
 47657 ;;		On exit  : 0/0
 47658 ;;		Unchanged: 0/0
 47659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47661 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47664 ;;Total ram usage:        8 bytes
 47665 ;; Hardware stack levels used:    1
 47666 ;; This function calls:
 47667 ;;		Nothing
 47668 ;; This function is called by:
 47669 ;;		_MSDTransferTerminated
 47670 ;; This function uses a non-reentrant model
 47671 ;;
 47672                           
 47673                           	psect	text237
 47674  00F8F0                     __ptext237:
 47675                           	opt stack 0
 47676  00F8F0                     i2_USBStallEndpoint:
 47677                           	opt stack 14
 47678                           
 47679                           ;incstack = 0
 47680                           ;i2USBStallEndpoint@ep stored from wreg
 47681  00F8F0  6E33               	movwf	i2USBStallEndpoint@ep,c
 47682                           
 47683                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 47684  00F8F2  5033               	movf	i2USBStallEndpoint@ep,w,c
 47685  00F8F4  A4D8               	btfss	status,2,c
 47686  00F8F6  D02B               	goto	i2l194
 47687                           
 47688                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 47689  00F8F8  EE20 F001          	lfsr	2,1
 47690  00F8FC  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47691  00F8FE  26D9               	addwf	fsr2l,f,c
 47692  00F900  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47693  00F902  22DA               	addwfc	fsr2h,f,c
 47694  00F904  0E08               	movlw	8
 47695  00F906  6EDF               	movwf	indf2,c
 47696                           
 47697                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 47698  00F908  EE20 F002          	lfsr	2,2
 47699  00F90C  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47700  00F90E  26D9               	addwf	fsr2l,f,c
 47701  00F910  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47702  00F912  22DA               	addwfc	fsr2h,f,c
 47703  00F914  0E30               	movlw	48
 47704  00F916  6EDE               	movwf	postinc2,c
 47705  00F918  0E0D               	movlw	13
 47706  00F91A  6EDD               	movwf	postdec2,c
 47707                           
 47708                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 47709  00F91C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47710  00F920  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47711  00F924  0E0C               	movlw	12
 47712  00F926  6EDF               	movwf	indf2,c
 47713                           
 47714                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47715  00F928  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47716  00F92C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47717  00F930  0E00               	movlw	0
 47718  00F932  8EDB               	bsf	plusw2,7,c
 47719                           
 47720                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 47721  00F934  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47722  00F938  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47723  00F93C  0E04               	movlw	4
 47724  00F93E  6EDF               	movwf	indf2,c
 47725                           
 47726                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 47727  00F940  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47728  00F944  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47729  00F948  0E00               	movlw	0
 47730  00F94A  8EDB               	bsf	plusw2,7,c
 47731                           
 47732                           ;usb_device.c: 1089: }
 47733  00F94C  0012               	return	
 47734  00F94E                     i2l194:
 47735                           
 47736                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 47737  00F94E  502E               	movf	i2USBStallEndpoint@dir,w,c
 47738  00F950  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 47739  00F952  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 47740  00F954  90D8               	bcf	status,0,c
 47741  00F956  362F               	rlcf	??i2_USBStallEndpoint,f,c
 47742  00F958  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 47743  00F95A  5033               	movf	i2USBStallEndpoint@ep,w,c
 47744  00F95C  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 47745  00F95E  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 47746  00F960  90D8               	bcf	status,0,c
 47747  00F962  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47748  00F964  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47749  00F966  90D8               	bcf	status,0,c
 47750  00F968  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47751  00F96A  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47752  00F96C  502F               	movf	??i2_USBStallEndpoint,w,c
 47753  00F96E  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 47754  00F970  5030               	movf	??i2_USBStallEndpoint+1,w,c
 47755  00F972  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 47756  00F974  90D8               	bcf	status,0,c
 47757  00F976  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47758  00F978  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47759  00F97A  90D8               	bcf	status,0,c
 47760  00F97C  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 47761  00F97E  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 47762  00F980  0E00               	movlw	0
 47763  00F982  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 47764  00F984  6E34               	movwf	i2USBStallEndpoint@p,c
 47765  00F986  0E0D               	movlw	13
 47766  00F988  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 47767  00F98A  6E35               	movwf	i2USBStallEndpoint@p+1,c
 47768                           
 47769                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 47770  00F98C  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47771  00F990  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47772  00F994  0E00               	movlw	0
 47773  00F996  84DB               	bsf	plusw2,2,c
 47774                           
 47775                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 47776  00F998  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47777  00F99C  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47778  00F9A0  0E00               	movlw	0
 47779  00F9A2  8EDB               	bsf	plusw2,7,c
 47780                           
 47781                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 47782  00F9A4  5033               	movf	i2USBStallEndpoint@ep,w,c
 47783  00F9A6  0D04               	mullw	4
 47784  00F9A8  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 47785  00F9AC  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 47786  00F9B0  502E               	movf	i2USBStallEndpoint@dir,w,c
 47787  00F9B2  0D02               	mullw	2
 47788  00F9B4  50F3               	movf	prodl,w,c
 47789  00F9B6  262F               	addwf	??i2_USBStallEndpoint,f,c
 47790  00F9B8  50F4               	movf	prodh,w,c
 47791  00F9BA  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 47792  00F9BC  90D8               	bcf	status,0,c
 47793  00F9BE  362F               	rlcf	??i2_USBStallEndpoint,f,c
 47794  00F9C0  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 47795  00F9C2  90D8               	bcf	status,0,c
 47796  00F9C4  362F               	rlcf	??i2_USBStallEndpoint,f,c
 47797  00F9C6  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 47798  00F9C8  0E04               	movlw	4
 47799  00F9CA  262F               	addwf	??i2_USBStallEndpoint,f,c
 47800  00F9CC  0E00               	movlw	0
 47801  00F9CE  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 47802  00F9D0  0E00               	movlw	0
 47803  00F9D2  242F               	addwf	??i2_USBStallEndpoint,w,c
 47804  00F9D4  6E34               	movwf	i2USBStallEndpoint@p,c
 47805  00F9D6  0E0D               	movlw	13
 47806  00F9D8  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 47807  00F9DA  6E35               	movwf	i2USBStallEndpoint@p+1,c
 47808                           
 47809                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 47810  00F9DC  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47811  00F9E0  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47812  00F9E4  0E00               	movlw	0
 47813  00F9E6  84DB               	bsf	plusw2,2,c
 47814                           
 47815                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 47816  00F9E8  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 47817  00F9EC  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 47818  00F9F0  0E00               	movlw	0
 47819  00F9F2  8EDB               	bsf	plusw2,7,c
 47820  00F9F4  0012               	return	
 47821  00F9F6                     __end_ofi2_USBStallEndpoint:
 47822                           	opt stack 0
 47823                           tosu	equ	0xFFF
 47824                           tosh	equ	0xFFE
 47825                           tosl	equ	0xFFD
 47826                           pclatu	equ	0xFFB
 47827                           pclath	equ	0xFFA
 47828                           tblptru	equ	0xFF8
 47829                           tblptrh	equ	0xFF7
 47830                           tblptrl	equ	0xFF6
 47831                           tablat	equ	0xFF5
 47832                           prodh	equ	0xFF4
 47833                           prodl	equ	0xFF3
 47834                           intcon	equ	0xFF2
 47835                           intcon2	equ	0xFF1
 47836                           intcon3	equ	0xFF0
 47837                           indf0	equ	0xFEF
 47838                           postinc0	equ	0xFEE
 47839                           fsr0h	equ	0xFEA
 47840                           fsr0l	equ	0xFE9
 47841                           wreg	equ	0xFE8
 47842                           indf1	equ	0xFE7
 47843                           postinc1	equ	0xFE6
 47844                           postdec1	equ	0xFE5
 47845                           plusw1	equ	0xFE3
 47846                           fsr1h	equ	0xFE2
 47847                           fsr1l	equ	0xFE1
 47848                           indf2	equ	0xFDF
 47849                           postinc2	equ	0xFDE
 47850                           postdec2	equ	0xFDD
 47851                           plusw2	equ	0xFDB
 47852                           fsr2h	equ	0xFDA
 47853                           fsr2l	equ	0xFD9
 47854                           status	equ	0xFD8
 47855                           
 47856 ;; *************** function _APP_DeviceMSDInitialize *****************
 47857 ;; Defined at:
 47858 ;;		line 84 in file "app_device_msd.c"
 47859 ;; Parameters:    Size  Location     Type
 47860 ;;		None
 47861 ;; Auto vars:     Size  Location     Type
 47862 ;;		None
 47863 ;; Return value:  Size  Location     Type
 47864 ;;                  1    wreg      void 
 47865 ;; Registers used:
 47866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47867 ;; Tracked objects:
 47868 ;;		On entry : 0/0
 47869 ;;		On exit  : 0/0
 47870 ;;		Unchanged: 0/0
 47871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47876 ;;Total ram usage:        0 bytes
 47877 ;; Hardware stack levels used:    1
 47878 ;; Hardware stack levels required when called:    2
 47879 ;; This function calls:
 47880 ;;		_USBEnableEndpoint
 47881 ;;		_USBMSDInit
 47882 ;; This function is called by:
 47883 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47884 ;; This function uses a non-reentrant model
 47885 ;;
 47886                           
 47887                           	psect	text238
 47888  013DEA                     __ptext238:
 47889                           	opt stack 0
 47890  013DEA                     _APP_DeviceMSDInitialize:
 47891                           	opt stack 13
 47892                           
 47893                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 47894                           
 47895                           ;incstack = 0
 47896  013DEA  0E1E               	movlw	30
 47897  013DEC  6E36               	movwf	USBEnableEndpoint@options,c
 47898  013DEE  0E02               	movlw	2
 47899  013DF0  ECC6  F099         	call	_USBEnableEndpoint
 47900                           
 47901                           ;app_device_msd.c: 93: USBMSDInit();
 47902  013DF4  EC61  F07A         	call	_USBMSDInit	;wreg free
 47903  013DF8  0012               	return		;funcret
 47904  013DFA                     __end_of_APP_DeviceMSDInitialize:
 47905                           	opt stack 0
 47906                           tosu	equ	0xFFF
 47907                           tosh	equ	0xFFE
 47908                           tosl	equ	0xFFD
 47909                           pclatu	equ	0xFFB
 47910                           pclath	equ	0xFFA
 47911                           tblptru	equ	0xFF8
 47912                           tblptrh	equ	0xFF7
 47913                           tblptrl	equ	0xFF6
 47914                           tablat	equ	0xFF5
 47915                           prodh	equ	0xFF4
 47916                           prodl	equ	0xFF3
 47917                           intcon	equ	0xFF2
 47918                           intcon2	equ	0xFF1
 47919                           intcon3	equ	0xFF0
 47920                           indf0	equ	0xFEF
 47921                           postinc0	equ	0xFEE
 47922                           fsr0h	equ	0xFEA
 47923                           fsr0l	equ	0xFE9
 47924                           wreg	equ	0xFE8
 47925                           indf1	equ	0xFE7
 47926                           postinc1	equ	0xFE6
 47927                           postdec1	equ	0xFE5
 47928                           plusw1	equ	0xFE3
 47929                           fsr1h	equ	0xFE2
 47930                           fsr1l	equ	0xFE1
 47931                           indf2	equ	0xFDF
 47932                           postinc2	equ	0xFDE
 47933                           postdec2	equ	0xFDD
 47934                           plusw2	equ	0xFDB
 47935                           fsr2h	equ	0xFDA
 47936                           fsr2l	equ	0xFD9
 47937                           status	equ	0xFD8
 47938                           
 47939 ;; *************** function _USBMSDInit *****************
 47940 ;; Defined at:
 47941 ;;		line 142 in file "usb_device_msd.c"
 47942 ;; Parameters:    Size  Location     Type
 47943 ;;		None
 47944 ;; Auto vars:     Size  Location     Type
 47945 ;;		None
 47946 ;; Return value:  Size  Location     Type
 47947 ;;                  1    wreg      void 
 47948 ;; Registers used:
 47949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47950 ;; Tracked objects:
 47951 ;;		On entry : 0/0
 47952 ;;		On exit  : 0/0
 47953 ;;		Unchanged: 0/0
 47954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47957 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47958 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47959 ;;Total ram usage:        3 bytes
 47960 ;; Hardware stack levels used:    1
 47961 ;; Hardware stack levels required when called:    1
 47962 ;; This function calls:
 47963 ;;		i2_ExternalFlash_MediaDetect
 47964 ;;		i2_ExternalFlash_MediaInitialize
 47965 ;;		i2_ResetSenseData
 47966 ;;		i2_USBTransferOnePacket
 47967 ;; This function is called by:
 47968 ;;		_APP_DeviceMSDInitialize
 47969 ;; This function uses a non-reentrant model
 47970 ;;
 47971                           
 47972                           	psect	text239
 47973  00F4C2                     __ptext239:
 47974                           	opt stack 0
 47975  00F4C2                     _USBMSDInit:
 47976                           	opt stack 13
 47977                           
 47978                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 47979                           
 47980                           ;incstack = 0
 47981  00F4C2  0E00               	movlw	0
 47982  00F4C4  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 47983  00F4C6  0E40               	movlw	64
 47984  00F4C8  6E2F               	movwf	i2USBTransferOnePacket@data,c
 47985  00F4CA  0E0D               	movlw	13
 47986  00F4CC  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 47987  00F4CE  0E40               	movlw	64
 47988  00F4D0  6E31               	movwf	i2USBTransferOnePacket@len,c
 47989  00F4D2  0E02               	movlw	2
 47990  00F4D4  EC7D  F07D         	call	i2_USBTransferOnePacket
 47991  00F4D8  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 47992  00F4DC  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 47993  00F4E0  C014  F0DB         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 47994  00F4E4  C015  F0DC         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 47995                           
 47996                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 47997  00F4E8  0E00               	movlw	0
 47998  00F4EA  0100               	movlb	0	; () banked
 47999  00F4EC  6FE7               	movwf	_MSD_State& (0+255),b
 48000                           
 48001                           ; BSR set to: 0
 48002                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 48003  00F4EE  69E6               	setf	_MSDCommandState& (0+255),b
 48004                           
 48005                           ; BSR set to: 0
 48006                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 48007  00F4F0  0E00               	movlw	0
 48008  00F4F2  0101               	movlb	1	; () banked
 48009  00F4F4  6FF9               	movwf	_MSDReadState& (0+255),b
 48010                           
 48011                           ; BSR set to: 1
 48012                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 48013  00F4F6  0E00               	movlw	0
 48014  00F4F8  6E1F               	movwf	_MSDWriteState,c
 48015                           
 48016                           ; BSR set to: 1
 48017                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 48018  00F4FA  0E00               	movlw	0
 48019  00F4FC  0100               	movlb	0	; () banked
 48020  00F4FE  6FE5               	movwf	_MSDHostNoData& (0+255),b
 48021                           
 48022                           ; BSR set to: 0
 48023                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 48024  00F500  0E00               	movlw	0
 48025  00F502  0102               	movlb	2	; () banked
 48026  00F504  6FAA               	movwf	_gblNumBLKS& (0+255),b
 48027  00F506  0E00               	movlw	0
 48028  00F508  6FAB               	movwf	(_gblNumBLKS+1)& (0+255),b
 48029  00F50A  0E00               	movlw	0
 48030  00F50C  6FAC               	movwf	(_gblNumBLKS+2)& (0+255),b
 48031  00F50E  0E00               	movlw	0
 48032  00F510  6FAD               	movwf	(_gblNumBLKS+3)& (0+255),b
 48033                           
 48034                           ; BSR set to: 2
 48035                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 48036  00F512  0E00               	movlw	0
 48037  00F514  6FA6               	movwf	_gblBLKLen& (0+255),b
 48038  00F516  0E00               	movlw	0
 48039  00F518  6FA7               	movwf	(_gblBLKLen+1)& (0+255),b
 48040  00F51A  0E00               	movlw	0
 48041  00F51C  6FA8               	movwf	(_gblBLKLen+2)& (0+255),b
 48042  00F51E  0E00               	movlw	0
 48043  00F520  6FA9               	movwf	(_gblBLKLen+3)& (0+255),b
 48044                           
 48045                           ; BSR set to: 2
 48046                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 48047  00F522  0E01               	movlw	1
 48048  00F524  0101               	movlb	1	; () banked
 48049  00F526  6FF5               	movwf	_MSDCBWValid& (0+255),b
 48050                           
 48051                           ; BSR set to: 1
 48052                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 48053  00F528  0E00               	movlw	0
 48054  00F52A  0102               	movlb	2	; () banked
 48055  00F52C  6FB3               	movwf	(_gblMediaPresent+1)& (0+255),b
 48056  00F52E  0E00               	movlw	0
 48057  00F530  6FB2               	movwf	_gblMediaPresent& (0+255),b
 48058                           
 48059                           ; BSR set to: 2
 48060                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 48061  00F532  0E00               	movlw	0
 48062  00F534  6F4E               	movwf	(_gblCBW+13)& (0+255),b
 48063  00F536  D04A               	goto	i2l538
 48064  00F538                     
 48065                           ; BSR set to: 2
 48066                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 48067                           
 48068                           ; BSR set to: 2
 48069  00F538  514E               	movf	(_gblCBW+13)& (0+255),w,b
 48070  00F53A  0D01               	mullw	1
 48071  00F53C  0EF6               	movlw	low _SoftDetach
 48072  00F53E  24F3               	addwf	prodl,w,c
 48073  00F540  6ED9               	movwf	fsr2l,c
 48074  00F542  0E01               	movlw	high _SoftDetach
 48075  00F544  20F4               	addwfc	prodh,w,c
 48076  00F546  6EDA               	movwf	fsr2h,c
 48077  00F548  0E00               	movlw	0
 48078  00F54A  6EDF               	movwf	indf2,c
 48079                           
 48080                           ; BSR set to: 2
 48081                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 48082  00F54C  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 48083  00F550  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 48084  00F554  EE22  F0C4         	lfsr	2,_LUN+9
 48085  00F558  D801               	call	i2u1646_48
 48086  00F55A  D00A               	goto	i2u1646_49
 48087  00F55C                     i2u1646_48:
 48088  00F55C  0005               	push	
 48089  00F55E  6EFA               	movwf	pclath,c
 48090  00F560  50DE               	movf	postinc2,w,c
 48091  00F562  6EFD               	movwf	tosl,c
 48092  00F564  50DE               	movf	postinc2,w,c
 48093  00F566  6EFE               	movwf	tosh,c
 48094  00F568  50DE               	movf	postinc2,w,c
 48095  00F56A  6EFF               	movwf	tosu,c
 48096  00F56C  50FA               	movf	pclath,w,c
 48097  00F56E  0012               	return		;indir
 48098  00F570                     i2u1646_49:
 48099  00F570  0900               	iorlw	0
 48100  00F572  B4D8               	btfsc	status,2,c
 48101  00F574  D027               	goto	i2l541
 48102                           
 48103                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 48104  00F576  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 48105  00F57A  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 48106  00F57E  D801               	call	i2u1648_48
 48107  00F580  D00B               	goto	i2u1648_49
 48108  00F582                     i2u1648_48:
 48109  00F582  0005               	push	
 48110  00F584  6EFA               	movwf	pclath,c
 48111  00F586  0102               	movlb	2	; () banked
 48112  00F588  51BB               	movf	_LUN& (0+255),w,b
 48113  00F58A  6EFD               	movwf	tosl,c
 48114  00F58C  51BC               	movf	(_LUN+1)& (0+255),w,b
 48115  00F58E  6EFE               	movwf	tosh,c
 48116  00F590  51BD               	movf	(_LUN+2)& (0+255),w,b
 48117  00F592  6EFF               	movwf	tosu,c
 48118  00F594  50FA               	movf	pclath,w,c
 48119  00F596  0012               	return		;indir
 48120  00F598                     i2u1648_49:
 48121  00F598  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 48122  00F59A  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 48123  00F59C  B4D8               	btfsc	status,2,c
 48124  00F59E  D012               	goto	i2l541
 48125                           
 48126                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 48127  00F5A0  C24E  F039         	movff	_gblCBW+13,??_USBMSDInit
 48128  00F5A4  0E01               	movlw	1
 48129  00F5A6  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 48130  00F5A8  0E00               	movlw	0
 48131  00F5AA  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 48132  00F5AC  2A39               	incf	??_USBMSDInit,f,c
 48133  00F5AE  D003               	goto	i2u1650_44
 48134  00F5B0                     i2u1650_45:
 48135  00F5B0  90D8               	bcf	status,0,c
 48136  00F5B2  363A               	rlcf	??_USBMSDInit+1,f,c
 48137  00F5B4  363B               	rlcf	??_USBMSDInit+2,f,c
 48138  00F5B6                     i2u1650_44:
 48139  00F5B6  2E39               	decfsz	??_USBMSDInit,f,c
 48140  00F5B8  D7FB               	goto	i2u1650_45
 48141  00F5BA  503A               	movf	??_USBMSDInit+1,w,c
 48142  00F5BC  0102               	movlb	2	; () banked
 48143  00F5BE  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 48144  00F5C0  503B               	movf	??_USBMSDInit+2,w,c
 48145  00F5C2  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 48146  00F5C4                     i2l541:
 48147                           
 48148                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 48149                           
 48150                           ; BSR set to: 2
 48151                           
 48152                           ; BSR set to: 2
 48153  00F5C4  EC55  F093         	call	i2_ResetSenseData	;wreg free
 48154  00F5C8  0102               	movlb	2	; () banked
 48155  00F5CA  2B4E               	incf	(_gblCBW+13)& (0+255),f,b
 48156  00F5CC                     i2l538:
 48157                           
 48158                           ; BSR set to: 2
 48159                           
 48160                           ; BSR set to: 2
 48161  00F5CC  514E               	movf	(_gblCBW+13)& (0+255),w,b
 48162  00F5CE  A4D8               	btfss	status,2,c
 48163  00F5D0  0012               	return	
 48164  00F5D2  D7B2               	goto	i2l539
 48165  00F5D4                     __end_of_USBMSDInit:
 48166                           	opt stack 0
 48167                           tosu	equ	0xFFF
 48168                           tosh	equ	0xFFE
 48169                           tosl	equ	0xFFD
 48170                           pclatu	equ	0xFFB
 48171                           pclath	equ	0xFFA
 48172                           tblptru	equ	0xFF8
 48173                           tblptrh	equ	0xFF7
 48174                           tblptrl	equ	0xFF6
 48175                           tablat	equ	0xFF5
 48176                           prodh	equ	0xFF4
 48177                           prodl	equ	0xFF3
 48178                           intcon	equ	0xFF2
 48179                           intcon2	equ	0xFF1
 48180                           intcon3	equ	0xFF0
 48181                           indf0	equ	0xFEF
 48182                           postinc0	equ	0xFEE
 48183                           fsr0h	equ	0xFEA
 48184                           fsr0l	equ	0xFE9
 48185                           wreg	equ	0xFE8
 48186                           indf1	equ	0xFE7
 48187                           postinc1	equ	0xFE6
 48188                           postdec1	equ	0xFE5
 48189                           plusw1	equ	0xFE3
 48190                           fsr1h	equ	0xFE2
 48191                           fsr1l	equ	0xFE1
 48192                           indf2	equ	0xFDF
 48193                           postinc2	equ	0xFDE
 48194                           postdec2	equ	0xFDD
 48195                           plusw2	equ	0xFDB
 48196                           fsr2h	equ	0xFDA
 48197                           fsr2l	equ	0xFD9
 48198                           status	equ	0xFD8
 48199                           
 48200 ;; *************** function i2_ResetSenseData *****************
 48201 ;; Defined at:
 48202 ;;		line 1373 in file "usb_device_msd.c"
 48203 ;; Parameters:    Size  Location     Type
 48204 ;;		None
 48205 ;; Auto vars:     Size  Location     Type
 48206 ;;		None
 48207 ;; Return value:  Size  Location     Type
 48208 ;;                  1    wreg      void 
 48209 ;; Registers used:
 48210 ;;		wreg, status,2
 48211 ;; Tracked objects:
 48212 ;;		On entry : 0/0
 48213 ;;		On exit  : 0/0
 48214 ;;		Unchanged: 0/0
 48215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48220 ;;Total ram usage:        0 bytes
 48221 ;; Hardware stack levels used:    1
 48222 ;; This function calls:
 48223 ;;		Nothing
 48224 ;; This function is called by:
 48225 ;;		_USBMSDInit
 48226 ;; This function uses a non-reentrant model
 48227 ;;
 48228                           
 48229                           	psect	text240
 48230  0126AA                     __ptext240:
 48231                           	opt stack 0
 48232  0126AA                     i2_ResetSenseData:
 48233                           	opt stack 13
 48234                           
 48235                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 48236                           
 48237                           ; BSR set to: 2
 48238                           ;incstack = 0
 48239  0126AA  0102               	movlb	2	; () banked
 48240  0126AC  9160               	bcf	_gblSenseData& (0+255),0,b
 48241  0126AE  9360               	bcf	_gblSenseData& (0+255),1,b
 48242  0126B0  9560               	bcf	_gblSenseData& (0+255),2,b
 48243  0126B2  9760               	bcf	_gblSenseData& (0+255),3,b
 48244  0126B4  8960               	bsf	_gblSenseData& (0+255),4,b
 48245  0126B6  8B60               	bsf	_gblSenseData& (0+255),5,b
 48246  0126B8  8D60               	bsf	_gblSenseData& (0+255),6,b
 48247                           
 48248                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 48249  0126BA  9F60               	bcf	_gblSenseData& (0+255),7,b
 48250                           
 48251                           ; BSR set to: 2
 48252                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 48253  0126BC  0E00               	movlw	0
 48254  0126BE  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 48255                           
 48256                           ; BSR set to: 2
 48257                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 48258  0126C0  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 48259  0126C2  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 48260  0126C4  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 48261  0126C6  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 48262                           
 48263                           ; BSR set to: 2
 48264                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 48265  0126C8  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 48266                           
 48267                           ; BSR set to: 2
 48268                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 48269  0126CA  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 48270                           
 48271                           ; BSR set to: 2
 48272                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 48273  0126CC  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 48274                           
 48275                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 48276  0126CE  0E00               	movlw	0
 48277  0126D0  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 48278                           
 48279                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 48280  0126D2  0E00               	movlw	0
 48281  0126D4  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 48282                           
 48283                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 48284  0126D6  0E00               	movlw	0
 48285  0126D8  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 48286                           
 48287                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 48288  0126DA  0E00               	movlw	0
 48289  0126DC  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 48290                           
 48291                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 48292  0126DE  0E0A               	movlw	10
 48293  0126E0  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 48294                           
 48295                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 48296  0126E2  0E00               	movlw	0
 48297  0126E4  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 48298  0126E6  0E00               	movlw	0
 48299  0126E8  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 48300  0126EA  0E00               	movlw	0
 48301  0126EC  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 48302  0126EE  0E00               	movlw	0
 48303  0126F0  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 48304                           
 48305                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 48306  0126F2  0E00               	movlw	0
 48307  0126F4  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 48308                           
 48309                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 48310  0126F6  0E00               	movlw	0
 48311  0126F8  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 48312                           
 48313                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 48314  0126FA  0E00               	movlw	0
 48315  0126FC  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 48316                           
 48317                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 48318  0126FE  0E00               	movlw	0
 48319  012700  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 48320                           
 48321                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 48322  012702  0E00               	movlw	0
 48323  012704  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 48324                           
 48325                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 48326  012706  0E00               	movlw	0
 48327  012708  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 48328                           
 48329                           ; BSR set to: 2
 48330  01270A  0012               	return		;funcret
 48331  01270C                     __end_ofi2_ResetSenseData:
 48332                           	opt stack 0
 48333                           tosu	equ	0xFFF
 48334                           tosh	equ	0xFFE
 48335                           tosl	equ	0xFFD
 48336                           pclatu	equ	0xFFB
 48337                           pclath	equ	0xFFA
 48338                           tblptru	equ	0xFF8
 48339                           tblptrh	equ	0xFF7
 48340                           tblptrl	equ	0xFF6
 48341                           tablat	equ	0xFF5
 48342                           prodh	equ	0xFF4
 48343                           prodl	equ	0xFF3
 48344                           intcon	equ	0xFF2
 48345                           intcon2	equ	0xFF1
 48346                           intcon3	equ	0xFF0
 48347                           indf0	equ	0xFEF
 48348                           postinc0	equ	0xFEE
 48349                           fsr0h	equ	0xFEA
 48350                           fsr0l	equ	0xFE9
 48351                           wreg	equ	0xFE8
 48352                           indf1	equ	0xFE7
 48353                           postinc1	equ	0xFE6
 48354                           postdec1	equ	0xFE5
 48355                           plusw1	equ	0xFE3
 48356                           fsr1h	equ	0xFE2
 48357                           fsr1l	equ	0xFE1
 48358                           indf2	equ	0xFDF
 48359                           postinc2	equ	0xFDE
 48360                           postdec2	equ	0xFDD
 48361                           plusw2	equ	0xFDB
 48362                           fsr2h	equ	0xFDA
 48363                           fsr2l	equ	0xFD9
 48364                           status	equ	0xFD8
 48365                           
 48366 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 48367 ;; Defined at:
 48368 ;;		line 10 in file "external_flash.c"
 48369 ;; Parameters:    Size  Location     Type
 48370 ;;  config          2    0[COMRAM] PTR void 
 48371 ;;		 -> NULL(0), 
 48372 ;; Auto vars:     Size  Location     Type
 48373 ;;		None
 48374 ;; Return value:  Size  Location     Type
 48375 ;;                  2    0[COMRAM] PTR struct .
 48376 ;; Registers used:
 48377 ;;		wreg, status,2, status,0
 48378 ;; Tracked objects:
 48379 ;;		On entry : 0/0
 48380 ;;		On exit  : 0/0
 48381 ;;		Unchanged: 0/0
 48382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48387 ;;Total ram usage:        2 bytes
 48388 ;; Hardware stack levels used:    1
 48389 ;; This function calls:
 48390 ;;		Nothing
 48391 ;; This function is called by:
 48392 ;;		_USBMSDInit
 48393 ;;		_MSDProcessCommand
 48394 ;; This function uses a non-reentrant model
 48395 ;;
 48396                           
 48397                           	psect	text241
 48398  013BFC                     __ptext241:
 48399                           	opt stack 0
 48400  013BFC                     i2_ExternalFlash_MediaInitialize:
 48401                           	opt stack 13
 48402                           
 48403                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 48404                           
 48405                           ; BSR set to: 2
 48406                           ;incstack = 0
 48407  013BFC  0102               	movlb	2	; () banked
 48408  013BFE  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 48409                           
 48410                           ; BSR set to: 2
 48411                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 48412  013C00  0E02               	movlw	2
 48413  013C02  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 48414  013C04  0E00               	movlw	0
 48415  013C06  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 48416                           
 48417                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 48418  013C08  0E00               	movlw	0
 48419  013C0A  6FB6               	movwf	_mediaInformation& (0+255),b
 48420                           
 48421                           ; BSR set to: 2
 48422                           ;external_flash.c: 15: return &mediaInformation;
 48423  013C0C  0EB6               	movlw	low _mediaInformation
 48424  013C0E  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 48425  013C10  0E02               	movlw	high _mediaInformation
 48426  013C12  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 48427  013C14  0012               	return	
 48428  013C16                     __end_ofi2_ExternalFlash_MediaInitialize:
 48429                           	opt stack 0
 48430                           tosu	equ	0xFFF
 48431                           tosh	equ	0xFFE
 48432                           tosl	equ	0xFFD
 48433                           pclatu	equ	0xFFB
 48434                           pclath	equ	0xFFA
 48435                           tblptru	equ	0xFF8
 48436                           tblptrh	equ	0xFF7
 48437                           tblptrl	equ	0xFF6
 48438                           tablat	equ	0xFF5
 48439                           prodh	equ	0xFF4
 48440                           prodl	equ	0xFF3
 48441                           intcon	equ	0xFF2
 48442                           intcon2	equ	0xFF1
 48443                           intcon3	equ	0xFF0
 48444                           indf0	equ	0xFEF
 48445                           postinc0	equ	0xFEE
 48446                           fsr0h	equ	0xFEA
 48447                           fsr0l	equ	0xFE9
 48448                           wreg	equ	0xFE8
 48449                           indf1	equ	0xFE7
 48450                           postinc1	equ	0xFE6
 48451                           postdec1	equ	0xFE5
 48452                           plusw1	equ	0xFE3
 48453                           fsr1h	equ	0xFE2
 48454                           fsr1l	equ	0xFE1
 48455                           indf2	equ	0xFDF
 48456                           postinc2	equ	0xFDE
 48457                           postdec2	equ	0xFDD
 48458                           plusw2	equ	0xFDB
 48459                           fsr2h	equ	0xFDA
 48460                           fsr2l	equ	0xFD9
 48461                           status	equ	0xFD8
 48462                           
 48463 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 48464 ;; Defined at:
 48465 ;;		line 29 in file "external_flash.c"
 48466 ;; Parameters:    Size  Location     Type
 48467 ;;  config          2    0[COMRAM] PTR void 
 48468 ;;		 -> NULL(0), 
 48469 ;; Auto vars:     Size  Location     Type
 48470 ;;		None
 48471 ;; Return value:  Size  Location     Type
 48472 ;;                  1    wreg      unsigned char 
 48473 ;; Registers used:
 48474 ;;		wreg
 48475 ;; Tracked objects:
 48476 ;;		On entry : 0/0
 48477 ;;		On exit  : 0/0
 48478 ;;		Unchanged: 0/0
 48479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48484 ;;Total ram usage:        2 bytes
 48485 ;; Hardware stack levels used:    1
 48486 ;; This function calls:
 48487 ;;		Nothing
 48488 ;; This function is called by:
 48489 ;;		_USBMSDInit
 48490 ;;		_MSDProcessCommand
 48491 ;; This function uses a non-reentrant model
 48492 ;;
 48493                           
 48494                           	psect	text242
 48495  013EEC                     __ptext242:
 48496                           	opt stack 0
 48497  013EEC                     i2_ExternalFlash_MediaDetect:
 48498                           	opt stack 13
 48499                           
 48500                           ;external_flash.c: 31: return 1;
 48501                           
 48502                           ; BSR set to: 2
 48503                           ;incstack = 0
 48504  013EEC  0E01               	movlw	1
 48505  013EEE  0012               	return	
 48506  013EF0                     __end_ofi2_ExternalFlash_MediaDetect:
 48507                           	opt stack 0
 48508                           tosu	equ	0xFFF
 48509                           tosh	equ	0xFFE
 48510                           tosl	equ	0xFFD
 48511                           pclatu	equ	0xFFB
 48512                           pclath	equ	0xFFA
 48513                           tblptru	equ	0xFF8
 48514                           tblptrh	equ	0xFF7
 48515                           tblptrl	equ	0xFF6
 48516                           tablat	equ	0xFF5
 48517                           prodh	equ	0xFF4
 48518                           prodl	equ	0xFF3
 48519                           intcon	equ	0xFF2
 48520                           intcon2	equ	0xFF1
 48521                           intcon3	equ	0xFF0
 48522                           indf0	equ	0xFEF
 48523                           postinc0	equ	0xFEE
 48524                           fsr0h	equ	0xFEA
 48525                           fsr0l	equ	0xFE9
 48526                           wreg	equ	0xFE8
 48527                           indf1	equ	0xFE7
 48528                           postinc1	equ	0xFE6
 48529                           postdec1	equ	0xFE5
 48530                           plusw1	equ	0xFE3
 48531                           fsr1h	equ	0xFE2
 48532                           fsr1l	equ	0xFE1
 48533                           indf2	equ	0xFDF
 48534                           postinc2	equ	0xFDE
 48535                           postdec2	equ	0xFDD
 48536                           plusw2	equ	0xFDB
 48537                           fsr2h	equ	0xFDA
 48538                           fsr2l	equ	0xFD9
 48539                           status	equ	0xFD8
 48540                           
 48541 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 48542 ;; Defined at:
 48543 ;;		line 81 in file "app_device_custom_hid.c"
 48544 ;; Parameters:    Size  Location     Type
 48545 ;;		None
 48546 ;; Auto vars:     Size  Location     Type
 48547 ;;		None
 48548 ;; Return value:  Size  Location     Type
 48549 ;;                  1    wreg      void 
 48550 ;; Registers used:
 48551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48552 ;; Tracked objects:
 48553 ;;		On entry : 0/0
 48554 ;;		On exit  : 0/0
 48555 ;;		Unchanged: 0/0
 48556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48561 ;;Total ram usage:        0 bytes
 48562 ;; Hardware stack levels used:    1
 48563 ;; Hardware stack levels required when called:    2
 48564 ;; This function calls:
 48565 ;;		_USBEnableEndpoint
 48566 ;;		i2_USBTransferOnePacket
 48567 ;; This function is called by:
 48568 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48569 ;; This function uses a non-reentrant model
 48570 ;;
 48571                           
 48572                           	psect	text243
 48573  013540                     __ptext243:
 48574                           	opt stack 0
 48575  013540                     _APP_DeviceCustomHIDInitialize:
 48576                           	opt stack 13
 48577                           
 48578                           ;app_device_custom_hid.c: 85: USBInHandle = 0;
 48579                           
 48580                           ;incstack = 0
 48581  013540  0E00               	movlw	0
 48582  013542  0100               	movlb	0	; () banked
 48583  013544  6FD7               	movwf	_USBInHandle& (0+255),b
 48584  013546  0E00               	movlw	0
 48585  013548  6FD8               	movwf	(_USBInHandle+1)& (0+255),b
 48586                           
 48587                           ; BSR set to: 0
 48588                           ;app_device_custom_hid.c: 88: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 48589  01354A  0E1E               	movlw	30
 48590  01354C  6E36               	movwf	USBEnableEndpoint@options,c
 48591  01354E  0E01               	movlw	1
 48592  013550  ECC6  F099         	call	_USBEnableEndpoint
 48593                           
 48594                           ;app_device_custom_hid.c: 91: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 48595  013554  0E00               	movlw	0
 48596  013556  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 48597  013558  0E78               	movlw	low _ReceivedDataBuffer
 48598  01355A  6E2F               	movwf	i2USBTransferOnePacket@data,c
 48599  01355C  0E04               	movlw	high _ReceivedDataBuffer
 48600  01355E  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 48601  013560  0E40               	movlw	64
 48602  013562  6E31               	movwf	i2USBTransferOnePacket@len,c
 48603  013564  0E01               	movlw	1
 48604  013566  EC7D  F07D         	call	i2_USBTransferOnePacket
 48605  01356A  C02E  F1E9         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 48606  01356E  C02F  F1EA         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 48607  013572  0012               	return		;funcret
 48608  013574                     __end_of_APP_DeviceCustomHIDInitialize:
 48609                           	opt stack 0
 48610                           tosu	equ	0xFFF
 48611                           tosh	equ	0xFFE
 48612                           tosl	equ	0xFFD
 48613                           pclatu	equ	0xFFB
 48614                           pclath	equ	0xFFA
 48615                           tblptru	equ	0xFF8
 48616                           tblptrh	equ	0xFF7
 48617                           tblptrl	equ	0xFF6
 48618                           tablat	equ	0xFF5
 48619                           prodh	equ	0xFF4
 48620                           prodl	equ	0xFF3
 48621                           intcon	equ	0xFF2
 48622                           intcon2	equ	0xFF1
 48623                           intcon3	equ	0xFF0
 48624                           indf0	equ	0xFEF
 48625                           postinc0	equ	0xFEE
 48626                           fsr0h	equ	0xFEA
 48627                           fsr0l	equ	0xFE9
 48628                           wreg	equ	0xFE8
 48629                           indf1	equ	0xFE7
 48630                           postinc1	equ	0xFE6
 48631                           postdec1	equ	0xFE5
 48632                           plusw1	equ	0xFE3
 48633                           fsr1h	equ	0xFE2
 48634                           fsr1l	equ	0xFE1
 48635                           indf2	equ	0xFDF
 48636                           postinc2	equ	0xFDE
 48637                           postdec2	equ	0xFDD
 48638                           plusw2	equ	0xFDB
 48639                           fsr2h	equ	0xFDA
 48640                           fsr2l	equ	0xFD9
 48641                           status	equ	0xFD8
 48642                           
 48643 ;; *************** function i2_USBTransferOnePacket *****************
 48644 ;; Defined at:
 48645 ;;		line 995 in file "usb_device.c"
 48646 ;; Parameters:    Size  Location     Type
 48647 ;;  ep              1    wreg     unsigned char 
 48648 ;;  dir             1    0[COMRAM] unsigned char 
 48649 ;;  data            2    1[COMRAM] PTR unsigned char 
 48650 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 48651 ;;		 -> msd_cbw(31), NULL(0), 
 48652 ;;  len             1    3[COMRAM] unsigned char 
 48653 ;; Auto vars:     Size  Location     Type
 48654 ;;  ep              1    8[COMRAM] unsigned char 
 48655 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 48656 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48657 ;; Return value:  Size  Location     Type
 48658 ;;                  2    0[COMRAM] PTR void 
 48659 ;; Registers used:
 48660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48661 ;; Tracked objects:
 48662 ;;		On entry : 0/0
 48663 ;;		On exit  : 0/0
 48664 ;;		Unchanged: 0/0
 48665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48667 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48668 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48669 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48670 ;;Total ram usage:       11 bytes
 48671 ;; Hardware stack levels used:    1
 48672 ;; This function calls:
 48673 ;;		Nothing
 48674 ;; This function is called by:
 48675 ;;		_USBMSDInit
 48676 ;;		_USBCheckMSDRequest
 48677 ;;		_MSDTransferTerminated
 48678 ;;		_APP_DeviceCustomHIDInitialize
 48679 ;; This function uses a non-reentrant model
 48680 ;;
 48681                           
 48682                           	psect	text244
 48683  00FAFA                     __ptext244:
 48684                           	opt stack 0
 48685  00FAFA                     i2_USBTransferOnePacket:
 48686                           	opt stack 14
 48687                           
 48688                           ;incstack = 0
 48689                           ;i2USBTransferOnePacket@ep stored from wreg
 48690  00FAFA  6E36               	movwf	i2USBTransferOnePacket@ep,c
 48691                           
 48692                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 48693  00FAFC  502E               	movf	i2USBTransferOnePacket@dir,w,c
 48694  00FAFE  B4D8               	btfsc	status,2,c
 48695  00FB00  D007               	goto	i2l186
 48696                           
 48697                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 48698  00FB02  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48699  00FB04  0D02               	mullw	2
 48700  00FB06  0E10               	movlw	low _pBDTEntryIn
 48701  00FB08  24F3               	addwf	prodl,w,c
 48702  00FB0A  6ED9               	movwf	fsr2l,c
 48703  00FB0C  0E00               	movlw	high _pBDTEntryIn
 48704  00FB0E  D006               	goto	L65
 48705  00FB10                     i2l186:
 48706                           
 48707                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 48708  00FB10  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48709  00FB12  0D02               	mullw	2
 48710  00FB14  0ED3               	movlw	low _pBDTEntryOut
 48711  00FB16  24F3               	addwf	prodl,w,c
 48712  00FB18  6ED9               	movwf	fsr2l,c
 48713  00FB1A  0E01               	movlw	high _pBDTEntryOut
 48714  00FB1C                     L65:
 48715  00FB1C  20F4               	addwfc	prodh,w,c
 48716  00FB1E  6EDA               	movwf	fsr2h,c
 48717  00FB20  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 48718  00FB24  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 48719                           
 48720                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 48721  00FB28  5037               	movf	i2USBTransferOnePacket@handle,w,c
 48722  00FB2A  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 48723  00FB2C  A4D8               	btfss	status,2,c
 48724  00FB2E  D005               	goto	i2l188
 48725                           
 48726                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 48727  00FB30  0E00               	movlw	0
 48728  00FB32  6E2E               	movwf	?i2_USBTransferOnePacket,c
 48729  00FB34  0E00               	movlw	0
 48730  00FB36  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 48731  00FB38  0012               	return	
 48732  00FB3A                     i2l188:
 48733                           
 48734                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 48735  00FB3A  EE20 F002          	lfsr	2,2
 48736  00FB3E  5037               	movf	i2USBTransferOnePacket@handle,w,c
 48737  00FB40  26D9               	addwf	fsr2l,f,c
 48738  00FB42  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 48739  00FB44  22DA               	addwfc	fsr2h,f,c
 48740  00FB46  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 48741  00FB4A  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 48742                           
 48743                           ;usb_device.c: 1030: handle->CNT = len;
 48744  00FB4E  EE20 F001          	lfsr	2,1
 48745  00FB52  5037               	movf	i2USBTransferOnePacket@handle,w,c
 48746  00FB54  26D9               	addwf	fsr2l,f,c
 48747  00FB56  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 48748  00FB58  22DA               	addwfc	fsr2h,f,c
 48749  00FB5A  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 48750                           
 48751                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 48752  00FB5E  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 48753  00FB62  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 48754  00FB66  0E40               	movlw	64
 48755  00FB68  16DF               	andwf	indf2,f,c
 48756                           
 48757                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 48758  00FB6A  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 48759  00FB6E  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 48760  00FB72  0E00               	movlw	0
 48761  00FB74  86DB               	bsf	plusw2,3,c
 48762                           
 48763                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 48764  00FB76  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 48765  00FB7A  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 48766  00FB7E  0E00               	movlw	0
 48767  00FB80  8EDB               	bsf	plusw2,7,c
 48768                           
 48769                           ;usb_device.c: 1036: if(dir != 0)
 48770  00FB82  502E               	movf	i2USBTransferOnePacket@dir,w,c
 48771  00FB84  B4D8               	btfsc	status,2,c
 48772  00FB86  D018               	goto	i2l190
 48773                           
 48774                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 48775  00FB88  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48776  00FB8A  0D02               	mullw	2
 48777  00FB8C  0E10               	movlw	low _pBDTEntryIn
 48778  00FB8E  24F3               	addwf	prodl,w,c
 48779  00FB90  6ED9               	movwf	fsr2l,c
 48780  00FB92  0E00               	movlw	high _pBDTEntryIn
 48781  00FB94  20F4               	addwfc	prodh,w,c
 48782  00FB96  6EDA               	movwf	fsr2h,c
 48783  00FB98  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 48784  00FB9C  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 48785  00FBA0  0E04               	movlw	4
 48786  00FBA2  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 48787  00FBA4  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 48788  00FBA6  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 48789  00FBA8  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 48790  00FBAA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48791  00FBAC  0D02               	mullw	2
 48792  00FBAE  0E10               	movlw	low _pBDTEntryIn
 48793  00FBB0  24F3               	addwf	prodl,w,c
 48794  00FBB2  6ED9               	movwf	fsr2l,c
 48795  00FBB4  0E00               	movlw	high _pBDTEntryIn
 48796  00FBB6  D017               	goto	L66
 48797  00FBB8                     i2l190:
 48798                           
 48799                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 48800  00FBB8  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48801  00FBBA  0D02               	mullw	2
 48802  00FBBC  0ED3               	movlw	low _pBDTEntryOut
 48803  00FBBE  24F3               	addwf	prodl,w,c
 48804  00FBC0  6ED9               	movwf	fsr2l,c
 48805  00FBC2  0E01               	movlw	high _pBDTEntryOut
 48806  00FBC4  20F4               	addwfc	prodh,w,c
 48807  00FBC6  6EDA               	movwf	fsr2h,c
 48808  00FBC8  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 48809  00FBCC  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 48810  00FBD0  0E04               	movlw	4
 48811  00FBD2  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 48812  00FBD4  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 48813  00FBD6  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 48814  00FBD8  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 48815  00FBDA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 48816  00FBDC  0D02               	mullw	2
 48817  00FBDE  0ED3               	movlw	low _pBDTEntryOut
 48818  00FBE0  24F3               	addwf	prodl,w,c
 48819  00FBE2  6ED9               	movwf	fsr2l,c
 48820  00FBE4  0E01               	movlw	high _pBDTEntryOut
 48821  00FBE6                     L66:
 48822  00FBE6  20F4               	addwfc	prodh,w,c
 48823  00FBE8  6EDA               	movwf	fsr2h,c
 48824  00FBEA  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 48825  00FBEE  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 48826                           
 48827                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 48828  00FBF2  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 48829  00FBF6  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 48830  00FBFA  0012               	return	
 48831  00FBFC                     __end_ofi2_USBTransferOnePacket:
 48832                           	opt stack 0
 48833                           tosu	equ	0xFFF
 48834                           tosh	equ	0xFFE
 48835                           tosl	equ	0xFFD
 48836                           pclatu	equ	0xFFB
 48837                           pclath	equ	0xFFA
 48838                           tblptru	equ	0xFF8
 48839                           tblptrh	equ	0xFF7
 48840                           tblptrl	equ	0xFF6
 48841                           tablat	equ	0xFF5
 48842                           prodh	equ	0xFF4
 48843                           prodl	equ	0xFF3
 48844                           intcon	equ	0xFF2
 48845                           intcon2	equ	0xFF1
 48846                           intcon3	equ	0xFF0
 48847                           indf0	equ	0xFEF
 48848                           postinc0	equ	0xFEE
 48849                           fsr0h	equ	0xFEA
 48850                           fsr0l	equ	0xFE9
 48851                           wreg	equ	0xFE8
 48852                           indf1	equ	0xFE7
 48853                           postinc1	equ	0xFE6
 48854                           postdec1	equ	0xFE5
 48855                           plusw1	equ	0xFE3
 48856                           fsr1h	equ	0xFE2
 48857                           fsr1l	equ	0xFE1
 48858                           indf2	equ	0xFDF
 48859                           postinc2	equ	0xFDE
 48860                           postdec2	equ	0xFDD
 48861                           plusw2	equ	0xFDB
 48862                           fsr2h	equ	0xFDA
 48863                           fsr2l	equ	0xFD9
 48864                           status	equ	0xFD8
 48865                           
 48866 ;; *************** function _USBEnableEndpoint *****************
 48867 ;; Defined at:
 48868 ;;		line 878 in file "usb_device.c"
 48869 ;; Parameters:    Size  Location     Type
 48870 ;;  ep              1    wreg     unsigned char 
 48871 ;;  options         1    8[COMRAM] unsigned char 
 48872 ;; Auto vars:     Size  Location     Type
 48873 ;;  ep              1   11[COMRAM] unsigned char 
 48874 ;;  p               2    9[COMRAM] PTR unsigned char 
 48875 ;;		 -> UEP0(1), 
 48876 ;; Return value:  Size  Location     Type
 48877 ;;                  1    wreg      void 
 48878 ;; Registers used:
 48879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48880 ;; Tracked objects:
 48881 ;;		On entry : 0/0
 48882 ;;		On exit  : 0/0
 48883 ;;		Unchanged: 0/0
 48884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48886 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48889 ;;Total ram usage:        4 bytes
 48890 ;; Hardware stack levels used:    1
 48891 ;; Hardware stack levels required when called:    1
 48892 ;; This function calls:
 48893 ;;		_USBConfigureEndpoint
 48894 ;; This function is called by:
 48895 ;;		_APP_DeviceCustomHIDInitialize
 48896 ;;		_APP_DeviceMSDInitialize
 48897 ;; This function uses a non-reentrant model
 48898 ;;
 48899                           
 48900                           	psect	text245
 48901  01338C                     __ptext245:
 48902                           	opt stack 0
 48903  01338C                     _USBEnableEndpoint:
 48904                           	opt stack 13
 48905                           
 48906                           ;incstack = 0
 48907                           ;USBEnableEndpoint@ep stored from wreg
 48908  01338C  6E39               	movwf	USBEnableEndpoint@ep,c
 48909                           
 48910                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 48911  01338E  A436               	btfss	USBEnableEndpoint@options,2,c
 48912  013390  D005               	goto	i2l181
 48913                           
 48914                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 48915  013392  0E00               	movlw	0
 48916  013394  6E2E               	movwf	USBConfigureEndpoint@direction,c
 48917  013396  5039               	movf	USBEnableEndpoint@ep,w,c
 48918  013398  ECE5  F08A         	call	_USBConfigureEndpoint
 48919  01339C                     i2l181:
 48920                           
 48921                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 48922  01339C  A236               	btfss	USBEnableEndpoint@options,1,c
 48923  01339E  D005               	goto	i2l182
 48924                           
 48925                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 48926  0133A0  0E01               	movlw	1
 48927  0133A2  6E2E               	movwf	USBConfigureEndpoint@direction,c
 48928  0133A4  5039               	movf	USBEnableEndpoint@ep,w,c
 48929  0133A6  ECE5  F08A         	call	_USBConfigureEndpoint
 48930  0133AA                     i2l182:
 48931                           
 48932                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 48933  0133AA  5039               	movf	USBEnableEndpoint@ep,w,c
 48934  0133AC  0D01               	mullw	1
 48935  0133AE  0E26               	movlw	38
 48936  0133B0  24F3               	addwf	prodl,w,c
 48937  0133B2  6E37               	movwf	USBEnableEndpoint@p,c
 48938  0133B4  0E0F               	movlw	15
 48939  0133B6  20F4               	addwfc	prodh,w,c
 48940  0133B8  6E38               	movwf	USBEnableEndpoint@p+1,c
 48941                           
 48942                           ;usb_device.c: 901: *p = options;
 48943  0133BA  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 48944  0133BE  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 48945  0133C2  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 48946  0133C6  0012               	return		;funcret
 48947  0133C8                     __end_of_USBEnableEndpoint:
 48948                           	opt stack 0
 48949                           tosu	equ	0xFFF
 48950                           tosh	equ	0xFFE
 48951                           tosl	equ	0xFFD
 48952                           pclatu	equ	0xFFB
 48953                           pclath	equ	0xFFA
 48954                           tblptru	equ	0xFF8
 48955                           tblptrh	equ	0xFF7
 48956                           tblptrl	equ	0xFF6
 48957                           tablat	equ	0xFF5
 48958                           prodh	equ	0xFF4
 48959                           prodl	equ	0xFF3
 48960                           intcon	equ	0xFF2
 48961                           intcon2	equ	0xFF1
 48962                           intcon3	equ	0xFF0
 48963                           indf0	equ	0xFEF
 48964                           postinc0	equ	0xFEE
 48965                           fsr0h	equ	0xFEA
 48966                           fsr0l	equ	0xFE9
 48967                           wreg	equ	0xFE8
 48968                           indf1	equ	0xFE7
 48969                           postinc1	equ	0xFE6
 48970                           postdec1	equ	0xFE5
 48971                           plusw1	equ	0xFE3
 48972                           fsr1h	equ	0xFE2
 48973                           fsr1l	equ	0xFE1
 48974                           indf2	equ	0xFDF
 48975                           postinc2	equ	0xFDE
 48976                           postdec2	equ	0xFDD
 48977                           plusw2	equ	0xFDB
 48978                           fsr2h	equ	0xFDA
 48979                           fsr2l	equ	0xFD9
 48980                           status	equ	0xFD8
 48981                           
 48982 ;; *************** function _USBConfigureEndpoint *****************
 48983 ;; Defined at:
 48984 ;;		line 1545 in file "usb_device.c"
 48985 ;; Parameters:    Size  Location     Type
 48986 ;;  EPNum           1    wreg     unsigned char 
 48987 ;;  direction       1    0[COMRAM] unsigned char 
 48988 ;; Auto vars:     Size  Location     Type
 48989 ;;  EPNum           1    5[COMRAM] unsigned char 
 48990 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 48991 ;;		 -> BDT(48), 
 48992 ;; Return value:  Size  Location     Type
 48993 ;;                  1    wreg      void 
 48994 ;; Registers used:
 48995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48996 ;; Tracked objects:
 48997 ;;		On entry : 0/0
 48998 ;;		On exit  : 0/0
 48999 ;;		Unchanged: 0/0
 49000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49001 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49002 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49004 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49005 ;;Total ram usage:        8 bytes
 49006 ;; Hardware stack levels used:    1
 49007 ;; This function calls:
 49008 ;;		Nothing
 49009 ;; This function is called by:
 49010 ;;		_USBEnableEndpoint
 49011 ;; This function uses a non-reentrant model
 49012 ;;
 49013                           
 49014                           	psect	text246
 49015  0115CA                     __ptext246:
 49016                           	opt stack 0
 49017  0115CA                     _USBConfigureEndpoint:
 49018                           	opt stack 13
 49019                           
 49020                           ;incstack = 0
 49021                           ;USBConfigureEndpoint@EPNum stored from wreg
 49022  0115CA  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 49023                           
 49024                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 49025  0115CC  0E00               	movlw	0
 49026  0115CE  6E34               	movwf	USBConfigureEndpoint@handle,c
 49027  0115D0  0E0D               	movlw	13
 49028  0115D2  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 49029                           
 49030                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 49031  0115D4  502E               	movf	USBConfigureEndpoint@direction,w,c
 49032  0115D6  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 49033  0115D8  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 49034  0115DA  90D8               	bcf	status,0,c
 49035  0115DC  362F               	rlcf	??_USBConfigureEndpoint,f,c
 49036  0115DE  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 49037  0115E0  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 49038  0115E2  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 49039  0115E4  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 49040  0115E6  90D8               	bcf	status,0,c
 49041  0115E8  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 49042  0115EA  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 49043  0115EC  90D8               	bcf	status,0,c
 49044  0115EE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 49045  0115F0  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 49046  0115F2  502F               	movf	??_USBConfigureEndpoint,w,c
 49047  0115F4  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 49048  0115F6  5030               	movf	??_USBConfigureEndpoint+1,w,c
 49049  0115F8  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 49050  0115FA  90D8               	bcf	status,0,c
 49051  0115FC  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 49052  0115FE  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 49053  011600  90D8               	bcf	status,0,c
 49054  011602  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 49055  011604  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 49056  011606  5031               	movf	??_USBConfigureEndpoint+2,w,c
 49057  011608  2634               	addwf	USBConfigureEndpoint@handle,f,c
 49058  01160A  5032               	movf	??_USBConfigureEndpoint+3,w,c
 49059  01160C  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 49060                           
 49061                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 49062  01160E  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 49063  011612  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 49064  011616  9EDF               	bcf	indf2,7,c
 49065                           
 49066                           ;usb_device.c: 1559: if(direction == 0)
 49067  011618  502E               	movf	USBConfigureEndpoint@direction,w,c
 49068  01161A  A4D8               	btfss	status,2,c
 49069  01161C  D007               	goto	i2l228
 49070                           
 49071                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 49072  01161E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 49073  011620  0D02               	mullw	2
 49074  011622  0ED3               	movlw	low _pBDTEntryOut
 49075  011624  24F3               	addwf	prodl,w,c
 49076  011626  6ED9               	movwf	fsr2l,c
 49077  011628  0E01               	movlw	high _pBDTEntryOut
 49078  01162A  D006               	goto	L67
 49079  01162C                     i2l228:
 49080                           
 49081                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 49082  01162C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 49083  01162E  0D02               	mullw	2
 49084  011630  0E10               	movlw	low _pBDTEntryIn
 49085  011632  24F3               	addwf	prodl,w,c
 49086  011634  6ED9               	movwf	fsr2l,c
 49087  011636  0E00               	movlw	high _pBDTEntryIn
 49088  011638                     L67:
 49089  011638  20F4               	addwfc	prodh,w,c
 49090  01163A  6EDA               	movwf	fsr2h,c
 49091  01163C  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 49092  011640  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 49093                           
 49094                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 49095  011644  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 49096  011648  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 49097  01164C  9CDF               	bcf	indf2,6,c
 49098                           
 49099                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 49100  01164E  EE20 F004          	lfsr	2,4
 49101  011652  5034               	movf	USBConfigureEndpoint@handle,w,c
 49102  011654  26D9               	addwf	fsr2l,f,c
 49103  011656  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 49104  011658  22DA               	addwfc	fsr2h,f,c
 49105  01165A  8CDF               	bsf	indf2,6,c
 49106  01165C  0012               	return		;funcret
 49107  01165E                     __end_of_USBConfigureEndpoint:
 49108                           	opt stack 0
 49109                           tosu	equ	0xFFF
 49110                           tosh	equ	0xFFE
 49111                           tosl	equ	0xFFD
 49112                           pclatu	equ	0xFFB
 49113                           pclath	equ	0xFFA
 49114                           tblptru	equ	0xFF8
 49115                           tblptrh	equ	0xFF7
 49116                           tblptrl	equ	0xFF6
 49117                           tablat	equ	0xFF5
 49118                           prodh	equ	0xFF4
 49119                           prodl	equ	0xFF3
 49120                           intcon	equ	0xFF2
 49121                           intcon2	equ	0xFF1
 49122                           intcon3	equ	0xFF0
 49123                           indf0	equ	0xFEF
 49124                           postinc0	equ	0xFEE
 49125                           fsr0h	equ	0xFEA
 49126                           fsr0l	equ	0xFE9
 49127                           wreg	equ	0xFE8
 49128                           indf1	equ	0xFE7
 49129                           postinc1	equ	0xFE6
 49130                           postdec1	equ	0xFE5
 49131                           plusw1	equ	0xFE3
 49132                           fsr1h	equ	0xFE2
 49133                           fsr1l	equ	0xFE1
 49134                           indf2	equ	0xFDF
 49135                           postinc2	equ	0xFDE
 49136                           postdec2	equ	0xFDD
 49137                           plusw2	equ	0xFDB
 49138                           fsr2h	equ	0xFDA
 49139                           fsr2l	equ	0xFD9
 49140                           status	equ	0xFD8
 49141                           
 49142 ;; *************** function _USBCtrlTrfOutHandler *****************
 49143 ;; Defined at:
 49144 ;;		line 2540 in file "usb_device.c"
 49145 ;; Parameters:    Size  Location     Type
 49146 ;;		None
 49147 ;; Auto vars:     Size  Location     Type
 49148 ;;		None
 49149 ;; Return value:  Size  Location     Type
 49150 ;;                  1    wreg      void 
 49151 ;; Registers used:
 49152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49153 ;; Tracked objects:
 49154 ;;		On entry : 0/0
 49155 ;;		On exit  : 0/0
 49156 ;;		Unchanged: 0/0
 49157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49162 ;;Total ram usage:        0 bytes
 49163 ;; Hardware stack levels used:    1
 49164 ;; Hardware stack levels required when called:    2
 49165 ;; This function calls:
 49166 ;;		_USBCtrlTrfRxService
 49167 ;; This function is called by:
 49168 ;;		_USBCtrlEPService
 49169 ;; This function uses a non-reentrant model
 49170 ;;
 49171                           
 49172                           	psect	text247
 49173  0128DC                     __ptext247:
 49174                           	opt stack 0
 49175  0128DC                     _USBCtrlTrfOutHandler:
 49176                           	opt stack 13
 49177                           
 49178                           ;usb_device.c: 2542: if(controlTransferState == 2)
 49179                           
 49180                           ;incstack = 0
 49181  0128DC  0E02               	movlw	2
 49182  0128DE  1829               	xorwf	_controlTransferState,w,c	;volatile
 49183  0128E0  A4D8               	btfss	status,2,c
 49184  0128E2  D003               	goto	i2l334
 49185                           
 49186                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 49187  0128E4  ECEA  F07A         	call	_USBCtrlTrfRxService	;wreg free
 49188                           
 49189                           ;usb_device.c: 2545: }
 49190  0128E8  0012               	return	
 49191  0128EA                     i2l334:
 49192                           
 49193                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 49194  0128EA  0E00               	movlw	0
 49195  0128EC  6E29               	movwf	_controlTransferState,c	;volatile
 49196                           
 49197                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 49198  0128EE  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 49199  0128F0  A4D8               	btfss	status,2,c
 49200  0128F2  D01F               	goto	i2l336
 49201                           
 49202                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 49203  0128F4  EE20 F001          	lfsr	2,1
 49204  0128F8  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49205  0128FA  26D9               	addwf	fsr2l,f,c
 49206  0128FC  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49207  0128FE  22DA               	addwfc	fsr2h,f,c
 49208  012900  0E08               	movlw	8
 49209  012902  6EDF               	movwf	indf2,c
 49210                           
 49211                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49212  012904  EE20 F002          	lfsr	2,2
 49213  012908  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49214  01290A  26D9               	addwf	fsr2l,f,c
 49215  01290C  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49216  01290E  22DA               	addwfc	fsr2h,f,c
 49217  012910  0E30               	movlw	48
 49218  012912  6EDE               	movwf	postinc2,c
 49219  012914  0E0D               	movlw	13
 49220  012916  6EDD               	movwf	postdec2,c
 49221                           
 49222                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49223  012918  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49224  01291C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49225  012920  0E0C               	movlw	12
 49226  012922  6EDF               	movwf	indf2,c
 49227                           
 49228                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49229  012924  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49230  012928  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49231  01292C  0E00               	movlw	0
 49232  01292E  8EDB               	bsf	plusw2,7,c
 49233                           
 49234                           ;usb_device.c: 2563: }
 49235  012930  0012               	return	
 49236  012932                     i2l336:
 49237                           
 49238                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 49239  012932  0E00               	movlw	0
 49240  012934  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 49241  012936  0012               	return	
 49242  012938                     __end_of_USBCtrlTrfOutHandler:
 49243                           	opt stack 0
 49244                           tosu	equ	0xFFF
 49245                           tosh	equ	0xFFE
 49246                           tosl	equ	0xFFD
 49247                           pclatu	equ	0xFFB
 49248                           pclath	equ	0xFFA
 49249                           tblptru	equ	0xFF8
 49250                           tblptrh	equ	0xFF7
 49251                           tblptrl	equ	0xFF6
 49252                           tablat	equ	0xFF5
 49253                           prodh	equ	0xFF4
 49254                           prodl	equ	0xFF3
 49255                           intcon	equ	0xFF2
 49256                           intcon2	equ	0xFF1
 49257                           intcon3	equ	0xFF0
 49258                           indf0	equ	0xFEF
 49259                           postinc0	equ	0xFEE
 49260                           fsr0h	equ	0xFEA
 49261                           fsr0l	equ	0xFE9
 49262                           wreg	equ	0xFE8
 49263                           indf1	equ	0xFE7
 49264                           postinc1	equ	0xFE6
 49265                           postdec1	equ	0xFE5
 49266                           plusw1	equ	0xFE3
 49267                           fsr1h	equ	0xFE2
 49268                           fsr1l	equ	0xFE1
 49269                           indf2	equ	0xFDF
 49270                           postinc2	equ	0xFDE
 49271                           postdec2	equ	0xFDD
 49272                           plusw2	equ	0xFDB
 49273                           fsr2h	equ	0xFDA
 49274                           fsr2l	equ	0xFD9
 49275                           status	equ	0xFD8
 49276                           
 49277 ;; *************** function _USBCtrlTrfRxService *****************
 49278 ;; Defined at:
 49279 ;;		line 1854 in file "usb_device.c"
 49280 ;; Parameters:    Size  Location     Type
 49281 ;;		None
 49282 ;; Auto vars:     Size  Location     Type
 49283 ;;  byteToRead      1    1[COMRAM] unsigned char 
 49284 ;;  i               1    0[COMRAM] unsigned char 
 49285 ;; Return value:  Size  Location     Type
 49286 ;;                  1    wreg      void 
 49287 ;; Registers used:
 49288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49289 ;; Tracked objects:
 49290 ;;		On entry : 0/0
 49291 ;;		On exit  : 0/0
 49292 ;;		Unchanged: 0/0
 49293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49298 ;;Total ram usage:        2 bytes
 49299 ;; Hardware stack levels used:    1
 49300 ;; Hardware stack levels required when called:    1
 49301 ;; This function calls:
 49302 ;;		_USBCtrlEPAllowStatusStage
 49303 ;; This function is called by:
 49304 ;;		_USBCtrlTrfOutHandler
 49305 ;; This function uses a non-reentrant model
 49306 ;;
 49307                           
 49308                           	psect	text248
 49309  00F5D4                     __ptext248:
 49310                           	opt stack 0
 49311  00F5D4                     _USBCtrlTrfRxService:
 49312                           	opt stack 13
 49313                           
 49314                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 49315                           
 49316                           ;incstack = 0
 49317  00F5D4  EE20 F001          	lfsr	2,1
 49318  00F5D8  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 49319  00F5DA  26D9               	addwf	fsr2l,f,c
 49320  00F5DC  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 49321  00F5DE  22DA               	addwfc	fsr2h,f,c
 49322  00F5E0  50DF               	movf	indf2,w,c
 49323  00F5E2  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 49324                           
 49325                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 49326  00F5E4  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49327  00F5E6  5C05               	subwf	_outPipes+4,w,c	;volatile
 49328  00F5E8  0E00               	movlw	0
 49329  00F5EA  5806               	subwfb	_outPipes+5,w,c	;volatile
 49330  00F5EC  A0D8               	btfss	status,0,c
 49331                           
 49332                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 49333  00F5EE  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 49334                           
 49335                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 49336  00F5F2  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49337  00F5F4  5E05               	subwf	_outPipes+4,f,c	;volatile
 49338  00F5F6  0E00               	movlw	0
 49339  00F5F8  5A06               	subwfb	_outPipes+5,f,c	;volatile
 49340                           
 49341                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 49342  00F5FA  0E00               	movlw	0
 49343  00F5FC  6E2E               	movwf	USBCtrlTrfRxService@i,c
 49344  00F5FE  D011               	goto	i2l262
 49345  00F600                     
 49346                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 49347  00F600  502E               	movf	USBCtrlTrfRxService@i,w,c
 49348  00F602  0D01               	mullw	1
 49349  00F604  0E38               	movlw	56
 49350  00F606  24F3               	addwf	prodl,w,c
 49351  00F608  6ED9               	movwf	fsr2l,c
 49352  00F60A  0E0D               	movlw	13
 49353  00F60C  20F4               	addwfc	prodh,w,c
 49354  00F60E  6EDA               	movwf	fsr2h,c
 49355  00F610  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 49356  00F614  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 49357  00F618  CFDF FFE7          	movff	indf2,indf1
 49358  00F61C  4A01               	infsnz	_outPipes,f,c	;volatile
 49359  00F61E  2A02               	incf	_outPipes+1,f,c	;volatile
 49360  00F620  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 49361  00F622                     i2l262:
 49362  00F622  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 49363  00F624  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 49364  00F626  A0D8               	btfss	status,0,c
 49365  00F628  D7EB               	goto	i2l263
 49366                           
 49367                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 49368  00F62A  5005               	movf	_outPipes+4,w,c	;volatile
 49369  00F62C  1006               	iorwf	_outPipes+5,w,c	;volatile
 49370  00F62E  B4D8               	btfsc	status,2,c
 49371  00F630  D032               	goto	i2l265
 49372                           
 49373                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 49374  00F632  EE20 F001          	lfsr	2,1
 49375  00F636  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49376  00F638  26D9               	addwf	fsr2l,f,c
 49377  00F63A  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49378  00F63C  22DA               	addwfc	fsr2h,f,c
 49379  00F63E  0E08               	movlw	8
 49380  00F640  6EDF               	movwf	indf2,c
 49381                           
 49382                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49383  00F642  EE20 F002          	lfsr	2,2
 49384  00F646  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49385  00F648  26D9               	addwf	fsr2l,f,c
 49386  00F64A  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49387  00F64C  22DA               	addwfc	fsr2h,f,c
 49388  00F64E  0E38               	movlw	56
 49389  00F650  6EDE               	movwf	postinc2,c
 49390  00F652  0E0D               	movlw	13
 49391  00F654  6EDD               	movwf	postdec2,c
 49392                           
 49393                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 49394  00F656  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49395  00F65A  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49396  00F65E  BCDF               	btfsc	indf2,6,c
 49397  00F660  D00D               	goto	i2l266
 49398                           
 49399                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 49400  00F662  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49401  00F666  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49402  00F66A  0E48               	movlw	72
 49403  00F66C  6EDF               	movwf	indf2,c
 49404                           
 49405                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49406  00F66E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49407  00F672  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49408  00F676  0E00               	movlw	0
 49409  00F678  8EDB               	bsf	plusw2,7,c
 49410                           
 49411                           ;usb_device.c: 1891: }
 49412  00F67A  0012               	return	
 49413  00F67C                     i2l266:
 49414                           
 49415                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 49416  00F67C  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49417  00F680  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49418  00F684  0E08               	movlw	8
 49419  00F686  6EDF               	movwf	indf2,c
 49420                           
 49421                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49422  00F688  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49423  00F68C  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49424  00F690  0E00               	movlw	0
 49425  00F692  8EDB               	bsf	plusw2,7,c
 49426                           
 49427                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 49428  00F694  0012               	return	
 49429  00F696                     i2l265:
 49430                           
 49431                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 49432  00F696  EE20 F001          	lfsr	2,1
 49433  00F69A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49434  00F69C  26D9               	addwf	fsr2l,f,c
 49435  00F69E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49436  00F6A0  22DA               	addwfc	fsr2h,f,c
 49437  00F6A2  0E08               	movlw	8
 49438  00F6A4  6EDF               	movwf	indf2,c
 49439                           
 49440                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49441  00F6A6  EE20 F002          	lfsr	2,2
 49442  00F6AA  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49443  00F6AC  26D9               	addwf	fsr2l,f,c
 49444  00F6AE  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49445  00F6B0  22DA               	addwfc	fsr2h,f,c
 49446  00F6B2  0E30               	movlw	48
 49447  00F6B4  6EDE               	movwf	postinc2,c
 49448  00F6B6  0E0D               	movlw	13
 49449  00F6B8  6EDD               	movwf	postdec2,c
 49450                           
 49451                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49452  00F6BA  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49453  00F6BE  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49454  00F6C2  0E04               	movlw	4
 49455  00F6C4  6EDF               	movwf	indf2,c
 49456                           
 49457                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49458  00F6C6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49459  00F6CA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49460  00F6CE  0E00               	movlw	0
 49461  00F6D0  8EDB               	bsf	plusw2,7,c
 49462                           
 49463                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 49464                           
 49465                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 49466  00F6D2  9E04               	bcf	_outPipes+3,7,c	;volatile
 49467                           
 49468                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 49469  00F6D4  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 49470  00F6D6  A4D8               	btfss	status,2,c
 49471  00F6D8  0012               	return	
 49472                           
 49473                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 49474  00F6DA  EC53  F086         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49475  00F6DE  0012               	return	
 49476  00F6E0                     __end_of_USBCtrlTrfRxService:
 49477                           	opt stack 0
 49478                           tosu	equ	0xFFF
 49479                           tosh	equ	0xFFE
 49480                           tosl	equ	0xFFD
 49481                           pclatu	equ	0xFFB
 49482                           pclath	equ	0xFFA
 49483                           tblptru	equ	0xFF8
 49484                           tblptrh	equ	0xFF7
 49485                           tblptrl	equ	0xFF6
 49486                           tablat	equ	0xFF5
 49487                           prodh	equ	0xFF4
 49488                           prodl	equ	0xFF3
 49489                           intcon	equ	0xFF2
 49490                           intcon2	equ	0xFF1
 49491                           intcon3	equ	0xFF0
 49492                           indf0	equ	0xFEF
 49493                           postinc0	equ	0xFEE
 49494                           fsr0h	equ	0xFEA
 49495                           fsr0l	equ	0xFE9
 49496                           wreg	equ	0xFE8
 49497                           indf1	equ	0xFE7
 49498                           postinc1	equ	0xFE6
 49499                           postdec1	equ	0xFE5
 49500                           plusw1	equ	0xFE3
 49501                           fsr1h	equ	0xFE2
 49502                           fsr1l	equ	0xFE1
 49503                           indf2	equ	0xFDF
 49504                           postinc2	equ	0xFDE
 49505                           postdec2	equ	0xFDD
 49506                           plusw2	equ	0xFDB
 49507                           fsr2h	equ	0xFDA
 49508                           fsr2l	equ	0xFD9
 49509                           status	equ	0xFD8
 49510                           
 49511 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 49512 ;; Defined at:
 49513 ;;		line 1418 in file "usb_device.c"
 49514 ;; Parameters:    Size  Location     Type
 49515 ;;		None
 49516 ;; Auto vars:     Size  Location     Type
 49517 ;;		None
 49518 ;; Return value:  Size  Location     Type
 49519 ;;                  1    wreg      void 
 49520 ;; Registers used:
 49521 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49522 ;; Tracked objects:
 49523 ;;		On entry : 0/0
 49524 ;;		On exit  : 0/0
 49525 ;;		Unchanged: 0/0
 49526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49531 ;;Total ram usage:        0 bytes
 49532 ;; Hardware stack levels used:    1
 49533 ;; This function calls:
 49534 ;;		Nothing
 49535 ;; This function is called by:
 49536 ;;		_USBDeviceTasks
 49537 ;;		_USBCtrlEPServiceComplete
 49538 ;;		_USBCtrlTrfRxService
 49539 ;; This function uses a non-reentrant model
 49540 ;;
 49541                           
 49542                           	psect	text249
 49543  010CA6                     __ptext249:
 49544                           	opt stack 0
 49545  010CA6                     _USBCtrlEPAllowStatusStage:
 49546                           	opt stack 13
 49547                           
 49548                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 49549                           
 49550                           ;incstack = 0
 49551  010CA6  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 49552  010CA8  A4D8               	btfss	status,2,c
 49553  010CAA  0012               	return	
 49554                           
 49555                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 49556  010CAC  0E01               	movlw	1
 49557  010CAE  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 49558                           
 49559                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 49560  010CB0  5021               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 49561  010CB2  A4D8               	btfss	status,2,c
 49562  010CB4  0012               	return	
 49563                           
 49564                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 49565  010CB6  0E01               	movlw	1
 49566  010CB8  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 49567                           
 49568                           ;usb_device.c: 1434: if(controlTransferState == 2)
 49569  010CBA  0E02               	movlw	2
 49570  010CBC  1829               	xorwf	_controlTransferState,w,c	;volatile
 49571  010CBE  A4D8               	btfss	status,2,c
 49572  010CC0  D015               	goto	i2l216
 49573                           
 49574                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 49575  010CC2  EE20 F001          	lfsr	2,1
 49576  010CC6  5010               	movf	_pBDTEntryIn,w,c
 49577  010CC8  26D9               	addwf	fsr2l,f,c
 49578  010CCA  5011               	movf	_pBDTEntryIn+1,w,c
 49579  010CCC  22DA               	addwfc	fsr2h,f,c
 49580  010CCE  0E00               	movlw	0
 49581  010CD0  6EDF               	movwf	indf2,c
 49582                           
 49583                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49584  010CD2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49585  010CD6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49586  010CDA  0E48               	movlw	72
 49587  010CDC  6EDF               	movwf	indf2,c
 49588                           
 49589                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49590  010CDE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49591  010CE2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49592  010CE6  0E00               	movlw	0
 49593  010CE8  8EDB               	bsf	plusw2,7,c
 49594                           
 49595                           ;usb_device.c: 1439: }
 49596  010CEA  0012               	return	
 49597  010CEC                     i2l216:
 49598                           
 49599                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 49600  010CEC  0429               	decf	_controlTransferState,w,c	;volatile
 49601  010CEE  A4D8               	btfss	status,2,c
 49602  010CF0  0012               	return	
 49603                           
 49604                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 49605  010CF2  0E00               	movlw	0
 49606  010CF4  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 49607                           
 49608                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 49609  010CF6  EE20 F001          	lfsr	2,1
 49610  010CFA  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 49611  010CFC  26D9               	addwf	fsr2l,f,c
 49612  010CFE  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 49613  010D00  22DA               	addwfc	fsr2h,f,c
 49614  010D02  0E08               	movlw	8
 49615  010D04  6EDF               	movwf	indf2,c
 49616                           
 49617                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 49618  010D06  EE20 F002          	lfsr	2,2
 49619  010D0A  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 49620  010D0C  26D9               	addwf	fsr2l,f,c
 49621  010D0E  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 49622  010D10  22DA               	addwfc	fsr2h,f,c
 49623  010D12  0E30               	movlw	48
 49624  010D14  6EDE               	movwf	postinc2,c
 49625  010D16  0E0D               	movlw	13
 49626  010D18  6EDD               	movwf	postdec2,c
 49627                           
 49628                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 49629  010D1A  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49630  010D1E  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49631  010D22  0E04               	movlw	4
 49632  010D24  6EDF               	movwf	indf2,c
 49633                           
 49634                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 49635  010D26  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49636  010D2A  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49637  010D2E  0E00               	movlw	0
 49638  010D30  8EDB               	bsf	plusw2,7,c
 49639                           
 49640                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 49641  010D32  0E01               	movlw	1
 49642  010D34  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 49643                           
 49644                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 49645  010D36  EE20 F001          	lfsr	2,1
 49646  010D3A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49647  010D3C  26D9               	addwf	fsr2l,f,c
 49648  010D3E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49649  010D40  22DA               	addwfc	fsr2h,f,c
 49650  010D42  0E08               	movlw	8
 49651  010D44  6EDF               	movwf	indf2,c
 49652                           
 49653                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49654  010D46  EE20 F002          	lfsr	2,2
 49655  010D4A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49656  010D4C  26D9               	addwf	fsr2l,f,c
 49657  010D4E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49658  010D50  22DA               	addwfc	fsr2h,f,c
 49659  010D52  0E30               	movlw	48
 49660  010D54  6EDE               	movwf	postinc2,c
 49661  010D56  0E0D               	movlw	13
 49662  010D58  6EDD               	movwf	postdec2,c
 49663                           
 49664                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 49665  010D5A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49666  010D5E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49667  010D62  0E80               	movlw	128
 49668  010D64  6EDF               	movwf	indf2,c
 49669  010D66  0012               	return	
 49670  010D68                     __end_of_USBCtrlEPAllowStatusStage:
 49671                           	opt stack 0
 49672                           tosu	equ	0xFFF
 49673                           tosh	equ	0xFFE
 49674                           tosl	equ	0xFFD
 49675                           pclatu	equ	0xFFB
 49676                           pclath	equ	0xFFA
 49677                           tblptru	equ	0xFF8
 49678                           tblptrh	equ	0xFF7
 49679                           tblptrl	equ	0xFF6
 49680                           tablat	equ	0xFF5
 49681                           prodh	equ	0xFF4
 49682                           prodl	equ	0xFF3
 49683                           intcon	equ	0xFF2
 49684                           intcon2	equ	0xFF1
 49685                           intcon3	equ	0xFF0
 49686                           indf0	equ	0xFEF
 49687                           postinc0	equ	0xFEE
 49688                           fsr0h	equ	0xFEA
 49689                           fsr0l	equ	0xFE9
 49690                           wreg	equ	0xFE8
 49691                           indf1	equ	0xFE7
 49692                           postinc1	equ	0xFE6
 49693                           postdec1	equ	0xFE5
 49694                           plusw1	equ	0xFE3
 49695                           fsr1h	equ	0xFE2
 49696                           fsr1l	equ	0xFE1
 49697                           indf2	equ	0xFDF
 49698                           postinc2	equ	0xFDE
 49699                           postdec2	equ	0xFDD
 49700                           plusw2	equ	0xFDB
 49701                           fsr2h	equ	0xFDA
 49702                           fsr2l	equ	0xFD9
 49703                           status	equ	0xFD8
 49704                           
 49705 ;; *************** function _USBCtrlTrfInHandler *****************
 49706 ;; Defined at:
 49707 ;;		line 2594 in file "usb_device.c"
 49708 ;; Parameters:    Size  Location     Type
 49709 ;;		None
 49710 ;; Auto vars:     Size  Location     Type
 49711 ;;  lastDTS         1    1[COMRAM] unsigned char 
 49712 ;; Return value:  Size  Location     Type
 49713 ;;                  1    wreg      void 
 49714 ;; Registers used:
 49715 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49716 ;; Tracked objects:
 49717 ;;		On entry : 0/0
 49718 ;;		On exit  : 0/0
 49719 ;;		Unchanged: 0/0
 49720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49725 ;;Total ram usage:        1 bytes
 49726 ;; Hardware stack levels used:    1
 49727 ;; Hardware stack levels required when called:    1
 49728 ;; This function calls:
 49729 ;;		_USBCtrlTrfTxService
 49730 ;; This function is called by:
 49731 ;;		_USBCtrlEPService
 49732 ;; This function uses a non-reentrant model
 49733 ;;
 49734                           
 49735                           	psect	text250
 49736  010E26                     __ptext250:
 49737                           	opt stack 0
 49738  010E26                     _USBCtrlTrfInHandler:
 49739                           	opt stack 14
 49740                           
 49741                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 49742                           
 49743                           ;incstack = 0
 49744  010E26  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49745  010E2A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49746  010E2E  0E00               	movlw	0
 49747  010E30  BCDF               	btfsc	indf2,6,c
 49748  010E32  0E01               	movlw	1
 49749  010E34  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 49750                           
 49751                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49752  010E36  0E04               	movlw	4
 49753  010E38  1810               	xorwf	_pBDTEntryIn,w,c
 49754  010E3A  6E10               	movwf	_pBDTEntryIn,c
 49755  010E3C  5011               	movf	_pBDTEntryIn+1,w,c
 49756  010E3E  6E11               	movwf	_pBDTEntryIn+1,c
 49757                           
 49758                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 49759  010E40  0E08               	movlw	8
 49760  010E42  182B               	xorwf	_USBDeviceState,w,c	;volatile
 49761  010E44  A4D8               	btfss	status,2,c
 49762  010E46  D00C               	goto	i2l343
 49763                           
 49764                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 49765  010E48  010D               	movlb	13	; () banked
 49766  010E4A  5132               	movf	50,w,b	;volatile
 49767  010E4C  0B7F               	andlw	127
 49768  010E4E  010F               	movlb	15	; () banked
 49769  010E50  6F38               	movwf	56,b	;volatile
 49770                           
 49771                           ; BSR set to: 15
 49772                           ;usb_device.c: 2609: if(UADDR != 0u)
 49773  010E52  5138               	movf	56,w,b	;volatile
 49774  010E54  B4D8               	btfsc	status,2,c
 49775  010E56  D002               	goto	i2l342
 49776                           
 49777                           ; BSR set to: 15
 49778                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 49779  010E58  0E10               	movlw	16
 49780  010E5A  D001               	goto	L68
 49781  010E5C                     i2l342:
 49782                           
 49783                           ; BSR set to: 15
 49784                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 49785                           
 49786                           ; BSR set to: 15
 49787  010E5C  0E04               	movlw	4
 49788  010E5E                     L68:
 49789  010E5E  6E2B               	movwf	_USBDeviceState,c	;volatile
 49790  010E60                     i2l343:
 49791                           
 49792                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 49793                           
 49794                           ; BSR set to: 15
 49795                           
 49796                           ; BSR set to: 15
 49797  010E60  0429               	decf	_controlTransferState,w,c	;volatile
 49798  010E62  A4D8               	btfss	status,2,c
 49799  010E64  D03A               	goto	i2l344
 49800                           
 49801                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 49802  010E66  EE20 F002          	lfsr	2,2
 49803  010E6A  5010               	movf	_pBDTEntryIn,w,c
 49804  010E6C  26D9               	addwf	fsr2l,f,c
 49805  010E6E  5011               	movf	_pBDTEntryIn+1,w,c
 49806  010E70  22DA               	addwfc	fsr2h,f,c
 49807  010E72  0E38               	movlw	56
 49808  010E74  6EDE               	movwf	postinc2,c
 49809  010E76  0E0D               	movlw	13
 49810  010E78  6EDD               	movwf	postdec2,c
 49811                           
 49812                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 49813  010E7A  EC5A  F084         	call	_USBCtrlTrfTxService	;wreg free
 49814                           
 49815                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 49816  010E7E  0E02               	movlw	2
 49817  010E80  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 49818  010E82  A4D8               	btfss	status,2,c
 49819  010E84  D00D               	goto	i2l345
 49820                           
 49821                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 49822  010E86  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49823  010E8A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49824  010E8E  0E04               	movlw	4
 49825  010E90  6EDF               	movwf	indf2,c
 49826                           
 49827                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49828  010E92  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49829  010E96  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49830  010E9A  0E00               	movlw	0
 49831  010E9C  8EDB               	bsf	plusw2,7,c
 49832                           
 49833                           ;usb_device.c: 2635: }
 49834  010E9E  0012               	return	
 49835  010EA0                     i2l345:
 49836                           
 49837                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 49838  010EA0  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 49839  010EA2  A4D8               	btfss	status,2,c
 49840  010EA4  D00D               	goto	i2l347
 49841                           
 49842                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 49843  010EA6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49844  010EAA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49845  010EAE  0E48               	movlw	72
 49846  010EB0  6EDF               	movwf	indf2,c
 49847                           
 49848                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49849  010EB2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49850  010EB6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49851  010EBA  0E00               	movlw	0
 49852  010EBC  8EDB               	bsf	plusw2,7,c
 49853                           
 49854                           ;usb_device.c: 2642: }
 49855  010EBE  0012               	return	
 49856  010EC0                     i2l347:
 49857                           
 49858                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 49859  010EC0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49860  010EC4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49861  010EC8  0E08               	movlw	8
 49862  010ECA  6EDF               	movwf	indf2,c
 49863                           
 49864                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49865  010ECC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49866  010ED0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49867  010ED4  0E00               	movlw	0
 49868  010ED6  8EDB               	bsf	plusw2,7,c
 49869                           
 49870                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 49871  010ED8  0012               	return	
 49872  010EDA                     i2l344:
 49873                           
 49874                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 49875  010EDA  BE04               	btfsc	_outPipes+3,7,c	;volatile
 49876                           
 49877                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 49878                           
 49879                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 49880  010EDC  9E04               	bcf	_outPipes+3,7,c	;volatile
 49881                           
 49882                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 49883  010EDE  0E00               	movlw	0
 49884  010EE0  6E29               	movwf	_controlTransferState,c	;volatile
 49885  010EE2  0012               	return	
 49886  010EE4                     __end_of_USBCtrlTrfInHandler:
 49887                           	opt stack 0
 49888                           tosu	equ	0xFFF
 49889                           tosh	equ	0xFFE
 49890                           tosl	equ	0xFFD
 49891                           pclatu	equ	0xFFB
 49892                           pclath	equ	0xFFA
 49893                           tblptru	equ	0xFF8
 49894                           tblptrh	equ	0xFF7
 49895                           tblptrl	equ	0xFF6
 49896                           tablat	equ	0xFF5
 49897                           prodh	equ	0xFF4
 49898                           prodl	equ	0xFF3
 49899                           intcon	equ	0xFF2
 49900                           intcon2	equ	0xFF1
 49901                           intcon3	equ	0xFF0
 49902                           indf0	equ	0xFEF
 49903                           postinc0	equ	0xFEE
 49904                           fsr0h	equ	0xFEA
 49905                           fsr0l	equ	0xFE9
 49906                           wreg	equ	0xFE8
 49907                           indf1	equ	0xFE7
 49908                           postinc1	equ	0xFE6
 49909                           postdec1	equ	0xFE5
 49910                           plusw1	equ	0xFE3
 49911                           fsr1h	equ	0xFE2
 49912                           fsr1l	equ	0xFE1
 49913                           indf2	equ	0xFDF
 49914                           postinc2	equ	0xFDE
 49915                           postdec2	equ	0xFDD
 49916                           plusw2	equ	0xFDB
 49917                           fsr2h	equ	0xFDA
 49918                           fsr2l	equ	0xFD9
 49919                           status	equ	0xFD8
 49920                           
 49921 ;; *************** function _USBCtrlTrfTxService *****************
 49922 ;; Defined at:
 49923 ;;		line 1773 in file "usb_device.c"
 49924 ;; Parameters:    Size  Location     Type
 49925 ;;		None
 49926 ;; Auto vars:     Size  Location     Type
 49927 ;;  byteToSend      1    0[COMRAM] unsigned char 
 49928 ;; Return value:  Size  Location     Type
 49929 ;;                  1    wreg      void 
 49930 ;; Registers used:
 49931 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 49932 ;; Tracked objects:
 49933 ;;		On entry : 0/0
 49934 ;;		On exit  : 0/0
 49935 ;;		Unchanged: 0/0
 49936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49941 ;;Total ram usage:        1 bytes
 49942 ;; Hardware stack levels used:    1
 49943 ;; This function calls:
 49944 ;;		Nothing
 49945 ;; This function is called by:
 49946 ;;		_USBCtrlEPAllowDataStage
 49947 ;;		_USBCtrlTrfInHandler
 49948 ;; This function uses a non-reentrant model
 49949 ;;
 49950                           
 49951                           	psect	text251
 49952  0108B4                     __ptext251:
 49953                           	opt stack 0
 49954  0108B4                     _USBCtrlTrfTxService:
 49955                           	opt stack 12
 49956                           
 49957                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 49958                           
 49959                           ;incstack = 0
 49960  0108B4  0E08               	movlw	8
 49961  0108B6  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 49962                           
 49963                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 49964  0108B8  500F               	movf	_inPipes+5,w,c	;volatile
 49965  0108BA  E110               	bnz	i2l11931
 49966  0108BC  0E08               	movlw	8
 49967  0108BE  5C0E               	subwf	_inPipes+4,w,c	;volatile
 49968  0108C0  B0D8               	btfsc	status,0,c
 49969  0108C2  D00C               	goto	i2l249
 49970                           
 49971                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 49972  0108C4  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 49973                           
 49974                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 49975  0108C8  502A               	movf	_shortPacketStatus,w,c	;volatile
 49976  0108CA  A4D8               	btfss	status,2,c
 49977  0108CC  D002               	goto	i2l247
 49978                           
 49979                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 49980  0108CE  0E01               	movlw	1
 49981  0108D0  D004               	goto	L69
 49982  0108D2                     i2l247:
 49983                           
 49984                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 49985  0108D2  042A               	decf	_shortPacketStatus,w,c	;volatile
 49986  0108D4  A4D8               	btfss	status,2,c
 49987  0108D6  D002               	goto	i2l249
 49988                           
 49989                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 49990  0108D8  0E02               	movlw	2
 49991  0108DA                     L69:
 49992  0108DA  6E2A               	movwf	_shortPacketStatus,c	;volatile
 49993  0108DC                     i2l249:
 49994  0108DC                     i2l11931:
 49995                           
 49996                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 49997  0108DC  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 49998  0108DE  5E0E               	subwf	_inPipes+4,f,c	;volatile
 49999  0108E0  0E00               	movlw	0
 50000  0108E2  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 50001                           
 50002                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 50003  0108E4  EE20 F001          	lfsr	2,1
 50004  0108E8  5010               	movf	_pBDTEntryIn,w,c
 50005  0108EA  26D9               	addwf	fsr2l,f,c
 50006  0108EC  5011               	movf	_pBDTEntryIn+1,w,c
 50007  0108EE  22DA               	addwfc	fsr2h,f,c
 50008  0108F0  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 50009                           
 50010                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 50011  0108F4  0E38               	movlw	56
 50012  0108F6  0101               	movlb	1	; () banked
 50013  0108F8  6FED               	movwf	_pDst& (0+255),b
 50014  0108FA  0E0D               	movlw	13
 50015  0108FC  6FEE               	movwf	(_pDst+1)& (0+255),b
 50016                           
 50017                           ; BSR set to: 1
 50018                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 50019  0108FE  A00D               	btfss	_inPipes+3,0,c	;volatile
 50020  010900  D01D               	goto	i2l251
 50021  010902  D03C               	goto	i2l255
 50022  010904                     
 50023                           ; BSR set to: 1
 50024                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 50025                           
 50026                           ; BSR set to: 1
 50027  010904  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 50028  010908  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50029  01090C  0E00               	movlw	low (__mediumconst shr (0+16))
 50030  01090E  6EF8               	movwf	tblptru,c
 50031  010910  C1ED  FFD9         	movff	_pDst,fsr2l
 50032  010914  C1EE  FFDA         	movff	_pDst+1,fsr2h
 50033  010918  0E0E               	movlw	(high __ramtop+-1)
 50034  01091A  64F7               	cpfsgt	tblptrh,c
 50035  01091C  D003               	bra	i2u912_47
 50036  01091E  0008               	tblrd		*
 50037  010920  50F5               	movf	tablat,w,c
 50038  010922  D005               	bra	i2u912_40
 50039  010924                     i2u912_47:
 50040  010924  CFF6 FFE9          	movff	tblptrl,fsr0l
 50041  010928  CFF7 FFEA          	movff	tblptrh,fsr0h
 50042  01092C  50EF               	movf	indf0,w,c
 50043  01092E                     i2u912_40:
 50044  01092E  6EDF               	movwf	indf2,c
 50045  010930  4A0A               	infsnz	_inPipes,f,c	;volatile
 50046  010932  2A0B               	incf	_inPipes+1,f,c	;volatile
 50047  010934  0101               	movlb	1	; () banked
 50048  010936  4BED               	infsnz	_pDst& (0+255),f,b
 50049  010938  2BEE               	incf	(_pDst+1)& (0+255),f,b
 50050                           
 50051                           ; BSR set to: 1
 50052                           ;usb_device.c: 1816: byteToSend--;
 50053  01093A  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 50054  01093C                     i2l251:
 50055                           
 50056                           ; BSR set to: 1
 50057                           
 50058                           ; BSR set to: 1
 50059  01093C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 50060  01093E  B4D8               	btfsc	status,2,c
 50061  010940  0012               	return	
 50062  010942  D7E0               	goto	i2l252
 50063  010944                     
 50064                           ; BSR set to: 1
 50065                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 50066                           
 50067                           ; BSR set to: 1
 50068  010944  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 50069  010948  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50070  01094C  0E00               	movlw	low (__mediumconst shr (0+16))
 50071  01094E  6EF8               	movwf	tblptru,c
 50072  010950  C1ED  FFD9         	movff	_pDst,fsr2l
 50073  010954  C1EE  FFDA         	movff	_pDst+1,fsr2h
 50074  010958  0E0E               	movlw	(high __ramtop+-1)
 50075  01095A  64F7               	cpfsgt	tblptrh,c
 50076  01095C  D003               	bra	i2u914_47
 50077  01095E  0008               	tblrd		*
 50078  010960  50F5               	movf	tablat,w,c
 50079  010962  D005               	bra	i2u914_40
 50080  010964                     i2u914_47:
 50081  010964  CFF6 FFE9          	movff	tblptrl,fsr0l
 50082  010968  CFF7 FFEA          	movff	tblptrh,fsr0h
 50083  01096C  50EF               	movf	indf0,w,c
 50084  01096E                     i2u914_40:
 50085  01096E  6EDF               	movwf	indf2,c
 50086  010970  4A0A               	infsnz	_inPipes,f,c	;volatile
 50087  010972  2A0B               	incf	_inPipes+1,f,c	;volatile
 50088  010974  0101               	movlb	1	; () banked
 50089  010976  4BED               	infsnz	_pDst& (0+255),f,b
 50090  010978  2BEE               	incf	(_pDst+1)& (0+255),f,b
 50091                           
 50092                           ; BSR set to: 1
 50093                           ;usb_device.c: 1824: byteToSend--;
 50094  01097A  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 50095  01097C                     i2l255:
 50096                           
 50097                           ; BSR set to: 1
 50098                           
 50099                           ; BSR set to: 1
 50100  01097C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 50101  01097E  B4D8               	btfsc	status,2,c
 50102  010980  0012               	return	
 50103  010982  D7E0               	goto	i2l256
 50104  010984                     __end_of_USBCtrlTrfTxService:
 50105                           	opt stack 0
 50106                           tosu	equ	0xFFF
 50107                           tosh	equ	0xFFE
 50108                           tosl	equ	0xFFD
 50109                           pclatu	equ	0xFFB
 50110                           pclath	equ	0xFFA
 50111                           tblptru	equ	0xFF8
 50112                           tblptrh	equ	0xFF7
 50113                           tblptrl	equ	0xFF6
 50114                           tablat	equ	0xFF5
 50115                           prodh	equ	0xFF4
 50116                           prodl	equ	0xFF3
 50117                           intcon	equ	0xFF2
 50118                           intcon2	equ	0xFF1
 50119                           intcon3	equ	0xFF0
 50120                           indf0	equ	0xFEF
 50121                           postinc0	equ	0xFEE
 50122                           fsr0h	equ	0xFEA
 50123                           fsr0l	equ	0xFE9
 50124                           wreg	equ	0xFE8
 50125                           indf1	equ	0xFE7
 50126                           postinc1	equ	0xFE6
 50127                           postdec1	equ	0xFE5
 50128                           plusw1	equ	0xFE3
 50129                           fsr1h	equ	0xFE2
 50130                           fsr1l	equ	0xFE1
 50131                           indf2	equ	0xFDF
 50132                           postinc2	equ	0xFDE
 50133                           postdec2	equ	0xFDD
 50134                           plusw2	equ	0xFDB
 50135                           fsr2h	equ	0xFDA
 50136                           fsr2l	equ	0xFD9
 50137                           status	equ	0xFD8
 50138                           tosu	equ	0xFFF
 50139                           tosh	equ	0xFFE
 50140                           tosl	equ	0xFFD
 50141                           pclatu	equ	0xFFB
 50142                           pclath	equ	0xFFA
 50143                           tblptru	equ	0xFF8
 50144                           tblptrh	equ	0xFF7
 50145                           tblptrl	equ	0xFF6
 50146                           tablat	equ	0xFF5
 50147                           prodh	equ	0xFF4
 50148                           prodl	equ	0xFF3
 50149                           intcon	equ	0xFF2
 50150                           intcon2	equ	0xFF1
 50151                           intcon3	equ	0xFF0
 50152                           indf0	equ	0xFEF
 50153                           postinc0	equ	0xFEE
 50154                           fsr0h	equ	0xFEA
 50155                           fsr0l	equ	0xFE9
 50156                           wreg	equ	0xFE8
 50157                           indf1	equ	0xFE7
 50158                           postinc1	equ	0xFE6
 50159                           postdec1	equ	0xFE5
 50160                           plusw1	equ	0xFE3
 50161                           fsr1h	equ	0xFE2
 50162                           fsr1l	equ	0xFE1
 50163                           indf2	equ	0xFDF
 50164                           postinc2	equ	0xFDE
 50165                           postdec2	equ	0xFDD
 50166                           plusw2	equ	0xFDB
 50167                           fsr2h	equ	0xFDA
 50168                           fsr2l	equ	0xFD9
 50169                           status	equ	0xFD8
 50170                           
 50171                           	psect	text252
 50172  000000                     __ptext252:
 50173                           	opt stack 0
 50174                           tosu	equ	0xFFF
 50175                           tosh	equ	0xFFE
 50176                           tosl	equ	0xFFD
 50177                           pclatu	equ	0xFFB
 50178                           pclath	equ	0xFFA
 50179                           tblptru	equ	0xFF8
 50180                           tblptrh	equ	0xFF7
 50181                           tblptrl	equ	0xFF6
 50182                           tablat	equ	0xFF5
 50183                           prodh	equ	0xFF4
 50184                           prodl	equ	0xFF3
 50185                           intcon	equ	0xFF2
 50186                           intcon2	equ	0xFF1
 50187                           intcon3	equ	0xFF0
 50188                           indf0	equ	0xFEF
 50189                           postinc0	equ	0xFEE
 50190                           fsr0h	equ	0xFEA
 50191                           fsr0l	equ	0xFE9
 50192                           wreg	equ	0xFE8
 50193                           indf1	equ	0xFE7
 50194                           postinc1	equ	0xFE6
 50195                           postdec1	equ	0xFE5
 50196                           plusw1	equ	0xFE3
 50197                           fsr1h	equ	0xFE2
 50198                           fsr1l	equ	0xFE1
 50199                           indf2	equ	0xFDF
 50200                           postinc2	equ	0xFDE
 50201                           postdec2	equ	0xFDD
 50202                           plusw2	equ	0xFDB
 50203                           fsr2h	equ	0xFDA
 50204                           fsr2l	equ	0xFD9
 50205                           status	equ	0xFD8
 50206                           
 50207                           	psect	rparam
 50208  0000                     tosu	equ	0xFFF
 50209                           tosh	equ	0xFFE
 50210                           tosl	equ	0xFFD
 50211                           pclatu	equ	0xFFB
 50212                           pclath	equ	0xFFA
 50213                           tblptru	equ	0xFF8
 50214                           tblptrh	equ	0xFF7
 50215                           tblptrl	equ	0xFF6
 50216                           tablat	equ	0xFF5
 50217                           prodh	equ	0xFF4
 50218                           prodl	equ	0xFF3
 50219                           intcon	equ	0xFF2
 50220                           intcon2	equ	0xFF1
 50221                           intcon3	equ	0xFF0
 50222                           indf0	equ	0xFEF
 50223                           postinc0	equ	0xFEE
 50224                           fsr0h	equ	0xFEA
 50225                           fsr0l	equ	0xFE9
 50226                           wreg	equ	0xFE8
 50227                           indf1	equ	0xFE7
 50228                           postinc1	equ	0xFE6
 50229                           postdec1	equ	0xFE5
 50230                           plusw1	equ	0xFE3
 50231                           fsr1h	equ	0xFE2
 50232                           fsr1l	equ	0xFE1
 50233                           indf2	equ	0xFDF
 50234                           postinc2	equ	0xFDE
 50235                           postdec2	equ	0xFDD
 50236                           plusw2	equ	0xFDB
 50237                           fsr2h	equ	0xFDA
 50238                           fsr2l	equ	0xFD9
 50239                           status	equ	0xFD8
 50240                           
 50241                           	psect	temp
 50242  00005B                     btemp:
 50243                           	opt stack 0
 50244  00005B                     	ds	1
 50245  0000                     int$flags	set	btemp
 50246  0000                     wtemp8	set	btemp+1
 50247  0000                     ttemp5	set	btemp+1
 50248  0000                     ttemp6	set	btemp+4
 50249  0000                     ttemp7	set	btemp+8
 50250                           tosu	equ	0xFFF
 50251                           tosh	equ	0xFFE
 50252                           tosl	equ	0xFFD
 50253                           pclatu	equ	0xFFB
 50254                           pclath	equ	0xFFA
 50255                           tblptru	equ	0xFF8
 50256                           tblptrh	equ	0xFF7
 50257                           tblptrl	equ	0xFF6
 50258                           tablat	equ	0xFF5
 50259                           prodh	equ	0xFF4
 50260                           prodl	equ	0xFF3
 50261                           intcon	equ	0xFF2
 50262                           intcon2	equ	0xFF1
 50263                           intcon3	equ	0xFF0
 50264                           indf0	equ	0xFEF
 50265                           postinc0	equ	0xFEE
 50266                           fsr0h	equ	0xFEA
 50267                           fsr0l	equ	0xFE9
 50268                           wreg	equ	0xFE8
 50269                           indf1	equ	0xFE7
 50270                           postinc1	equ	0xFE6
 50271                           postdec1	equ	0xFE5
 50272                           plusw1	equ	0xFE3
 50273                           fsr1h	equ	0xFE2
 50274                           fsr1l	equ	0xFE1
 50275                           indf2	equ	0xFDF
 50276                           postinc2	equ	0xFDE
 50277                           postdec2	equ	0xFDD
 50278                           plusw2	equ	0xFDB
 50279                           fsr2h	equ	0xFDA
 50280                           fsr2l	equ	0xFD9
 50281                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        192
    BSS         1114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    119     136
    BANK1           256    211     256
    BANK2           256      0     248
    BANK3           256      0     255
    BANK4           256      0     184
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2275$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2275$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(BANK0[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> extension(BANK2[4]), filename(BANK2[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    log_generate_entry@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@byte_array	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), _flash_get_status@status(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), i2c_digipot_reset_on@data_array(BANK0[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(BANK0[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2732	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2698	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2697	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2644	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2643	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2275$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2275$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2275$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2275$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2275$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2275$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2275$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2275$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2275$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2275$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2275$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S145$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S135$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S135$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S111$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S111$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S111$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S111$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_rtcc_write_eeprom
    _rtcc_correct_day->__number_of_days
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_write_to_disk->_fat_append_to_file
    _log_write_to_disk->_fat_create_file
    _log_generate_entry->__get_dateTime
    __get_temperature->___aldiv
    __get_dateTime->_rtcc_get_day_decimal
    __get_dateTime->_rtcc_get_hours_decimal
    __get_dateTime->_rtcc_get_minutes_decimal
    __get_dateTime->_rtcc_get_month_decimal
    __get_dateTime->_rtcc_get_seconds_decimal
    __get_dateTime->_rtcc_get_year_decimal
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    _fat_append_to_file->__get_empty_cluster
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_minutes_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bcd_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_month_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_day_decimal->__rtcc_bcd_to_decimal
    __root_is_available->_flash_partial_read
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _log_collect_data->__get_input_power
    _rtcc_get_seconds_decimal->__rtcc_bcd_to_decimal
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___altoft->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_buck_remote_change_dutycycle
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  572647
                                            117 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
          _log_get_number_of_samples
                      _log_start_new
                  _log_write_to_disk
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   33097
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    3026
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   20851
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     248
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   28856
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0   12610
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     8     8      0   12610
                                             43 BANK0      8     8      0
                   __rtcc_verify_bcd
                    _i2c_eeprom_read
                   _rtcc_correct_day
                       _rtcc_get_day
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     393
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     263
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) __rtcc_verify_bcd                                     4     2      2    1589
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     164
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      93
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    7244
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4827
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     670
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1758
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    8730
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    8730
                                             19 BANK0      5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_write_to_disk                                   33    33      0  238101
                                              0 BANK1     33    33      0
                 _fat_append_to_file
                    _fat_create_file
                      _fat_find_file
                 _log_generate_entry
 ---------------------------------------------------------------------------------
 (2) _log_generate_entry                                   4     2      2    7583
                                             24 BANK0      4     2      2
                            ___aldiv
                            ___lldiv
                      __get_checksum
                      __get_dateTime
                   __get_temperature
 ---------------------------------------------------------------------------------
 (3) __get_temperature                                     2     0      2    1033
                                             14 BANK0      2     0      2
                            ___aldiv (ARG)
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) __get_dateTime                                       20    16      4    1237
                                              4 BANK0     20    16      4
               _rtcc_get_day_decimal
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
             _rtcc_get_month_decimal
           _rtcc_get_seconds_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (3) __get_checksum                                        6     4      2     305
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _fat_create_file                                     53    45      8   99441
                                             59 BANK0     53    45      8
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _fat_get_empty_clusters                              12    10      2    9351
                                             39 BANK0     12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) _fat_find_file                                       20    16      4   10541
                                             39 BANK0     20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     816
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __get_available_root_entry                            1     1      0    9238
                                             46 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (2) _fat_append_to_file                                  63    59      4  120277
                                             49 BANK0     63    59      4
                 __get_empty_cluster
                          __read_fat
                         __read_root
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_root                                          8     6      2   26532
                                             40 BANK0      8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_fat                                           8     4      4   27263
                                             40 BANK0      8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _flash_partial_write                                  9     1      8   26056
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_copy_page_to_buffer                          10     7      3    4884
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __update_modified_time                                2     0      2    1434
                                             13 BANK0      2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (3) __get_time                                            9     7      2     634
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (3) __get_date                                            9     7      2     634
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year_decimal                                1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day_decimal                                 1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (3) __sector_from_cluster                                 2     0      2     239
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    9108
                                             39 BANK0      7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_root                                           8     6      2    9327
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_fat                                            8     6      2    9465
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __get_empty_cluster                                  10     8      2    9491
                                             39 BANK0     10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (1) _log_get_number_of_samples                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0   11180
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) __rtcc_bcd_to_decimal                                 3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    5605
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    5185
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    4460
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    4426
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3960
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     164
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    4794
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3    1086
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3708
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   50058
                                            114 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     677
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    2801
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    8825
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     711
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    8825
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 66    66      0   18599
                                             48 BANK0     66    66      0
                            ___aldiv
                           ___altoft
                            ___fttol
                             ___lmul
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     475
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3987
                                             14 BANK0     10     6      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3679
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1901
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    9329
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8145
                                             24 BANK0     24    19      5
                            ___fttol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     234
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2394
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   18856
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    7721
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0   11135
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    4094
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     808
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     195
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2460
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2321
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    4044
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    3216
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  138850
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  138850
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  131246
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   66528
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   64480
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   28752
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   18274
                                             36 BANK0     11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (7) _flash_page_write                                     5     1      4   17839
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4654
                                             19 BANK0     11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5092
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    6302
                                             19 BANK0     12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   19726
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    9479
                                             43 BANK0     10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (7) _flash_page_read                                      4     0      4    9121
                                             39 BANK0      4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _flash_partial_read                                  20    12      8    8851
                                             19 BANK0     20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2824
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1176
                                             12 BANK0      5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8    1080
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   21280
                                             44 BANK0     11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    4355
                                             43 BANK0      1     1      0
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    4200
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3978
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2896
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     851
                                              3 BANK0      2     1      1
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_synchronous                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_on                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_enable                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_dutycycle                            1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_change_dutycycle                         3     3      0     127
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     896
                                              3 BANK0      8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              4     4      0      43
                                              1 BANK0      4     4      0
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_status                               1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    4159
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    5417
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58167
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (14) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _buck_get_dutycycle
       _buck_get_mode
       _buck_remote_get_dutycycle
       _buck_remote_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _buck_remote_change_dutycycle
       _buck_remote_set_dutycycle
       _buck_remote_set_enable
       _buck_remote_set_on
       _buck_remote_set_synchronous
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___altoft
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___fttol
       ___lmul
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_temperature
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _log_get_number_of_samples
   _log_start_new
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
   _log_write_to_disk
     _fat_append_to_file
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_fat
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_root
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __root_is_available
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __sector_from_cluster
       __update_modified_time
         __get_date
           _rtcc_get_day_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_day
           _rtcc_get_month_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_month
           _rtcc_get_year_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_year
         __get_time
           _rtcc_get_hours_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_hours
           _rtcc_get_minutes_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_minutes
           _rtcc_get_seconds_decimal
             __rtcc_bcd_to_decimal
             _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _flash_partial_write
         __flash_compare_page_to_buffer
           __flash_get_status
             __flash_spi_tx_rx
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_copy_page_to_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_page_from_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_to_buffer
           __flash_spi_tx_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
     _fat_create_file
       __get_available_root_entry
         __root_is_available
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       __get_date
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __get_time
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_empty_clusters
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _memcpy
     _fat_find_file
       _flash_partial_read
         __flash_spi_tx_rx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
       _strncmp
     _log_generate_entry
       ___aldiv
       ___lldiv
       __get_checksum
       __get_dateTime
         _rtcc_get_day_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_day
         _rtcc_get_hours_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_minutes
         _rtcc_get_month_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_month
         _rtcc_get_seconds_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_seconds
         _rtcc_get_year_decimal
           __rtcc_bcd_to_decimal
           _rtcc_get_year
       __get_temperature
         ___aldiv (ARG)
         ___awdiv (ARG)
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bcd_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         __rtcc_verify_bcd
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_correct_day
           __number_of_days
             _rtcc_get_month
             _rtcc_get_year
           _rtcc_get_day
           _rtcc_set_day
             __rtcc_write_disable
             __rtcc_write_enable
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_write_eeprom
           _i2c_eeprom_write
             __i2c_write
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
             _i2c_set_frequency
           _rtcc_get_day
           _rtcc_get_hours
           _rtcc_get_minutes
           _rtcc_get_month
           _rtcc_get_seconds
           _rtcc_get_year
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable
     _ui_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B8      13       71.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D3     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     491      31        0.0%
DATA                 0      0     691       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Sep 15 23:11:25 2018

                rtcc_get_year_decimal@bcd_year 0063                                   ___altoft@exp 0076  
                                   _USB_SD_Ptr A307                       fat_create_file@extension 009D  
       __end_of_i2c_display_send_init_sequence 3664        __size_of_i2c_display_send_init_sequence 002E  
               _i2c_display_send_init_sequence 3636                            __system_timer0_init 3292  
                      rtcc_set_minutes@minutes 0060                                  ___altoft@sign 0077  
                                 ___awdiv@sign 0065                               ??__buck_pin_init 0060  
                                           _os 0200                                  _USBDeviceInit E65E  
                           _USBCheckHIDRequest 07E4                       __display_time@setminutes 018E  
                     __display_time@setseconds 019A                             _rtcc_increment_day 390C  
                                 __CFG_CP0$OFF 000000                 __root_is_available@root_sector 0088  
                          __end_of_system_init FAFA                       ?_i2c_display_write_fixed 0065  
         USER_USB_CALLBACK_EVENT_HANDLER@event 003D           USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                  __display_efficiency@battery 00CD                              ?__rtcc_verify_bcd 0060  
                                          l151 E70A                                            l208 359C  
                                          l209 359A                                            l147 E6A8  
                                          l149 E6D0                    __end_of_USBStdGetDscHandler EF16  
                                          l190 F8AC                                  ?_i2c_adc_read 0065  
                                          l186 F804                                            l194 F742  
                                          l188 F82E                                            l700 E10A  
                                          l612 ED34                                            l710 CB38  
                                          l630 25BA                                            l606 D49A  
                                          l623 25C2                                            l704 CD40  
                                          l712 CB62                                            l640 AF46  
                                          l624 2586                                            l616 EDE0  
                                          l713 CBAA                                            l705 CA8C  
                                          l641 AF50                                            l617 EDDA  
                                          l609 D4A2                                            l730 FD0C  
                                          l722 CCF6                                            l714 CB86  
                                          l634 B2A4                                            l650 B0FE  
                                          l626 25A2                                            l707 CD62  
                                          l723 CD0E                                            l715 CBF0  
                                          l643 AFA2                                            l635 AF26  
                                          l619 EDE4                                            l732 FD20  
                                          l724 CD28                                            l716 CBEC  
                                          l708 CB32                                            l660 B1C8  
                                          l644 B064                                            l628 25AE  
                                          l741 FDC4                                            l653 B132  
                                          l645 B06E                                            l629 25B4  
                                          l581 D3D2                                            l901 C4A0  
                                          l742 FDAE                                            l718 CC06  
                                          l670 B24C                                            l654 B160  
                                          l646 B090                                            l638 AF36  
                                          l574 D4BA                                            l582 D3B8  
                                          l590 D4D8                                            l910 C580  
                                          l902 C4C8                                            l735 FD5C  
                                          l719 CC86                                            l671 B260  
                                          l591 D3F2                                            l583 D38C  
                                          l575 D288                                            l903 C716  
                                          l664 B204                                            l656 B194  
                                          l648 B0BE                                            l584 D394  
                                          l912 C586                                            l904 C514  
                                          l681 1000                                            l761 F3D4  
                                          l753 FDD6                                            l665 B218  
                                          l593 D3FE                                            l905 C77A  
                                          l921 C60E                                            l770 F40A  
                                          l738 FD68                                            l674 B29C  
                                          l666 B236                                            l658 B1B0  
                                          l586 D3AC                                            l906 C526  
                                          l771 F418                                            l739 FD90  
                                          l691 DFD8                                            l595 D420  
                                          l579 D2AA                                            l931 C6FE  
                                          l907 C52C                                            l772 F42C  
                                          l692 DFEE                                            l668 B262  
                                          l596 D424                                            l932 C706  
                                          l916 C5C8                                            l908 C56C  
                                          _BDT 000D00                                            l773 F43A  
                                          l757 FDE6                                            l685 E124  
                                          l669 B23C                                            l597 D448  
                                          l774 F44E                                            l694 E03C  
                                          l686 DF6A                                            l950 29F2  
                                          l679 0FEA                                            l767 F498  
                                          l775 F48A                                            l695 E062  
                                          l927 C662                                            l768 F402  
                                          l688 E148                                            l696 E090  
                                          l952 29FE                                            l928 C668  
                                          l697 E0A2                                            l689 DFC0  
                                          l929 C6EE                                            l698 E0A8  
                __size_of__sector_from_cluster 0010                                            l699 E0BE  
                                          l956 2A10                       __display_time@presshours 014E  
                                          l949 2A2E                                            l958 2A1C  
                                          l899 C47A                                            _LBA 01D9  
                    _buck_remote_get_dutycycle 3ED8                                            _PR2 000FCB  
                     __display_time@pressmonth 013C                                            _LUN 02BB  
                                          _UIE 000F36                                            _UIR 000F62  
                         _i2c_digipot_reset_on 389A                  __size_of_rtcc_decrement_hours 0022  
           system_calculate_output_voltage@tmp 0070                     __end_of_buck_get_dutycycle 3EE4  
                     ??_rtcc_increment_minutes 0068                  __size_of_rtcc_decrement_month 0022  
                     ??_rtcc_increment_seconds 0068                                            _idx 00E0  
                                   _USBSuspend 3606                                            _now 029E  
                       __end_of_display_update 1F1A                           USBStdSetCfgHandler@i 0045  
                       i2c_eeprom_read@address 0071                             ??__rtcc_verify_bcd 0062  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                 _USBDeviceTasks E8EE  
                          ?_USBCheckHIDRequest 002E                                   __CFG_IESO$ON 000000  
                          ?_rtcc_increment_day 002E                                 _USBDeviceState 002B  
                             _rtcc_read_eeprom EB76                                   ?__write_root 0088  
                          _rtcc_increment_year 39A0                        rtcc_set_seconds@seconds 0060  
                        ??_USBCtrlTrfRxService 002E                           __read_fat@fat_sector 0089  
                     __size_ofi2_USBDeviceInit 0144                       USBEnableEndpoint@options 0036  
                      __buck_initial_dutycycle 0EE4                              ??_MSDErrorHandler 0068  
                         ?__system_timer0_init 002E                       fat_create_file@root_slot 00AB  
                  __flash_write_to_buffer@data 0075                                           l1111 C0CC  
                                         l1103 BF14                                           l1112 BFDC  
                                         l1113 C102                                           l1105 BF32  
                                         l1130 2EFC                                           l1114 BFF8  
                                         l2010 A692                                           l1123 2F4C  
                                         l1115 C030                                           l2011 A66C  
                                         l1132 2F08                                           l1116 C0C6  
                                         l2100 DA94                                           l1125 2F58  
                                         l2101 DA6E                                           l2013 A9FA  
                                         l2005 A9CE                                           l2021 A730  
                                         l1150 02DC                                           l1070 BDCC  
                                         l2110 DB5E                                           l2030 A7BC  
                                         l2022 A75C                                           l2014 A6AA  
                                         l2006 A624                                           l1143 032C  
                                         l1151 02E4                                           l2111 DB2E  
                                         l2103 DAD6                                           l2023 A736  
                                         l2015 A6D6                                           l2007 A650  
                                         l1160 0326                                           l1152 02EC  
                                         l1144 02B4                                           l2104 DAB0  
                                         l2200 E22E                                           l2040 A884  
                                         l2032 A824                                           l2016 A6B0  
                                         l2008 A62A                                           l1153 02F4  
                                         l1081 BFD6                                           l1233 3D60  
                                         l2113 DB3A                                           l2201 E208  
                                         l2033 A7FE                                           l2025 A79E  
                                         l1401 3902                                           l1170 01F0  
                                         l1410 2F9E                                           l1154 02FC  
                                         l1146 02BC                                           l1090 BE84  
                                         l1082 BE1C                                           l2114 DB46  
                                         l2106 DAFC                                           l2050 A974  
                                         l2042 A8C2                                           l2026 A778  
                                         l2018 A718                                           l3002 0AAC  
                                         l1171 01FA                                           l1411 2FA4  
                                         l1155 0304                                           l1147 02C4  
                                         l2115 DB52                                           l2107 DB0C  
                                         l2203 E28A                                           l2051 A94E  
                                         l2043 A8EE                                           l2035 A83C  
                                         l2019 A6F2                                           l1164 024E  
                                         l1180 0244                                           l1172 0204  
                                         l1420 2BC2                                           l1412 2FAA  
                                         l1156 030C                                           l1148 02CC  
                                         l1076 BFA2                                           l2108 DB1C  
                                         l2204 E264                                           l2044 A8C8  
                                         l2036 A868                                           l2028 A7B6  
                                         l3020 E480                                           l1173 020C  
                                         l1165 01C8                                           l1421 2BC6  
                                         l1157 0314                                           l1149 02D4  
                                         l1077 BDE8                                           l2053 A9B6  
                                         l2037 A842                                           l2029 A7E2  
                                         l3021 E4B6                                           l1174 0214  
                                         l1510 3EBE                                           l1422 2BCA  
                                         l1406 2FAE                                           l1158 031A  
                                         l1094 BEB8                                           l1086 BE50  
                                         l2150 CA4E                                           l2206 E2E6  
                                         l2054 A990                                           l2046 A930  
                                         l3014 E334                                           l1191 EFD0  
                                         l1175 021C                                           l1167 01D2  
                                         l1407 2F92                                           l1159 0320  
                                         l2143 C8F0                                           l2207 E2C0  
                                         l2047 A90A                                           l2039 A8AA  
                                         l2071 E5C0                                           l1192 EFD8  
                                         l1184 EFA8                                           l1176 0224  
                                         l1168 01DC                                           l1416 2BCE  
                                         l2152 C974                                           l2144 C8C8  
                                         l2080 E620                                           l2072 E59A  
                                         l1504 3E96                                           l3008 0B04  
                                         l3016 E346                                           l1440 F060  
                                         l2400 EC50                                           l1193 EFE0  
                                         l1185 EF2A                                           l1177 022C  
                                         l1169 01E6                                           l1417 2BBA  
                                         l1409 2F98                                           l4001 35F2  
                                         l2161 C9F4                                           l2153 C94E  
                                         l2137 C8AC                                           l2049 A948  
                                         l3041 D7B4                                           l3017 E394  
                                         l1433 F184                                           l2401 EC7A  
                                         l1194 EFE8                                           l2250 3D1E  
                                         l1178 0234                                           l1418 2BF0  
                                         l1098 BEEC                                           l4002 35E0  
                                         l2162 C9CE                                           l2138 C886  
                                         l1522 3E8E                                           l3042 D78E  
                                         l3018 E4BC                                           l2402 ECA4  
                                         l2307 3E2A                                           l1195 EFF0  
                                         l1187 EF56                                           l2243 3D14  
                                         l1179 023C                                           l1419 2BBE  
                                         l1099 BEF0                                           l2155 CA6A  
                                         l2075 E608                                           l2067 E56A  
                                         l3019 E45E                                           l1188 F000  
                                         l1196 EFF8                                           l2244 3D08  
                                         l1540 2174                                           l2148 C90A  
                                         l2180 C382                                           l2076 E5E2  
                                         l2068 E544                                           l1516 3EA2  
                                         l3300 CF9A                                           l3044 D90C  
                                         l2260 36A4                                           l2325 3E54  
                                         l1189 EFC8                                           l1533 21BA  
                                         l1541 2178                                           l2501 0C5C  
                                         l2165 CA34                                           l2157 C9B4  
                                         l2181 C35C                                           l2093 D9FC  
                                         l3301 CFAA                                           l3045 D82C  
                                         l4013 1C92                                           l1373 32B2  
                                         l1534 216C                                           l2166 CA0E  
                                         l2158 C98E                                           l2094 D9D6  
                                         l3302 CFBA                                           l3046 D884  
                                         l3038 D746                                           l4014 1C30  
                                         l1374 32A0                                           l1630 F3A0  
                                         l2270 244C                                           l2262 36BC  
                                         l2343 3E46                                           l1551 2E86  
                                         l1543 21A2                                           l1535 21D0  
                                         l1615 1C0A                                           l4007 3320  
                                         l2183 C3F8                                           l2079 E646  
                                         l3303 CFCA                                           l3047 D8CA  
                                         l4015 1C88                                           l1375 32C2  
                                         l1631 F342                                           l2271 2450  
                                         l1391 FACA                                           l2255 3676  
                                         l1552 2E68                                           l1544 2194  
                                         l1616 1BDA                                           l2512 20E4  
                                         l2520 20B6                                           l2504 0C7E  
                                         l4008 331A                                           l2184 C3D2  
                                         l3304 CFDA                                           l1376 32A8  
                                         l1640 B680                                           l1632 F34A  
                                         l1624 F296                                           l2361 3E38  
                                         l2249 3D2A                                           l1537 217C  
                                         l2521 20C0                                           l2513 2088  
                                         l2177 C340                                           l2097 DA50  
                                         l3305 CFEA                                           l1641 B2F0  
                                         l1633 F352                                           l2265 2420  
                                         l2257 368E                                           l1801 B8AE  
                                         l1546 2198                                           l1538 2170  
                                         l2506 0C9A                                           l2530 37A8  
                                         l2610 287A                                           l2602 2870  
                                         l2178 C31A                                           l2098 DA2A  
                                         l3306 CFFA                                           l1634 F35A  
                                         l1626 F31E                                           l2274 3112  
                                         l1810 B912                                           l1802 B8BA  
                                         l1547 219C                                           l2515 2094  
                                         l2603 286A                                           l3315 2066  
                                         l1643 B374                                           l1635 F362  
                                         l1803 B8C4                                           l1660 2EBE  
                                         l2620 3BA4                                           l2524 20D0  
                                         l2532 37C4                                           l2604 284E  
                                         l1652 1568                                           l1396 3BF8  
                                         l1644 B3F6                                           l1628 F372  
                                         l1636 F36A                                           l2276 3124  
                                         l1820 B962                                           l1804 B8DA  
                   USBConfigureEndpoint@handle 0034                                           l1661 2E9E  
                                         l2517 20A6                                           l2541 AB10  
                                         l2605 2834                                           l2197 E1EC  
                                         l1645 B478                                           l1557 14E6  
                                         l1629 F33A                                           l2277 3130  
                                         l1821 B96C                                           l1813 B91E  
                                         l2630 3CE8                                           l2550 ABE0  
                                         l2606 2862                                           l2198 E1C6  
                                         l1646 B4FA                                           l1558 14C8  
                                         l2278 313C                                           l1822 B97A  
                                         l1814 B92A                                           l1495 3EC6  
                                         l3351 1A06                                           l2607 2838  
                                         l1647 B57C                                           l1831 B9B0  
                                         l1815 B934                                           l1807 B8E6  
                                         l1751 B6D6                                           l3328 2B0C  
                                         l3352 1A14                                           l2480 232A  
                                         l2560 AD8E                                           l2552 AC16  
                                         l2544 AB44                                           l2608 2842  
                                         l1920 DCE6                                           l1672 2130  
                                         l1680 2120                                           l3280 341C  
                                         l1648 B5FE                                           l1744 B9D8  
                                         l1832 B9BE                                           l1824 B982  
                                         l1816 B94A                                           l1808 B8F2  
                                         l1760 B72A                                           l1752 B6E4  
                                         l2289 3E0E                                           l2625 3D00  
                                         l3329 2B20                                           l2537 AF08  
                                         l1913 DC5A                                           l3417 1F4A  
                                         l1585 29DE                                           l1681 2128  
                                         l1809 B8FC                                           l1761 B734  
                                         l1745 B6B2                                           l2642 30DE  
                                         l2474 0F04                                           l2570 AF02  
                                         l2562 AD98                                           l2546 AB66  
                                         l2538 AAA8                                           l1930 DD48  
                                         l1906 302A                                           l3418 1F3E  
                                         l1586 29C0                                           l1834 B9C6  
                                         l1826 B98E                                           l1770 B78C  
                                         l1762 B744                                           l1754 B6EC  
                                         l1746 B6C2                                           l2651 3896  
                                         l2379 3E1C                                           l2635 398E  
                                         l2803 1DC0                                           l3347 19D2  
                                         l1923 DCCA                                           l1667 3752  
                                         l1675 20F8                                           l1827 B99C  
                                         l1819 B956                                           l1771 B796  
                                         l1755 B6F6                                           l1843 0198  
                                         l1851 0134                                           l2644 30F4  
                                         l2804 1DCA                                           l3348 19C6  
                                         l2476 0F7A                                           l2484 2344  
                                         l2564 ADC4                                           l2556 AC58  
                                         l2548 ABB4                                           l2492 24C8  
                                         l1924 DCDE                                           l1908 3036  
                                         l3700 FEC0                                           l1940 1B4A  
                                         l1676 2100                                           l3540 1826  
                                         l2396 EBB8                                           l1836 B9D2  
                                         l1780 B7E8                                           l1772 B7A6  
                                         l1764 B74C                                           l1756 B700  
                                         l1748 B6CA                                           l1852 0152  
                                         l1844 00D8                                           l2637 399A  
                                         l2477 0F9A                                           l2581 FC44  
                                         l1925 DD3E                                           l1917 DC32  
                                         l3701 FEB4                                           l1941 1B54  
                                         l1677 2108                                           l3541 1836  
                                         l2397 EBE2                                           l1829 B9A4  
                                         l1781 B7F2                                           l1765 B75E  
                                         l1757 B710                                           l1853 0188  
                                         l2806 1E02                                           l2830 2A5C  
                                         l2822 2DB8                                           l2566 ADEA  
                                         l2558 AC80                                           l2494 24EC  
                                         l2574 FCDE                                           l2590 FCA8  
                                         l1926 DCF8                                           l1918 DC50  
                                         l1942 1B5A                                           l1678 2110  
                                         l2398 EC0C                                           l1782 B802  
                                         l1774 B7AE                                           l1766 B768  
                                         l2751 2AF2                                           l2831 2A66  
                                         l2823 2DC2                                           l2583 FC56  
                                         l2575 FBFE                                           l1927 DD3C  
                                         l3391 09E8                                           l3703 FEDC  
                                         l1935 1B6C                                           l1943 1B60  
                                         l1679 2118                                           l3543 1854  
                                         l2399 EC2E                                           l1791 B856  
                                         l1775 B7BA                                           l1767 B778  
                                         l1759 B718                                           l1847 00EC  
                                         l2904 34F4                                           l2808 1E22  
                                         l2760 1778                                           l2488 235E  
                                         l2568 AEF8                                           l2592 FCC6  
                                         l2584 FC64                                           l3800 2C6E  
                                         l3392 09DC                                           l1960 DE3E  
                                         l1944 1B66                                           l1936 1B34  
                                         l3544 184C                                           l1792 B862  
                                         l1784 B80A                                           l1776 B7C4  
                                         l1848 00FC                                           l2649 3884  
                                         l2681 18BC                                           l1929 DD78  
                                         l3297 CD8C                                           l1793 B870  
                                         l1785 B81A                                           l1777 B7D4  
                                         l1769 B780                                           l1849 0110  
                                         l2690 18F4                                           l2682 189C  
                                         l2586 FC80                                           l3810 31D8  
                                         l1962 DEA6                                           l1938 1B3A  
                                         l1786 B826                                           l2691 18DC  
                                         l2499 0C04                                           l2595 FCD8  
                                         l2579 FC18                                           l3803 2C96  
                                         l3395 0A1C                                           l1963 DE80  
                                         l1939 1B44                                           l3299 CF8E  
                                         l3547 1874                                           l1795 B878  
                                         l1787 B834                                           l1779 B7DC  
                                         l2908 34C0                                           l2676 3E6C  
                                         l2684 18A4                                           l3804 2CA0  
                                         l3396 0A2A                                           l3388 09A2  
                                         l1956 DE22                                           l3548 187E  
                                         l1796 B882                                           l2757 1742  
                                         l2693 18F6                                           l2685 18AC  
                                         l2589 FC92                                           l3813 31F8  
                                         l3397 0A40                                           l3389 09BA  
                                         l1965 DF1C                                           l1957 DDFC  
                                         l3549 188C                                           l1797 B88C  
                                         l1789 B83C                                           l2766 1298  
                                         l2686 18B6                                           l3814 3202  
                                         l1966 DEF6                                           l1798 B8A2  
                                         l2839 3978                                           l1959 DE64  
                                         l2688 18E4                                           l3592 107A  
                                         l2769 12D6                                           l2785 2B98  
                                         l2689 18D4                                           l3809 31E0  
                                         l3593 1070                                           l2777 2208  
                                         l2786 2B54                                           l2970 16D6  
                                         l2778 222C                                           l3595 10AE  
                                         l2963 1E8E                                           l2947 1D3E  
                                         l2795 294E                                           l2955 3804  
                                         l2788 2B7E                                           l3596 1098  
                                         l3692 FE24                                           l2796 2958  
                                         l2949 1DA6                                           l2957 3816  
                                         l3598 10D6                                           l3694 FE9C  
                                         l3599 10CC                                           l3695 FE8C  
                                         l2967 1672                                           l3990 1186  
                                         l3799 2C76                                           l3983 31AA  
                                         l3995 2758                                           l3987 1108  
                                         l3996 271E                                           l3989 1144  
                        ??i2_SYSTEM_Initialize 002E                                           STR_1 A458  
               __fill_buffer_get_display1@cntr 0065                                           STR_9 A443  
               __fill_buffer_get_display1@line 0066                 __fill_buffer_get_display2@cntr 0065  
               __fill_buffer_get_display2@line 0066                                  _i2c_frequency 01F4  
                                         u9000 2570                                           u9006 2572  
                        ??_USBCtrlTrfTxService 002E                                           _UCFG 000F39  
                                         _UEP0 000F26                                           _UEP1 000F27  
                             ?_fat_create_file 009B                                           _UEIE 000F37  
                                         u8950 252C                                           u8960 253A  
                                         _UEIR 000F63                                           _UCON 000F65  
                                         u8970 2548                                           u8980 2556  
                                         u8990 2564                                           u8958 2530  
                                         u8968 253E                                           u8978 254C  
                                         _TMR2 000FCC                                           u8988 255A  
                                         u8998 2568                                 ?_i2c_adc_start 006A  
                  __size_ofi2_USBStallEndpoint 0106                          _i2c_digipot_reset_off 38C0  
           __fill_buffer_get_display1@position 0067                           _system_output_toggle 38E6  
                       __size_of_adc_calibrate 000C                                 ??_buck_operate 007E  
                               _ResetSenseData 25E6         USBStdFeatureReqHandler@current_ep_data 0048  
                       ?__update_modified_time 006D                                           _pDst 01ED  
                                         _main C468                                           _last 02A2  
                                 ___ftpack@arg 0060                                           _itoa 3184  
                     ??i2_USBTransferOnePacket 0032                     __end_of_fat_append_to_file D95A  
                                 ___ftpack@exp 0063                    __size_of_APP_DeviceMSDTasks 0012  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                      __end_of_display_prepare 1BAC                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                              _USBDeviceAttach 3574                                           btemp 005B  
                                         _utoa 1100             __fill_buffer_get_display2@position 0067  
                   ??_ExternalFlash_SectorRead 0093                                ??_rtcc_get_year 0060  
                         __size_of__buck_start 00C6             __size_of_buck_remote_set_dutycycle 0024  
                 __display_charger@charger_off 0182                        ?_rtcc_get_hours_decimal 002E  
                 ?i2_ExternalFlash_MediaDetect 002E                      _ExternalFlash_MediaDetect 3EA8  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start A086                __end_of_APP_DeviceMSDInitialize 3DFA  
                        _display_get_character 36C0                         ??__rtcc_bcd_to_decimal 0060  
                         ??_USBCheckHIDRequest 002E                               ?_MSDWriteHandler 002E  
                         ??_rtcc_increment_day 0068                           _rtcc_increment_hours 3A28  
               ??_MSDProcessCommandMediaAbsent 00A7                     __end_of_USBCheckStdRequest 07E4  
                       ??_USBCtrlTrfOutHandler 0030                           ?_rtcc_increment_year 002E  
                         _rtcc_increment_month 39E4                   ??__flash_copy_page_to_buffer 0076  
               ?__flash_write_page_from_buffer 0073                                   ___param_bank 000000  
                    __size_of_flash_page_write 0050                      ??_USBStdFeatureReqHandler 0045  
                                 _USBOutHandle 01E9                       __end_of__display_charger CA8A  
                   __size_of_system_output_off 0056                                ??_buck_get_mode 0060  
              __size_of__flash_write_to_buffer 0052                       ??_USBStdGetStatusHandler 002E  
                                 ___fttol@exp1 006E                       ??_buck_remote_get_status 0060  
                                 ___fttol@lval 006A                                 ?_USBDeviceInit 002E  
                            __flash_get_status 350C        __end_of_system_calculate_output_current F164  
     __size_of_system_calculate_output_current 0124               ?_system_calculate_output_current 002E  
            ??_system_calculate_output_current 006C                _system_calculate_output_current F040  
                         __buck_set_sync_async 2082                __flash_spi_tx_tx@command_length 0062  
                   __end_of_rtcc_decrement_day 3958                       _system_ui_inactive_count 01E7  
                           _buck_remote_enable 01F1                     __buck_initial_dutycycle@dc 006E  
                                __CFG_PLLDIV$2 000000                                ??_rtcc_set_year 0060  
                i2c_display_write_fixed@length 0067                                          l20021 0BFC  
                                        l20009 24E4                                          l20205 0A74  
                                        l21031 1560                                          l20241 0B16  
                                        l20161 16D6                                          l20073 21DA  
                                        l20411 35E0                                          l20091 37FC  
                                        l20163 16DA                         ?_i2c_digipot_backlight 002E  
                                        l21301 302E                                          l22017 D78E  
                                        l22131 E6A0                                          l22311 29FE  
                                        l20199 0A60                                          l20475 D2A2  
                                        l22315 2A1C                                          l20653 2F50  
                                        l20647 2F44                                          l20671 2EF4  
                                        l22159 E702                                          l21295 3022  
                                        l20677 2F00                      __buck_set_sync_async@mode 0063  
                                        l21855 ADEA                                          l21783 AB5E  
                                        l18113 FD68                                          l21769 AB08  
                                        l20899 F28E                                 ??_i2c_adc_read 0067  
                                        l18315 E11C                                          l18403 CD3A  
                                        l18237 271E                                          l21989 E480  
                                        l19419 1C30                                          l18769 B088  
                              __end_of___aldiv 0A52                             ?__flash_get_status 006C  
                                        l19865 DBCA                                          l19885 DC74  
                                        ?_main 002E                  rtcc_increment_minutes@minutes 0068  
                                        ?_itoa 0070                                __end_of___awdiv 1896  
                                        STR_10 A44F                                          STR_11 A461  
                                        STR_12 A436                          ?_i2c_digipot_reset_on 002E  
                             ??__display_clear 0060              __size_of_USBCtrlEPServiceComplete 00F2  
                           _buck_remote_set_on 3CEE                          rtcc_decrement_day@day 0068  
                              __end_of___lldiv 1A26                                          ?_utoa 0067  
             MSDCheckForErrorCases@DeviceBytes 006A                                          u21000 D9C4  
                                        u21100 C794                                ___awdiv@divisor 0062  
                                        u21110 C7B0                                          u21030 DA66  
                                        u21120 C7CC                         __end_of_USBDeviceTasks EA32  
                                        u21130 C7E8                                          u21220 C948  
                                        u21140 C804                                __end_of___fttol FEEE  
                                        u21150 C820                                          u20510 DD94  
                                        u21160 C83C                                          u20520 DDB0  
                                        u20600 A498                                          u21170 C858  
                                        u20530 DDEA                                          u21330 E160  
                                        u20610 A4B4                                          u22210 0120  
                                        u21500 ABF2                                          u21180 C874  
                                        u21340 E17C                                          u20700 A5B0  
                                        u20620 A4D0                                          u22141 FA00  
                                        u22310 BDFE                                          u21510 AC0C  
                                        u21270 C13A                                          u21350 E198  
                                        u20710 A5CC                                          u20630 A4EC  
                                        u22151 FA22                                          u21520 AC4C  
                                        u21280 C156                                          u21360 E1B4  
                                        u20720 A5E8                                          u20640 A508  
                                        u22161 FA44                                          u22410 BF06  
                                        u22330 BE32                                          u20490 3062  
                                        u21290 C172                                          u20650 A524  
                                        u20660 A540                                          u20900 E532  
                                        u22500 F13E                                          u22350 BE66  
                                        u21470 AB9A                                          u20670 A55C  
                                        u20590 A47C                                          u21710 E364  
                                        u22440 BF48                                          u20680 A578  
                                        u20920 E592                                          u21720 E390  
                                        u22505 F134                                          u22370 BE9A  
                                        u21570 ADD6                                          u20690 A594  
                                        u20930 E5D6                      ?_USBCtrlEPServiceComplete 002E  
                                        u21715 E35A                                          u17100 CCC2  
                                        u21820 E6C4                                          u22620 F178  
                                        u22460 044E                                          u22390 BECE  
                                        u17110 CCC4                                          u20870 E4DE  
                                        u22630 F262                                          u22470 0530  
                                        u20880 E4FA                                          u22800 C6FC  
                                        u22720 C49A                                          u23257 18D6  
                                        u22465 0444                                          u21850 E766  
                                        u20970 D970                                          u20890 E516  
                                        u22490 F054                                          u23267 18DE  
                                        u22635 F258                                          u22475 0526  
                                        u17300 2C7A                                          u20980 D98C  
                                        u23277 2B70                                          u22670 FFBE  
                                        u20990 D9A8                                          u23287 2B82  
                                        u17128 CCD0                                          u22760 C5CE  
                                        u23297 2B8C                                          u16345 1DD6  
                                        u17129 CCE4                                          u16530 F3C0  
                                        u17058 CBBA                                          u17330 31E4  
                                        u16435 2A72                                          u17059 CBCE  
                                        u22675 FFB4                                          u18300 1DA2  
                                        u22780 C630                                          u18150 0F6A  
                                        u16455 1FAE                                          u16720 FDAA  
                                        u18320 1C56                                          u18065 2D10  
                                        u18235 22D2                                          u16820 34F0  
                                        u18500 ECFA                                          u19060 381C  
                                        u19220 0B10                                          u19300 3434  
                                        u18245 22EE                                          u16750 FDC0  
                                        u16830 34BC                                          u17710 B1DC  
                                        u18350 1062                                          u19230 0B16  
                                        u18255 2478                                          u16840 2740  
                                        u17720 B1EE                                          u17640 B0B8  
                                        u17608 AFB2                                          u17609 AFC6  
                                        u18265 2494                                          u19145 2798  
                                        u16770 FDD2                                          u17618 AFE6  
                                        u18514 ED12                                          u19090 1E96  
                                        u18450 1858                                          u17619 AFFA  
                                        u18515 ED0C                                __end_of___lwdiv 2CAA  
                                        u19411 FE08                                          u19155 27F4  
                                        u18524 ED4C                                          u18525 ED46  
                                        u18285 1D64                                          u19245 E7EC  
                                        u18630 30D8                                          u16790 FDE2  
                                        u16918 E016                                          u17750 B26A  
                                        u17910 2354                                          u18390 10E0  
                                        u19430 FE42                                          u17830 241C  
                                        u16847 2736                                          u16919 E02A  
                                        u19255 E81E                                          u18640 30EE  
                                        u19360 09EC                                          u16865 DF92  
                                        u19265 E850                                          u17658 B0DA  
                                        u18730 DBDE                   __flash_write_to_buffer@start 0073  
                                        u17659 B0EE                                          u19435 FE3A  
                                        u19275 E882                                          u18564 EDAA  
                                        u18548 ED74                                          u18740 DC54  
                                        u18565 EDA4                                          u18549 ED8A  
                                        u19285 E8AA                                          u19470 FEC6  
                                        u16975 CAB4                                          u18488 ECC8  
                                        u19560 D29E                                          u17880 233A  
                                        u17785 1BBA                                          u18489 ECDC  
                                        u18770 DC88                                          u19820 2F30  
                                        u19580 D2D2                                          u17980 19D6  
                                        u18940 0C40                                          u18780 DCE2  
                                        u17965 2964                                          u19901 3640  
                                        u16998 CAEC                                          u19750 D47C  
                                        u16999 CB00                                          u19930 158C  
                                        u19780 2F80                                __end_of___lwmod 320C  
                                        i2l300 11C2                                          i2l301 11C6  
                                        i2l302 11E0                                          i2l222 132E  
                                        i2l310 324A                                          i2l151 EAD8  
                                        i2l216 0CEC                                          i2l224 1344  
                                        i2l233 005C                                          i2l161 E932  
                                        i2l234 0006                                          i2l162 E93E  
                                        i2l251 093C                                          i2l323 1492  
                                        i2l147 EA78                                          i2l171 E9C8  
                                        i2l252 0904                                          i2l228 162C  
                                        i2l324 148C                                          i2l164 E964  
                                        i2l181 339C                                          i2l309 324C  
                                        i2l317 3498                                          i2l149 EAA0  
                                        i2l157 E904                                          i2l342 0E5C  
                                        i2l262 F622                                          i2l334 28EA  
                                        i2l182 33AA                                          i2l190 FBB8  
                                        i2l430 083E                                          i2l238 0082  
                                        i2l318 3496                                          i2l174 E9EE  
                                        i2l166 E978                                          i2l158 E914  
                                        i2l255 097C                                          i2l247 08D2  
                                        i2l343 0E60                                          i2l263 F600  
                                        i2l431 081C                                          i2l167 E984  
                                        i2l159 E91C                                          i2l256 0944  
                                        i2l344 0EDA                                          i2l336 2932  
                                        i2l440 086C                                          i2l360 0724  
                                        i2l176 EA0E                                          i2l168 E9AC  
                                        i2l249 08DC                                          i2l345 0EA0  
                                        i2l265 F696                                          i2l441 0882  
                                        i2l361 072A                                          i2l169 E9B6  
                                        i2l266 F67C                                          i2l186 FB10  
                                        i2l194 F94E                                          i2l434 088C  
                                        i2l282 EEFE                                          i2l274 059E  
                                        i2l362 0730                                          i2l178 EA2A  
                                        i2l347 0EC0                                          i2l427 082E  
                                        i2l291 EEF8                                          i2l283 EDFA  
                                        i2l363 0742                                          i2l188 FB3A  
                                        i2l428 0800                                          i2l276 0610  
                                        i2l364 0748                                          i2l541 F5C4  
                                        i2l381 D0F8                                          i2l285 EE0C  
                                        i2l357 07A0                                          i2l438 084C  
                                        i2l550 0D7C                                          i2l390 D24A  
                                        i2l374 D024                                          i2l286 EE96  
                                        i2l366 074E                                          i2l358 071C  
                                        i2l439 0862                                          i2l383 D178  
                                        i2l375 D028                                          i2l295 121C  
                                        i2l367 076A                                          i2l288 EE9C  
                                        i2l296 11B6                                          i2l368 0782  
                                        i2l393 D204                                          i2l385 D142  
                                        i2l377 D08E                                          i2l289 EEF2  
                                        i2l538 F5CC                                          i2l554 0DE4  
                                        i2l386 D15E                                          i2l539 F538  
                                        i2l395 D256                                          i2l379 D0D6  
                                        i2l299 1232                                          i2l388 D1C4  
                                        i2l549 0E16                                          i2l389 D1D0  
                                        i2l566 0DEA                                          i2l830 192E  
                                        i2l824 1950                                          i2l832 1938  
                        rtcc_write_eeprom@date 0085                                          i2l834 1942  
                             ??__display_inout 0090                                          i2l828 191E  
                                        i2l829 1926                                          i2l950 2CAE  
                                        i2l784 2C1E                                          i2l952 2CB8  
                                        _UADDR 000F38                                          i2l787 2C54  
                                        i2l956 2CCA                                ___awdiv@counter 0064  
                                        i2l949 2CE8                                          i2l958 2CD6  
                                        _TMR0H 000FD7                                          _TMR1H 000FCF  
                                        _TMR0L 000FD6                                          _TMR1L 000FCE  
      __end_of_system_calculate_output_voltage 0474       __size_of_system_calculate_output_voltage 00E2  
             ?_system_calculate_output_voltage 002E              ??_system_calculate_output_voltage 006C  
              _system_calculate_output_voltage 0392                                          _RPOR5 000EC5  
                                        _RPOR6 000EC6                                          _USTAT 000F64  
                             __i2c_read@length 0067                    ?_ExternalFlash_CapacityRead 0060  
                              ?_display_update 002E                         __rtcc_verify_bcd@value 0063  
           __size_of_USBCtrlEPAllowStatusStage 00C2                                _i2c_eeprom_read 2CFE  
                          ___lmul@multiplicand 0064                       __end_of__display_outputs DB7C  
                              ??_flash_is_busy 0071                               __end_of_MSDTasks D4DC  
                                   i2memcpy@d1 002E                                 __CFG_FCMEN$OFF 000000  
                              __read_fat@value 008D                             _USBCheckMSDRequest 0D68  
                                   i2memcpy@s1 0030                         ??__buck_operate_remote 0076  
              __end_of_USBCtrlEPAllowDataStage 1376                          __get_dateTime@minutes 0072  
                                        _sd000 A432                                          _sd001 A35B  
                                        _sd002 A38F                                          _sd003 A3FE  
                        __get_dateTime@seconds 0073                 ?_USBIncrement1msInternalTimers 002E  
                  log_generate_entry@log_entry 0078                 __size_of_MSDTransferTerminated 0056  
                          ??__flash_get_status 006E                          _rtcc_get_year_decimal 3D9A  
                __end_of_MSDTransferTerminated 2C56                                   _gblCBWLength 01F7  
          i2c_display_send_init_sequence@F6877 03ED                            ?_buck_remote_set_on 002E  
                                   i2memset@p1 002E                         ?_MSDCheckForErrorCases 006A  
                        ??__system_timer0_init 0060                          __buck_start@dutycycle 0072  
            __size_of_rtcc_get_minutes_decimal 0010                              ?__flash_spi_tx_rx 0060  
                            ?__flash_spi_tx_tx 0060                      ?_rtcc_get_minutes_decimal 002E  
                        i2USBStallEndpoint@dir 002E                         __end_of_ResetSenseData 2648  
                                ___ftpack@sign 0064                       __get_empty_cluster@value 008D  
                  rtcc_get_day_decimal@bcd_day 0063                     __end_of__display_usb@F7241 A1FB  
                   __end_of__display_usb@F7235 A11B                     __end_of__display_usb@F7237 A23B  
                   __end_of__display_usb@F7239 A22B                     ?_log_get_number_of_samples 0060  
                     __parse_command_long@data 0063                               ??_rtcc_get_hours 0060  
                        ?_system_output_toggle 002E                  rtcc_increment_seconds@seconds 0068  
                             ??_rtcc_get_month 0060              system_calculate_input_current@tmp 0070  
                                        pclath 000FFA                             ??__flash_spi_tx_rx 0068  
                           ??__flash_spi_tx_tx 0068                                __end_of_ui_init 3D58  
                                        tablat 000FF5                      __size_of_USBStallEndpoint 010A  
                          ?_USBCheckMSDRequest 002E                                _MSDCommandState 00E6  
             __display_charger@charger_startup 0172                    ??_ExternalFlash_SectorWrite 008D  
                                        plusw1 000FE3                                          plusw2 000FDB  
                __display_charger@charger_sync 0139                 __end_of_rtcc_get_hours_decimal 3D9A  
                              __end_of_tmr_isr 140C                                    ?_USBMSDInit 002E  
     ExternalFlash_WriteProtectStateGet@config 0060                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                __size_of__system_encoder_init 003E                                          utoa@c 006F  
                              __number_of_days 23EC                                          utoa@v 006D  
                                        status 000FD8                    ?__flash_copy_page_to_buffer 0073  
                            __CFG_DSWDTPS$8192 000000                                          wtemp8 005C  
                     __end_ofi2_ResetSenseData 270C                                __end_of_strncmp 1CAE  
              ??__fill_buffer_get_calibration1 006B                ??__fill_buffer_get_calibration2 006B  
                             __end_ofi2_memcpy 28DC                    __end_of__display_efficiency C468  
                             __end_ofi2_memset 37F6                 __display_temperature@external1 00A4  
               __display_temperature@external2 00B0                 ??_MSDComputeDeviceInAndResidue 0062  
                     __ic2_display_set_address 3772                              __buck_timer2_init 3C2E  
                               _MSDReadHandler DF68                          ?_rtcc_increment_hours 002E  
                        ??_rtcc_increment_year 0068                          ?_rtcc_increment_month 002E  
                        __size_of__display_usb 0192              __end_of_buck_remote_set_dutycycle 39A0  
            __size_of_rtcc_get_seconds_decimal 0010                        __CFG_DSWDTOSC$INTOSCREF 000000  
                 __size_of_USBStdSetCfgHandler 00DC              fat_create_file@number_of_clusters 00AC  
                         flash_page_write@data 0081                  ??i2_ExternalFlash_MediaDetect 0030  
              __size_of_fat_get_empty_clusters 0092                      ?_rtcc_get_seconds_decimal 002E  
                         flash_page_write@page 007F                       __end_of_log_collect_data D004  
                              __initialization 0B1A                    __display_temperature@header 0090  
                         ??_buck_remote_set_on 0060                             ?__buck_timer2_init 002E  
                    __end_of__flash_get_status 3540        __end_ofi2_ExternalFlash_MediaInitialize 3C16  
     __size_ofi2_ExternalFlash_MediaInitialize 001A          __end_of_ExternalFlash_MediaInitialize 3B16  
       __size_of_ExternalFlash_MediaInitialize 0022              ??i2_ExternalFlash_MediaInitialize 0030  
             ?i2_ExternalFlash_MediaInitialize 002E                i2_ExternalFlash_MediaInitialize 3BFC  
                _ExternalFlash_MediaInitialize 3AF4                                    _system_init F9F6  
               __size_of_system_encoder_enable 0010                                   __end_of_main C782  
                                 __end_of_itoa 31C8                  __end_of_system_encoder_enable 3D7A  
                             _rtcc_set_minutes 3C8E                   __size_of__rtcc_increment_bcd 002E  
                             _rtcc_set_seconds 3C5E                __end_of_i2c_display_write_fixed 29EC  
                                 __end_of_utoa 11AA                    ??__fill_buffer_get_display1 0064  
                  ??__fill_buffer_get_display2 0064                       __parse_command_short@cmd 008B  
                        ?__buck_set_sync_async 0062                               __end_of_i2c_init 3E68  
                  __end_of__rtcc_decrement_bcd 36C0                       __end_of__i2c_acknowledge 3EA8  
                                ??__i2c_open_1 0060                     __end_of__get_empty_cluster 1EA0  
                                _adc_calibrate 3E68                           ??_USBCheckMSDRequest 0039  
                               __CFG_OSC$HSPLL 000000         MSDComputeDeviceInAndResidue@DiExpected 0060  
                      _USBCheckMSDRequest$2643 0039                        _USBCheckMSDRequest$2644 003B  
                        system_init@appendtext 0100                      __size_of_USBCtrlEPService 0096  
                          ??__buck_timer2_init 0060                                         ??_main 00D5  
                                ___fttol@sign1 0069                               __end_of__i2c_get 3E9E  
                                       ??_itoa 0076                             USBStallEndpoint@ep 0065  
                         __size_of__ui_encoder 0394                                         ??_utoa 006D  
                                __activetblptr 000003                                ?_USBDeviceTasks 002E  
                           __write_root@offset 008D     __end_of_ExternalFlash_WriteProtectStateGet 3EE8  
  __size_of_ExternalFlash_WriteProtectStateGet 0004           ??_ExternalFlash_WriteProtectStateGet 0062  
          ?_ExternalFlash_WriteProtectStateGet 0060             _ExternalFlash_WriteProtectStateGet 3EE4  
                                  ?_USBSuspend 002E    __i2c_eeprom_load_default_calibration@buffer 0060  
                  __end_of_rtcc_decrement_year 3A6C                __size_of_rtcc_increment_minutes 0022  
              __size_of_rtcc_increment_seconds 0022                      ??__buck_initial_dutycycle 006D  
                             ??_rtcc_set_hours 0060                               ??_rtcc_set_month 0060  
                     ??_buck_remote_set_enable 0060                 __display_efficiency@efficiency 00C6  
                     __end_of_rtcc_get_minutes 3E40                       __end_of_rtcc_get_seconds 3E24  
                  __size_of__write_calibration 0094                  __flash_write_to_buffer@buffer 0079  
                      __end_of_USBDeviceAttach 35A6                         __flash_write_to_buffer 2DA2  
              i2c_digipot_reset_off@data_array 006A                                ??_i2c_adc_start 006C  
                             __end_of___altoft 1F94                         __get_dateTime@datetime 0074  
                                       _ADRESH 000FC4                                         _ADRESL 000FC3  
                                       _CCPR1L 000FBB                                         _EECON2 000FA7  
                                       _DMABCH 000F66                                         _DMABCL 000F67  
                             ___awdiv@dividend 0060                         ?_i2c_digipot_reset_off 002E  
                              ?_ResetSenseData 002E                    ??__get_available_root_entry 008E  
                             __end_of___ftpack 1100                                     __i2c_start 3EC4  
                       SYSTEM_Initialize@state 0060                                     __i2c_write 2E44  
                                 __display_usb E4CC                               __end_of_adc_init 3B90  
                             __end_of_adc_read 191C                                         i2l1330 13CE  
                                       i2l1322 13E4                                         i2l1331 13B8  
                                       i2l1332 13E2                                         i2l1324 139C  
                                       i2l1333 13BE                                         i2l1325 1384  
                                       i2l1334 13C4                                         i2l1326 13B0  
                                       i2l1335 13EE                                         i2l1327 138A  
                                       i2l1336 13FC                                         i2l1328 1392  
                                       i2l4001 37E4                                         i2l1337 13FA  
                                       i2l4002 37D4                                         i2l1339 1408  
                               __CFG_WDTEN$OFF 000000           __flash_write_page_from_buffer@buffer 0075  
                                       i2l3995 28CA                                         i2l3996 2892  
              ??_APP_DeviceCustomHIDInitialize 003A                       ?__fill_buffer_get_status 002E  
                                       _OSCCON 000FD3                   ??_get_next_eeprom_write_task 0060  
                                       _RTCCAL 000F3E                                         _RPINR1 000EE1  
                                       _RPOR21 000ED5                                         _RPINR2 000EE2  
                                       _RPOR22 000ED6                                         _RPINR3 000EE3  
                    __end_of__buck_timer2_init 3C46                                 __CFG_WPCFG$OFF 000000  
                        __display_itoa@missing 008E                         __end_of_MSDReadHandler E14E  
                              __read_root@data 0087                        __display_charger@fan_on 0108  
                      __display_charger@header 010F                        i2c_eeprom_write@address 006A  
                     i2USBTransferOnePacket@ep 0036                               ??__i2c_wait_idle 0060  
                            ??i2_USBDeviceInit 0036                         ?_display_get_character 0060  
                             ?_display_prepare 002E                __size_ofi2_USBTransferOnePacket 0102  
                              __read_root@slot 008E                              ?__get_input_power 006E  
                      __write_calibration@addr 0097                    fat_append_to_file@file_size 009F  
                      __write_calibration@cntr 009C                                 __CFG_WPDIS$OFF 000000  
                             __read_fat@offset 008B                               _i2c_eeprom_tasks 20F6  
                            _shortPacketStatus 002A              fat_append_to_file@number_of_bytes 0091  
                   __get_empty_cluster@cluster 008F                                 __CFG_XINST$OFF 000000  
                             _i2c_eeprom_write 1BAC                             ??__get_input_power 0070  
                              rtcc_set_day@day 0060                   ??__parse_command_calibration 0067  
                              USBDeviceTasks@i 004C                                    i2memcpy@tmp 0038  
                                 _CCPTMRS0bits 000F52                    USBStdFeatureReqHandler@pUEP 0046  
                     USBTransferOnePacket@data 0061                     USBCtrlTrfInHandler@lastDTS 002F  
                 __end_of__flash_set_page_size 2244                                ??_USBDeviceInit 0068  
           __flash_copy_page_to_buffer@command 0079                       __end_of_rtcc_correct_day 3B36  
                     flash_partial_read@length 0077                                         ___lmul 2AFA  
                                       _gblCBW 0241                                      ??___aldiv 0068  
                           __size_of__i2c_read 0094                             __size_of__i2c_send 000A  
                       __size_of__get_dateTime 0146                                      ??___awdiv 0064  
                               __CFG_STVREN$ON 000000                             __size_of__i2c_stop 0008  
                       __size_of__get_checksum 0036                                      ??___lldiv 0068  
                                    ??___fttol 0064                                      ??___lwdiv 0064  
  i2SYSTEM_Initialize@pll_startup_counter_3287 0030      SYSTEM_Initialize@pll_startup_counter_3287 0063  
                 __size_of_flash_partial_write 006C                                 ?_adc_calibrate 002E  
                                   _SoftDetach 01F6                                      ??___lwmod 0064  
                                       _buffer 0800                              _USBEnableEndpoint 338C  
              __size_of_USBStdGetStatusHandler 009C                __size_of_buck_remote_get_status 0028  
                      system_output_off@output 0061                                __get_date@month 0069  
                                       _memcpy 270C                     ?_adc_calculate_temperature 006C  
                                       _memset 35D6                        __end_of_i2c_eeprom_read 2D50  
                                       clear_0 0B82                                         clear_1 0B94  
                                       clear_2 0BA0                                         clear_3 0BAC  
                                       clear_4 0BB8                                         clear_5 0BC4  
                    _ExternalFlash_SectorWrite 34A4                                         clear_6 0BD0  
                              __CFG_CLKOEC$OFF 000000                               __end_of_inq_resp A3E1  
                             ___awdiv@quotient 0066                         ??_i2c_digipot_reset_on 006A  
                                       _ui_run 00D6                        ?_system_encoder_disable 002E  
                           ?_USBEnableEndpoint 0036                   __size_of__buck_operate_local 047E  
                         __end_of_buck_operate 2880                             _flash_partial_read 1F94  
                                       _status 01F0                          i2c_display_init@F6880 03E4  
                                       _strlen 3310                        ?_rtcc_decrement_minutes 002E  
                      ?_rtcc_decrement_seconds 002E                         __display_outputs@F7251 A0B5  
                       __display_outputs@F7245 A269                         __display_outputs@F7247 A20B  
                       __display_outputs@F7249 A0CA                         __size_of__buck_prepare 0064  
                __size_of_USBTransferOnePacket 0106                            __size_of_USBMSDInit 0112  
                  i2c_display_write_fixed@data 0065                     __end_of_log_generate_entry BDC4  
  i2c_display_send_init_sequence@init_sequence 006A                         __size_of__flash_wakeup 0058  
                      __write_root@root_sector 008B                                         itoa@cp 0076  
                       __size_of__flash_spi_tx 005A                              _i2c_set_frequency 2166  
                        system_init@extension2 017E                          __end_of_fat_find_file 0B1A  
       buck_remote_set_synchronous@synchronous 0060                    fat_get_empty_clusters@value 008D  
                       _fat_get_empty_clusters 165E                  __size_of__parse_command_short 00E4  
                       ?_rtcc_get_year_decimal 002E                 __display_charger@charger_async 0124  
          __size_of_get_next_eeprom_write_task 002C                                   __mediumconst A08A  
                          __end_of__i2c_open_1 3C2E                 i2c_digipot_reset_on@data_array 006A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                    __end_of__display_time@F7200 A2F7  
                  __end_of__display_time@F7202 A2EE                    __end_of__display_time@F7210 A2C3  
                  __end_of__display_time@F7204 A307                    __end_of__display_time@F7212 A157  
                  __end_of__display_time@F7220 A143                    __end_of__display_time@F7206 A2E4  
                  __end_of__display_time@F7214 A1C6                    __end_of__display_time@F7222 A12F  
                    __rtcc_decrement_bcd@value 0067                    __end_of__display_time@F7208 A2CF  
                  __end_of__display_time@F7216 A25B                    __end_of__display_time@F7224 A24B  
                  __end_of__display_time@F7218 A1B4                                      ??_ui_init 0060  
                  __end_of__display_time@F7198 A285               __size_of_APP_DeviceMSDInitialize 0010  
              ??__flash_compare_page_to_buffer 0076                            ??_USBEnableEndpoint 0037  
                           ?_i2c_set_frequency 002E              __end_of__display_efficiency@F7280 A269  
            __end_of__display_efficiency@F7276 A17D              __end_of__display_efficiency@F7278 A16A  
                          ?_flash_partial_read 0073                        __end_of__number_of_days 2454  
                     __size_of_flash_page_read 0028                      __fill_buffer_get_display1 2F34  
                    __fill_buffer_get_display2 2EE4                                      ??_tmr_isr 002E  
                   __end_of__root_is_available 1DAA                         ??_system_output_toggle 0062  
                    __size_of_system_output_on 004E                                    _CtrlTrfData 000D38  
         __end_of_buck_remote_change_dutycycle 30FA          __size_of_buck_remote_change_dutycycle 004A  
                 _buck_remote_change_dutycycle 30B0                                      ??_strncmp 0066  
                         __size_of__write_root 005C             buck_remote_change_dutycycle@change 0060  
                        __end_of_ui_get_status 3ED8             __size_of_buck_remote_get_dutycycle 0006  
                       __display_outputs@line3 0060                         __display_outputs@line4 0075  
            i2ExternalFlash_MediaDetect@config 002E                ExternalFlash_MediaDetect@config 0060  
                         _controlTransferState 0029                     ??_APP_DeviceCustomHIDTasks 008C  
                        __flash_spi_tx_rx@data 0064                           __CFG_LS48MHZ$SYS48X8 000000  
                      ?_rtcc_get_month_decimal 002E                              _SYSTEM_Initialize 29EC  
                __size_of__display_temperature 01C8                          __flash_spi_tx_tx@data 0064  
                          ??_i2c_set_frequency 0060                                     __accesstop 0060  
                      __end_of__initialization 0BD6                                     ___altoft@c 006E  
            MSDCheckForErrorCases@MSDErrorCase 0070                     log_write_to_disk@log_entry 0101  
                  ?__parse_command_calibration 0063                                ?_MSDReadHandler 002E  
                 __size_of__buck_set_dutycycle 006A                           __end_of_i2c_adc_read 2DA2  
                       ??_rtcc_increment_hours 0068                             ?_SYSTEM_Initialize 002E  
                       ??_rtcc_increment_month 0068                         __size_of__display_itoa 0206  
                                ___rparam_used 000001                         __size_of__display_time 0640  
                       _rtcc_increment_minutes 3A06                         _rtcc_increment_seconds 39C2  
                     __size_of_USBStallHandler 0044                   __end_of__i2c_not_acknowledge 3E94  
              ExternalFlash_SectorWrite@config 0084                ExternalFlash_SectorWrite@buffer 008A  
              __end_of__buck_initial_dutycycle 0F9E                    __end_of__parse_command_long 02AE  
                __size_of_rtcc_get_day_decimal 0010                             __size_of__get_date 0068  
                          __size_of_USBSuspend 0030                             __size_of__get_time 006A  
                        __write_fat@fat_sector 008C                          flash_page_write@match 0083  
                     __end_of_rtcc_read_eeprom ECB8                           ??_flash_partial_read 007B  
                                   ___fttol@f1 0060                               _flash_page_write 2DF4  
                            ?__get_temperature 006E                                 __pcstackCOMRAM 002E  
                   __size_of__flash_get_status 0034                      __end_of_USBEnableEndpoint 33C8  
                            _log_write_to_disk 200E                         ??__buck_set_sync_async 0063  
          __size_of_ExternalFlash_CapacityRead 0014                             __rtcc_write_enable 3D06  
                      _battery_voltage_maximum 02E9          __end_of__fill_buffer_get_calibration1 1D2E  
       __size_of__fill_buffer_get_calibration1 0080                  __fill_buffer_get_calibration1 1CAE  
        __end_of__fill_buffer_get_calibration2 26AA         __size_of__fill_buffer_get_calibration2 0062  
                __fill_buffer_get_calibration2 2648                                  __end_of_sd000 A436  
                                __end_of_sd001 A38F                                  __end_of_sd002 A3BD  
                                __end_of_sd003 A418                           buck_remote_set_on@on 0060  
                                    ?_MSDTasks 002E                                   __pidataBANK2 334E  
                                 __pidataBANK3 3BAC                                   __pidataBANK4 2384  
                          ??_SYSTEM_Initialize 0060                      __get_available_root_entry 37F6  
                         __rtcc_verify_bcd@max 0061                           __rtcc_verify_bcd@min 0060  
         ExternalFlash_SectorWrite@sector_addr 0086               __size_of_USBCtrlEPAllowDataStage 0098  
                           __buck_prepare@cntr 0060           __size_of_i2c_eeprom_read_calibration 011E  
                           ??__get_temperature 0070                      rtcc_decrement_hours@hours 0068  
                           __size_of__read_fat 004A                                _active_protocol 01FE  
                          i2USBStallEndpoint@p 0034                             ?_log_write_to_disk 002E  
               __end_of_system_encoder_disable 3ED2                  __size_of_USBConfigureEndpoint 0094  
           __size_of_ExternalFlash_MediaDetect 000A                    __end_of_USBCtrlTrfInHandler 0EE4  
                 ?_buck_remote_set_synchronous 002E                            _userInterfaceStatus 01F3  
               __end_of_rtcc_decrement_minutes 3AD2                 __end_of_rtcc_decrement_seconds 3A8E  
                          display_prepare@mode 00D4                                   _gblSenseData 0260  
                              _MSDErrorHandler F3A6                 ?_ExternalFlash_MediaInitialize 0060  
                    __end_of_i2c_set_frequency 21D6                            ?__rtcc_write_enable 002E  
                       i2_USBTransferOnePacket FAFA                            system_init@filename 0168  
                 __size_of_system_output_is_on 001A                                     __buck_stop 379E  
                          ??_log_write_to_disk 00D0               fat_get_empty_clusters@fat_sector 0089  
                 buck_remote_set_enable@remote 0060                                      ?i2_memcpy 002E  
                                    ?i2_memset 002E          __end_of_MSDProcessCommandMediaPresent B2EE  
       __size_of_MSDProcessCommandMediaPresent 03CA                  _MSDProcessCommandMediaPresent AF24  
                       flash_partial_read@data 0079                             __size_of_buck_init 000E  
                       flash_partial_read@page 0073                                  __get_date@day 006A  
              __size_of_buck_remote_set_enable 001C                       ??_USBCtrlTrfSetupHandler 004B  
                      _USBTicksSinceSuspendEnd 01FA                                  __get_dateTime E7A8  
                                __get_checksum 3402              __flash_copy_page_to_buffer@buffer 0075  
                             ?_USBDeviceAttach 002E                      __end_of_SYSTEM_Initialize 2A46  
                      ??__update_modified_time 006F                              __end_of__i2c_read 1536  
                 __size_of__rtcc_write_disable 0016                              __end_of__i2c_send 3EBC  
                       _USBStdGetStatusHandler 11AA                 __end_of_rtcc_get_month_decimal 3DBA  
                          USBStallEndpoint@dir 0060                              __end_of__i2c_stop 3EC4  
                       _buck_remote_get_status 3872                                    ?__i2c_start 002E  
                                  ?__i2c_write 0065                                     __pbssBANK0 00D7  
                                   __pbssBANK1 01D3                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                     __pbssBANK4 0468  
                       __read_root@root_sector 008A                  fat_append_to_file@fat_cluster 00A5  
             __size_of_i2c_display_write_fixed 005A                               _USBStallEndpoint F6E0  
                                   _gblNumBLKS 02AA                  ?_buck_remote_change_dutycycle 002E  
                                    ?_i2c_init 002E                             _buck_get_dutycycle 3EDE  
                    __size_of__rtcc_verify_bcd 0046              __end_of_buck_remote_get_dutycycle 3EDE  
                 __end_of__sector_from_cluster 3DDA                           ??__rtcc_write_enable 0060  
                 ??_schedule_eeprom_write_task 0060                                     __read_root 27C8  
                   __size_of__buck_timer2_init 0018                               _mediaInformation 02B6  
                 __end_of_rtcc_decrement_hours 3AF4                   __end_of_rtcc_decrement_month 3AB0  
                                __buck_prepare 24BC                                  __flash_wakeup 2B52  
                    rtcc_decrement_month@month 0068                                  __flash_spi_tx 2AA0  
                                    ?__i2c_get 002E                    __size_of_USBWakeFromSuspend 0036  
                                  _pBDTEntryIn 0010                      __end_of_log_write_to_disk 2082  
                  __size_of_i2c_display_cursor 002A                     __update_modified_time@root 006D  
             __end_of_USBCtrlEPServiceComplete 00D6          __end_of_APP_DeviceCustomHIDInitialize 3574  
       __size_of_APP_DeviceCustomHIDInitialize 0034                  _APP_DeviceCustomHIDInitialize 3540  
                         log_collect_data@temp 0078                    MSDTransferTerminated@handle 0039  
                          ?_buck_get_dutycycle 002E             ExternalFlash_SectorSizeRead@config 0060  
                         USBCtrlTrfRxService@i 002E                                ??_adc_calibrate 0060  
                       __size_of_log_start_new 00DA                                        ?___lmul 0060  
                                   ??_MSDTasks 00AC                         __display_itoa@decimals 007A  
                      ??_i2c_digipot_backlight 006A                        __get_checksum@log_entry 0060  
                            ?__display_charger 002E                 __flash_write_to_buffer@command 007A  
                rtcc_decrement_minutes@minutes 0068                                      MSDTasks@i 00B1  
                                      _CCP1CON 000FBA                           i2c_adc_start@channel 006C  
                                    ?___altoft 006E                                        ?_memcpy 0060  
                           _fat_append_to_file D738                                        ?_memset 0060  
                               ___lmul@product 0068                                     _device_dsc A418  
                             ??_display_update 0070                               ?_i2c_eeprom_read 0071  
                                  __i2c_open_1 3C16                                      ?___ftpack 0060  
                           ??__display_charger 0090                               _USBCtrlEPService 140C  
            system_calculate_input_voltage@tmp 0070                                        ?_ui_run 002E  
                                   _ep_data_in 01E4                             __display_clear@col 0063  
                                    ?_adc_init 002E                                      ?_adc_read 0060  
                       rtcc_read_eeprom@buffer 0092                             __display_clear@row 0062  
                                      ?_strlen 0060                  fat_append_to_file@file_number 00A9  
               __parse_command_calibration@cmd 002E                  ??_buck_remote_set_synchronous 0060  
                  APP_DeviceCustomHIDTasks@idx 0096               __sector_from_cluster@fat_cluster 0060  
                  __end_of_USBCtrlTrfRxService F6E0                                  __display_itoa DB7C  
                                __display_time A466                             _USBCheckStdRequest 070C  
                    __write_calibration@buffer 0087                              _configDescriptor1 A31B  
                                      i2l12317 37D4                                        i2l11641 0816  
                                      i2l11931 08DC                                        i2l14433 2892  
                                      i2l22265 E9C0                                        i2l11883 2CD6  
                                      i2l11879 2CB8                                        i2l16215 EAD0  
                                      i2l23525 1968                                        i2l23527 199C  
                                      i2l16187 EA70                        ??_MSDCheckForErrorCases 006E  
                                      i2l18597 0596                             __size_of_rtcc_init 001A  
                          ?_fat_append_to_file 0091                    __end_ofi2_SYSTEM_Initialize 2CFE  
                                   ??i2_memcpy 0034                         fat_append_to_file@data 0093  
                                   ??i2_memset 0034                                     _flash_init 3140  
                   system_output_toggle@output 0062                    __end_of_USBCtrlTrfTxService 0984  
                            __end_of__get_date 24BC                            _USBStdSetCfgHandler 0556  
          __size_of_schedule_eeprom_write_task 0050                           ??_buck_get_dutycycle 0060  
                       fat_append_to_file@root 00B0                                __get_time@hours 0068  
                __buck_set_dutycycle@dutyCycle 0061                              __end_of__get_time 231A  
                            ?__display_outputs 002E                                 ?__get_dateTime 0064  
                rtcc_decrement_seconds@seconds 0068                                 ?__get_checksum 0060  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                                      _RXADDRH 000F68                                        _RXADDRL 000F69  
                                      _RTCVALH 000F3B                                        _RTCVALL 000F3A  
                             ?__number_of_days 002E                     __end_ofi2_USBStallEndpoint F9F6  
                           _rtcc_decrement_day 3932                            __rtcc_increment_bcd 3664  
                        __display_time@minutes 01D0                          __display_time@seconds 01D1  
                                      _TXADDRH 000F6A                                        _TXADDRL 000F6B  
                     __end_of_rtcc_set_minutes 3CA6                       __end_of_rtcc_set_seconds 3C76  
                          ?_USBCheckStdRequest 002E                     ??__ic2_display_set_address 006A  
                 __size_of_USBStdGetDscHandler 012C                       __display_charger@fan_off 0100  
                         __flash_set_page_size 21D6                                        _UIEbits 000F36  
                           ??__display_outputs 0060                          __display_time@setyear 01BA  
                   __display_charger@supply_on 0160             __end_of_get_next_eeprom_write_task 3772  
                   _get_next_eeprom_write_task 3746                            i2c_eeprom_read@addr 0077  
                   __end_of_APP_DeviceMSDTasks 3D6A                                        _UIRbits 000F62  
                            __end_of__read_fat 301C                                  ??__buck_start 0073  
                          i2c_eeprom_read@data 0073                    ??_log_get_number_of_samples 0062  
  MSDCheckForErrorCases@HostMoreDataThanDevice 006E                          rtcc_increment_day@day 0068  
        __end_of__flash_compare_page_to_buffer 1E26         __size_of__flash_compare_page_to_buffer 007C  
                __flash_compare_page_to_buffer 1DAA                                     __write_fat 3250  
                                   ??_i2c_init 0061                               __CFG_CFGPLLEN$ON 000000  
                     __i2c_write@slave_address 0068            __ic2_display_set_address@data_array 006B  
                               ?__buck_prepare 002E                                   ??_USBMSDInit 0039  
                     __write_calibration@index 009B                              __read_fat@cluster 0087  
                               ?__flash_wakeup 002E                             i2c_adc_read@result 0068  
                            ??_flash_page_read 008B                            ?_rtcc_decrement_day 002E  
                               ?__flash_spi_tx 0060                         fat_find_file@extension 0089  
                            ?i2_ResetSenseData 002E                                 _outputPowerSum 0286  
                                   ??__i2c_get 0060                              _MSDProcessCommand ECB8  
                         ??_fat_append_to_file 0095           adc_calculate_temperature@calibration 006E  
                                __i2c_send@dat 0060                      __flash_get_status@command 006E  
                           __flash_spi_tx@data 0060                                        __Hparam 0000  
              rtcc_get_hours_decimal@bcd_hours 0063                ??_USBIncrement1msInternalTimers 002E  
                                   _lastSecond 01EF                           ?_USBStdSetCfgHandler 002E  
                        __end_of_rtcc_get_year 3E16                    __size_of_USBCheckHIDRequest 00D0  
                                      __Lparam 0000                    __size_of_rtcc_increment_day 0026  
                           ??i2_ResetSenseData 002E                             __display_itoa@text 007B  
                     __size_of_fat_create_file 01B6                              __end_of_hid_rpt01 A3FE  
                       _buck_remote_set_enable 3B90                             ?_MSDProcessCommand 002E  
                    __rtcc_increment_bcd@value 0067                        __end_of_MSDErrorHandler F4C2  
                            __end_of_buck_init 3E08                     _MSDTransferTerminated$2732 003B  
                   __size_of_USBEnableEndpoint 003C                      __size_of__flash_spi_tx_rx 0098  
                    __size_of__flash_spi_tx_tx 0090           APP_DeviceCustomHIDTasks@return_value 0094  
                                 ?_system_init 002E                rtcc_get_month_decimal@bcd_month 0063  
                            ?_log_collect_data 002E                             __display_usb@F7241 A1EA  
                           __display_usb@F7235 A107                             __display_usb@F7237 A22B  
                           __display_usb@F7239 A21B                  __size_of__rtcc_bcd_to_decimal 001E  
                         ?__rtcc_increment_bcd 0064                          __size_of_buck_operate 005C  
                         ??_USBCheckStdRequest 004B                                        ___aldiv 0984  
                __size_of_USBCtrlTrfOutHandler 005C          i2ExternalFlash_MediaInitialize@config 002E  
          ExternalFlash_MediaInitialize@config 0060                                        ___awdiv 1810  
                             _ToSendDataBuffer 03A4                                __size_of___lmul 0058  
                                      ___lldiv 19A2                               ??_USBDeviceTasks 004C  
                                      ___fttol FDF6                                        ___lwdiv 2C56  
                            ??_USBStallHandler 002E                                        ___lwmod 31C8  
                           ??_log_collect_data 0074                                     ??___altoft 0072  
                            ?__i2c_acknowledge 002E                          __end_of_buck_get_mode 3EEC  
                          __size_of__i2c_start 0008                   __end_of__system_encoder_init 3310  
                                      __pcinit 0B1A                                __size_of_memcpy 0060  
                          __size_of__i2c_write 0050                                     ??___ftpack 0065  
                              __size_of_memset 0030                       __size_of_MSDWriteHandler 02DC  
                    __end_of_configDescriptor1 A35B                            ??_MSDProcessCommand 00A7  
                                      __ramtop 0F00                   ExternalFlash_SectorRead@page 0093  
               ?__fill_buffer_get_calibration1 002E                 ?__fill_buffer_get_calibration2 002E  
                   __size_of_i2c_set_frequency 0070                                     ??_adc_init 0060  
                                   ??_adc_read 0062                                        __ptext0 C468  
                                      __ptext1 00D6                                        __ptext2 3D6A  
                                      __ptext3 3ECC                                        __ptext4 3636  
                                      __ptext5 389A                                        __ptext6 38C0  
                                      __ptext7 36EE                                        __ptext8 B6B0  
                                      __ptext9 38E6                                 ?__display_itoa 0078  
                                      _inPipes 000A                           ??_rtcc_decrement_day 0068  
                              __size_of_ui_run 00EC                                 ?__display_time 002E  
                        _task_list_write_index 001D                             __display_time@cntr 01D2  
                 __end_of__display_inout@F7190 A1D8                   __end_of__display_inout@F7192 A319  
                 __end_of__display_inout@F7194 A293              __size_of_ExternalFlash_SectorRead 0034  
                 __end_of__display_inout@F7188 A1EA                    _USBDeferOUTDataStagePackets 01FB  
                           __display_time@mode 01CB                             ??__i2c_acknowledge 0060  
                                    _T0CONbits 000FD5                             __display_time@year 01CC  
                        __end_of_rtcc_set_year 3C5E                      ?_ExternalFlash_SectorRead 008B  
                              __size_of_strlen 003E                    __end_of__system_timer0_init 32D2  
                                    _T1CONbits 000FCD                                    ?__buck_stop 002E  
                                 ??_USBSuspend 0045                                      _T2CONbits 000FCA  
                           __end_of_USBMSDInit F5D4                               ??_ResetSenseData 0060  
                      ?__flash_write_to_buffer 0073                        _APP_DeviceMSDInitialize 3DEA  
                                      _msd_cbw 000D40                       __end_of_i2c_eeprom_tasks 2166  
                             ___aldiv@dividend 0060                                        _msd_csw 000D80  
                      ??_i2c_digipot_reset_off 006A                           __i2c_not_acknowledge 3E8A  
                     __end_of_i2c_eeprom_write 1C2E                                i2_USBDeviceInit EA32  
                                      _ui_init 3D46                               i2USBDeviceInit@i 0036  
                                _log_start_new 0632             __size_of_ExternalFlash_SectorWrite 0034  
                      __size_of__buck_pin_init 0030                          ?__flash_set_page_size 002E  
                                      _tmr_isr 1376                          __end_of_flash_is_busy 397C  
                           __end_of_USB_CD_Ptr A31B                                     _msd_buffer 000600  
                           __get_empty_cluster 1E26                              ?_rtcc_get_minutes 002E  
                            ?_rtcc_get_seconds 002E                     __size_of_SYSTEM_Initialize 005A  
                             _system_output_on 2F84                __size_of_USBCtrlTrfSetupHandler 0090  
                        __size_of_i2c_adc_read 0052                  __size_of__buck_operate_remote 00FE  
                                      _strncmp 1C2E                            _flash_partial_write 2244  
                         end_of_initialization 0BD6                        rtcc_decrement_year@year 0068  
                      ??_display_get_character 0061                          _MSDTransferTerminated 2C00  
        __flash_compare_page_to_buffer@command 007B                 ?_MSDProcessCommandMediaPresent 002E  
                           __end_of_USB_SD_Ptr A30F                    __end_of_rtcc_increment_year 39C2  
                           ??_rtcc_get_minutes 0060                             ??_rtcc_get_seconds 0060  
                          i2c_eeprom_write@dat 0072                                        memcpy@d 0067  
         __size_of_buck_remote_set_synchronous 0018                                        memcpy@n 0064  
                                      memcpy@s 0069                               __write_fat@value 008A  
                 __get_temperature@temperature 006E                            _pBDTEntryEP0OutNext 0018  
                    __rtcc_bcd_to_decimal@ones 0061                      __end_of_MSDProcessCommand EDEA  
                                      itoa@buf 0070                                    ?__read_root 0087  
                    __rtcc_bcd_to_decimal@tens 0060                                        memset@c 0062  
                                      itoa@val 0072                                        memset@n 0064  
                                      memset@p 0066                            __buck_operate_local AAA6  
                              _USB1msTickCount 01DD                       __buck_operate_local$8817 007B  
                                 _buck_operate 2824                            ?__get_empty_cluster 0087  
                 fat_get_empty_clusters@offset 008B                       ?_USBStdFeatureReqHandler 002E  
                                    i2u1223_40 28B4                                      i2u1223_47 28AA  
                i2c_eeprom_write@slave_address 0083                                      i2u2209_40 EA2E  
                                    i2u1463_40 EA94                                      i2u1466_40 EB34  
           __size_of__fill_buffer_get_display1 0050             __size_of__fill_buffer_get_display2 0050  
                                    i2u1650_44 F5B6                       fat_append_to_file@length 00AA  
                                    i2u1650_45 F5B0                               _inputCapacitySum 0282  
                                    i2u1646_48 F55C                                      i2u1646_49 F570  
                                    i2u1736_40 05CA                                      i2u1648_48 F582  
                                    i2u1648_49 F598                                      i2u1754_40 D1EA  
                     fat_append_to_file@offset 00A7                          ??_USBStdSetCfgHandler 0045  
                              ___lldiv@divisor 0064                     __size_of_log_write_to_disk 0074  
          rtcc_get_minutes_decimal@bcd_minutes 0063                       fat_append_to_file@sector 009D  
                            __end_of_rtcc_init 3BE2                 ??_buck_remote_change_dutycycle 0060  
                              ___lldiv@counter 006C                            __end_of__buck_start 0CA6  
                                ?_rtcc_get_day 002E            rtcc_get_seconds_decimal@bcd_seconds 0063  
                                 _averageCount 0016                          ??__rtcc_increment_bcd 0066  
                           __end_of_USBSuspend 3636                              __get_time@minutes 0069  
                            __get_time@seconds 006A                        _USBCtrlEPAllowDataStage 12DE  
                   ?_buck_remote_set_dutycycle 002E                               ___aldiv@quotient 006A  
                  __size_of_buck_remote_set_on 0018                                        postdec1 000FE5  
                                      postdec2 000FDD           __end_of_ExternalFlash_SectorSizeRead 3E80  
        __size_of_ExternalFlash_SectorSizeRead 000C                   _ExternalFlash_SectorSizeRead 3E74  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                            rtcc_set_hours@hours 0060  
                            ?_rtcc_correct_day 002E                       __buck_operate_local@cntr 007D  
                         ?_flash_partial_write 007F                   __size_of__display_efficiency 0340  
             __size_of__fill_buffer_get_status 025C                                  ??__ui_encoder 008B  
                                ?_rtcc_set_day 002E                                        utoa@buf 0067  
                    _log_get_number_of_samples 3E80        MSDProcessCommandMediaPresent@sectorSize 009E  
                     _USBCtrlEPServiceComplete FFE4                                        utoa@val 0069  
                 log_write_to_disk@file_number 0100                                      _MSD_State 00E7  
                                _inputPowerSum 028A                          _system_encoder_enable 3D6A  
                                      strlen@s 0060                    ??_adc_calculate_temperature 006F  
                           ??_rtcc_correct_day 0064                    __size_of_USBCheckMSDRequest 00BE  
                   _USBStatusStageEnabledFlag1 0022                     _USBStatusStageEnabledFlag2 0021  
                     flash_partial_write@match 0087                           ?__buck_operate_local 002E  
                           USBEnableEndpoint@p 0037                        ?_fat_get_empty_clusters 0087  
                      ??_rtcc_get_year_decimal 0063                                      _PORTAbits 000F80  
                                    _PORTBbits 000F81                        __display_outputs@header 009A  
                             _outputCurrentSum 028E                       flash_partial_write@start 0081  
                    __size_of__get_input_power 0082                           ??__get_empty_cluster 0089  
               __end_of__flash_write_to_buffer 2DF4                            __buck_set_dutycycle 231A  
                             __CFG_DSBOREN$OFF 000000                      __display_temperature@cntr 00C7  
                         __sector_from_cluster 3DCA                                   _i2c_adc_read 2D50  
                         _rtcc_decrement_hours 3AD2                     __rtcc_bcd_to_decimal@input 0062  
                         _rtcc_decrement_month 3A8E             __size_of__get_available_root_entry 002A  
                              ??__get_dateTime 0068                     __end_of__write_calibration 15CA  
                        ?__i2c_not_acknowledge 002E                  fat_append_to_file@new_cluster 00A3  
                     _rtcc_get_minutes_decimal 3D7A                                ??__get_checksum 0062  
                       fat_create_file@cluster 00AE                            flash_page_read@data 0089  
                 __size_of__rtcc_decrement_bcd 002E                              adc_read@adc_value 0063  
                                  ?_flash_init 002E                            flash_page_read@page 0087  
                             __CFG_CPUDIV$OSC1 000000                  fat_get_empty_clusters@cluster 0091  
                                    _TRISAbits 000F92                                 ?_log_start_new 002E  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                                    _TRISDbits 000F95                                      _TRISEbits 000F96  
                           _ReceivedDataBuffer 0478                             _BothEP0OutUOWNsSet 0025  
                fat_get_empty_clusters@maximum 0087                       __end_of_flash_page_write 2E44  
                                __pbssBIGRAMll 0800                               ??_MSDReadHandler 0095  
                    USBConfigureEndpoint@EPNum 0033                        _i2c_display_write_fixed 2992  
                            __CFG_SOSCSEL$HIGH 000000                     ?_USBCtrlEPAllowStatusStage 002E  
                              ??__buck_prepare 0060                     __display_efficiency@header 0092  
                      __display_time@presssave 0170            USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                      __size_of__display_clear 004A                                      _USTATcopy 002C  
                              ??__flash_wakeup 0068                   __size_of_rtcc_decrement_year 0022  
                        __end_of_i2c_adc_start 3402             __end_of_schedule_eeprom_write_task 2EE4  
                   _schedule_eeprom_write_task 2E94  MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
                      ?_rtcc_increment_minutes 002E                        ?_rtcc_increment_seconds 002E  
                              ??__flash_spi_tx 0064                                    ?__write_fat 0088  
                   __display_efficiency@footer 00B8                        __size_of__display_inout 01E6  
                 ?_i2c_eeprom_read_calibration 002E                               __rtcc_verify_bcd 30FA  
                           _log_generate_entry BA44                i2c_eeprom_read_calibration@addr 007F  
                 __end_of_USBTransferOnePacket F8F0                           ?__buck_set_dutycycle 002E  
              i2c_eeprom_read_calibration@cntr 0081                                    _CCP1CONbits 000FBA  
                     _rtcc_get_seconds_decimal 3DDA                            _system_output_is_on 3BE2  
          __end_ofi2_ExternalFlash_MediaDetect 3EF0                          i2c_eeprom_read@length 0075  
                  i2_ExternalFlash_MediaDetect 3EEC                            rtcc_set_month@month 0060  
                   __display_efficiency@source 00A5                         i2c_display_cursor@line 006E  
                             __CFG_IOL1WAY$OFF 000000                            __get_dateTime@hours 0071  
                 __end_of__parse_command_short 0392                            __get_dateTime@month 006F  
                               ??_rtcc_get_day 0060                            __size_of__buck_stop 002C  
               ?__flash_compare_page_to_buffer 0073                             __root_is_available 1D2E  
                            __CFG_WPEND$PAGE_0 000000              __end_of__fill_buffer_get_display1 2F84  
            __end_of__fill_buffer_get_display2 2F34                            ?_log_generate_entry 0078  
           __flash_compare_page_to_buffer@page 0073                            __CFG_MSSP7B_EN$MSK7 000000  
                            ?_rtcc_read_eeprom 002E                  __get_empty_cluster@fat_sector 0089  
                             ?_MSDErrorHandler 002E                        __size_of_rtcc_get_hours 000E  
                      __size_of_rtcc_get_month 000E                               __write_root@data 0088  
                       _USBCtrlTrfSetupHandler 1780                 __end_of__display_outputs@F7251 A0CA  
               __end_of__display_outputs@F7245 A277                 __end_of__display_outputs@F7247 A21B  
               __end_of__display_outputs@F7249 A0DF         __end_of_system_calculate_input_current F288  
      __size_of_system_calculate_input_current 0124                 _system_calculate_input_current F164  
                        ??_flash_partial_write 0087                      system_output_is_on@output 0060  
                               ??_rtcc_set_day 0060                               __write_root@slot 008F  
                          __rtcc_write_disable 3D1C               ExternalFlash_CapacityRead@config 0060  
                      ?i2_USBTransferOnePacket 002E                       __size_of_display_prepare 0082  
                        __end_of_USBDeviceInit E7A8                             ??_rtcc_read_eeprom 008B  
        __end_of_USBIncrement1msInternalTimers 3B56         __size_of_USBIncrement1msInternalTimers 0020  
                _USBIncrement1msInternalTimers 3B36                   __end_of__display_temperature E316  
                               __end_of___lmul 2B52                 __end_of_fat_get_empty_clusters 16F0  
                              ??__display_itoa 007D                  ?_ExternalFlash_SectorSizeRead 0060  
                              ??__display_time 0060             __end_of__display_temperature@F7300 A2AB  
                   __display_temperature@F7300 A29F             __end_of__display_temperature@F7302 A29F  
                   __display_temperature@F7302 A293             __end_of__display_temperature@F7296 A0F3  
                   __display_temperature@F7296 A0DF             __end_of__display_temperature@F7298 A2DA  
                   __display_temperature@F7298 A2CF                            ?__root_is_available 002E  
                            __size_of_MSDTasks 0260                          ??__buck_operate_local 0076  
                     __end_of_USBStallEndpoint F7EA                                      i2memcpy@d 0034  
                     ?__buck_initial_dutycycle 002E                                      i2memcpy@n 0032  
                            ??_fat_create_file 00A3                        __end_ofi2_USBDeviceInit EB76  
                                    i2memcpy@s 0036                      ??_APP_DeviceMSDInitialize 003C  
                                    i2memset@c 0030                                      i2memset@n 0032  
                                    i2memset@p 0034                          ?__sector_from_cluster 0060  
                         ?_system_output_is_on 002E                                 __end_of_memcpy 276C  
                              _MSDRetryAttempt 01F8                           i2USBStallEndpoint@ep 0033  
       __end_of_system_calculate_input_voltage 0556        __size_of_system_calculate_input_voltage 00E2  
               _system_calculate_input_voltage 0474                                 __end_of_memset 3606  
                        __get_output_power@pwr 006F                          ?_rtcc_decrement_hours 002E  
                             __CFG_DSWDTEN$OFF 000000                        __parse_command_long@cmd 0064  
                        ?_rtcc_decrement_month 002E                            __size_of__read_root 005C  
                __size_of_i2c_digipot_reset_on 0026                              _USBBusIsSuspended 0027  
                    flash_partial_write@length 0083                                 __end_of_ui_run 01C2  
                 __end_of_rtcc_get_day_decimal 3DCA          __get_available_root_entry@file_number 008E  
                               __end_of_strlen 334E                  __display_temperature@internal 00BC  
                          __end_of__ui_encoder BA44                      __flash_set_page_size@size 0077  
                                _chargerOnTime 02B0                            start_initialization 0B1A  
                      ?_USBStdGetStatusHandler 002E                                  ??__write_root 008A  
                    __size_of__get_temperature 002C                        ?_buck_remote_get_status 002E  
                         ??_log_generate_entry 007A                       i2SYSTEM_Initialize@state 0032  
                ExternalFlash_SectorWrite@page 008D                  USBCtrlTrfRxService@byteToRead 002F  
                       ??__flash_set_page_size 0073                              ??_MSDWriteHandler 008F  
            __end_of__get_available_root_entry 3820                       ??_rtcc_get_hours_decimal 0063  
               get_next_eeprom_write_task@task 0060                              __size_ofi2_memcpy 005C  
                   i2c_display_cursor@position 006D                           ?__rtcc_write_disable 002E  
                       ?_MSDTransferTerminated 0039                         __display_charger@F7261 A30F  
                       __display_charger@F7263 A2F7                         __display_charger@F7271 A0F3  
                       __display_charger@F7255 A0A0                         __display_charger@F7265 A2AB  
                       __display_charger@F7257 A190                         __display_charger@F7267 A1FB  
                       __display_charger@F7259 A17D                         __display_charger@F7269 A08B  
                            __size_ofi2_memset 002C                                _USBMSDOutHandle 00DD  
             __ic2_display_set_address@address 006A                 __end_of_rtcc_increment_minutes 3A28  
                 __end_of_USBConfigureEndpoint 165E                 __end_of_rtcc_increment_seconds 39E4  
                         system_init@filename2 0171                                   ??__i2c_start 0060  
                                 ??__i2c_write 0068                __end_of_USBStdFeatureReqHandler D27C  
                            USBStallEndpoint@p 0066                                  _MSDHostNoData 00E5  
                         _task_list_read_index 001E                      _adc_calculate_temperature FEEE  
                         ??__root_is_available 0087                 __size_of__update_modified_time 0036  
            __end_of_USBCtrlEPAllowStatusStage 0D68                  __size_of_system_output_toggle 0026  
                                  __buck_start 0BE0                  __end_of__update_modified_time 346E  
         fat_get_empty_clusters@empty_clusters 008F                          ??__buck_set_dutycycle 0060  
                     __end_of_USBCtrlEPService 14A2                     __size_of_MSDProcessCommand 0132  
                         __system_encoder_init 32D2                                      __i2c_read 14A2  
                      __size_of_rtcc_set_hours 0018                           rtcc_read_eeprom@date 008C  
                                    __i2c_send 3EB2                        __size_of_rtcc_set_month 0018  
                                    __i2c_stop 3EBC                           __flash_spi_tx@length 0062  
      _ExternalFlash_MediaInitialize$intlevel0 3AFA                  ??_i2c_eeprom_read_calibration 0079  
                         __display_inout@F7190 A1C6                           __display_inout@F7192 A316  
                         __display_inout@F7194 A285                           __display_inout@F7188 A1D8  
                            __size_of_i2c_init 000C                              _rtcc_write_eeprom 3066  
                    ??_USBCtrlEPAllowDataStage 002F                               __buck_start@cntr 0075  
                               USBDeviceInit@i 0068                               __buck_start@mode 0073  
                       __write_calibration@ptr 0099                  __size_of_rtcc_increment_hours 0022  
                __size_of_rtcc_increment_month 0022                  __root_is_available@first_byte 008D  
                       _pBDTEntryEP0OutCurrent 001A                         __size_of_fat_find_file 00C8  
                           ?_rtcc_write_eeprom 002E                                    _DMACON1bits 000F88  
                       i2c_eeprom_write@length 006E                                    _DMACON2bits 000F86  
                          __size_of_flash_init 0044                        USBTransferOnePacket@dir 0060  
                             __flash_spi_tx_rx 1246                               __flash_spi_tx_tx 16F0  
                      USBTransferOnePacket@len 0063                              __size_of__i2c_get 000A  
                  MSDErrorHandler@OldMSD_State 0069                                  _MSDTasks$2697 00AD  
               __end_ofi2_USBTransferOnePacket FBFC                                  _MSDTasks$2698 00AF  
                  __size_of_flash_partial_read 007A                                 __get_date@date 006B  
                                     ??___lmul 0068                               _outputVoltageSum 0292  
                      flash_partial_read@start 0075                                 __get_date@year 0068  
                          _USBStdGetDscHandler EDEA                         ?_system_encoder_enable 002E  
                       system_output_on@output 0060                              __CFG_ADCSEL$BIT10 000000  
            __size_of_APP_DeviceCustomHIDTasks 0364                                    __pdataBANK2 02BB  
                                  __pdataBANK3 03E4                                    __pdataBANK4 0400  
                __size_of__buck_set_sync_async 0074                      ?_APP_DeviceCustomHIDTasks 002E  
                      rtcc_increment_year@year 0068                           __size_of_system_init 0104  
               __size_of_i2c_digipot_backlight 002C                                       ??_memcpy 0066  
                      __size_of__i2c_wait_idle 0064                                       ??_memset 0066  
                         __display_inout@line1 0090                           system_init@extension 017A  
                         __display_inout@line2 00A2                   __size_of__parse_command_long 00EC  
                         __display_inout@line3 00C2                           __display_inout@line4 00B4  
                __end_of_i2c_digipot_backlight 371A                                   ?__i2c_open_1 002E  
                       __size_of_ui_get_status 0006                            ??_rtcc_write_eeprom 0085  
                        ??_system_output_is_on 0060                                       ??_ui_run 008B  
                           __end_of__i2c_start 3ECC                          __number_of_days@month 0063  
                           __end_of__i2c_write 2E94                      __root_is_available@offset 008A  
                          __size_of__write_fat 0042                                       ??_strlen 0062  
                        __display_outputs@cntr 00A9                              __size_of___altoft 007A  
                       ??__i2c_not_acknowledge 0060                          __display_outputs@mode 00A8  
                       _USBActiveConfiguration 002D                 __end_of_USBStdGetStatusHandler 1246  
                     _buck_dutycycle_last_step 01F2                                ??_log_start_new 0064  
               __end_of_buck_remote_get_status 389A                      __buck_operate_remote$8818 0076  
                            __size_of___ftpack 00B0                              __size_of_adc_init 001C  
                            __size_of_adc_read 0086                                    __pbssCOMRAM 0001  
                              adc_read@channel 0062                     fat_append_to_file@position 00AC  
                  fat_create_file@next_cluster 00A7                                _flash_page_read 384A  
                    ??_i2c_display_write_fixed 0068                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                   __size_of_USBCtrlTrfInHandler 00BE  
                 ??_ExternalFlash_CapacityRead 0064                 __size_of_MSDCheckForErrorCases 00FC  
                               __buck_pin_init 35A6                  __end_of_MSDCheckForErrorCases FDF6  
                        ??__rtcc_write_disable 0060                                      _gblBLKLen 02A6  
                    __size_of__display_charger 0308             __end_of_flash_command_pagesize_512 A432  
                   _flash_command_pagesize_512 A42E             __end_of_flash_command_pagesize_528 A42E  
                   _flash_command_pagesize_528 A42A                           ?_USBStdGetDscHandler 002E  
                   i2c_set_frequency@frequency 0060                              ?_rtcc_set_minutes 002E  
                            ?_rtcc_set_seconds 002E                                      __get_date 2454  
                       __get_checksum@checksum 0064                                      __get_time 22B0  
                  ?_get_next_eeprom_write_task 002E                            __end_of__write_root 27C8  
                        ?__system_encoder_init 002E                     __end_of_USBWakeFromSuspend 34A4  
                           ??_rtcc_set_minutes 0060                             ??_rtcc_set_seconds 0060  
                    __end_of_rtcc_write_eeprom 30B0                     __end_of_i2c_display_cursor 384A  
                                   ?__i2c_read 0065                    __size_of__rtcc_write_enable 0016  
                                   ?__i2c_send 002E                                _USBStallHandler 320C  
                                 _pBDTEntryOut 01D3                                     ?__i2c_stop 002E  
                      ?_buck_remote_set_enable 002E                     ?_buck_remote_get_dutycycle 002E  
                                    __read_fat 2FD2                 schedule_eeprom_write_task@task 0061  
                     __size_of_USBDeviceAttach 0032                        __rtcc_decrement_bcd@max 0065  
                      __rtcc_decrement_bcd@min 0064               __end_of_ExternalFlash_SectorRead 350C  
                     __get_checksum@byte_array 0062                             i2_USBStallEndpoint F8F0  
                    __size_of__display_outputs 0222                               ___lwdiv@dividend 0060  
                          flash_is_busy@status 0071                   buck_remote_get_status@retval 0060  
                            fat_find_file@name 0087                 MSDProcessCommandMediaPresent@i 00A6  
                          fat_find_file@buffer 008B                              fat_find_file@slot 0096  
                                    __pintcode A008                      fat_create_file@root_entry 00B0  
                      __fill_buffer_get_status D4DC                             _APP_DeviceMSDTasks 3D58  
                                __pmediumconst A08A                                       ?___aldiv 0060  
                          fat_find_file@offset 0099                                       ?___awdiv 0060  
                                    __ptext100 A466                                      __ptext101 E14E  
                                    __ptext110 C782                                      __ptext102 D95A  
                                    __ptext111 DB7C                                      __ptext103 DD82  
                                    __ptext200 3E40                                      __ptext120 AAA6  
                                    __ptext112 3310                                      __ptext104 C128  
                                    __ptext201 3E4E                                      __ptext121 379E  
                                    __ptext113 3184                                      __ptext105 FDF6  
                                    __ptext210 1CAE                                      __ptext202 3872  
                                    __ptext130 2AFA                                      __ptext122 0BE0  
                                    __ptext114 1100                                      __ptext106 1F1A  
                                    __ptext211 270C                                      __ptext203 3ED8  
                                    __ptext131 E65E                                      __ptext123 2082  
                                    __ptext115 31C8                                      __ptext107 1050  
                                    __ptext220 3B36                                      __ptext212 F7EA  
                                    __ptext204 3EE8                                      __ptext140 CA8A  
                                    __ptext132 35D6                                      __ptext124 231A  
                                    __ptext116 2C56                                      __ptext108 0984  
                                    __ptext221 140C                                      __ptext205 3EDE  
                                    __ptext141 3EE4                                      __ptext133 3574  
                                    __ptext125 0EE4                                      __ptext117 2824  
                                    __ptext109 301C                                      __ptext230 EDEA  
                                    __ptext222 2880                                      __ptext214 1376  
                                    __ptext206 2EE4                                      __ptext150 F3A6  
                                    __ptext142 34A4                                      __ptext134 29EC  
                                    __ptext126 19A2                                      __ptext118 FBFC  
                                    __ptext231 D004                                      __ptext223 1780  
                                    __ptext215 E8EE                                      __ptext207 2F34  
                                    __ptext151 F6E0                                      __ptext143 2DF4  
                                    __ptext135 3D58                                      __ptext127 1896  
                                    __ptext119 24BC                                      __ptext240 26AA  
                                    __ptext232 191C                                      __ptext224 FFE4  
                                    __ptext216 EA32                                      __ptext208 36C0  
                                    __ptext160 1246                                      __ptext152 25E6  
                                    __ptext144 2DA2                                      __ptext136 D27C  
                                    __ptext128 3E68                                      __ptext241 3BFC  
                                    __ptext233 2CAA                                      __ptext225 12DE  
                                    __ptext217 346E                                      __ptext209 2648  
                                    __ptext161 0F9E                                      __ptext153 34D8  
                                    __ptext145 16F0                                      __ptext137 ECB8  
                                    __ptext129 FEEE                                      __ptext250 0E26  
                                    __ptext242 3EEC                                      __ptext234 0D68  
                                    __ptext226 070C                                      __ptext218 3606  
                                    __ptext170 3066                                      __ptext162 3E74  
                                    __ptext154 384A                                      __ptext146 2A46  
                                    __ptext138 2584                                      __ptext251 08B4  
                                    __ptext243 3540                                      __ptext235 07E4  
                                    __ptext227 0556                                      __ptext219 320C  
                                    __ptext171 1BAC                                      __ptext163 3D32  
                                    __ptext155 1F94                                      __ptext147 1DAA  
                                    __ptext139 AF24                                      __ptext252 0000  
                                    __ptext244 FAFA                                      __ptext236 2C00  
                                    __ptext228 37CA                                      __ptext180 3C5E  
                                    __ptext172 2166                                      __ptext164 3AF4  
                                    __ptext156 3958                                      __ptext148 DF68  
                                    __ptext245 338C                                      __ptext237 F8F0  
                                    __ptext229 11AA                                      __ptext181 3C76  
                                    __ptext173 2E44                                      __ptext165 3EA8  
                                    __ptext157 2B52                                      __ptext149 FCFA  
                                    __ptext246 15CA                                      __ptext238 3DEA  
                                    __ptext190 397C                                      __ptext182 3C8E  
                                    __ptext174 2520                                      __ptext166 BDC4  
                                    __ptext158 2AA0                                      __ptext247 28DC  
                                    __ptext239 F4C2                                      __ptext191 30B0  
                                    __ptext183 3CA6                                      __ptext175 3EBC  
                                    __ptext167 02AE                                      __ptext159 350C  
                                    __ptext248 F5D4                                      __ptext192 EF16  
                                    __ptext184 3CBE                                      __ptext176 3EC4  
                                    __ptext168 2F84                                      __ptext249 0CA6  
                                    __ptext193 2E94                                      __ptext185 3D06  
                                    __ptext177 3EB2                                      __ptext169 2BAA  
                                    __ptext194 D4DC                                      __ptext186 3D1C  
                                    __ptext178 01C2                                      __ptext195 3ED2  
                                    __ptext187 3CD6                                      __ptext179 3C46  
                                    __ptext196 3E08                                      __ptext188 3CEE  
                                    __ptext197 3E16                                      __ptext189 3B90  
                                    __ptext198 3E24                                      __ptext199 3E32  
                     __end_of_system_output_on 2FD2                            fat_find_file@sector 0097  
                                     ?___lldiv 0060                                       ?___fttol 0060  
                        __end_of_adc_calibrate 3E74                                       ?___lwdiv 0060  
                                     ?___lwmod 0060                                      _hid_rpt01 A3E1  
                                  __ui_encoder B6B0                            ?i2_USBStallEndpoint 002E  
                       ??__sector_from_cluster 0062                                      _buck_init 3DFA  
                                    _idle_rate 01FF                         ??_rtcc_decrement_hours 0068  
                       ??_rtcc_decrement_month 0068                                 __get_time@time 006B  
                             ?i2_USBDeviceInit 002E                          _buck_remote_dutycycle 00E1  
                     __display_efficiency@cntr 00D1                                __i2c_write@data 0065  
                             __get_input_power 1AA8                                __i2c_write@cntr 0069  
                          fat_create_file@name 009B                            ?_APP_DeviceMSDTasks 002E  
                    __size_ofi2_ResetSenseData 0062                           __display_time@setday 01C3  
           __flash_write_to_buffer@data_length 0077                            fat_create_file@size 009F  
                                 ??__buck_stop 0060                           _USBTransferOnePacket F7EA  
                 __flash_spi_tx_rx@data_length 0066                     ?_ExternalFlash_MediaDetect 0060  
                       __end_of__buck_pin_init 35D6                 ??_ExternalFlash_SectorSizeRead 0062  
                            ??_display_prepare 00D2                           __CFG_RTCOSC$T1OSCREF 000000  
                         __parse_command_short 02AE                           __end_of_rtcc_get_day 3E5C  
           __size_of_log_get_number_of_samples 000A                                  _fat_find_file 0A52  
                            __display_itoa@len 008D                              __display_itoa@pos 008F  
                            __display_itoa@tmp 0083                              ?_i2c_eeprom_tasks 002E  
                    __size_of_log_collect_data 029E                   __end_of__rtcc_bcd_to_decimal 3B74  
                                     ?_ui_init 002E                    __size_of_buck_get_dutycycle 0006  
                            ?_i2c_eeprom_write 006A                   __end_of_USBCtrlTrfOutHandler 2938  
                     __size_of_i2c_eeprom_read 0052                          ??_USBStdGetDscHandler 002E  
               __size_of_i2c_digipot_reset_off 0026            __size_of__flash_copy_page_to_buffer 005A  
                                  _ep_data_out 01E1                               ___lwdiv@quotient 0065  
                                     ?_tmr_isr 002E                __size_of_rtcc_get_hours_decimal 0010  
                __end_of_i2c_digipot_reset_off 38E6                             ??_i2c_eeprom_tasks 009D  
                                _MSDWriteState 001F                   __size_of_USBCtrlTrfRxService 010C  
              __parse_command_calibration@dat1 0064                __parse_command_calibration@dat2 0065  
              __parse_command_calibration@dat3 0066                  USBConfigureEndpoint@direction 002E  
                                     ?_strncmp 0060                            __display_efficiency C128  
                               __display_clear 301C                              __display_time@day 01CE  
                         __end_of_rtcc_set_day 3CD6                             ??_i2c_eeprom_write 006F  
                    __size_of__i2c_acknowledge 000A                                  ?__display_usb 002E  
              __parse_command_calibration@item 0063                              __display_time@tad 0180  
                                   ?__get_date 0064                              __display_time@pts 0100  
                         ??i2_USBStallEndpoint 002F                ?_i2c_display_send_init_sequence 002E  
             ??_i2c_display_send_init_sequence 006A                              __display_usb@cntr 00A5  
                               __display_inout DD82                                     ?__get_time 0064  
                                _ui_get_status 3ED2                   __size_ofi2_SYSTEM_Initialize 0054  
               __end_of_buck_remote_set_enable 3BAC                           __display_temperature E14E  
                              ___aldiv@divisor 0064                   __size_of_USBCtrlTrfTxService 00D0  
                                 ??__read_root 0089                           __display_usb@usb_off 0074  
               __size_of_display_get_character 002E                                ___aldiv@counter 0068  
                         ??_APP_DeviceMSDTasks 00B2                  __end_of_display_get_character 36EE  
                                    _extension 02F4                                       _LATAbits 000F89  
                                     _LATBbits 000F8A                                       _LATCbits 000F8B  
                                     _LATDbits 000F8C                                       _LATEbits 000F8D  
                   __end_of_USBCheckHIDRequest 08B4                 __root_is_available@file_number 008C  
                            __get_output_power 1A26                     __end_of_rtcc_increment_day 3932  
         __flash_compare_page_to_buffer@buffer 0075                     ??_USBCtrlEPServiceComplete 002F  
                                   ?__read_fat 0087                       __size_of__number_of_days 0068  
                      __i2c_read@slave_address 006F                                       _IPR2bits 000FA2  
                                     _PIE2bits 000FA0                       ??_system_encoder_disable 0060  
                          __rtcc_decrement_bcd 3692                           _rtcc_get_day_decimal 3DBA  
                  __size_of_fat_append_to_file 0222                             ?__get_output_power 006D  
                                  _buck_status 001C                             __end_of__buck_stop 37CA  
         __flash_compare_page_to_buffer@status 0079                                       _PIR1bits 000F9E  
                                    _task_list 0468                                       _PIR2bits 000FA1  
                     ??_rtcc_decrement_minutes 0068                       ??_rtcc_decrement_seconds 0068  
                               _rtcc_get_hours 3E40                                       i2u912_40 092E  
                                     i2u912_47 0924                                       i2u914_40 096E  
                               _rtcc_get_month 3E24                                       i2u914_47 0964  
                                     i2u872_40 0DC6                                       i2u980_40 EE92  
                                     i2u980_47 EE88                                       i2u982_40 EEE8  
                                     i2u982_47 EEDE                                       _RCONbits 000FD0  
                    __size_of_rtcc_get_minutes 000E                      __size_of_rtcc_get_seconds 000E  
                                     i2u979_40 EE62                                       i2u979_47 EE58  
                             __CFG_WDTPS$32768 000000                   __end_of__buck_operate_remote FCFA  
                                     _UEP0bits 000F26              __size_of__ic2_display_set_address 002C  
                  ??_buck_remote_set_dutycycle 0060                                       _MSDTasks D27C  
                   _USBDeferINDataStagePackets 0020                      ?__ic2_display_set_address 002E  
                      flash_partial_write@data 0085                    __size_of_USBCheckStdRequest 00D8  
              ??_MSDProcessCommandMediaPresent 0099                           ?__display_efficiency 002E  
                   ??_rtcc_get_minutes_decimal 0063                        flash_partial_write@page 007F  
                                    _rtcc_init 3BC8                                       _UCONbits 000F65  
          __end_of_buck_remote_set_synchronous 3CEE                          _temperatureOnboardSum 027A  
                  _buck_remote_set_synchronous 3CD6                           _USBConfigureEndpoint 15CA  
                          ??__get_output_power 006F                            _rtcc_decrement_year 3A4A  
                                   ?_buck_init 002E                              __i2c_write@length 0067  
                      __end_of_flash_page_read 3872             __flash_write_page_from_buffer@page 0073  
             __size_of_USBStdFeatureReqHandler 0278                                 _USBMSDInHandle 00DB  
                     __end_of__rtcc_verify_bcd 3140                                     _ADCON0bits 000FC2  
                                   _ADCON1bits 000FC1                         __display_time@sethours 01B0  
                        ?_USBTransferOnePacket 0060                         __display_time@setmonth 01A6  
                            __read_root@offset 008C                         __display_time@pressday 0160  
                  __display_charger@supply_off 014D                    __size_of_rtcc_decrement_day 0026  
                            _outputCapacitySum 027E                 __size_of_rtcc_get_year_decimal 0010  
          _ExternalFlash_MediaDetect$intlevel0 3EAE                              _SYS_InterruptHigh A008  
                     ??_rtcc_get_month_decimal 0063                  __end_of_rtcc_get_year_decimal 3DAA  
                           __end_of__read_root 2824                          ?__parse_command_short 002E  
                              ?__buck_pin_init 002E                           ?__rtcc_decrement_bcd 0064  
                    i2c_display_cursor@address 006F                               __CFG_WPFP$PAGE_1 000000  
                               ?_fat_find_file 0087                   i2c_eeprom_read@slave_address 0078  
                                 ??_flash_init 0078                                   _RemoteWakeup 0028  
            __end_of_ExternalFlash_MediaDetect 3EB2                             __get_dateTime@year 006E  
                                     i2_memcpy 2880                                       i2_memset 37CA  
                             __get_temperature 371A              MSDCheckForErrorCases@DeviceNoData 006F  
                   ??_rtcc_get_seconds_decimal 0063                                    __write_root 276C  
                           ?_SYS_InterruptHigh 002E                         __end_of__display_clear 3066  
                       __size_of_rtcc_get_year 000E                      __size_of_rtcc_correct_day 0020  
                      __end_of_USBStallHandler 3250                         __end_of__display_inout DF68  
                            ?_flash_page_write 007F              __end_of_log_get_number_of_samples 3E8A  
                               __i2c_read@data 0065                ??__flash_write_page_from_buffer 0076  
                      __size_of_display_update 007A                                 ??__display_usb 0060  
                               __i2c_read@cntr 0070                              ___lmul@multiplier 0060  
                                  _INTCON2bits 000FF1                                    _INTCON3bits 000FF0  
                                    copy_data0 0B2E                                      copy_data1 0B4E  
                                    copy_data2 0B6E                   __size_of__system_timer0_init 0040  
                               ?_ui_get_status 002E                         ??__system_encoder_init 0060  
                  ??_USBCtrlEPAllowStatusStage 002E                           ?_rtcc_decrement_year 002E  
                 fat_create_file@cluster_count 00A9                    __end_of_USBStdSetCfgHandler 0632  
                        ?__display_temperature 002E                             ??_flash_page_write 0083  
                                 ??__write_fat 008C                      __end_of__get_output_power 1AA8  
                  ?_schedule_eeprom_write_task 002E                                       _i2c_init 3E5C  
                                 _lowPowerTime 02AE                            ??_SYS_InterruptHigh 004D  
                   __size_of_rtcc_write_eeprom 004A                                 _rtcc_set_hours 3CA6  
                               _rtcc_set_month 3C76     __i2c_eeprom_load_default_calibration@index 0062  
                       __size_of_buck_get_mode 0004                                    ??__i2c_read 0068  
                  __end_of__rtcc_increment_bcd 3692             system_calculate_output_current@tmp 0070  
                                  ??__i2c_send 0060                                   _MSDReadState 01F9  
                           __write_calibration 1536                                    ??__i2c_stop 0060  
           buck_remote_set_dutycycle@dutycycle 0060                             __write_fat@cluster 0088  
                           __end_of_device_dsc A42A             adc_calculate_temperature@adc_value 006C  
                           __get_checksum@cntr 0065                         __end_of_rtcc_get_hours 3E4E  
                     MSDErrorHandler@ErrorCase 0068                         __end_of_rtcc_get_month 3E32  
                        ?_rtcc_get_day_decimal 002E                                       __i2c_get 3E94  
                            i2c_adc_start@gain 006B                        ?_USBCtrlTrfSetupHandler 002E  
                              _fat_create_file E316                         __size_of_rtcc_set_year 0018  
                    ??__fill_buffer_get_status 0061                                     _ANCON0bits 000F48  
                   __end_of_buck_remote_set_on 3D06                                     _ANCON1bits 000F49  
                      USBStdGetStatusHandler@p 002F                                       __Hrparam 0000  
                          __display_itoa@value 0078                          __display_charger@cntr 018E  
                 __size_of_rtcc_increment_year 0022                                      memcpy@tmp 0066  
                                     __Lrparam 0000             __size_of_adc_calculate_temperature 00F6  
                       USBTransferOnePacket@ep 0068                         _rtcc_get_hours_decimal 3D8A  
                               _buck_dutycycle 00E4                            ?__write_calibration 002E  
                          rtcc_correct_day@day 0064                                       _SetupPkt 000D30  
                          rtcc_correct_day@max 0065                             __end_of_flash_init 3184  
                        ??__display_efficiency 0090                                 _TransferLength 00D9  
                    __get_empty_cluster@offset 008B                     __end_of_USBCheckMSDRequest 0E26  
                          __display_inout@cntr 00C5                                     ?_rtcc_init 002E  
                        ?_USBConfigureEndpoint 002E                           __number_of_days@year 0061  
                             __size_of___aldiv 00CE                       _ExternalFlash_SectorRead 34D8  
                    display_get_character@line 0063                         __size_of_flash_is_busy 0024  
                            ??_USBDeviceAttach 0060                                 __i2c_wait_idle 2520  
                              _MSDWriteHandler CA8A                               __size_of___awdiv 0086  
                         __display_outputs@low 008A                               __size_of___lldiv 0084  
                                     ___altoft 1F1A                               __size_of___fttol 00F8  
                             __size_of___lwdiv 0054                               __size_of___lwmod 0044  
    ExternalFlash_SectorWrite@allowWriteToZero 008C                                       ___ftpack 1050  
         __size_ofi2_ExternalFlash_MediaDetect 0004                                    _MSDCBWValid 01F5  
                    __end_of_SYS_InterruptHigh A086                                 _buck_remote_on 00E3  
                            ?_USBStallEndpoint 0060                     i2c_display_write_fixed@pos 0068  
              i2c_adc_start@configuration_byte 006D                            __display_time@F7200 A2EE  
                          __display_time@F7202 A2E4                            __display_time@F7210 A2B7  
                          __display_time@F7204 A2FF                            __display_time@F7212 A143  
                          __display_time@F7220 A12F                                       _adc_init 3B74  
                          __display_time@F7206 A2DA                            __display_time@F7214 A1B4  
                          __display_time@F7222 A11B                            __display_time@F7208 A2C3  
                          __display_time@F7216 A24B                            __display_time@F7224 A23B  
                                     _adc_read 1896                            __display_time@F7218 A1A2  
                          __display_time@F7198 A277                    __size_of__get_empty_cluster 007A  
                           __end_of__write_fat 3292                           __size_of__i2c_open_1 0018  
                        ??__rtcc_decrement_bcd 0066                             ??_USBStallEndpoint 0061  
              __flash_copy_page_to_buffer@page 0073             __end_of_ExternalFlash_CapacityRead 3D46  
                   _ExternalFlash_CapacityRead 3D32                        ??_MSDTransferTerminated 003B  
                schedule_eeprom_write_task@idx 0062                      __size_of_rtcc_read_eeprom 0142  
                      __size_of_USBDeviceTasks 0144                                ___lwdiv@divisor 0062  
              ?_system_calculate_input_current 002E               ??_system_calculate_input_current 006C  
                        __end_of__get_dateTime E8EE                           ??__write_calibration 0085  
                        __end_of__get_checksum 3438                      _buck_remote_set_dutycycle 397C  
                              ?__display_clear 002E                       __end_of__flash_spi_tx_rx 12DE  
                              ___lwdiv@counter 0064                       __end_of__flash_spi_tx_tx 1780  
            __buck_operate_local@tmp_dutycycle 007C                                       __ptext10 39A0  
                                     __ptext11 39C2                                       __ptext20 3AB0  
                                     __ptext12 39E4                                       __ptext21 3AD2  
                                     __ptext13 3A06                                       __ptext30 30FA  
                                     __ptext22 3932                                       __ptext14 3A28  
                                     __ptext31 0632                                       __ptext23 3692  
                                     __ptext15 390C                                       __ptext40 3DFA  
                                     __ptext32 3E5C                                       __ptext24 F9F6  
                                     __ptext16 3664                                       __ptext41 3C2E  
                                     __ptext33 3C16                                       __ptext25 3D46  
                                     __ptext17 3A4A                                       __ptext50 200E  
                                     __ptext42 35A6                                       __ptext34 F288  
                                     __ptext26 3BC8                                       __ptext18 3A6C  
                              _inputCurrentSum 0296                                       __ptext51 BA44  
                                     __ptext43 3B74                                       __ptext35 2CFE  
                                     __ptext27 EB76                                       __ptext19 3A8E  
                                     __ptext60 37F6                                       __ptext52 371A  
                                     __ptext44 3292                                       __ptext36 14A2  
                                     __ptext28 3B16                                       __ptext61 D738  
                                     __ptext53 1810                                       __ptext45 32D2  
                                     __ptext37 B2EE                                       __ptext29 23EC  
                                     __ptext70 2454                                       __ptext62 276C  
                                     __ptext54 E7A8                                       __ptext46 0392  
                                     __ptext38 3140                                       __ptext71 3D9A  
                                     __ptext63 3250                                       __ptext55 3402  
                                     __ptext47 F040                                       __ptext39 21D6  
                                     __ptext80 CD66                                       __ptext72 3DAA  
                                     __ptext64 2244                                       __ptext56 E316  
                                     __ptext48 0474                                       __ptext81 3BE2  
                                     __ptext73 3DBA                                       __ptext65 2938  
                                     __ptext57 165E                                       __ptext49 F164  
                                     __ptext90 2D50                                       __ptext82 3DDA  
                                     __ptext74 3DCA                                       __ptext66 3438  
                                     __ptext58 0A52                                       __ptext91 3E8A  
                                     __ptext83 3B56                                       __ptext75 1D2E  
                                     __ptext67 22B0                                       __ptext59 1C2E  
                                     __ptext92 3E94                                       __ptext84 1A26  
                                     __ptext76 27C8                                       __ptext68 3D7A  
                                     __ptext93 3E9E                                       __ptext85 1AA8  
                                     __ptext77 2FD2                                       __ptext69 3D8A  
                                     __ptext94 1EA0                                       __ptext86 20F6  
                                     __ptext78 1E26                                       __ptext95 2992  
                                     __ptext87 3746                                       __ptext79 3E80  
                                     __ptext96 3820                                       __ptext88 1536  
                                     __ptext97 3772                                       __ptext89 33C8  
                                     __ptext98 1B2A                                       __ptext99 E4CC  
                             __display_charger C782            __size_of__parse_command_calibration 012A  
                             __size_of_ui_init 0012                                   _SSP1CON1bits 000FC6  
                              ?__display_inout 002E                                   _SSP1CON2bits 000FC5  
                                     _filename 02EB                  __buck_start@startup_dutycycle 0074  
                 __flash_set_page_size@command 0073                          ??_rtcc_decrement_year 0068  
                          __display_time@hours 01CF                         __end_of_rtcc_set_hours 3CBE  
                                 _SSP2CON1bits 000F72                               __size_of_tmr_isr 0096  
         __end_of_MSDProcessCommandMediaAbsent 25E6          __size_of_MSDProcessCommandMediaAbsent 0062  
                 _MSDProcessCommandMediaAbsent 2584                                    ??__get_date 0066  
                        __flash_wakeup@command 0068                            __display_time@month 01CD  
                       __end_of_rtcc_set_month 3C8E               __size_of__buck_initial_dutycycle 00BA  
                                  ??__get_time 0066      buck_remote_change_dutycycle@new_dutycycle 0061  
                             __size_of_strncmp 0080                                   ?__buck_start 0072  
                          __parse_command_long 01C2                            __display_usb@header 0060  
                   ?_ExternalFlash_SectorWrite 0084                ?_system_calculate_input_voltage 002E  
             ??_system_calculate_input_voltage 006C                 ExternalFlash_SectorRead@config 008B  
               ExternalFlash_SectorRead@buffer 0091              i2c_eeprom_read_calibration@buffer 007B  
                        __end_of__buck_prepare 2520             __end_of__flash_copy_page_to_buffer 2992  
                   __flash_copy_page_to_buffer 2938                        __size_of_ResetSenseData 0062  
             __end_of_APP_DeviceCustomHIDTasks C128                   __end_of_i2c_digipot_reset_on 38C0  
                            ??_i2c_eeprom_read 0076                          __end_of__flash_wakeup 2BAA  
               __end_of_USBCtrlTrfSetupHandler 1810                                  __size_of_main 031A  
                            ?_USBCtrlEPService 002E                                  __size_of_itoa 0044  
                        __end_of__flash_spi_tx 2AFA                                       _inq_resp A3BD  
                                __size_of_utoa 00AA                               __display_usb@low 0085  
                                  ??__read_fat 0089                    __end_of_flash_partial_write 22B0  
                                   strncmp@len 0064                            __display_usb@usb_on 0095  
                              ?_rtcc_get_hours 002E             __buck_set_sync_async@new_dutycycle 0062  
                              ?_rtcc_get_month 002E                     __display_time@pressminutes 0114  
                   __display_time@pressseconds 0128                             ??_USBCtrlEPService 004B  
                             __display_outputs D95A                        ??_system_encoder_enable 0060  
              __size_of_system_encoder_disable 0006                            _USBCtrlTrfInHandler 0E26  
           _MSDProcessCommandMediaPresent$2715 009B               __get_empty_cluster@first_cluster 0087  
                  __end_of__buck_operate_local AF24           __parse_command_calibration@parameter 0069  
                                _rtcc_get_year 3E08                          _calibrationParameters 0300  
              __size_of_rtcc_decrement_minutes 0022                __size_of_rtcc_decrement_seconds 0022  
                       __end_of__i2c_wait_idle 2584                           __rtcc_bcd_to_decimal 3B56  
                                     _outPipes 0001                     ?__fill_buffer_get_display1 002E  
                   ?__fill_buffer_get_display2 002E                           _USBCtrlTrfOutHandler 28DC  
                                     int$flags 005B              __end_of_adc_calculate_temperature FFE4  
                            ??__number_of_days 0060                      _USBCtrlEPAllowStatusStage 0CA6  
                 __end_of_system_output_toggle 390C                           ?__parse_command_long 0063  
                            _system_output_off 2BAA                                   _SSP1STATbits 000FC7  
                                  ??_buck_init 0060                              __get_dateTime@day 0070  
                       ??_USBTransferOnePacket 0064                     i2c_digipot_backlight@level 006A  
                        __size_of_rtcc_get_day 000E                               ?_flash_page_read 0087  
                                 _SSP2STATbits 000F73                                  _buck_get_mode 3EE8  
                       __size_of_i2c_adc_start 003A                          __end_of__display_itoa DD82  
                        __end_of__display_time AAA6                               i2_ResetSenseData 26AA  
               ?_APP_DeviceCustomHIDInitialize 002E                                ??_fat_find_file 008B  
                           ?_system_output_off 002E                         ??__parse_command_short 008B  
               __end_of__display_charger@F7261 A316                 __end_of__display_charger@F7263 A2FF  
               __end_of__display_charger@F7271 A107                 __end_of__display_charger@F7255 A0B5  
               __end_of__display_charger@F7265 A2B7                 __end_of__display_charger@F7257 A1A2  
               __end_of__display_charger@F7267 A20B                 __end_of__display_charger@F7259 A190  
               __end_of__display_charger@F7269 A0A0                               system_init@F7100 03F6  
                             system_init@F7102 02E1                               system_init@F7104 0400  
        MSDProcessCommandMediaPresent@capacity 00A2                  display_get_character@position 0060  
                     __size_of_MSDErrorHandler 011C                               system_init@F7096 02D8  
                             system_init@F7098 02E5                              rtcc_set_year@year 0060  
                    _USBDeferStatusStagePacket 0023                __end_of__fill_buffer_get_status D738  
                                _rtcc_set_year 3C46                   __end_of_rtcc_increment_hours 3A4A  
                 __end_of_rtcc_increment_month 3A06                                    _OSCTUNEbits 000F9B  
                                   _INTCONbits 000FF2                __size_of_rtcc_get_month_decimal 0010  
                        __size_of_rtcc_set_day 0018                              __write_fat@offset 008E  
                         ?_USBCtrlTrfInHandler 002E                                       memcpy@d1 0060  
                                     memcpy@s1 0062                           i2c_eeprom_write@data 006C  
                             _log_collect_data CD66                           i2c_eeprom_write@cntr 0084  
                USBCtrlTrfTxService@byteToSend 002E                    __size_of_log_generate_entry 0380  
              i2c_digipot_backlight@data_array 006B                       __number_of_days@bcd_year 0062  
                                     itoa@base 0074                    __end_of__buck_set_dutycycle 2384  
                              ??_ui_get_status 0060                                       memset@p1 0060  
                          ??_system_output_off 0060           __end_of_MSDComputeDeviceInAndResidue 1050  
        __size_of_MSDComputeDeviceInAndResidue 00B2                   _MSDComputeDeviceInAndResidue 0F9E  
                             ?_USBStallHandler 002E                       USBStdFeatureReqHandler@p 0049  
                   ?__get_available_root_entry 002E                   __end_of__buck_set_sync_async 20F6  
                __size_of__flash_set_page_size 006E                         ??__display_temperature 0090  
                         __buck_operate_remote FBFC                                  _flash_is_busy 3958  
                             __i2c_acknowledge 3E9E                                ?_rtcc_set_hours 002E  
                      __end_of_fat_create_file E4CC                                ?_rtcc_set_month 002E  
                                     intlevel2 0000                       __flash_get_status@status 006F  
              __flash_spi_tx_rx@command_length 0062                   adc_calculate_temperature@tmp 0075  
                   __size_of__get_output_power 0082                    __size_of__root_is_available 007C  
                       __size_of_USBDeviceInit 014A                  ?_MSDProcessCommandMediaAbsent 002E  
      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 19A2       __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
            ??_USER_USB_CALLBACK_EVENT_HANDLER 0043               ?_USER_USB_CALLBACK_EVENT_HANDLER 003D  
              _USER_USB_CALLBACK_EVENT_HANDLER 191C                    rtcc_read_eeprom@error_found 008B  
                             ___lwmod@dividend 0060                   i2USBTransferOnePacket@handle 0037  
                      i2c_adc_start@resolution 006A              __end_of_ExternalFlash_SectorWrite 34D8  
                             ___lldiv@dividend 0060          __end_of__flash_write_page_from_buffer 2AA0  
       __size_of__flash_write_page_from_buffer 005A                  __flash_write_page_from_buffer 2A46  
                     __end_of__get_input_power 1B2A                         ??_rtcc_get_day_decimal 0063  
       i2SYSTEM_Initialize@pll_startup_counter 002E           SYSTEM_Initialize@pll_startup_counter 0061  
                        __update_modified_time 3438                                _display_content 0354  
                  ??_buck_remote_get_dutycycle 0060                     __end_of_flash_partial_read 200E  
                      __end_of_MSDWriteHandler CD66                                      strncmp@s1 0060  
                                    strncmp@s2 0062                                 ?_rtcc_get_year 002E  
                      __size_of_MSDReadHandler 01E6                                   _rtcc_get_day 3E4E  
                   i2USBTransferOnePacket@data 002F                                  ??_system_init 0093  
                        ?__rtcc_bcd_to_decimal 002E                               _rtcc_get_minutes 3E32  
                             _rtcc_get_seconds 3E16                    __end_of_system_output_is_on 3BFC  
                       ??_USBConfigureEndpoint 002F                                ?__i2c_wait_idle 002E  
                        ?_USBCtrlTrfOutHandler 002E                                _display_prepare 1B2A  
             __end_of_rtcc_get_minutes_decimal 3D8A                       ??__flash_write_to_buffer 007A  
                    __end_of_system_output_off 2C00                      __size_of_rtcc_set_minutes 0018  
                     ?_APP_DeviceMSDInitialize 002E                      __size_of_rtcc_set_seconds 0018  
                    __display_efficiency@F7280 A25B                      __display_efficiency@F7276 A16A  
                    __display_efficiency@F7278 A157                            _USBCtrlTrfRxService F5D4  
                                  ??_rtcc_init 0093                             _USBWakeFromSuspend 346E  
                        ??__parse_command_long 0064                           __end_of__display_usb E65E  
                            ?_system_output_on 002E                                   ?__ui_encoder 002E  
                                 _rtcc_set_day 3CBE                             _i2c_display_cursor 3820  
                      _USBStdFeatureReqHandler D004                        _temperatureExternal1Sum 0276  
                      _temperatureExternal2Sum 0272                      rtcc_increment_hours@hours 0068  
                               ?_buck_get_mode 002E                            i2_SYSTEM_Initialize 2CAA  
                          _USBCtrlTrfTxService 08B4                     __size_of_SYS_InterruptHigh 007E  
        __flash_write_page_from_buffer@command 0079                        __rtcc_increment_bcd@max 0065  
                           ??_system_output_on 0060                        __rtcc_increment_bcd@min 0064  
                                     utoa@base 006B                                     _RTCCFGbits 000F3F  
                              _gblMediaPresent 02B2                    __end_of__rtcc_write_disable 3D32  
                               ?_rtcc_set_year 002E                                _inputVoltageSum 029A  
                        _i2c_digipot_backlight 36EE            ExternalFlash_SectorRead@sector_addr 008D  
                          ?_USBWakeFromSuspend 002E                                     _PPSCONbits 000EBF  
                             ___lldiv@quotient 0068                                ___lwmod@divisor 0062  
                  ??_ExternalFlash_MediaDetect 0062                            ?_i2c_display_cursor 006D  
                        ??_USBCtrlTrfInHandler 002F                                       strlen@cp 0064  
                       _system_encoder_disable 3ECC   __end_of__i2c_eeprom_load_default_calibration B6B0  
__size_of__i2c_eeprom_load_default_calibration 03C2         ??__i2c_eeprom_load_default_calibration 0063  
        ?__i2c_eeprom_load_default_calibration 0060           __i2c_eeprom_load_default_calibration B2EE  
                 __flash_spi_tx_tx@data_length 0066                          _USBAlternateInterface 01FC  
                              ___lwmod@counter 0064                      __display_efficiency@panel 00C9  
             __end_of_rtcc_get_seconds_decimal 3DEA                  __size_of__i2c_not_acknowledge 000A  
                      _buck_remote_synchronous 00E2                                    _ptrNextData 01EB  
                        __end_of_log_start_new 070C                                   ___aldiv@sign 0069  
                       _rtcc_decrement_minutes 3AB0                         _rtcc_decrement_seconds 3A6C  
                    i2USBTransferOnePacket@dir 002E                      i2USBTransferOnePacket@len 0031  
                          USBEnableEndpoint@ep 0039                                _endpoint_number 0026  
                             _rtcc_correct_day 3B16                                 _display_update 1EA0  
                        ?__buck_operate_remote 002E                                 ?_flash_is_busy 002E  
                         ?_USBCtrlTrfRxService 002E                          _MSDCheckForErrorCases FCFA  
                         __get_input_power@pwr 0070                     __end_of__rtcc_write_enable 3D1C  
                ?_MSDComputeDeviceInAndResidue 0060               __end_of__ic2_display_set_address 379E  
          __end_of_i2c_eeprom_read_calibration F3A6                    _i2c_eeprom_read_calibration F288  
                         ?i2_SYSTEM_Initialize 002E                       ?_USBCtrlEPAllowDataStage 002E  
                               _MSBBufferIndex 02B4                       __flash_spi_tx_rx@command 0060  
                         ?_USBCtrlTrfTxService 002E                                  _i2c_adc_start 33C8  
                    flash_partial_read@address 0083             __end_of__parse_command_calibration F040  
                   __parse_command_calibration EF16                                     _USBMSDInit F4C2  
                                ?_buck_operate 002E                   _USBStatusStageTimeoutCounter 0024  
              ??_ExternalFlash_MediaInitialize 0062                           ??_USBWakeFromSuspend 0045  
                   USBTransferOnePacket@handle 0069                         _rtcc_get_month_decimal 3DAA  
                         ??_i2c_display_cursor 006E                      flash_partial_read@command 007F  
                    rtcc_increment_month@month 0068                       ??_fat_get_empty_clusters 0089  
                    __size_of_i2c_eeprom_tasks 0070                                     _USB_CD_Ptr A319  
                     __end_of__get_temperature 3746                       __flash_spi_tx_tx@command 0060  
                    __size_of_i2c_eeprom_write 0082                                    _power_state 00DF  
                                  _USBInHandle 00D7                       _APP_DeviceCustomHIDTasks BDC4  
